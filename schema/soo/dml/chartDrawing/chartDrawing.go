//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package chartDrawing

import (
	_c "encoding/xml"
	_d "fmt"
	_dd "github.com/sanhuanshisanshao/unioffice"
	_e "github.com/sanhuanshisanshao/unioffice/common/logger"
	_cf "github.com/sanhuanshisanshao/unioffice/schema/soo/dml"
	_f "strconv"
)

// Validate validates the CT_GraphicFrame and its children
func (_ebc *CT_GraphicFrame) Validate() error {
	return _ebc.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065")
}
func NewCT_GroupShapeNonVisual() *CT_GroupShapeNonVisual {
	_ggaf := &CT_GroupShapeNonVisual{}
	_ggaf.CNvPr = _cf.NewCT_NonVisualDrawingProps()
	_ggaf.CNvGrpSpPr = _cf.NewCT_NonVisualGroupDrawingShapeProps()
	return _ggaf
}
func NewEG_ObjectChoicesChoice() *EG_ObjectChoicesChoice {
	_bbfc := &EG_ObjectChoicesChoice{}
	return _bbfc
}

type CT_Shape struct {
	MacroAttr      *string
	TextlinkAttr   *string
	FLocksTextAttr *bool
	FPublishedAttr *bool
	NvSpPr         *CT_ShapeNonVisual
	SpPr           *_cf.CT_ShapeProperties
	Style          *_cf.CT_ShapeStyle
	TxBody         *_cf.CT_TextBody
}

func (_dg *CT_Connector) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	if _dg.MacroAttr != nil {
		start.Attr = append(start.Attr, _c.Attr{Name: _c.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _d.Sprintf("\u0025\u0076", *_dg.MacroAttr)})
	}
	if _dg.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _c.Attr{Name: _c.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _d.Sprintf("\u0025\u0064", _gfcg(*_dg.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_ag := _c.StartElement{Name: _c.Name{Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}}
	e.EncodeElement(_dg.NvCxnSpPr, _ag)
	_ce := _c.StartElement{Name: _c.Name{Local: "\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_dg.SpPr, _ce)
	if _dg.Style != nil {
		_ebf := _c.StartElement{Name: _c.Name{Local: "\u0073\u0074\u0079l\u0065"}}
		e.EncodeElement(_dg.Style, _ebf)
	}
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}
func NewCT_GroupShapeChoice() *CT_GroupShapeChoice { _ddg := &CT_GroupShapeChoice{}; return _ddg }

type CT_GraphicFrame struct {
	MacroAttr        *string
	FPublishedAttr   *bool
	NvGraphicFramePr *CT_GraphicFrameNonVisual
	Xfrm             *_cf.CT_Transform2D
	Graphic          *_cf.Graphic
}

func NewCT_Drawing() *CT_Drawing { _dee := &CT_Drawing{}; return _dee }

type CT_AbsSizeAnchor struct {
	From   *CT_Marker
	Ext    *_cf.CT_PositiveSize2D
	Choice *EG_ObjectChoicesChoice
}

// ValidateWithPath validates the CT_ConnectorNonVisual and its children, prefixing error messages with path
func (_ae *CT_ConnectorNonVisual) ValidateWithPath(path string) error {
	if _bc := _ae.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _bc != nil {
		return _bc
	}
	if _fea := _ae.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _fea != nil {
		return _fea
	}
	return nil
}
func (_aabc *CT_PictureNonVisual) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_aabc.CNvPr = _cf.NewCT_NonVisualDrawingProps()
	_aabc.CNvPicPr = _cf.NewCT_NonVisualPictureProperties()
_dfb:
	for {
		_fade, _bdf := d.Token()
		if _bdf != nil {
			return _bdf
		}
		switch _cdd := _fade.(type) {
		case _c.StartElement:
			switch _cdd.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _deae := d.DecodeElement(_aabc.CNvPr, &_cdd); _deae != nil {
					return _deae
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _eee := d.DecodeElement(_aabc.CNvPicPr, &_cdd); _eee != nil {
					return _eee
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _cdd.Name)
				if _eeea := d.Skip(); _eeea != nil {
					return _eeea
				}
			}
		case _c.EndElement:
			break _dfb
		case _c.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_bbb *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _ggg := _bbb.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _ggg != nil {
		return _ggg
	}
	if _gbe := _bbb.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _gbe != nil {
		return _gbe
	}
	return nil
}

// ValidateWithPath validates the CT_RelSizeAnchor and its children, prefixing error messages with path
func (_gbf *CT_RelSizeAnchor) ValidateWithPath(path string) error {
	if _gad := _gbf.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _gad != nil {
		return _gad
	}
	if _gfcd := _gbf.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _gfcd != nil {
		return _gfcd
	}
	if _gbf.Choice != nil {
		if _dbee := _gbf.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _dbee != nil {
			return _dbee
		}
	}
	return nil
}
func NewCT_Picture() *CT_Picture {
	_gca := &CT_Picture{}
	_gca.NvPicPr = NewCT_PictureNonVisual()
	_gca.BlipFill = _cf.NewCT_BlipFillProperties()
	_gca.SpPr = _cf.NewCT_ShapeProperties()
	return _gca
}

// ValidateWithPath validates the CT_ShapeNonVisual and its children, prefixing error messages with path
func (_fef *CT_ShapeNonVisual) ValidateWithPath(path string) error {
	if _adde := _fef.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _adde != nil {
		return _adde
	}
	if _bbe := _fef.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _bbe != nil {
		return _bbe
	}
	return nil
}

type CT_Connector struct {
	MacroAttr      *string
	FPublishedAttr *bool
	NvCxnSpPr      *CT_ConnectorNonVisual
	SpPr           *_cf.CT_ShapeProperties
	Style          *_cf.CT_ShapeStyle
}
type CT_Marker struct {
	X float64
	Y float64
}

// Validate validates the CT_Connector and its children
func (_ee *CT_Connector) Validate() error {
	return _ee.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}
func NewCT_Marker() *CT_Marker { _cgb := &CT_Marker{}; _cgb.X = 0.0; _cgb.Y = 0.0; return _cgb }

// ValidateWithPath validates the CT_GraphicFrameNonVisual and its children, prefixing error messages with path
func (_beb *CT_GraphicFrameNonVisual) ValidateWithPath(path string) error {
	if _dccg := _beb.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _dccg != nil {
		return _dccg
	}
	if _daa := _beb.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _daa != nil {
		return _daa
	}
	return nil
}

// Validate validates the CT_GroupShapeChoice and its children
func (_eca *CT_GroupShapeChoice) Validate() error {
	return _eca.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}
func NewCT_Shape() *CT_Shape {
	_abef := &CT_Shape{}
	_abef.NvSpPr = NewCT_ShapeNonVisual()
	_abef.SpPr = _cf.NewCT_ShapeProperties()
	return _abef
}
func (_eg *CT_GraphicFrame) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_eg.NvGraphicFramePr = NewCT_GraphicFrameNonVisual()
	_eg.Xfrm = _cf.NewCT_Transform2D()
	_eg.Graphic = _cf.NewGraphic()
	for _, _gac := range start.Attr {
		if _gac.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_bda, _cga := _gac.Value, error(nil)
			if _cga != nil {
				return _cga
			}
			_eg.MacroAttr = &_bda
			continue
		}
		if _gac.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_bba, _ebfc := _f.ParseBool(_gac.Value)
			if _ebfc != nil {
				return _ebfc
			}
			_eg.FPublishedAttr = &_bba
			continue
		}
	}
_ef:
	for {
		_ggc, _faa := d.Token()
		if _faa != nil {
			return _faa
		}
		switch _aee := _ggc.(type) {
		case _c.StartElement:
			switch _aee.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _cda := d.DecodeElement(_eg.NvGraphicFramePr, &_aee); _cda != nil {
					return _cda
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0078\u0066\u0072\u006d"}:
				if _dfc := d.DecodeElement(_eg.Xfrm, &_aee); _dfc != nil {
					return _dfc
				}
			case _c.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _c.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _dgg := d.DecodeElement(_eg.Graphic, &_aee); _dgg != nil {
					return _dgg
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0020\u0025\u0076", _aee.Name)
				if _gfa := d.Skip(); _gfa != nil {
					return _gfa
				}
			}
		case _c.EndElement:
			break _ef
		case _c.CharData:
		}
	}
	return nil
}
func _gfcg(_gaga bool) uint8 {
	if _gaga {
		return 1
	}
	return 0
}
func NewEG_Anchor() *EG_Anchor { _fdf := &EG_Anchor{}; return _fdf }
func (_dgb *EG_ObjectChoices) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
_bad:
	for {
		_fba, _begf := d.Token()
		if _begf != nil {
			return _begf
		}
		switch _abba := _fba.(type) {
		case _c.StartElement:
			switch _abba.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_dgb.Choice = NewEG_ObjectChoicesChoice()
				if _acfb := d.DecodeElement(&_dgb.Choice.Sp, &_abba); _acfb != nil {
					return _acfb
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_dgb.Choice = NewEG_ObjectChoicesChoice()
				if _gecf := d.DecodeElement(&_dgb.Choice.GrpSp, &_abba); _gecf != nil {
					return _gecf
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_dgb.Choice = NewEG_ObjectChoicesChoice()
				if _bbdc := d.DecodeElement(&_dgb.Choice.GraphicFrame, &_abba); _bbdc != nil {
					return _bbdc
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_dgb.Choice = NewEG_ObjectChoicesChoice()
				if _ebb := d.DecodeElement(&_dgb.Choice.CxnSp, &_abba); _ebb != nil {
					return _ebb
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_dgb.Choice = NewEG_ObjectChoicesChoice()
				if _gef := d.DecodeElement(&_dgb.Choice.Pic, &_abba); _gef != nil {
					return _gef
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0020\u0025v", _abba.Name)
				if _ccgd := d.Skip(); _ccgd != nil {
					return _ccgd
				}
			}
		case _c.EndElement:
			break _bad
		case _c.CharData:
		}
	}
	return nil
}
func (_egfb *CT_GroupShapeNonVisual) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	e.EncodeToken(start)
	_acd := _c.StartElement{Name: _c.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_egfb.CNvPr, _acd)
	_ecdd := _c.StartElement{Name: _c.Name{Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_egfb.CNvGrpSpPr, _ecdd)
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}
func (_fca *CT_Marker) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	e.EncodeToken(start)
	_gfaa := _c.StartElement{Name: _c.Name{Local: "\u0078"}}
	e.EncodeElement(_fca.X, _gfaa)
	_dedf := _c.StartElement{Name: _c.Name{Local: "\u0079"}}
	e.EncodeElement(_fca.Y, _dedf)
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupShapeChoice and its children, prefixing error messages with path
func (_fg *CT_GroupShapeChoice) ValidateWithPath(path string) error {
	for _afc, _ffa := range _fg.Sp {
		if _caa := _ffa.ValidateWithPath(_d.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _afc)); _caa != nil {
			return _caa
		}
	}
	for _ebcg, _bbg := range _fg.GrpSp {
		if _edb := _bbg.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _ebcg)); _edb != nil {
			return _edb
		}
	}
	for _feec, _dbd := range _fg.GraphicFrame {
		if _abe := _dbd.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _feec)); _abe != nil {
			return _abe
		}
	}
	for _cgea, _bafb := range _fg.CxnSp {
		if _fcb := _bafb.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _cgea)); _fcb != nil {
			return _fcb
		}
	}
	for _ege, _bcd := range _fg.Pic {
		if _dac := _bcd.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _ege)); _dac != nil {
			return _dac
		}
	}
	return nil
}

// Validate validates the CT_GroupShapeNonVisual and its children
func (_cbgc *CT_GroupShapeNonVisual) Validate() error {
	return _cbgc.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c")
}

// Validate validates the CT_Picture and its children
func (_fde *CT_Picture) Validate() error {
	return _fde.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}
func (_agg *EG_ObjectChoicesChoice) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	if _agg.Sp != nil {
		_edcb := _c.StartElement{Name: _c.Name{Local: "\u0073\u0070"}}
		e.EncodeElement(_agg.Sp, _edcb)
	}
	if _agg.GrpSp != nil {
		_fabe := _c.StartElement{Name: _c.Name{Local: "\u0067\u0072\u0070S\u0070"}}
		e.EncodeElement(_agg.GrpSp, _fabe)
	}
	if _agg.GraphicFrame != nil {
		_caaf := _c.StartElement{Name: _c.Name{Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}}
		e.EncodeElement(_agg.GraphicFrame, _caaf)
	}
	if _agg.CxnSp != nil {
		_ebfd := _c.StartElement{Name: _c.Name{Local: "\u0063\u0078\u006eS\u0070"}}
		e.EncodeElement(_agg.CxnSp, _ebfd)
	}
	if _agg.Pic != nil {
		_bccd := _c.StartElement{Name: _c.Name{Local: "\u0070\u0069\u0063"}}
		e.EncodeElement(_agg.Pic, _bccd)
	}
	return nil
}

// ValidateWithPath validates the CT_Marker and its children, prefixing error messages with path
func (_beeg *CT_Marker) ValidateWithPath(path string) error {
	if _beeg.X < 0.0 {
		return _d.Errorf("\u0025\u0073\u002fm\u002e\u0058\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u002e\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _beeg.X)
	}
	if _beeg.X > 1.0 {
		return _d.Errorf("\u0025\u0073\u002fm\u002e\u0058\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0031\u002e\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _beeg.X)
	}
	if _beeg.Y < 0.0 {
		return _d.Errorf("\u0025\u0073\u002fm\u002e\u0059\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u002e\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _beeg.Y)
	}
	if _beeg.Y > 1.0 {
		return _d.Errorf("\u0025\u0073\u002fm\u002e\u0059\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0031\u002e\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _beeg.Y)
	}
	return nil
}

type CT_Drawing struct{ EG_Anchor []*EG_Anchor }

// Validate validates the CT_PictureNonVisual and its children
func (_cgg *CT_PictureNonVisual) Validate() error {
	return _cgg.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

// ValidateWithPath validates the CT_Shape and its children, prefixing error messages with path
func (_afde *CT_Shape) ValidateWithPath(path string) error {
	if _degg := _afde.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _degg != nil {
		return _degg
	}
	if _dad := _afde.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _dad != nil {
		return _dad
	}
	if _afde.Style != nil {
		if _degga := _afde.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _degga != nil {
			return _degga
		}
	}
	if _afde.TxBody != nil {
		if _bdbg := _afde.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _bdbg != nil {
			return _bdbg
		}
	}
	return nil
}
func NewCT_GroupShape() *CT_GroupShape {
	_abf := &CT_GroupShape{}
	_abf.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_abf.GrpSpPr = _cf.NewCT_GroupShapeProperties()
	return _abf
}

// ValidateWithPath validates the EG_ObjectChoicesChoice and its children, prefixing error messages with path
func (_acae *EG_ObjectChoicesChoice) ValidateWithPath(path string) error {
	if _acae.Sp != nil {
		if _gbb := _acae.Sp.ValidateWithPath(path + "\u002f\u0053\u0070"); _gbb != nil {
			return _gbb
		}
	}
	if _acae.GrpSp != nil {
		if _daec := _acae.GrpSp.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070"); _daec != nil {
			return _daec
		}
	}
	if _acae.GraphicFrame != nil {
		if _feae := _acae.GraphicFrame.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"); _feae != nil {
			return _feae
		}
	}
	if _acae.CxnSp != nil {
		if _acfbg := _acae.CxnSp.ValidateWithPath(path + "\u002f\u0043\u0078\u006e\u0053\u0070"); _acfbg != nil {
			return _acfbg
		}
	}
	if _acae.Pic != nil {
		if _gag := _acae.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _gag != nil {
			return _gag
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Drawing and its children, prefixing error messages with path
func (_cfg *CT_Drawing) ValidateWithPath(path string) error {
	for _cef, _aad := range _cfg.EG_Anchor {
		if _gga := _aad.ValidateWithPath(_d.Sprintf("\u0025\u0073/\u0045\u0047\u005fA\u006e\u0063\u0068\u006f\u0072\u005b\u0025\u0064\u005d", path, _cef)); _gga != nil {
			return _gga
		}
	}
	return nil
}

type EG_ObjectChoices struct{ Choice *EG_ObjectChoicesChoice }

func NewEG_ObjectChoices() *EG_ObjectChoices { _dfe := &EG_ObjectChoices{}; return _dfe }
func (_cbbc *CT_GroupShapeChoice) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	if _cbbc.Sp != nil {
		_dea := _c.StartElement{Name: _c.Name{Local: "\u0073\u0070"}}
		for _, _aab := range _cbbc.Sp {
			e.EncodeElement(_aab, _dea)
		}
	}
	if _cbbc.GrpSp != nil {
		_afd := _c.StartElement{Name: _c.Name{Local: "\u0067\u0072\u0070S\u0070"}}
		for _, _eaf := range _cbbc.GrpSp {
			e.EncodeElement(_eaf, _afd)
		}
	}
	if _cbbc.GraphicFrame != nil {
		_cee := _c.StartElement{Name: _c.Name{Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}}
		for _, _ega := range _cbbc.GraphicFrame {
			e.EncodeElement(_ega, _cee)
		}
	}
	if _cbbc.CxnSp != nil {
		_bdb := _c.StartElement{Name: _c.Name{Local: "\u0063\u0078\u006eS\u0070"}}
		for _, _dba := range _cbbc.CxnSp {
			e.EncodeElement(_dba, _bdb)
		}
	}
	if _cbbc.Pic != nil {
		_dab := _c.StartElement{Name: _c.Name{Local: "\u0070\u0069\u0063"}}
		for _, _ecdc := range _cbbc.Pic {
			e.EncodeElement(_ecdc, _dab)
		}
	}
	return nil
}
func (_af *CT_AbsSizeAnchor) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	e.EncodeToken(start)
	_g := _c.StartElement{Name: _c.Name{Local: "\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_af.From, _g)
	_gd := _c.StartElement{Name: _c.Name{Local: "\u0065\u0078\u0074"}}
	e.EncodeElement(_af.Ext, _gd)
	if _af.Choice != nil {
		_af.Choice.MarshalXML(e, _c.StartElement{})
	}
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}
func NewCT_ConnectorNonVisual() *CT_ConnectorNonVisual {
	_adg := &CT_ConnectorNonVisual{}
	_adg.CNvPr = _cf.NewCT_NonVisualDrawingProps()
	_adg.CNvCxnSpPr = _cf.NewCT_NonVisualConnectorProperties()
	return _adg
}
func (_bga *EG_Anchor) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	if _bga.RelSizeAnchor != nil {
		_aca := _c.StartElement{Name: _c.Name{Local: "\u0072\u0065\u006c\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}}
		e.EncodeElement(_bga.RelSizeAnchor, _aca)
	}
	if _bga.AbsSizeAnchor != nil {
		_dega := _c.StartElement{Name: _c.Name{Local: "\u0061\u0062\u0073\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}}
		e.EncodeElement(_bga.AbsSizeAnchor, _dega)
	}
	return nil
}
func (_bccg *CT_Shape) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_bccg.NvSpPr = NewCT_ShapeNonVisual()
	_bccg.SpPr = _cf.NewCT_ShapeProperties()
	for _, _befa := range start.Attr {
		if _befa.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_gccg, _gccb := _befa.Value, error(nil)
			if _gccb != nil {
				return _gccb
			}
			_bccg.MacroAttr = &_gccg
			continue
		}
		if _befa.Name.Local == "\u0074\u0065\u0078\u0074\u006c\u0069\u006e\u006b" {
			_deb, _cfa := _befa.Value, error(nil)
			if _cfa != nil {
				return _cfa
			}
			_bccg.TextlinkAttr = &_deb
			continue
		}
		if _befa.Name.Local == "\u0066\u004c\u006f\u0063\u006b\u0073\u0054\u0065\u0078\u0074" {
			_abg, _bbdd := _f.ParseBool(_befa.Value)
			if _bbdd != nil {
				return _bbdd
			}
			_bccg.FLocksTextAttr = &_abg
			continue
		}
		if _befa.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_bfc, _cac := _f.ParseBool(_befa.Value)
			if _cac != nil {
				return _cac
			}
			_bccg.FPublishedAttr = &_bfc
			continue
		}
	}
_caca:
	for {
		_gaea, _eecc := d.Token()
		if _eecc != nil {
			return _eecc
		}
		switch _fgg := _gaea.(type) {
		case _c.StartElement:
			switch _fgg.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _aeb := d.DecodeElement(_bccg.NvSpPr, &_fgg); _aeb != nil {
					return _aeb
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _fgf := d.DecodeElement(_bccg.SpPr, &_fgg); _fgf != nil {
					return _fgf
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_bccg.Style = _cf.NewCT_ShapeStyle()
				if _cdb := d.DecodeElement(_bccg.Style, &_fgg); _cdb != nil {
					return _cdb
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_bccg.TxBody = _cf.NewCT_TextBody()
				if _cada := d.DecodeElement(_bccg.TxBody, &_fgg); _cada != nil {
					return _cada
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _fgg.Name)
				if _fge := d.Skip(); _fge != nil {
					return _fge
				}
			}
		case _c.EndElement:
			break _caca
		case _c.CharData:
		}
	}
	return nil
}

// Validate validates the EG_ObjectChoices and its children
func (_cfed *EG_ObjectChoices) Validate() error {
	return _cfed.ValidateWithPath("\u0045\u0047_\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073")
}

// Validate validates the CT_Marker and its children
func (_dbb *CT_Marker) Validate() error {
	return _dbb.ValidateWithPath("\u0043T\u005f\u004d\u0061\u0072\u006b\u0065r")
}

// ValidateWithPath validates the CT_Connector and its children, prefixing error messages with path
func (_ceb *CT_Connector) ValidateWithPath(path string) error {
	if _de := _ceb.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _de != nil {
		return _de
	}
	if _aag := _ceb.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _aag != nil {
		return _aag
	}
	if _ceb.Style != nil {
		if _cec := _ceb.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _cec != nil {
			return _cec
		}
	}
	return nil
}
func (_bdc *CT_GroupShapeChoice) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
_eefa:
	for {
		_aefe, _fbd := d.Token()
		if _fbd != nil {
			return _fbd
		}
		switch _dcfa := _aefe.(type) {
		case _c.StartElement:
			switch _dcfa.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_bebf := NewCT_Shape()
				if _fbcg := d.DecodeElement(_bebf, &_dcfa); _fbcg != nil {
					return _fbcg
				}
				_bdc.Sp = append(_bdc.Sp, _bebf)
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_gce := NewCT_GroupShape()
				if _baf := d.DecodeElement(_gce, &_dcfa); _baf != nil {
					return _baf
				}
				_bdc.GrpSp = append(_bdc.GrpSp, _gce)
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_fad := NewCT_GraphicFrame()
				if _ded := d.DecodeElement(_fad, &_dcfa); _ded != nil {
					return _ded
				}
				_bdc.GraphicFrame = append(_bdc.GraphicFrame, _fad)
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_bef := NewCT_Connector()
				if _caf := d.DecodeElement(_bef, &_dcfa); _caf != nil {
					return _caf
				}
				_bdc.CxnSp = append(_bdc.CxnSp, _bef)
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_ecb := NewCT_Picture()
				if _feg := d.DecodeElement(_ecb, &_dcfa); _feg != nil {
					return _feg
				}
				_bdc.Pic = append(_bdc.Pic, _ecb)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068ap\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _dcfa.Name)
				if _ge := d.Skip(); _ge != nil {
					return _ge
				}
			}
		case _c.EndElement:
			break _eefa
		case _c.CharData:
		}
	}
	return nil
}

type CT_GroupShapeChoice struct {
	Sp           []*CT_Shape
	GrpSp        []*CT_GroupShape
	GraphicFrame []*CT_GraphicFrame
	CxnSp        []*CT_Connector
	Pic          []*CT_Picture
}

func (_bca *CT_Marker) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_bca.X = 0.0
	_bca.Y = 0.0
_dae:
	for {
		_ccg, _aacf := d.Token()
		if _aacf != nil {
			return _aacf
		}
		switch _abec := _ccg.(type) {
		case _c.StartElement:
			switch _abec.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0078"}:
				if _daad := d.DecodeElement(&_bca.X, &_abec); _daad != nil {
					return _daad
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0079"}:
				if _cfff := d.DecodeElement(&_bca.Y, &_abec); _cfff != nil {
					return _cfff
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0061\u0072k\u0065\u0072 \u0025\u0076", _abec.Name)
				if _afcg := d.Skip(); _afcg != nil {
					return _afcg
				}
			}
		case _c.EndElement:
			break _dae
		case _c.CharData:
		}
	}
	return nil
}
func (_ddb *CT_Picture) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	if _ddb.MacroAttr != nil {
		start.Attr = append(start.Attr, _c.Attr{Name: _c.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _d.Sprintf("\u0025\u0076", *_ddb.MacroAttr)})
	}
	if _ddb.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _c.Attr{Name: _c.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _d.Sprintf("\u0025\u0064", _gfcg(*_ddb.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_ddbe := _c.StartElement{Name: _c.Name{Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_ddb.NvPicPr, _ddbe)
	_fed := _c.StartElement{Name: _c.Name{Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_ddb.BlipFill, _fed)
	_dgeb := _c.StartElement{Name: _c.Name{Local: "\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_ddb.SpPr, _dgeb)
	if _ddb.Style != nil {
		_ggb := _c.StartElement{Name: _c.Name{Local: "\u0073\u0074\u0079l\u0065"}}
		e.EncodeElement(_ddb.Style, _ggb)
	}
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}

type CT_GraphicFrameNonVisual struct {
	CNvPr             *_cf.CT_NonVisualDrawingProps
	CNvGraphicFramePr *_cf.CT_NonVisualGraphicFrameProperties
}

func (_egc *CT_PictureNonVisual) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	e.EncodeToken(start)
	_dcbd := _c.StartElement{Name: _c.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_egc.CNvPr, _dcbd)
	_afb := _c.StartElement{Name: _c.Name{Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_egc.CNvPicPr, _afb)
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_Anchor and its children, prefixing error messages with path
func (_adb *EG_Anchor) ValidateWithPath(path string) error {
	if _adb.RelSizeAnchor != nil {
		if _cdac := _adb.RelSizeAnchor.ValidateWithPath(path + "\u002f\u0052\u0065\u006c\u0053\u0069\u007a\u0065\u0041n\u0063\u0068\u006f\u0072"); _cdac != nil {
			return _cdac
		}
	}
	if _adb.AbsSizeAnchor != nil {
		if _cbbcd := _adb.AbsSizeAnchor.ValidateWithPath(path + "\u002f\u0041\u0062\u0073\u0053\u0069\u007a\u0065\u0041n\u0063\u0068\u006f\u0072"); _cbbcd != nil {
			return _cbbcd
		}
	}
	return nil
}
func (_agd *CT_Picture) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_agd.NvPicPr = NewCT_PictureNonVisual()
	_agd.BlipFill = _cf.NewCT_BlipFillProperties()
	_agd.SpPr = _cf.NewCT_ShapeProperties()
	for _, _baa := range start.Attr {
		if _baa.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_cfc, _cca := _baa.Value, error(nil)
			if _cca != nil {
				return _cca
			}
			_agd.MacroAttr = &_cfc
			continue
		}
		if _baa.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_eec, _gec := _f.ParseBool(_baa.Value)
			if _gec != nil {
				return _gec
			}
			_agd.FPublishedAttr = &_eec
			continue
		}
	}
_gded:
	for {
		_ddbg, _eea := d.Token()
		if _eea != nil {
			return _eea
		}
		switch _gfg := _ddbg.(type) {
		case _c.StartElement:
			switch _gfg.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _bfa := d.DecodeElement(_agd.NvPicPr, &_gfg); _bfa != nil {
					return _bfa
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _eaa := d.DecodeElement(_agd.BlipFill, &_gfg); _eaa != nil {
					return _eaa
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _egff := d.DecodeElement(_agd.SpPr, &_gfg); _egff != nil {
					return _egff
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_agd.Style = _cf.NewCT_ShapeStyle()
				if _ebe := d.DecodeElement(_agd.Style, &_gfg); _ebe != nil {
					return _ebe
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _gfg.Name)
				if _ecga := d.Skip(); _ecga != nil {
					return _ecga
				}
			}
		case _c.EndElement:
			break _gded
		case _c.CharData:
		}
	}
	return nil
}
func (_cab *CT_Drawing) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
_aba:
	for {
		_ac, _afg := d.Token()
		if _afg != nil {
			return _afg
		}
		switch _bgf := _ac.(type) {
		case _c.StartElement:
			switch _bgf.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u0065\u006c\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_begc := NewEG_Anchor()
				_begc.RelSizeAnchor = NewCT_RelSizeAnchor()
				if _fce := d.DecodeElement(_begc.RelSizeAnchor, &_bgf); _fce != nil {
					return _fce
				}
				_cab.EG_Anchor = append(_cab.EG_Anchor, _begc)
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_cadc := NewEG_Anchor()
				_cadc.AbsSizeAnchor = NewCT_AbsSizeAnchor()
				if _gg := d.DecodeElement(_cadc.AbsSizeAnchor, &_bgf); _gg != nil {
					return _gg
				}
				_cab.EG_Anchor = append(_cab.EG_Anchor, _cadc)
			default:
				_e.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0020\u0025\u0076", _bgf.Name)
				if _gbg := d.Skip(); _gbg != nil {
					return _gbg
				}
			}
		case _c.EndElement:
			break _aba
		case _c.CharData:
		}
	}
	return nil
}
func (_cde *CT_RelSizeAnchor) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	e.EncodeToken(start)
	_adc := _c.StartElement{Name: _c.Name{Local: "\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_cde.From, _adc)
	_gfc := _c.StartElement{Name: _c.Name{Local: "\u0074\u006f"}}
	e.EncodeElement(_cde.To, _gfc)
	if _cde.Choice != nil {
		_cde.Choice.MarshalXML(e, _c.StartElement{})
	}
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_bcb *CT_Picture) ValidateWithPath(path string) error {
	if _cag := _bcb.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _cag != nil {
		return _cag
	}
	if _gbd := _bcb.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _gbd != nil {
		return _gbd
	}
	if _eba := _bcb.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _eba != nil {
		return _eba
	}
	if _bcb.Style != nil {
		if _ffb := _bcb.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ffb != nil {
			return _ffb
		}
	}
	return nil
}
func NewCT_Connector() *CT_Connector {
	_fb := &CT_Connector{}
	_fb.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_fb.SpPr = _cf.NewCT_ShapeProperties()
	return _fb
}

// Validate validates the EG_ObjectChoicesChoice and its children
func (_edfe *EG_ObjectChoicesChoice) Validate() error {
	return _edfe.ValidateWithPath("\u0045\u0047\u005f\u004fbj\u0065\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0043\u0068\u006f\u0069c\u0065")
}
func NewCT_ShapeNonVisual() *CT_ShapeNonVisual {
	_eff := &CT_ShapeNonVisual{}
	_eff.CNvPr = _cf.NewCT_NonVisualDrawingProps()
	_eff.CNvSpPr = _cf.NewCT_NonVisualDrawingShapeProps()
	return _eff
}

// Validate validates the CT_ConnectorNonVisual and its children
func (_deg *CT_ConnectorNonVisual) Validate() error {
	return _deg.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}
func NewCT_GraphicFrame() *CT_GraphicFrame {
	_aef := &CT_GraphicFrame{}
	_aef.NvGraphicFramePr = NewCT_GraphicFrameNonVisual()
	_aef.Xfrm = _cf.NewCT_Transform2D()
	_aef.Graphic = _cf.NewGraphic()
	return _aef
}
func (_eceb *EG_ObjectChoicesChoice) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
_abecd:
	for {
		_ecde, _bae := d.Token()
		if _bae != nil {
			return _bae
		}
		switch _efb := _ecde.(type) {
		case _c.StartElement:
			switch _efb.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_eceb.Sp = NewCT_Shape()
				if _gee := d.DecodeElement(_eceb.Sp, &_efb); _gee != nil {
					return _gee
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_eceb.GrpSp = NewCT_GroupShape()
				if _afgd := d.DecodeElement(_eceb.GrpSp, &_efb); _afgd != nil {
					return _afgd
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_eceb.GraphicFrame = NewCT_GraphicFrame()
				if _feb := d.DecodeElement(_eceb.GraphicFrame, &_efb); _feb != nil {
					return _feb
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_eceb.CxnSp = NewCT_Connector()
				if _ggga := d.DecodeElement(_eceb.CxnSp, &_efb); _ggga != nil {
					return _ggga
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_eceb.Pic = NewCT_Picture()
				if _fga := d.DecodeElement(_eceb.Pic, &_efb); _fga != nil {
					return _fga
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045G\u005f\u004f\u0062\u006a\u0065c\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _efb.Name)
				if _fcg := d.Skip(); _fcg != nil {
					return _fcg
				}
			}
		case _c.EndElement:
			break _abecd
		case _c.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupShapeNonVisual and its children, prefixing error messages with path
func (_egb *CT_GroupShapeNonVisual) ValidateWithPath(path string) error {
	if _fff := _egb.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _fff != nil {
		return _fff
	}
	if _gcg := _egb.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _gcg != nil {
		return _gcg
	}
	return nil
}
func (_eeae *EG_ObjectChoices) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	if _eeae.Choice != nil {
		_eeae.Choice.MarshalXML(e, _c.StartElement{})
	}
	return nil
}
func (_dadb *CT_ShapeNonVisual) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	e.EncodeToken(start)
	_fdb := _c.StartElement{Name: _c.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_dadb.CNvPr, _fdb)
	_gced := _c.StartElement{Name: _c.Name{Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_dadb.CNvSpPr, _gced)
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}
func NewCT_GraphicFrameNonVisual() *CT_GraphicFrameNonVisual {
	_eac := &CT_GraphicFrameNonVisual{}
	_eac.CNvPr = _cf.NewCT_NonVisualDrawingProps()
	_eac.CNvGraphicFramePr = _cf.NewCT_NonVisualGraphicFrameProperties()
	return _eac
}
func (_fee *CT_GraphicFrameNonVisual) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_fee.CNvPr = _cf.NewCT_NonVisualDrawingProps()
	_fee.CNvGraphicFramePr = _cf.NewCT_NonVisualGraphicFrameProperties()
_fcc:
	for {
		_cecg, _bfg := d.Token()
		if _bfg != nil {
			return _bfg
		}
		switch _eef := _cecg.(type) {
		case _c.StartElement:
			switch _eef.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _agc := d.DecodeElement(_fee.CNvPr, &_eef); _agc != nil {
					return _agc
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _fbe := d.DecodeElement(_fee.CNvGraphicFramePr, &_eef); _fbe != nil {
					return _fbe
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c\u0020%\u0076", _eef.Name)
				if _abc := d.Skip(); _abc != nil {
					return _abc
				}
			}
		case _c.EndElement:
			break _fcc
		case _c.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Drawing and its children
func (_ace *CT_Drawing) Validate() error {
	return _ace.ValidateWithPath("\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}
func (_bd *CT_ConnectorNonVisual) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_bd.CNvPr = _cf.NewCT_NonVisualDrawingProps()
	_bd.CNvCxnSpPr = _cf.NewCT_NonVisualConnectorProperties()
_cc:
	for {
		_cd, _cgd := d.Token()
		if _cgd != nil {
			return _cgd
		}
		switch _aaf := _cd.(type) {
		case _c.StartElement:
			switch _aaf.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _cad := d.DecodeElement(_bd.CNvPr, &_aaf); _cad != nil {
					return _cad
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _beg := d.DecodeElement(_bd.CNvCxnSpPr, &_aaf); _beg != nil {
					return _beg
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _aaf.Name)
				if _dcb := d.Skip(); _dcb != nil {
					return _dcb
				}
			}
		case _c.EndElement:
			break _cc
		case _c.CharData:
		}
	}
	return nil
}
func NewCT_AbsSizeAnchor() *CT_AbsSizeAnchor {
	_cb := &CT_AbsSizeAnchor{}
	_cb.From = NewCT_Marker()
	_cb.Ext = _cf.NewCT_PositiveSize2D()
	return _cb
}

type EG_Anchor struct {
	RelSizeAnchor *CT_RelSizeAnchor
	AbsSizeAnchor *CT_AbsSizeAnchor
}

// ValidateWithPath validates the CT_GraphicFrame and its children, prefixing error messages with path
func (_dddg *CT_GraphicFrame) ValidateWithPath(path string) error {
	if _abb := _dddg.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _abb != nil {
		return _abb
	}
	if _gaf := _dddg.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _gaf != nil {
		return _gaf
	}
	if _fbc := _dddg.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _fbc != nil {
		return _fbc
	}
	return nil
}

type CT_Picture struct {
	MacroAttr      *string
	FPublishedAttr *bool
	NvPicPr        *CT_PictureNonVisual
	BlipFill       *_cf.CT_BlipFillProperties
	SpPr           *_cf.CT_ShapeProperties
	Style          *_cf.CT_ShapeStyle
}

func (_bg *CT_Drawing) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	start.Name.Local = "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"
	e.EncodeToken(start)
	if _bg.EG_Anchor != nil {
		for _, _fd := range _bg.EG_Anchor {
			_fd.MarshalXML(e, _c.StartElement{})
		}
	}
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}
func (_cff *CT_GroupShapeNonVisual) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_cff.CNvPr = _cf.NewCT_NonVisualDrawingProps()
	_cff.CNvGrpSpPr = _cf.NewCT_NonVisualGroupDrawingShapeProps()
_dce:
	for {
		_dca, _bff := d.Token()
		if _bff != nil {
			return _bff
		}
		switch _gacb := _dca.(type) {
		case _c.StartElement:
			switch _gacb.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _ggd := d.DecodeElement(_cff.CNvPr, &_gacb); _ggd != nil {
					return _ggd
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _bdac := d.DecodeElement(_cff.CNvGrpSpPr, &_gacb); _bdac != nil {
					return _bdac
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _gacb.Name)
				if _ede := d.Skip(); _ede != nil {
					return _ede
				}
			}
		case _c.EndElement:
			break _dce
		case _c.CharData:
		}
	}
	return nil
}
func (_ece *CT_Shape) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	if _ece.MacroAttr != nil {
		start.Attr = append(start.Attr, _c.Attr{Name: _c.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _d.Sprintf("\u0025\u0076", *_ece.MacroAttr)})
	}
	if _ece.TextlinkAttr != nil {
		start.Attr = append(start.Attr, _c.Attr{Name: _c.Name{Local: "\u0074\u0065\u0078\u0074\u006c\u0069\u006e\u006b"}, Value: _d.Sprintf("\u0025\u0076", *_ece.TextlinkAttr)})
	}
	if _ece.FLocksTextAttr != nil {
		start.Attr = append(start.Attr, _c.Attr{Name: _c.Name{Local: "\u0066\u004c\u006f\u0063\u006b\u0073\u0054\u0065\u0078\u0074"}, Value: _d.Sprintf("\u0025\u0064", _gfcg(*_ece.FLocksTextAttr))})
	}
	if _ece.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _c.Attr{Name: _c.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _d.Sprintf("\u0025\u0064", _gfcg(*_ece.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_ecec := _c.StartElement{Name: _c.Name{Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ece.NvSpPr, _ecec)
	_edfd := _c.StartElement{Name: _c.Name{Local: "\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_ece.SpPr, _edfd)
	if _ece.Style != nil {
		_aefed := _c.StartElement{Name: _c.Name{Local: "\u0073\u0074\u0079l\u0065"}}
		e.EncodeElement(_ece.Style, _aefed)
	}
	if _ece.TxBody != nil {
		_dcac := _c.StartElement{Name: _c.Name{Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_ece.TxBody, _dcac)
	}
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}
func (_dcc *CT_Connector) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_dcc.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_dcc.SpPr = _cf.NewCT_ShapeProperties()
	for _, _ad := range start.Attr {
		if _ad.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_ddd, _df := _ad.Value, error(nil)
			if _df != nil {
				return _df
			}
			_dcc.MacroAttr = &_ddd
			continue
		}
		if _ad.Name.Local == "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064" {
			_gf, _ec := _f.ParseBool(_ad.Value)
			if _ec != nil {
				return _ec
			}
			_dcc.FPublishedAttr = &_gf
			continue
		}
	}
_cfe:
	for {
		_bf, _db := d.Token()
		if _db != nil {
			return _db
		}
		switch _fec := _bf.(type) {
		case _c.StartElement:
			switch _fec.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _dge := d.DecodeElement(_dcc.NvCxnSpPr, &_fec); _dge != nil {
					return _dge
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070\u0050\u0072"}:
				if _dde := d.DecodeElement(_dcc.SpPr, &_fec); _dde != nil {
					return _dde
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0074\u0079l\u0065"}:
				_dcc.Style = _cf.NewCT_ShapeStyle()
				if _aff := d.DecodeElement(_dcc.Style, &_fec); _aff != nil {
					return _aff
				}
			default:
				_e.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006en\u0065\u0063\u0074\u006f\u0072\u0020\u0025\u0076", _fec.Name)
				if _cbb := d.Skip(); _cbb != nil {
					return _cbb
				}
			}
		case _c.EndElement:
			break _cfe
		case _c.CharData:
		}
	}
	return nil
}

type CT_GroupShapeNonVisual struct {
	CNvPr      *_cf.CT_NonVisualDrawingProps
	CNvGrpSpPr *_cf.CT_NonVisualGroupDrawingShapeProps
}
type CT_PictureNonVisual struct {
	CNvPr    *_cf.CT_NonVisualDrawingProps
	CNvPicPr *_cf.CT_NonVisualPictureProperties
}

func (_abcg *CT_ShapeNonVisual) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_abcg.CNvPr = _cf.NewCT_NonVisualDrawingProps()
	_abcg.CNvSpPr = _cf.NewCT_NonVisualDrawingShapeProps()
_fccb:
	for {
		_gaeb, _bbf := d.Token()
		if _bbf != nil {
			return _bbf
		}
		switch _cagg := _gaeb.(type) {
		case _c.StartElement:
			switch _cagg.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u004e\u0076P\u0072"}:
				if _cgbc := d.DecodeElement(_abcg.CNvPr, &_cagg); _cgbc != nil {
					return _cgbc
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _bfed := d.DecodeElement(_abcg.CNvSpPr, &_cagg); _bfed != nil {
					return _bfed
				}
			default:
				_e.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _cagg.Name)
				if _cce := d.Skip(); _cce != nil {
					return _cce
				}
			}
		case _c.EndElement:
			break _fccb
		case _c.CharData:
		}
	}
	return nil
}

type CT_ConnectorNonVisual struct {
	CNvPr      *_cf.CT_NonVisualDrawingProps
	CNvCxnSpPr *_cf.CT_NonVisualConnectorProperties
}
type CT_RelSizeAnchor struct {
	From   *CT_Marker
	To     *CT_Marker
	Choice *EG_ObjectChoicesChoice
}

func (_egf *CT_GroupShape) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_egf.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_egf.GrpSpPr = _cf.NewCT_GroupShapeProperties()
_cbbf:
	for {
		_ba, _edf := d.Token()
		if _edf != nil {
			return _edf
		}
		switch _eefe := _ba.(type) {
		case _c.StartElement:
			switch _eefe.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _fbg := d.DecodeElement(_egf.NvGrpSpPr, &_eefe); _fbg != nil {
					return _fbg
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _gbgf := d.DecodeElement(_egf.GrpSpPr, &_eefe); _gbgf != nil {
					return _gbgf
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_dcf := NewCT_GroupShapeChoice()
				if _bab := d.DecodeElement(&_dcf.Sp, &_eefe); _bab != nil {
					return _bab
				}
				_egf.Choice = append(_egf.Choice, _dcf)
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_cfd := NewCT_GroupShapeChoice()
				if _eag := d.DecodeElement(&_cfd.GrpSp, &_eefe); _eag != nil {
					return _eag
				}
				_egf.Choice = append(_egf.Choice, _cfd)
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_fdg := NewCT_GroupShapeChoice()
				if _gafc := d.DecodeElement(&_fdg.GraphicFrame, &_eefe); _gafc != nil {
					return _gafc
				}
				_egf.Choice = append(_egf.Choice, _fdg)
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_ddc := NewCT_GroupShapeChoice()
				if _gab := d.DecodeElement(&_ddc.CxnSp, &_eefe); _gab != nil {
					return _gab
				}
				_egf.Choice = append(_egf.Choice, _ddc)
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_bbc := NewCT_GroupShapeChoice()
				if _dgd := d.DecodeElement(&_bbc.Pic, &_eefe); _dgd != nil {
					return _dgd
				}
				_egf.Choice = append(_egf.Choice, _bbc)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065 \u0025\u0076", _eefe.Name)
				if _fecc := d.Skip(); _fecc != nil {
					return _fecc
				}
			}
		case _c.EndElement:
			break _cbbf
		case _c.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GroupShape and its children
func (_bcc *CT_GroupShape) Validate() error {
	return _bcc.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065")
}
func (_ggcg *CT_GroupShape) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	e.EncodeToken(start)
	_deeg := _c.StartElement{Name: _c.Name{Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_ggcg.NvGrpSpPr, _deeg)
	_ecg := _c.StartElement{Name: _c.Name{Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ggcg.GrpSpPr, _ecg)
	if _ggcg.Choice != nil {
		for _, _dcg := range _ggcg.Choice {
			_dcg.MarshalXML(e, _c.StartElement{})
		}
	}
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Shape and its children
func (_dbed *CT_Shape) Validate() error {
	return _dbed.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065")
}

// Validate validates the CT_RelSizeAnchor and its children
func (_edc *CT_RelSizeAnchor) Validate() error {
	return _edc.ValidateWithPath("\u0043\u0054_\u0052\u0065\u006cS\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072")
}
func NewCT_RelSizeAnchor() *CT_RelSizeAnchor {
	_gcc := &CT_RelSizeAnchor{}
	_gcc.From = NewCT_Marker()
	_gcc.To = NewCT_Marker()
	return _gcc
}

// Validate validates the EG_Anchor and its children
func (_ddbgc *EG_Anchor) Validate() error {
	return _ddbgc.ValidateWithPath("\u0045G\u005f\u0041\u006e\u0063\u0068\u006fr")
}

// Validate validates the CT_ShapeNonVisual and its children
func (_debf *CT_ShapeNonVisual) Validate() error {
	return _debf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c")
}
func (_ebea *EG_Anchor) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
_daae:
	for {
		_ecbb, _ffce := d.Token()
		if _ffce != nil {
			return _ffce
		}
		switch _dadf := _ecbb.(type) {
		case _c.StartElement:
			switch _dadf.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0072\u0065\u006c\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_ebea.RelSizeAnchor = NewCT_RelSizeAnchor()
				if _bgg := d.DecodeElement(_ebea.RelSizeAnchor, &_dadf); _bgg != nil {
					return _bgg
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0061\u0062\u0073\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072"}:
				_ebea.AbsSizeAnchor = NewCT_AbsSizeAnchor()
				if _dbc := d.DecodeElement(_ebea.AbsSizeAnchor, &_dadf); _dbc != nil {
					return _dbc
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0041\u006e\u0063h\u006f\u0072 \u0025\u0076", _dadf.Name)
				if _bag := d.Skip(); _bag != nil {
					return _bag
				}
			}
		case _c.EndElement:
			break _daae
		case _c.CharData:
		}
	}
	return nil
}
func (_da *CT_GraphicFrameNonVisual) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	e.EncodeToken(start)
	_gdg := _c.StartElement{Name: _c.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_da.CNvPr, _gdg)
	_agb := _c.StartElement{Name: _c.Name{Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_da.CNvGraphicFramePr, _agb)
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}

type CT_ShapeNonVisual struct {
	CNvPr   *_cf.CT_NonVisualDrawingProps
	CNvSpPr *_cf.CT_NonVisualDrawingShapeProps
}

// ValidateWithPath validates the CT_GroupShape and its children, prefixing error messages with path
func (_cbg *CT_GroupShape) ValidateWithPath(path string) error {
	if _cge := _cbg.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _cge != nil {
		return _cge
	}
	if _feaa := _cbg.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _feaa != nil {
		return _feaa
	}
	for _ecd, _eaca := range _cbg.Choice {
		if _gfb := _eaca.ValidateWithPath(_d.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _ecd)); _gfb != nil {
			return _gfb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AbsSizeAnchor and its children, prefixing error messages with path
func (_dc *CT_AbsSizeAnchor) ValidateWithPath(path string) error {
	if _aac := _dc.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _aac != nil {
		return _aac
	}
	if _ea := _dc.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _ea != nil {
		return _ea
	}
	if _dc.Choice != nil {
		if _gdc := _dc.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _gdc != nil {
			return _gdc
		}
	}
	return nil
}

type CT_GroupShape struct {
	NvGrpSpPr *CT_GroupShapeNonVisual
	GrpSpPr   *_cf.CT_GroupShapeProperties
	Choice    []*CT_GroupShapeChoice
}

func (_ecf *CT_ConnectorNonVisual) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	e.EncodeToken(start)
	_ga := _c.StartElement{Name: _c.Name{Local: "\u0063\u004e\u0076P\u0072"}}
	e.EncodeElement(_ecf.CNvPr, _ga)
	_fc := _c.StartElement{Name: _c.Name{Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ecf.CNvCxnSpPr, _fc)
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_AbsSizeAnchor and its children
func (_gc *CT_AbsSizeAnchor) Validate() error {
	return _gc.ValidateWithPath("\u0043\u0054_\u0041\u0062\u0073S\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072")
}

// Validate validates the CT_GraphicFrameNonVisual and its children
func (_ed *CT_GraphicFrameNonVisual) Validate() error {
	return _ed.ValidateWithPath("\u0043T\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}
func (_ced *CT_GraphicFrame) MarshalXML(e *_c.Encoder, start _c.StartElement) error {
	if _ced.MacroAttr != nil {
		start.Attr = append(start.Attr, _c.Attr{Name: _c.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _d.Sprintf("\u0025\u0076", *_ced.MacroAttr)})
	}
	if _ced.FPublishedAttr != nil {
		start.Attr = append(start.Attr, _c.Attr{Name: _c.Name{Local: "\u0066\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0065\u0064"}, Value: _d.Sprintf("\u0025\u0064", _gfcg(*_ced.FPublishedAttr))})
	}
	e.EncodeToken(start)
	_dbe := _c.StartElement{Name: _c.Name{Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_ced.NvGraphicFramePr, _dbe)
	_bee := _c.StartElement{Name: _c.Name{Local: "\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_ced.Xfrm, _bee)
	_bfe := _c.StartElement{Name: _c.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	_bfe.Attr = append(_bfe.Attr, _c.Attr{Name: _c.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	e.EncodeElement(_ced.Graphic, _bfe)
	e.EncodeToken(_c.EndElement{Name: start.Name})
	return nil
}
func (_b *CT_AbsSizeAnchor) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_b.From = NewCT_Marker()
	_b.Ext = _cf.NewCT_PositiveSize2D()
_aa:
	for {
		_ca, _ff := d.Token()
		if _ff != nil {
			return _ff
		}
		switch _bb := _ca.(type) {
		case _c.StartElement:
			switch _bb.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _ab := d.DecodeElement(_b.From, &_bb); _ab != nil {
					return _ab
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0065\u0078\u0074"}:
				if _eb := d.DecodeElement(_b.Ext, &_bb); _eb != nil {
					return _eb
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_b.Choice = NewEG_ObjectChoicesChoice()
				if _be := d.DecodeElement(&_b.Choice.Sp, &_bb); _be != nil {
					return _be
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_b.Choice = NewEG_ObjectChoicesChoice()
				if _fa := d.DecodeElement(&_b.Choice.GrpSp, &_bb); _fa != nil {
					return _fa
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_b.Choice = NewEG_ObjectChoicesChoice()
				if _fe := d.DecodeElement(&_b.Choice.GraphicFrame, &_bb); _fe != nil {
					return _fe
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_b.Choice = NewEG_ObjectChoicesChoice()
				if _cg := d.DecodeElement(&_b.Choice.CxnSp, &_bb); _cg != nil {
					return _cg
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_b.Choice = NewEG_ObjectChoicesChoice()
				if _gb := d.DecodeElement(&_b.Choice.Pic, &_bb); _gb != nil {
					return _gb
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0062\u0073\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025v", _bb.Name)
				if _cgf := d.Skip(); _cgf != nil {
					return _cgf
				}
			}
		case _c.EndElement:
			break _aa
		case _c.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ObjectChoices and its children, prefixing error messages with path
func (_gda *EG_ObjectChoices) ValidateWithPath(path string) error {
	if _gda.Choice != nil {
		if _fdd := _gda.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _fdd != nil {
			return _fdd
		}
	}
	return nil
}

type EG_ObjectChoicesChoice struct {
	Sp           *CT_Shape
	GrpSp        *CT_GroupShape
	GraphicFrame *CT_GraphicFrame
	CxnSp        *CT_Connector
	Pic          *CT_Picture
}

func (_abfa *CT_RelSizeAnchor) UnmarshalXML(d *_c.Decoder, start _c.StartElement) error {
	_abfa.From = NewCT_Marker()
	_abfa.To = NewCT_Marker()
_ffc:
	for {
		_fdeb, _dbba := d.Token()
		if _dbba != nil {
			return _dbba
		}
		switch _gcec := _fdeb.(type) {
		case _c.StartElement:
			switch _gcec.Name {
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _gfbd := d.DecodeElement(_abfa.From, &_gcec); _gfbd != nil {
					return _gfbd
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u006f"}:
				if _agf := d.DecodeElement(_abfa.To, &_gcec); _agf != nil {
					return _agf
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0073\u0070"}:
				_abfa.Choice = NewEG_ObjectChoicesChoice()
				if _bdd := d.DecodeElement(&_abfa.Choice.Sp, &_gcec); _bdd != nil {
					return _bdd
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0070S\u0070"}:
				_abfa.Choice = NewEG_ObjectChoicesChoice()
				if _add := d.DecodeElement(&_abfa.Choice.GrpSp, &_gcec); _add != nil {
					return _add
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_abfa.Choice = NewEG_ObjectChoicesChoice()
				if _bbd := d.DecodeElement(&_abfa.Choice.GraphicFrame, &_gcec); _bbd != nil {
					return _bbd
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0063\u0078\u006eS\u0070"}:
				_abfa.Choice = NewEG_ObjectChoicesChoice()
				if _ecc := d.DecodeElement(&_abfa.Choice.CxnSp, &_gcec); _ecc != nil {
					return _ecc
				}
			case _c.Name{Space: "h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0070\u0069\u0063"}:
				_abfa.Choice = NewEG_ObjectChoicesChoice()
				if _acf := d.DecodeElement(&_abfa.Choice.Pic, &_gcec); _acf != nil {
					return _acf
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u006c\u0053\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025v", _gcec.Name)
				if _eda := d.Skip(); _eda != nil {
					return _eda
				}
			}
		case _c.EndElement:
			break _ffc
		case _c.CharData:
		}
	}
	return nil
}
func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_begd := &CT_PictureNonVisual{}
	_begd.CNvPr = _cf.NewCT_NonVisualDrawingProps()
	_begd.CNvPicPr = _cf.NewCT_NonVisualPictureProperties()
	return _begd
}
func init() {
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c", NewCT_ShapeNonVisual)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065", NewCT_Shape)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_ConnectorNonVisual)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_Connector)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043T\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GraphicFrameNonVisual)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065", NewCT_GraphicFrame)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c", NewCT_GroupShapeNonVisual)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065", NewCT_GroupShape)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043T\u005f\u004d\u0061\u0072\u006b\u0065r", NewCT_Marker)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054_\u0052\u0065\u006cS\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_RelSizeAnchor)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054_\u0041\u0062\u0073S\u0069\u007a\u0065\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_AbsSizeAnchor)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_Drawing)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0045\u0047_\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0073", NewEG_ObjectChoices)
	_dd.RegisterConstructor("h\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061t\u0073.\u006f\u0072\u0067\u002fd\u0072\u0061w\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0063\u0068\u0061\u0072\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", "\u0045G\u005f\u0041\u006e\u0063\u0068\u006fr", NewEG_Anchor)
}
