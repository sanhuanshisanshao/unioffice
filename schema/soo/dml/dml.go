//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package dml

import (
	_d "encoding/xml"
	_dg "fmt"
	_cb "github.com/sanhuanshisanshao/unioffice"
	_cd "github.com/sanhuanshisanshao/unioffice/common/logger"
	_fe "github.com/sanhuanshisanshao/unioffice/schema/soo/ofc/sharedTypes"
	_db "regexp"
	_c "strconv"
	_g "time"
)

// ValidateWithPath validates the CT_Point2D and its children, prefixing error messages with path
func (_cbgc *CT_Point2D) ValidateWithPath(path string) error {
	if _gaged := _cbgc.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _gaged != nil {
		return _gaged
	}
	if _adeeb := _cbgc.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _adeeb != nil {
		return _adeeb
	}
	return nil
}
func (_fbca *CT_Color) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fbca.ScrgbClr != nil {
		_efaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_fbca.ScrgbClr, _efaf)
	}
	if _fbca.SrgbClr != nil {
		_ebdf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_fbca.SrgbClr, _ebdf)
	}
	if _fbca.HslClr != nil {
		_bcgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_fbca.HslClr, _bcgb)
	}
	if _fbca.SysClr != nil {
		_bdbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_fbca.SysClr, _bdbe)
	}
	if _fbca.SchemeClr != nil {
		_agbga := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_fbca.SchemeClr, _agbga)
	}
	if _fbca.PrstClr != nil {
		_edec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_fbca.PrstClr, _edec)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_NonVisualConnectorProperties struct {
	CxnSpLocks *CT_ConnectorLocking
	StCxn      *CT_Connection
	EndCxn     *CT_Connection
	ExtLst     *CT_OfficeArtExtensionList
}

func (_gefceg ST_LineEndType) ValidateWithPath(path string) error {
	switch _gefceg {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gefceg))
	}
	return nil
}
func NewCT_HSLEffect() *CT_HSLEffect { _dbcg := &CT_HSLEffect{}; return _dbcg }

type CT_ColorMappingOverride struct {
	Choice *CT_ColorMappingOverrideChoice
}

func (_cbaa *CT_AudioFile) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fgga := range start.Attr {
		if _fgga.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fgga.Name.Local == "\u006c\u0069\u006e\u006b" || _fgga.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fgga.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ccgf, _ddgd := _fgga.Value, error(nil)
			if _ddgd != nil {
				return _ddgd
			}
			_cbaa.LinkAttr = _ccgf
			continue
		}
		if _fgga.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_cgge, _cbdb := _fgga.Value, error(nil)
			if _cbdb != nil {
				return _cbdb
			}
			_cbaa.ContentTypeAttr = &_cgge
			continue
		}
	}
_gbae:
	for {
		_ecf, _ggge := d.Token()
		if _ggge != nil {
			return _ggge
		}
		switch _efcf := _ecf.(type) {
		case _d.StartElement:
			switch _efcf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbaa.ExtLst = NewCT_OfficeArtExtensionList()
				if _daa := d.DecodeElement(_cbaa.ExtLst, &_efcf); _daa != nil {
					return _daa
				}
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_A\u0075\u0064i\u006f\u0046\u0069\u006c\u0065\u0020\u0025\u0076", _efcf.Name)
				if _acbg := d.Skip(); _acbg != nil {
					return _acbg
				}
			}
		case _d.EndElement:
			break _gbae
		case _d.CharData:
		}
	}
	return nil
}
func (_aafee *CT_NonVisualDrawingProps) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _dg.Sprintf("\u0025\u0076", _aafee.IdAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _dg.Sprintf("\u0025\u0076", _aafee.NameAttr)})
	if _aafee.DescrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0065\u0073c\u0072"}, Value: _dg.Sprintf("\u0025\u0076", *_aafee.DescrAttr)})
	}
	if _aafee.HiddenAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_aafee.HiddenAttr))})
	}
	if _aafee.TitleAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_aafee.TitleAttr)})
	}
	e.EncodeToken(start)
	if _aafee.HlinkClick != nil {
		_efafb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}}
		e.EncodeElement(_aafee.HlinkClick, _efafb)
	}
	if _aafee.HlinkHover != nil {
		_eddde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}}
		e.EncodeElement(_aafee.HlinkHover, _eddde)
	}
	if _aafee.ExtLst != nil {
		_adbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aafee.ExtLst, _adbe)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fggcg *CT_GroupLocking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fggcg.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fggcg.NoGrpAttr))})
	}
	if _fggcg.NoUngrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0055\u006e\u0067\u0072\u0070"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fggcg.NoUngrpAttr))})
	}
	if _fggcg.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fggcg.NoSelectAttr))})
	}
	if _fggcg.NoRotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fggcg.NoRotAttr))})
	}
	if _fggcg.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fggcg.NoChangeAspectAttr))})
	}
	if _fggcg.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fggcg.NoMoveAttr))})
	}
	if _fggcg.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fggcg.NoResizeAttr))})
	}
	e.EncodeToken(start)
	if _fggcg.ExtLst != nil {
		_agfdbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fggcg.ExtLst, _agfdbc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_deegf ST_FontCollectionIndex) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_deegf.String(), start)
}
func (_dddgg *ST_TileFlipMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cadca, _acddg := d.Token()
	if _acddg != nil {
		return _acddg
	}
	if _ccbbe, _gdade := _cadca.(_d.EndElement); _gdade && _ccbbe.Name == start.Name {
		*_dddgg = 1
		return nil
	}
	if _dfcbd, _eccgae := _cadca.(_d.CharData); !_eccgae {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cadca)
	} else {
		switch string(_dfcbd) {
		case "":
			*_dddgg = 0
		case "\u006e\u006f\u006e\u0065":
			*_dddgg = 1
		case "\u0078":
			*_dddgg = 2
		case "\u0079":
			*_dddgg = 3
		case "\u0078\u0079":
			*_dddgg = 4
		}
	}
	_cadca, _acddg = d.Token()
	if _acddg != nil {
		return _acddg
	}
	if _fcddg, _febfb := _cadca.(_d.EndElement); _febfb && _fcddg.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cadca)
}
func (_deccf *CT_PresetColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_deccf.ValAttr = ST_PresetColorVal(1)
	for _, _cdbbe := range start.Attr {
		if _cdbbe.Name.Local == "\u0076\u0061\u006c" {
			_deccf.ValAttr.UnmarshalXMLAttr(_cdbbe)
			continue
		}
	}
_cecdc:
	for {
		_bddbe, _cagc := d.Token()
		if _cagc != nil {
			return _cagc
		}
		switch _ccdf := _bddbe.(type) {
		case _d.StartElement:
			switch _ccdf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_eegef := NewEG_ColorTransform()
				_eegef.Tint = NewCT_PositiveFixedPercentage()
				if _egecf := d.DecodeElement(_eegef.Tint, &_ccdf); _egecf != nil {
					return _egecf
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _eegef)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_abga := NewEG_ColorTransform()
				_abga.Shade = NewCT_PositiveFixedPercentage()
				if _abad := d.DecodeElement(_abga.Shade, &_ccdf); _abad != nil {
					return _abad
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _abga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_cbbbf := NewEG_ColorTransform()
				_cbbbf.Comp = NewCT_ComplementTransform()
				if _egdff := d.DecodeElement(_cbbbf.Comp, &_ccdf); _egdff != nil {
					return _egdff
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _cbbbf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_fcada := NewEG_ColorTransform()
				_fcada.Inv = NewCT_InverseTransform()
				if _efacd := d.DecodeElement(_fcada.Inv, &_ccdf); _efacd != nil {
					return _efacd
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _fcada)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_aefgd := NewEG_ColorTransform()
				_aefgd.Gray = NewCT_GrayscaleTransform()
				if _badd := d.DecodeElement(_aefgd.Gray, &_ccdf); _badd != nil {
					return _badd
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _aefgd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_ccagf := NewEG_ColorTransform()
				_ccagf.Alpha = NewCT_PositiveFixedPercentage()
				if _deddg := d.DecodeElement(_ccagf.Alpha, &_ccdf); _deddg != nil {
					return _deddg
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _ccagf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_cebdb := NewEG_ColorTransform()
				_cebdb.AlphaOff = NewCT_FixedPercentage()
				if _facdd := d.DecodeElement(_cebdb.AlphaOff, &_ccdf); _facdd != nil {
					return _facdd
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _cebdb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_cdcgg := NewEG_ColorTransform()
				_cdcgg.AlphaMod = NewCT_PositivePercentage()
				if _dacfe := d.DecodeElement(_cdcgg.AlphaMod, &_ccdf); _dacfe != nil {
					return _dacfe
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _cdcgg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_gebc := NewEG_ColorTransform()
				_gebc.Hue = NewCT_PositiveFixedAngle()
				if _ffadc := d.DecodeElement(_gebc.Hue, &_ccdf); _ffadc != nil {
					return _ffadc
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _gebc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_ageda := NewEG_ColorTransform()
				_ageda.HueOff = NewCT_Angle()
				if _gbebe := d.DecodeElement(_ageda.HueOff, &_ccdf); _gbebe != nil {
					return _gbebe
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _ageda)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_fcfafb := NewEG_ColorTransform()
				_fcfafb.HueMod = NewCT_PositivePercentage()
				if _bcaf := d.DecodeElement(_fcfafb.HueMod, &_ccdf); _bcaf != nil {
					return _bcaf
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _fcfafb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_cgcdaa := NewEG_ColorTransform()
				_cgcdaa.Sat = NewCT_Percentage()
				if _ecbfc := d.DecodeElement(_cgcdaa.Sat, &_ccdf); _ecbfc != nil {
					return _ecbfc
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _cgcdaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_dccee := NewEG_ColorTransform()
				_dccee.SatOff = NewCT_Percentage()
				if _fcdea := d.DecodeElement(_dccee.SatOff, &_ccdf); _fcdea != nil {
					return _fcdea
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _dccee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_fddab := NewEG_ColorTransform()
				_fddab.SatMod = NewCT_Percentage()
				if _bgabc := d.DecodeElement(_fddab.SatMod, &_ccdf); _bgabc != nil {
					return _bgabc
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _fddab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_bcdeee := NewEG_ColorTransform()
				_bcdeee.Lum = NewCT_Percentage()
				if _fcff := d.DecodeElement(_bcdeee.Lum, &_ccdf); _fcff != nil {
					return _fcff
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _bcdeee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_fbaeg := NewEG_ColorTransform()
				_fbaeg.LumOff = NewCT_Percentage()
				if _bbfabf := d.DecodeElement(_fbaeg.LumOff, &_ccdf); _bbfabf != nil {
					return _bbfabf
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _fbaeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_gbfgc := NewEG_ColorTransform()
				_gbfgc.LumMod = NewCT_Percentage()
				if _edfce := d.DecodeElement(_gbfgc.LumMod, &_ccdf); _edfce != nil {
					return _edfce
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _gbfgc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_cccg := NewEG_ColorTransform()
				_cccg.Red = NewCT_Percentage()
				if _deeeg := d.DecodeElement(_cccg.Red, &_ccdf); _deeeg != nil {
					return _deeeg
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _cccg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_fcece := NewEG_ColorTransform()
				_fcece.RedOff = NewCT_Percentage()
				if _ggdde := d.DecodeElement(_fcece.RedOff, &_ccdf); _ggdde != nil {
					return _ggdde
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _fcece)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_dddbd := NewEG_ColorTransform()
				_dddbd.RedMod = NewCT_Percentage()
				if _dccdf := d.DecodeElement(_dddbd.RedMod, &_ccdf); _dccdf != nil {
					return _dccdf
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _dddbd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_geaga := NewEG_ColorTransform()
				_geaga.Green = NewCT_Percentage()
				if _efbdg := d.DecodeElement(_geaga.Green, &_ccdf); _efbdg != nil {
					return _efbdg
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _geaga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_bbgfa := NewEG_ColorTransform()
				_bbgfa.GreenOff = NewCT_Percentage()
				if _abab := d.DecodeElement(_bbgfa.GreenOff, &_ccdf); _abab != nil {
					return _abab
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _bbgfa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_fbdfg := NewEG_ColorTransform()
				_fbdfg.GreenMod = NewCT_Percentage()
				if _aagcf := d.DecodeElement(_fbdfg.GreenMod, &_ccdf); _aagcf != nil {
					return _aagcf
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _fbdfg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_fddc := NewEG_ColorTransform()
				_fddc.Blue = NewCT_Percentage()
				if _eaadf := d.DecodeElement(_fddc.Blue, &_ccdf); _eaadf != nil {
					return _eaadf
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _fddc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_baaff := NewEG_ColorTransform()
				_baaff.BlueOff = NewCT_Percentage()
				if _egba := d.DecodeElement(_baaff.BlueOff, &_ccdf); _egba != nil {
					return _egba
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _baaff)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_dfda := NewEG_ColorTransform()
				_dfda.BlueMod = NewCT_Percentage()
				if _eeaa := d.DecodeElement(_dfda.BlueMod, &_ccdf); _eeaa != nil {
					return _eeaa
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _dfda)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_cbdc := NewEG_ColorTransform()
				_cbdc.Gamma = NewCT_GammaTransform()
				if _abcc := d.DecodeElement(_cbdc.Gamma, &_ccdf); _abcc != nil {
					return _abcc
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _cbdc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_aecg := NewEG_ColorTransform()
				_aecg.InvGamma = NewCT_InverseGammaTransform()
				if _cefad := d.DecodeElement(_aecg.InvGamma, &_ccdf); _cefad != nil {
					return _cefad
				}
				_deccf.EG_ColorTransform = append(_deccf.EG_ColorTransform, _aecg)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0043o\u006co\u0072\u0020\u0025\u0076", _ccdf.Name)
				if _eabag := d.Skip(); _eabag != nil {
					return _eabag
				}
			}
		case _d.EndElement:
			break _cecdc
		case _d.CharData:
		}
	}
	return nil
}
func (_cfff *CT_EffectStyleList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cffcd:
	for {
		_gdbd, _acdc := d.Token()
		if _acdc != nil {
			return _acdc
		}
		switch _ceab := _gdbd.(type) {
		case _d.StartElement:
			switch _ceab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "e\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "e\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_fccdba := NewCT_EffectStyleItem()
				if _dfca := d.DecodeElement(_fccdba, &_ceab); _dfca != nil {
					return _dfca
				}
				_cfff.EffectStyle = append(_cfff.EffectStyle, _fccdba)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074S\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ceab.Name)
				if _acgdd := d.Skip(); _acgdd != nil {
					return _acgdd
				}
			}
		case _d.EndElement:
			break _cffcd
		case _d.CharData:
		}
	}
	return nil
}
func (_abaebdf *ST_LightRigDirection) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_abaebdf = 0
	case "\u0074\u006c":
		*_abaebdf = 1
	case "\u0074":
		*_abaebdf = 2
	case "\u0074\u0072":
		*_abaebdf = 3
	case "\u006c":
		*_abaebdf = 4
	case "\u0072":
		*_abaebdf = 5
	case "\u0062\u006c":
		*_abaebdf = 6
	case "\u0062":
		*_abaebdf = 7
	case "\u0062\u0072":
		*_abaebdf = 8
	}
	return nil
}
func (_daceg *CT_GvmlPictureNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_dfaga := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_daceg.CNvPr, _dfaga)
	_ggbd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_daceg.CNvPicPr, _ggbd)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TableStyleCellStyle() *CT_TableStyleCellStyle {
	_deccfa := &CT_TableStyleCellStyle{}
	return _deccfa
}
func NewCT_HslColor() *CT_HslColor { _bbdbd := &CT_HslColor{}; _bbdbd.HueAttr = 0; return _bbdbd }
func (_efcg *CT_RelativeOffsetEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _efcg.TxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0078"}, Value: _dg.Sprintf("\u0025\u0076", *_efcg.TxAttr)})
	}
	if _efcg.TyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0079"}, Value: _dg.Sprintf("\u0025\u0076", *_efcg.TyAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gbeee ST_BlipCompression) ValidateWithPath(path string) error {
	switch _gbeee {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbeee))
	}
	return nil
}

// ValidateWithPath validates the CT_DefaultShapeDefinition and its children, prefixing error messages with path
func (_bdfb *CT_DefaultShapeDefinition) ValidateWithPath(path string) error {
	if _ecafc := _bdfb.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _ecafc != nil {
		return _ecafc
	}
	if _gfcd := _bdfb.BodyPr.ValidateWithPath(path + "\u002fB\u006f\u0064\u0079\u0050\u0072"); _gfcd != nil {
		return _gfcd
	}
	if _ggdfd := _bdfb.LstStyle.ValidateWithPath(path + "\u002fL\u0073\u0074\u0053\u0074\u0079\u006ce"); _ggdfd != nil {
		return _ggdfd
	}
	if _bdfb.Style != nil {
		if _fafb := _bdfb.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _fafb != nil {
			return _fafb
		}
	}
	if _bdfb.ExtLst != nil {
		if _eecgb := _bdfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eecgb != nil {
			return _eecgb
		}
	}
	return nil
}

// Validate validates the CT_Scale2D and its children
func (_dbecf *CT_Scale2D) Validate() error {
	return _dbecf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0061\u006c\u0065\u0032\u0044")
}
func ParseStdlibTime(s string) (_g.Time, error) { return _g.Time{}, nil }

// ValidateWithPath validates the CT_Scale2D and its children, prefixing error messages with path
func (_afdgf *CT_Scale2D) ValidateWithPath(path string) error {
	if _ceefa := _afdgf.Sx.ValidateWithPath(path + "\u002f\u0053\u0078"); _ceefa != nil {
		return _ceefa
	}
	if _abcg := _afdgf.Sy.ValidateWithPath(path + "\u002f\u0053\u0079"); _abcg != nil {
		return _abcg
	}
	return nil
}
func (_decf *CT_EffectStyleItem) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _decf.EffectLst != nil {
		_fagg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_decf.EffectLst, _fagg)
	}
	if _decf.EffectDag != nil {
		_ecga := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_decf.EffectDag, _ecga)
	}
	if _decf.Scene3d != nil {
		_gbfb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_decf.Scene3d, _gbfb)
	}
	if _decf.Sp3d != nil {
		_ddfec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_decf.Sp3d, _ddfec)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_AnimationChartBuildProperties and its children
func (_fga *CT_AnimationChartBuildProperties) Validate() error {
	return _fga.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061r\u0074B\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_EffectStyleList and its children
func (_dbfea *CT_EffectStyleList) Validate() error {
	return _dbfea.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u004c\u0069\u0073\u0074")
}
func (_afcd *CT_StyleMatrixReference) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gaeaa := range start.Attr {
		if _gaeaa.Name.Local == "\u0069\u0064\u0078" {
			_bfega, _eaaag := _c.ParseUint(_gaeaa.Value, 10, 32)
			if _eaaag != nil {
				return _eaaag
			}
			_afcd.IdxAttr = uint32(_bfega)
			continue
		}
	}
_abfdf:
	for {
		_ceeaa, _cgaag := d.Token()
		if _cgaag != nil {
			return _cgaag
		}
		switch _bddf := _ceeaa.(type) {
		case _d.StartElement:
			switch _bddf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_afcd.ScrgbClr = NewCT_ScRgbColor()
				if _egbf := d.DecodeElement(_afcd.ScrgbClr, &_bddf); _egbf != nil {
					return _egbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_afcd.SrgbClr = NewCT_SRgbColor()
				if _dgadb := d.DecodeElement(_afcd.SrgbClr, &_bddf); _dgadb != nil {
					return _dgadb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_afcd.HslClr = NewCT_HslColor()
				if _egaa := d.DecodeElement(_afcd.HslClr, &_bddf); _egaa != nil {
					return _egaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_afcd.SysClr = NewCT_SystemColor()
				if _gagff := d.DecodeElement(_afcd.SysClr, &_bddf); _gagff != nil {
					return _gagff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_afcd.SchemeClr = NewCT_SchemeColor()
				if _gcge := d.DecodeElement(_afcd.SchemeClr, &_bddf); _gcge != nil {
					return _gcge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_afcd.PrstClr = NewCT_PresetColor()
				if _gcgca := d.DecodeElement(_afcd.PrstClr, &_bddf); _gcgca != nil {
					return _gcgca
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004d\u0061\u0074\u0072i\u0078\u0052\u0065\u0066\u0065\u0072e\u006e\u0063\u0065 \u0025\u0076", _bddf.Name)
				if _eacb := d.Skip(); _eacb != nil {
					return _eacb
				}
			}
		case _d.EndElement:
			break _abfdf
		case _d.CharData:
		}
	}
	return nil
}

type ST_LineEndLength byte
type CT_NonVisualGroupDrawingShapeProps struct {
	GrpSpLocks *CT_GroupLocking
	ExtLst     *CT_OfficeArtExtensionList
}

func (_gbbgg *ThemeManager) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074\u0068\u0065\u006d\u0065\u004d\u0061n\u0061\u0067\u0065\u0072"
	return _gbbgg.CT_EmptyElement.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_BlipChoice and its children, prefixing error messages with path
func (_dccd *CT_BlipChoice) ValidateWithPath(path string) error {
	for _fcda, _fdg := range _dccd.AlphaBiLevel {
		if _bfdca := _fdg.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0041lp\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c\u005b\u0025\u0064\u005d", path, _fcda)); _bfdca != nil {
			return _bfdca
		}
	}
	for _gddb, _aefg := range _dccd.AlphaCeiling {
		if _febc := _aefg.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0041lp\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067\u005b\u0025\u0064\u005d", path, _gddb)); _febc != nil {
			return _febc
		}
	}
	for _gabg, _egae := range _dccd.AlphaFloor {
		if _aaaf := _egae.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006fr\u005b\u0025\u0064\u005d", path, _gabg)); _aaaf != nil {
			return _aaaf
		}
	}
	for _fbdc, _adb := range _dccd.AlphaInv {
		if _eccgb := _adb.ValidateWithPath(_dg.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u0049\u006e\u0076\u005b\u0025\u0064\u005d", path, _fbdc)); _eccgb != nil {
			return _eccgb
		}
	}
	for _abdg, _eedd := range _dccd.AlphaMod {
		if _fbea := _eedd.ValidateWithPath(_dg.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u005b\u0025\u0064\u005d", path, _abdg)); _fbea != nil {
			return _fbea
		}
	}
	for _ddfa, _ffee := range _dccd.AlphaModFix {
		if _cec := _ffee.ValidateWithPath(_dg.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u004do\u0064\u0046i\u0078\u005b\u0025\u0064\u005d", path, _ddfa)); _cec != nil {
			return _cec
		}
	}
	for _dccb, _cafa := range _dccd.AlphaRepl {
		if _bgeb := _cafa.ValidateWithPath(_dg.Sprintf("\u0025\u0073/\u0041\u006c\u0070h\u0061\u0052\u0065\u0070\u006c\u005b\u0025\u0064\u005d", path, _dccb)); _bgeb != nil {
			return _bgeb
		}
	}
	for _dbcc, _eae := range _dccd.BiLevel {
		if _gggd := _eae.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0042\u0069\u004c\u0065\u0076\u0065l\u005b\u0025\u0064\u005d", path, _dbcc)); _gggd != nil {
			return _gggd
		}
	}
	for _fbdg, _fcdf := range _dccd.Blur {
		if _afga := _fcdf.ValidateWithPath(_dg.Sprintf("%\u0073\u002f\u0042\u006c\u0075\u0072\u005b\u0025\u0064\u005d", path, _fbdg)); _afga != nil {
			return _afga
		}
	}
	for _fcedb, _ddfd := range _dccd.ClrChange {
		if _cggba := _ddfd.ValidateWithPath(_dg.Sprintf("\u0025\u0073/\u0043\u006c\u0072C\u0068\u0061\u006e\u0067\u0065\u005b\u0025\u0064\u005d", path, _fcedb)); _cggba != nil {
			return _cggba
		}
	}
	for _dfg, _fcf := range _dccd.ClrRepl {
		if _edaa := _fcf.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0043\u006c\u0072\u0052\u0065\u0070l\u005b\u0025\u0064\u005d", path, _dfg)); _edaa != nil {
			return _edaa
		}
	}
	for _bbfgc, _beab := range _dccd.Duotone {
		if _gfdcb := _beab.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0044\u0075\u006f\u0074\u006f\u006ee\u005b\u0025\u0064\u005d", path, _bbfgc)); _gfdcb != nil {
			return _gfdcb
		}
	}
	for _gagb, _gbga := range _dccd.FillOverlay {
		if _cfde := _gbga.ValidateWithPath(_dg.Sprintf("\u0025s\u002fF\u0069\u006c\u006c\u004f\u0076e\u0072\u006ca\u0079\u005b\u0025\u0064\u005d", path, _gagb)); _cfde != nil {
			return _cfde
		}
	}
	for _gfbb, _aff := range _dccd.Grayscl {
		if _eabc := _aff.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0047\u0072\u0061\u0079\u0073\u0063l\u005b\u0025\u0064\u005d", path, _gfbb)); _eabc != nil {
			return _eabc
		}
	}
	for _ecaf, _bbba := range _dccd.Hsl {
		if _bgcd := _bbba.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0048\u0073\u006c\u005b\u0025\u0064\u005d", path, _ecaf)); _bgcd != nil {
			return _bgcd
		}
	}
	for _aaba, _gebd := range _dccd.Lum {
		if _bcac := _gebd.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u004c\u0075\u006d\u005b\u0025\u0064\u005d", path, _aaba)); _bcac != nil {
			return _bcac
		}
	}
	for _aega, _egcdf := range _dccd.Tint {
		if _bfda := _egcdf.ValidateWithPath(_dg.Sprintf("%\u0073\u002f\u0054\u0069\u006e\u0074\u005b\u0025\u0064\u005d", path, _aega)); _bfda != nil {
			return _bfda
		}
	}
	return nil
}
func NewCT_DashStop() *CT_DashStop { _fbgcf := &CT_DashStop{}; return _fbgcf }
func NewCT_AlphaModulateFixedEffect() *CT_AlphaModulateFixedEffect {
	_geb := &CT_AlphaModulateFixedEffect{}
	return _geb
}

// ValidateWithPath validates the CT_TileInfoProperties and its children, prefixing error messages with path
func (_edceg *CT_TileInfoProperties) ValidateWithPath(path string) error {
	if _edceg.TxAttr != nil {
		if _fdfega := _edceg.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _fdfega != nil {
			return _fdfega
		}
	}
	if _edceg.TyAttr != nil {
		if _ebgb := _edceg.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _ebgb != nil {
			return _ebgb
		}
	}
	if _edceg.SxAttr != nil {
		if _gadf := _edceg.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _gadf != nil {
			return _gadf
		}
	}
	if _edceg.SyAttr != nil {
		if _ebbc := _edceg.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _ebbc != nil {
			return _ebbc
		}
	}
	if _bdefa := _edceg.FlipAttr.ValidateWithPath(path + "\u002fF\u006c\u0069\u0070\u0041\u0074\u0074r"); _bdefa != nil {
		return _bdefa
	}
	if _eddbc := _edceg.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _eddbc != nil {
		return _eddbc
	}
	return nil
}

// Validate validates the CT_DashStopList and its children
func (_gaedg *CT_DashStopList) Validate() error {
	return _gaedg.ValidateWithPath("\u0043T\u005fD\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074")
}
func (_cegfc ST_TextHorzOverflowType) String() string {
	switch _cegfc {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case 2:
		return "\u0063\u006c\u0069\u0070"
	}
	return ""
}

// Validate validates the CT_PolarAdjustHandle and its children
func (_aabc *CT_PolarAdjustHandle) Validate() error {
	return _aabc.ValidateWithPath("C\u0054_\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006au\u0073\u0074\u0048\u0061nd\u006c\u0065")
}
func (_gegab *CT_BlurEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gegab.RadAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0061\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_gegab.RadAttr)})
	}
	if _gegab.GrowAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u006f\u0077"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_gegab.GrowAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_FillModeProperties and its children
func (_dfegcc *EG_FillModeProperties) Validate() error {
	return _dfegcc.ValidateWithPath("E\u0047\u005f\u0046\u0069ll\u004do\u0064\u0065\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the EG_Effect and its children
func (_ecead *EG_Effect) Validate() error {
	return _ecead.ValidateWithPath("\u0045G\u005f\u0045\u0066\u0066\u0065\u0063t")
}
func (_eddfc *EG_ThemeableEffectStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gbfgb:
	for {
		_egaaa, _cbgdg := d.Token()
		if _cbgdg != nil {
			return _cbgdg
		}
		switch _ceacf := _egaaa.(type) {
		case _d.StartElement:
			switch _ceacf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_eddfc.Effect = NewCT_EffectProperties()
				if _cfgbf := d.DecodeElement(_eddfc.Effect, &_ceacf); _cfgbf != nil {
					return _cfgbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				_eddfc.EffectRef = NewCT_StyleMatrixReference()
				if _bbccd := d.DecodeElement(_eddfc.EffectRef, &_ceacf); _bbccd != nil {
					return _bbccd
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0045\u0047\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065E\u0066\u0066\u0065\u0063\u0074\u0053t\u0079\u006c\u0065 \u0025\u0076", _ceacf.Name)
				if _fdfege := d.Skip(); _fdfege != nil {
					return _fdfege
				}
			}
		case _d.EndElement:
			break _gbfgb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HSLEffect and its children, prefixing error messages with path
func (_dddd *CT_HSLEffect) ValidateWithPath(path string) error {
	if _dddd.HueAttr != nil {
		if *_dddd.HueAttr < 0 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dddd.HueAttr)
		}
		if *_dddd.HueAttr >= 21600000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dddd.HueAttr)
		}
	}
	if _dddd.SatAttr != nil {
		if _cebed := _dddd.SatAttr.ValidateWithPath(path + "\u002f\u0053\u0061\u0074\u0041\u0074\u0074\u0072"); _cebed != nil {
			return _cebed
		}
	}
	if _dddd.LumAttr != nil {
		if _bgedd := _dddd.LumAttr.ValidateWithPath(path + "\u002f\u004c\u0075\u006d\u0041\u0074\u0074\u0072"); _bgedd != nil {
			return _bgedd
		}
	}
	return nil
}
func (_dfggf ST_RectAlignment) ValidateWithPath(path string) error {
	switch _dfggf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfggf))
	}
	return nil
}
func NewCT_ShapeLocking() *CT_ShapeLocking { _fcea := &CT_ShapeLocking{}; return _fcea }
func (_ddfcgb *CT_PositiveSize2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ddfcgb.CxAttr = 0
	_ddfcgb.CyAttr = 0
	for _, _fcacf := range start.Attr {
		if _fcacf.Name.Local == "\u0063\u0078" {
			_dgea, _fcgbb := _c.ParseInt(_fcacf.Value, 10, 64)
			if _fcgbb != nil {
				return _fcgbb
			}
			_ddfcgb.CxAttr = _dgea
			continue
		}
		if _fcacf.Name.Local == "\u0063\u0079" {
			_aabg, _cffbb := _c.ParseInt(_fcacf.Value, 10, 64)
			if _cffbb != nil {
				return _cffbb
			}
			_ddfcgb.CyAttr = _aabg
			continue
		}
	}
	for {
		_edfee, _ddbc := d.Token()
		if _ddbc != nil {
			return _dg.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053\u0069\u007a\u0065\u0032\u0044: \u0025\u0073", _ddbc)
		}
		if _abea, _aeecf := _edfee.(_d.EndElement); _aeecf && _abea.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ebage ST_TextAnchoringType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dcabf := _d.Attr{}
	_dcabf.Name = name
	switch _ebage {
	case ST_TextAnchoringTypeUnset:
		_dcabf.Value = ""
	case ST_TextAnchoringTypeT:
		_dcabf.Value = "\u0074"
	case ST_TextAnchoringTypeCtr:
		_dcabf.Value = "\u0063\u0074\u0072"
	case ST_TextAnchoringTypeB:
		_dcabf.Value = "\u0062"
	case ST_TextAnchoringTypeJust:
		_dcabf.Value = "\u006a\u0075\u0073\u0074"
	case ST_TextAnchoringTypeDist:
		_dcabf.Value = "\u0064\u0069\u0073\u0074"
	}
	return _dcabf, nil
}
func (_caadg *CT_ColorScheme) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_caadg.Dk1 = NewCT_Color()
	_caadg.Lt1 = NewCT_Color()
	_caadg.Dk2 = NewCT_Color()
	_caadg.Lt2 = NewCT_Color()
	_caadg.Accent1 = NewCT_Color()
	_caadg.Accent2 = NewCT_Color()
	_caadg.Accent3 = NewCT_Color()
	_caadg.Accent4 = NewCT_Color()
	_caadg.Accent5 = NewCT_Color()
	_caadg.Accent6 = NewCT_Color()
	_caadg.Hlink = NewCT_Color()
	_caadg.FolHlink = NewCT_Color()
	for _, _ffgc := range start.Attr {
		if _ffgc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_faef, _ddfg := _ffgc.Value, error(nil)
			if _ddfg != nil {
				return _ddfg
			}
			_caadg.NameAttr = _faef
			continue
		}
	}
_bdbf:
	for {
		_dcbg, _egag := d.Token()
		if _egag != nil {
			return _egag
		}
		switch _bcaca := _dcbg.(type) {
		case _d.StartElement:
			switch _bcaca.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0031"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0031"}:
				if _abdf := d.DecodeElement(_caadg.Dk1, &_bcaca); _abdf != nil {
					return _abdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0031"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0031"}:
				if _bbdb := d.DecodeElement(_caadg.Lt1, &_bcaca); _bbdb != nil {
					return _bbdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0032"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0032"}:
				if _eege := d.DecodeElement(_caadg.Dk2, &_bcaca); _eege != nil {
					return _eege
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0032"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0032"}:
				if _fafc := d.DecodeElement(_caadg.Lt2, &_bcaca); _fafc != nil {
					return _fafc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"}:
				if _afaf := d.DecodeElement(_caadg.Accent1, &_bcaca); _afaf != nil {
					return _afaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"}:
				if _fcfe := d.DecodeElement(_caadg.Accent2, &_bcaca); _fcfe != nil {
					return _fcfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"}:
				if _bcacb := d.DecodeElement(_caadg.Accent3, &_bcaca); _bcacb != nil {
					return _bcacb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"}:
				if _fggcb := d.DecodeElement(_caadg.Accent4, &_bcaca); _fggcb != nil {
					return _fggcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"}:
				if _adaca := d.DecodeElement(_caadg.Accent5, &_bcaca); _adaca != nil {
					return _adaca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"}:
				if _eagd := d.DecodeElement(_caadg.Accent6, &_bcaca); _eagd != nil {
					return _eagd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069n\u006b"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069n\u006b"}:
				if _gfbd := d.DecodeElement(_caadg.Hlink, &_bcaca); _gfbd != nil {
					return _gfbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}:
				if _bcec := d.DecodeElement(_caadg.FolHlink, &_bcaca); _bcec != nil {
					return _bcec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caadg.ExtLst = NewCT_OfficeArtExtensionList()
				if _ddbg := d.DecodeElement(_caadg.ExtLst, &_bcaca); _ddbg != nil {
					return _ddbg
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063h\u0065m\u0065\u0020\u0025\u0076", _bcaca.Name)
				if _baab := d.Skip(); _baab != nil {
					return _baab
				}
			}
		case _d.EndElement:
			break _bdbf
		case _d.CharData:
		}
	}
	return nil
}
func (_ddbab ST_PresetMaterialType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ddbab.String(), start)
}
func (_bcfed *ST_Coordinate32) Validate() error { return _bcfed.ValidateWithPath("") }

// ST_TextBulletSize is a union type
type ST_TextBulletSize struct {
	ST_TextBulletSizePercent *string
	ST_TextBulletSizeDecimal *int32
}

func (_agbg *CT_Cell3D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _agbg.PrstMaterialAttr != ST_PresetMaterialTypeUnset {
		_aabb, _abfa := _agbg.PrstMaterialAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c"})
		if _abfa != nil {
			return _abfa
		}
		start.Attr = append(start.Attr, _aabb)
	}
	e.EncodeToken(start)
	_cgc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
	e.EncodeElement(_agbg.Bevel, _cgc)
	if _agbg.LightRig != nil {
		_afdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}}
		e.EncodeElement(_agbg.LightRig, _afdc)
	}
	if _agbg.ExtLst != nil {
		_ffcb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_agbg.ExtLst, _ffcb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bcbgf ST_PresetShadowVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bcbgf.String(), start)
}
func (_bgded ST_TextCapsType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bgded.String(), start)
}
func (_fgbef *ST_ShapeType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fgbef = 0
	case "\u006c\u0069\u006e\u0065":
		*_fgbef = 1
	case "\u006ci\u006e\u0065\u0049\u006e\u0076":
		*_fgbef = 2
	case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_fgbef = 3
	case "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_fgbef = 4
	case "\u0072\u0065\u0063\u0074":
		*_fgbef = 5
	case "\u0064i\u0061\u006d\u006f\u006e\u0064":
		*_fgbef = 6
	case "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d":
		*_fgbef = 7
	case "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d":
		*_fgbef = 8
	case "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064":
		*_fgbef = 9
	case "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e":
		*_fgbef = 10
	case "\u0068e\u0078\u0061\u0067\u006f\u006e":
		*_fgbef = 11
	case "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e":
		*_fgbef = 12
	case "\u006fc\u0074\u0061\u0067\u006f\u006e":
		*_fgbef = 13
	case "\u0064e\u0063\u0061\u0067\u006f\u006e":
		*_fgbef = 14
	case "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn":
		*_fgbef = 15
	case "\u0073\u0074\u0061r\u0034":
		*_fgbef = 16
	case "\u0073\u0074\u0061r\u0035":
		*_fgbef = 17
	case "\u0073\u0074\u0061r\u0036":
		*_fgbef = 18
	case "\u0073\u0074\u0061r\u0037":
		*_fgbef = 19
	case "\u0073\u0074\u0061r\u0038":
		*_fgbef = 20
	case "\u0073\u0074\u0061\u0072\u0031\u0030":
		*_fgbef = 21
	case "\u0073\u0074\u0061\u0072\u0031\u0032":
		*_fgbef = 22
	case "\u0073\u0074\u0061\u0072\u0031\u0036":
		*_fgbef = 23
	case "\u0073\u0074\u0061\u0072\u0032\u0034":
		*_fgbef = 24
	case "\u0073\u0074\u0061\u0072\u0033\u0032":
		*_fgbef = 25
	case "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t":
		*_fgbef = 26
	case "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074":
		*_fgbef = 27
	case "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074":
		*_fgbef = 28
	case "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074":
		*_fgbef = 29
	case "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074":
		*_fgbef = 30
	case "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t":
		*_fgbef = 31
	case "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074":
		*_fgbef = 32
	case "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074":
		*_fgbef = 33
	case "\u0070\u006c\u0061\u0071\u0075\u0065":
		*_fgbef = 34
	case "\u0065l\u006c\u0069\u0070\u0073\u0065":
		*_fgbef = 35
	case "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070":
		*_fgbef = 36
	case "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e":
		*_fgbef = 37
	case "\u0063h\u0065\u0076\u0072\u006f\u006e":
		*_fgbef = 38
	case "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065":
		*_fgbef = 39
	case "\u0070\u0069\u0065":
		*_fgbef = 40
	case "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063":
		*_fgbef = 41
	case "\u0064\u006f\u006eu\u0074":
		*_fgbef = 42
	case "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg":
		*_fgbef = 43
	case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 44
	case "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw":
		*_fgbef = 45
	case "\u0075p\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 46
	case "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw":
		*_fgbef = 47
	case "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_fgbef = 48
	case "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_fgbef = 49
	case "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 50
	case "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_fgbef = 51
	case "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 52
	case "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 53
	case "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 54
	case "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw":
		*_fgbef = 55
	case "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fgbef = 56
	case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
		*_fgbef = 57
	case "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
		*_fgbef = 58
	case "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fgbef = 59
	case "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fgbef = 60
	case "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074":
		*_fgbef = 61
	case "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fgbef = 62
	case "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw":
		*_fgbef = 63
	case "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 64
	case "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 65
	case "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077":
		*_fgbef = 66
	case "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077":
		*_fgbef = 67
	case "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 68
	case "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 69
	case "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 70
	case "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 71
	case "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077":
		*_fgbef = 72
	case "\u0063\u0075\u0062\u0065":
		*_fgbef = 73
	case "\u0063\u0061\u006e":
		*_fgbef = 74
	case "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074":
		*_fgbef = 75
	case "\u0068\u0065\u0061r\u0074":
		*_fgbef = 76
	case "\u0073\u0075\u006e":
		*_fgbef = 77
	case "\u006d\u006f\u006f\u006e":
		*_fgbef = 78
	case "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065":
		*_fgbef = 79
	case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031":
		*_fgbef = 80
	case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032":
		*_fgbef = 81
	case "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072":
		*_fgbef = 82
	case "\u0062\u0065\u0076e\u006c":
		*_fgbef = 83
	case "\u0066\u0072\u0061m\u0065":
		*_fgbef = 84
	case "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de":
		*_fgbef = 85
	case "\u0063\u006f\u0072\u006e\u0065\u0072":
		*_fgbef = 86
	case "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065":
		*_fgbef = 87
	case "\u0063\u0068\u006fr\u0064":
		*_fgbef = 88
	case "\u0061\u0072\u0063":
		*_fgbef = 89
	case "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
		*_fgbef = 90
	case "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
		*_fgbef = 91
	case "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e":
		*_fgbef = 92
	case "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065":
		*_fgbef = 93
	case "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072":
		*_fgbef = 94
	case "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r":
		*_fgbef = 95
	case "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031":
		*_fgbef = 96
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032":
		*_fgbef = 97
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033":
		*_fgbef = 98
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034":
		*_fgbef = 99
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035":
		*_fgbef = 100
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032":
		*_fgbef = 101
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033":
		*_fgbef = 102
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034":
		*_fgbef = 103
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035":
		*_fgbef = 104
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031":
		*_fgbef = 105
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032":
		*_fgbef = 106
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033":
		*_fgbef = 107
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
		*_fgbef = 108
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
		*_fgbef = 109
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
		*_fgbef = 110
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
		*_fgbef = 111
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
		*_fgbef = 112
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
		*_fgbef = 113
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031":
		*_fgbef = 114
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032":
		*_fgbef = 115
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033":
		*_fgbef = 116
	case "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fgbef = 117
	case "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fgbef = 118
	case "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fgbef = 119
	case "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_fgbef = 120
	case "\u0063\u006c\u006fu\u0064":
		*_fgbef = 121
	case "\u0072\u0069\u0062\u0062\u006f\u006e":
		*_fgbef = 122
	case "\u0072i\u0062\u0062\u006f\u006e\u0032":
		*_fgbef = 123
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e":
		*_fgbef = 124
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032":
		*_fgbef = 125
	case "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e":
		*_fgbef = 126
	case "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c":
		*_fgbef = 127
	case "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c":
		*_fgbef = 128
	case "\u0077\u0061\u0076\u0065":
		*_fgbef = 129
	case "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065":
		*_fgbef = 130
	case "\u0070\u006c\u0075\u0073":
		*_fgbef = 131
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073":
		*_fgbef = 132
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e":
		*_fgbef = 133
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074":
		*_fgbef = 134
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073":
		*_fgbef = 135
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
		*_fgbef = 136
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074":
		*_fgbef = 137
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074":
		*_fgbef = 138
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072":
		*_fgbef = 139
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e":
		*_fgbef = 140
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074":
		*_fgbef = 141
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e":
		*_fgbef = 142
	case "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072":
		*_fgbef = 143
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064":
		*_fgbef = 144
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065":
		*_fgbef = 145
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e":
		*_fgbef = 146
	case "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072":
		*_fgbef = 147
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065":
		*_fgbef = 148
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074":
		*_fgbef = 149
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074":
		*_fgbef = 150
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065":
		*_fgbef = 151
	case "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
		*_fgbef = 152
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065":
		*_fgbef = 153
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065":
		*_fgbef = 154
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b":
		*_fgbef = 155
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d":
		*_fgbef = 156
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079":
		*_fgbef = 157
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079":
		*_fgbef = 158
	case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s":
		*_fgbef = 159
	case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr":
		*_fgbef = 160
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b":
		*_fgbef = 161
	case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065":
		*_fgbef = 162
	case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070":
		*_fgbef = 163
	case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
		*_fgbef = 164
	case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074":
		*_fgbef = 165
	case "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073":
		*_fgbef = 166
	case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064":
		*_fgbef = 167
	case "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067":
		*_fgbef = 168
	case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e":
		*_fgbef = 169
	case "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074":
		*_fgbef = 170
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064":
		*_fgbef = 171
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065":
		*_fgbef = 172
	case "\u0067\u0065\u0061r\u0036":
		*_fgbef = 173
	case "\u0067\u0065\u0061r\u0039":
		*_fgbef = 174
	case "\u0066\u0075\u006e\u006e\u0065\u006c":
		*_fgbef = 175
	case "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073":
		*_fgbef = 176
	case "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s":
		*_fgbef = 177
	case "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079":
		*_fgbef = 178
	case "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065":
		*_fgbef = 179
	case "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l":
		*_fgbef = 180
	case "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_fgbef = 181
	case "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073":
		*_fgbef = 182
	case "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073":
		*_fgbef = 183
	case "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073":
		*_fgbef = 184
	case "\u0063\u0068\u0061\u0072\u0074\u0058":
		*_fgbef = 185
	case "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r":
		*_fgbef = 186
	case "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s":
		*_fgbef = 187
	}
	return nil
}
func NewThemeManager() *ThemeManager {
	_cgecd := &ThemeManager{}
	_cgecd.CT_EmptyElement = *NewCT_EmptyElement()
	return _cgecd
}
func (_cgf *CT_AlphaInverseEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bbc:
	for {
		_cfe, _dgd := d.Token()
		if _dgd != nil {
			return _dgd
		}
		switch _ec := _cfe.(type) {
		case _d.StartElement:
			switch _ec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_cgf.ScrgbClr = NewCT_ScRgbColor()
				if _abc := d.DecodeElement(_cgf.ScrgbClr, &_ec); _abc != nil {
					return _abc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cgf.SrgbClr = NewCT_SRgbColor()
				if _fda := d.DecodeElement(_cgf.SrgbClr, &_ec); _fda != nil {
					return _fda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_cgf.HslClr = NewCT_HslColor()
				if _ffed := d.DecodeElement(_cgf.HslClr, &_ec); _ffed != nil {
					return _ffed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_cgf.SysClr = NewCT_SystemColor()
				if _aaae := d.DecodeElement(_cgf.SysClr, &_ec); _aaae != nil {
					return _aaae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cgf.SchemeClr = NewCT_SchemeColor()
				if _cfcb := d.DecodeElement(_cgf.SchemeClr, &_ec); _cfcb != nil {
					return _cfcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_cgf.PrstClr = NewCT_PresetColor()
				if _cdf := d.DecodeElement(_cgf.PrstClr, &_ec); _cdf != nil {
					return _cdf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _ec.Name)
				if _ggbe := d.Skip(); _ggbe != nil {
					return _ggbe
				}
			}
		case _d.EndElement:
			break _bbc
		case _d.CharData:
		}
	}
	return nil
}
func (_fgffda ST_SchemeColorVal) String() string {
	switch _fgffda {
	case 0:
		return ""
	case 1:
		return "\u0062\u0067\u0031"
	case 2:
		return "\u0074\u0078\u0031"
	case 3:
		return "\u0062\u0067\u0032"
	case 4:
		return "\u0074\u0078\u0032"
	case 5:
		return "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case 6:
		return "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case 7:
		return "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case 8:
		return "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case 9:
		return "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case 10:
		return "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case 11:
		return "\u0068\u006c\u0069n\u006b"
	case 12:
		return "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	case 13:
		return "\u0070\u0068\u0043l\u0072"
	case 14:
		return "\u0064\u006b\u0031"
	case 15:
		return "\u006c\u0074\u0031"
	case 16:
		return "\u0064\u006b\u0032"
	case 17:
		return "\u006c\u0074\u0032"
	}
	return ""
}
func NewCT_DefaultShapeDefinition() *CT_DefaultShapeDefinition {
	_gbfgd := &CT_DefaultShapeDefinition{}
	_gbfgd.SpPr = NewCT_ShapeProperties()
	_gbfgd.BodyPr = NewCT_TextBodyProperties()
	_gbfgd.LstStyle = NewCT_TextListStyle()
	return _gbfgd
}
func NewCT_EffectContainer() *CT_EffectContainer { _fbaa := &CT_EffectContainer{}; return _fbaa }

// Validate validates the CT_InverseGammaTransform and its children
func (_bbbe *CT_InverseGammaTransform) Validate() error {
	return _bbbe.ValidateWithPath("\u0043T\u005f\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0047\u0061\u006dm\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}
func (_ccgbc ST_ColorSchemeIndex) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ccgbc.String(), start)
}

type CT_TextUnderlineFillFollowText struct{}

// ValidateWithPath validates the CT_GeomGuideList and its children, prefixing error messages with path
func (_bced *CT_GeomGuideList) ValidateWithPath(path string) error {
	for _cfafb, _fdff := range _bced.Gd {
		if _ebfd := _fdff.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0047\u0064\u005b\u0025\u0064]", path, _cfafb)); _ebfd != nil {
			return _ebfd
		}
	}
	return nil
}
func (_efbaa ST_PresetPatternVal) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_faeaf := _d.Attr{}
	_faeaf.Name = name
	switch _efbaa {
	case ST_PresetPatternValUnset:
		_faeaf.Value = ""
	case ST_PresetPatternValPct5:
		_faeaf.Value = "\u0070\u0063\u0074\u0035"
	case ST_PresetPatternValPct10:
		_faeaf.Value = "\u0070\u0063\u00741\u0030"
	case ST_PresetPatternValPct20:
		_faeaf.Value = "\u0070\u0063\u00742\u0030"
	case ST_PresetPatternValPct25:
		_faeaf.Value = "\u0070\u0063\u00742\u0035"
	case ST_PresetPatternValPct30:
		_faeaf.Value = "\u0070\u0063\u00743\u0030"
	case ST_PresetPatternValPct40:
		_faeaf.Value = "\u0070\u0063\u00744\u0030"
	case ST_PresetPatternValPct50:
		_faeaf.Value = "\u0070\u0063\u00745\u0030"
	case ST_PresetPatternValPct60:
		_faeaf.Value = "\u0070\u0063\u00746\u0030"
	case ST_PresetPatternValPct70:
		_faeaf.Value = "\u0070\u0063\u00747\u0030"
	case ST_PresetPatternValPct75:
		_faeaf.Value = "\u0070\u0063\u00747\u0035"
	case ST_PresetPatternValPct80:
		_faeaf.Value = "\u0070\u0063\u00748\u0030"
	case ST_PresetPatternValPct90:
		_faeaf.Value = "\u0070\u0063\u00749\u0030"
	case ST_PresetPatternValHorz:
		_faeaf.Value = "\u0068\u006f\u0072\u007a"
	case ST_PresetPatternValVert:
		_faeaf.Value = "\u0076\u0065\u0072\u0074"
	case ST_PresetPatternValLtHorz:
		_faeaf.Value = "\u006c\u0074\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValLtVert:
		_faeaf.Value = "\u006c\u0074\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValDkHorz:
		_faeaf.Value = "\u0064\u006b\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValDkVert:
		_faeaf.Value = "\u0064\u006b\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValNarHorz:
		_faeaf.Value = "\u006ea\u0072\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValNarVert:
		_faeaf.Value = "\u006ea\u0072\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValDashHorz:
		_faeaf.Value = "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValDashVert:
		_faeaf.Value = "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValCross:
		_faeaf.Value = "\u0063\u0072\u006fs\u0073"
	case ST_PresetPatternValDnDiag:
		_faeaf.Value = "\u0064\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValUpDiag:
		_faeaf.Value = "\u0075\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValLtDnDiag:
		_faeaf.Value = "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValLtUpDiag:
		_faeaf.Value = "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDkDnDiag:
		_faeaf.Value = "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDkUpDiag:
		_faeaf.Value = "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValWdDnDiag:
		_faeaf.Value = "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValWdUpDiag:
		_faeaf.Value = "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDashDnDiag:
		_faeaf.Value = "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDashUpDiag:
		_faeaf.Value = "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDiagCross:
		_faeaf.Value = "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s"
	case ST_PresetPatternValSmCheck:
		_faeaf.Value = "\u0073m\u0043\u0068\u0065\u0063\u006b"
	case ST_PresetPatternValLgCheck:
		_faeaf.Value = "\u006cg\u0043\u0068\u0065\u0063\u006b"
	case ST_PresetPatternValSmGrid:
		_faeaf.Value = "\u0073\u006d\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValLgGrid:
		_faeaf.Value = "\u006c\u0067\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValDotGrid:
		_faeaf.Value = "\u0064o\u0074\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValSmConfetti:
		_faeaf.Value = "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case ST_PresetPatternValLgConfetti:
		_faeaf.Value = "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case ST_PresetPatternValHorzBrick:
		_faeaf.Value = "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k"
	case ST_PresetPatternValDiagBrick:
		_faeaf.Value = "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k"
	case ST_PresetPatternValSolidDmnd:
		_faeaf.Value = "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed"
	case ST_PresetPatternValOpenDmnd:
		_faeaf.Value = "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064"
	case ST_PresetPatternValDotDmnd:
		_faeaf.Value = "\u0064o\u0074\u0044\u006d\u006e\u0064"
	case ST_PresetPatternValPlaid:
		_faeaf.Value = "\u0070\u006c\u0061i\u0064"
	case ST_PresetPatternValSphere:
		_faeaf.Value = "\u0073\u0070\u0068\u0065\u0072\u0065"
	case ST_PresetPatternValWeave:
		_faeaf.Value = "\u0077\u0065\u0061v\u0065"
	case ST_PresetPatternValDivot:
		_faeaf.Value = "\u0064\u0069\u0076o\u0074"
	case ST_PresetPatternValShingle:
		_faeaf.Value = "\u0073h\u0069\u006e\u0067\u006c\u0065"
	case ST_PresetPatternValWave:
		_faeaf.Value = "\u0077\u0061\u0076\u0065"
	case ST_PresetPatternValTrellis:
		_faeaf.Value = "\u0074r\u0065\u006c\u006c\u0069\u0073"
	case ST_PresetPatternValZigZag:
		_faeaf.Value = "\u007a\u0069\u0067\u005a\u0061\u0067"
	}
	return _faeaf, nil
}
func (_cddegg ST_TextUnderlineType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cddegg.String(), start)
}
func (_ebae *CT_EffectReference) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eeda := range start.Attr {
		if _eeda.Name.Local == "\u0072\u0065\u0066" {
			_gfaf, _gbc := _eeda.Value, error(nil)
			if _gbc != nil {
				return _gbc
			}
			_ebae.RefAttr = _gfaf
			continue
		}
	}
	for {
		_caag, _debf := d.Token()
		if _debf != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0045\u0066\u0066\u0065\u0063\u0074\u0052e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u003a\u0020\u0025\u0073", _debf)
		}
		if _abec, _bdabc := _caag.(_d.EndElement); _bdabc && _abec.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_SchemeColorVal byte

// ValidateWithPath validates the CT_StretchInfoProperties and its children, prefixing error messages with path
func (_cbdfd *CT_StretchInfoProperties) ValidateWithPath(path string) error {
	if _cbdfd.FillRect != nil {
		if _gafcb := _cbdfd.FillRect.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0052\u0065\u0063t"); _gafcb != nil {
			return _gafcb
		}
	}
	return nil
}
func (_fbdfa *CT_GroupTransform2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbdfa.RotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_fbdfa.RotAttr)})
	}
	if _fbdfa.FlipHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006c\u0069p\u0048"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbdfa.FlipHAttr))})
	}
	if _fbdfa.FlipVAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006c\u0069p\u0056"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbdfa.FlipVAttr))})
	}
	e.EncodeToken(start)
	if _fbdfa.Off != nil {
		_dbdca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006ff\u0066"}}
		e.EncodeElement(_fbdfa.Off, _dbdca)
	}
	if _fbdfa.Ext != nil {
		_aaff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		e.EncodeElement(_fbdfa.Ext, _aaff)
	}
	if _fbdfa.ChOff != nil {
		_fbega := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u0068\u004f\u0066\u0066"}}
		e.EncodeElement(_fbdfa.ChOff, _fbega)
	}
	if _fbdfa.ChExt != nil {
		_dffc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u0068\u0045\u0078\u0074"}}
		e.EncodeElement(_fbdfa.ChExt, _dffc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_ColorMRU() *CT_ColorMRU { _feg := &CT_ColorMRU{}; return _feg }

// ValidateWithPath validates the CT_BlendEffect and its children, prefixing error messages with path
func (_egcb *CT_BlendEffect) ValidateWithPath(path string) error {
	if _egcb.BlendAttr == ST_BlendModeUnset {
		return _dg.Errorf("\u0025\u0073\u002f\u0042\u006c\u0065n\u0064\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _cgag := _egcb.BlendAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064\u0041\u0074\u0074\u0072"); _cgag != nil {
		return _cgag
	}
	if _gadg := _egcb.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _gadg != nil {
		return _gadg
	}
	return nil
}

type CT_InverseTransform struct{}

// Validate validates the CT_FontScheme and its children
func (_eccb *CT_FontScheme) Validate() error {
	return _eccb.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065")
}

// Validate validates the CT_BlipChoice and its children
func (_ccb *CT_BlipChoice) Validate() error {
	return _ccb.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0069\u0070\u0043\u0068\u006f\u0069\u0063\u0065")
}

// ValidateWithPath validates the CT_GrayscaleTransform and its children, prefixing error messages with path
func (_fbag *CT_GrayscaleTransform) ValidateWithPath(path string) error { return nil }
func (_cdcaf *CT_RelativeOffsetEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gecea := range start.Attr {
		if _gecea.Name.Local == "\u0074\u0078" {
			_bffb, _afafe := ParseUnionST_Percentage(_gecea.Value)
			if _afafe != nil {
				return _afafe
			}
			_cdcaf.TxAttr = &_bffb
			continue
		}
		if _gecea.Name.Local == "\u0074\u0079" {
			_eadbb, _baceg := ParseUnionST_Percentage(_gecea.Value)
			if _baceg != nil {
				return _baceg
			}
			_cdcaf.TyAttr = &_eadbb
			continue
		}
	}
	for {
		_bfce, _eagbe := d.Token()
		if _eagbe != nil {
			return _dg.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006ca\u0074\u0069\u0076\u0065\u004f\u0066\u0066s\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020%\u0073", _eagbe)
		}
		if _bgbde, _addfd := _bfce.(_d.EndElement); _addfd && _bgbde.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TextParagraph struct {
	PPr        *CT_TextParagraphProperties
	EG_TextRun []*EG_TextRun
	EndParaRPr *CT_TextCharacterProperties
}

func NewCT_QuickTimeFile() *CT_QuickTimeFile { _cceadb := &CT_QuickTimeFile{}; return _cceadb }

const (
	ST_LineEndWidthUnset ST_LineEndWidth = 0
	ST_LineEndWidthSm    ST_LineEndWidth = 1
	ST_LineEndWidthMed   ST_LineEndWidth = 2
	ST_LineEndWidthLg    ST_LineEndWidth = 3
)

type ST_TextShapeType byte

func (_gcdb *CT_TableCellBorderStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gfbgb:
	for {
		_bgffad, _fefeg := d.Token()
		if _fefeg != nil {
			return _fefeg
		}
		switch _cdbbeg := _bgffad.(type) {
		case _d.StartElement:
			switch _cdbbeg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}:
				_gcdb.Left = NewCT_ThemeableLineStyle()
				if _dbebb := d.DecodeElement(_gcdb.Left, &_cdbbeg); _dbebb != nil {
					return _dbebb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}:
				_gcdb.Right = NewCT_ThemeableLineStyle()
				if _fgfgae := d.DecodeElement(_gcdb.Right, &_cdbbeg); _fgfgae != nil {
					return _fgfgae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}:
				_gcdb.Top = NewCT_ThemeableLineStyle()
				if _ffac := d.DecodeElement(_gcdb.Top, &_cdbbeg); _ffac != nil {
					return _ffac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}:
				_gcdb.Bottom = NewCT_ThemeableLineStyle()
				if _agece := d.DecodeElement(_gcdb.Bottom, &_cdbbeg); _agece != nil {
					return _agece
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0048"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0048"}:
				_gcdb.InsideH = NewCT_ThemeableLineStyle()
				if _afcdb := d.DecodeElement(_gcdb.InsideH, &_cdbbeg); _afcdb != nil {
					return _afcdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0056"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0056"}:
				_gcdb.InsideV = NewCT_ThemeableLineStyle()
				if _dgaf := d.DecodeElement(_gcdb.InsideV, &_cdbbeg); _dgaf != nil {
					return _dgaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006c\u0032b\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006c\u0032b\u0072"}:
				_gcdb.Tl2br = NewCT_ThemeableLineStyle()
				if _abbgb := d.DecodeElement(_gcdb.Tl2br, &_cdbbeg); _abbgb != nil {
					return _abbgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0032b\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0032b\u006c"}:
				_gcdb.Tr2bl = NewCT_ThemeableLineStyle()
				if _fbddaf := d.DecodeElement(_gcdb.Tr2bl, &_cdbbeg); _fbddaf != nil {
					return _fbddaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcdb.ExtLst = NewCT_OfficeArtExtensionList()
				if _effad := d.DecodeElement(_gcdb.ExtLst, &_cdbbeg); _effad != nil {
					return _effad
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006cB\u006f\u0072\u0064\u0065\u0072\u0053t\u0079\u006c\u0065 \u0025\u0076", _cdbbeg.Name)
				if _badbf := d.Skip(); _badbf != nil {
					return _badbf
				}
			}
		case _d.EndElement:
			break _gfbgb
		case _d.CharData:
		}
	}
	return nil
}

type EG_TextRun struct {
	R   *CT_RegularTextRun
	Br  *CT_TextLineBreak
	Fld *CT_TextField
}

// ValidateWithPath validates the CT_AudioCDTime and its children, prefixing error messages with path
func (_fccd *CT_AudioCDTime) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_ConnectionSite and its children
func (_fdad *CT_ConnectionSite) Validate() error {
	return _fdad.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u0053\u0069\u0074\u0065")
}
func (_gbgge *CT_Vector3D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bdcec := range start.Attr {
		if _bdcec.Name.Local == "\u0064\u0078" {
			_gfdef, _effef := ParseUnionST_Coordinate(_bdcec.Value)
			if _effef != nil {
				return _effef
			}
			_gbgge.DxAttr = _gfdef
			continue
		}
		if _bdcec.Name.Local == "\u0064\u0079" {
			_ggaee, _aegbg := ParseUnionST_Coordinate(_bdcec.Value)
			if _aegbg != nil {
				return _aegbg
			}
			_gbgge.DyAttr = _ggaee
			continue
		}
		if _bdcec.Name.Local == "\u0064\u007a" {
			_agba, _acce := ParseUnionST_Coordinate(_bdcec.Value)
			if _acce != nil {
				return _acce
			}
			_gbgge.DzAttr = _agba
			continue
		}
	}
	for {
		_fdffg, _abded := d.Token()
		if _abded != nil {
			return _dg.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044\u003a\u0020\u0025\u0073", _abded)
		}
		if _dcded, _adfdb := _fdffg.(_d.EndElement); _adfdb && _dcded.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlPictureNonVisual and its children, prefixing error messages with path
func (_fabaa *CT_GvmlPictureNonVisual) ValidateWithPath(path string) error {
	if _dddea := _fabaa.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _dddea != nil {
		return _dddea
	}
	if _aafg := _fabaa.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _aafg != nil {
		return _aafg
	}
	return nil
}
func (_cabeg *CT_GvmlUseShapeRectangle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cdgeb *EG_ShadeProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fdcbc:
	for {
		_dgcgc, _degad := d.Token()
		if _degad != nil {
			return _degad
		}
		switch _edgde := _dgcgc.(type) {
		case _d.StartElement:
			switch _edgde.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}:
				_cdgeb.Lin = NewCT_LinearShadeProperties()
				if _aggcc := d.DecodeElement(_cdgeb.Lin, &_edgde); _aggcc != nil {
					return _aggcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_cdgeb.Path = NewCT_PathShadeProperties()
				if _eabgb := d.DecodeElement(_cdgeb.Path, &_edgde); _eabgb != nil {
					return _eabgb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u0061\u0064\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _edgde.Name)
				if _gdedb := d.Skip(); _gdedb != nil {
					return _gdedb
				}
			}
		case _d.EndElement:
			break _fdcbc
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_BaseStyles and its children
func (_geef *CT_BaseStyles) Validate() error {
	return _geef.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073")
}
func (_fdac *CT_OfficeStyleSheet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fdac.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_fdac.NameAttr)})
	}
	e.EncodeToken(start)
	_dcecf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074h\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}}
	e.EncodeElement(_fdac.ThemeElements, _dcecf)
	if _fdac.ObjectDefaults != nil {
		_gefa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003ao\u0062\u006a\u0065c\u0074\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073"}}
		e.EncodeElement(_fdac.ObjectDefaults, _gefa)
	}
	if _fdac.ExtraClrSchemeLst != nil {
		_adfea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078tr\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_fdac.ExtraClrSchemeLst, _adfea)
	}
	if _fdac.CustClrLst != nil {
		_gbea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063u\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}}
		e.EncodeElement(_fdac.CustClrLst, _gbea)
	}
	if _fdac.ExtLst != nil {
		_ddcgc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdac.ExtLst, _ddcgc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fbedg *EG_TextRun) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbedg.R != nil {
		_cfebc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072"}}
		e.EncodeElement(_fbedg.R, _cfebc)
	}
	if _fbedg.Br != nil {
		_gbcfa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0072"}}
		e.EncodeElement(_fbedg.Br, _gbcfa)
	}
	if _fbedg.Fld != nil {
		_fbbgg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066l\u0064"}}
		e.EncodeElement(_fbedg.Fld, _fbbgg)
	}
	return nil
}

type Graphic struct{ CT_GraphicalObject }
type CT_TablePartStyle struct {
	TcTxStyle *CT_TableStyleTextStyle
	TcStyle   *CT_TableStyleCellStyle
}

// ValidateWithPath validates the CT_ColorChangeEffect and its children, prefixing error messages with path
func (_ffbf *CT_ColorChangeEffect) ValidateWithPath(path string) error {
	if _ggad := _ffbf.ClrFrom.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0046\u0072\u006f\u006d"); _ggad != nil {
		return _ggad
	}
	if _fbdd := _ffbf.ClrTo.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0054\u006f"); _fbdd != nil {
		return _fbdd
	}
	return nil
}

type ST_TextAutonumberScheme byte

func (_aeada *CT_Percentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _dg.Sprintf("\u0025\u0076", _aeada.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cfgdg ST_LineEndType) Validate() error { return _cfgdg.ValidateWithPath("") }

// Validate validates the CT_TextTabStopList and its children
func (_bgee *CT_TextTabStopList) Validate() error {
	return _bgee.ValidateWithPath("\u0043T\u005fT\u0065\u0078\u0074\u0054\u0061b\u0053\u0074o\u0070\u004c\u0069\u0073\u0074")
}

type CT_PositiveSize2D struct {
	CxAttr int64
	CyAttr int64
}

func (_ccbb *CT_Table) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ccbb.TblPr != nil {
		_dgfbd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0062\u006c\u0050\u0072"}}
		e.EncodeElement(_ccbb.TblPr, _dgfbd)
	}
	_cbdgb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0062\u006c\u0047\u0072\u0069d"}}
	e.EncodeElement(_ccbb.TblGrid, _cbdgb)
	if _ccbb.Tr != nil {
		_cfcgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0072"}}
		for _, _adgdd := range _ccbb.Tr {
			e.EncodeElement(_adgdd, _cfcgb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_EffectStyleList() *CT_EffectStyleList { _adacd := &CT_EffectStyleList{}; return _adacd }

// ValidateWithPath validates the EG_EffectProperties and its children, prefixing error messages with path
func (_gfcg *EG_EffectProperties) ValidateWithPath(path string) error {
	if _gfcg.EffectLst != nil {
		if _ddeef := _gfcg.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _ddeef != nil {
			return _ddeef
		}
	}
	if _gfcg.EffectDag != nil {
		if _efedb := _gfcg.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _efedb != nil {
			return _efedb
		}
	}
	return nil
}
func (_gbfde *ST_AnimationDgmOnlyBuildType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gbfde = 0
	case "\u006f\u006e\u0065":
		*_gbfde = 1
	case "\u006c\u0076\u006c\u004f\u006e\u0065":
		*_gbfde = 2
	case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_gbfde = 3
	}
	return nil
}
func NewThemeOverride() *ThemeOverride {
	_edaegd := &ThemeOverride{}
	_edaegd.CT_BaseStylesOverride = *NewCT_BaseStylesOverride()
	return _edaegd
}
func (_gcgef *EG_LineDashProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cabggb:
	for {
		_eegff, _dacac := d.Token()
		if _dacac != nil {
			return _dacac
		}
		switch _eggga := _eegff.(type) {
		case _d.StartElement:
			switch _eggga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_gcgef.PrstDash = NewCT_PresetLineDashProperties()
				if _daadeb := d.DecodeElement(_gcgef.PrstDash, &_eggga); _daadeb != nil {
					return _daadeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_gcgef.CustDash = NewCT_DashStopList()
				if _febagf := d.DecodeElement(_gcgef.CustDash, &_eggga); _febagf != nil {
					return _febagf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _eggga.Name)
				if _daffae := d.Skip(); _daffae != nil {
					return _daffae
				}
			}
		case _d.EndElement:
			break _cabggb
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextParagraphProperties and its children
func (_bdfgd *CT_TextParagraphProperties) Validate() error {
	return _bdfgd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061g\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}
func (_cabggd ST_PresetLineDashVal) Validate() error { return _cabggd.ValidateWithPath("") }

// ValidateWithPath validates the CT_LightRig and its children, prefixing error messages with path
func (_aafaf *CT_LightRig) ValidateWithPath(path string) error {
	if _aafaf.RigAttr == ST_LightRigTypeUnset {
		return _dg.Errorf("\u0025\u0073\u002fR\u0069\u0067\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gagba := _aafaf.RigAttr.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0041\u0074\u0074\u0072"); _gagba != nil {
		return _gagba
	}
	if _aafaf.DirAttr == ST_LightRigDirectionUnset {
		return _dg.Errorf("\u0025\u0073\u002fD\u0069\u0072\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gcad := _aafaf.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _gcad != nil {
		return _gcad
	}
	if _aafaf.Rot != nil {
		if _ecad := _aafaf.Rot.ValidateWithPath(path + "\u002f\u0052\u006f\u0074"); _ecad != nil {
			return _ecad
		}
	}
	return nil
}
func NewEG_Effect() *EG_Effect   { _fgfda := &EG_Effect{}; return _fgfda }
func NewEG_TextRun() *EG_TextRun { _caegf := &EG_TextRun{}; return _caegf }

const (
	ST_LineCapUnset ST_LineCap = 0
	ST_LineCapRnd   ST_LineCap = 1
	ST_LineCapSq    ST_LineCap = 2
	ST_LineCapFlat  ST_LineCap = 3
)

type CT_AdjustHandleList struct {
	AhXY    []*CT_XYAdjustHandle
	AhPolar []*CT_PolarAdjustHandle
}
type EG_ThemeableEffectStyle struct {
	Effect    *CT_EffectProperties
	EffectRef *CT_StyleMatrixReference
}

// ValidateWithPath validates the CT_Percentage and its children, prefixing error messages with path
func (_bggfg *CT_Percentage) ValidateWithPath(path string) error {
	if _gfbf := _bggfg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gfbf != nil {
		return _gfbf
	}
	return nil
}
func (_fabgca *ST_AnimationChartOnlyBuildType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fabgca = 0
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_fabgca = 1
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_fabgca = 2
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		*_fabgca = 3
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		*_fabgca = 4
	}
	return nil
}
func (_gdegd *CT_SupplementalFont) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gbefb := range start.Attr {
		if _gbefb.Name.Local == "\u0073\u0063\u0072\u0069\u0070\u0074" {
			_faafa, _caaf := _gbefb.Value, error(nil)
			if _caaf != nil {
				return _caaf
			}
			_gdegd.ScriptAttr = _faafa
			continue
		}
		if _gbefb.Name.Local == "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065" {
			_bgcbe, _aadba := _gbefb.Value, error(nil)
			if _aadba != nil {
				return _aadba
			}
			_gdegd.TypefaceAttr = _bgcbe
			continue
		}
	}
	for {
		_fcab, _gfgde := d.Token()
		if _gfgde != nil {
			return _dg.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0053\u0075\u0070\u0070\u006ce\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074\u003a\u0020\u0025\u0073", _gfgde)
		}
		if _aabdd, _dgbge := _fcab.(_d.EndElement); _dgbge && _aabdd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ffbfeb ST_TextStrikeType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ffbfeb.String(), start)
}
func (_ebegdb *EG_TextBullet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eafef:
	for {
		_acbda, _cgefa := d.Token()
		if _cgefa != nil {
			return _cgefa
		}
		switch _ebeff := _acbda.(type) {
		case _d.StartElement:
			switch _ebeff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}:
				_ebegdb.BuNone = NewCT_TextNoBullet()
				if _fedbf := d.DecodeElement(_ebegdb.BuNone, &_ebeff); _fedbf != nil {
					return _fedbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}:
				_ebegdb.BuAutoNum = NewCT_TextAutonumberBullet()
				if _bddba := d.DecodeElement(_ebegdb.BuAutoNum, &_ebeff); _bddba != nil {
					return _bddba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}:
				_ebegdb.BuChar = NewCT_TextCharBullet()
				if _gfbfe := d.DecodeElement(_ebegdb.BuChar, &_ebeff); _gfbfe != nil {
					return _gfbfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}:
				_ebegdb.BuBlip = NewCT_TextBlipBullet()
				if _ddbea := d.DecodeElement(_ebegdb.BuBlip, &_ebeff); _ddbea != nil {
					return _ddbea
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074 \u0025\u0076", _ebeff.Name)
				if _bgeag := d.Skip(); _bgeag != nil {
					return _bgeag
				}
			}
		case _d.EndElement:
			break _eafef
		case _d.CharData:
		}
	}
	return nil
}

type CT_FillStyleList struct{ EG_FillProperties []*EG_FillProperties }

// Validate validates the CT_TextBulletSizePoint and its children
func (_adggf *CT_TextBulletSizePoint) Validate() error {
	return _adggf.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0050\u006f\u0069n\u0074")
}
func ParseUnionST_OnOff(s string) (_fe.ST_OnOff, error) { return _fe.ST_OnOff{}, nil }
func (_bea *CT_AnimationChartBuildProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ggdf := range start.Attr {
		if _ggdf.Name.Local == "\u0062\u006c\u0064" {
			_abdd, _dcef := ParseUnionST_AnimationChartBuildType(_ggdf.Value)
			if _dcef != nil {
				return _dcef
			}
			_bea.BldAttr = &_abdd
			continue
		}
		if _ggdf.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_cef, _ecc := _c.ParseBool(_ggdf.Value)
			if _ecc != nil {
				return _ecc
			}
			_bea.AnimBgAttr = &_cef
			continue
		}
	}
	for {
		_eag, _bfg := d.Token()
		if _bfg != nil {
			return _dg.Errorf("\u0070a\u0072\u0073i\u006e\u0067\u0020\u0043T\u005f\u0041\u006ei\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061rt\u0042\u0075\u0069l\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069e\u0073\u003a \u0025\u0073", _bfg)
		}
		if _fgg, _fgc := _eag.(_d.EndElement); _fgc && _fgg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_GroupFillProperties and its children
func (_bdca *CT_GroupFillProperties) Validate() error {
	return _bdca.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}
func NewCT_EffectStyleItem() *CT_EffectStyleItem { _gaceb := &CT_EffectStyleItem{}; return _gaceb }

// ValidateWithPath validates the CT_BaseStylesOverride and its children, prefixing error messages with path
func (_gcd *CT_BaseStylesOverride) ValidateWithPath(path string) error {
	if _gcd.ClrScheme != nil {
		if _afbf := _gcd.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _afbf != nil {
			return _afbf
		}
	}
	if _gcd.FontScheme != nil {
		if _gffc := _gcd.FontScheme.ValidateWithPath(path + "/\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _gffc != nil {
			return _gffc
		}
	}
	if _gcd.FmtScheme != nil {
		if _eade := _gcd.FmtScheme.ValidateWithPath(path + "\u002f\u0046\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _eade != nil {
			return _eade
		}
	}
	return nil
}
func NewCT_TextSpacing() *CT_TextSpacing { _fbgaf := &CT_TextSpacing{}; return _fbgaf }
func ParseUnionST_Coordinate(s string) (ST_Coordinate, error) {
	_dddeb := ST_Coordinate{}
	if _fe.ST_UniversalMeasurePatternRe.MatchString(s) {
		_dddeb.ST_UniversalMeasure = &s
	} else {
		_cabbg, _edgaf := _c.ParseInt(s, 10, 64)
		if _edgaf != nil {
			return _dddeb, _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _edgaf)
		}
		_dddeb.ST_CoordinateUnqualified = &_cabbg
	}
	return _dddeb, nil
}

// Validate validates the ThemeManager and its children
func (_fdecf *ThemeManager) Validate() error {
	return _fdecf.ValidateWithPath("\u0054\u0068\u0065m\u0065\u004d\u0061\u006e\u0061\u0067\u0065\u0072")
}
func (_bfbdc *ST_TextBulletSize) Validate() error { return _bfbdc.ValidateWithPath("") }

type CT_TextListStyle struct {
	DefPPr  *CT_TextParagraphProperties
	Lvl1pPr *CT_TextParagraphProperties
	Lvl2pPr *CT_TextParagraphProperties
	Lvl3pPr *CT_TextParagraphProperties
	Lvl4pPr *CT_TextParagraphProperties
	Lvl5pPr *CT_TextParagraphProperties
	Lvl6pPr *CT_TextParagraphProperties
	Lvl7pPr *CT_TextParagraphProperties
	Lvl8pPr *CT_TextParagraphProperties
	Lvl9pPr *CT_TextParagraphProperties
	ExtLst  *CT_OfficeArtExtensionList
}

// Validate validates the CT_ColorMappingOverride and its children
func (_bfed *CT_ColorMappingOverride) Validate() error {
	return _bfed.ValidateWithPath("\u0043\u0054\u005fCo\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065")
}
func NewCT_PictureLocking() *CT_PictureLocking { _cgdbc := &CT_PictureLocking{}; return _cgdbc }
func NewCT_BaseStyles() *CT_BaseStyles {
	_bafgb := &CT_BaseStyles{}
	_bafgb.ClrScheme = NewCT_ColorScheme()
	_bafgb.FontScheme = NewCT_FontScheme()
	_bafgb.FmtScheme = NewCT_StyleMatrix()
	return _bafgb
}

type CT_TextParagraphProperties struct {
	MarLAttr         *int32
	MarRAttr         *int32
	LvlAttr          *int32
	IndentAttr       *int32
	AlgnAttr         ST_TextAlignType
	DefTabSzAttr     *ST_Coordinate32
	RtlAttr          *bool
	EaLnBrkAttr      *bool
	FontAlgnAttr     ST_TextFontAlignType
	LatinLnBrkAttr   *bool
	HangingPunctAttr *bool
	LnSpc            *CT_TextSpacing
	SpcBef           *CT_TextSpacing
	SpcAft           *CT_TextSpacing
	BuClrTx          *CT_TextBulletColorFollowText
	BuClr            *CT_Color
	BuSzTx           *CT_TextBulletSizeFollowText
	BuSzPct          *CT_TextBulletSizePercent
	BuSzPts          *CT_TextBulletSizePoint
	BuFontTx         *CT_TextBulletTypefaceFollowText
	BuFont           *CT_TextFont
	BuNone           *CT_TextNoBullet
	BuAutoNum        *CT_TextAutonumberBullet
	BuChar           *CT_TextCharBullet
	BuBlip           *CT_TextBlipBullet
	TabLst           *CT_TextTabStopList
	DefRPr           *CT_TextCharacterProperties
	ExtLst           *CT_OfficeArtExtensionList
}

func (_ffdf *CT_Camera) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_edggf, _ddcdd := _ffdf.PrstAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _ddcdd != nil {
		return _ddcdd
	}
	start.Attr = append(start.Attr, _edggf)
	if _ffdf.FovAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006f\u0076"}, Value: _dg.Sprintf("\u0025\u0076", *_ffdf.FovAttr)})
	}
	if _ffdf.ZoomAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u007a\u006f\u006f\u006d"}, Value: _dg.Sprintf("\u0025\u0076", *_ffdf.ZoomAttr)})
	}
	e.EncodeToken(start)
	if _ffdf.Rot != nil {
		_gacdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072o\u0074"}}
		e.EncodeElement(_ffdf.Rot, _gacdc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_BlendEffect struct {
	BlendAttr ST_BlendMode
	Cont      *CT_EffectContainer
}

func (_deda *CT_GroupShapeProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _deda.BwModeAttr != ST_BlackWhiteModeUnset {
		_fbcg, _bfgad := _deda.BwModeAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _bfgad != nil {
			return _bfgad
		}
		start.Attr = append(start.Attr, _fbcg)
	}
	e.EncodeToken(start)
	if _deda.Xfrm != nil {
		_fcba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_deda.Xfrm, _fcba)
	}
	if _deda.NoFill != nil {
		_ecbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_deda.NoFill, _ecbc)
	}
	if _deda.SolidFill != nil {
		_edbc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_deda.SolidFill, _edbc)
	}
	if _deda.GradFill != nil {
		_edebb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_deda.GradFill, _edebb)
	}
	if _deda.BlipFill != nil {
		_fbcce := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_deda.BlipFill, _fbcce)
	}
	if _deda.PattFill != nil {
		_cdcde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_deda.PattFill, _cdcde)
	}
	if _deda.GrpFill != nil {
		_dead := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_deda.GrpFill, _dead)
	}
	if _deda.EffectLst != nil {
		_gacdg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_deda.EffectLst, _gacdg)
	}
	if _deda.EffectDag != nil {
		_eeef := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_deda.EffectDag, _eeef)
	}
	if _deda.Scene3d != nil {
		_fcbc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_deda.Scene3d, _fcbc)
	}
	if _deda.ExtLst != nil {
		_aagc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_deda.ExtLst, _aagc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_afafc ST_ShapeType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_afafc.String(), start)
}
func NewCT_GlowEffect() *CT_GlowEffect { _dacef := &CT_GlowEffect{}; return _dacef }

// ValidateWithPath validates the CT_GroupLocking and its children, prefixing error messages with path
func (_eecfe *CT_GroupLocking) ValidateWithPath(path string) error {
	if _eecfe.ExtLst != nil {
		if _affff := _eecfe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _affff != nil {
			return _affff
		}
	}
	return nil
}
func (_dgafa ST_TextSpacingPercentOrPercentString) String() string {
	if _dgafa.ST_TextSpacingPercent != nil {
		return _dg.Sprintf("\u0025\u0076", *_dgafa.ST_TextSpacingPercent)
	}
	if _dgafa.ST_Percentage != nil {
		return _dg.Sprintf("\u0025\u0076", *_dgafa.ST_Percentage)
	}
	return ""
}
func (_efdd *CT_CustomColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gcddb := range start.Attr {
		if _gcddb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gbac, _cbgg := _gcddb.Value, error(nil)
			if _cbgg != nil {
				return _cbgg
			}
			_efdd.NameAttr = &_gbac
			continue
		}
	}
_fcbb:
	for {
		_gcfg, _dfdcc := d.Token()
		if _dfdcc != nil {
			return _dfdcc
		}
		switch _begd := _gcfg.(type) {
		case _d.StartElement:
			switch _begd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_efdd.ScrgbClr = NewCT_ScRgbColor()
				if _efde := d.DecodeElement(_efdd.ScrgbClr, &_begd); _efde != nil {
					return _efde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_efdd.SrgbClr = NewCT_SRgbColor()
				if _edccg := d.DecodeElement(_efdd.SrgbClr, &_begd); _edccg != nil {
					return _edccg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_efdd.HslClr = NewCT_HslColor()
				if _fdceb := d.DecodeElement(_efdd.HslClr, &_begd); _fdceb != nil {
					return _fdceb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_efdd.SysClr = NewCT_SystemColor()
				if _cgaa := d.DecodeElement(_efdd.SysClr, &_begd); _cgaa != nil {
					return _cgaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_efdd.SchemeClr = NewCT_SchemeColor()
				if _degda := d.DecodeElement(_efdd.SchemeClr, &_begd); _degda != nil {
					return _degda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_efdd.PrstClr = NewCT_PresetColor()
				if _ffdgd := d.DecodeElement(_efdd.PrstClr, &_begd); _ffdgd != nil {
					return _ffdgd
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043o\u006co\u0072\u0020\u0025\u0076", _begd.Name)
				if _ccc := d.Skip(); _ccc != nil {
					return _ccc
				}
			}
		case _d.EndElement:
			break _fcbb
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_FontCollection() *CT_FontCollection {
	_ageae := &CT_FontCollection{}
	_ageae.Latin = NewCT_TextFont()
	_ageae.Ea = NewCT_TextFont()
	_ageae.Cs = NewCT_TextFont()
	return _ageae
}

// ValidateWithPath validates the CT_TableRow and its children, prefixing error messages with path
func (_dbdbb *CT_TableRow) ValidateWithPath(path string) error {
	if _eagge := _dbdbb.HAttr.ValidateWithPath(path + "\u002f\u0048\u0041\u0074\u0074\u0072"); _eagge != nil {
		return _eagge
	}
	for _agfdf, _gbgdb := range _dbdbb.Tc {
		if _aabdaae := _gbgdb.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0054\u0063\u005b\u0025\u0064]", path, _agfdf)); _aabdaae != nil {
			return _aabdaae
		}
	}
	if _dbdbb.ExtLst != nil {
		if _abeaf := _dbdbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abeaf != nil {
			return _abeaf
		}
	}
	return nil
}

// Validate validates the CT_AlphaCeilingEffect and its children
func (_faf *CT_AlphaCeilingEffect) Validate() error {
	return _faf.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061C\u0065\u0069\u006c\u0069\u006eg\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_dagee ST_LineCap) Validate() error { return _dagee.ValidateWithPath("") }
func (_dfdgd ST_EffectContainerType) String() string {
	switch _dfdgd {
	case 0:
		return ""
	case 1:
		return "\u0073\u0069\u0062"
	case 2:
		return "\u0074\u0072\u0065\u0065"
	}
	return ""
}
func (_feeag *CT_SolidColorFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _feeag.ScrgbClr != nil {
		_bbfgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_feeag.ScrgbClr, _bbfgd)
	}
	if _feeag.SrgbClr != nil {
		_cbfec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_feeag.SrgbClr, _cbfec)
	}
	if _feeag.HslClr != nil {
		_ccdbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_feeag.HslClr, _ccdbf)
	}
	if _feeag.SysClr != nil {
		_bacfd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_feeag.SysClr, _bacfd)
	}
	if _feeag.SchemeClr != nil {
		_acbgf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_feeag.SchemeClr, _acbgf)
	}
	if _feeag.PrstClr != nil {
		_ebega := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_feeag.PrstClr, _ebega)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_deegg *CT_TextParagraph) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _deegg.PPr != nil {
		_faace := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070P\u0072"}}
		e.EncodeElement(_deegg.PPr, _faace)
	}
	if _deegg.EG_TextRun != nil {
		for _, _becff := range _deegg.EG_TextRun {
			_becff.MarshalXML(e, _d.StartElement{})
		}
	}
	if _deegg.EndParaRPr != nil {
		_gdggg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065n\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}}
		e.EncodeElement(_deegg.EndParaRPr, _gdggg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextBodyProperties and its children
func (_aeecfd *CT_TextBodyProperties) Validate() error {
	return _aeecfd.ValidateWithPath("C\u0054\u005f\u0054\u0065xt\u0042o\u0064\u0079\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_CustomColorList and its children, prefixing error messages with path
func (_edbd *CT_CustomColorList) ValidateWithPath(path string) error {
	for _cdfg, _begbc := range _edbd.CustClr {
		if _aggda := _begbc.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0043\u0075\u0073\u0074\u0043\u006cr\u005b\u0025\u0064\u005d", path, _cdfg)); _aggda != nil {
			return _aggda
		}
	}
	return nil
}
func (_bafgbg *CT_Point3D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _faee := range start.Attr {
		if _faee.Name.Local == "\u0078" {
			_babaf, _daaf := ParseUnionST_Coordinate(_faee.Value)
			if _daaf != nil {
				return _daaf
			}
			_bafgbg.XAttr = _babaf
			continue
		}
		if _faee.Name.Local == "\u0079" {
			_adgfa, _fffgg := ParseUnionST_Coordinate(_faee.Value)
			if _fffgg != nil {
				return _fffgg
			}
			_bafgbg.YAttr = _adgfa
			continue
		}
		if _faee.Name.Local == "\u007a" {
			_eccgg, _dacaa := ParseUnionST_Coordinate(_faee.Value)
			if _dacaa != nil {
				return _dacaa
			}
			_bafgbg.ZAttr = _eccgg
			continue
		}
	}
	for {
		_dgcd, _gedec := d.Token()
		if _gedec != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044\u003a\u0020%\u0073", _gedec)
		}
		if _dacaaf, _ffcfc := _dgcd.(_d.EndElement); _ffcfc && _dacaaf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aaegeb *CT_TextBody) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aaegeb.BodyPr = NewCT_TextBodyProperties()
_gbbbd:
	for {
		_bdaff, _dddad := d.Token()
		if _dddad != nil {
			return _dddad
		}
		switch _ddcee := _bdaff.(type) {
		case _d.StartElement:
			switch _ddcee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}:
				if _bcade := d.DecodeElement(_aaegeb.BodyPr, &_ddcee); _bcade != nil {
					return _bcade
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_aaegeb.LstStyle = NewCT_TextListStyle()
				if _gbdbc := d.DecodeElement(_aaegeb.LstStyle, &_ddcee); _gbdbc != nil {
					return _gbdbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}:
				_aaaba := NewCT_TextParagraph()
				if _gddgg := d.DecodeElement(_aaaba, &_ddcee); _gddgg != nil {
					return _gddgg
				}
				_aaegeb.P = append(_aaegeb.P, _aaaba)
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079\u0020\u0025\u0076", _ddcee.Name)
				if _feacd := d.Skip(); _feacd != nil {
					return _feacd
				}
			}
		case _d.EndElement:
			break _gbbbd
		case _d.CharData:
		}
	}
	return nil
}
func (_efgc *ST_PresetLineDashVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gggca, _abcfd := d.Token()
	if _abcfd != nil {
		return _abcfd
	}
	if _fcgcd, _feeecd := _gggca.(_d.EndElement); _feeecd && _fcgcd.Name == start.Name {
		*_efgc = 1
		return nil
	}
	if _dcgga, _aacba := _gggca.(_d.CharData); !_aacba {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gggca)
	} else {
		switch string(_dcgga) {
		case "":
			*_efgc = 0
		case "\u0073\u006f\u006ci\u0064":
			*_efgc = 1
		case "\u0064\u006f\u0074":
			*_efgc = 2
		case "\u0064\u0061\u0073\u0068":
			*_efgc = 3
		case "\u006c\u0067\u0044\u0061\u0073\u0068":
			*_efgc = 4
		case "\u0064a\u0073\u0068\u0044\u006f\u0074":
			*_efgc = 5
		case "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft":
			*_efgc = 6
		case "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_efgc = 7
		case "\u0073y\u0073\u0044\u0061\u0073\u0068":
			*_efgc = 8
		case "\u0073\u0079\u0073\u0044\u006f\u0074":
			*_efgc = 9
		case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_efgc = 10
		case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_efgc = 11
		}
	}
	_gggca, _abcfd = d.Token()
	if _abcfd != nil {
		return _abcfd
	}
	if _dddgb, _fbbag := _gggca.(_d.EndElement); _fbbag && _dddgb.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gggca)
}
func NewCT_RelativeRect() *CT_RelativeRect { _cbece := &CT_RelativeRect{}; return _cbece }

// ValidateWithPath validates the CT_AlphaFloorEffect and its children, prefixing error messages with path
func (_cfc *CT_AlphaFloorEffect) ValidateWithPath(path string) error { return nil }
func (_gdbfae ST_TextShapeType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gdbfae.String(), start)
}

// Validate validates the CT_TextUnderlineFillGroupWrapper and its children
func (_bcagd *CT_TextUnderlineFillGroupWrapper) Validate() error {
	return _bcagd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0046i\u006c\u006c\u0047\u0072\u006f\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065\u0072")
}

// ValidateWithPath validates the AG_Locking and its children, prefixing error messages with path
func (_ea *AG_Locking) ValidateWithPath(path string) error { return nil }
func (_effa *CT_GvmlShapeNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_eedad := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_effa.CNvPr, _eedad)
	_edfcc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u004e\u0076\u0053\u0070\u0050r"}}
	e.EncodeElement(_effa.CNvSpPr, _edfcc)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gbgeb *CT_TextBulletTypefaceFollowText) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_ceegb, _eedade := d.Token()
		if _eedade != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070\u0065\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _eedade)
		}
		if _ecbbf, _fcbcg := _ceegb.(_d.EndElement); _fcbcg && _ecbbf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_TextBodyProperties() *CT_TextBodyProperties {
	_bfgeb := &CT_TextBodyProperties{}
	return _bfgeb
}

type CT_LinearShadeProperties struct {
	AngAttr    *int32
	ScaledAttr *bool
}

// ValidateWithPath validates the CT_BackgroundFillStyleList and its children, prefixing error messages with path
func (_bfgc *CT_BackgroundFillStyleList) ValidateWithPath(path string) error {
	for _gcfb, _acd := range _bfgc.EG_FillProperties {
		if _fceb := _acd.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u005b\u0025\u0064\u005d", path, _gcfb)); _fceb != nil {
			return _fceb
		}
	}
	return nil
}

// Validate validates the CT_OfficeArtExtension and its children
func (_baadd *CT_OfficeArtExtension) Validate() error {
	return _baadd.ValidateWithPath("C\u0054\u005f\u004f\u0066fi\u0063e\u0041\u0072\u0074\u0045\u0078t\u0065\u006e\u0073\u0069\u006f\u006e")
}

// ValidateWithPath validates the EG_Text3D and its children, prefixing error messages with path
func (_affdg *EG_Text3D) ValidateWithPath(path string) error {
	if _affdg.Sp3d != nil {
		if _egcgd := _affdg.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _egcgd != nil {
			return _egcgd
		}
	}
	if _affdg.FlatTx != nil {
		if _dcgd := _affdg.FlatTx.ValidateWithPath(path + "\u002fF\u006c\u0061\u0074\u0054\u0078"); _dcgd != nil {
			return _dcgd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TransformEffect and its children, prefixing error messages with path
func (_eebdag *CT_TransformEffect) ValidateWithPath(path string) error {
	if _eebdag.SxAttr != nil {
		if _cbaaa := _eebdag.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _cbaaa != nil {
			return _cbaaa
		}
	}
	if _eebdag.SyAttr != nil {
		if _gdgdg := _eebdag.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _gdgdg != nil {
			return _gdgdg
		}
	}
	if _eebdag.KxAttr != nil {
		if *_eebdag.KxAttr <= -5400000 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_eebdag.KxAttr)
		}
		if *_eebdag.KxAttr >= 5400000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_eebdag.KxAttr)
		}
	}
	if _eebdag.KyAttr != nil {
		if *_eebdag.KyAttr <= -5400000 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_eebdag.KyAttr)
		}
		if *_eebdag.KyAttr >= 5400000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_eebdag.KyAttr)
		}
	}
	if _eebdag.TxAttr != nil {
		if _gbgcf := _eebdag.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _gbgcf != nil {
			return _gbgcf
		}
	}
	if _eebdag.TyAttr != nil {
		if _ffdc := _eebdag.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _ffdc != nil {
			return _ffdc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorScheme and its children, prefixing error messages with path
func (_ggdc *CT_ColorScheme) ValidateWithPath(path string) error {
	if _afgeb := _ggdc.Dk1.ValidateWithPath(path + "\u002f\u0044\u006b\u0031"); _afgeb != nil {
		return _afgeb
	}
	if _feaf := _ggdc.Lt1.ValidateWithPath(path + "\u002f\u004c\u0074\u0031"); _feaf != nil {
		return _feaf
	}
	if _gadd := _ggdc.Dk2.ValidateWithPath(path + "\u002f\u0044\u006b\u0032"); _gadd != nil {
		return _gadd
	}
	if _cegee := _ggdc.Lt2.ValidateWithPath(path + "\u002f\u004c\u0074\u0032"); _cegee != nil {
		return _cegee
	}
	if _dbfdg := _ggdc.Accent1.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0031"); _dbfdg != nil {
		return _dbfdg
	}
	if _fbbg := _ggdc.Accent2.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0032"); _fbbg != nil {
		return _fbbg
	}
	if _efdc := _ggdc.Accent3.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0033"); _efdc != nil {
		return _efdc
	}
	if _eadg := _ggdc.Accent4.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0034"); _eadg != nil {
		return _eadg
	}
	if _afed := _ggdc.Accent5.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0035"); _afed != nil {
		return _afed
	}
	if _bfab := _ggdc.Accent6.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0036"); _bfab != nil {
		return _bfab
	}
	if _gce := _ggdc.Hlink.ValidateWithPath(path + "\u002f\u0048\u006c\u0069\u006e\u006b"); _gce != nil {
		return _gce
	}
	if _dfccc := _ggdc.FolHlink.ValidateWithPath(path + "\u002fF\u006f\u006c\u0048\u006c\u0069\u006ek"); _dfccc != nil {
		return _dfccc
	}
	if _ggdc.ExtLst != nil {
		if _bbfe := _ggdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbfe != nil {
			return _bbfe
		}
	}
	return nil
}

type CT_TextNoBullet struct{}

func (_adfb *CT_NoFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_ClipboardStyleSheet() *CT_ClipboardStyleSheet {
	_eccga := &CT_ClipboardStyleSheet{}
	_eccga.ThemeElements = NewCT_BaseStyles()
	_eccga.ClrMap = NewCT_ColorMapping()
	return _eccga
}

type CT_Path2DQuadBezierTo struct{ Pt []*CT_AdjPoint2D }

func ParseUnionST_TextPoint(s string) (ST_TextPoint, error) {
	_addadg := ST_TextPoint{}
	if _fe.ST_UniversalMeasurePatternRe.MatchString(s) {
		_addadg.ST_UniversalMeasure = &s
	} else {
		_gbgac, _badbfa := _c.ParseInt(s, 10, 32)
		if _badbfa != nil {
			return _addadg, _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _badbfa)
		}
		_dfagc := int32(_gbgac)
		_addadg.ST_TextPointUnqualified = &_dfagc
	}
	return _addadg, nil
}

const (
	ST_BlipCompressionUnset   ST_BlipCompression = 0
	ST_BlipCompressionEmail   ST_BlipCompression = 1
	ST_BlipCompressionScreen  ST_BlipCompression = 2
	ST_BlipCompressionPrint   ST_BlipCompression = 3
	ST_BlipCompressionHqprint ST_BlipCompression = 4
	ST_BlipCompressionNone    ST_BlipCompression = 5
)

// ValidateWithPath validates the CT_ReflectionEffect and its children, prefixing error messages with path
func (_dafc *CT_ReflectionEffect) ValidateWithPath(path string) error {
	if _dafc.BlurRadAttr != nil {
		if *_dafc.BlurRadAttr < 0 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dafc.BlurRadAttr)
		}
		if *_dafc.BlurRadAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dafc.BlurRadAttr)
		}
	}
	if _dafc.StAAttr != nil {
		if _cadfc := _dafc.StAAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0041\u0041\u0074\u0074\u0072"); _cadfc != nil {
			return _cadfc
		}
	}
	if _dafc.StPosAttr != nil {
		if _afbfb := _dafc.StPosAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _afbfb != nil {
			return _afbfb
		}
	}
	if _dafc.EndAAttr != nil {
		if _bbcf := _dafc.EndAAttr.ValidateWithPath(path + "\u002fE\u006e\u0064\u0041\u0041\u0074\u0074r"); _bbcf != nil {
			return _bbcf
		}
	}
	if _dafc.EndPosAttr != nil {
		if _cgcf := _dafc.EndPosAttr.ValidateWithPath(path + "/\u0045\u006e\u0064\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _cgcf != nil {
			return _cgcf
		}
	}
	if _dafc.DistAttr != nil {
		if *_dafc.DistAttr < 0 {
			return _dg.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dafc.DistAttr)
		}
		if *_dafc.DistAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_dafc.DistAttr)
		}
	}
	if _dafc.DirAttr != nil {
		if *_dafc.DirAttr < 0 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dafc.DirAttr)
		}
		if *_dafc.DirAttr >= 21600000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dafc.DirAttr)
		}
	}
	if _dafc.FadeDirAttr != nil {
		if *_dafc.FadeDirAttr < 0 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0046\u0061\u0064\u0065\u0044\u0069\u0072\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dafc.FadeDirAttr)
		}
		if *_dafc.FadeDirAttr >= 21600000 {
			return _dg.Errorf("\u0025s\u002f\u006d.\u0046\u0061\u0064e\u0044\u0069\u0072\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dafc.FadeDirAttr)
		}
	}
	if _dafc.SxAttr != nil {
		if _eafd := _dafc.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _eafd != nil {
			return _eafd
		}
	}
	if _dafc.SyAttr != nil {
		if _fbgca := _dafc.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _fbgca != nil {
			return _fbgca
		}
	}
	if _dafc.KxAttr != nil {
		if *_dafc.KxAttr <= -5400000 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_dafc.KxAttr)
		}
		if *_dafc.KxAttr >= 5400000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dafc.KxAttr)
		}
	}
	if _dafc.KyAttr != nil {
		if *_dafc.KyAttr <= -5400000 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_dafc.KyAttr)
		}
		if *_dafc.KyAttr >= 5400000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dafc.KyAttr)
		}
	}
	if _adfcf := _dafc.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _adfcf != nil {
		return _adfcf
	}
	return nil
}
func (_gbfgbb *ST_AdjCoordinate) ValidateWithPath(path string) error {
	_gfbef := []string{}
	if _gbfgbb.ST_Coordinate != nil {
		if _dgeacg := _gbfgbb.ST_Coordinate.ValidateWithPath(path + "\u002f\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065"); _dgeacg != nil {
			return _dgeacg
		}
		_gfbef = append(_gfbef, "\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065")
	}
	if _gbfgbb.ST_GeomGuideName != nil {
		_gfbef = append(_gfbef, "\u0053\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004e\u0061\u006d\u0065")
	}
	if len(_gfbef) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _gfbef)
	}
	return nil
}
func (_cbgef *EG_TextUnderlineFill) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cbgef.UFillTx != nil {
		_gagedf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c\u0054x"}}
		e.EncodeElement(_cbgef.UFillTx, _gagedf)
	}
	if _cbgef.UFill != nil {
		_fggdg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cbgef.UFill, _fggdg)
	}
	return nil
}
func (_baebab *ST_DgmBuildStep) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbgbe, _gfcca := d.Token()
	if _gfcca != nil {
		return _gfcca
	}
	if _cgaagg, _ffcag := _dbgbe.(_d.EndElement); _ffcag && _cgaagg.Name == start.Name {
		*_baebab = 1
		return nil
	}
	if _bedcbg, _gcac := _dbgbe.(_d.CharData); !_gcac {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbgbe)
	} else {
		switch string(_bedcbg) {
		case "":
			*_baebab = 0
		case "\u0073\u0070":
			*_baebab = 1
		case "\u0062\u0067":
			*_baebab = 2
		}
	}
	_dbgbe, _gfcca = d.Token()
	if _gfcca != nil {
		return _gfcca
	}
	if _cgbebg, _fffdc := _dbgbe.(_d.EndElement); _fffdc && _cgbebg.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbgbe)
}
func NewCT_ColorSchemeAndMapping() *CT_ColorSchemeAndMapping {
	_bcbb := &CT_ColorSchemeAndMapping{}
	_bcbb.ClrScheme = NewCT_ColorScheme()
	return _bcbb
}
func (_ccafd *CT_TextCharacterProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ccafd.KumimojiAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0075\u006d\u0069\u006d\u006f\u006a\u0069"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccafd.KumimojiAttr))})
	}
	if _ccafd.LangAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0061\u006e\u0067"}, Value: _dg.Sprintf("\u0025\u0076", *_ccafd.LangAttr)})
	}
	if _ccafd.AltLangAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061l\u0074\u004c\u0061\u006e\u0067"}, Value: _dg.Sprintf("\u0025\u0076", *_ccafd.AltLangAttr)})
	}
	if _ccafd.SzAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u007a"}, Value: _dg.Sprintf("\u0025\u0076", *_ccafd.SzAttr)})
	}
	if _ccafd.BAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccafd.BAttr))})
	}
	if _ccafd.IAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccafd.IAttr))})
	}
	if _ccafd.UAttr != ST_TextUnderlineTypeUnset {
		_aagd, _edgfea := _ccafd.UAttr.MarshalXMLAttr(_d.Name{Local: "\u0075"})
		if _edgfea != nil {
			return _edgfea
		}
		start.Attr = append(start.Attr, _aagd)
	}
	if _ccafd.StrikeAttr != ST_TextStrikeTypeUnset {
		_bcbdee, _cadge := _ccafd.StrikeAttr.MarshalXMLAttr(_d.Name{Local: "\u0073\u0074\u0072\u0069\u006b\u0065"})
		if _cadge != nil {
			return _cadge
		}
		start.Attr = append(start.Attr, _bcbdee)
	}
	if _ccafd.KernAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0065\u0072\u006e"}, Value: _dg.Sprintf("\u0025\u0076", *_ccafd.KernAttr)})
	}
	if _ccafd.CapAttr != ST_TextCapsTypeUnset {
		_dggdf, _acbac := _ccafd.CapAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u0061\u0070"})
		if _acbac != nil {
			return _acbac
		}
		start.Attr = append(start.Attr, _dggdf)
	}
	if _ccafd.SpcAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0063"}, Value: _dg.Sprintf("\u0025\u0076", *_ccafd.SpcAttr)})
	}
	if _ccafd.NormalizeHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0048"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccafd.NormalizeHAttr))})
	}
	if _ccafd.BaselineAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_ccafd.BaselineAttr)})
	}
	if _ccafd.NoProofAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0050\u0072\u006f\u006f\u0066"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccafd.NoProofAttr))})
	}
	if _ccafd.DirtyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0072t\u0079"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccafd.DirtyAttr))})
	}
	if _ccafd.ErrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u0072\u0072"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccafd.ErrAttr))})
	}
	if _ccafd.SmtCleanAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u006d\u0074\u0043\u006c\u0065\u0061\u006e"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccafd.SmtCleanAttr))})
	}
	if _ccafd.SmtIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u006d\u0074I\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_ccafd.SmtIdAttr)})
	}
	if _ccafd.BmkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u006d\u006b"}, Value: _dg.Sprintf("\u0025\u0076", *_ccafd.BmkAttr)})
	}
	e.EncodeToken(start)
	if _ccafd.Ln != nil {
		_fadba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_ccafd.Ln, _fadba)
	}
	if _ccafd.NoFill != nil {
		_gcgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccafd.NoFill, _gcgb)
	}
	if _ccafd.SolidFill != nil {
		_baedf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccafd.SolidFill, _baedf)
	}
	if _ccafd.GradFill != nil {
		_fcfacg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccafd.GradFill, _fcfacg)
	}
	if _ccafd.BlipFill != nil {
		_ccaag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccafd.BlipFill, _ccaag)
	}
	if _ccafd.PattFill != nil {
		_ebbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccafd.PattFill, _ebbe)
	}
	if _ccafd.GrpFill != nil {
		_aabgf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_ccafd.GrpFill, _aabgf)
	}
	if _ccafd.EffectLst != nil {
		_dcegd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccafd.EffectLst, _dcegd)
	}
	if _ccafd.EffectDag != nil {
		_adfbc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_ccafd.EffectDag, _adfbc)
	}
	if _ccafd.Highlight != nil {
		_gfgcf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_ccafd.Highlight, _gfgcf)
	}
	if _ccafd.ULnTx != nil {
		_gdfbe := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0075\u004c\u006e\u0054\u0078"}}
		e.EncodeElement(_ccafd.ULnTx, _gdfbe)
	}
	if _ccafd.ULn != nil {
		_fegad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0075L\u006e"}}
		e.EncodeElement(_ccafd.ULn, _fegad)
	}
	if _ccafd.UFillTx != nil {
		_dfebg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c\u0054x"}}
		e.EncodeElement(_ccafd.UFillTx, _dfebg)
	}
	if _ccafd.UFill != nil {
		_afcdf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccafd.UFill, _afcdf)
	}
	if _ccafd.Latin != nil {
		_geafg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0061\u0074\u0069\u006e"}}
		e.EncodeElement(_ccafd.Latin, _geafg)
	}
	if _ccafd.Ea != nil {
		_gedcc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0061"}}
		e.EncodeElement(_ccafd.Ea, _gedcc)
	}
	if _ccafd.Cs != nil {
		_dfac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0073"}}
		e.EncodeElement(_ccafd.Cs, _dfac)
	}
	if _ccafd.Sym != nil {
		_eebab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073y\u006d"}}
		e.EncodeElement(_ccafd.Sym, _eebab)
	}
	if _ccafd.HlinkClick != nil {
		_eefggd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}}
		e.EncodeElement(_ccafd.HlinkClick, _eefggd)
	}
	if _ccafd.HlinkMouseOver != nil {
		_fafaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003ah\u006c\u0069\u006ek\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"}}
		e.EncodeElement(_ccafd.HlinkMouseOver, _fafaa)
	}
	if _ccafd.Rtl != nil {
		_aaac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072t\u006c"}}
		e.EncodeElement(_ccafd.Rtl, _aaac)
	}
	if _ccafd.ExtLst != nil {
		_ffadb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccafd.ExtLst, _ffadb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_daedc *EG_LineJoinProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _daedc.Round != nil {
		_cfgef := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0072\u006f\u0075\u006e\u0064"}}
		e.EncodeElement(_daedc.Round, _cfgef)
	}
	if _daedc.Bevel != nil {
		_dfgfa := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_daedc.Bevel, _dfgfa)
	}
	if _daedc.Miter != nil {
		_fbeec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006d\u0069\u0074\u0065\u0072"}}
		e.EncodeElement(_daedc.Miter, _fbeec)
	}
	return nil
}

type CT_GvmlConnector struct {
	NvCxnSpPr *CT_GvmlConnectorNonVisual
	SpPr      *CT_ShapeProperties
	Style     *CT_ShapeStyle
	ExtLst    *CT_OfficeArtExtensionList
}

func (_degbb *ST_Percentage) Validate() error { return _degbb.ValidateWithPath("") }
func (_dbcegb ST_TextStrikeType) String() string {
	switch _dbcegb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065"
	case 2:
		return "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be"
	case 3:
		return "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be"
	}
	return ""
}
func (_cdbagc ST_PresetColorVal) String() string {
	switch _cdbagc {
	case 0:
		return ""
	case 1:
		return "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e"
	case 2:
		return "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065"
	case 3:
		return "\u0061\u0071\u0075\u0061"
	case 4:
		return "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 5:
		return "\u0061\u007a\u0075r\u0065"
	case 6:
		return "\u0062\u0065\u0069g\u0065"
	case 7:
		return "\u0062\u0069\u0073\u0071\u0075\u0065"
	case 8:
		return "\u0062\u006c\u0061c\u006b"
	case 9:
		return "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064"
	case 10:
		return "\u0062\u006c\u0075\u0065"
	case 11:
		return "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074"
	case 12:
		return "\u0062\u0072\u006fw\u006e"
	case 13:
		return "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd"
	case 14:
		return "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e"
	case 15:
		return "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065"
	case 16:
		return "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e"
	case 17:
		return "\u0063\u006f\u0072a\u006c"
	case 18:
		return "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065"
	case 19:
		return "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b"
	case 20:
		return "\u0063r\u0069\u006d\u0073\u006f\u006e"
	case 21:
		return "\u0063\u0079\u0061\u006e"
	case 22:
		return "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065"
	case 23:
		return "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e"
	case 24:
		return "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 25:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case 26:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079"
	case 27:
		return "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n"
	case 28:
		return "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi"
	case 29:
		return "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061"
	case 30:
		return "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e"
	case 31:
		return "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case 32:
		return "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case 33:
		return "\u0064a\u0072\u006b\u0052\u0065\u0064"
	case 34:
		return "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case 35:
		return "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 36:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 37:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 38:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 39:
		return "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 40:
		return "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case 41:
		return "\u0064\u006b\u0042\u006c\u0075\u0065"
	case 42:
		return "\u0064\u006b\u0043\u0079\u0061\u006e"
	case 43:
		return "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 44:
		return "\u0064\u006b\u0047\u0072\u0061\u0079"
	case 45:
		return "\u0064\u006b\u0047\u0072\u0065\u0079"
	case 46:
		return "\u0064k\u0047\u0072\u0065\u0065\u006e"
	case 47:
		return "\u0064k\u004b\u0068\u0061\u006b\u0069"
	case 48:
		return "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a"
	case 49:
		return "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e"
	case 50:
		return "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case 51:
		return "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case 52:
		return "\u0064\u006b\u0052e\u0064"
	case 53:
		return "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case 54:
		return "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 55:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 56:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 57:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 58:
		return "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 59:
		return "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case 60:
		return "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b"
	case 61:
		return "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case 62:
		return "\u0064i\u006d\u0047\u0072\u0061\u0079"
	case 63:
		return "\u0064i\u006d\u0047\u0072\u0065\u0079"
	case 64:
		return "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065"
	case 65:
		return "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k"
	case 66:
		return "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065"
	case 67:
		return "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e"
	case 68:
		return "\u0066u\u0063\u0068\u0073\u0069\u0061"
	case 69:
		return "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o"
	case 70:
		return "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065"
	case 71:
		return "\u0067\u006f\u006c\u0064"
	case 72:
		return "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd"
	case 73:
		return "\u0067\u0072\u0061\u0079"
	case 74:
		return "\u0067\u0072\u0065\u0079"
	case 75:
		return "\u0067\u0072\u0065e\u006e"
	case 76:
		return "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077"
	case 77:
		return "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077"
	case 78:
		return "\u0068o\u0074\u0050\u0069\u006e\u006b"
	case 79:
		return "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d"
	case 80:
		return "\u0069\u006e\u0064\u0069\u0067\u006f"
	case 81:
		return "\u0069\u0076\u006fr\u0079"
	case 82:
		return "\u006b\u0068\u0061k\u0069"
	case 83:
		return "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072"
	case 84:
		return "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068"
	case 85:
		return "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n"
	case 86:
		return "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e"
	case 87:
		return "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e"
	case 88:
		return "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c"
	case 89:
		return "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n"
	case 90:
		return "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077"
	case 91:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case 92:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y"
	case 93:
		return "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e"
	case 94:
		return "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek"
	case 95:
		return "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case 96:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 97:
		return "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case 98:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079"
	case 99:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079"
	case 100:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065"
	case 101:
		return "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case 102:
		return "\u006c\u0074\u0042\u006c\u0075\u0065"
	case 103:
		return "\u006ct\u0043\u006f\u0072\u0061\u006c"
	case 104:
		return "\u006c\u0074\u0043\u0079\u0061\u006e"
	case 105:
		return "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077"
	case 106:
		return "\u006c\u0074\u0047\u0072\u0061\u0079"
	case 107:
		return "\u006c\u0074\u0047\u0072\u0065\u0079"
	case 108:
		return "\u006ct\u0047\u0072\u0065\u0065\u006e"
	case 109:
		return "\u006c\u0074\u0050\u0069\u006e\u006b"
	case 110:
		return "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case 111:
		return "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 112:
		return "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e"
	case 113:
		return "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 114:
		return "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 115:
		return "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065"
	case 116:
		return "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case 117:
		return "\u006c\u0069\u006d\u0065"
	case 118:
		return "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n"
	case 119:
		return "\u006c\u0069\u006ee\u006e"
	case 120:
		return "\u006da\u0067\u0065\u006e\u0074\u0061"
	case 121:
		return "\u006d\u0061\u0072\u006f\u006f\u006e"
	case 122:
		return "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 123:
		return "\u006de\u0064\u0042\u006c\u0075\u0065"
	case 124:
		return "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d"
	case 125:
		return "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce"
	case 126:
		return "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 127:
		return "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 128:
		return "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case 129:
		return "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 130:
		return "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 131:
		return "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 132:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065"
	case 133:
		return "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064"
	case 134:
		return "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065"
	case 135:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e"
	case 136:
		return "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 137:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case 138:
		return "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 139:
		return "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 140:
		return "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065"
	case 141:
		return "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m"
	case 142:
		return "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e"
	case 143:
		return "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e"
	case 144:
		return "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065"
	case 145:
		return "\u006e\u0061\u0076\u0079"
	case 146:
		return "\u006fl\u0064\u004c\u0061\u0063\u0065"
	case 147:
		return "\u006f\u006c\u0069v\u0065"
	case 148:
		return "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b"
	case 149:
		return "\u006f\u0072\u0061\u006e\u0067\u0065"
	case 150:
		return "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d"
	case 151:
		return "\u006f\u0072\u0063\u0068\u0069\u0064"
	case 152:
		return "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 153:
		return "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n"
	case 154:
		return "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 155:
		return "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 156:
		return "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070"
	case 157:
		return "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f"
	case 158:
		return "\u0070\u0065\u0072\u0075"
	case 159:
		return "\u0070\u0069\u006e\u006b"
	case 160:
		return "\u0070\u006c\u0075\u006d"
	case 161:
		return "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065"
	case 162:
		return "\u0070\u0075\u0072\u0070\u006c\u0065"
	case 163:
		return "\u0072\u0065\u0064"
	case 164:
		return "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n"
	case 165:
		return "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e"
	case 166:
		return "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e"
	case 167:
		return "\u0073\u0061\u006c\u006d\u006f\u006e"
	case 168:
		return "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e"
	case 169:
		return "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 170:
		return "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c"
	case 171:
		return "\u0073\u0069\u0065\u006e\u006e\u0061"
	case 172:
		return "\u0073\u0069\u006c\u0076\u0065\u0072"
	case 173:
		return "\u0073k\u0079\u0042\u006c\u0075\u0065"
	case 174:
		return "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e"
	case 175:
		return "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y"
	case 176:
		return "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y"
	case 177:
		return "\u0073\u006e\u006f\u0077"
	case 178:
		return "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e"
	case 179:
		return "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e"
	case 180:
		return "\u0074\u0061\u006e"
	case 181:
		return "\u0074\u0065\u0061\u006c"
	case 182:
		return "\u0074h\u0069\u0073\u0074\u006c\u0065"
	case 183:
		return "\u0074\u006f\u006d\u0061\u0074\u006f"
	case 184:
		return "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e"
	case 185:
		return "\u0076\u0069\u006f\u006c\u0065\u0074"
	case 186:
		return "\u0077\u0068\u0065a\u0074"
	case 187:
		return "\u0077\u0068\u0069t\u0065"
	case 188:
		return "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065"
	case 189:
		return "\u0079\u0065\u006c\u006c\u006f\u0077"
	case 190:
		return "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e"
	}
	return ""
}
func (_acdee *CT_TablePartStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fdgbd:
	for {
		_dfbeb, _gcbdc := d.Token()
		if _gcbdc != nil {
			return _gcbdc
		}
		switch _cfbcg := _dfbeb.(type) {
		case _d.StartElement:
			switch _cfbcg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0054\u0078\u0053\u0074\u0079\u006ce"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0054\u0078\u0053\u0074\u0079\u006ce"}:
				_acdee.TcTxStyle = NewCT_TableStyleTextStyle()
				if _afgce := d.DecodeElement(_acdee.TcTxStyle, &_cfbcg); _afgce != nil {
					return _afgce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0053\u0074\u0079\u006c\u0065"}:
				_acdee.TcStyle = NewCT_TableStyleCellStyle()
				if _edddf := d.DecodeElement(_acdee.TcStyle, &_cfbcg); _edddf != nil {
					return _edddf
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _cfbcg.Name)
				if _gdbdg := d.Skip(); _gdbdg != nil {
					return _gdbdg
				}
			}
		case _d.EndElement:
			break _fdgbd
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GammaTransform and its children
func (_eadab *CT_GammaTransform) Validate() error {
	return _eadab.ValidateWithPath("\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d")
}
func (_gcae *CT_BlendEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_bef, _cdcd := _gcae.BlendAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u006c\u0065n\u0064"})
	if _cdcd != nil {
		return _cdcd
	}
	start.Attr = append(start.Attr, _bef)
	e.EncodeToken(start)
	_bbfg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
	e.EncodeElement(_gcae.Cont, _bbfg)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aeebfc *ST_LineEndLength) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cgbgad, _ffdde := d.Token()
	if _ffdde != nil {
		return _ffdde
	}
	if _gedfb, _fdagg := _cgbgad.(_d.EndElement); _fdagg && _gedfb.Name == start.Name {
		*_aeebfc = 1
		return nil
	}
	if _acbbd, _bfffdf := _cgbgad.(_d.CharData); !_bfffdf {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgbgad)
	} else {
		switch string(_acbbd) {
		case "":
			*_aeebfc = 0
		case "\u0073\u006d":
			*_aeebfc = 1
		case "\u006d\u0065\u0064":
			*_aeebfc = 2
		case "\u006c\u0067":
			*_aeebfc = 3
		}
	}
	_cgbgad, _ffdde = d.Token()
	if _ffdde != nil {
		return _ffdde
	}
	if _cegeae, _affabd := _cgbgad.(_d.EndElement); _affabd && _cegeae.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgbgad)
}

// Validate validates the CT_Path2DArcTo and its children
func (_cabfce *CT_Path2DArcTo) Validate() error {
	return _cabfce.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044A\u0072\u0063\u0054\u006f")
}

type CT_CustomColorList struct{ CustClr []*CT_CustomColor }

func NewCT_SupplementalFont() *CT_SupplementalFont { _afega := &CT_SupplementalFont{}; return _afega }

// ValidateWithPath validates the CT_FillOverlayEffect and its children, prefixing error messages with path
func (_ebea *CT_FillOverlayEffect) ValidateWithPath(path string) error {
	if _ebea.BlendAttr == ST_BlendModeUnset {
		return _dg.Errorf("\u0025\u0073\u002f\u0042\u006c\u0065n\u0064\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _dgcc := _ebea.BlendAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064\u0041\u0074\u0074\u0072"); _dgcc != nil {
		return _dgcc
	}
	if _ebea.NoFill != nil {
		if _acbf := _ebea.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _acbf != nil {
			return _acbf
		}
	}
	if _ebea.SolidFill != nil {
		if _efecc := _ebea.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _efecc != nil {
			return _efecc
		}
	}
	if _ebea.GradFill != nil {
		if _fcfa := _ebea.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fcfa != nil {
			return _fcfa
		}
	}
	if _ebea.BlipFill != nil {
		if _eaaed := _ebea.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _eaaed != nil {
			return _eaaed
		}
	}
	if _ebea.PattFill != nil {
		if _cgde := _ebea.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _cgde != nil {
			return _cgde
		}
	}
	if _ebea.GrpFill != nil {
		if _dfdcg := _ebea.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _dfdcg != nil {
			return _dfdcg
		}
	}
	return nil
}
func (_abdafd *ST_LineEndLength) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_abdafd = 0
	case "\u0073\u006d":
		*_abdafd = 1
	case "\u006d\u0065\u0064":
		*_abdafd = 2
	case "\u006c\u0067":
		*_abdafd = 3
	}
	return nil
}
func (_gedeg *CT_DashStop) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064"}, Value: _dg.Sprintf("\u0025\u0076", _gedeg.DAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070"}, Value: _dg.Sprintf("\u0025\u0076", _gedeg.SpAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_baf *CT_AlphaReplaceEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bbf := range start.Attr {
		if _bbf.Name.Local == "\u0061" {
			_cebe, _gbad := ParseUnionST_PositiveFixedPercentage(_bbf.Value)
			if _gbad != nil {
				return _gbad
			}
			_baf.AAttr = _cebe
			continue
		}
	}
	for {
		_bge, _gfg := d.Token()
		if _gfg != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006ca\u0063\u0065\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _gfg)
		}
		if _acc, _fgeg := _bge.(_d.EndElement); _fgeg && _acc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adgfb *ST_LightRigType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_adgfb = 0
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031":
		*_adgfb = 1
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032":
		*_adgfb = 2
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033":
		*_adgfb = 3
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034":
		*_adgfb = 4
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031":
		*_adgfb = 5
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032":
		*_adgfb = 6
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033":
		*_adgfb = 7
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034":
		*_adgfb = 8
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031":
		*_adgfb = 9
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032":
		*_adgfb = 10
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033":
		*_adgfb = 11
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034":
		*_adgfb = 12
	case "\u0074h\u0072\u0065\u0065\u0050\u0074":
		*_adgfb = 13
	case "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064":
		*_adgfb = 14
	case "\u0073\u006f\u0066\u0074":
		*_adgfb = 15
	case "\u0068\u0061\u0072s\u0068":
		*_adgfb = 16
	case "\u0066\u006c\u006fo\u0064":
		*_adgfb = 17
	case "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067":
		*_adgfb = 18
	case "\u006do\u0072\u006e\u0069\u006e\u0067":
		*_adgfb = 19
	case "\u0073u\u006e\u0072\u0069\u0073\u0065":
		*_adgfb = 20
	case "\u0073\u0075\u006e\u0073\u0065\u0074":
		*_adgfb = 21
	case "\u0063\u0068\u0069\u006c\u006c\u0079":
		*_adgfb = 22
	case "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067":
		*_adgfb = 23
	case "\u0066\u006c\u0061\u0074":
		*_adgfb = 24
	case "\u0074\u0077\u006fP\u0074":
		*_adgfb = 25
	case "\u0067\u006c\u006f\u0077":
		*_adgfb = 26
	case "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d":
		*_adgfb = 27
	}
	return nil
}

// ValidateWithPath validates the CT_SphereCoords and its children, prefixing error messages with path
func (_gdfce *CT_SphereCoords) ValidateWithPath(path string) error {
	if _gdfce.LatAttr < 0 {
		return _dg.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0061t\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _gdfce.LatAttr)
	}
	if _gdfce.LatAttr >= 21600000 {
		return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eL\u0061\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gdfce.LatAttr)
	}
	if _gdfce.LonAttr < 0 {
		return _dg.Errorf("%\u0073\u002f\u006d\u002e\u004c\u006fn\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _gdfce.LonAttr)
	}
	if _gdfce.LonAttr >= 21600000 {
		return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eL\u006f\u006e\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gdfce.LonAttr)
	}
	if _gdfce.RevAttr < 0 {
		return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0065v\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _gdfce.RevAttr)
	}
	if _gdfce.RevAttr >= 21600000 {
		return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eR\u0065\u0076\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gdfce.RevAttr)
	}
	return nil
}
func NewCT_NonVisualDrawingProps() *CT_NonVisualDrawingProps {
	_faeg := &CT_NonVisualDrawingProps{}
	return _faeg
}
func (_ecabe *CT_GraphicalObject) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gdecc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_ecabe.GraphicData, _gdecc)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_afbaf ST_AnimationChartOnlyBuildType) String() string {
	switch _afbaf {
	case 0:
		return ""
	case 1:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 2:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 3:
		return "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case 4:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return ""
}
func (_bdbda *CT_CustomGeometry2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bdbda.PathLst = NewCT_Path2DList()
_cgbfe:
	for {
		_gbab, _adgc := d.Token()
		if _adgc != nil {
			return _adgc
		}
		switch _eacc := _gbab.(type) {
		case _d.StartElement:
			switch _eacc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_bdbda.AvLst = NewCT_GeomGuideList()
				if _daaa := d.DecodeElement(_bdbda.AvLst, &_eacc); _daaa != nil {
					return _daaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064\u004cs\u0074"}:
				_bdbda.GdLst = NewCT_GeomGuideList()
				if _eabg := d.DecodeElement(_bdbda.GdLst, &_eacc); _eabg != nil {
					return _eabg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u004cs\u0074"}:
				_bdbda.AhLst = NewCT_AdjustHandleList()
				if _gbefd := d.DecodeElement(_bdbda.AhLst, &_eacc); _gbefd != nil {
					return _gbefd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u004c\u0073\u0074"}:
				_bdbda.CxnLst = NewCT_ConnectionSiteList()
				if _fegf := d.DecodeElement(_bdbda.CxnLst, &_eacc); _fegf != nil {
					return _fegf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0063\u0074"}:
				_bdbda.Rect = NewCT_GeomRect()
				if _gfgb := d.DecodeElement(_bdbda.Rect, &_eacc); _gfgb != nil {
					return _gfgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0074\u0068\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0074\u0068\u004c\u0073\u0074"}:
				if _cgfa := d.DecodeElement(_bdbda.PathLst, &_eacc); _cgfa != nil {
					return _cgfa
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0047eo\u006d\u0065\u0074\u0072\u0079\u0032\u0044\u0020\u0025\u0076", _eacc.Name)
				if _bbcg := d.Skip(); _bbcg != nil {
					return _bbcg
				}
			}
		case _d.EndElement:
			break _cgbfe
		case _d.CharData:
		}
	}
	return nil
}
func (_fgfa *CT_ConnectionSiteList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fcbdb:
	for {
		_eebb, _cegc := d.Token()
		if _cegc != nil {
			return _cegc
		}
		switch _dgffd := _eebb.(type) {
		case _d.StartElement:
			switch _dgffd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e"}:
				_bdegg := NewCT_ConnectionSite()
				if _becf := d.DecodeElement(_bdegg, &_dgffd); _becf != nil {
					return _becf
				}
				_fgfa.Cxn = append(_fgfa.Cxn, _bdegg)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0053\u0069\u0074\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dgffd.Name)
				if _fadd := d.Skip(); _fadd != nil {
					return _fadd
				}
			}
		case _d.EndElement:
			break _fcbdb
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_ColorMappingOverrideChoice() *CT_ColorMappingOverrideChoice {
	_ccbc := &CT_ColorMappingOverrideChoice{}
	return _ccbc
}
func (_dbcec *ST_TextHorzOverflowType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fdcca, _begde := d.Token()
	if _begde != nil {
		return _begde
	}
	if _baegb, _bbedg := _fdcca.(_d.EndElement); _bbedg && _baegb.Name == start.Name {
		*_dbcec = 1
		return nil
	}
	if _befff, _fbcgdd := _fdcca.(_d.CharData); !_fbcgdd {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdcca)
	} else {
		switch string(_befff) {
		case "":
			*_dbcec = 0
		case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
			*_dbcec = 1
		case "\u0063\u006c\u0069\u0070":
			*_dbcec = 2
		}
	}
	_fdcca, _begde = d.Token()
	if _begde != nil {
		return _begde
	}
	if _decde, _ebbdb := _fdcca.(_d.EndElement); _ebbdb && _decde.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdcca)
}
func NewCT_PositiveSize2D() *CT_PositiveSize2D {
	_fgfeg := &CT_PositiveSize2D{}
	_fgfeg.CxAttr = 0
	_fgfeg.CyAttr = 0
	return _fgfeg
}
func (_bcdea *ST_ColorSchemeIndex) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bcdea = 0
	case "\u0064\u006b\u0031":
		*_bcdea = 1
	case "\u006c\u0074\u0031":
		*_bcdea = 2
	case "\u0064\u006b\u0032":
		*_bcdea = 3
	case "\u006c\u0074\u0032":
		*_bcdea = 4
	case "\u0061c\u0063\u0065\u006e\u0074\u0031":
		*_bcdea = 5
	case "\u0061c\u0063\u0065\u006e\u0074\u0032":
		*_bcdea = 6
	case "\u0061c\u0063\u0065\u006e\u0074\u0033":
		*_bcdea = 7
	case "\u0061c\u0063\u0065\u006e\u0074\u0034":
		*_bcdea = 8
	case "\u0061c\u0063\u0065\u006e\u0074\u0035":
		*_bcdea = 9
	case "\u0061c\u0063\u0065\u006e\u0074\u0036":
		*_bcdea = 10
	case "\u0068\u006c\u0069n\u006b":
		*_bcdea = 11
	case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
		*_bcdea = 12
	}
	return nil
}

// Validate validates the CT_TextBlipBullet and its children
func (_dbgdf *CT_TextBlipBullet) Validate() error {
	return _dbgdf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042u\u006c\u006c\u0065\u0074")
}
func NewCT_LineProperties() *CT_LineProperties { _fdge := &CT_LineProperties{}; return _fdge }
func (_daeab *EG_TextBulletColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bdff:
	for {
		_bccgaa, _bdeba := d.Token()
		if _bdeba != nil {
			return _bdeba
		}
		switch _fccfg := _bccgaa.(type) {
		case _d.StartElement:
			switch _fccfg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}:
				_daeab.BuClrTx = NewCT_TextBulletColorFollowText()
				if _gegag := d.DecodeElement(_daeab.BuClrTx, &_fccfg); _gegag != nil {
					return _gegag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}:
				_daeab.BuClr = NewCT_Color()
				if _ffafb := d.DecodeElement(_daeab.BuClr, &_fccfg); _ffafb != nil {
					return _ffafb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075l\u006c\u0065\u0074\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _fccfg.Name)
				if _gggdd := d.Skip(); _gggdd != nil {
					return _gggdd
				}
			}
		case _d.EndElement:
			break _bdff
		case _d.CharData:
		}
	}
	return nil
}
func (_beccac *CT_TextCharacterProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fddca := range start.Attr {
		if _fddca.Name.Local == "\u006c\u0061\u006e\u0067" {
			_bdgee, _cgggae := _fddca.Value, error(nil)
			if _cgggae != nil {
				return _cgggae
			}
			_beccac.LangAttr = &_bdgee
			continue
		}
		if _fddca.Name.Local == "\u0073\u007a" {
			_gccgg, _adbdg := _c.ParseInt(_fddca.Value, 10, 32)
			if _adbdg != nil {
				return _adbdg
			}
			_fafef := int32(_gccgg)
			_beccac.SzAttr = &_fafef
			continue
		}
		if _fddca.Name.Local == "\u006b\u0075\u006d\u0069\u006d\u006f\u006a\u0069" {
			_begg, _geggd := _c.ParseBool(_fddca.Value)
			if _geggd != nil {
				return _geggd
			}
			_beccac.KumimojiAttr = &_begg
			continue
		}
		if _fddca.Name.Local == "\u0073\u0074\u0072\u0069\u006b\u0065" {
			_beccac.StrikeAttr.UnmarshalXMLAttr(_fddca)
			continue
		}
		if _fddca.Name.Local == "\u0063\u0061\u0070" {
			_beccac.CapAttr.UnmarshalXMLAttr(_fddca)
			continue
		}
		if _fddca.Name.Local == "\u0062" {
			_gbbab, _fegc := _c.ParseBool(_fddca.Value)
			if _fegc != nil {
				return _fegc
			}
			_beccac.BAttr = &_gbbab
			continue
		}
		if _fddca.Name.Local == "\u0069" {
			_gcceb, _gacdebe := _c.ParseBool(_fddca.Value)
			if _gacdebe != nil {
				return _gacdebe
			}
			_beccac.IAttr = &_gcceb
			continue
		}
		if _fddca.Name.Local == "\u0073\u006d\u0074\u0043\u006c\u0065\u0061\u006e" {
			_daeaf, _ggdcgc := _c.ParseBool(_fddca.Value)
			if _ggdcgc != nil {
				return _ggdcgc
			}
			_beccac.SmtCleanAttr = &_daeaf
			continue
		}
		if _fddca.Name.Local == "\u006b\u0065\u0072\u006e" {
			_gaegd, _fecde := _c.ParseInt(_fddca.Value, 10, 32)
			if _fecde != nil {
				return _fecde
			}
			_gebec := int32(_gaegd)
			_beccac.KernAttr = &_gebec
			continue
		}
		if _fddca.Name.Local == "\u0065\u0072\u0072" {
			_eecc, _bgafe := _c.ParseBool(_fddca.Value)
			if _bgafe != nil {
				return _bgafe
			}
			_beccac.ErrAttr = &_eecc
			continue
		}
		if _fddca.Name.Local == "\u0061l\u0074\u004c\u0061\u006e\u0067" {
			_agdg, _bgcee := _fddca.Value, error(nil)
			if _bgcee != nil {
				return _bgcee
			}
			_beccac.AltLangAttr = &_agdg
			continue
		}
		if _fddca.Name.Local == "\u006eo\u0050\u0072\u006f\u006f\u0066" {
			_bbbd, _cafb := _c.ParseBool(_fddca.Value)
			if _cafb != nil {
				return _cafb
			}
			_beccac.NoProofAttr = &_bbbd
			continue
		}
		if _fddca.Name.Local == "\u0075" {
			_beccac.UAttr.UnmarshalXMLAttr(_fddca)
			continue
		}
		if _fddca.Name.Local == "\u0073\u006d\u0074I\u0064" {
			_gcbde, _eagga := _c.ParseUint(_fddca.Value, 10, 32)
			if _eagga != nil {
				return _eagga
			}
			_eagad := uint32(_gcbde)
			_beccac.SmtIdAttr = &_eagad
			continue
		}
		if _fddca.Name.Local == "\u0073\u0070\u0063" {
			_bbeadb, _bebfe := ParseUnionST_TextPoint(_fddca.Value)
			if _bebfe != nil {
				return _bebfe
			}
			_beccac.SpcAttr = &_bbeadb
			continue
		}
		if _fddca.Name.Local == "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065" {
			_ffbda, _cdaebd := ParseUnionST_Percentage(_fddca.Value)
			if _cdaebd != nil {
				return _cdaebd
			}
			_beccac.BaselineAttr = &_ffbda
			continue
		}
		if _fddca.Name.Local == "\u0064\u0069\u0072t\u0079" {
			_cbdd, _bbbdf := _c.ParseBool(_fddca.Value)
			if _bbbdf != nil {
				return _bbbdf
			}
			_beccac.DirtyAttr = &_cbdd
			continue
		}
		if _fddca.Name.Local == "\u0062\u006d\u006b" {
			_cgdad, _eebgd := _fddca.Value, error(nil)
			if _eebgd != nil {
				return _eebgd
			}
			_beccac.BmkAttr = &_cgdad
			continue
		}
		if _fddca.Name.Local == "\u006e\u006f\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0048" {
			_fadf, _geeff := _c.ParseBool(_fddca.Value)
			if _geeff != nil {
				return _geeff
			}
			_beccac.NormalizeHAttr = &_fadf
			continue
		}
	}
_ffecef:
	for {
		_ecfbc, _addbd := d.Token()
		if _addbd != nil {
			return _addbd
		}
		switch _gafef := _ecfbc.(type) {
		case _d.StartElement:
			switch _gafef.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_beccac.Ln = NewCT_LineProperties()
				if _gecbg := d.DecodeElement(_beccac.Ln, &_gafef); _gecbg != nil {
					return _gecbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_beccac.NoFill = NewCT_NoFillProperties()
				if _fgecef := d.DecodeElement(_beccac.NoFill, &_gafef); _fgecef != nil {
					return _fgecef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_beccac.SolidFill = NewCT_SolidColorFillProperties()
				if _gegec := d.DecodeElement(_beccac.SolidFill, &_gafef); _gegec != nil {
					return _gegec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_beccac.GradFill = NewCT_GradientFillProperties()
				if _ffbgb := d.DecodeElement(_beccac.GradFill, &_gafef); _ffbgb != nil {
					return _ffbgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_beccac.BlipFill = NewCT_BlipFillProperties()
				if _ebdeg := d.DecodeElement(_beccac.BlipFill, &_gafef); _ebdeg != nil {
					return _ebdeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_beccac.PattFill = NewCT_PatternFillProperties()
				if _debfa := d.DecodeElement(_beccac.PattFill, &_gafef); _debfa != nil {
					return _debfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_beccac.GrpFill = NewCT_GroupFillProperties()
				if _bgeaa := d.DecodeElement(_beccac.GrpFill, &_gafef); _bgeaa != nil {
					return _bgeaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_beccac.EffectLst = NewCT_EffectList()
				if _bcadf := d.DecodeElement(_beccac.EffectLst, &_gafef); _bcadf != nil {
					return _bcadf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_beccac.EffectDag = NewCT_EffectContainer()
				if _aecfb := d.DecodeElement(_beccac.EffectDag, &_gafef); _aecfb != nil {
					return _aecfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"}:
				_beccac.Highlight = NewCT_Color()
				if _dfcbge := d.DecodeElement(_beccac.Highlight, &_gafef); _dfcbge != nil {
					return _dfcbge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}:
				_beccac.ULnTx = NewCT_TextUnderlineLineFollowText()
				if _dgfaa := d.DecodeElement(_beccac.ULnTx, &_gafef); _dgfaa != nil {
					return _dgfaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}:
				_beccac.ULn = NewCT_LineProperties()
				if _gcgdg := d.DecodeElement(_beccac.ULn, &_gafef); _gcgdg != nil {
					return _gcgdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}:
				_beccac.UFillTx = NewCT_TextUnderlineFillFollowText()
				if _aaaff := d.DecodeElement(_beccac.UFillTx, &_gafef); _aaaff != nil {
					return _aaaff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}:
				_beccac.UFill = NewCT_TextUnderlineFillGroupWrapper()
				if _ecadd := d.DecodeElement(_beccac.UFill, &_gafef); _ecadd != nil {
					return _ecadd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}:
				_beccac.Latin = NewCT_TextFont()
				if _dceaf := d.DecodeElement(_beccac.Latin, &_gafef); _dceaf != nil {
					return _dceaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}:
				_beccac.Ea = NewCT_TextFont()
				if _cbcag := d.DecodeElement(_beccac.Ea, &_gafef); _cbcag != nil {
					return _cbcag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}:
				_beccac.Cs = NewCT_TextFont()
				if _eeccg := d.DecodeElement(_beccac.Cs, &_gafef); _eeccg != nil {
					return _eeccg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u006d"}:
				_beccac.Sym = NewCT_TextFont()
				if _bacfe := d.DecodeElement(_beccac.Sym, &_gafef); _bacfe != nil {
					return _bacfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}:
				_beccac.HlinkClick = NewCT_Hyperlink()
				if _afbeeg := d.DecodeElement(_beccac.HlinkClick, &_gafef); _afbeeg != nil {
					return _afbeeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u004d\u006f\u0075\u0073e\u004f\u0076\u0065\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u004d\u006f\u0075\u0073e\u004f\u0076\u0065\u0072"}:
				_beccac.HlinkMouseOver = NewCT_Hyperlink()
				if _badbe := d.DecodeElement(_beccac.HlinkMouseOver, &_gafef); _badbe != nil {
					return _badbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006c"}:
				_beccac.Rtl = NewCT_Boolean()
				if _ebfgd := d.DecodeElement(_beccac.Rtl, &_gafef); _ebfgd != nil {
					return _ebfgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_beccac.ExtLst = NewCT_OfficeArtExtensionList()
				if _cafff := d.DecodeElement(_beccac.ExtLst, &_gafef); _cafff != nil {
					return _cafff
				}
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u0065x\u0074\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gafef.Name)
				if _ggdff := d.Skip(); _ggdff != nil {
					return _ggdff
				}
			}
		case _d.EndElement:
			break _ffecef
		case _d.CharData:
		}
	}
	return nil
}
func (_gbcfde ST_TextWrappingType) String() string {
	switch _gbcfde {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0071\u0075\u0061\u0072\u0065"
	}
	return ""
}

// Validate validates the CT_GlowEffect and its children
func (_cbecg *CT_GlowEffect) Validate() error {
	return _cbecg.ValidateWithPath("\u0043\u0054\u005f\u0047\u006c\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074")
}
func NewCT_CustomGeometry2D() *CT_CustomGeometry2D {
	_aeaf := &CT_CustomGeometry2D{}
	_aeaf.PathLst = NewCT_Path2DList()
	return _aeaf
}

// Validate validates the CT_ColorMappingOverrideChoice and its children
func (_agfg *CT_ColorMappingOverrideChoice) Validate() error {
	return _agfg.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0043\u0068oi\u0063\u0065")
}
func NewCT_CustomColor() *CT_CustomColor { _agbge := &CT_CustomColor{}; return _agbge }
func (_bgcafd *CT_NonVisualDrawingShapeProps) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bgedc := range start.Attr {
		if _bgedc.Name.Local == "\u0074\u0078\u0042o\u0078" {
			_dfdfg, _ddgfg := _c.ParseBool(_bgedc.Value)
			if _ddgfg != nil {
				return _ddgfg
			}
			_bgcafd.TxBoxAttr = &_dfdfg
			continue
		}
	}
_bdgcf:
	for {
		_febgd, _ecbcb := d.Token()
		if _ecbcb != nil {
			return _ecbcb
		}
		switch _dacb := _febgd.(type) {
		case _d.StartElement:
			switch _dacb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u004c\u006f\u0063\u006b\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u004c\u006f\u0063\u006b\u0073"}:
				_bgcafd.SpLocks = NewCT_ShapeLocking()
				if _ccacg := d.DecodeElement(_bgcafd.SpLocks, &_dacb); _ccacg != nil {
					return _ccacg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgcafd.ExtLst = NewCT_OfficeArtExtensionList()
				if _bdgfb := d.DecodeElement(_bgcafd.ExtLst, &_dacb); _bdgfb != nil {
					return _bdgfb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061w\u0069\u006e\u0067\u0053\u0068\u0061p\u0065\u0050r\u006f\u0070s\u0020%\u0076", _dacb.Name)
				if _cfce := d.Skip(); _cfce != nil {
					return _cfce
				}
			}
		case _d.EndElement:
			break _bdgcf
		case _d.CharData:
		}
	}
	return nil
}
func (_aggbb *CT_Point3D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078"}, Value: _dg.Sprintf("\u0025\u0076", _aggbb.XAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0079"}, Value: _dg.Sprintf("\u0025\u0076", _aggbb.YAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u007a"}, Value: _dg.Sprintf("\u0025\u0076", _aggbb.ZAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_GradientFillProperties struct {
	FlipAttr         ST_TileFlipMode
	RotWithShapeAttr *bool
	GsLst            *CT_GradientStopList
	Lin              *CT_LinearShadeProperties
	Path             *CT_PathShadeProperties
	TileRect         *CT_RelativeRect
}
type CT_TextBlipBullet struct{ Blip *CT_Blip }
type CT_TextShapeAutofit struct{}

// Validate validates the CT_StretchInfoProperties and its children
func (_geadd *CT_StretchInfoProperties) Validate() error {
	return _geadd.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066o\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_ColorMapping and its children, prefixing error messages with path
func (_cddd *CT_ColorMapping) ValidateWithPath(path string) error {
	if _cddd.Bg1Attr == ST_ColorSchemeIndexUnset {
		return _dg.Errorf("\u0025\u0073\u002fB\u0067\u0031\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fbge := _cddd.Bg1Attr.ValidateWithPath(path + "\u002f\u0042\u0067\u0031\u0041\u0074\u0074\u0072"); _fbge != nil {
		return _fbge
	}
	if _cddd.Tx1Attr == ST_ColorSchemeIndexUnset {
		return _dg.Errorf("\u0025\u0073\u002fT\u0078\u0031\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _deggg := _cddd.Tx1Attr.ValidateWithPath(path + "\u002f\u0054\u0078\u0031\u0041\u0074\u0074\u0072"); _deggg != nil {
		return _deggg
	}
	if _cddd.Bg2Attr == ST_ColorSchemeIndexUnset {
		return _dg.Errorf("\u0025\u0073\u002fB\u0067\u0032\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bbde := _cddd.Bg2Attr.ValidateWithPath(path + "\u002f\u0042\u0067\u0032\u0041\u0074\u0074\u0072"); _bbde != nil {
		return _bbde
	}
	if _cddd.Tx2Attr == ST_ColorSchemeIndexUnset {
		return _dg.Errorf("\u0025\u0073\u002fT\u0078\u0032\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ebba := _cddd.Tx2Attr.ValidateWithPath(path + "\u002f\u0054\u0078\u0032\u0041\u0074\u0074\u0072"); _ebba != nil {
		return _ebba
	}
	if _cddd.Accent1Attr == ST_ColorSchemeIndexUnset {
		return _dg.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0031\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _cadd := _cddd.Accent1Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0031\u0041\u0074\u0074\u0072"); _cadd != nil {
		return _cadd
	}
	if _cddd.Accent2Attr == ST_ColorSchemeIndexUnset {
		return _dg.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0032\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _cbfg := _cddd.Accent2Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0032\u0041\u0074\u0074\u0072"); _cbfg != nil {
		return _cbfg
	}
	if _cddd.Accent3Attr == ST_ColorSchemeIndexUnset {
		return _dg.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0033\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _dcge := _cddd.Accent3Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0033\u0041\u0074\u0074\u0072"); _dcge != nil {
		return _dcge
	}
	if _cddd.Accent4Attr == ST_ColorSchemeIndexUnset {
		return _dg.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0034\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _degbd := _cddd.Accent4Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0034\u0041\u0074\u0074\u0072"); _degbd != nil {
		return _degbd
	}
	if _cddd.Accent5Attr == ST_ColorSchemeIndexUnset {
		return _dg.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0035\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _begb := _cddd.Accent5Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0035\u0041\u0074\u0074\u0072"); _begb != nil {
		return _begb
	}
	if _cddd.Accent6Attr == ST_ColorSchemeIndexUnset {
		return _dg.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0036\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _fbeaa := _cddd.Accent6Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0036\u0041\u0074\u0074\u0072"); _fbeaa != nil {
		return _fbeaa
	}
	if _cddd.HlinkAttr == ST_ColorSchemeIndexUnset {
		return _dg.Errorf("\u0025\u0073\u002f\u0048\u006c\u0069n\u006b\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _bagdb := _cddd.HlinkAttr.ValidateWithPath(path + "\u002f\u0048\u006c\u0069\u006e\u006b\u0041\u0074\u0074\u0072"); _bagdb != nil {
		return _bagdb
	}
	if _cddd.FolHlinkAttr == ST_ColorSchemeIndexUnset {
		return _dg.Errorf("\u0025\u0073/F\u006f\u006c\u0048l\u0069\u006e\u006b\u0041ttr\u0020is\u0020\u0061\u0020\u006d\u0061\u006e\u0064at\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _bdba := _cddd.FolHlinkAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006c\u0048\u006c\u0069\u006e\u006b\u0041\u0074\u0074\u0072"); _bdba != nil {
		return _bdba
	}
	if _cddd.ExtLst != nil {
		if _eacd := _cddd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eacd != nil {
			return _eacd
		}
	}
	return nil
}
func (_ggce *CT_NonVisualPictureProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _geebd := range start.Attr {
		if _geebd.Name.Local == "p\u0072e\u0066\u0065\u0072\u0052\u0065\u006c\u0061\u0074i\u0076\u0065\u0052\u0065si\u007a\u0065" {
			_afdg, _bgaab := _c.ParseBool(_geebd.Value)
			if _bgaab != nil {
				return _bgaab
			}
			_ggce.PreferRelativeResizeAttr = &_afdg
			continue
		}
	}
_fbefc:
	for {
		_eaaaa, _bcccc := d.Token()
		if _bcccc != nil {
			return _bcccc
		}
		switch _dbde := _eaaaa.(type) {
		case _d.StartElement:
			switch _dbde.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}:
				_ggce.PicLocks = NewCT_PictureLocking()
				if _cbca := d.DecodeElement(_ggce.PicLocks, &_dbde); _cbca != nil {
					return _cbca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggce.ExtLst = NewCT_OfficeArtExtensionList()
				if _ceddd := d.DecodeElement(_ggce.ExtLst, &_dbde); _ceddd != nil {
					return _ceddd
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063t\u0075\u0072\u0065\u0050\u0072\u006fp\u0065\u0072t\u0069\u0065s\u0020%\u0076", _dbde.Name)
				if _acbged := d.Skip(); _acbged != nil {
					return _acbged
				}
			}
		case _d.EndElement:
			break _fbefc
		case _d.CharData:
		}
	}
	return nil
}
func (_fg *AG_Blob) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fg.EmbedAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_fg.EmbedAttr)})
	}
	if _fg.LinkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _dg.Sprintf("\u0025\u0076", *_fg.LinkAttr)})
	}
	return nil
}
func NewCT_LineJoinBevel() *CT_LineJoinBevel { _gbefcd := &CT_LineJoinBevel{}; return _gbefcd }
func NewCT_TileInfoProperties() *CT_TileInfoProperties {
	_gcdfe := &CT_TileInfoProperties{}
	return _gcdfe
}
func (_fbedea ST_TextFontAlignType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dcecgd := _d.Attr{}
	_dcecgd.Name = name
	switch _fbedea {
	case ST_TextFontAlignTypeUnset:
		_dcecgd.Value = ""
	case ST_TextFontAlignTypeAuto:
		_dcecgd.Value = "\u0061\u0075\u0074\u006f"
	case ST_TextFontAlignTypeT:
		_dcecgd.Value = "\u0074"
	case ST_TextFontAlignTypeCtr:
		_dcecgd.Value = "\u0063\u0074\u0072"
	case ST_TextFontAlignTypeBase:
		_dcecgd.Value = "\u0062\u0061\u0073\u0065"
	case ST_TextFontAlignTypeB:
		_dcecgd.Value = "\u0062"
	}
	return _dcecgd, nil
}
func (_afdbc ST_PresetShadowVal) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_aecdg := _d.Attr{}
	_aecdg.Name = name
	switch _afdbc {
	case ST_PresetShadowValUnset:
		_aecdg.Value = ""
	case ST_PresetShadowValShdw1:
		_aecdg.Value = "\u0073\u0068\u0064w\u0031"
	case ST_PresetShadowValShdw2:
		_aecdg.Value = "\u0073\u0068\u0064w\u0032"
	case ST_PresetShadowValShdw3:
		_aecdg.Value = "\u0073\u0068\u0064w\u0033"
	case ST_PresetShadowValShdw4:
		_aecdg.Value = "\u0073\u0068\u0064w\u0034"
	case ST_PresetShadowValShdw5:
		_aecdg.Value = "\u0073\u0068\u0064w\u0035"
	case ST_PresetShadowValShdw6:
		_aecdg.Value = "\u0073\u0068\u0064w\u0036"
	case ST_PresetShadowValShdw7:
		_aecdg.Value = "\u0073\u0068\u0064w\u0037"
	case ST_PresetShadowValShdw8:
		_aecdg.Value = "\u0073\u0068\u0064w\u0038"
	case ST_PresetShadowValShdw9:
		_aecdg.Value = "\u0073\u0068\u0064w\u0039"
	case ST_PresetShadowValShdw10:
		_aecdg.Value = "\u0073\u0068\u0064\u0077\u0031\u0030"
	case ST_PresetShadowValShdw11:
		_aecdg.Value = "\u0073\u0068\u0064\u0077\u0031\u0031"
	case ST_PresetShadowValShdw12:
		_aecdg.Value = "\u0073\u0068\u0064\u0077\u0031\u0032"
	case ST_PresetShadowValShdw13:
		_aecdg.Value = "\u0073\u0068\u0064\u0077\u0031\u0033"
	case ST_PresetShadowValShdw14:
		_aecdg.Value = "\u0073\u0068\u0064\u0077\u0031\u0034"
	case ST_PresetShadowValShdw15:
		_aecdg.Value = "\u0073\u0068\u0064\u0077\u0031\u0035"
	case ST_PresetShadowValShdw16:
		_aecdg.Value = "\u0073\u0068\u0064\u0077\u0031\u0036"
	case ST_PresetShadowValShdw17:
		_aecdg.Value = "\u0073\u0068\u0064\u0077\u0031\u0037"
	case ST_PresetShadowValShdw18:
		_aecdg.Value = "\u0073\u0068\u0064\u0077\u0031\u0038"
	case ST_PresetShadowValShdw19:
		_aecdg.Value = "\u0073\u0068\u0064\u0077\u0031\u0039"
	case ST_PresetShadowValShdw20:
		_aecdg.Value = "\u0073\u0068\u0064\u0077\u0032\u0030"
	}
	return _aecdg, nil
}

// Validate validates the CT_TableStyleCellStyle and its children
func (_cgeec *CT_TableStyleCellStyle) Validate() error {
	return _cgeec.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079l\u0065")
}
func (_bac *CT_AudioCD) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bac.St = NewCT_AudioCDTime()
	_bac.End = NewCT_AudioCDTime()
_gegad:
	for {
		_fddb, _gfgd := d.Token()
		if _gfgd != nil {
			return _gfgd
		}
		switch _caf := _fddb.(type) {
		case _d.StartElement:
			switch _caf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074"}:
				if _efe := d.DecodeElement(_bac.St, &_caf); _efe != nil {
					return _efe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}:
				if _dddf := d.DecodeElement(_bac.End, &_caf); _dddf != nil {
					return _dddf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bac.ExtLst = NewCT_OfficeArtExtensionList()
				if _bafb := d.DecodeElement(_bac.ExtLst, &_caf); _bafb != nil {
					return _bafb
				}
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0043\u0044\u0020\u0025\u0076", _caf.Name)
				if _aad := d.Skip(); _aad != nil {
					return _aad
				}
			}
		case _d.EndElement:
			break _gegad
		case _d.CharData:
		}
	}
	return nil
}
func (_aecag *CT_TableStyleList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0065\u0066"}, Value: _dg.Sprintf("\u0025\u0076", _aecag.DefAttr)})
	e.EncodeToken(start)
	if _aecag.TblStyle != nil {
		_aefdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}}
		for _, _bagfg := range _aecag.TblStyle {
			e.EncodeElement(_bagfg, _aefdg)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_ColorMapping() *CT_ColorMapping {
	_bddb := &CT_ColorMapping{}
	_bddb.Bg1Attr = ST_ColorSchemeIndex(1)
	_bddb.Tx1Attr = ST_ColorSchemeIndex(1)
	_bddb.Bg2Attr = ST_ColorSchemeIndex(1)
	_bddb.Tx2Attr = ST_ColorSchemeIndex(1)
	_bddb.Accent1Attr = ST_ColorSchemeIndex(1)
	_bddb.Accent2Attr = ST_ColorSchemeIndex(1)
	_bddb.Accent3Attr = ST_ColorSchemeIndex(1)
	_bddb.Accent4Attr = ST_ColorSchemeIndex(1)
	_bddb.Accent5Attr = ST_ColorSchemeIndex(1)
	_bddb.Accent6Attr = ST_ColorSchemeIndex(1)
	_bddb.HlinkAttr = ST_ColorSchemeIndex(1)
	_bddb.FolHlinkAttr = ST_ColorSchemeIndex(1)
	return _bddb
}

type CT_EmbeddedWAVAudioFile struct {
	EmbedAttr string
	NameAttr  *string
}
type CT_GvmlShapeNonVisual struct {
	CNvPr   *CT_NonVisualDrawingProps
	CNvSpPr *CT_NonVisualDrawingShapeProps
}

func (_edcg *CT_GradientStopList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_egbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0073"}}
	for _, _efba := range _edcg.Gs {
		e.EncodeElement(_efba, _egbe)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_Angle() *CT_Angle { _gccd := &CT_Angle{}; return _gccd }

// Validate validates the CT_TableCell and its children
func (_fecbg *CT_TableCell) Validate() error {
	return _fecbg.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006c")
}

// Validate validates the CT_AdjPoint2D and its children
func (_edf *CT_AdjPoint2D) Validate() error {
	return _edf.ValidateWithPath("\u0043\u0054\u005f\u0041\u0064\u006a\u0050\u006f\u0069\u006e\u0074\u0032\u0044")
}
func NewCT_GroupShapeProperties() *CT_GroupShapeProperties {
	_dgdg := &CT_GroupShapeProperties{}
	return _dgdg
}
func (_gdcbd ST_TextWrappingType) ValidateWithPath(path string) error {
	switch _gdcbd {
	case 0, 1, 2:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdcbd))
	}
	return nil
}
func (_efge *ST_PositivePercentage) ValidateWithPath(path string) error {
	_gccb := []string{}
	if _efge.ST_PositivePercentageDecimal != nil {
		_gccb = append(_gccb, "\u0053\u0054\u005f\u0050o\u0073\u0069\u0074\u0069\u0076\u0065\u0050\u0065\u0072\u0063e\u006et\u0061\u0067\u0065\u0044\u0065\u0063\u0069m\u0061\u006c")
	}
	if _efge.ST_PositivePercentage != nil {
		if _geddf := _efge.ST_PositivePercentage.ValidateWithPath(path + "\u002f\u0053\u0054\u005fPo\u0073\u0069\u0074\u0069\u0076\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061g\u0065"); _geddf != nil {
			return _geddf
		}
		_gccb = append(_gccb, "S\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_gccb) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _gccb)
	}
	return nil
}

type CT_GeomGuideList struct{ Gd []*CT_GeomGuide }

// ValidateWithPath validates the CT_AlphaBiLevelEffect and its children, prefixing error messages with path
func (_adf *CT_AlphaBiLevelEffect) ValidateWithPath(path string) error {
	if _deg := _adf.ThreshAttr.ValidateWithPath(path + "/\u0054\u0068\u0072\u0065\u0073\u0068\u0041\u0074\u0074\u0072"); _deg != nil {
		return _deg
	}
	return nil
}

// Validate validates the EG_ThemeableFontStyles and its children
func (_bcfa *EG_ThemeableFontStyles) Validate() error {
	return _bcfa.ValidateWithPath("\u0045\u0047\u005f\u0054he\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006ce\u0073")
}

type ST_TileFlipMode byte

// Validate validates the CT_DashStop and its children
func (_cfeg *CT_DashStop) Validate() error {
	return _cfeg.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070")
}
func NewCT_TextBody() *CT_TextBody {
	_dgaad := &CT_TextBody{}
	_dgaad.BodyPr = NewCT_TextBodyProperties()
	return _dgaad
}
func (_adgf *CT_EffectProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _adgf.EffectLst != nil {
		_aggba := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_adgf.EffectLst, _aggba)
	}
	if _adgf.EffectDag != nil {
		_abbe := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_adgf.EffectDag, _abbe)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BackgroundFormatting and its children, prefixing error messages with path
func (_afbb *CT_BackgroundFormatting) ValidateWithPath(path string) error {
	if _afbb.NoFill != nil {
		if _ecfa := _afbb.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ecfa != nil {
			return _ecfa
		}
	}
	if _afbb.SolidFill != nil {
		if _cabf := _afbb.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _cabf != nil {
			return _cabf
		}
	}
	if _afbb.GradFill != nil {
		if _bfc := _afbb.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _bfc != nil {
			return _bfc
		}
	}
	if _afbb.BlipFill != nil {
		if _eea := _afbb.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _eea != nil {
			return _eea
		}
	}
	if _afbb.PattFill != nil {
		if _gdaa := _afbb.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _gdaa != nil {
			return _gdaa
		}
	}
	if _afbb.GrpFill != nil {
		if _cfbfb := _afbb.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _cfbfb != nil {
			return _cfbfb
		}
	}
	if _afbb.EffectLst != nil {
		if _ceag := _afbb.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _ceag != nil {
			return _ceag
		}
	}
	if _afbb.EffectDag != nil {
		if _afce := _afbb.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _afce != nil {
			return _afce
		}
	}
	return nil
}

// Validate validates the CT_TableStyleTextStyle and its children
func (_ecfgc *CT_TableStyleTextStyle) Validate() error {
	return _ecfgc.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079l\u0065")
}

type CT_FontScheme struct {
	NameAttr  string
	MajorFont *CT_FontCollection
	MinorFont *CT_FontCollection
	ExtLst    *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_EffectStyleList and its children, prefixing error messages with path
func (_fbec *CT_EffectStyleList) ValidateWithPath(path string) error {
	for _dcfa, _daac := range _fbec.EffectStyle {
		if _dfag := _daac.ValidateWithPath(_dg.Sprintf("\u0025s\u002fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u005b\u0025\u0064\u005d", path, _dcfa)); _dfag != nil {
			return _dfag
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Path2DList and its children, prefixing error messages with path
func (_bdgff *CT_Path2DList) ValidateWithPath(path string) error {
	for _ebab, _dcecg := range _bdgff.Path {
		if _fcbfee := _dcecg.ValidateWithPath(_dg.Sprintf("%\u0073\u002f\u0050\u0061\u0074\u0068\u005b\u0025\u0064\u005d", path, _ebab)); _fcbfee != nil {
			return _fcbfee
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ShapeStyle and its children, prefixing error messages with path
func (_eafde *CT_ShapeStyle) ValidateWithPath(path string) error {
	if _ebfg := _eafde.LnRef.ValidateWithPath(path + "\u002f\u004c\u006e\u0052\u0065\u0066"); _ebfg != nil {
		return _ebfg
	}
	if _bdeff := _eafde.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _bdeff != nil {
		return _bdeff
	}
	if _bdge := _eafde.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _bdge != nil {
		return _bdge
	}
	if _dadgg := _eafde.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _dadgg != nil {
		return _dadgg
	}
	return nil
}
func (_bbdca ST_TextAlignType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bbdca.String(), start)
}
func (_efcc *CT_FontCollection) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_efcc.Latin = NewCT_TextFont()
	_efcc.Ea = NewCT_TextFont()
	_efcc.Cs = NewCT_TextFont()
_gbdfbd:
	for {
		_eadag, _cgaga := d.Token()
		if _cgaga != nil {
			return _cgaga
		}
		switch _afgb := _eadag.(type) {
		case _d.StartElement:
			switch _afgb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}:
				if _bdfgg := d.DecodeElement(_efcc.Latin, &_afgb); _bdfgg != nil {
					return _bdfgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}:
				if _ecbfa := d.DecodeElement(_efcc.Ea, &_afgb); _ecbfa != nil {
					return _ecbfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}:
				if _ggec := d.DecodeElement(_efcc.Cs, &_afgb); _ggec != nil {
					return _ggec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_bbgd := NewCT_SupplementalFont()
				if _cbag := d.DecodeElement(_bbgd, &_afgb); _cbag != nil {
					return _cbag
				}
				_efcc.Font = append(_efcc.Font, _bbgd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efcc.ExtLst = NewCT_OfficeArtExtensionList()
				if _gcfef := d.DecodeElement(_efcc.ExtLst, &_afgb); _gcfef != nil {
					return _gcfef
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _afgb.Name)
				if _fbbgb := d.Skip(); _fbbgb != nil {
					return _fbbgb
				}
			}
		case _d.EndElement:
			break _gbdfbd
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_LuminanceEffect and its children
func (_aegac *CT_LuminanceEffect) Validate() error {
	return _aegac.ValidateWithPath("\u0043T\u005fL\u0075\u006d\u0069\u006e\u0061n\u0063\u0065E\u0066\u0066\u0065\u0063\u0074")
}

type CT_Hyperlink struct {
	IdAttr             *string
	InvalidUrlAttr     *string
	ActionAttr         *string
	TgtFrameAttr       *string
	TooltipAttr        *string
	HistoryAttr        *bool
	HighlightClickAttr *bool
	EndSndAttr         *bool
	Snd                *CT_EmbeddedWAVAudioFile
	ExtLst             *CT_OfficeArtExtensionList
}

func (_cfcec *EG_Effect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cfcec.Cont != nil {
		_efcfa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
		e.EncodeElement(_cfcec.Cont, _efcfa)
	}
	if _cfcec.Effect != nil {
		_fcge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_cfcec.Effect, _fcge)
	}
	if _cfcec.AlphaBiLevel != nil {
		_fbagc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_cfcec.AlphaBiLevel, _fbagc)
	}
	if _cfcec.AlphaCeiling != nil {
		_defac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		e.EncodeElement(_cfcec.AlphaCeiling, _defac)
	}
	if _cfcec.AlphaFloor != nil {
		_ffgca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		e.EncodeElement(_cfcec.AlphaFloor, _ffgca)
	}
	if _cfcec.AlphaInv != nil {
		_dgebf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		e.EncodeElement(_cfcec.AlphaInv, _dgebf)
	}
	if _cfcec.AlphaMod != nil {
		_dagff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_cfcec.AlphaMod, _dagff)
	}
	if _cfcec.AlphaModFix != nil {
		_aecbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		e.EncodeElement(_cfcec.AlphaModFix, _aecbc)
	}
	if _cfcec.AlphaOutset != nil {
		_ffcfcf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}}
		e.EncodeElement(_cfcec.AlphaOutset, _ffcfcf)
	}
	if _cfcec.AlphaRepl != nil {
		_dbdbd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		e.EncodeElement(_cfcec.AlphaRepl, _dbdbd)
	}
	if _cfcec.BiLevel != nil {
		_abfbd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		e.EncodeElement(_cfcec.BiLevel, _abfbd)
	}
	if _cfcec.Blend != nil {
		_adcgdb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u006c\u0065\u006e\u0064"}}
		e.EncodeElement(_cfcec.Blend, _adcgdb)
	}
	if _cfcec.Blur != nil {
		_gcfgdd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_cfcec.Blur, _gcfgdd)
	}
	if _cfcec.ClrChange != nil {
		_eegee := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		e.EncodeElement(_cfcec.ClrChange, _eegee)
	}
	if _cfcec.ClrRepl != nil {
		_gbeda := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		e.EncodeElement(_cfcec.ClrRepl, _gbeda)
	}
	if _cfcec.Duotone != nil {
		_acad := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		e.EncodeElement(_cfcec.Duotone, _acad)
	}
	if _cfcec.Fill != nil {
		_begbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_cfcec.Fill, _begbb)
	}
	if _cfcec.FillOverlay != nil {
		_beee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_cfcec.FillOverlay, _beee)
	}
	if _cfcec.Glow != nil {
		_bdage := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_cfcec.Glow, _bdage)
	}
	if _cfcec.Grayscl != nil {
		_aabde := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		e.EncodeElement(_cfcec.Grayscl, _aabde)
	}
	if _cfcec.Hsl != nil {
		_cafbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		e.EncodeElement(_cfcec.Hsl, _cafbf)
	}
	if _cfcec.InnerShdw != nil {
		_bbgaac := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_cfcec.InnerShdw, _bbgaac)
	}
	if _cfcec.Lum != nil {
		_fgadd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_cfcec.Lum, _fgadd)
	}
	if _cfcec.OuterShdw != nil {
		_gacc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_cfcec.OuterShdw, _gacc)
	}
	if _cfcec.PrstShdw != nil {
		_efgbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_cfcec.PrstShdw, _efgbb)
	}
	if _cfcec.Reflection != nil {
		_bggbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cfcec.Reflection, _bggbf)
	}
	if _cfcec.RelOff != nil {
		_cgfge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072\u0065\u006c\u004f\u0066\u0066"}}
		e.EncodeElement(_cfcec.RelOff, _cgfge)
	}
	if _cfcec.SoftEdge != nil {
		_defgf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_cfcec.SoftEdge, _defgf)
	}
	if _cfcec.Tint != nil {
		_bcabb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_cfcec.Tint, _bcabb)
	}
	if _cfcec.Xfrm != nil {
		_dbfbdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_cfcec.Xfrm, _dbfbdc)
	}
	return nil
}
func (_bdag *CT_GrayscaleEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_fdfe, _fdgf := d.Token()
		if _fdgf != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0047\u0072\u0061\u0079\u0073\u0063\u0061l\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _fdgf)
		}
		if _eecfdc, _edgdb := _fdfe.(_d.EndElement); _edgdb && _eecfdc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_afcbe *CT_GvmlShape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gdcbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_afcbe.NvSpPr, _gdcbb)
	_cffeg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_afcbe.SpPr, _cffeg)
	if _afcbe.TxSp != nil {
		_bgba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0078\u0053\u0070"}}
		e.EncodeElement(_afcbe.TxSp, _bgba)
	}
	if _afcbe.Style != nil {
		_aeeca := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_afcbe.Style, _aeeca)
	}
	if _afcbe.ExtLst != nil {
		_bdced := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_afcbe.ExtLst, _bdced)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gadcg *CT_GradientStop) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u006f\u0073"}, Value: _dg.Sprintf("\u0025\u0076", _gadcg.PosAttr)})
	e.EncodeToken(start)
	if _gadcg.ScrgbClr != nil {
		_ddad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_gadcg.ScrgbClr, _ddad)
	}
	if _gadcg.SrgbClr != nil {
		_cbdad := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_gadcg.SrgbClr, _cbdad)
	}
	if _gadcg.HslClr != nil {
		_abdaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_gadcg.HslClr, _abdaf)
	}
	if _gadcg.SysClr != nil {
		_afdag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_gadcg.SysClr, _afdag)
	}
	if _gadcg.SchemeClr != nil {
		_gdbb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_gadcg.SchemeClr, _gdbb)
	}
	if _gadcg.PrstClr != nil {
		_gcfec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_gadcg.PrstClr, _gcfec)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SystemColor and its children, prefixing error messages with path
func (_geff *CT_SystemColor) ValidateWithPath(path string) error {
	if _geff.ValAttr == ST_SystemColorValUnset {
		return _dg.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _aeebc := _geff.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _aeebc != nil {
		return _aeebc
	}
	for _agfdbd, _edfg := range _geff.EG_ColorTransform {
		if _bceb := _edfg.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _agfdbd)); _bceb != nil {
			return _bceb
		}
	}
	return nil
}

// Validate validates the CT_Shape3D and its children
func (_edeebf *CT_Shape3D) Validate() error {
	return _edeebf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0033\u0044")
}
func (_bgacb ST_PenAlignment) ValidateWithPath(path string) error {
	switch _bgacb {
	case 0, 1, 2:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgacb))
	}
	return nil
}
func (_ccdgg ST_TextFontAlignType) Validate() error { return _ccdgg.ValidateWithPath("") }
func (_fdbb *CT_SchemeColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_afged, _gfbbe := _fdbb.ValAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0061\u006c"})
	if _gfbbe != nil {
		return _gfbbe
	}
	start.Attr = append(start.Attr, _afged)
	e.EncodeToken(start)
	if _fdbb.EG_ColorTransform != nil {
		for _, _ggee := range _fdbb.EG_ColorTransform {
			_ggee.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CustomGeometry2D and its children, prefixing error messages with path
func (_agda *CT_CustomGeometry2D) ValidateWithPath(path string) error {
	if _agda.AvLst != nil {
		if _aabaf := _agda.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _aabaf != nil {
			return _aabaf
		}
	}
	if _agda.GdLst != nil {
		if _eefb := _agda.GdLst.ValidateWithPath(path + "\u002f\u0047\u0064\u004c\u0073\u0074"); _eefb != nil {
			return _eefb
		}
	}
	if _agda.AhLst != nil {
		if _eecg := _agda.AhLst.ValidateWithPath(path + "\u002f\u0041\u0068\u004c\u0073\u0074"); _eecg != nil {
			return _eecg
		}
	}
	if _agda.CxnLst != nil {
		if _adebe := _agda.CxnLst.ValidateWithPath(path + "\u002fC\u0078\u006e\u004c\u0073\u0074"); _adebe != nil {
			return _adebe
		}
	}
	if _agda.Rect != nil {
		if _gaea := _agda.Rect.ValidateWithPath(path + "\u002f\u0052\u0065c\u0074"); _gaea != nil {
			return _gaea
		}
	}
	if _cggc := _agda.PathLst.ValidateWithPath(path + "\u002f\u0050\u0061\u0074\u0068\u004c\u0073\u0074"); _cggc != nil {
		return _cggc
	}
	return nil
}
func (_dadb *CT_BackgroundFormatting) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dadb.NoFill != nil {
		_gad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dadb.NoFill, _gad)
	}
	if _dadb.SolidFill != nil {
		_fag := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dadb.SolidFill, _fag)
	}
	if _dadb.GradFill != nil {
		_eedb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dadb.GradFill, _eedb)
	}
	if _dadb.BlipFill != nil {
		_ffce := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dadb.BlipFill, _ffce)
	}
	if _dadb.PattFill != nil {
		_cggg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dadb.PattFill, _cggg)
	}
	if _dadb.GrpFill != nil {
		_effb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_dadb.GrpFill, _effb)
	}
	if _dadb.EffectLst != nil {
		_cbba := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dadb.EffectLst, _cbba)
	}
	if _dadb.EffectDag != nil {
		_fcgb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_dadb.EffectDag, _fcgb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eaaba *CT_InnerShadowEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cagaa := range start.Attr {
		if _cagaa.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_cgcd, _bggf := _c.ParseInt(_cagaa.Value, 10, 64)
			if _bggf != nil {
				return _bggf
			}
			_eaaba.BlurRadAttr = &_cgcd
			continue
		}
		if _cagaa.Name.Local == "\u0064\u0069\u0073\u0074" {
			_cebf, _aabdg := _c.ParseInt(_cagaa.Value, 10, 64)
			if _aabdg != nil {
				return _aabdg
			}
			_eaaba.DistAttr = &_cebf
			continue
		}
		if _cagaa.Name.Local == "\u0064\u0069\u0072" {
			_gedf, _bgcbd := _c.ParseInt(_cagaa.Value, 10, 32)
			if _bgcbd != nil {
				return _bgcbd
			}
			_fddf := int32(_gedf)
			_eaaba.DirAttr = &_fddf
			continue
		}
	}
_becec:
	for {
		_abbccg, _fadgg := d.Token()
		if _fadgg != nil {
			return _fadgg
		}
		switch _gedeb := _abbccg.(type) {
		case _d.StartElement:
			switch _gedeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_eaaba.ScrgbClr = NewCT_ScRgbColor()
				if _eafgf := d.DecodeElement(_eaaba.ScrgbClr, &_gedeb); _eafgf != nil {
					return _eafgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_eaaba.SrgbClr = NewCT_SRgbColor()
				if _ddfgb := d.DecodeElement(_eaaba.SrgbClr, &_gedeb); _ddfgb != nil {
					return _ddfgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_eaaba.HslClr = NewCT_HslColor()
				if _eeffd := d.DecodeElement(_eaaba.HslClr, &_gedeb); _eeffd != nil {
					return _eeffd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_eaaba.SysClr = NewCT_SystemColor()
				if _gefea := d.DecodeElement(_eaaba.SysClr, &_gedeb); _gefea != nil {
					return _gefea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_eaaba.SchemeClr = NewCT_SchemeColor()
				if _fcgdf := d.DecodeElement(_eaaba.SchemeClr, &_gedeb); _fcgdf != nil {
					return _fcgdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_eaaba.PrstClr = NewCT_PresetColor()
				if _dgge := d.DecodeElement(_eaaba.PrstClr, &_gedeb); _dgge != nil {
					return _dgge
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _gedeb.Name)
				if _cdcae := d.Skip(); _cdcae != nil {
					return _cdcae
				}
			}
		case _d.EndElement:
			break _becec
		case _d.CharData:
		}
	}
	return nil
}
func NewEG_Geometry() *EG_Geometry { _fgbdc := &EG_Geometry{}; return _fgbdc }

// ValidateWithPath validates the CT_Blip and its children, prefixing error messages with path
func (_bgbf *CT_Blip) ValidateWithPath(path string) error {
	if _gcbf := _bgbf.CstateAttr.ValidateWithPath(path + "/\u0043\u0073\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _gcbf != nil {
		return _gcbf
	}
	for _gdef, _edcdf := range _bgbf.Choice {
		if _aecd := _edcdf.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _gdef)); _aecd != nil {
			return _aecd
		}
	}
	if _bgbf.ExtLst != nil {
		if _bbca := _bgbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbca != nil {
			return _bbca
		}
	}
	return nil
}
func (_febfea ST_OnOffStyleType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_febfea.String(), start)
}
func (_dgedf *CT_RegularTextRun) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dgedf.RPr != nil {
		_fbead := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_dgedf.RPr, _fbead)
	}
	_abfd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074"}}
	_cb.AddPreserveSpaceAttr(&_abfd, _dgedf.T)
	e.EncodeElement(_dgedf.T, _abfd)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ecacf *EG_ThemeableEffectStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ecacf.Effect != nil {
		_ffbcf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_ecacf.Effect, _ffbcf)
	}
	if _ecacf.EffectRef != nil {
		_cbbaa := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
		e.EncodeElement(_ecacf.EffectRef, _cbbaa)
	}
	return nil
}
func (_bdaea *ST_TextBulletSize) ValidateWithPath(path string) error {
	_cbabed := []string{}
	if _bdaea.ST_TextBulletSizePercent != nil {
		_cbabed = append(_cbabed, "\u0053T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _bdaea.ST_TextBulletSizeDecimal != nil {
		_cbabed = append(_cbabed, "\u0053T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0044\u0065\u0063\u0069\u006d\u0061\u006c")
	}
	if len(_cbabed) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cbabed)
	}
	return nil
}
func (_bbaaa *EG_LineJoinProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ebgbe:
	for {
		_edced, _gedbff := d.Token()
		if _gedbff != nil {
			return _gedbff
		}
		switch _cgead := _edced.(type) {
		case _d.StartElement:
			switch _cgead.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}:
				_bbaaa.Round = NewCT_LineJoinRound()
				if _aagbc := d.DecodeElement(_bbaaa.Round, &_cgead); _aagbc != nil {
					return _aagbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				_bbaaa.Bevel = NewCT_LineJoinBevel()
				if _edgeg := d.DecodeElement(_bbaaa.Bevel, &_cgead); _edgeg != nil {
					return _edgeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}:
				_bbaaa.Miter = NewCT_LineJoinMiterProperties()
				if _dacga := d.DecodeElement(_bbaaa.Miter, &_cgead); _dacga != nil {
					return _dacga
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cgead.Name)
				if _bbcab := d.Skip(); _bbcab != nil {
					return _bbcab
				}
			}
		case _d.EndElement:
			break _ebgbe
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorMappingOverrideChoice and its children, prefixing error messages with path
func (_eegd *CT_ColorMappingOverrideChoice) ValidateWithPath(path string) error {
	if _eegd.MasterClrMapping != nil {
		if _dcgcg := _eegd.MasterClrMapping.ValidateWithPath(path + "\u002f\u004d\u0061\u0073\u0074\u0065\u0072\u0043\u006c\u0072\u004d\u0061p\u0070\u0069\u006e\u0067"); _dcgcg != nil {
			return _dcgcg
		}
	}
	if _eegd.OverrideClrMapping != nil {
		if _ebbd := _eegd.OverrideClrMapping.ValidateWithPath(path + "\u002f\u004f\u0076\u0065rr\u0069\u0064\u0065\u0043\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"); _ebbd != nil {
			return _ebbd
		}
	}
	return nil
}
func NewCT_TextShapeAutofit() *CT_TextShapeAutofit { _ggcab := &CT_TextShapeAutofit{}; return _ggcab }
func (_ddfcg *CT_GammaTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_ffaa, _gbfa := d.Token()
		if _gbfa != nil {
			return _dg.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d: \u0025\u0073", _gbfa)
		}
		if _acagf, _adga := _ffaa.(_d.EndElement); _adga && _acagf.Name == start.Name {
			break
		}
	}
	return nil
}

type EG_Text3D struct {
	Sp3d   *CT_Shape3D
	FlatTx *CT_FlatText
}

func (_bfadfd ST_FixedPercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bfadfd.ST_FixedPercentageDecimal != nil {
		e.EncodeToken(_d.CharData(_dg.Sprintf("\u0025\u0064", *_bfadfd.ST_FixedPercentageDecimal)))
	}
	if _bfadfd.ST_FixedPercentage != nil {
		e.Encode(_bfadfd.ST_FixedPercentage)
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_edcgd *CT_TextBulletColorFollowText) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_TextAutofit and its children, prefixing error messages with path
func (_aeedf *EG_TextAutofit) ValidateWithPath(path string) error {
	if _aeedf.NoAutofit != nil {
		if _cegbg := _aeedf.NoAutofit.ValidateWithPath(path + "\u002f\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _cegbg != nil {
			return _cegbg
		}
	}
	if _aeedf.NormAutofit != nil {
		if _gdddd := _aeedf.NormAutofit.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _gdddd != nil {
			return _gdddd
		}
	}
	if _aeedf.SpAutoFit != nil {
		if _adgacf := _aeedf.SpAutoFit.ValidateWithPath(path + "\u002f\u0053\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"); _adgacf != nil {
			return _adgacf
		}
	}
	return nil
}

// Validate validates the CT_AnimationGraphicalObjectBuildProperties and its children
func (_gcgc *CT_AnimationGraphicalObjectBuildProperties) Validate() error {
	return _gcgc.ValidateWithPath("\u0043\u0054\u005fA\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the EG_Effect and its children, prefixing error messages with path
func (_bgagb *EG_Effect) ValidateWithPath(path string) error {
	if _bgagb.Cont != nil {
		if _eaabb := _bgagb.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _eaabb != nil {
			return _eaabb
		}
	}
	if _bgagb.Effect != nil {
		if _baeef := _bgagb.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _baeef != nil {
			return _baeef
		}
	}
	if _bgagb.AlphaBiLevel != nil {
		if _bdageg := _bgagb.AlphaBiLevel.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _bdageg != nil {
			return _bdageg
		}
	}
	if _bgagb.AlphaCeiling != nil {
		if _eadcf := _bgagb.AlphaCeiling.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"); _eadcf != nil {
			return _eadcf
		}
	}
	if _bgagb.AlphaFloor != nil {
		if _gagfg := _bgagb.AlphaFloor.ValidateWithPath(path + "/\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"); _gagfg != nil {
			return _gagfg
		}
	}
	if _bgagb.AlphaInv != nil {
		if _debg := _bgagb.AlphaInv.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u0049\u006ev"); _debg != nil {
			return _debg
		}
	}
	if _bgagb.AlphaMod != nil {
		if _gbcab := _bgagb.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _gbcab != nil {
			return _gbcab
		}
	}
	if _bgagb.AlphaModFix != nil {
		if _fdedae := _bgagb.AlphaModFix.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"); _fdedae != nil {
			return _fdedae
		}
	}
	if _bgagb.AlphaOutset != nil {
		if _cagbcb := _bgagb.AlphaOutset.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"); _cagbcb != nil {
			return _cagbcb
		}
	}
	if _bgagb.AlphaRepl != nil {
		if _cbeccc := _bgagb.AlphaRepl.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"); _cbeccc != nil {
			return _cbeccc
		}
	}
	if _bgagb.BiLevel != nil {
		if _ebcbba := _bgagb.BiLevel.ValidateWithPath(path + "\u002f\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _ebcbba != nil {
			return _ebcbba
		}
	}
	if _bgagb.Blend != nil {
		if _debee := _bgagb.Blend.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064"); _debee != nil {
			return _debee
		}
	}
	if _bgagb.Blur != nil {
		if _bacd := _bgagb.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _bacd != nil {
			return _bacd
		}
	}
	if _bgagb.ClrChange != nil {
		if _bgedf := _bgagb.ClrChange.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"); _bgedf != nil {
			return _bgedf
		}
	}
	if _bgagb.ClrRepl != nil {
		if _fdcfd := _bgagb.ClrRepl.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0052\u0065\u0070\u006c"); _fdcfd != nil {
			return _fdcfd
		}
	}
	if _bgagb.Duotone != nil {
		if _ebdaea := _bgagb.Duotone.ValidateWithPath(path + "\u002f\u0044\u0075\u006f\u0074\u006f\u006e\u0065"); _ebdaea != nil {
			return _ebdaea
		}
	}
	if _bgagb.Fill != nil {
		if _bbbab := _bgagb.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _bbbab != nil {
			return _bbbab
		}
	}
	if _bgagb.FillOverlay != nil {
		if _begdd := _bgagb.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _begdd != nil {
			return _begdd
		}
	}
	if _bgagb.Glow != nil {
		if _ffdgf := _bgagb.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _ffdgf != nil {
			return _ffdgf
		}
	}
	if _bgagb.Grayscl != nil {
		if _faeef := _bgagb.Grayscl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0079\u0073\u0063\u006c"); _faeef != nil {
			return _faeef
		}
	}
	if _bgagb.Hsl != nil {
		if _cfabb := _bgagb.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _cfabb != nil {
			return _cfabb
		}
	}
	if _bgagb.InnerShdw != nil {
		if _cedf := _bgagb.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _cedf != nil {
			return _cedf
		}
	}
	if _bgagb.Lum != nil {
		if _adfdbf := _bgagb.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _adfdbf != nil {
			return _adfdbf
		}
	}
	if _bgagb.OuterShdw != nil {
		if _cgcea := _bgagb.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _cgcea != nil {
			return _cgcea
		}
	}
	if _bgagb.PrstShdw != nil {
		if _afddf := _bgagb.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _afddf != nil {
			return _afddf
		}
	}
	if _bgagb.Reflection != nil {
		if _eedac := _bgagb.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _eedac != nil {
			return _eedac
		}
	}
	if _bgagb.RelOff != nil {
		if _ccbeb := _bgagb.RelOff.ValidateWithPath(path + "\u002fR\u0065\u006c\u004f\u0066\u0066"); _ccbeb != nil {
			return _ccbeb
		}
	}
	if _bgagb.SoftEdge != nil {
		if _daccg := _bgagb.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _daccg != nil {
			return _daccg
		}
	}
	if _bgagb.Tint != nil {
		if _bccce := _bgagb.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _bccce != nil {
			return _bccce
		}
	}
	if _bgagb.Xfrm != nil {
		if _eeacfa := _bgagb.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _eeacfa != nil {
			return _eeacfa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextBlipBullet and its children, prefixing error messages with path
func (_cgfe *CT_TextBlipBullet) ValidateWithPath(path string) error {
	if _cageg := _cgfe.Blip.ValidateWithPath(path + "\u002f\u0042\u006ci\u0070"); _cageg != nil {
		return _cageg
	}
	return nil
}

// ValidateWithPath validates the CT_Camera and its children, prefixing error messages with path
func (_cbcda *CT_Camera) ValidateWithPath(path string) error {
	if _cbcda.PrstAttr == ST_PresetCameraTypeUnset {
		return _dg.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cad := _cbcda.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _cad != nil {
		return _cad
	}
	if _cbcda.FovAttr != nil {
		if *_cbcda.FovAttr < 0 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0046\u006fv\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cbcda.FovAttr)
		}
		if *_cbcda.FovAttr > 10800000 {
			return _dg.Errorf("\u0025\u0073\u002fm\u002e\u0046\u006f\u0076\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0031\u0030\u0038\u0030\u0030\u0030\u0030\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cbcda.FovAttr)
		}
	}
	if _cbcda.ZoomAttr != nil {
		if _edag := _cbcda.ZoomAttr.ValidateWithPath(path + "\u002fZ\u006f\u006f\u006d\u0041\u0074\u0074r"); _edag != nil {
			return _edag
		}
	}
	if _cbcda.Rot != nil {
		if _eaf := _cbcda.Rot.ValidateWithPath(path + "\u002f\u0052\u006f\u0074"); _eaf != nil {
			return _eaf
		}
	}
	return nil
}
func (_ffebd *CT_GraphicalObjectData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0072\u0069"}, Value: _dg.Sprintf("\u0025\u0076", _ffebd.UriAttr)})
	e.EncodeToken(start)
	if _ffebd.Any != nil {
		for _, _cdag := range _ffebd.Any {
			_cdag.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TextAnchoringTypeUnset ST_TextAnchoringType = 0
	ST_TextAnchoringTypeT     ST_TextAnchoringType = 1
	ST_TextAnchoringTypeCtr   ST_TextAnchoringType = 2
	ST_TextAnchoringTypeB     ST_TextAnchoringType = 3
	ST_TextAnchoringTypeJust  ST_TextAnchoringType = 4
	ST_TextAnchoringTypeDist  ST_TextAnchoringType = 5
)

// Validate validates the CT_GradientFillProperties and its children
func (_gegc *CT_GradientFillProperties) Validate() error {
	return _gegc.ValidateWithPath("\u0043T\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046i\u006cl\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s")
}
func (_bcdgc *ST_PathShadeType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bcdgc = 0
	case "\u0073\u0068\u0061p\u0065":
		*_bcdgc = 1
	case "\u0063\u0069\u0072\u0063\u006c\u0065":
		*_bcdgc = 2
	case "\u0072\u0065\u0063\u0074":
		*_bcdgc = 3
	}
	return nil
}

// ValidateWithPath validates the CT_EmbeddedWAVAudioFile and its children, prefixing error messages with path
func (_gebde *CT_EmbeddedWAVAudioFile) ValidateWithPath(path string) error { return nil }
func (_gffgg *CT_Path2DArcTo) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _deggge := range start.Attr {
		if _deggge.Name.Local == "\u0077\u0052" {
			_bdcb, _dfbe := ParseUnionST_AdjCoordinate(_deggge.Value)
			if _dfbe != nil {
				return _dfbe
			}
			_gffgg.WRAttr = _bdcb
			continue
		}
		if _deggge.Name.Local == "\u0068\u0052" {
			_ebade, _dcadd := ParseUnionST_AdjCoordinate(_deggge.Value)
			if _dcadd != nil {
				return _dcadd
			}
			_gffgg.HRAttr = _ebade
			continue
		}
		if _deggge.Name.Local == "\u0073\u0074\u0041n\u0067" {
			_bdbfd, _bdcg := ParseUnionST_AdjAngle(_deggge.Value)
			if _bdcg != nil {
				return _bdcg
			}
			_gffgg.StAngAttr = _bdbfd
			continue
		}
		if _deggge.Name.Local == "\u0073\u0077\u0041n\u0067" {
			_ecddf, _fcfaff := ParseUnionST_AdjAngle(_deggge.Value)
			if _fcfaff != nil {
				return _fcfaff
			}
			_gffgg.SwAngAttr = _ecddf
			continue
		}
	}
	for {
		_gfdcc, _bebbc := d.Token()
		if _bebbc != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0074\u0068\u0032\u0044\u0041\u0072\u0063\u0054\u006f:\u0020\u0025\u0073", _bebbc)
		}
		if _efddag, _eddc := _gfdcc.(_d.EndElement); _eddc && _efddag.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cbf *CT_AlphaOutsetEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cbf.RadAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0061\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_cbf.RadAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_GradientStopList() *CT_GradientStopList { _gbag := &CT_GradientStopList{}; return _gbag }
func (_dagd *CT_GeomGuideList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dagd.Gd != nil {
		_edde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0064"}}
		for _, _cedg := range _dagd.Gd {
			e.EncodeElement(_cedg, _edde)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cfcg *CT_ConnectionSiteList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cfcg.Cxn != nil {
		_gebee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063x\u006e"}}
		for _, _cbcf := range _cfcg.Cxn {
			e.EncodeElement(_cbcf, _gebee)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ebaba *ST_TextUnderlineType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ebaba = 0
	case "\u006e\u006f\u006e\u0065":
		*_ebaba = 1
	case "\u0077\u006f\u0072d\u0073":
		*_ebaba = 2
	case "\u0073\u006e\u0067":
		*_ebaba = 3
	case "\u0064\u0062\u006c":
		*_ebaba = 4
	case "\u0068\u0065\u0061v\u0079":
		*_ebaba = 5
	case "\u0064\u006f\u0074\u0074\u0065\u0064":
		*_ebaba = 6
	case "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079":
		*_ebaba = 7
	case "\u0064\u0061\u0073\u0068":
		*_ebaba = 8
	case "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y":
		*_ebaba = 9
	case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067":
		*_ebaba = 10
	case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079":
		*_ebaba = 11
	case "\u0064o\u0074\u0044\u0061\u0073\u0068":
		*_ebaba = 12
	case "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
		*_ebaba = 13
	case "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068":
		*_ebaba = 14
	case "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
		*_ebaba = 15
	case "\u0077\u0061\u0076\u0079":
		*_ebaba = 16
	case "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y":
		*_ebaba = 17
	case "\u0077a\u0076\u0079\u0044\u0062\u006c":
		*_ebaba = 18
	}
	return nil
}

// Validate validates the CT_LineJoinRound and its children
func (_dfbg *CT_LineJoinRound) Validate() error {
	return _dfbg.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0052\u006f\u0075\u006e\u0064")
}

// ValidateWithPath validates the CT_TablePropertiesChoice and its children, prefixing error messages with path
func (_fbadc *CT_TablePropertiesChoice) ValidateWithPath(path string) error {
	if _fbadc.TableStyle != nil {
		if _bgdbe := _fbadc.TableStyle.ValidateWithPath(path + "/\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"); _bgdbe != nil {
			return _bgdbe
		}
	}
	if _fbadc.TableStyleId != nil {
		if !_fe.ST_GuidPatternRe.MatchString(*_fbadc.TableStyleId) {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0054\u0061b\u006c\u0065\u0053t\u0079\u006c\u0065\u0049d\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fe.ST_GuidPatternRe, *_fbadc.TableStyleId)
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlGroupShapeChoice and its children, prefixing error messages with path
func (_eddb *CT_GvmlGroupShapeChoice) ValidateWithPath(path string) error {
	for _fgfgb, _eaegf := range _eddb.TxSp {
		if _eaede := _eaegf.ValidateWithPath(_dg.Sprintf("%\u0073\u002f\u0054\u0078\u0053\u0070\u005b\u0025\u0064\u005d", path, _fgfgb)); _eaede != nil {
			return _eaede
		}
	}
	for _fbcfb, _dcfae := range _eddb.Sp {
		if _abfe := _dcfae.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _fbcfb)); _abfe != nil {
			return _abfe
		}
	}
	for _ecfgg, _aaaab := range _eddb.CxnSp {
		if _edfec := _aaaab.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _ecfgg)); _edfec != nil {
			return _edfec
		}
	}
	for _eeged, _eeafa := range _eddb.Pic {
		if _bgfaa := _eeafa.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _eeged)); _bgfaa != nil {
			return _bgfaa
		}
	}
	for _becg, _gfgdd := range _eddb.GraphicFrame {
		if _cadc := _gfgdd.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _becg)); _cadc != nil {
			return _cadc
		}
	}
	for _bbbfa, _bfaf := range _eddb.GrpSp {
		if _gcbce := _bfaf.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _bbbfa)); _gcbce != nil {
			return _gcbce
		}
	}
	return nil
}

type CT_Path2DMoveTo struct{ Pt *CT_AdjPoint2D }

func (_cdgcf ST_PresetLineDashVal) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ccgbce := _d.Attr{}
	_ccgbce.Name = name
	switch _cdgcf {
	case ST_PresetLineDashValUnset:
		_ccgbce.Value = ""
	case ST_PresetLineDashValSolid:
		_ccgbce.Value = "\u0073\u006f\u006ci\u0064"
	case ST_PresetLineDashValDot:
		_ccgbce.Value = "\u0064\u006f\u0074"
	case ST_PresetLineDashValDash:
		_ccgbce.Value = "\u0064\u0061\u0073\u0068"
	case ST_PresetLineDashValLgDash:
		_ccgbce.Value = "\u006c\u0067\u0044\u0061\u0073\u0068"
	case ST_PresetLineDashValDashDot:
		_ccgbce.Value = "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case ST_PresetLineDashValLgDashDot:
		_ccgbce.Value = "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft"
	case ST_PresetLineDashValLgDashDotDot:
		_ccgbce.Value = "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDash:
		_ccgbce.Value = "\u0073y\u0073\u0044\u0061\u0073\u0068"
	case ST_PresetLineDashValSysDot:
		_ccgbce.Value = "\u0073\u0079\u0073\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDashDot:
		_ccgbce.Value = "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDashDotDot:
		_ccgbce.Value = "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	}
	return _ccgbce, nil
}
func (_dgbbfe ST_ChartBuildStep) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_febagb := _d.Attr{}
	_febagb.Name = name
	switch _dgbbfe {
	case ST_ChartBuildStepUnset:
		_febagb.Value = ""
	case ST_ChartBuildStepCategory:
		_febagb.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_ChartBuildStepPtInCategory:
		_febagb.Value = "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_ChartBuildStepSeries:
		_febagb.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_ChartBuildStepPtInSeries:
		_febagb.Value = "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case ST_ChartBuildStepAllPts:
		_febagb.Value = "\u0061\u006c\u006c\u0050\u0074\u0073"
	case ST_ChartBuildStepGridLegend:
		_febagb.Value = "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	}
	return _febagb, nil
}
func (_adacc *EG_LineFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gddd:
	for {
		_defdf, _aacfd := d.Token()
		if _aacfd != nil {
			return _aacfd
		}
		switch _fbeacg := _defdf.(type) {
		case _d.StartElement:
			switch _fbeacg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_adacc.NoFill = NewCT_NoFillProperties()
				if _afbcga := d.DecodeElement(_adacc.NoFill, &_fbeacg); _afbcga != nil {
					return _afbcga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_adacc.SolidFill = NewCT_SolidColorFillProperties()
				if _efddca := d.DecodeElement(_adacc.SolidFill, &_fbeacg); _efddca != nil {
					return _efddca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_adacc.GradFill = NewCT_GradientFillProperties()
				if _degdf := d.DecodeElement(_adacc.GradFill, &_fbeacg); _degdf != nil {
					return _degdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_adacc.PattFill = NewCT_PatternFillProperties()
				if _bacdf := d.DecodeElement(_adacc.PattFill, &_fbeacg); _bacdf != nil {
					return _bacdf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fbeacg.Name)
				if _dbcdc := d.Skip(); _dbcdc != nil {
					return _dbcdc
				}
			}
		case _d.EndElement:
			break _gddd
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_LightRigTypeUnset         ST_LightRigType = 0
	ST_LightRigTypeLegacyFlat1   ST_LightRigType = 1
	ST_LightRigTypeLegacyFlat2   ST_LightRigType = 2
	ST_LightRigTypeLegacyFlat3   ST_LightRigType = 3
	ST_LightRigTypeLegacyFlat4   ST_LightRigType = 4
	ST_LightRigTypeLegacyNormal1 ST_LightRigType = 5
	ST_LightRigTypeLegacyNormal2 ST_LightRigType = 6
	ST_LightRigTypeLegacyNormal3 ST_LightRigType = 7
	ST_LightRigTypeLegacyNormal4 ST_LightRigType = 8
	ST_LightRigTypeLegacyHarsh1  ST_LightRigType = 9
	ST_LightRigTypeLegacyHarsh2  ST_LightRigType = 10
	ST_LightRigTypeLegacyHarsh3  ST_LightRigType = 11
	ST_LightRigTypeLegacyHarsh4  ST_LightRigType = 12
	ST_LightRigTypeThreePt       ST_LightRigType = 13
	ST_LightRigTypeBalanced      ST_LightRigType = 14
	ST_LightRigTypeSoft          ST_LightRigType = 15
	ST_LightRigTypeHarsh         ST_LightRigType = 16
	ST_LightRigTypeFlood         ST_LightRigType = 17
	ST_LightRigTypeContrasting   ST_LightRigType = 18
	ST_LightRigTypeMorning       ST_LightRigType = 19
	ST_LightRigTypeSunrise       ST_LightRigType = 20
	ST_LightRigTypeSunset        ST_LightRigType = 21
	ST_LightRigTypeChilly        ST_LightRigType = 22
	ST_LightRigTypeFreezing      ST_LightRigType = 23
	ST_LightRigTypeFlat          ST_LightRigType = 24
	ST_LightRigTypeTwoPt         ST_LightRigType = 25
	ST_LightRigTypeGlow          ST_LightRigType = 26
	ST_LightRigTypeBrightRoom    ST_LightRigType = 27
)

// ValidateWithPath validates the CT_Hyperlink and its children, prefixing error messages with path
func (_gccad *CT_Hyperlink) ValidateWithPath(path string) error {
	if _gccad.Snd != nil {
		if _fefc := _gccad.Snd.ValidateWithPath(path + "\u002f\u0053\u006e\u0064"); _fefc != nil {
			return _fefc
		}
	}
	if _gccad.ExtLst != nil {
		if _gceecc := _gccad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gceecc != nil {
			return _gceecc
		}
	}
	return nil
}
func (_gedda *CT_ColorMappingOverride) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gedda.Choice.MarshalXML(e, _d.StartElement{})
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fcfacc ST_PathShadeType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ggbcf := _d.Attr{}
	_ggbcf.Name = name
	switch _fcfacc {
	case ST_PathShadeTypeUnset:
		_ggbcf.Value = ""
	case ST_PathShadeTypeShape:
		_ggbcf.Value = "\u0073\u0068\u0061p\u0065"
	case ST_PathShadeTypeCircle:
		_ggbcf.Value = "\u0063\u0069\u0072\u0063\u006c\u0065"
	case ST_PathShadeTypeRect:
		_ggbcf.Value = "\u0072\u0065\u0063\u0074"
	}
	return _ggbcf, nil
}
func (_bcagg *ST_BlendMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dcgddc, _cdgfb := d.Token()
	if _cdgfb != nil {
		return _cdgfb
	}
	if _cggge, _ecbeb := _dcgddc.(_d.EndElement); _ecbeb && _cggge.Name == start.Name {
		*_bcagg = 1
		return nil
	}
	if _cfbge, _aefgg := _dcgddc.(_d.CharData); !_aefgg {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcgddc)
	} else {
		switch string(_cfbge) {
		case "":
			*_bcagg = 0
		case "\u006f\u0076\u0065\u0072":
			*_bcagg = 1
		case "\u006d\u0075\u006c\u0074":
			*_bcagg = 2
		case "\u0073\u0063\u0072\u0065\u0065\u006e":
			*_bcagg = 3
		case "\u0064\u0061\u0072\u006b\u0065\u006e":
			*_bcagg = 4
		case "\u006ci\u0067\u0068\u0074\u0065\u006e":
			*_bcagg = 5
		}
	}
	_dcgddc, _cdgfb = d.Token()
	if _cdgfb != nil {
		return _cdgfb
	}
	if _gegcc, _babag := _dcgddc.(_d.EndElement); _babag && _gegcc.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcgddc)
}
func (_fbgbg *CT_QuickTimeFile) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abdea := range start.Attr {
		if _abdea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _abdea.Name.Local == "\u006c\u0069\u006e\u006b" || _abdea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _abdea.Name.Local == "\u006c\u0069\u006e\u006b" {
			_efdba, _gdbff := _abdea.Value, error(nil)
			if _gdbff != nil {
				return _gdbff
			}
			_fbgbg.LinkAttr = _efdba
			continue
		}
	}
_ddcdf:
	for {
		_efgdf, _fdgeb := d.Token()
		if _fdgeb != nil {
			return _fdgeb
		}
		switch _dgcfg := _efgdf.(type) {
		case _d.StartElement:
			switch _dgcfg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbgbg.ExtLst = NewCT_OfficeArtExtensionList()
				if _dgbag := d.DecodeElement(_fbgbg.ExtLst, &_dgcfg); _dgbag != nil {
					return _dgbag
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065\u0020\u0025v", _dgcfg.Name)
				if _cebdc := d.Skip(); _cebdc != nil {
					return _cebdc
				}
			}
		case _d.EndElement:
			break _ddcdf
		case _d.CharData:
		}
	}
	return nil
}
func (_gfddc *CT_SoftEdgesEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0061\u0064"}, Value: _dg.Sprintf("\u0025\u0076", _gfddc.RadAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_InverseTransform() *CT_InverseTransform { _defa := &CT_InverseTransform{}; return _defa }

type CT_PresetTextShape struct {
	PrstAttr ST_TextShapeType
	AvLst    *CT_GeomGuideList
}

func NewCT_TextLineBreak() *CT_TextLineBreak { _abdbf := &CT_TextLineBreak{}; return _abdbf }

type CT_Camera struct {
	PrstAttr ST_PresetCameraType
	FovAttr  *int32
	ZoomAttr *ST_PositivePercentage
	Rot      *CT_SphereCoords
}

// Validate validates the CT_GvmlTextShapeChoice and its children
func (_debc *CT_GvmlTextShapeChoice) Validate() error {
	return _debc.ValidateWithPath("\u0043\u0054\u005f\u0047vm\u006c\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069c\u0065")
}
func NewCT_GeomGuide() *CT_GeomGuide { _bebc := &CT_GeomGuide{}; return _bebc }
func (_dcdbe *CT_OuterShadowEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dcdbe.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_dcdbe.BlurRadAttr)})
	}
	if _dcdbe.DistAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_dcdbe.DistAttr)})
	}
	if _dcdbe.DirAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0072"}, Value: _dg.Sprintf("\u0025\u0076", *_dcdbe.DirAttr)})
	}
	if _dcdbe.SxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0078"}, Value: _dg.Sprintf("\u0025\u0076", *_dcdbe.SxAttr)})
	}
	if _dcdbe.SyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0079"}, Value: _dg.Sprintf("\u0025\u0076", *_dcdbe.SyAttr)})
	}
	if _dcdbe.KxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0078"}, Value: _dg.Sprintf("\u0025\u0076", *_dcdbe.KxAttr)})
	}
	if _dcdbe.KyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0079"}, Value: _dg.Sprintf("\u0025\u0076", *_dcdbe.KyAttr)})
	}
	if _dcdbe.AlgnAttr != ST_RectAlignmentUnset {
		_cbfbe, _bfac := _dcdbe.AlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _bfac != nil {
			return _bfac
		}
		start.Attr = append(start.Attr, _cbfbe)
	}
	if _dcdbe.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_dcdbe.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _dcdbe.ScrgbClr != nil {
		_cgaff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_dcdbe.ScrgbClr, _cgaff)
	}
	if _dcdbe.SrgbClr != nil {
		_cecfb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_dcdbe.SrgbClr, _cecfb)
	}
	if _dcdbe.HslClr != nil {
		_gdfbca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_dcdbe.HslClr, _gdfbca)
	}
	if _dcdbe.SysClr != nil {
		_fccgfge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_dcdbe.SysClr, _fccgfge)
	}
	if _dcdbe.SchemeClr != nil {
		_efabd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_dcdbe.SchemeClr, _efabd)
	}
	if _dcdbe.PrstClr != nil {
		_bddee := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_dcdbe.PrstClr, _bddee)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cfeecd ST_TextAnchoringType) ValidateWithPath(path string) error {
	switch _cfeecd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfeecd))
	}
	return nil
}

// ValidateWithPath validates the EG_TextUnderlineFill and its children, prefixing error messages with path
func (_cbbfg *EG_TextUnderlineFill) ValidateWithPath(path string) error {
	if _cbbfg.UFillTx != nil {
		if _fbdad := _cbbfg.UFillTx.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c\u0054\u0078"); _fbdad != nil {
			return _fbdad
		}
	}
	if _cbbfg.UFill != nil {
		if _begecd := _cbbfg.UFill.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c"); _begecd != nil {
			return _begecd
		}
	}
	return nil
}
func (_bcgf ST_DgmBuildStep) Validate() error { return _bcgf.ValidateWithPath("") }
func (_cfcdcc ST_EffectContainerType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_aceeb := _d.Attr{}
	_aceeb.Name = name
	switch _cfcdcc {
	case ST_EffectContainerTypeUnset:
		_aceeb.Value = ""
	case ST_EffectContainerTypeSib:
		_aceeb.Value = "\u0073\u0069\u0062"
	case ST_EffectContainerTypeTree:
		_aceeb.Value = "\u0074\u0072\u0065\u0065"
	}
	return _aceeb, nil
}

type CT_BackgroundFillStyleList struct{ EG_FillProperties []*EG_FillProperties }
type CT_ConnectionSiteList struct{ Cxn []*CT_ConnectionSite }

func (_cafgd ST_LightRigType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cafgd.String(), start)
}
func (_beae *CT_GlowEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _beae.RadAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0061\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_beae.RadAttr)})
	}
	e.EncodeToken(start)
	if _beae.ScrgbClr != nil {
		_gccdd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_beae.ScrgbClr, _gccdd)
	}
	if _beae.SrgbClr != nil {
		_bbcd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_beae.SrgbClr, _bbcd)
	}
	if _beae.HslClr != nil {
		_ddbgg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_beae.HslClr, _ddbgg)
	}
	if _beae.SysClr != nil {
		_fgdcb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_beae.SysClr, _fgdcb)
	}
	if _beae.SchemeClr != nil {
		_eede := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_beae.SchemeClr, _eede)
	}
	if _beae.PrstClr != nil {
		_ceagg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_beae.PrstClr, _ceagg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomColor and its children
func (_deba *CT_CustomColor) Validate() error {
	return _deba.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072")
}
func NewCT_Blip() *CT_Blip { _egfb := &CT_Blip{}; return _egfb }
func (_fgagg *EG_TextGeometry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Name.Local = "\u0061\u003a\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0047\u0065\u006fm\u0065\u0074\u0072\u0079"
	if _fgagg.CustGeom != nil {
		_daebb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_fgagg.CustGeom, _daebb)
	}
	if _fgagg.PrstTxWarp != nil {
		_gbcc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070r\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}}
		e.EncodeElement(_fgagg.PrstTxWarp, _gbcc)
	}
	return nil
}
func (_ddbgd *ST_LineEndWidth) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ddbgd = 0
	case "\u0073\u006d":
		*_ddbgd = 1
	case "\u006d\u0065\u0064":
		*_ddbgd = 2
	case "\u006c\u0067":
		*_ddbgd = 3
	}
	return nil
}
func (_gbged *CT_TablePropertiesChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cgbcb:
	for {
		_gddf, _bfdf := d.Token()
		if _bfdf != nil {
			return _bfdf
		}
		switch _acgdg := _gddf.(type) {
		case _d.StartElement:
			switch _acgdg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_gbged.TableStyle = NewCT_TableStyle()
				if _ccdfb := d.DecodeElement(_gbged.TableStyle, &_acgdg); _ccdfb != nil {
					return _ccdfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}:
				_gbged.TableStyleId = new(string)
				if _ffgaa := d.DecodeElement(_gbged.TableStyleId, &_acgdg); _ffgaa != nil {
					return _ffgaa
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _acgdg.Name)
				if _bbgaae := d.Skip(); _bbgaae != nil {
					return _bbgaae
				}
			}
		case _d.EndElement:
			break _cgbcb
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextBulletSizePercent and its children
func (_gfedc *CT_TextBulletSizePercent) Validate() error {
	return _gfedc.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
}

// Validate validates the CT_FixedPercentage and its children
func (_ececa *CT_FixedPercentage) Validate() error {
	return _ececa.ValidateWithPath("\u0043T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065")
}

type CT_TileInfoProperties struct {
	TxAttr   *ST_Coordinate
	TyAttr   *ST_Coordinate
	SxAttr   *ST_Percentage
	SyAttr   *ST_Percentage
	FlipAttr ST_TileFlipMode
	AlgnAttr ST_RectAlignment
}

// ValidateWithPath validates the CT_GradientStopList and its children, prefixing error messages with path
func (_decg *CT_GradientStopList) ValidateWithPath(path string) error {
	for _cbbfb, _fgfad := range _decg.Gs {
		if _ccacf := _fgfad.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0047\u0073\u005b\u0025\u0064]", path, _cbbfb)); _ccacf != nil {
			return _ccacf
		}
	}
	return nil
}
func NewCT_EmptyElement() *CT_EmptyElement { _bgaf := &CT_EmptyElement{}; return _bgaf }

// ValidateWithPath validates the CT_TextTabStopList and its children, prefixing error messages with path
func (_bgcce *CT_TextTabStopList) ValidateWithPath(path string) error {
	for _aded, _dfbf := range _bgcce.Tab {
		if _adcb := _dfbf.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0062\u005b\u0025\u0064\u005d", path, _aded)); _adcb != nil {
			return _adcb
		}
	}
	return nil
}

type CT_TextBulletSizePercent struct{ ValAttr string }

func (_ecac *CT_LineJoinMiterProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ecac.LimAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0069\u006d"}, Value: _dg.Sprintf("\u0025\u0076", *_ecac.LimAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gcbfb ST_TileFlipMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gfacf := _d.Attr{}
	_gfacf.Name = name
	switch _gcbfb {
	case ST_TileFlipModeUnset:
		_gfacf.Value = ""
	case ST_TileFlipModeNone:
		_gfacf.Value = "\u006e\u006f\u006e\u0065"
	case ST_TileFlipModeX:
		_gfacf.Value = "\u0078"
	case ST_TileFlipModeY:
		_gfacf.Value = "\u0079"
	case ST_TileFlipModeXy:
		_gfacf.Value = "\u0078\u0079"
	}
	return _gfacf, nil
}
func (_aefbf ST_DgmBuildStep) String() string {
	switch _aefbf {
	case 0:
		return ""
	case 1:
		return "\u0073\u0070"
	case 2:
		return "\u0062\u0067"
	}
	return ""
}

// ValidateWithPath validates the CT_GradientFillProperties and its children, prefixing error messages with path
func (_cbcca *CT_GradientFillProperties) ValidateWithPath(path string) error {
	if _badg := _cbcca.FlipAttr.ValidateWithPath(path + "\u002fF\u006c\u0069\u0070\u0041\u0074\u0074r"); _badg != nil {
		return _badg
	}
	if _cbcca.GsLst != nil {
		if _edggb := _cbcca.GsLst.ValidateWithPath(path + "\u002f\u0047\u0073\u004c\u0073\u0074"); _edggb != nil {
			return _edggb
		}
	}
	if _cbcca.Lin != nil {
		if _bedc := _cbcca.Lin.ValidateWithPath(path + "\u002f\u004c\u0069\u006e"); _bedc != nil {
			return _bedc
		}
	}
	if _cbcca.Path != nil {
		if _dddaa := _cbcca.Path.ValidateWithPath(path + "\u002f\u0050\u0061t\u0068"); _dddaa != nil {
			return _dddaa
		}
	}
	if _cbcca.TileRect != nil {
		if _bafbg := _cbcca.TileRect.ValidateWithPath(path + "\u002fT\u0069\u006c\u0065\u0052\u0065\u0063t"); _bafbg != nil {
			return _bafbg
		}
	}
	return nil
}

type CT_AlphaBiLevelEffect struct{ ThreshAttr ST_PositiveFixedPercentage }
type CT_TextBody struct {
	BodyPr   *CT_TextBodyProperties
	LstStyle *CT_TextListStyle
	P        []*CT_TextParagraph
}

func (_gf *AG_Blob) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cg := range start.Attr {
		if _cg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cg.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_b, _cda := _cg.Value, error(nil)
			if _cda != nil {
				return _cda
			}
			_gf.EmbedAttr = &_b
			continue
		}
		if _cg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cg.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ga, _eg := _cg.Value, error(nil)
			if _eg != nil {
				return _eg
			}
			_gf.LinkAttr = &_ga
			continue
		}
	}
	for {
		_ee, _da := d.Token()
		if _da != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0042\u006c\u006f\u0062\u003a\u0020\u0025\u0073", _da)
		}
		if _dad, _eee := _ee.(_d.EndElement); _eee && _dad.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fabfd *CT_TextParagraphProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abeee := range start.Attr {
		if _abeee.Name.Local == "\u006d\u0061\u0072\u004c" {
			_fagf, _eaedb := _c.ParseInt(_abeee.Value, 10, 32)
			if _eaedb != nil {
				return _eaedb
			}
			_bbge := int32(_fagf)
			_fabfd.MarLAttr = &_bbge
			continue
		}
		if _abeee.Name.Local == "\u006c\u0076\u006c" {
			_fdadad, _bfedb := _c.ParseInt(_abeee.Value, 10, 32)
			if _bfedb != nil {
				return _bfedb
			}
			_ebcc := int32(_fdadad)
			_fabfd.LvlAttr = &_ebcc
			continue
		}
		if _abeee.Name.Local == "\u0061\u006c\u0067\u006e" {
			_fabfd.AlgnAttr.UnmarshalXMLAttr(_abeee)
			continue
		}
		if _abeee.Name.Local == "\u0072\u0074\u006c" {
			_daffd, _dcbcgb := _c.ParseBool(_abeee.Value)
			if _dcbcgb != nil {
				return _dcbcgb
			}
			_fabfd.RtlAttr = &_daffd
			continue
		}
		if _abeee.Name.Local == "\u0066\u006f\u006e\u0074\u0041\u006c\u0067\u006e" {
			_fabfd.FontAlgnAttr.UnmarshalXMLAttr(_abeee)
			continue
		}
		if _abeee.Name.Local == "\u006d\u0061\u0072\u0052" {
			_eagaa, _decbde := _c.ParseInt(_abeee.Value, 10, 32)
			if _decbde != nil {
				return _decbde
			}
			_fcdfg := int32(_eagaa)
			_fabfd.MarRAttr = &_fcdfg
			continue
		}
		if _abeee.Name.Local == "\u006c\u0061\u0074\u0069\u006e\u004c\u006e\u0042\u0072\u006b" {
			_gcgea, _fbed := _c.ParseBool(_abeee.Value)
			if _fbed != nil {
				return _fbed
			}
			_fabfd.LatinLnBrkAttr = &_gcgea
			continue
		}
		if _abeee.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_gcfed, _dbabeg := _c.ParseInt(_abeee.Value, 10, 32)
			if _dbabeg != nil {
				return _dbabeg
			}
			_bbec := int32(_gcfed)
			_fabfd.IndentAttr = &_bbec
			continue
		}
		if _abeee.Name.Local == "\u0065a\u004c\u006e\u0042\u0072\u006b" {
			_edfgb, _befef := _c.ParseBool(_abeee.Value)
			if _befef != nil {
				return _befef
			}
			_fabfd.EaLnBrkAttr = &_edfgb
			continue
		}
		if _abeee.Name.Local == "\u0068\u0061\u006eg\u0069\u006e\u0067\u0050\u0075\u006e\u0063\u0074" {
			_gdaag, _beecd := _c.ParseBool(_abeee.Value)
			if _beecd != nil {
				return _beecd
			}
			_fabfd.HangingPunctAttr = &_gdaag
			continue
		}
		if _abeee.Name.Local == "\u0064\u0065\u0066\u0054\u0061\u0062\u0053\u007a" {
			_egda, _gecfd := ParseUnionST_Coordinate32(_abeee.Value)
			if _gecfd != nil {
				return _gecfd
			}
			_fabfd.DefTabSzAttr = &_egda
			continue
		}
	}
_ggcea:
	for {
		_ceeefc, _bcda := d.Token()
		if _bcda != nil {
			return _bcda
		}
		switch _aefgc := _ceeefc.(type) {
		case _d.StartElement:
			switch _aefgc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053p\u0063"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053p\u0063"}:
				_fabfd.LnSpc = NewCT_TextSpacing()
				if _ddebeb := d.DecodeElement(_fabfd.LnSpc, &_aefgc); _ddebeb != nil {
					return _ddebeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0042\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0042\u0065\u0066"}:
				_fabfd.SpcBef = NewCT_TextSpacing()
				if _bbceg := d.DecodeElement(_fabfd.SpcBef, &_aefgc); _bbceg != nil {
					return _bbceg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0041\u0066\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0041\u0066\u0074"}:
				_fabfd.SpcAft = NewCT_TextSpacing()
				if _edcdca := d.DecodeElement(_fabfd.SpcAft, &_aefgc); _edcdca != nil {
					return _edcdca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}:
				_fabfd.BuClrTx = NewCT_TextBulletColorFollowText()
				if _aggbge := d.DecodeElement(_fabfd.BuClrTx, &_aefgc); _aggbge != nil {
					return _aggbge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}:
				_fabfd.BuClr = NewCT_Color()
				if _caadga := d.DecodeElement(_fabfd.BuClr, &_aefgc); _caadga != nil {
					return _caadga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}:
				_fabfd.BuSzTx = NewCT_TextBulletSizeFollowText()
				if _ebfcf := d.DecodeElement(_fabfd.BuSzTx, &_aefgc); _ebfcf != nil {
					return _ebfcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}:
				_fabfd.BuSzPct = NewCT_TextBulletSizePercent()
				if _ddcc := d.DecodeElement(_fabfd.BuSzPct, &_aefgc); _ddcc != nil {
					return _ddcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}:
				_fabfd.BuSzPts = NewCT_TextBulletSizePoint()
				if _dcfeb := d.DecodeElement(_fabfd.BuSzPts, &_aefgc); _dcfeb != nil {
					return _dcfeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}:
				_fabfd.BuFontTx = NewCT_TextBulletTypefaceFollowText()
				if _gfcbf := d.DecodeElement(_fabfd.BuFontTx, &_aefgc); _gfcbf != nil {
					return _gfcbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}:
				_fabfd.BuFont = NewCT_TextFont()
				if _fbcgg := d.DecodeElement(_fabfd.BuFont, &_aefgc); _fbcgg != nil {
					return _fbcgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}:
				_fabfd.BuNone = NewCT_TextNoBullet()
				if _ebcfd := d.DecodeElement(_fabfd.BuNone, &_aefgc); _ebcfd != nil {
					return _ebcfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}:
				_fabfd.BuAutoNum = NewCT_TextAutonumberBullet()
				if _gbadg := d.DecodeElement(_fabfd.BuAutoNum, &_aefgc); _gbadg != nil {
					return _gbadg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}:
				_fabfd.BuChar = NewCT_TextCharBullet()
				if _bfadbe := d.DecodeElement(_fabfd.BuChar, &_aefgc); _bfadbe != nil {
					return _bfadbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}:
				_fabfd.BuBlip = NewCT_TextBlipBullet()
				if _ebgded := d.DecodeElement(_fabfd.BuBlip, &_aefgc); _ebgded != nil {
					return _ebgded
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u004c\u0073\u0074"}:
				_fabfd.TabLst = NewCT_TextTabStopList()
				if _baebgc := d.DecodeElement(_fabfd.TabLst, &_aefgc); _baebgc != nil {
					return _baebgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0052\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0052\u0050\u0072"}:
				_fabfd.DefRPr = NewCT_TextCharacterProperties()
				if _edddd := d.DecodeElement(_fabfd.DefRPr, &_aefgc); _edddd != nil {
					return _edddd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fabfd.ExtLst = NewCT_OfficeArtExtensionList()
				if _abgbc := d.DecodeElement(_fabfd.ExtLst, &_aefgc); _abgbc != nil {
					return _abgbc
				}
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u0065x\u0074\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _aefgc.Name)
				if _fgad := d.Skip(); _fgad != nil {
					return _fgad
				}
			}
		case _d.EndElement:
			break _ggcea
		case _d.CharData:
		}
	}
	return nil
}

type CT_GvmlPicture struct {
	NvPicPr  *CT_GvmlPictureNonVisual
	BlipFill *CT_BlipFillProperties
	SpPr     *CT_ShapeProperties
	Style    *CT_ShapeStyle
	ExtLst   *CT_OfficeArtExtensionList
}

// Validate validates the CT_Hyperlink and its children
func (_ebagg *CT_Hyperlink) Validate() error {
	return _ebagg.ValidateWithPath("\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b")
}

type CT_ColorSchemeAndMapping struct {
	ClrScheme *CT_ColorScheme
	ClrMap    *CT_ColorMapping
}
type CT_TableGrid struct{ GridCol []*CT_TableCol }

func (_feegf *CT_TablePropertiesChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _feegf.TableStyle != nil {
		_bfae := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_feegf.TableStyle, _bfae)
	}
	if _feegf.TableStyleId != nil {
		_acbfcf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074y\u006c\u0065\u0049\u0064"}}
		_cb.AddPreserveSpaceAttr(&_acbfcf, *_feegf.TableStyleId)
		e.EncodeElement(_feegf.TableStyleId, _acbfcf)
	}
	return nil
}
func (_adfda *CT_LinearShadeProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fcbaf := range start.Attr {
		if _fcbaf.Name.Local == "\u0061\u006e\u0067" {
			_gadce, _geee := _c.ParseInt(_fcbaf.Value, 10, 32)
			if _geee != nil {
				return _geee
			}
			_ccdef := int32(_gadce)
			_adfda.AngAttr = &_ccdef
			continue
		}
		if _fcbaf.Name.Local == "\u0073\u0063\u0061\u006c\u0065\u0064" {
			_aggdb, _fedee := _c.ParseBool(_fcbaf.Value)
			if _fedee != nil {
				return _fedee
			}
			_adfda.ScaledAttr = &_aggdb
			continue
		}
	}
	for {
		_gefca, _dgeff := d.Token()
		if _dgeff != nil {
			return _dg.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004cine\u0061rS\u0068\u0061\u0064\u0065\u0050\u0072\u006fpe\u0072\u0074\u0069\u0065\u0073\u003a\u0020%\u0073", _dgeff)
		}
		if _gbbef, _geggc := _gefca.(_d.EndElement); _geggc && _gbbef.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SolidColorFillProperties and its children, prefixing error messages with path
func (_bcacd *CT_SolidColorFillProperties) ValidateWithPath(path string) error {
	if _bcacd.ScrgbClr != nil {
		if _bbffd := _bcacd.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _bbffd != nil {
			return _bbffd
		}
	}
	if _bcacd.SrgbClr != nil {
		if _ddaee := _bcacd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _ddaee != nil {
			return _ddaee
		}
	}
	if _bcacd.HslClr != nil {
		if _ccab := _bcacd.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _ccab != nil {
			return _ccab
		}
	}
	if _bcacd.SysClr != nil {
		if _cdfb := _bcacd.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _cdfb != nil {
			return _cdfb
		}
	}
	if _bcacd.SchemeClr != nil {
		if _fcaff := _bcacd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _fcaff != nil {
			return _fcaff
		}
	}
	if _bcacd.PrstClr != nil {
		if _gfddb := _bcacd.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gfddb != nil {
			return _gfddb
		}
	}
	return nil
}
func (_ceacg *CT_TextTabStop) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ceacg.PosAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u006f\u0073"}, Value: _dg.Sprintf("\u0025\u0076", *_ceacg.PosAttr)})
	}
	if _ceacg.AlgnAttr != ST_TextTabAlignTypeUnset {
		_ffbfe, _fbfaa := _ceacg.AlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _fbfaa != nil {
			return _fbfaa
		}
		start.Attr = append(start.Attr, _ffbfe)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fdfge *CT_PositiveFixedAngle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fdfge.ValAttr = 0
	for _, _beba := range start.Attr {
		if _beba.Name.Local == "\u0076\u0061\u006c" {
			_fgdfb, _eaba := _c.ParseInt(_beba.Value, 10, 32)
			if _eaba != nil {
				return _eaba
			}
			_fdfge.ValAttr = int32(_fgdfb)
			continue
		}
	}
	for {
		_eebf, _dbeec := d.Token()
		if _dbeec != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0046i\u0078\u0065\u0064\u0041\u006e\u0067\u006ce\u003a\u0020\u0025\u0073", _dbeec)
		}
		if _ggebg, _ggecd := _eebf.(_d.EndElement); _ggecd && _ggebg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GrayscaleEffect and its children, prefixing error messages with path
func (_fgfcd *CT_GrayscaleEffect) ValidateWithPath(path string) error { return nil }
func (_cfea ST_CompoundLine) Validate() error                         { return _cfea.ValidateWithPath("") }
func (_dbadf *CT_TileInfoProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dbadf.TxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0078"}, Value: _dg.Sprintf("\u0025\u0076", *_dbadf.TxAttr)})
	}
	if _dbadf.TyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0079"}, Value: _dg.Sprintf("\u0025\u0076", *_dbadf.TyAttr)})
	}
	if _dbadf.SxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0078"}, Value: _dg.Sprintf("\u0025\u0076", *_dbadf.SxAttr)})
	}
	if _dbadf.SyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0079"}, Value: _dg.Sprintf("\u0025\u0076", *_dbadf.SyAttr)})
	}
	if _dbadf.FlipAttr != ST_TileFlipModeUnset {
		_daggg, _bbgfd := _dbadf.FlipAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u006c\u0069\u0070"})
		if _bbgfd != nil {
			return _bbgfd
		}
		start.Attr = append(start.Attr, _daggg)
	}
	if _dbadf.AlgnAttr != ST_RectAlignmentUnset {
		_cddge, _bgbddf := _dbadf.AlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _bgbddf != nil {
			return _bgbddf
		}
		start.Attr = append(start.Attr, _cddge)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_decbbe *ST_TextCapsType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_decbbe = 0
	case "\u006e\u006f\u006e\u0065":
		*_decbbe = 1
	case "\u0073\u006d\u0061l\u006c":
		*_decbbe = 2
	case "\u0061\u006c\u006c":
		*_decbbe = 3
	}
	return nil
}
func (_gfbgcc *CT_TextUnderlineFillFollowText) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_GvmlPictureNonVisual struct {
	CNvPr    *CT_NonVisualDrawingProps
	CNvPicPr *CT_NonVisualPictureProperties
}
type EG_LineFillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	PattFill  *CT_PatternFillProperties
}

func (_dcbcg *CT_FillOverlayEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dcbcg.BlendAttr = ST_BlendMode(1)
	for _, _begec := range start.Attr {
		if _begec.Name.Local == "\u0062\u006c\u0065n\u0064" {
			_dcbcg.BlendAttr.UnmarshalXMLAttr(_begec)
			continue
		}
	}
_egcbc:
	for {
		_ddde, _dbcaa := d.Token()
		if _dbcaa != nil {
			return _dbcaa
		}
		switch _baba := _ddde.(type) {
		case _d.StartElement:
			switch _baba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_dcbcg.NoFill = NewCT_NoFillProperties()
				if _egcaf := d.DecodeElement(_dcbcg.NoFill, &_baba); _egcaf != nil {
					return _egcaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_dcbcg.SolidFill = NewCT_SolidColorFillProperties()
				if _bfea := d.DecodeElement(_dcbcg.SolidFill, &_baba); _bfea != nil {
					return _bfea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_dcbcg.GradFill = NewCT_GradientFillProperties()
				if _feec := d.DecodeElement(_dcbcg.GradFill, &_baba); _feec != nil {
					return _feec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_dcbcg.BlipFill = NewCT_BlipFillProperties()
				if _gfdfd := d.DecodeElement(_dcbcg.BlipFill, &_baba); _gfdfd != nil {
					return _gfdfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_dcbcg.PattFill = NewCT_PatternFillProperties()
				if _dcbd := d.DecodeElement(_dcbcg.PattFill, &_baba); _dcbd != nil {
					return _dcbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_dcbcg.GrpFill = NewCT_GroupFillProperties()
				if _afeff := d.DecodeElement(_dcbcg.GrpFill, &_baba); _afeff != nil {
					return _afeff
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _baba.Name)
				if _ebaed := d.Skip(); _ebaed != nil {
					return _ebaed
				}
			}
		case _d.EndElement:
			break _egcbc
		case _d.CharData:
		}
	}
	return nil
}
func (_acefc *CT_TableStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073t\u0079\u006c\u0065\u0049\u0064"}, Value: _dg.Sprintf("\u0025\u0076", _acefc.StyleIdAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073t\u0079\u006c\u0065\u004e\u0061\u006de"}, Value: _dg.Sprintf("\u0025\u0076", _acefc.StyleNameAttr)})
	e.EncodeToken(start)
	if _acefc.TblBg != nil {
		_febbc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0062\u006c\u0042\u0067"}}
		e.EncodeElement(_acefc.TblBg, _febbc)
	}
	if _acefc.WholeTbl != nil {
		_bedga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}}
		e.EncodeElement(_acefc.WholeTbl, _bedga)
	}
	if _acefc.Band1H != nil {
		_ddbfg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0031\u0048"}}
		e.EncodeElement(_acefc.Band1H, _ddbfg)
	}
	if _acefc.Band2H != nil {
		_efgdde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0032\u0048"}}
		e.EncodeElement(_acefc.Band2H, _efgdde)
	}
	if _acefc.Band1V != nil {
		_ageeg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0031\u0056"}}
		e.EncodeElement(_acefc.Band1V, _ageeg)
	}
	if _acefc.Band2V != nil {
		_aabdga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0032\u0056"}}
		e.EncodeElement(_acefc.Band2V, _aabdga)
	}
	if _acefc.LastCol != nil {
		_gdcga := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0061\u0073\u0074\u0043\u006fl"}}
		e.EncodeElement(_acefc.LastCol, _gdcga)
	}
	if _acefc.FirstCol != nil {
		_dbced := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}}
		e.EncodeElement(_acefc.FirstCol, _dbced)
	}
	if _acefc.LastRow != nil {
		_abccf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0061\u0073\u0074\u0052\u006fw"}}
		e.EncodeElement(_acefc.LastRow, _abccf)
	}
	if _acefc.SeCell != nil {
		_eeaab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0065\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_acefc.SeCell, _eeaab)
	}
	if _acefc.SwCell != nil {
		_edeea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0077\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_acefc.SwCell, _edeea)
	}
	if _acefc.FirstRow != nil {
		_gafea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}}
		e.EncodeElement(_acefc.FirstRow, _gafea)
	}
	if _acefc.NeCell != nil {
		_faaab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u0065\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_acefc.NeCell, _faaab)
	}
	if _acefc.NwCell != nil {
		_ddaaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u0077\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_acefc.NwCell, _ddaaa)
	}
	if _acefc.ExtLst != nil {
		_gaebb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_acefc.ExtLst, _gaebb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dedf *CT_Path2DLineTo) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_cagef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0074"}}
	e.EncodeElement(_dedf.Pt, _cagef)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Backdrop and its children
func (_abag *CT_Backdrop) Validate() error {
	return _abag.ValidateWithPath("C\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070")
}
func (_dbbdd *CT_TextSpacingPoint) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbbdd.ValAttr = 0
	for _, _dfeg := range start.Attr {
		if _dfeg.Name.Local == "\u0076\u0061\u006c" {
			_cfgde, _ggfdfa := _c.ParseInt(_dfeg.Value, 10, 32)
			if _ggfdfa != nil {
				return _ggfdfa
			}
			_dbbdd.ValAttr = int32(_cfgde)
			continue
		}
	}
	for {
		_fgcdc, _ddcgb := d.Token()
		if _ddcgb != nil {
			return _dg.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0054\u0065\u0078\u0074\u0053p\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074\u003a\u0020\u0025\u0073", _ddcgb)
		}
		if _feeec, _eeaca := _fgcdc.(_d.EndElement); _eeaca && _feeec.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dafdb *CT_SRgbColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eefec := range start.Attr {
		if _eefec.Name.Local == "\u0076\u0061\u006c" {
			_dcdbee, _dfdeff := _eefec.Value, error(nil)
			if _dfdeff != nil {
				return _dfdeff
			}
			_dafdb.ValAttr = _dcdbee
			continue
		}
	}
_gfgg:
	for {
		_cbbdb, _ecgcg := d.Token()
		if _ecgcg != nil {
			return _ecgcg
		}
		switch _cgggb := _cbbdb.(type) {
		case _d.StartElement:
			switch _cgggb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_gedg := NewEG_ColorTransform()
				_gedg.Tint = NewCT_PositiveFixedPercentage()
				if _efgbe := d.DecodeElement(_gedg.Tint, &_cgggb); _efgbe != nil {
					return _efgbe
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _gedg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_cfdf := NewEG_ColorTransform()
				_cfdf.Shade = NewCT_PositiveFixedPercentage()
				if _dgfbg := d.DecodeElement(_cfdf.Shade, &_cgggb); _dgfbg != nil {
					return _dgfbg
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _cfdf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_cdabf := NewEG_ColorTransform()
				_cdabf.Comp = NewCT_ComplementTransform()
				if _cdfce := d.DecodeElement(_cdabf.Comp, &_cgggb); _cdfce != nil {
					return _cdfce
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _cdabf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_ecbfe := NewEG_ColorTransform()
				_ecbfe.Inv = NewCT_InverseTransform()
				if _aeegc := d.DecodeElement(_ecbfe.Inv, &_cgggb); _aeegc != nil {
					return _aeegc
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _ecbfe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_eeaeg := NewEG_ColorTransform()
				_eeaeg.Gray = NewCT_GrayscaleTransform()
				if _fefed := d.DecodeElement(_eeaeg.Gray, &_cgggb); _fefed != nil {
					return _fefed
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _eeaeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_gcade := NewEG_ColorTransform()
				_gcade.Alpha = NewCT_PositiveFixedPercentage()
				if _cgegg := d.DecodeElement(_gcade.Alpha, &_cgggb); _cgegg != nil {
					return _cgegg
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _gcade)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_bfafd := NewEG_ColorTransform()
				_bfafd.AlphaOff = NewCT_FixedPercentage()
				if _gbbca := d.DecodeElement(_bfafd.AlphaOff, &_cgggb); _gbbca != nil {
					return _gbbca
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _bfafd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_edgec := NewEG_ColorTransform()
				_edgec.AlphaMod = NewCT_PositivePercentage()
				if _geeeb := d.DecodeElement(_edgec.AlphaMod, &_cgggb); _geeeb != nil {
					return _geeeb
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _edgec)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_fecd := NewEG_ColorTransform()
				_fecd.Hue = NewCT_PositiveFixedAngle()
				if _gaece := d.DecodeElement(_fecd.Hue, &_cgggb); _gaece != nil {
					return _gaece
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _fecd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_dcedf := NewEG_ColorTransform()
				_dcedf.HueOff = NewCT_Angle()
				if _bddcg := d.DecodeElement(_dcedf.HueOff, &_cgggb); _bddcg != nil {
					return _bddcg
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _dcedf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_gcffb := NewEG_ColorTransform()
				_gcffb.HueMod = NewCT_PositivePercentage()
				if _babcd := d.DecodeElement(_gcffb.HueMod, &_cgggb); _babcd != nil {
					return _babcd
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _gcffb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_dbeab := NewEG_ColorTransform()
				_dbeab.Sat = NewCT_Percentage()
				if _dfcbg := d.DecodeElement(_dbeab.Sat, &_cgggb); _dfcbg != nil {
					return _dfcbg
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _dbeab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_gbafa := NewEG_ColorTransform()
				_gbafa.SatOff = NewCT_Percentage()
				if _efeaf := d.DecodeElement(_gbafa.SatOff, &_cgggb); _efeaf != nil {
					return _efeaf
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _gbafa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_ffaee := NewEG_ColorTransform()
				_ffaee.SatMod = NewCT_Percentage()
				if _ffabc := d.DecodeElement(_ffaee.SatMod, &_cgggb); _ffabc != nil {
					return _ffabc
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _ffaee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_ceeee := NewEG_ColorTransform()
				_ceeee.Lum = NewCT_Percentage()
				if _dfafa := d.DecodeElement(_ceeee.Lum, &_cgggb); _dfafa != nil {
					return _dfafa
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _ceeee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_bgdd := NewEG_ColorTransform()
				_bgdd.LumOff = NewCT_Percentage()
				if _abedf := d.DecodeElement(_bgdd.LumOff, &_cgggb); _abedf != nil {
					return _abedf
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _bgdd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_dfdaa := NewEG_ColorTransform()
				_dfdaa.LumMod = NewCT_Percentage()
				if _bafggd := d.DecodeElement(_dfdaa.LumMod, &_cgggb); _bafggd != nil {
					return _bafggd
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _dfdaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_bccef := NewEG_ColorTransform()
				_bccef.Red = NewCT_Percentage()
				if _abdba := d.DecodeElement(_bccef.Red, &_cgggb); _abdba != nil {
					return _abdba
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _bccef)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_gcbgc := NewEG_ColorTransform()
				_gcbgc.RedOff = NewCT_Percentage()
				if _ffedb := d.DecodeElement(_gcbgc.RedOff, &_cgggb); _ffedb != nil {
					return _ffedb
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _gcbgc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_bfeg := NewEG_ColorTransform()
				_bfeg.RedMod = NewCT_Percentage()
				if _ccfcb := d.DecodeElement(_bfeg.RedMod, &_cgggb); _ccfcb != nil {
					return _ccfcb
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _bfeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_dgbagb := NewEG_ColorTransform()
				_dgbagb.Green = NewCT_Percentage()
				if _bcgba := d.DecodeElement(_dgbagb.Green, &_cgggb); _bcgba != nil {
					return _bcgba
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _dgbagb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_cdgfa := NewEG_ColorTransform()
				_cdgfa.GreenOff = NewCT_Percentage()
				if _bfage := d.DecodeElement(_cdgfa.GreenOff, &_cgggb); _bfage != nil {
					return _bfage
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _cdgfa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_feege := NewEG_ColorTransform()
				_feege.GreenMod = NewCT_Percentage()
				if _cfgff := d.DecodeElement(_feege.GreenMod, &_cgggb); _cfgff != nil {
					return _cfgff
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _feege)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_cfffc := NewEG_ColorTransform()
				_cfffc.Blue = NewCT_Percentage()
				if _abaf := d.DecodeElement(_cfffc.Blue, &_cgggb); _abaf != nil {
					return _abaf
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _cfffc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_gfcee := NewEG_ColorTransform()
				_gfcee.BlueOff = NewCT_Percentage()
				if _fcdaed := d.DecodeElement(_gfcee.BlueOff, &_cgggb); _fcdaed != nil {
					return _fcdaed
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _gfcee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_ccecd := NewEG_ColorTransform()
				_ccecd.BlueMod = NewCT_Percentage()
				if _eadbfb := d.DecodeElement(_ccecd.BlueMod, &_cgggb); _eadbfb != nil {
					return _eadbfb
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _ccecd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_aeabc := NewEG_ColorTransform()
				_aeabc.Gamma = NewCT_GammaTransform()
				if _ccgcf := d.DecodeElement(_aeabc.Gamma, &_cgggb); _ccgcf != nil {
					return _ccgcf
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _aeabc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_bcfgf := NewEG_ColorTransform()
				_bcfgf.InvGamma = NewCT_InverseGammaTransform()
				if _eeebe := d.DecodeElement(_bcfgf.InvGamma, &_cgggb); _eeebe != nil {
					return _eeebe
				}
				_dafdb.EG_ColorTransform = append(_dafdb.EG_ColorTransform, _bcfgf)
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0052\u0067b\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _cgggb.Name)
				if _affgf := d.Skip(); _affgf != nil {
					return _affgf
				}
			}
		case _d.EndElement:
			break _gfgg
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_FillProperties and its children
func (_bgcba *CT_FillProperties) Validate() error {
	return _bgcba.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_TableBackgroundStyle and its children
func (_cabcd *CT_TableBackgroundStyle) Validate() error {
	return _cabcd.ValidateWithPath("\u0043\u0054\u005fTa\u0062\u006c\u0065\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0053\u0074\u0079\u006c\u0065")
}

type CT_FillEffect struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func (_edffe ST_Percentage) String() string {
	if _edffe.ST_PercentageDecimal != nil {
		return _dg.Sprintf("\u0025\u0076", *_edffe.ST_PercentageDecimal)
	}
	if _edffe.ST_Percentage != nil {
		return _dg.Sprintf("\u0025\u0076", *_edffe.ST_Percentage)
	}
	return ""
}
func (_dcdbc *ST_TextFontAlignType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aefef, _fbcgf := d.Token()
	if _fbcgf != nil {
		return _fbcgf
	}
	if _fdeeb, _begef := _aefef.(_d.EndElement); _begef && _fdeeb.Name == start.Name {
		*_dcdbc = 1
		return nil
	}
	if _ageabe, _afdea := _aefef.(_d.CharData); !_afdea {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aefef)
	} else {
		switch string(_ageabe) {
		case "":
			*_dcdbc = 0
		case "\u0061\u0075\u0074\u006f":
			*_dcdbc = 1
		case "\u0074":
			*_dcdbc = 2
		case "\u0063\u0074\u0072":
			*_dcdbc = 3
		case "\u0062\u0061\u0073\u0065":
			*_dcdbc = 4
		case "\u0062":
			*_dcdbc = 5
		}
	}
	_aefef, _fbcgf = d.Token()
	if _fbcgf != nil {
		return _fbcgf
	}
	if _cabgf, _caccd := _aefef.(_d.EndElement); _caccd && _cabgf.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aefef)
}
func NewTbl() *Tbl { _adbfa := &Tbl{}; _adbfa.CT_Table = *NewCT_Table(); return _adbfa }
func (_fgbde *CT_Path2DLineTo) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fgbde.Pt = NewCT_AdjPoint2D()
_fddff:
	for {
		_cabdd, _bddcf := d.Token()
		if _bddcf != nil {
			return _bddcf
		}
		switch _aaag := _cabdd.(type) {
		case _d.StartElement:
			switch _aaag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				if _afecc := d.DecodeElement(_fgbde.Pt, &_aaag); _afecc != nil {
					return _afecc
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f\u0020\u0025\u0076", _aaag.Name)
				if _bfde := d.Skip(); _bfde != nil {
					return _bfde
				}
			}
		case _d.EndElement:
			break _fddff
		case _d.CharData:
		}
	}
	return nil
}

type CT_TextTabStop struct {
	PosAttr  *ST_Coordinate32
	AlgnAttr ST_TextTabAlignType
}

// Validate validates the CT_AnimationDgmElement and its children
func (_daeg *CT_AnimationDgmElement) Validate() error {
	return _daeg.ValidateWithPath("\u0043\u0054\u005f\u0041ni\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0045\u006c\u0065\u006d\u0065n\u0074")
}
func (_bdfba *CT_SystemColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_afadfg, _gfdebb := _bdfba.ValAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0061\u006c"})
	if _gfdebb != nil {
		return _gfdebb
	}
	start.Attr = append(start.Attr, _afadfg)
	if _bdfba.LastClrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006ca\u0073\u0074\u0043\u006c\u0072"}, Value: _dg.Sprintf("\u0025\u0076", *_bdfba.LastClrAttr)})
	}
	e.EncodeToken(start)
	if _bdfba.EG_ColorTransform != nil {
		for _, _gaead := range _bdfba.EG_ColorTransform {
			_gaead.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_GvmlShape struct {
	NvSpPr *CT_GvmlShapeNonVisual
	SpPr   *CT_ShapeProperties
	TxSp   *CT_GvmlTextShape
	Style  *CT_ShapeStyle
	ExtLst *CT_OfficeArtExtensionList
}
type ST_AnimationChartOnlyBuildType byte

func (_bagfe *CT_SystemColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bagfe.ValAttr = ST_SystemColorVal(1)
	for _, _deeedc := range start.Attr {
		if _deeedc.Name.Local == "\u0076\u0061\u006c" {
			_bagfe.ValAttr.UnmarshalXMLAttr(_deeedc)
			continue
		}
		if _deeedc.Name.Local == "\u006ca\u0073\u0074\u0043\u006c\u0072" {
			_ggggf, _fdbec := _deeedc.Value, error(nil)
			if _fdbec != nil {
				return _fdbec
			}
			_bagfe.LastClrAttr = &_ggggf
			continue
		}
	}
_ccbg:
	for {
		_caae, _bebe := d.Token()
		if _bebe != nil {
			return _bebe
		}
		switch _fdcfb := _caae.(type) {
		case _d.StartElement:
			switch _fdcfb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_aefgf := NewEG_ColorTransform()
				_aefgf.Tint = NewCT_PositiveFixedPercentage()
				if _dabd := d.DecodeElement(_aefgf.Tint, &_fdcfb); _dabd != nil {
					return _dabd
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _aefgf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_fgcgf := NewEG_ColorTransform()
				_fgcgf.Shade = NewCT_PositiveFixedPercentage()
				if _ddcf := d.DecodeElement(_fgcgf.Shade, &_fdcfb); _ddcf != nil {
					return _ddcf
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _fgcgf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_gggec := NewEG_ColorTransform()
				_gggec.Comp = NewCT_ComplementTransform()
				if _dcdgg := d.DecodeElement(_gggec.Comp, &_fdcfb); _dcdgg != nil {
					return _dcdgg
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _gggec)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_dcfe := NewEG_ColorTransform()
				_dcfe.Inv = NewCT_InverseTransform()
				if _eacdd := d.DecodeElement(_dcfe.Inv, &_fdcfb); _eacdd != nil {
					return _eacdd
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _dcfe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_cgagab := NewEG_ColorTransform()
				_cgagab.Gray = NewCT_GrayscaleTransform()
				if _adaag := d.DecodeElement(_cgagab.Gray, &_fdcfb); _adaag != nil {
					return _adaag
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _cgagab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_baga := NewEG_ColorTransform()
				_baga.Alpha = NewCT_PositiveFixedPercentage()
				if _cagcb := d.DecodeElement(_baga.Alpha, &_fdcfb); _cagcb != nil {
					return _cagcb
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _baga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_dggcc := NewEG_ColorTransform()
				_dggcc.AlphaOff = NewCT_FixedPercentage()
				if _ebgde := d.DecodeElement(_dggcc.AlphaOff, &_fdcfb); _ebgde != nil {
					return _ebgde
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _dggcc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_ggae := NewEG_ColorTransform()
				_ggae.AlphaMod = NewCT_PositivePercentage()
				if _effea := d.DecodeElement(_ggae.AlphaMod, &_fdcfb); _effea != nil {
					return _effea
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _ggae)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_fdcc := NewEG_ColorTransform()
				_fdcc.Hue = NewCT_PositiveFixedAngle()
				if _gggbbc := d.DecodeElement(_fdcc.Hue, &_fdcfb); _gggbbc != nil {
					return _gggbbc
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _fdcc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_becca := NewEG_ColorTransform()
				_becca.HueOff = NewCT_Angle()
				if _fgdac := d.DecodeElement(_becca.HueOff, &_fdcfb); _fgdac != nil {
					return _fgdac
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _becca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_cfdfe := NewEG_ColorTransform()
				_cfdfe.HueMod = NewCT_PositivePercentage()
				if _ddbbb := d.DecodeElement(_cfdfe.HueMod, &_fdcfb); _ddbbb != nil {
					return _ddbbb
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _cfdfe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_befb := NewEG_ColorTransform()
				_befb.Sat = NewCT_Percentage()
				if _eaddd := d.DecodeElement(_befb.Sat, &_fdcfb); _eaddd != nil {
					return _eaddd
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _befb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_cfcbe := NewEG_ColorTransform()
				_cfcbe.SatOff = NewCT_Percentage()
				if _aeed := d.DecodeElement(_cfcbe.SatOff, &_fdcfb); _aeed != nil {
					return _aeed
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _cfcbe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_gcfc := NewEG_ColorTransform()
				_gcfc.SatMod = NewCT_Percentage()
				if _edcdc := d.DecodeElement(_gcfc.SatMod, &_fdcfb); _edcdc != nil {
					return _edcdc
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _gcfc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_aece := NewEG_ColorTransform()
				_aece.Lum = NewCT_Percentage()
				if _ebbfb := d.DecodeElement(_aece.Lum, &_fdcfb); _ebbfb != nil {
					return _ebbfb
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _aece)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_affeg := NewEG_ColorTransform()
				_affeg.LumOff = NewCT_Percentage()
				if _adbdf := d.DecodeElement(_affeg.LumOff, &_fdcfb); _adbdf != nil {
					return _adbdf
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _affeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_abfc := NewEG_ColorTransform()
				_abfc.LumMod = NewCT_Percentage()
				if _gaage := d.DecodeElement(_abfc.LumMod, &_fdcfb); _gaage != nil {
					return _gaage
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _abfc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_cegbb := NewEG_ColorTransform()
				_cegbb.Red = NewCT_Percentage()
				if _eedbd := d.DecodeElement(_cegbb.Red, &_fdcfb); _eedbd != nil {
					return _eedbd
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _cegbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_fbdfb := NewEG_ColorTransform()
				_fbdfb.RedOff = NewCT_Percentage()
				if _geccc := d.DecodeElement(_fbdfb.RedOff, &_fdcfb); _geccc != nil {
					return _geccc
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _fbdfb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_adbb := NewEG_ColorTransform()
				_adbb.RedMod = NewCT_Percentage()
				if _becge := d.DecodeElement(_adbb.RedMod, &_fdcfb); _becge != nil {
					return _becge
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _adbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_gabfc := NewEG_ColorTransform()
				_gabfc.Green = NewCT_Percentage()
				if _abfcg := d.DecodeElement(_gabfc.Green, &_fdcfb); _abfcg != nil {
					return _abfcg
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _gabfc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_gcbaf := NewEG_ColorTransform()
				_gcbaf.GreenOff = NewCT_Percentage()
				if _bffef := d.DecodeElement(_gcbaf.GreenOff, &_fdcfb); _bffef != nil {
					return _bffef
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _gcbaf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_fgecgb := NewEG_ColorTransform()
				_fgecgb.GreenMod = NewCT_Percentage()
				if _bcaga := d.DecodeElement(_fgecgb.GreenMod, &_fdcfb); _bcaga != nil {
					return _bcaga
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _fgecgb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_dfbge := NewEG_ColorTransform()
				_dfbge.Blue = NewCT_Percentage()
				if _bagab := d.DecodeElement(_dfbge.Blue, &_fdcfb); _bagab != nil {
					return _bagab
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _dfbge)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_bfgag := NewEG_ColorTransform()
				_bfgag.BlueOff = NewCT_Percentage()
				if _bacefg := d.DecodeElement(_bfgag.BlueOff, &_fdcfb); _bacefg != nil {
					return _bacefg
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _bfgag)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_bfbf := NewEG_ColorTransform()
				_bfbf.BlueMod = NewCT_Percentage()
				if _ccaga := d.DecodeElement(_bfbf.BlueMod, &_fdcfb); _ccaga != nil {
					return _ccaga
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _bfbf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_cebae := NewEG_ColorTransform()
				_cebae.Gamma = NewCT_GammaTransform()
				if _dcfbf := d.DecodeElement(_cebae.Gamma, &_fdcfb); _dcfbf != nil {
					return _dcfbf
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _cebae)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_fafed := NewEG_ColorTransform()
				_fafed.InvGamma = NewCT_InverseGammaTransform()
				if _cagaaf := d.DecodeElement(_fafed.InvGamma, &_fdcfb); _cagaaf != nil {
					return _cagaaf
				}
				_bagfe.EG_ColorTransform = append(_bagfe.EG_ColorTransform, _fafed)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006d\u0043o\u006co\u0072\u0020\u0025\u0076", _fdcfb.Name)
				if _deggf := d.Skip(); _deggf != nil {
					return _deggf
				}
			}
		case _d.EndElement:
			break _ccbg
		case _d.CharData:
		}
	}
	return nil
}

type CT_Boolean struct{ ValAttr *_fe.ST_OnOff }
type CT_Shape3D struct {
	ZAttr            *ST_Coordinate
	ExtrusionHAttr   *int64
	ContourWAttr     *int64
	PrstMaterialAttr ST_PresetMaterialType
	BevelT           *CT_Bevel
	BevelB           *CT_Bevel
	ExtrusionClr     *CT_Color
	ContourClr       *CT_Color
	ExtLst           *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_GeomGuide and its children, prefixing error messages with path
func (_gfbc *CT_GeomGuide) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_AudioCD and its children, prefixing error messages with path
func (_egg *CT_AudioCD) ValidateWithPath(path string) error {
	if _aeb := _egg.St.ValidateWithPath(path + "\u002f\u0053\u0074"); _aeb != nil {
		return _aeb
	}
	if _baff := _egg.End.ValidateWithPath(path + "\u002f\u0045\u006e\u0064"); _baff != nil {
		return _baff
	}
	if _egg.ExtLst != nil {
		if _daed := _egg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _daed != nil {
			return _daed
		}
	}
	return nil
}

type EG_TextBulletColor struct {
	BuClrTx *CT_TextBulletColorFollowText
	BuClr   *CT_Color
}

func (_dacg *CT_DashStopList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dacg.Ds != nil {
		_cdgdd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0064\u0073"}}
		for _, _dbdde := range _dacg.Ds {
			e.EncodeElement(_dbdde, _cdgdd)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PresetGeometry2D and its children, prefixing error messages with path
func (_dgdaf *CT_PresetGeometry2D) ValidateWithPath(path string) error {
	if _dgdaf.PrstAttr == ST_ShapeTypeUnset {
		return _dg.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _aaege := _dgdaf.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _aaege != nil {
		return _aaege
	}
	if _dgdaf.AvLst != nil {
		if _bgdab := _dgdaf.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _bgdab != nil {
			return _bgdab
		}
	}
	return nil
}
func NewCT_SchemeColor() *CT_SchemeColor {
	_dfafaa := &CT_SchemeColor{}
	_dfafaa.ValAttr = ST_SchemeColorVal(1)
	return _dfafaa
}

const (
	ST_TextStrikeTypeUnset     ST_TextStrikeType = 0
	ST_TextStrikeTypeNoStrike  ST_TextStrikeType = 1
	ST_TextStrikeTypeSngStrike ST_TextStrikeType = 2
	ST_TextStrikeTypeDblStrike ST_TextStrikeType = 3
)

// Validate validates the CT_GvmlTextShape and its children
func (_dged *CT_GvmlTextShape) Validate() error {
	return _dged.ValidateWithPath("\u0043\u0054_\u0047\u0076\u006dl\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065")
}
func (_adabg *ST_TextAlignType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_adabg = 0
	case "\u006c":
		*_adabg = 1
	case "\u0063\u0074\u0072":
		*_adabg = 2
	case "\u0072":
		*_adabg = 3
	case "\u006a\u0075\u0073\u0074":
		*_adabg = 4
	case "\u006au\u0073\u0074\u004c\u006f\u0077":
		*_adabg = 5
	case "\u0064\u0069\u0073\u0074":
		*_adabg = 6
	case "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074":
		*_adabg = 7
	}
	return nil
}
func (_bdeg *CT_AlphaModulateFixedEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bdeg.AmtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006d\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_bdeg.AmtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_adaa *CT_PathShadeProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _degec := range start.Attr {
		if _degec.Name.Local == "\u0070\u0061\u0074\u0068" {
			_adaa.PathAttr.UnmarshalXMLAttr(_degec)
			continue
		}
	}
_bcbc:
	for {
		_dccdg, _fbcdd := d.Token()
		if _fbcdd != nil {
			return _fbcdd
		}
		switch _gfed := _dccdg.(type) {
		case _d.StartElement:
			switch _gfed.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}:
				_adaa.FillToRect = NewCT_RelativeRect()
				if _dfeed := d.DecodeElement(_adaa.FillToRect, &_gfed); _dfeed != nil {
					return _dfeed
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0061\u0074\u0068S\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gfed.Name)
				if _gfdeg := d.Skip(); _gfdeg != nil {
					return _gfdeg
				}
			}
		case _d.EndElement:
			break _bcbc
		case _d.CharData:
		}
	}
	return nil
}
func (_cfaed *CT_TableBackgroundStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cfaed.Fill != nil {
		_dbedg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_cfaed.Fill, _dbedg)
	}
	if _cfaed.FillRef != nil {
		_ecbdb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_cfaed.FillRef, _ecbdb)
	}
	if _cfaed.Effect != nil {
		_afcc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_cfaed.Effect, _afcc)
	}
	if _cfaed.EffectRef != nil {
		_adfdc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
		e.EncodeElement(_cfaed.EffectRef, _adfdc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_TextUnderlineFill struct {
	UFillTx *CT_TextUnderlineFillFollowText
	UFill   *CT_TextUnderlineFillGroupWrapper
}

// Validate validates the CT_GvmlShapeNonVisual and its children
func (_agbed *CT_GvmlShapeNonVisual) Validate() error {
	return _agbed.ValidateWithPath("C\u0054\u005f\u0047\u0076ml\u0053h\u0061\u0070\u0065\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}

// Validate validates the CT_TableGrid and its children
func (_begdg *CT_TableGrid) Validate() error {
	return _begdg.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0047\u0072\u0069\u0064")
}
func (_dbbddd ST_CompoundLine) ValidateWithPath(path string) error {
	switch _dbbddd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbbddd))
	}
	return nil
}
func NewEG_TextUnderlineLine() *EG_TextUnderlineLine {
	_dabaff := &EG_TextUnderlineLine{}
	return _dabaff
}
func (_dggaf *CT_OfficeStyleSheet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dggaf.ThemeElements = NewCT_BaseStyles()
	for _, _fedcb := range start.Attr {
		if _fedcb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bgfae, _cfbdb := _fedcb.Value, error(nil)
			if _cfbdb != nil {
				return _cfbdb
			}
			_dggaf.NameAttr = &_bgfae
			continue
		}
	}
_cdcb:
	for {
		_gfbg, _cafcc := d.Token()
		if _cafcc != nil {
			return _cafcc
		}
		switch _effe := _gfbg.(type) {
		case _d.StartElement:
			switch _effe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _ggcg := d.DecodeElement(_dggaf.ThemeElements, &_effe); _ggcg != nil {
					return _ggcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}:
				_dggaf.ObjectDefaults = NewCT_ObjectStyleDefaults()
				if _fecbe := d.DecodeElement(_dggaf.ObjectDefaults, &_effe); _fecbe != nil {
					return _fecbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}:
				_dggaf.ExtraClrSchemeLst = NewCT_ColorSchemeList()
				if _edcf := d.DecodeElement(_dggaf.ExtraClrSchemeLst, &_effe); _edcf != nil {
					return _edcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}:
				_dggaf.CustClrLst = NewCT_CustomColorList()
				if _bgec := d.DecodeElement(_dggaf.CustClrLst, &_effe); _bgec != nil {
					return _bgec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dggaf.ExtLst = NewCT_OfficeArtExtensionList()
				if _ffad := d.DecodeElement(_dggaf.ExtLst, &_effe); _ffad != nil {
					return _ffad
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0053ty\u006c\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _effe.Name)
				if _cgfbb := d.Skip(); _cgfbb != nil {
					return _cgfbb
				}
			}
		case _d.EndElement:
			break _cdcb
		case _d.CharData:
		}
	}
	return nil
}

type ST_PathShadeType byte

// Validate validates the CT_TextBulletSizeFollowText and its children
func (_bagbc *CT_TextBulletSizeFollowText) Validate() error {
	return _bagbc.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074B\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065F\u006f\u006c\u006co\u0077T\u0065\u0078\u0074")
}
func NewCT_TextNoBullet() *CT_TextNoBullet { _ccbgf := &CT_TextNoBullet{}; return _ccbgf }
func (_ggbda ST_FixedPercentage) String() string {
	if _ggbda.ST_FixedPercentageDecimal != nil {
		return _dg.Sprintf("\u0025\u0076", *_ggbda.ST_FixedPercentageDecimal)
	}
	if _ggbda.ST_FixedPercentage != nil {
		return _ggbda.ST_FixedPercentage.String()
	}
	return ""
}

// ValidateWithPath validates the CT_GvmlGraphicalObjectFrame and its children, prefixing error messages with path
func (_fcbbe *CT_GvmlGraphicalObjectFrame) ValidateWithPath(path string) error {
	if _edgbc := _fcbbe.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _edgbc != nil {
		return _edgbc
	}
	if _ffeff := _fcbbe.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _ffeff != nil {
		return _ffeff
	}
	if _affec := _fcbbe.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _affec != nil {
		return _affec
	}
	if _fcbbe.ExtLst != nil {
		if _dbfac := _fcbbe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbfac != nil {
			return _dbfac
		}
	}
	return nil
}
func (_ccdbe *CT_LuminanceEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abacd := range start.Attr {
		if _abacd.Name.Local == "\u0062\u0072\u0069\u0067\u0068\u0074" {
			_ebdae, _agff := ParseUnionST_FixedPercentage(_abacd.Value)
			if _agff != nil {
				return _agff
			}
			_ccdbe.BrightAttr = &_ebdae
			continue
		}
		if _abacd.Name.Local == "\u0063\u006f\u006e\u0074\u0072\u0061\u0073\u0074" {
			_gecg, _bcbaa := ParseUnionST_FixedPercentage(_abacd.Value)
			if _bcbaa != nil {
				return _bcbaa
			}
			_ccdbe.ContrastAttr = &_gecg
			continue
		}
	}
	for {
		_bbebg, _fggfg := d.Token()
		if _fggfg != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u004c\u0075\u006d\u0069\u006e\u0061\u006ec\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _fggfg)
		}
		if _ecce, _fdgec := _bbebg.(_d.EndElement); _fdgec && _ecce.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bgfabd ST_OnOffStyleType) ValidateWithPath(path string) error {
	switch _bgfabd {
	case 0, 1, 2, 3:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgfabd))
	}
	return nil
}
func NewCT_OfficeStyleSheet() *CT_OfficeStyleSheet {
	_eaea := &CT_OfficeStyleSheet{}
	_eaea.ThemeElements = NewCT_BaseStyles()
	return _eaea
}

// ValidateWithPath validates the ThemeManager and its children, prefixing error messages with path
func (_dbcbaa *ThemeManager) ValidateWithPath(path string) error {
	if _ffafeb := _dbcbaa.CT_EmptyElement.ValidateWithPath(path); _ffafeb != nil {
		return _ffafeb
	}
	return nil
}

type CT_AlphaFloorEffect struct{}

func (_bece *CT_GroupFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_aegb, _acbb := d.Token()
		if _acbb != nil {
			return _dg.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070F\u0069l\u006cP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _acbb)
		}
		if _bccebc, _accb := _aegb.(_d.EndElement); _accb && _bccebc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TableStyle struct {
	StyleIdAttr   string
	StyleNameAttr string
	TblBg         *CT_TableBackgroundStyle
	WholeTbl      *CT_TablePartStyle
	Band1H        *CT_TablePartStyle
	Band2H        *CT_TablePartStyle
	Band1V        *CT_TablePartStyle
	Band2V        *CT_TablePartStyle
	LastCol       *CT_TablePartStyle
	FirstCol      *CT_TablePartStyle
	LastRow       *CT_TablePartStyle
	SeCell        *CT_TablePartStyle
	SwCell        *CT_TablePartStyle
	FirstRow      *CT_TablePartStyle
	NeCell        *CT_TablePartStyle
	NwCell        *CT_TablePartStyle
	ExtLst        *CT_OfficeArtExtensionList
}

// Validate validates the CT_ColorSchemeList and its children
func (_agbf *CT_ColorSchemeList) Validate() error {
	return _agbf.ValidateWithPath("\u0043T\u005fC\u006f\u006c\u006f\u0072\u0053c\u0068\u0065m\u0065\u004c\u0069\u0073\u0074")
}
func (_fdddd ST_TextVertOverflowType) ValidateWithPath(path string) error {
	switch _fdddd {
	case 0, 1, 2, 3:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdddd))
	}
	return nil
}
func (_dcgccb *EG_Media) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cfadf:
	for {
		_cggecd, _cagec := d.Token()
		if _cagec != nil {
			return _cagec
		}
		switch _fcadaa := _cggecd.(type) {
		case _d.StartElement:
			switch _fcadaa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}:
				_dcgccb.AudioCd = NewCT_AudioCD()
				if _degdbg := d.DecodeElement(_dcgccb.AudioCd, &_fcadaa); _degdbg != nil {
					return _degdbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}:
				_dcgccb.WavAudioFile = NewCT_EmbeddedWAVAudioFile()
				if _gdaba := d.DecodeElement(_dcgccb.WavAudioFile, &_fcadaa); _gdaba != nil {
					return _gdaba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}:
				_dcgccb.AudioFile = NewCT_AudioFile()
				if _eadgd := d.DecodeElement(_dcgccb.AudioFile, &_fcadaa); _eadgd != nil {
					return _eadgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}:
				_dcgccb.VideoFile = NewCT_VideoFile()
				if _beefd := d.DecodeElement(_dcgccb.VideoFile, &_fcadaa); _beefd != nil {
					return _beefd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}:
				_dcgccb.QuickTimeFile = NewCT_QuickTimeFile()
				if _eace := d.DecodeElement(_dcgccb.QuickTimeFile, &_fcadaa); _eace != nil {
					return _eace
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061\u0020\u0025\u0076", _fcadaa.Name)
				if _ddged := d.Skip(); _ddged != nil {
					return _ddged
				}
			}
		case _d.EndElement:
			break _cfadf
		case _d.CharData:
		}
	}
	return nil
}
func (_ggadc ST_TextSpacingPercentOrPercentString) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ggadc.ST_TextSpacingPercent != nil {
		e.EncodeToken(_d.CharData(_dg.Sprintf("\u0025\u0064", *_ggadc.ST_TextSpacingPercent)))
	}
	if _ggadc.ST_Percentage != nil {
		e.EncodeToken(_d.CharData(*_ggadc.ST_Percentage))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_fdabda ST_DgmBuildStep) ValidateWithPath(path string) error {
	switch _fdabda {
	case 0, 1, 2:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdabda))
	}
	return nil
}

type CT_OfficeArtExtensionList struct{ Ext []*CT_OfficeArtExtension }

// Validate validates the EG_EffectProperties and its children
func (_eddga *EG_EffectProperties) Validate() error {
	return _eddga.ValidateWithPath("\u0045\u0047\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_daddf *CT_Bevel) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _agfdb := range start.Attr {
		if _agfdb.Name.Local == "\u0077" {
			_bege, _adab := _c.ParseInt(_agfdb.Value, 10, 64)
			if _adab != nil {
				return _adab
			}
			_daddf.WAttr = &_bege
			continue
		}
		if _agfdb.Name.Local == "\u0068" {
			_ffg, _ffda := _c.ParseInt(_agfdb.Value, 10, 64)
			if _ffda != nil {
				return _ffda
			}
			_daddf.HAttr = &_ffg
			continue
		}
		if _agfdb.Name.Local == "\u0070\u0072\u0073\u0074" {
			_daddf.PrstAttr.UnmarshalXMLAttr(_agfdb)
			continue
		}
	}
	for {
		_fae, _bgaee := d.Token()
		if _bgaee != nil {
			return _dg.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0065\u0076\u0065\u006c: \u0025\u0073", _bgaee)
		}
		if _aeac, _bafe := _fae.(_d.EndElement); _bafe && _aeac.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TextUnderlineLineFollowText and its children
func (_gdeef *CT_TextUnderlineLineFollowText) Validate() error {
	return _gdeef.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u004c\u0069n\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}
func (_gafba *ST_TextStrikeType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gcabf, _cdbde := d.Token()
	if _cdbde != nil {
		return _cdbde
	}
	if _bggbe, _cebda := _gcabf.(_d.EndElement); _cebda && _bggbe.Name == start.Name {
		*_gafba = 1
		return nil
	}
	if _fdbd, _egcafa := _gcabf.(_d.CharData); !_egcafa {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcabf)
	} else {
		switch string(_fdbd) {
		case "":
			*_gafba = 0
		case "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065":
			*_gafba = 1
		case "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be":
			*_gafba = 2
		case "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be":
			*_gafba = 3
		}
	}
	_gcabf, _cdbde = d.Token()
	if _cdbde != nil {
		return _cdbde
	}
	if _cebbe, _ggdgd := _gcabf.(_d.EndElement); _ggdgd && _cebbe.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcabf)
}
func (_bcbde *CT_ColorSchemeList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gbf:
	for {
		_cadf, _dadfc := d.Token()
		if _dadfc != nil {
			return _dadfc
		}
		switch _dcbcd := _cadf.(type) {
		case _d.StartElement:
			switch _dcbcd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053c\u0068\u0065\u006d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053c\u0068\u0065\u006d\u0065"}:
				_fgaa := NewCT_ColorSchemeAndMapping()
				if _afbdf := d.DecodeElement(_fgaa, &_dcbcd); _afbdf != nil {
					return _afbdf
				}
				_bcbde.ExtraClrScheme = append(_bcbde.ExtraClrScheme, _fgaa)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dcbcd.Name)
				if _gdcc := d.Skip(); _gdcc != nil {
					return _gdcc
				}
			}
		case _d.EndElement:
			break _gbf
		case _d.CharData:
		}
	}
	return nil
}
func (_ecbg ST_LineEndLength) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fdbee := _d.Attr{}
	_fdbee.Name = name
	switch _ecbg {
	case ST_LineEndLengthUnset:
		_fdbee.Value = ""
	case ST_LineEndLengthSm:
		_fdbee.Value = "\u0073\u006d"
	case ST_LineEndLengthMed:
		_fdbee.Value = "\u006d\u0065\u0064"
	case ST_LineEndLengthLg:
		_fdbee.Value = "\u006c\u0067"
	}
	return _fdbee, nil
}

// ValidateWithPath validates the CT_TableCell and its children, prefixing error messages with path
func (_edfbd *CT_TableCell) ValidateWithPath(path string) error {
	if _edfbd.TxBody != nil {
		if _dfcd := _edfbd.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _dfcd != nil {
			return _dfcd
		}
	}
	if _edfbd.TcPr != nil {
		if _bdfdfg := _edfbd.TcPr.ValidateWithPath(path + "\u002f\u0054\u0063P\u0072"); _bdfdfg != nil {
			return _bdfdfg
		}
	}
	if _edfbd.ExtLst != nil {
		if _bbbbf := _edfbd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbbbf != nil {
			return _bbbbf
		}
	}
	return nil
}
func NewCT_OfficeArtExtension() *CT_OfficeArtExtension {
	_fbfa := &CT_OfficeArtExtension{}
	return _fbfa
}
func (_gcgbf ST_TileFlipMode) ValidateWithPath(path string) error {
	switch _gcgbf {
	case 0, 1, 2, 3, 4:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcgbf))
	}
	return nil
}
func NewCT_ContentPartLocking() *CT_ContentPartLocking {
	_dfdd := &CT_ContentPartLocking{}
	return _dfdd
}
func (_dfb *CT_AudioCDTime) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ece := range start.Attr {
		if _ece.Name.Local == "\u0074\u0072\u0061c\u006b" {
			_eaae, _gcaa := _c.ParseUint(_ece.Value, 10, 8)
			if _gcaa != nil {
				return _gcaa
			}
			_dfb.TrackAttr = uint8(_eaae)
			continue
		}
		if _ece.Name.Local == "\u0074\u0069\u006d\u0065" {
			_cdb, _gfdc := _c.ParseUint(_ece.Value, 10, 32)
			if _gfdc != nil {
				return _gfdc
			}
			_acg := uint32(_cdb)
			_dfb.TimeAttr = &_acg
			continue
		}
	}
	for {
		_cabdg, _adg := d.Token()
		if _adg != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0043\u0044\u0054\u0069\u006d\u0065:\u0020\u0025\u0073", _adg)
		}
		if _cebeb, _gace := _cabdg.(_d.EndElement); _gace && _cebeb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewEG_TextBullet() *EG_TextBullet { _dfccf := &EG_TextBullet{}; return _dfccf }

// ValidateWithPath validates the CT_ContentPartLocking and its children, prefixing error messages with path
func (_ggeb *CT_ContentPartLocking) ValidateWithPath(path string) error {
	if _ggeb.ExtLst != nil {
		if _ebff := _ggeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebff != nil {
			return _ebff
		}
	}
	return nil
}
func (_cgbbg *CT_TextBulletSizeFollowText) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_egdea, _beddgd := d.Token()
		if _beddgd != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065x\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078t\u003a\u0020\u0025\u0073", _beddgd)
		}
		if _gaffa, _cfcdb := _egdea.(_d.EndElement); _cfcdb && _gaffa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ecfdg *TblStyleLst) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ecfdg.CT_TableStyleList = *NewCT_TableStyleList()
	for _, _gebaa := range start.Attr {
		if _gebaa.Name.Local == "\u0064\u0065\u0066" {
			_egcfg, _agefb := _gebaa.Value, error(nil)
			if _agefb != nil {
				return _agefb
			}
			_ecfdg.DefAttr = _egcfg
			continue
		}
	}
_gedccc:
	for {
		_gbdg, _dddbc := d.Token()
		if _dddbc != nil {
			return _dddbc
		}
		switch _dcfcf := _gbdg.(type) {
		case _d.StartElement:
			switch _dcfcf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}:
				_effbgg := NewCT_TableStyle()
				if _abebe := d.DecodeElement(_effbgg, &_dcfcf); _abebe != nil {
					return _abebe
				}
				_ecfdg.TblStyle = append(_ecfdg.TblStyle, _effbgg)
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074\u0020\u0025\u0076", _dcfcf.Name)
				if _edafcg := d.Skip(); _edafcg != nil {
					return _edafcg
				}
			}
		case _d.EndElement:
			break _gedccc
		case _d.CharData:
		}
	}
	return nil
}
func (_dgbg *CT_EffectStyleItem) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fffed:
	for {
		_fffg, _bfcd := d.Token()
		if _bfcd != nil {
			return _bfcd
		}
		switch _dgab := _fffg.(type) {
		case _d.StartElement:
			switch _dgab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_dgbg.EffectLst = NewCT_EffectList()
				if _bfag := d.DecodeElement(_dgbg.EffectLst, &_dgab); _bfag != nil {
					return _bfag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_dgbg.EffectDag = NewCT_EffectContainer()
				if _gaee := d.DecodeElement(_dgbg.EffectDag, &_dgab); _gaee != nil {
					return _gaee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_dgbg.Scene3d = NewCT_Scene3D()
				if _cfae := d.DecodeElement(_dgbg.Scene3d, &_dgab); _cfae != nil {
					return _cfae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_dgbg.Sp3d = NewCT_Shape3D()
				if _fffcb := d.DecodeElement(_dgbg.Sp3d, &_dgab); _fffcb != nil {
					return _fffcb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074S\u0074\u0079\u006c\u0065\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _dgab.Name)
				if _badcg := d.Skip(); _badcg != nil {
					return _badcg
				}
			}
		case _d.EndElement:
			break _fffed
		case _d.CharData:
		}
	}
	return nil
}
func NewTheme() *Theme {
	_gegac := &Theme{}
	_gegac.CT_OfficeStyleSheet = *NewCT_OfficeStyleSheet()
	return _gegac
}

type CT_ObjectStyleDefaults struct {
	SpDef  *CT_DefaultShapeDefinition
	LnDef  *CT_DefaultShapeDefinition
	TxDef  *CT_DefaultShapeDefinition
	ExtLst *CT_OfficeArtExtensionList
}

func (_bgdgbd *CT_PresetTextShape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_gcba, _fbabe := _bgdgbd.PrstAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _fbabe != nil {
		return _fbabe
	}
	start.Attr = append(start.Attr, _gcba)
	e.EncodeToken(start)
	if _bgdgbd.AvLst != nil {
		_cdaea := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_bgdgbd.AvLst, _cdaea)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OfficeStyleSheet and its children, prefixing error messages with path
func (_eaaca *CT_OfficeStyleSheet) ValidateWithPath(path string) error {
	if _gfgdc := _eaaca.ThemeElements.ValidateWithPath(path + "\u002f\u0054\u0068\u0065\u006d\u0065\u0045\u006c\u0065m\u0065\u006e\u0074\u0073"); _gfgdc != nil {
		return _gfgdc
	}
	if _eaaca.ObjectDefaults != nil {
		if _dcfgc := _eaaca.ObjectDefaults.ValidateWithPath(path + "\u002fO\u0062j\u0065\u0063\u0074\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073"); _dcfgc != nil {
			return _dcfgc
		}
	}
	if _eaaca.ExtraClrSchemeLst != nil {
		if _beded := _eaaca.ExtraClrSchemeLst.ValidateWithPath(path + "\u002fE\u0078t\u0072\u0061\u0043\u006c\u0072S\u0063\u0068e\u006d\u0065\u004c\u0073\u0074"); _beded != nil {
			return _beded
		}
	}
	if _eaaca.CustClrLst != nil {
		if _cedddg := _eaaca.CustClrLst.ValidateWithPath(path + "/\u0043\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"); _cedddg != nil {
			return _cedddg
		}
	}
	if _eaaca.ExtLst != nil {
		if _adecc := _eaaca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adecc != nil {
			return _adecc
		}
	}
	return nil
}

const (
	ST_OnOffStyleTypeUnset ST_OnOffStyleType = 0
	ST_OnOffStyleTypeOn    ST_OnOffStyleType = 1
	ST_OnOffStyleTypeOff   ST_OnOffStyleType = 2
	ST_OnOffStyleTypeDef   ST_OnOffStyleType = 3
)

func (_babbc ST_LineEndType) String() string {
	switch _babbc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 3:
		return "\u0073t\u0065\u0061\u006c\u0074\u0068"
	case 4:
		return "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case 5:
		return "\u006f\u0076\u0061\u006c"
	case 6:
		return "\u0061\u0072\u0072o\u0077"
	}
	return ""
}

// Validate validates the CT_GeomRect and its children
func (_addfg *CT_GeomRect) Validate() error {
	return _addfg.ValidateWithPath("C\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074")
}

type CT_ColorChangeEffect struct {
	UseAAttr *bool
	ClrFrom  *CT_Color
	ClrTo    *CT_Color
}

func (_bega *CT_FontReference) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bega.IdxAttr = ST_FontCollectionIndex(1)
	for _, _ddbbe := range start.Attr {
		if _ddbbe.Name.Local == "\u0069\u0064\u0078" {
			_bega.IdxAttr.UnmarshalXMLAttr(_ddbbe)
			continue
		}
	}
_ecea:
	for {
		_bbbf, _cdfa := d.Token()
		if _cdfa != nil {
			return _cdfa
		}
		switch _gada := _bbbf.(type) {
		case _d.StartElement:
			switch _gada.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_bega.ScrgbClr = NewCT_ScRgbColor()
				if _aaga := d.DecodeElement(_bega.ScrgbClr, &_gada); _aaga != nil {
					return _aaga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_bega.SrgbClr = NewCT_SRgbColor()
				if _gffea := d.DecodeElement(_bega.SrgbClr, &_gada); _gffea != nil {
					return _gffea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_bega.HslClr = NewCT_HslColor()
				if _bgdef := d.DecodeElement(_bega.HslClr, &_gada); _bgdef != nil {
					return _bgdef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_bega.SysClr = NewCT_SystemColor()
				if _daee := d.DecodeElement(_bega.SysClr, &_gada); _daee != nil {
					return _daee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_bega.SchemeClr = NewCT_SchemeColor()
				if _bdfa := d.DecodeElement(_bega.SchemeClr, &_gada); _bdfa != nil {
					return _bdfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_bega.PrstClr = NewCT_PresetColor()
				if _cgfb := d.DecodeElement(_bega.PrstClr, &_gada); _cgfb != nil {
					return _cgfb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0025v", _gada.Name)
				if _gdad := d.Skip(); _gdad != nil {
					return _gdad
				}
			}
		case _d.EndElement:
			break _ecea
		case _d.CharData:
		}
	}
	return nil
}
func (_ccfegb *ThemeOverride) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ccfegb.CT_BaseStylesOverride = *NewCT_BaseStylesOverride()
_gcfdgf:
	for {
		_bdddbg, _ceafa := d.Token()
		if _ceafa != nil {
			return _ceafa
		}
		switch _adbag := _bdddbg.(type) {
		case _d.StartElement:
			switch _adbag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				_ccfegb.ClrScheme = NewCT_ColorScheme()
				if _efcb := d.DecodeElement(_ccfegb.ClrScheme, &_adbag); _efcb != nil {
					return _efcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				_ccfegb.FontScheme = NewCT_FontScheme()
				if _aadca := d.DecodeElement(_ccfegb.FontScheme, &_adbag); _aadca != nil {
					return _aadca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				_ccfegb.FmtScheme = NewCT_StyleMatrix()
				if _ddgdb := d.DecodeElement(_ccfegb.FmtScheme, &_adbag); _ddgdb != nil {
					return _ddgdb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0068\u0065\u006de\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065 \u0025\u0076", _adbag.Name)
				if _babbab := d.Skip(); _babbab != nil {
					return _babbab
				}
			}
		case _d.EndElement:
			break _gcfdgf
		case _d.CharData:
		}
	}
	return nil
}
func (_cdbag *CT_TextCharBullet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0068\u0061\u0072"}, Value: _dg.Sprintf("\u0025\u0076", _cdbag.CharAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GvmlGroupShapeNonVisual and its children
func (_aaega *CT_GvmlGroupShapeNonVisual) Validate() error {
	return _aaega.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c")
}

// ValidateWithPath validates the CT_NonVisualGraphicFrameProperties and its children, prefixing error messages with path
func (_cabdf *CT_NonVisualGraphicFrameProperties) ValidateWithPath(path string) error {
	if _cabdf.GraphicFrameLocks != nil {
		if _bdccc := _cabdf.GraphicFrameLocks.ValidateWithPath(path + "\u002fG\u0072a\u0070\u0068\u0069\u0063\u0046r\u0061\u006de\u004c\u006f\u0063\u006b\u0073"); _bdccc != nil {
			return _bdccc
		}
	}
	if _cabdf.ExtLst != nil {
		if _bbfab := _cabdf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbfab != nil {
			return _bbfab
		}
	}
	return nil
}

// Validate validates the CT_ColorChangeEffect and its children
func (_dedc *CT_ColorChangeEffect) Validate() error {
	return _dedc.ValidateWithPath("C\u0054_\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061n\u0067\u0065\u0045\u0066fe\u0063\u0074")
}
func NewCT_SRgbColor() *CT_SRgbColor { _agad := &CT_SRgbColor{}; return _agad }

// ValidateWithPath validates the CT_TextAutonumberBullet and its children, prefixing error messages with path
func (_dcgff *CT_TextAutonumberBullet) ValidateWithPath(path string) error {
	if _dcgff.TypeAttr == ST_TextAutonumberSchemeUnset {
		return _dg.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ggdb := _dcgff.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ggdb != nil {
		return _ggdb
	}
	if _dcgff.StartAtAttr != nil {
		if *_dcgff.StartAtAttr < 1 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0074\u0061\u0072\u0074\u0041\u0074\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dcgff.StartAtAttr)
		}
		if *_dcgff.StartAtAttr > 32767 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0074a\u0072\u0074\u0041t\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0033\u0032\u0037\u0036\u0037\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dcgff.StartAtAttr)
		}
	}
	return nil
}

type CT_GvmlGraphicFrameNonVisual struct {
	CNvPr             *CT_NonVisualDrawingProps
	CNvGraphicFramePr *CT_NonVisualGraphicFrameProperties
}

func (_eacdg *CT_StretchInfoProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fcfcb:
	for {
		_gcgdc, _cbac := d.Token()
		if _cbac != nil {
			return _cbac
		}
		switch _cggaa := _gcgdc.(type) {
		case _d.StartElement:
			switch _cggaa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}:
				_eacdg.FillRect = NewCT_RelativeRect()
				if _ecfage := d.DecodeElement(_eacdg.FillRect, &_cggaa); _ecfage != nil {
					return _ecfage
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066\u006f\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _cggaa.Name)
				if _fdba := d.Skip(); _fdba != nil {
					return _fdba
				}
			}
		case _d.EndElement:
			break _fcfcb
		case _d.CharData:
		}
	}
	return nil
}
func (_gffdae *ST_LineEndType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dcda, _gcbdb := d.Token()
	if _gcbdb != nil {
		return _gcbdb
	}
	if _ccdgf, _dgadf := _dcda.(_d.EndElement); _dgadf && _ccdgf.Name == start.Name {
		*_gffdae = 1
		return nil
	}
	if _eaecg, _bcdba := _dcda.(_d.CharData); !_bcdba {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcda)
	} else {
		switch string(_eaecg) {
		case "":
			*_gffdae = 0
		case "\u006e\u006f\u006e\u0065":
			*_gffdae = 1
		case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_gffdae = 2
		case "\u0073t\u0065\u0061\u006c\u0074\u0068":
			*_gffdae = 3
		case "\u0064i\u0061\u006d\u006f\u006e\u0064":
			*_gffdae = 4
		case "\u006f\u0076\u0061\u006c":
			*_gffdae = 5
		case "\u0061\u0072\u0072o\u0077":
			*_gffdae = 6
		}
	}
	_dcda, _gcbdb = d.Token()
	if _gcbdb != nil {
		return _gcbdb
	}
	if _aegbe, _edcdb := _dcda.(_d.EndElement); _edcdb && _aegbe.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcda)
}
func NewCT_GvmlPictureNonVisual() *CT_GvmlPictureNonVisual {
	_ffead := &CT_GvmlPictureNonVisual{}
	_ffead.CNvPr = NewCT_NonVisualDrawingProps()
	_ffead.CNvPicPr = NewCT_NonVisualPictureProperties()
	return _ffead
}

// ValidateWithPath validates the CT_GraphicalObjectFrameLocking and its children, prefixing error messages with path
func (_ggfd *CT_GraphicalObjectFrameLocking) ValidateWithPath(path string) error {
	if _ggfd.ExtLst != nil {
		if _dgaec := _ggfd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgaec != nil {
			return _dgaec
		}
	}
	return nil
}

// Validate validates the CT_GraphicalObjectFrameLocking and its children
func (_dedb *CT_GraphicalObjectFrameLocking) Validate() error {
	return _dedb.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063a\u006c\u004f\u0062\u006a\u0065\u0063\u0074F\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}
func (_defae *CT_TextFont) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065"}, Value: _dg.Sprintf("\u0025\u0076", _defae.TypefaceAttr)})
	if _defae.PanoseAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0061\u006e\u006f\u0073\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_defae.PanoseAttr)})
	}
	if _defae.PitchFamilyAttr != ST_PitchFamilyUnset {
		_dgdae, _cdccf := _defae.PitchFamilyAttr.MarshalXMLAttr(_d.Name{Local: "p\u0069\u0074\u0063\u0068\u0046\u0061\u006d\u0069\u006c\u0079"})
		if _cdccf != nil {
			return _cdccf
		}
		start.Attr = append(start.Attr, _dgdae)
	}
	if _defae.CharsetAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_defae.CharsetAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewEG_LineFillProperties() *EG_LineFillProperties {
	_afaeg := &EG_LineFillProperties{}
	return _afaeg
}
func (_ccfe *CT_AnimationElementChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ccfe.Dgm != nil {
		_ddc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0064g\u006d"}}
		e.EncodeElement(_ccfe.Dgm, _ddc)
	}
	if _ccfe.Chart != nil {
		_edgb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u0068\u0061\u0072\u0074"}}
		e.EncodeElement(_ccfe.Chart, _edgb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_acaeab *ST_TextSpacingPercentOrPercentString) Validate() error {
	return _acaeab.ValidateWithPath("")
}
func (_ebed *CT_NonVisualGraphicFrameProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ebed.GraphicFrameLocks != nil {
		_efgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072ap\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_ebed.GraphicFrameLocks, _efgd)
	}
	if _ebed.ExtLst != nil {
		_ccdgc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ebed.ExtLst, _ccdgc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_TextStrikeType byte

// Validate validates the CT_GvmlConnectorNonVisual and its children
func (_bade *CT_GvmlConnectorNonVisual) Validate() error {
	return _bade.ValidateWithPath("\u0043T\u005f\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065c\u0074o\u0072N\u006f\u006e\u0056\u0069\u0073\u0075\u0061l")
}
func (_cfgdc *CT_TextListStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_edddb:
	for {
		_bgffd, _fegge := d.Token()
		if _fegge != nil {
			return _fegge
		}
		switch _dbadg := _bgffd.(type) {
		case _d.StartElement:
			switch _dbadg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0050\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0050\u0050\u0072"}:
				_cfgdc.DefPPr = NewCT_TextParagraphProperties()
				if _bafeg := d.DecodeElement(_cfgdc.DefPPr, &_dbadg); _bafeg != nil {
					return _bafeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0031\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0031\u0070\u0050\u0072"}:
				_cfgdc.Lvl1pPr = NewCT_TextParagraphProperties()
				if _ffaf := d.DecodeElement(_cfgdc.Lvl1pPr, &_dbadg); _ffaf != nil {
					return _ffaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0032\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0032\u0070\u0050\u0072"}:
				_cfgdc.Lvl2pPr = NewCT_TextParagraphProperties()
				if _begda := d.DecodeElement(_cfgdc.Lvl2pPr, &_dbadg); _begda != nil {
					return _begda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0033\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0033\u0070\u0050\u0072"}:
				_cfgdc.Lvl3pPr = NewCT_TextParagraphProperties()
				if _eebbc := d.DecodeElement(_cfgdc.Lvl3pPr, &_dbadg); _eebbc != nil {
					return _eebbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0034\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0034\u0070\u0050\u0072"}:
				_cfgdc.Lvl4pPr = NewCT_TextParagraphProperties()
				if _dgbbg := d.DecodeElement(_cfgdc.Lvl4pPr, &_dbadg); _dgbbg != nil {
					return _dgbbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0035\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0035\u0070\u0050\u0072"}:
				_cfgdc.Lvl5pPr = NewCT_TextParagraphProperties()
				if _cfgfd := d.DecodeElement(_cfgdc.Lvl5pPr, &_dbadg); _cfgfd != nil {
					return _cfgfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0036\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0036\u0070\u0050\u0072"}:
				_cfgdc.Lvl6pPr = NewCT_TextParagraphProperties()
				if _efefa := d.DecodeElement(_cfgdc.Lvl6pPr, &_dbadg); _efefa != nil {
					return _efefa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0037\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0037\u0070\u0050\u0072"}:
				_cfgdc.Lvl7pPr = NewCT_TextParagraphProperties()
				if _dgebe := d.DecodeElement(_cfgdc.Lvl7pPr, &_dbadg); _dgebe != nil {
					return _dgebe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0038\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0038\u0070\u0050\u0072"}:
				_cfgdc.Lvl8pPr = NewCT_TextParagraphProperties()
				if _deca := d.DecodeElement(_cfgdc.Lvl8pPr, &_dbadg); _deca != nil {
					return _deca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0039\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0039\u0070\u0050\u0072"}:
				_cfgdc.Lvl9pPr = NewCT_TextParagraphProperties()
				if _bfacd := d.DecodeElement(_cfgdc.Lvl9pPr, &_dbadg); _bfacd != nil {
					return _bfacd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfgdc.ExtLst = NewCT_OfficeArtExtensionList()
				if _cdbcfa := d.DecodeElement(_cfgdc.ExtLst, &_dbadg); _cdbcfa != nil {
					return _cdbcfa
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025v", _dbadg.Name)
				if _bdeca := d.Skip(); _bdeca != nil {
					return _bdeca
				}
			}
		case _d.EndElement:
			break _edddb
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_XYAdjustHandle and its children
func (_gcgcfc *CT_XYAdjustHandle) Validate() error {
	return _gcgcfc.ValidateWithPath("\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048a\u006e\u0064\u006c\u0065")
}
func (_fbfea *ST_TextShapeType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fbfea = 0
	case "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065":
		*_fbfea = 1
	case "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n":
		*_fbfea = 2
	case "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070":
		*_fbfea = 3
	case "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_fbfea = 4
	case "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064":
		*_fbfea = 5
	case "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e":
		*_fbfea = 6
	case "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064":
		*_fbfea = 7
	case "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065":
		*_fbfea = 8
	case "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065":
		*_fbfea = 9
	case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070":
		*_fbfea = 10
	case "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e":
		*_fbfea = 11
	case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065":
		*_fbfea = 12
	case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e":
		*_fbfea = 13
	case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072":
		*_fbfea = 14
	case "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072":
		*_fbfea = 15
	case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072":
		*_fbfea = 16
	case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072":
		*_fbfea = 17
	case "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070":
		*_fbfea = 18
	case "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e":
		*_fbfea = 19
	case "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p":
		*_fbfea = 20
	case "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e":
		*_fbfea = 21
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651":
		*_fbfea = 22
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652":
		*_fbfea = 23
	case "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031":
		*_fbfea = 24
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654":
		*_fbfea = 25
	case "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065":
		*_fbfea = 26
	case "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065":
		*_fbfea = 27
	case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
		*_fbfea = 28
	case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
		*_fbfea = 29
	case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
		*_fbfea = 30
	case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
		*_fbfea = 31
	case "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065":
		*_fbfea = 32
	case "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e":
		*_fbfea = 33
	case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074":
		*_fbfea = 34
	case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074":
		*_fbfea = 35
	case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070":
		*_fbfea = 36
	case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
		*_fbfea = 37
	case "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070":
		*_fbfea = 38
	case "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e":
		*_fbfea = 39
	case "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070":
		*_fbfea = 40
	case "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
		*_fbfea = 41
	}
	return nil
}
func (_ceecf ST_Coordinate32) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ceecf.ST_Coordinate32Unqualified != nil {
		e.EncodeToken(_d.CharData(_dg.Sprintf("\u0025\u0064", *_ceecf.ST_Coordinate32Unqualified)))
	}
	if _ceecf.ST_UniversalMeasure != nil {
		e.EncodeToken(_d.CharData(*_ceecf.ST_UniversalMeasure))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_fgdaa *CT_FontCollection) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gcce := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0061\u0074\u0069\u006e"}}
	e.EncodeElement(_fgdaa.Latin, _gcce)
	_ddagc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0061"}}
	e.EncodeElement(_fgdaa.Ea, _ddagc)
	_gbefc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0073"}}
	e.EncodeElement(_fgdaa.Cs, _gbefc)
	if _fgdaa.Font != nil {
		_ecbfg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		for _, _aaeff := range _fgdaa.Font {
			e.EncodeElement(_aaeff, _ecbfg)
		}
	}
	if _fgdaa.ExtLst != nil {
		_gfbdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgdaa.ExtLst, _gfbdc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ccfcbe *CT_WholeE2oFormatting) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gfcfg:
	for {
		_edafa, _ggcac := d.Token()
		if _ggcac != nil {
			return _ggcac
		}
		switch _beda := _edafa.(type) {
		case _d.StartElement:
			switch _beda.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_ccfcbe.Ln = NewCT_LineProperties()
				if _ddcfg := d.DecodeElement(_ccfcbe.Ln, &_beda); _ddcfg != nil {
					return _ddcfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_ccfcbe.EffectLst = NewCT_EffectList()
				if _dbacd := d.DecodeElement(_ccfcbe.EffectLst, &_beda); _dbacd != nil {
					return _dbacd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_ccfcbe.EffectDag = NewCT_EffectContainer()
				if _becbg := d.DecodeElement(_ccfcbe.EffectDag, &_beda); _becbg != nil {
					return _becbg
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0057\u0068\u006f\u006c\u0065\u0045\u0032\u006f\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067\u0020\u0025\u0076", _beda.Name)
				if _efagc := d.Skip(); _efagc != nil {
					return _efagc
				}
			}
		case _d.EndElement:
			break _gfcfg
		case _d.CharData:
		}
	}
	return nil
}
func NewGraphic() *Graphic {
	_cbcec := &Graphic{}
	_cbcec.CT_GraphicalObject = *NewCT_GraphicalObject()
	return _cbcec
}
func (_efga *CT_FixedPercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _dg.Sprintf("\u0025\u0076", _efga.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_GroupShapeProperties struct {
	BwModeAttr ST_BlackWhiteMode
	Xfrm       *CT_GroupTransform2D
	NoFill     *CT_NoFillProperties
	SolidFill  *CT_SolidColorFillProperties
	GradFill   *CT_GradientFillProperties
	BlipFill   *CT_BlipFillProperties
	PattFill   *CT_PatternFillProperties
	GrpFill    *CT_GroupFillProperties
	EffectLst  *CT_EffectList
	EffectDag  *CT_EffectContainer
	Scene3d    *CT_Scene3D
	ExtLst     *CT_OfficeArtExtensionList
}
type CT_GeomGuide struct {
	NameAttr string
	FmlaAttr string
}

func (_fgbd *CT_AudioFile) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _dg.Sprintf("\u0025\u0076", _fgbd.LinkAttr)})
	if _fgbd.ContentTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_fgbd.ContentTypeAttr)})
	}
	e.EncodeToken(start)
	if _fgbd.ExtLst != nil {
		_fbef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgbd.ExtLst, _fbef)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextUnderlineFillFollowText() *CT_TextUnderlineFillFollowText {
	_fbee := &CT_TextUnderlineFillFollowText{}
	return _fbee
}
func (_bcadb *EG_ThemeableFontStyles) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bcadb.Font != nil {
		_egafe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_bcadb.Font, _egafe)
	}
	if _bcadb.FontRef != nil {
		_eecffe := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
		e.EncodeElement(_bcadb.FontRef, _eecffe)
	}
	return nil
}
func (_ceda *CT_CustomColorList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ceda.CustClr != nil {
		_faddf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u0075\u0073\u0074\u0043\u006cr"}}
		for _, _dfabe := range _ceda.CustClr {
			e.EncodeElement(_dfabe, _faddf)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_ShadeProperties and its children
func (_ffgee *EG_ShadeProperties) Validate() error {
	return _ffgee.ValidateWithPath("\u0045G\u005fS\u0068\u0061\u0064\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}
func (_beeec ST_SystemColorVal) String() string {
	switch _beeec {
	case 0:
		return ""
	case 1:
		return "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r"
	case 2:
		return "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"
	case 3:
		return "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 4:
		return "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 5:
		return "\u006d\u0065\u006e\u0075"
	case 6:
		return "\u0077\u0069\u006e\u0064\u006f\u0077"
	case 7:
		return "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065"
	case 8:
		return "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074"
	case 9:
		return "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074"
	case 10:
		return "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 11:
		return "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072"
	case 12:
		return "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072"
	case 13:
		return "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065"
	case 14:
		return "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"
	case 15:
		return "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074"
	case 16:
		return "\u0062t\u006e\u0046\u0061\u0063\u0065"
	case 17:
		return "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw"
	case 18:
		return "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074"
	case 19:
		return "\u0062t\u006e\u0054\u0065\u0078\u0074"
	case 20:
		return "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 21:
		return "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case 22:
		return "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077"
	case 23:
		return "\u0033d\u004c\u0069\u0067\u0068\u0074"
	case 24:
		return "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074"
	case 25:
		return "\u0069\u006e\u0066\u006f\u0042\u006b"
	case 26:
		return "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074"
	case 27:
		return "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e"
	case 28:
		return "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 29:
		return "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case 30:
		return "\u006de\u006e\u0075\u0042\u0061\u0072"
	}
	return ""
}
func (_dde *CT_ColorMappingOverrideChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aefd:
	for {
		_fbf, _eegb := d.Token()
		if _eegb != nil {
			return _eegb
		}
		switch _dggga := _fbf.(type) {
		case _d.StartElement:
			switch _dggga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}:
				_dde.MasterClrMapping = NewCT_EmptyElement()
				if _dbca := d.DecodeElement(_dde.MasterClrMapping, &_dggga); _dbca != nil {
					return _dbca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}:
				_dde.OverrideClrMapping = NewCT_ColorMapping()
				if _bdea := d.DecodeElement(_dde.OverrideClrMapping, &_dggga); _bdea != nil {
					return _bdea
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067O\u0076\u0065\u0072\u0072\u0069\u0064e\u0043\u0068o\u0069\u0063e\u0020%\u0076", _dggga.Name)
				if _edad := d.Skip(); _edad != nil {
					return _edad
				}
			}
		case _d.EndElement:
			break _aefd
		case _d.CharData:
		}
	}
	return nil
}
func (_cbbc *CT_Point2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078"}, Value: _dg.Sprintf("\u0025\u0076", _cbbc.XAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0079"}, Value: _dg.Sprintf("\u0025\u0076", _cbbc.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bgffg *CT_OuterShadowEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cggbc := range start.Attr {
		if _cggbc.Name.Local == "\u0061\u006c\u0067\u006e" {
			_bgffg.AlgnAttr.UnmarshalXMLAttr(_cggbc)
			continue
		}
		if _cggbc.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_geadc, _bgbdd := _c.ParseBool(_cggbc.Value)
			if _bgbdd != nil {
				return _bgbdd
			}
			_bgffg.RotWithShapeAttr = &_geadc
			continue
		}
		if _cggbc.Name.Local == "\u0064\u0069\u0073\u0074" {
			_bcfbb, _dbadb := _c.ParseInt(_cggbc.Value, 10, 64)
			if _dbadb != nil {
				return _dbadb
			}
			_bgffg.DistAttr = &_bcfbb
			continue
		}
		if _cggbc.Name.Local == "\u0073\u0078" {
			_cabcf, _ddcda := ParseUnionST_Percentage(_cggbc.Value)
			if _ddcda != nil {
				return _ddcda
			}
			_bgffg.SxAttr = &_cabcf
			continue
		}
		if _cggbc.Name.Local == "\u0073\u0079" {
			_fafbf, _gfff := ParseUnionST_Percentage(_cggbc.Value)
			if _gfff != nil {
				return _gfff
			}
			_bgffg.SyAttr = &_fafbf
			continue
		}
		if _cggbc.Name.Local == "\u006b\u0078" {
			_dceca, _aabea := _c.ParseInt(_cggbc.Value, 10, 32)
			if _aabea != nil {
				return _aabea
			}
			_aedb := int32(_dceca)
			_bgffg.KxAttr = &_aedb
			continue
		}
		if _cggbc.Name.Local == "\u006b\u0079" {
			_bdbb, _dddc := _c.ParseInt(_cggbc.Value, 10, 32)
			if _dddc != nil {
				return _dddc
			}
			_adgag := int32(_bdbb)
			_bgffg.KyAttr = &_adgag
			continue
		}
		if _cggbc.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_eeeeb, _ddeg := _c.ParseInt(_cggbc.Value, 10, 64)
			if _ddeg != nil {
				return _ddeg
			}
			_bgffg.BlurRadAttr = &_eeeeb
			continue
		}
		if _cggbc.Name.Local == "\u0064\u0069\u0072" {
			_abbbc, _dgbac := _c.ParseInt(_cggbc.Value, 10, 32)
			if _dgbac != nil {
				return _dgbac
			}
			_cbff := int32(_abbbc)
			_bgffg.DirAttr = &_cbff
			continue
		}
	}
_cefc:
	for {
		_acabgc, _fcfc := d.Token()
		if _fcfc != nil {
			return _fcfc
		}
		switch _aacb := _acabgc.(type) {
		case _d.StartElement:
			switch _aacb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_bgffg.ScrgbClr = NewCT_ScRgbColor()
				if _dggcb := d.DecodeElement(_bgffg.ScrgbClr, &_aacb); _dggcb != nil {
					return _dggcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_bgffg.SrgbClr = NewCT_SRgbColor()
				if _gcfd := d.DecodeElement(_bgffg.SrgbClr, &_aacb); _gcfd != nil {
					return _gcfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_bgffg.HslClr = NewCT_HslColor()
				if _cdbdc := d.DecodeElement(_bgffg.HslClr, &_aacb); _cdbdc != nil {
					return _cdbdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_bgffg.SysClr = NewCT_SystemColor()
				if _egec := d.DecodeElement(_bgffg.SysClr, &_aacb); _egec != nil {
					return _egec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_bgffg.SchemeClr = NewCT_SchemeColor()
				if _ddfdb := d.DecodeElement(_bgffg.SchemeClr, &_aacb); _ddfdb != nil {
					return _ddfdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_bgffg.PrstClr = NewCT_PresetColor()
				if _eadbf := d.DecodeElement(_bgffg.PrstClr, &_aacb); _eadbf != nil {
					return _eadbf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _aacb.Name)
				if _gfead := d.Skip(); _gfead != nil {
					return _gfead
				}
			}
		case _d.EndElement:
			break _cefc
		case _d.CharData:
		}
	}
	return nil
}
func (_caeg *CT_GvmlTextShapeChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dfdef:
	for {
		_bgag, _adccc := d.Token()
		if _adccc != nil {
			return _adccc
		}
		switch _adgdc := _bgag.(type) {
		case _d.StartElement:
			switch _adgdc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}:
				_caeg.UseSpRect = NewCT_GvmlUseShapeRectangle()
				if _bcdd := d.DecodeElement(_caeg.UseSpRect, &_adgdc); _bcdd != nil {
					return _bcdd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_caeg.Xfrm = NewCT_Transform2D()
				if _gbabe := d.DecodeElement(_caeg.Xfrm, &_adgdc); _gbabe != nil {
					return _gbabe
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0076\u006d\u006cT\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _adgdc.Name)
				if _acdde := d.Skip(); _acdde != nil {
					return _acdde
				}
			}
		case _d.EndElement:
			break _dfdef
		case _d.CharData:
		}
	}
	return nil
}
func (_cedcf ST_PenAlignment) Validate() error { return _cedcf.ValidateWithPath("") }

// Validate validates the CT_TableRow and its children
func (_acafa *CT_TableRow) Validate() error {
	return _acafa.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077")
}

// ValidateWithPath validates the CT_ShapeLocking and its children, prefixing error messages with path
func (_ffggd *CT_ShapeLocking) ValidateWithPath(path string) error {
	if _ffggd.ExtLst != nil {
		if _egffg := _ffggd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egffg != nil {
			return _egffg
		}
	}
	return nil
}
func ParseUnionST_PositivePercentage(s string) (ST_PositivePercentage, error) {
	_gbde := ST_PositivePercentage{}
	if _fe.ST_PositivePercentagePatternRe.MatchString(s) {
		_gbde.ST_PositivePercentage = &ST_Percentage{}
		_gbde.ST_PositivePercentage.ST_Percentage = &s
	} else {
		_ggdgc, _dcgcf := _c.ParseInt(s, 10, 32)
		if _dcgcf != nil {
			return _gbde, _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _dcgcf)
		}
		_addce := int32(_ggdgc)
		_gbde.ST_PositivePercentageDecimal = &_addce
	}
	return _gbde, nil
}
func (_cedc *CT_PatternFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dcgf := range start.Attr {
		if _dcgf.Name.Local == "\u0070\u0072\u0073\u0074" {
			_cedc.PrstAttr.UnmarshalXMLAttr(_dcgf)
			continue
		}
	}
_bdaga:
	for {
		_fbfdc, _agca := d.Token()
		if _agca != nil {
			return _agca
		}
		switch _adbd := _fbfdc.(type) {
		case _d.StartElement:
			switch _adbd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0067\u0043l\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0067\u0043l\u0072"}:
				_cedc.FgClr = NewCT_Color()
				if _ffcac := d.DecodeElement(_cedc.FgClr, &_adbd); _ffcac != nil {
					return _ffcac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0043l\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0043l\u0072"}:
				_cedc.BgClr = NewCT_Color()
				if _aedg := d.DecodeElement(_cedc.BgClr, &_adbd); _aedg != nil {
					return _aedg
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _adbd.Name)
				if _fbff := d.Skip(); _fbff != nil {
					return _fbff
				}
			}
		case _d.EndElement:
			break _bdaga
		case _d.CharData:
		}
	}
	return nil
}
func (_fddda ST_TextCapsType) Validate() error { return _fddda.ValidateWithPath("") }
func (_bfe *CT_AnimationDgmElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cga := range start.Attr {
		if _cga.Name.Local == "\u0069\u0064" {
			_efa, _cabg := _cga.Value, error(nil)
			if _cabg != nil {
				return _cabg
			}
			_bfe.IdAttr = &_efa
			continue
		}
		if _cga.Name.Local == "\u0062l\u0064\u0053\u0074\u0065\u0070" {
			_bfe.BldStepAttr.UnmarshalXMLAttr(_cga)
			continue
		}
	}
	for {
		_adff, _gacg := d.Token()
		if _gacg != nil {
			return _dg.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006e\u0069m\u0061t\u0069o\u006eD\u0067\u006d\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _gacg)
		}
		if _gffg, _dgff := _adff.(_d.EndElement); _dgff && _gffg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fgeba *ST_BlendMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fgeba = 0
	case "\u006f\u0076\u0065\u0072":
		*_fgeba = 1
	case "\u006d\u0075\u006c\u0074":
		*_fgeba = 2
	case "\u0073\u0063\u0072\u0065\u0065\u006e":
		*_fgeba = 3
	case "\u0064\u0061\u0072\u006b\u0065\u006e":
		*_fgeba = 4
	case "\u006ci\u0067\u0068\u0074\u0065\u006e":
		*_fgeba = 5
	}
	return nil
}

// Validate validates the CT_GvmlGraphicalObjectFrame and its children
func (_fdeda *CT_GvmlGraphicalObjectFrame) Validate() error {
	return _fdeda.ValidateWithPath("C\u0054\u005f\u0047\u0076\u006d\u006cG\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063t\u0046r\u0061\u006d\u0065")
}

// Validate validates the CT_TransformEffect and its children
func (_dfacg *CT_TransformEffect) Validate() error {
	return _dfacg.ValidateWithPath("\u0043T\u005fT\u0072\u0061\u006e\u0073\u0066o\u0072\u006dE\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_TextFont and its children
func (_aagbg *CT_TextFont) Validate() error {
	return _aagbg.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074")
}
func ParseUnionST_AnimationChartBuildType(s string) (ST_AnimationChartBuildType, error) {
	_gggcd := ST_AnimationChartBuildType{}
	switch s {
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		_gggcd.ST_AnimationBuildType = ST_AnimationBuildTypeAllAtOnce
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		_gggcd.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeSeries
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		_gggcd.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeCategory
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		_gggcd.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeSeriesEl
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		_gggcd.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeCategoryEl
	}
	return _gggcd, nil
}
func NewCT_LineStyleList() *CT_LineStyleList { _fadgc := &CT_LineStyleList{}; return _fadgc }

type CT_InnerShadowEffect struct {
	BlurRadAttr *int64
	DistAttr    *int64
	DirAttr     *int32
	ScrgbClr    *CT_ScRgbColor
	SrgbClr     *CT_SRgbColor
	HslClr      *CT_HslColor
	SysClr      *CT_SystemColor
	SchemeClr   *CT_SchemeColor
	PrstClr     *CT_PresetColor
}

func (_ecede *CT_GvmlShape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ecede.NvSpPr = NewCT_GvmlShapeNonVisual()
	_ecede.SpPr = NewCT_ShapeProperties()
_aceae:
	for {
		_ddce, _dccf := d.Token()
		if _dccf != nil {
			return _dccf
		}
		switch _gdcab := _ddce.(type) {
		case _d.StartElement:
			switch _gdcab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _cddg := d.DecodeElement(_ecede.NvSpPr, &_gdcab); _cddg != nil {
					return _cddg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _dbfec := d.DecodeElement(_ecede.SpPr, &_gdcab); _dbfec != nil {
					return _dbfec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_ecede.TxSp = NewCT_GvmlTextShape()
				if _cfab := d.DecodeElement(_ecede.TxSp, &_gdcab); _cfab != nil {
					return _cfab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_ecede.Style = NewCT_ShapeStyle()
				if _gcedf := d.DecodeElement(_ecede.Style, &_gdcab); _gcedf != nil {
					return _gcedf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecede.ExtLst = NewCT_OfficeArtExtensionList()
				if _ddebe := d.DecodeElement(_ecede.ExtLst, &_gdcab); _ddebe != nil {
					return _ddebe
				}
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_G\u0076\u006dl\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _gdcab.Name)
				if _gcfaa := d.Skip(); _gcfaa != nil {
					return _gcfaa
				}
			}
		case _d.EndElement:
			break _aceae
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextLineBreak and its children
func (_beggc *CT_TextLineBreak) Validate() error {
	return _beggc.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b")
}

// Validate validates the CT_GraphicalObject and its children
func (_ffde *CT_GraphicalObject) Validate() error {
	return _ffde.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069c\u0061\u006cO\u0062\u006a\u0065\u0063\u0074")
}
func (_dcfbd *CT_ScRgbColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072"}, Value: _dg.Sprintf("\u0025\u0076", _dcfbd.RAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067"}, Value: _dg.Sprintf("\u0025\u0076", _dcfbd.GAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062"}, Value: _dg.Sprintf("\u0025\u0076", _dcfbd.BAttr)})
	e.EncodeToken(start)
	if _dcfbd.EG_ColorTransform != nil {
		for _, _bggcc := range _dcfbd.EG_ColorTransform {
			_bggcc.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cbecbb *ST_ColorSchemeIndex) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ccfdg, _gegdef := d.Token()
	if _gegdef != nil {
		return _gegdef
	}
	if _bbfcf, _abbcbb := _ccfdg.(_d.EndElement); _abbcbb && _bbfcf.Name == start.Name {
		*_cbecbb = 1
		return nil
	}
	if _dbcee, _gbdbf := _ccfdg.(_d.CharData); !_gbdbf {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccfdg)
	} else {
		switch string(_dbcee) {
		case "":
			*_cbecbb = 0
		case "\u0064\u006b\u0031":
			*_cbecbb = 1
		case "\u006c\u0074\u0031":
			*_cbecbb = 2
		case "\u0064\u006b\u0032":
			*_cbecbb = 3
		case "\u006c\u0074\u0032":
			*_cbecbb = 4
		case "\u0061c\u0063\u0065\u006e\u0074\u0031":
			*_cbecbb = 5
		case "\u0061c\u0063\u0065\u006e\u0074\u0032":
			*_cbecbb = 6
		case "\u0061c\u0063\u0065\u006e\u0074\u0033":
			*_cbecbb = 7
		case "\u0061c\u0063\u0065\u006e\u0074\u0034":
			*_cbecbb = 8
		case "\u0061c\u0063\u0065\u006e\u0074\u0035":
			*_cbecbb = 9
		case "\u0061c\u0063\u0065\u006e\u0074\u0036":
			*_cbecbb = 10
		case "\u0068\u006c\u0069n\u006b":
			*_cbecbb = 11
		case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
			*_cbecbb = 12
		}
	}
	_ccfdg, _gegdef = d.Token()
	if _gegdef != nil {
		return _gegdef
	}
	if _gfbceb, _afaeb := _ccfdg.(_d.EndElement); _afaeb && _gfbceb.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccfdg)
}
func (_bcfef ST_PathFillMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_eggbd := _d.Attr{}
	_eggbd.Name = name
	switch _bcfef {
	case ST_PathFillModeUnset:
		_eggbd.Value = ""
	case ST_PathFillModeNone:
		_eggbd.Value = "\u006e\u006f\u006e\u0065"
	case ST_PathFillModeNorm:
		_eggbd.Value = "\u006e\u006f\u0072\u006d"
	case ST_PathFillModeLighten:
		_eggbd.Value = "\u006ci\u0067\u0068\u0074\u0065\u006e"
	case ST_PathFillModeLightenLess:
		_eggbd.Value = "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073"
	case ST_PathFillModeDarken:
		_eggbd.Value = "\u0064\u0061\u0072\u006b\u0065\u006e"
	case ST_PathFillModeDarkenLess:
		_eggbd.Value = "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073"
	}
	return _eggbd, nil
}
func (_ecfd *EG_ThemeableFillStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ebcff:
	for {
		_bcfgff, _fbdcg := d.Token()
		if _fbdcg != nil {
			return _fbdcg
		}
		switch _deecb := _bcfgff.(type) {
		case _d.StartElement:
			switch _deecb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_ecfd.Fill = NewCT_FillProperties()
				if _ebecg := d.DecodeElement(_ecfd.Fill, &_deecb); _ebecg != nil {
					return _ebecg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_ecfd.FillRef = NewCT_StyleMatrixReference()
				if _cdffc := d.DecodeElement(_ecfd.FillRef, &_deecb); _cdffc != nil {
					return _cdffc
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _deecb.Name)
				if _fcfea := d.Skip(); _fcfea != nil {
					return _fcfea
				}
			}
		case _d.EndElement:
			break _ebcff
		case _d.CharData:
		}
	}
	return nil
}
func (_fbfcf *ST_PositiveFixedPercentage) ValidateWithPath(path string) error {
	_bgcfdg := []string{}
	if _fbfcf.ST_PositiveFixedPercentageDecimal != nil {
		_bgcfdg = append(_bgcfdg, "\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063e\u006e\u0074\u0061\u0067\u0065\u0044\u0065c\u0069\u006d\u0061\u006c")
	}
	if _fbfcf.ST_PositiveFixedPercentage != nil {
		if _degdac := _fbfcf.ST_PositiveFixedPercentage.ValidateWithPath(path + "/\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063e\u006et\u0061\u0067\u0065"); _degdac != nil {
			return _degdac
		}
		_bgcfdg = append(_bgcfdg, "\u0053\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
	}
	if len(_bgcfdg) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _bgcfdg)
	}
	return nil
}
func (_gaag *CT_NonVisualGroupDrawingShapeProps) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gaag.GrpSpLocks != nil {
		_gdgfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067r\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_gaag.GrpSpLocks, _gdgfe)
	}
	if _gaag.ExtLst != nil {
		_bcdca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gaag.ExtLst, _bcdca)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bfadge ST_LineCap) ValidateWithPath(path string) error {
	switch _bfadge {
	case 0, 1, 2, 3:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfadge))
	}
	return nil
}
func (_dgbb *CT_NonVisualDrawingProps) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bdeec := range start.Attr {
		if _bdeec.Name.Local == "\u0069\u0064" {
			_gdfae, _bcdga := _c.ParseUint(_bdeec.Value, 10, 32)
			if _bcdga != nil {
				return _bcdga
			}
			_dgbb.IdAttr = uint32(_gdfae)
			continue
		}
		if _bdeec.Name.Local == "\u006e\u0061\u006d\u0065" {
			_geea, _gbffb := _bdeec.Value, error(nil)
			if _gbffb != nil {
				return _gbffb
			}
			_dgbb.NameAttr = _geea
			continue
		}
		if _bdeec.Name.Local == "\u0064\u0065\u0073c\u0072" {
			_egge, _dgfee := _bdeec.Value, error(nil)
			if _dgfee != nil {
				return _dgfee
			}
			_dgbb.DescrAttr = &_egge
			continue
		}
		if _bdeec.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_cgcda, _ecdfc := _c.ParseBool(_bdeec.Value)
			if _ecdfc != nil {
				return _ecdfc
			}
			_dgbb.HiddenAttr = &_cgcda
			continue
		}
		if _bdeec.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_decbd, _gbedc := _bdeec.Value, error(nil)
			if _gbedc != nil {
				return _gbedc
			}
			_dgbb.TitleAttr = &_decbd
			continue
		}
	}
_ecbab:
	for {
		_edbfa, _faab := d.Token()
		if _faab != nil {
			return _faab
		}
		switch _cfged := _edbfa.(type) {
		case _d.StartElement:
			switch _cfged.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}:
				_dgbb.HlinkClick = NewCT_Hyperlink()
				if _acbd := d.DecodeElement(_dgbb.HlinkClick, &_cfged); _acbd != nil {
					return _acbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}:
				_dgbb.HlinkHover = NewCT_Hyperlink()
				if _ggeff := d.DecodeElement(_dgbb.HlinkHover, &_cfged); _ggeff != nil {
					return _ggeff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgbb.ExtLst = NewCT_OfficeArtExtensionList()
				if _abddd := d.DecodeElement(_dgbb.ExtLst, &_cfged); _abddd != nil {
					return _abddd
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067P\u0072\u006f\u0070\u0073\u0020%\u0076", _cfged.Name)
				if _gacaf := d.Skip(); _gacaf != nil {
					return _gacaf
				}
			}
		case _d.EndElement:
			break _ecbab
		case _d.CharData:
		}
	}
	return nil
}

var ST_TextBulletSizePercentPatternRe = _db.MustCompile(ST_TextBulletSizePercentPattern)

// ValidateWithPath validates the CT_AlphaModulateEffect and its children, prefixing error messages with path
func (_afe *CT_AlphaModulateEffect) ValidateWithPath(path string) error {
	if _cbc := _afe.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _cbc != nil {
		return _cbc
	}
	return nil
}

type Any interface {
	MarshalXML(_eeacd *_d.Encoder, _ffbfd _d.StartElement) error
	UnmarshalXML(_eabdf *_d.Decoder, _caaef _d.StartElement) error
}

// Validate validates the CT_PositiveFixedAngle and its children
func (_cbbb *CT_PositiveFixedAngle) Validate() error {
	return _cbbb.ValidateWithPath("C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0046\u0069\u0078e\u0064\u0041\u006e\u0067\u006c\u0065")
}
func (_agcff *CT_TextBulletColorFollowText) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_eagde, _dgegg := d.Token()
		if _dgegg != nil {
			return _dg.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006ce\u0074\u0043\u006f\u006c\u006f\u0072\u0046\u006f\u006c\u006cow\u0054\u0065\u0078t\u003a \u0025\u0073", _dgegg)
		}
		if _dcadc, _ddeba := _eagde.(_d.EndElement); _ddeba && _dcadc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dedgag *CT_ReflectionEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dedgag.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_dedgag.BlurRadAttr)})
	}
	if _dedgag.StAAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0074\u0041"}, Value: _dg.Sprintf("\u0025\u0076", *_dedgag.StAAttr)})
	}
	if _dedgag.StPosAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0074\u0050o\u0073"}, Value: _dg.Sprintf("\u0025\u0076", *_dedgag.StPosAttr)})
	}
	if _dedgag.EndAAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u006e\u0064\u0041"}, Value: _dg.Sprintf("\u0025\u0076", *_dedgag.EndAAttr)})
	}
	if _dedgag.EndPosAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u006e\u0064\u0050\u006f\u0073"}, Value: _dg.Sprintf("\u0025\u0076", *_dedgag.EndPosAttr)})
	}
	if _dedgag.DistAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_dedgag.DistAttr)})
	}
	if _dedgag.DirAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0072"}, Value: _dg.Sprintf("\u0025\u0076", *_dedgag.DirAttr)})
	}
	if _dedgag.FadeDirAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066a\u0064\u0065\u0044\u0069\u0072"}, Value: _dg.Sprintf("\u0025\u0076", *_dedgag.FadeDirAttr)})
	}
	if _dedgag.SxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0078"}, Value: _dg.Sprintf("\u0025\u0076", *_dedgag.SxAttr)})
	}
	if _dedgag.SyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0079"}, Value: _dg.Sprintf("\u0025\u0076", *_dedgag.SyAttr)})
	}
	if _dedgag.KxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0078"}, Value: _dg.Sprintf("\u0025\u0076", *_dedgag.KxAttr)})
	}
	if _dedgag.KyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0079"}, Value: _dg.Sprintf("\u0025\u0076", *_dedgag.KyAttr)})
	}
	if _dedgag.AlgnAttr != ST_RectAlignmentUnset {
		_aeeea, _efffa := _dedgag.AlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _efffa != nil {
			return _efffa
		}
		start.Attr = append(start.Attr, _aeeea)
	}
	if _dedgag.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_dedgag.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DuotoneEffect and its children
func (_cffgd *CT_DuotoneEffect) Validate() error {
	return _cffgd.ValidateWithPath("\u0043\u0054_\u0044\u0075\u006ft\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074")
}

type CT_Path2DList struct{ Path []*CT_Path2D }
type CT_NonVisualPictureProperties struct {
	PreferRelativeResizeAttr *bool
	PicLocks                 *CT_PictureLocking
	ExtLst                   *CT_OfficeArtExtensionList
}

func (_febffb ST_OnOffStyleType) Validate() error { return _febffb.ValidateWithPath("") }

// Validate validates the CT_EffectList and its children
func (_ggbf *CT_EffectList) Validate() error {
	return _ggbf.ValidateWithPath("\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074")
}
func NewEG_ShadeProperties() *EG_ShadeProperties { _edffb := &EG_ShadeProperties{}; return _edffb }
func (_bgfb *CT_Vector3D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0078"}, Value: _dg.Sprintf("\u0025\u0076", _bgfb.DxAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0079"}, Value: _dg.Sprintf("\u0025\u0076", _bgfb.DyAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u007a"}, Value: _dg.Sprintf("\u0025\u0076", _bgfb.DzAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TintEffect and its children, prefixing error messages with path
func (_eafgfd *CT_TintEffect) ValidateWithPath(path string) error {
	if _eafgfd.HueAttr != nil {
		if *_eafgfd.HueAttr < 0 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_eafgfd.HueAttr)
		}
		if *_eafgfd.HueAttr >= 21600000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_eafgfd.HueAttr)
		}
	}
	if _eafgfd.AmtAttr != nil {
		if _caecb := _eafgfd.AmtAttr.ValidateWithPath(path + "\u002f\u0041\u006d\u0074\u0041\u0074\u0074\u0072"); _caecb != nil {
			return _caecb
		}
	}
	return nil
}

type CT_Point3D struct {
	XAttr ST_Coordinate
	YAttr ST_Coordinate
	ZAttr ST_Coordinate
}

// ValidateWithPath validates the CT_BiLevelEffect and its children, prefixing error messages with path
func (_fdce *CT_BiLevelEffect) ValidateWithPath(path string) error {
	if _fedb := _fdce.ThreshAttr.ValidateWithPath(path + "/\u0054\u0068\u0072\u0065\u0073\u0068\u0041\u0074\u0074\u0072"); _fedb != nil {
		return _fedb
	}
	return nil
}

// ValidateWithPath validates the CT_CustomColor and its children, prefixing error messages with path
func (_efdg *CT_CustomColor) ValidateWithPath(path string) error {
	if _efdg.ScrgbClr != nil {
		if _gbaec := _efdg.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _gbaec != nil {
			return _gbaec
		}
	}
	if _efdg.SrgbClr != nil {
		if _cdbb := _efdg.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _cdbb != nil {
			return _cdbb
		}
	}
	if _efdg.HslClr != nil {
		if _dgba := _efdg.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _dgba != nil {
			return _dgba
		}
	}
	if _efdg.SysClr != nil {
		if _eccf := _efdg.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _eccf != nil {
			return _eccf
		}
	}
	if _efdg.SchemeClr != nil {
		if _ceaad := _efdg.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ceaad != nil {
			return _ceaad
		}
	}
	if _efdg.PrstClr != nil {
		if _gcbc := _efdg.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gcbc != nil {
			return _gcbc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OuterShadowEffect and its children, prefixing error messages with path
func (_fgffd *CT_OuterShadowEffect) ValidateWithPath(path string) error {
	if _fgffd.BlurRadAttr != nil {
		if *_fgffd.BlurRadAttr < 0 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fgffd.BlurRadAttr)
		}
		if *_fgffd.BlurRadAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fgffd.BlurRadAttr)
		}
	}
	if _fgffd.DistAttr != nil {
		if *_fgffd.DistAttr < 0 {
			return _dg.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fgffd.DistAttr)
		}
		if *_fgffd.DistAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_fgffd.DistAttr)
		}
	}
	if _fgffd.DirAttr != nil {
		if *_fgffd.DirAttr < 0 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fgffd.DirAttr)
		}
		if *_fgffd.DirAttr >= 21600000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fgffd.DirAttr)
		}
	}
	if _fgffd.SxAttr != nil {
		if _bbbef := _fgffd.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _bbbef != nil {
			return _bbbef
		}
	}
	if _fgffd.SyAttr != nil {
		if _faae := _fgffd.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _faae != nil {
			return _faae
		}
	}
	if _fgffd.KxAttr != nil {
		if *_fgffd.KxAttr <= -5400000 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_fgffd.KxAttr)
		}
		if *_fgffd.KxAttr >= 5400000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fgffd.KxAttr)
		}
	}
	if _fgffd.KyAttr != nil {
		if *_fgffd.KyAttr <= -5400000 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_fgffd.KyAttr)
		}
		if *_fgffd.KyAttr >= 5400000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fgffd.KyAttr)
		}
	}
	if _dabf := _fgffd.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _dabf != nil {
		return _dabf
	}
	if _fgffd.ScrgbClr != nil {
		if _fefaa := _fgffd.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _fefaa != nil {
			return _fefaa
		}
	}
	if _fgffd.SrgbClr != nil {
		if _feeaa := _fgffd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _feeaa != nil {
			return _feeaa
		}
	}
	if _fgffd.HslClr != nil {
		if _fcfec := _fgffd.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _fcfec != nil {
			return _fcfec
		}
	}
	if _fgffd.SysClr != nil {
		if _fffd := _fgffd.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _fffd != nil {
			return _fffd
		}
	}
	if _fgffd.SchemeClr != nil {
		if _gdaac := _fgffd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _gdaac != nil {
			return _gdaac
		}
	}
	if _fgffd.PrstClr != nil {
		if _bbdc := _fgffd.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _bbdc != nil {
			return _bbdc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RelativeOffsetEffect and its children, prefixing error messages with path
func (_aacf *CT_RelativeOffsetEffect) ValidateWithPath(path string) error {
	if _aacf.TxAttr != nil {
		if _eafb := _aacf.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _eafb != nil {
			return _eafb
		}
	}
	if _aacf.TyAttr != nil {
		if _fbfee := _aacf.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _fbfee != nil {
			return _fbfee
		}
	}
	return nil
}
func NewEG_ThemeableFillStyle() *EG_ThemeableFillStyle {
	_ceaaac := &EG_ThemeableFillStyle{}
	return _ceaaac
}

type CT_GraphicalObject struct{ GraphicData *CT_GraphicalObjectData }

func (_afbbd ST_PresetLineDashVal) String() string {
	switch _afbbd {
	case 0:
		return ""
	case 1:
		return "\u0073\u006f\u006ci\u0064"
	case 2:
		return "\u0064\u006f\u0074"
	case 3:
		return "\u0064\u0061\u0073\u0068"
	case 4:
		return "\u006c\u0067\u0044\u0061\u0073\u0068"
	case 5:
		return "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case 6:
		return "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft"
	case 7:
		return "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 8:
		return "\u0073y\u0073\u0044\u0061\u0073\u0068"
	case 9:
		return "\u0073\u0079\u0073\u0044\u006f\u0074"
	case 10:
		return "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case 11:
		return "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	}
	return ""
}

// Validate validates the CT_ClipboardStyleSheet and its children
func (_gfgf *CT_ClipboardStyleSheet) Validate() error {
	return _gfgf.ValidateWithPath("\u0043\u0054\u005f\u0043li\u0070\u0062\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065e\u0074")
}
func (_bfcbg *CT_TextLineBreak) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eegba:
	for {
		_edbde, _gegffg := d.Token()
		if _gegffg != nil {
			return _gegffg
		}
		switch _gcbb := _edbde.(type) {
		case _d.StartElement:
			switch _gcbb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_bfcbg.RPr = NewCT_TextCharacterProperties()
				if _ddada := d.DecodeElement(_bfcbg.RPr, &_gcbb); _ddada != nil {
					return _ddada
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b\u0020\u0025v", _gcbb.Name)
				if _cgfac := d.Skip(); _cgfac != nil {
					return _cgfac
				}
			}
		case _d.EndElement:
			break _eegba
		case _d.CharData:
		}
	}
	return nil
}

type EG_OfficeArtExtensionList struct{ Ext []*CT_OfficeArtExtension }

func (_cgec *CT_GvmlUseShapeRectangle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_beeg, _eeed := d.Token()
		if _eeed != nil {
			return _dg.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0047vml\u0055se\u0053\u0068\u0061\u0070\u0065\u0052\u0065ct\u0061\u006e\u0067\u006c\u0065\u003a\u0020%\u0073", _eeed)
		}
		if _efbbg, _fafde := _beeg.(_d.EndElement); _fafde && _efbbg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_FillStyleList() *CT_FillStyleList { _bgbeg := &CT_FillStyleList{}; return _bgbeg }
func (_febdc *VideoFile) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "a\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"
	return _febdc.CT_VideoFile.MarshalXML(e, start)
}

// Validate validates the CT_HSLEffect and its children
func (_aadd *CT_HSLEffect) Validate() error {
	return _aadd.ValidateWithPath("\u0043\u0054\u005fH\u0053\u004c\u0045\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_LineJoinMiterProperties and its children, prefixing error messages with path
func (_gafgf *CT_LineJoinMiterProperties) ValidateWithPath(path string) error {
	if _gafgf.LimAttr != nil {
		if _gbaea := _gafgf.LimAttr.ValidateWithPath(path + "\u002f\u004c\u0069\u006d\u0041\u0074\u0074\u0072"); _gbaea != nil {
			return _gbaea
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NonVisualConnectorProperties and its children, prefixing error messages with path
func (_ddbe *CT_NonVisualConnectorProperties) ValidateWithPath(path string) error {
	if _ddbe.CxnSpLocks != nil {
		if _begece := _ddbe.CxnSpLocks.ValidateWithPath(path + "/\u0043\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _begece != nil {
			return _begece
		}
	}
	if _ddbe.StCxn != nil {
		if _fcfb := _ddbe.StCxn.ValidateWithPath(path + "\u002f\u0053\u0074\u0043\u0078\u006e"); _fcfb != nil {
			return _fcfb
		}
	}
	if _ddbe.EndCxn != nil {
		if _egegf := _ddbe.EndCxn.ValidateWithPath(path + "\u002fE\u006e\u0064\u0043\u0078\u006e"); _egegf != nil {
			return _egegf
		}
	}
	if _ddbe.ExtLst != nil {
		if _baafb := _ddbe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _baafb != nil {
			return _baafb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextCharBullet and its children, prefixing error messages with path
func (_babdb *CT_TextCharBullet) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_LinearShadeProperties and its children
func (_cfee *CT_LinearShadeProperties) Validate() error {
	return _cfee.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006e\u0065\u0061\u0072\u0053\u0068\u0061\u0064e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_fcef *CT_CustomColorList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gfge:
	for {
		_aadff, _bcff := d.Token()
		if _bcff != nil {
			return _bcff
		}
		switch _abg := _aadff.(type) {
		case _d.StartElement:
			switch _abg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073\u0074\u0043\u006c\u0072"}:
				_dceff := NewCT_CustomColor()
				if _bdaa := d.DecodeElement(_dceff, &_abg); _bdaa != nil {
					return _bdaa
				}
				_fcef.CustClr = append(_fcef.CustClr, _dceff)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _abg.Name)
				if _gdag := d.Skip(); _gdag != nil {
					return _gdag
				}
			}
		case _d.EndElement:
			break _gfge
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ObjectStyleDefaults and its children, prefixing error messages with path
func (_afbef *CT_ObjectStyleDefaults) ValidateWithPath(path string) error {
	if _afbef.SpDef != nil {
		if _gcbg := _afbef.SpDef.ValidateWithPath(path + "\u002f\u0053\u0070\u0044\u0065\u0066"); _gcbg != nil {
			return _gcbg
		}
	}
	if _afbef.LnDef != nil {
		if _gbfd := _afbef.LnDef.ValidateWithPath(path + "\u002f\u004c\u006e\u0044\u0065\u0066"); _gbfd != nil {
			return _gbfd
		}
	}
	if _afbef.TxDef != nil {
		if _egaegg := _afbef.TxDef.ValidateWithPath(path + "\u002f\u0054\u0078\u0044\u0065\u0066"); _egaegg != nil {
			return _egaegg
		}
	}
	if _afbef.ExtLst != nil {
		if _eaaea := _afbef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eaaea != nil {
			return _eaaea
		}
	}
	return nil
}

type CT_AudioFile struct {
	LinkAttr        string
	ContentTypeAttr *string
	ExtLst          *CT_OfficeArtExtensionList
}

// Validate validates the CT_AlphaFloorEffect and its children
func (_gbg *CT_AlphaFloorEffect) Validate() error {
	return _gbg.ValidateWithPath("\u0043\u0054\u005f\u0041lp\u0068\u0061\u0046\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_fecea *CT_ShapeLocking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fecea.NoTextEditAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0054\u0065\u0078\u0074\u0045\u0064\u0069\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fecea.NoTextEditAttr))})
	}
	if _fecea.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fecea.NoGrpAttr))})
	}
	if _fecea.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fecea.NoSelectAttr))})
	}
	if _fecea.NoRotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fecea.NoRotAttr))})
	}
	if _fecea.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fecea.NoChangeAspectAttr))})
	}
	if _fecea.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fecea.NoMoveAttr))})
	}
	if _fecea.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fecea.NoResizeAttr))})
	}
	if _fecea.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fecea.NoEditPointsAttr))})
	}
	if _fecea.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fecea.NoAdjustHandlesAttr))})
	}
	if _fecea.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fecea.NoChangeArrowheadsAttr))})
	}
	if _fecea.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fecea.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _fecea.ExtLst != nil {
		_gedcb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fecea.ExtLst, _gedcb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_RelativeOffsetEffect struct {
	TxAttr *ST_Percentage
	TyAttr *ST_Percentage
}

// Validate validates the CT_DefaultShapeDefinition and its children
func (_cdba *CT_DefaultShapeDefinition) Validate() error {
	return _cdba.ValidateWithPath("\u0043T\u005f\u0044\u0065\u0066a\u0075\u006c\u0074\u0053\u0068a\u0070e\u0044e\u0066\u0069\u006e\u0069\u0074\u0069\u006fn")
}

type ST_OnOffStyleType byte

// ValidateWithPath validates the EG_TextBulletTypeface and its children, prefixing error messages with path
func (_daeba *EG_TextBulletTypeface) ValidateWithPath(path string) error {
	if _daeba.BuFontTx != nil {
		if _agaeg := _daeba.BuFontTx.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074\u0054x"); _agaeg != nil {
			return _agaeg
		}
	}
	if _daeba.BuFont != nil {
		if _abacc := _daeba.BuFont.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074"); _abacc != nil {
			return _abacc
		}
	}
	return nil
}

type CT_GroupTransform2D struct {
	RotAttr   *int32
	FlipHAttr *bool
	FlipVAttr *bool
	Off       *CT_Point2D
	Ext       *CT_PositiveSize2D
	ChOff     *CT_Point2D
	ChExt     *CT_PositiveSize2D
}

func (_ddega *CT_TableGrid) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ddega.GridCol != nil {
		_edgaa := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0069\u0064\u0043\u006fl"}}
		for _, _fdafd := range _ddega.GridCol {
			e.EncodeElement(_fdafd, _edgaa)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gbff *CT_LineStyleList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_dfgaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e"}}
	for _, _fdada := range _gbff.Ln {
		e.EncodeElement(_fdada, _dfgaf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_RelativeOffsetEffect() *CT_RelativeOffsetEffect {
	_fgecg := &CT_RelativeOffsetEffect{}
	return _fgecg
}
func (_aaef *CT_ConnectionSite) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006e\u0067"}, Value: _dg.Sprintf("\u0025\u0076", _aaef.AngAttr)})
	e.EncodeToken(start)
	_bbaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_aaef.Pos, _bbaf)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bafeb ST_LightRigType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dcbaf := _d.Attr{}
	_dcbaf.Name = name
	switch _bafeb {
	case ST_LightRigTypeUnset:
		_dcbaf.Value = ""
	case ST_LightRigTypeLegacyFlat1:
		_dcbaf.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031"
	case ST_LightRigTypeLegacyFlat2:
		_dcbaf.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032"
	case ST_LightRigTypeLegacyFlat3:
		_dcbaf.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033"
	case ST_LightRigTypeLegacyFlat4:
		_dcbaf.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034"
	case ST_LightRigTypeLegacyNormal1:
		_dcbaf.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031"
	case ST_LightRigTypeLegacyNormal2:
		_dcbaf.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032"
	case ST_LightRigTypeLegacyNormal3:
		_dcbaf.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033"
	case ST_LightRigTypeLegacyNormal4:
		_dcbaf.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034"
	case ST_LightRigTypeLegacyHarsh1:
		_dcbaf.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031"
	case ST_LightRigTypeLegacyHarsh2:
		_dcbaf.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032"
	case ST_LightRigTypeLegacyHarsh3:
		_dcbaf.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033"
	case ST_LightRigTypeLegacyHarsh4:
		_dcbaf.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034"
	case ST_LightRigTypeThreePt:
		_dcbaf.Value = "\u0074h\u0072\u0065\u0065\u0050\u0074"
	case ST_LightRigTypeBalanced:
		_dcbaf.Value = "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"
	case ST_LightRigTypeSoft:
		_dcbaf.Value = "\u0073\u006f\u0066\u0074"
	case ST_LightRigTypeHarsh:
		_dcbaf.Value = "\u0068\u0061\u0072s\u0068"
	case ST_LightRigTypeFlood:
		_dcbaf.Value = "\u0066\u006c\u006fo\u0064"
	case ST_LightRigTypeContrasting:
		_dcbaf.Value = "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067"
	case ST_LightRigTypeMorning:
		_dcbaf.Value = "\u006do\u0072\u006e\u0069\u006e\u0067"
	case ST_LightRigTypeSunrise:
		_dcbaf.Value = "\u0073u\u006e\u0072\u0069\u0073\u0065"
	case ST_LightRigTypeSunset:
		_dcbaf.Value = "\u0073\u0075\u006e\u0073\u0065\u0074"
	case ST_LightRigTypeChilly:
		_dcbaf.Value = "\u0063\u0068\u0069\u006c\u006c\u0079"
	case ST_LightRigTypeFreezing:
		_dcbaf.Value = "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067"
	case ST_LightRigTypeFlat:
		_dcbaf.Value = "\u0066\u006c\u0061\u0074"
	case ST_LightRigTypeTwoPt:
		_dcbaf.Value = "\u0074\u0077\u006fP\u0074"
	case ST_LightRigTypeGlow:
		_dcbaf.Value = "\u0067\u006c\u006f\u0077"
	case ST_LightRigTypeBrightRoom:
		_dcbaf.Value = "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d"
	}
	return _dcbaf, nil
}
func (_ggeba *ST_TextFontScalePercentOrPercentString) ValidateWithPath(path string) error {
	_cdaga := []string{}
	if _ggeba.ST_TextFontScalePercent != nil {
		_cdaga = append(_cdaga, "\u0053\u0054\u005fTe\u0078\u0074\u0046\u006f\u006e\u0074\u0053\u0063\u0061\u006c\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _ggeba.ST_Percentage != nil {
		_cdaga = append(_cdaga, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_cdaga) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cdaga)
	}
	return nil
}
func NewCT_Bevel() *CT_Bevel { _accf := &CT_Bevel{}; return _accf }
func (_cefae *ST_RectAlignment) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_abgdb, _bdbcf := d.Token()
	if _bdbcf != nil {
		return _bdbcf
	}
	if _agfcge, _fgbdbc := _abgdb.(_d.EndElement); _fgbdbc && _agfcge.Name == start.Name {
		*_cefae = 1
		return nil
	}
	if _eddcf, _eebdb := _abgdb.(_d.CharData); !_eebdb {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abgdb)
	} else {
		switch string(_eddcf) {
		case "":
			*_cefae = 0
		case "\u0074\u006c":
			*_cefae = 1
		case "\u0074":
			*_cefae = 2
		case "\u0074\u0072":
			*_cefae = 3
		case "\u006c":
			*_cefae = 4
		case "\u0063\u0074\u0072":
			*_cefae = 5
		case "\u0072":
			*_cefae = 6
		case "\u0062\u006c":
			*_cefae = 7
		case "\u0062":
			*_cefae = 8
		case "\u0062\u0072":
			*_cefae = 9
		}
	}
	_abgdb, _bdbcf = d.Token()
	if _bdbcf != nil {
		return _bdbcf
	}
	if _afbfd, _fbede := _abgdb.(_d.EndElement); _fbede && _afbfd.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abgdb)
}

// Validate validates the CT_TextNormalAutofit and its children
func (_fdbca *CT_TextNormalAutofit) Validate() error {
	return _fdbca.ValidateWithPath("C\u0054_\u0054\u0065\u0078\u0074\u004e\u006f\u0072\u006da\u006c\u0041\u0075\u0074of\u0069\u0074")
}
func (_bcdag ST_SchemeColorVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bcdag.String(), start)
}
func (_eaed *CT_ConnectorLocking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eaed.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_eaed.NoGrpAttr))})
	}
	if _eaed.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_eaed.NoSelectAttr))})
	}
	if _eaed.NoRotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_eaed.NoRotAttr))})
	}
	if _eaed.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_eaed.NoChangeAspectAttr))})
	}
	if _eaed.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_eaed.NoMoveAttr))})
	}
	if _eaed.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_eaed.NoResizeAttr))})
	}
	if _eaed.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_eaed.NoEditPointsAttr))})
	}
	if _eaed.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_eaed.NoAdjustHandlesAttr))})
	}
	if _eaed.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_eaed.NoChangeArrowheadsAttr))})
	}
	if _eaed.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_eaed.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _eaed.ExtLst != nil {
		_dcedd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eaed.ExtLst, _dcedd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_BlackWhiteMode byte
type CT_NonVisualDrawingShapeProps struct {
	TxBoxAttr *bool
	SpLocks   *CT_ShapeLocking
	ExtLst    *CT_OfficeArtExtensionList
}

func (_ffadaa ST_BlackWhiteMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gfedb := _d.Attr{}
	_gfedb.Name = name
	switch _ffadaa {
	case ST_BlackWhiteModeUnset:
		_gfedb.Value = ""
	case ST_BlackWhiteModeClr:
		_gfedb.Value = "\u0063\u006c\u0072"
	case ST_BlackWhiteModeAuto:
		_gfedb.Value = "\u0061\u0075\u0074\u006f"
	case ST_BlackWhiteModeGray:
		_gfedb.Value = "\u0067\u0072\u0061\u0079"
	case ST_BlackWhiteModeLtGray:
		_gfedb.Value = "\u006c\u0074\u0047\u0072\u0061\u0079"
	case ST_BlackWhiteModeInvGray:
		_gfedb.Value = "\u0069n\u0076\u0047\u0072\u0061\u0079"
	case ST_BlackWhiteModeGrayWhite:
		_gfedb.Value = "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e"
	case ST_BlackWhiteModeBlackGray:
		_gfedb.Value = "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y"
	case ST_BlackWhiteModeBlackWhite:
		_gfedb.Value = "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065"
	case ST_BlackWhiteModeBlack:
		_gfedb.Value = "\u0062\u006c\u0061c\u006b"
	case ST_BlackWhiteModeWhite:
		_gfedb.Value = "\u0077\u0068\u0069t\u0065"
	case ST_BlackWhiteModeHidden:
		_gfedb.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	}
	return _gfedb, nil
}
func NewCT_Point3D() *CT_Point3D { _abbcg := &CT_Point3D{}; return _abbcg }
func (_geaed *CT_TextAutonumberBullet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_gggea, _ccfcc := _geaed.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _ccfcc != nil {
		return _ccfcc
	}
	start.Attr = append(start.Attr, _gggea)
	if _geaed.StartAtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073t\u0061\u0072\u0074\u0041\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_geaed.StartAtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bbdcc *EG_LineDashProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bbdcc.PrstDash != nil {
		_dcbff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_bbdcc.PrstDash, _dcbff)
	}
	if _bbdcc.CustDash != nil {
		_bfbde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_bbdcc.CustDash, _bfbde)
	}
	return nil
}

type CT_GroupLocking struct {
	NoGrpAttr          *bool
	NoUngrpAttr        *bool
	NoSelectAttr       *bool
	NoRotAttr          *bool
	NoChangeAspectAttr *bool
	NoMoveAttr         *bool
	NoResizeAttr       *bool
	ExtLst             *CT_OfficeArtExtensionList
}

func NewCT_GraphicalObjectFrameLocking() *CT_GraphicalObjectFrameLocking {
	_dgda := &CT_GraphicalObjectFrameLocking{}
	return _dgda
}
func (_gbfcb *CT_PositivePercentage) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _egbc := range start.Attr {
		if _egbc.Name.Local == "\u0076\u0061\u006c" {
			_ceaab, _fdfd := ParseUnionST_PositivePercentage(_egbc.Value)
			if _fdfd != nil {
				return _fdfd
			}
			_gbfcb.ValAttr = _ceaab
			continue
		}
	}
	for {
		_abffa, _gaefc := d.Token()
		if _gaefc != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0050e\u0072\u0063\u0065\u006e\u0074\u0061\u0067e\u003a\u0020\u0025\u0073", _gaefc)
		}
		if _bcagc, _fbgb := _abffa.(_d.EndElement); _fbgb && _bcagc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaOutsetEffect and its children, prefixing error messages with path
func (_ffc *CT_AlphaOutsetEffect) ValidateWithPath(path string) error {
	if _ffc.RadAttr != nil {
		if _ggd := _ffc.RadAttr.ValidateWithPath(path + "\u002f\u0052\u0061\u0064\u0041\u0074\u0074\u0072"); _ggd != nil {
			return _ggd
		}
	}
	return nil
}

type CT_Scene3D struct {
	Camera   *CT_Camera
	LightRig *CT_LightRig
	Backdrop *CT_Backdrop
	ExtLst   *CT_OfficeArtExtensionList
}

func (_bedcb *ST_AnimationDgmBuildType) ValidateWithPath(path string) error {
	_gfcea := []string{}
	if _bedcb.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		_gfcea = append(_gfcea, "S\u0054\u005f\u0041\u006eim\u0061t\u0069\u006f\u006e\u0042\u0075i\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if _bedcb.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		_gfcea = append(_gfcea, "\u0053\u0054\u005f\u0041n\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006dO\u006el\u0079\u0042\u0075\u0069\u006c\u0064\u0054y\u0070\u0065")
	}
	if len(_gfcea) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _gfcea)
	}
	return nil
}
func (_addea ST_BlendMode) String() string {
	switch _addea {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072"
	case 2:
		return "\u006d\u0075\u006c\u0074"
	case 3:
		return "\u0073\u0063\u0072\u0065\u0065\u006e"
	case 4:
		return "\u0064\u0061\u0072\u006b\u0065\u006e"
	case 5:
		return "\u006ci\u0067\u0068\u0074\u0065\u006e"
	}
	return ""
}
func NewCT_TextBulletSizePoint() *CT_TextBulletSizePoint {
	_bafee := &CT_TextBulletSizePoint{}
	_bafee.ValAttr = 100
	return _bafee
}

// ST_AnimationDgmBuildType is a union type
type ST_AnimationDgmBuildType struct {
	ST_AnimationBuildType        ST_AnimationBuildType
	ST_AnimationDgmOnlyBuildType ST_AnimationDgmOnlyBuildType
}

func (_fggeg *CT_TintEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cacf := range start.Attr {
		if _cacf.Name.Local == "\u0068\u0075\u0065" {
			_afcde, _cgeff := _c.ParseInt(_cacf.Value, 10, 32)
			if _cgeff != nil {
				return _cgeff
			}
			_facad := int32(_afcde)
			_fggeg.HueAttr = &_facad
			continue
		}
		if _cacf.Name.Local == "\u0061\u006d\u0074" {
			_cebbg, _dgeac := ParseUnionST_FixedPercentage(_cacf.Value)
			if _dgeac != nil {
				return _dgeac
			}
			_fggeg.AmtAttr = &_cebbg
			continue
		}
	}
	for {
		_cecae, _cgddcb := d.Token()
		if _cgddcb != nil {
			return _dg.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054i\u006et\u0045f\u0066\u0065\u0063\u0074\u003a\u0020\u0025s", _cgddcb)
		}
		if _begfa, _bacgb := _cecae.(_d.EndElement); _bacgb && _begfa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dbacdg ST_TextVerticalType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_beedae := _d.Attr{}
	_beedae.Name = name
	switch _dbacdg {
	case ST_TextVerticalTypeUnset:
		_beedae.Value = ""
	case ST_TextVerticalTypeHorz:
		_beedae.Value = "\u0068\u006f\u0072\u007a"
	case ST_TextVerticalTypeVert:
		_beedae.Value = "\u0076\u0065\u0072\u0074"
	case ST_TextVerticalTypeVert270:
		_beedae.Value = "\u0076e\u0072\u0074\u0032\u0037\u0030"
	case ST_TextVerticalTypeWordArtVert:
		_beedae.Value = "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeEaVert:
		_beedae.Value = "\u0065\u0061\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeMongolianVert:
		_beedae.Value = "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeWordArtVertRtl:
		_beedae.Value = "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c"
	}
	return _beedae, nil
}
func (_dcbfdf ST_ColorSchemeIndex) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ecade := _d.Attr{}
	_ecade.Name = name
	switch _dcbfdf {
	case ST_ColorSchemeIndexUnset:
		_ecade.Value = ""
	case ST_ColorSchemeIndexDk1:
		_ecade.Value = "\u0064\u006b\u0031"
	case ST_ColorSchemeIndexLt1:
		_ecade.Value = "\u006c\u0074\u0031"
	case ST_ColorSchemeIndexDk2:
		_ecade.Value = "\u0064\u006b\u0032"
	case ST_ColorSchemeIndexLt2:
		_ecade.Value = "\u006c\u0074\u0032"
	case ST_ColorSchemeIndexAccent1:
		_ecade.Value = "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case ST_ColorSchemeIndexAccent2:
		_ecade.Value = "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case ST_ColorSchemeIndexAccent3:
		_ecade.Value = "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case ST_ColorSchemeIndexAccent4:
		_ecade.Value = "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case ST_ColorSchemeIndexAccent5:
		_ecade.Value = "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case ST_ColorSchemeIndexAccent6:
		_ecade.Value = "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case ST_ColorSchemeIndexHlink:
		_ecade.Value = "\u0068\u006c\u0069n\u006b"
	case ST_ColorSchemeIndexFolHlink:
		_ecade.Value = "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	}
	return _ecade, nil
}

type CT_LineJoinMiterProperties struct{ LimAttr *ST_PositivePercentage }

func (_ddbdc *EG_TextAutofit) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ddbdc.NoAutofit != nil {
		_ddca := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_ddbdc.NoAutofit, _ddca)
	}
	if _ddbdc.NormAutofit != nil {
		_dcccc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_ddbdc.NormAutofit, _dcccc)
	}
	if _ddbdc.SpAutoFit != nil {
		_fcddb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"}}
		e.EncodeElement(_ddbdc.SpAutoFit, _fcddb)
	}
	return nil
}
func (_gefda *ST_PenAlignment) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gefda = 0
	case "\u0063\u0074\u0072":
		*_gefda = 1
	case "\u0069\u006e":
		*_gefda = 2
	}
	return nil
}

type CT_TableCellProperties struct {
	MarLAttr         *ST_Coordinate32
	MarRAttr         *ST_Coordinate32
	MarTAttr         *ST_Coordinate32
	MarBAttr         *ST_Coordinate32
	VertAttr         ST_TextVerticalType
	AnchorAttr       ST_TextAnchoringType
	AnchorCtrAttr    *bool
	HorzOverflowAttr ST_TextHorzOverflowType
	LnL              *CT_LineProperties
	LnR              *CT_LineProperties
	LnT              *CT_LineProperties
	LnB              *CT_LineProperties
	LnTlToBr         *CT_LineProperties
	LnBlToTr         *CT_LineProperties
	Cell3D           *CT_Cell3D
	NoFill           *CT_NoFillProperties
	SolidFill        *CT_SolidColorFillProperties
	GradFill         *CT_GradientFillProperties
	BlipFill         *CT_BlipFillProperties
	PattFill         *CT_PatternFillProperties
	GrpFill          *CT_GroupFillProperties
	Headers          *CT_Headers
	ExtLst           *CT_OfficeArtExtensionList
}

func NewCT_AnimationElementChoice() *CT_AnimationElementChoice {
	_bba := &CT_AnimationElementChoice{}
	return _bba
}

// Validate validates the CT_GvmlPictureNonVisual and its children
func (_cgca *CT_GvmlPictureNonVisual) Validate() error {
	return _cgca.ValidateWithPath("\u0043\u0054\u005fGv\u006d\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

// Validate validates the CT_LineJoinBevel and its children
func (_fggdf *CT_LineJoinBevel) Validate() error {
	return _fggdf.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0042\u0065\u0076\u0065\u006c")
}
func (_dfega ST_PitchFamily) ValidateWithPath(path string) error {
	switch _dfega {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfega))
	}
	return nil
}
func (_gbfcg *CT_StretchInfoProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gbfcg.FillRect != nil {
		_aeafb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_gbfcg.FillRect, _aeafb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gcaea ST_Coordinate) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gcaea.ST_CoordinateUnqualified != nil {
		e.EncodeToken(_d.CharData(_dg.Sprintf("\u0025\u0064", *_gcaea.ST_CoordinateUnqualified)))
	}
	if _gcaea.ST_UniversalMeasure != nil {
		e.EncodeToken(_d.CharData(*_gcaea.ST_UniversalMeasure))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func NewCT_Camera() *CT_Camera {
	_fcdfb := &CT_Camera{}
	_fcdfb.PrstAttr = ST_PresetCameraType(1)
	return _fcdfb
}
func (_bfcg *CT_SphereCoords) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0061\u0074"}, Value: _dg.Sprintf("\u0025\u0076", _bfcg.LatAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u006f\u006e"}, Value: _dg.Sprintf("\u0025\u0076", _bfcg.LonAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0065\u0076"}, Value: _dg.Sprintf("\u0025\u0076", _bfcg.RevAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ST_TextFontScalePercentOrPercentString is a union type
type ST_TextFontScalePercentOrPercentString struct {
	ST_TextFontScalePercent *int32
	ST_Percentage           *string
}

// Validate validates the CT_GraphicalObjectData and its children
func (_ffece *CT_GraphicalObjectData) Validate() error {
	return _ffece.ValidateWithPath("\u0043\u0054\u005f\u0047ra\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0061t\u0061")
}
func (_bgcec *CT_Percentage) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gegdg := range start.Attr {
		if _gegdg.Name.Local == "\u0076\u0061\u006c" {
			_cfggd, _bccg := ParseUnionST_Percentage(_gegdg.Value)
			if _bccg != nil {
				return _bccg
			}
			_bgcec.ValAttr = _cfggd
			continue
		}
	}
	for {
		_acdab, _ccbd := d.Token()
		if _ccbd != nil {
			return _dg.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050e\u0072c\u0065n\u0074\u0061\u0067\u0065\u003a\u0020\u0025s", _ccbd)
		}
		if _aebgg, _fdedg := _acdab.(_d.EndElement); _fdedg && _aebgg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ggdgef ST_BevelPresetType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ggdgef.String(), start)
}

const (
	ST_BevelPresetTypeUnset        ST_BevelPresetType = 0
	ST_BevelPresetTypeRelaxedInset ST_BevelPresetType = 1
	ST_BevelPresetTypeCircle       ST_BevelPresetType = 2
	ST_BevelPresetTypeSlope        ST_BevelPresetType = 3
	ST_BevelPresetTypeCross        ST_BevelPresetType = 4
	ST_BevelPresetTypeAngle        ST_BevelPresetType = 5
	ST_BevelPresetTypeSoftRound    ST_BevelPresetType = 6
	ST_BevelPresetTypeConvex       ST_BevelPresetType = 7
	ST_BevelPresetTypeCoolSlant    ST_BevelPresetType = 8
	ST_BevelPresetTypeDivot        ST_BevelPresetType = 9
	ST_BevelPresetTypeRiblet       ST_BevelPresetType = 10
	ST_BevelPresetTypeHardEdge     ST_BevelPresetType = 11
	ST_BevelPresetTypeArtDeco      ST_BevelPresetType = 12
)

// Validate validates the EG_TextAutofit and its children
func (_bfdgg *EG_TextAutofit) Validate() error {
	return _bfdgg.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075t\u006f\u0066\u0069\u0074")
}

type CT_AnimationElementChoice struct {
	Dgm   *CT_AnimationDgmElement
	Chart *CT_AnimationChartElement
}

// Validate validates the CT_StyleMatrixReference and its children
func (_cgcce *CT_StyleMatrixReference) Validate() error {
	return _cgcce.ValidateWithPath("\u0043\u0054\u005fSt\u0079\u006c\u0065\u004d\u0061\u0074\u0072\u0069\u0078\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065")
}
func (_ecafb *ST_CompoundLine) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gbfab, _bdgffd := d.Token()
	if _bdgffd != nil {
		return _bdgffd
	}
	if _dbbbg, _eeabe := _gbfab.(_d.EndElement); _eeabe && _dbbbg.Name == start.Name {
		*_ecafb = 1
		return nil
	}
	if _bgbcd, _cccfcd := _gbfab.(_d.CharData); !_cccfcd {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbfab)
	} else {
		switch string(_bgbcd) {
		case "":
			*_ecafb = 0
		case "\u0073\u006e\u0067":
			*_ecafb = 1
		case "\u0064\u0062\u006c":
			*_ecafb = 2
		case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":
			*_ecafb = 3
		case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":
			*_ecafb = 4
		case "\u0074\u0072\u0069":
			*_ecafb = 5
		}
	}
	_gbfab, _bdgffd = d.Token()
	if _bdgffd != nil {
		return _bdgffd
	}
	if _aeegf, _gagbeg := _gbfab.(_d.EndElement); _gagbeg && _aeegf.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbfab)
}

type CT_TableProperties struct {
	RtlAttr      *bool
	FirstRowAttr *bool
	FirstColAttr *bool
	LastRowAttr  *bool
	LastColAttr  *bool
	BandRowAttr  *bool
	BandColAttr  *bool
	NoFill       *CT_NoFillProperties
	SolidFill    *CT_SolidColorFillProperties
	GradFill     *CT_GradientFillProperties
	BlipFill     *CT_BlipFillProperties
	PattFill     *CT_PatternFillProperties
	GrpFill      *CT_GroupFillProperties
	EffectLst    *CT_EffectList
	EffectDag    *CT_EffectContainer
	Choice       *CT_TablePropertiesChoice
	ExtLst       *CT_OfficeArtExtensionList
}

func (_acebff ST_TextTabAlignType) ValidateWithPath(path string) error {
	switch _acebff {
	case 0, 1, 2, 3, 4:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acebff))
	}
	return nil
}

type CT_GraphicalObjectData struct {
	UriAttr string
	Any     []_cb.Any
}
type CT_ShapeLocking struct {
	NoTextEditAttr         *bool
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

func NewCT_OfficeArtExtensionList() *CT_OfficeArtExtensionList {
	_bgfab := &CT_OfficeArtExtensionList{}
	return _bgfab
}

type CT_EffectStyleItem struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
	Scene3d   *CT_Scene3D
	Sp3d      *CT_Shape3D
}

func (_abagc *ST_FontCollectionIndex) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_abagc = 0
	case "\u006d\u0061\u006ao\u0072":
		*_abagc = 1
	case "\u006d\u0069\u006eo\u0072":
		*_abagc = 2
	case "\u006e\u006f\u006e\u0065":
		*_abagc = 3
	}
	return nil
}
func (_fdcf *CT_FlatText) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _facdb := range start.Attr {
		if _facdb.Name.Local == "\u007a" {
			_ebda, _bbcbc := ParseUnionST_Coordinate(_facdb.Value)
			if _bbcbc != nil {
				return _bbcbc
			}
			_fdcf.ZAttr = &_ebda
			continue
		}
	}
	for {
		_gdaf, _fedg := d.Token()
		if _fedg != nil {
			return _dg.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _fedg)
		}
		if _bbfgb, _afagd := _gdaf.(_d.EndElement); _afagd && _bbfgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdbeg ST_AnimationChartOnlyBuildType) Validate() error { return _bdbeg.ValidateWithPath("") }

// Validate validates the CT_GroupShapeProperties and its children
func (_agae *CT_GroupShapeProperties) Validate() error {
	return _agae.ValidateWithPath("\u0043\u0054\u005fGr\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_FillOverlayEffect struct {
	BlendAttr ST_BlendMode
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

// Validate validates the CT_AudioCD and its children
func (_dgc *CT_AudioCD) Validate() error {
	return _dgc.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043\u0044")
}

// ValidateWithPath validates the CT_GvmlPicture and its children, prefixing error messages with path
func (_daeb *CT_GvmlPicture) ValidateWithPath(path string) error {
	if _abdgba := _daeb.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _abdgba != nil {
		return _abdgba
	}
	if _cebaa := _daeb.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _cebaa != nil {
		return _cebaa
	}
	if _bgfc := _daeb.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _bgfc != nil {
		return _bgfc
	}
	if _daeb.Style != nil {
		if _ecdd := _daeb.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ecdd != nil {
			return _ecdd
		}
	}
	if _daeb.ExtLst != nil {
		if _dbff := _daeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbff != nil {
			return _dbff
		}
	}
	return nil
}
func (_gebca ST_PresetColorVal) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_egdeg := _d.Attr{}
	_egdeg.Name = name
	switch _gebca {
	case ST_PresetColorValUnset:
		_egdeg.Value = ""
	case ST_PresetColorValAliceBlue:
		_egdeg.Value = "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e"
	case ST_PresetColorValAntiqueWhite:
		_egdeg.Value = "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValAqua:
		_egdeg.Value = "\u0061\u0071\u0075\u0061"
	case ST_PresetColorValAquamarine:
		_egdeg.Value = "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValAzure:
		_egdeg.Value = "\u0061\u007a\u0075r\u0065"
	case ST_PresetColorValBeige:
		_egdeg.Value = "\u0062\u0065\u0069g\u0065"
	case ST_PresetColorValBisque:
		_egdeg.Value = "\u0062\u0069\u0073\u0071\u0075\u0065"
	case ST_PresetColorValBlack:
		_egdeg.Value = "\u0062\u006c\u0061c\u006b"
	case ST_PresetColorValBlanchedAlmond:
		_egdeg.Value = "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064"
	case ST_PresetColorValBlue:
		_egdeg.Value = "\u0062\u006c\u0075\u0065"
	case ST_PresetColorValBlueViolet:
		_egdeg.Value = "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValBrown:
		_egdeg.Value = "\u0062\u0072\u006fw\u006e"
	case ST_PresetColorValBurlyWood:
		_egdeg.Value = "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd"
	case ST_PresetColorValCadetBlue:
		_egdeg.Value = "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e"
	case ST_PresetColorValChartreuse:
		_egdeg.Value = "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065"
	case ST_PresetColorValChocolate:
		_egdeg.Value = "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e"
	case ST_PresetColorValCoral:
		_egdeg.Value = "\u0063\u006f\u0072a\u006c"
	case ST_PresetColorValCornflowerBlue:
		_egdeg.Value = "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065"
	case ST_PresetColorValCornsilk:
		_egdeg.Value = "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b"
	case ST_PresetColorValCrimson:
		_egdeg.Value = "\u0063r\u0069\u006d\u0073\u006f\u006e"
	case ST_PresetColorValCyan:
		_egdeg.Value = "\u0063\u0079\u0061\u006e"
	case ST_PresetColorValDarkBlue:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDarkCyan:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e"
	case ST_PresetColorValDarkGoldenrod:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValDarkGray:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDarkGrey:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDarkGreen:
		_egdeg.Value = "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValDarkKhaki:
		_egdeg.Value = "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi"
	case ST_PresetColorValDarkMagenta:
		_egdeg.Value = "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061"
	case ST_PresetColorValDarkOliveGreen:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDarkOrange:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValDarkOrchid:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValDarkRed:
		_egdeg.Value = "\u0064a\u0072\u006b\u0052\u0065\u0064"
	case ST_PresetColorValDarkSalmon:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValDarkSeaGreen:
		_egdeg.Value = "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDarkSlateBlue:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDarkSlateGray:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDarkSlateGrey:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDarkTurquoise:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValDarkViolet:
		_egdeg.Value = "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValDkBlue:
		_egdeg.Value = "\u0064\u006b\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDkCyan:
		_egdeg.Value = "\u0064\u006b\u0043\u0079\u0061\u006e"
	case ST_PresetColorValDkGoldenrod:
		_egdeg.Value = "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValDkGray:
		_egdeg.Value = "\u0064\u006b\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDkGrey:
		_egdeg.Value = "\u0064\u006b\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDkGreen:
		_egdeg.Value = "\u0064k\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkKhaki:
		_egdeg.Value = "\u0064k\u004b\u0068\u0061\u006b\u0069"
	case ST_PresetColorValDkMagenta:
		_egdeg.Value = "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a"
	case ST_PresetColorValDkOliveGreen:
		_egdeg.Value = "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkOrange:
		_egdeg.Value = "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValDkOrchid:
		_egdeg.Value = "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValDkRed:
		_egdeg.Value = "\u0064\u006b\u0052e\u0064"
	case ST_PresetColorValDkSalmon:
		_egdeg.Value = "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValDkSeaGreen:
		_egdeg.Value = "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkSlateBlue:
		_egdeg.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDkSlateGray:
		_egdeg.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDkSlateGrey:
		_egdeg.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDkTurquoise:
		_egdeg.Value = "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValDkViolet:
		_egdeg.Value = "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValDeepPink:
		_egdeg.Value = "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b"
	case ST_PresetColorValDeepSkyBlue:
		_egdeg.Value = "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDimGray:
		_egdeg.Value = "\u0064i\u006d\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDimGrey:
		_egdeg.Value = "\u0064i\u006d\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDodgerBlue:
		_egdeg.Value = "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065"
	case ST_PresetColorValFirebrick:
		_egdeg.Value = "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k"
	case ST_PresetColorValFloralWhite:
		_egdeg.Value = "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValForestGreen:
		_egdeg.Value = "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValFuchsia:
		_egdeg.Value = "\u0066u\u0063\u0068\u0073\u0069\u0061"
	case ST_PresetColorValGainsboro:
		_egdeg.Value = "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o"
	case ST_PresetColorValGhostWhite:
		_egdeg.Value = "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValGold:
		_egdeg.Value = "\u0067\u006f\u006c\u0064"
	case ST_PresetColorValGoldenrod:
		_egdeg.Value = "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd"
	case ST_PresetColorValGray:
		_egdeg.Value = "\u0067\u0072\u0061\u0079"
	case ST_PresetColorValGrey:
		_egdeg.Value = "\u0067\u0072\u0065\u0079"
	case ST_PresetColorValGreen:
		_egdeg.Value = "\u0067\u0072\u0065e\u006e"
	case ST_PresetColorValGreenYellow:
		_egdeg.Value = "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValHoneydew:
		_egdeg.Value = "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077"
	case ST_PresetColorValHotPink:
		_egdeg.Value = "\u0068o\u0074\u0050\u0069\u006e\u006b"
	case ST_PresetColorValIndianRed:
		_egdeg.Value = "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d"
	case ST_PresetColorValIndigo:
		_egdeg.Value = "\u0069\u006e\u0064\u0069\u0067\u006f"
	case ST_PresetColorValIvory:
		_egdeg.Value = "\u0069\u0076\u006fr\u0079"
	case ST_PresetColorValKhaki:
		_egdeg.Value = "\u006b\u0068\u0061k\u0069"
	case ST_PresetColorValLavender:
		_egdeg.Value = "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072"
	case ST_PresetColorValLavenderBlush:
		_egdeg.Value = "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068"
	case ST_PresetColorValLawnGreen:
		_egdeg.Value = "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValLemonChiffon:
		_egdeg.Value = "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e"
	case ST_PresetColorValLightBlue:
		_egdeg.Value = "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e"
	case ST_PresetColorValLightCoral:
		_egdeg.Value = "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c"
	case ST_PresetColorValLightCyan:
		_egdeg.Value = "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n"
	case ST_PresetColorValLightGoldenrodYellow:
		_egdeg.Value = "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077"
	case ST_PresetColorValLightGray:
		_egdeg.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case ST_PresetColorValLightGrey:
		_egdeg.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y"
	case ST_PresetColorValLightGreen:
		_egdeg.Value = "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLightPink:
		_egdeg.Value = "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek"
	case ST_PresetColorValLightSalmon:
		_egdeg.Value = "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValLightSeaGreen:
		_egdeg.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLightSkyBlue:
		_egdeg.Value = "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLightSlateGray:
		_egdeg.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLightSlateGrey:
		_egdeg.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLightSteelBlue:
		_egdeg.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLightYellow:
		_egdeg.Value = "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLtBlue:
		_egdeg.Value = "\u006c\u0074\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLtCoral:
		_egdeg.Value = "\u006ct\u0043\u006f\u0072\u0061\u006c"
	case ST_PresetColorValLtCyan:
		_egdeg.Value = "\u006c\u0074\u0043\u0079\u0061\u006e"
	case ST_PresetColorValLtGoldenrodYellow:
		_egdeg.Value = "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLtGray:
		_egdeg.Value = "\u006c\u0074\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLtGrey:
		_egdeg.Value = "\u006c\u0074\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLtGreen:
		_egdeg.Value = "\u006ct\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLtPink:
		_egdeg.Value = "\u006c\u0074\u0050\u0069\u006e\u006b"
	case ST_PresetColorValLtSalmon:
		_egdeg.Value = "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValLtSeaGreen:
		_egdeg.Value = "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLtSkyBlue:
		_egdeg.Value = "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e"
	case ST_PresetColorValLtSlateGray:
		_egdeg.Value = "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLtSlateGrey:
		_egdeg.Value = "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLtSteelBlue:
		_egdeg.Value = "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLtYellow:
		_egdeg.Value = "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLime:
		_egdeg.Value = "\u006c\u0069\u006d\u0065"
	case ST_PresetColorValLimeGreen:
		_egdeg.Value = "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValLinen:
		_egdeg.Value = "\u006c\u0069\u006ee\u006e"
	case ST_PresetColorValMagenta:
		_egdeg.Value = "\u006da\u0067\u0065\u006e\u0074\u0061"
	case ST_PresetColorValMaroon:
		_egdeg.Value = "\u006d\u0061\u0072\u006f\u006f\u006e"
	case ST_PresetColorValMedAquamarine:
		_egdeg.Value = "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValMedBlue:
		_egdeg.Value = "\u006de\u0064\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMedOrchid:
		_egdeg.Value = "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d"
	case ST_PresetColorValMedPurple:
		_egdeg.Value = "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce"
	case ST_PresetColorValMedSeaGreen:
		_egdeg.Value = "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMedSlateBlue:
		_egdeg.Value = "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMedSpringGreen:
		_egdeg.Value = "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMedTurquoise:
		_egdeg.Value = "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValMedVioletRed:
		_egdeg.Value = "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValMediumAquamarine:
		_egdeg.Value = "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValMediumBlue:
		_egdeg.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMediumOrchid:
		_egdeg.Value = "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValMediumPurple:
		_egdeg.Value = "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065"
	case ST_PresetColorValMediumSeaGreen:
		_egdeg.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMediumSlateBlue:
		_egdeg.Value = "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMediumSpringGreen:
		_egdeg.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMediumTurquoise:
		_egdeg.Value = "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValMediumVioletRed:
		_egdeg.Value = "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValMidnightBlue:
		_egdeg.Value = "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMintCream:
		_egdeg.Value = "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m"
	case ST_PresetColorValMistyRose:
		_egdeg.Value = "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e"
	case ST_PresetColorValMoccasin:
		_egdeg.Value = "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e"
	case ST_PresetColorValNavajoWhite:
		_egdeg.Value = "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValNavy:
		_egdeg.Value = "\u006e\u0061\u0076\u0079"
	case ST_PresetColorValOldLace:
		_egdeg.Value = "\u006fl\u0064\u004c\u0061\u0063\u0065"
	case ST_PresetColorValOlive:
		_egdeg.Value = "\u006f\u006c\u0069v\u0065"
	case ST_PresetColorValOliveDrab:
		_egdeg.Value = "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b"
	case ST_PresetColorValOrange:
		_egdeg.Value = "\u006f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValOrangeRed:
		_egdeg.Value = "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d"
	case ST_PresetColorValOrchid:
		_egdeg.Value = "\u006f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValPaleGoldenrod:
		_egdeg.Value = "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValPaleGreen:
		_egdeg.Value = "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValPaleTurquoise:
		_egdeg.Value = "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValPaleVioletRed:
		_egdeg.Value = "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValPapayaWhip:
		_egdeg.Value = "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070"
	case ST_PresetColorValPeachPuff:
		_egdeg.Value = "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f"
	case ST_PresetColorValPeru:
		_egdeg.Value = "\u0070\u0065\u0072\u0075"
	case ST_PresetColorValPink:
		_egdeg.Value = "\u0070\u0069\u006e\u006b"
	case ST_PresetColorValPlum:
		_egdeg.Value = "\u0070\u006c\u0075\u006d"
	case ST_PresetColorValPowderBlue:
		_egdeg.Value = "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065"
	case ST_PresetColorValPurple:
		_egdeg.Value = "\u0070\u0075\u0072\u0070\u006c\u0065"
	case ST_PresetColorValRed:
		_egdeg.Value = "\u0072\u0065\u0064"
	case ST_PresetColorValRosyBrown:
		_egdeg.Value = "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n"
	case ST_PresetColorValRoyalBlue:
		_egdeg.Value = "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e"
	case ST_PresetColorValSaddleBrown:
		_egdeg.Value = "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e"
	case ST_PresetColorValSalmon:
		_egdeg.Value = "\u0073\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValSandyBrown:
		_egdeg.Value = "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e"
	case ST_PresetColorValSeaGreen:
		_egdeg.Value = "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValSeaShell:
		_egdeg.Value = "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c"
	case ST_PresetColorValSienna:
		_egdeg.Value = "\u0073\u0069\u0065\u006e\u006e\u0061"
	case ST_PresetColorValSilver:
		_egdeg.Value = "\u0073\u0069\u006c\u0076\u0065\u0072"
	case ST_PresetColorValSkyBlue:
		_egdeg.Value = "\u0073k\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValSlateBlue:
		_egdeg.Value = "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e"
	case ST_PresetColorValSlateGray:
		_egdeg.Value = "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y"
	case ST_PresetColorValSlateGrey:
		_egdeg.Value = "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y"
	case ST_PresetColorValSnow:
		_egdeg.Value = "\u0073\u006e\u006f\u0077"
	case ST_PresetColorValSpringGreen:
		_egdeg.Value = "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValSteelBlue:
		_egdeg.Value = "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e"
	case ST_PresetColorValTan:
		_egdeg.Value = "\u0074\u0061\u006e"
	case ST_PresetColorValTeal:
		_egdeg.Value = "\u0074\u0065\u0061\u006c"
	case ST_PresetColorValThistle:
		_egdeg.Value = "\u0074h\u0069\u0073\u0074\u006c\u0065"
	case ST_PresetColorValTomato:
		_egdeg.Value = "\u0074\u006f\u006d\u0061\u0074\u006f"
	case ST_PresetColorValTurquoise:
		_egdeg.Value = "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e"
	case ST_PresetColorValViolet:
		_egdeg.Value = "\u0076\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValWheat:
		_egdeg.Value = "\u0077\u0068\u0065a\u0074"
	case ST_PresetColorValWhite:
		_egdeg.Value = "\u0077\u0068\u0069t\u0065"
	case ST_PresetColorValWhiteSmoke:
		_egdeg.Value = "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065"
	case ST_PresetColorValYellow:
		_egdeg.Value = "\u0079\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValYellowGreen:
		_egdeg.Value = "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e"
	}
	return _egdeg, nil
}
func (_fcedbb *CT_Table) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcedbb.TblGrid = NewCT_TableGrid()
_aeebf:
	for {
		_ggfbb, _adgac := d.Token()
		if _adgac != nil {
			return _adgac
		}
		switch _acfee := _ggfbb.(type) {
		case _d.StartElement:
			switch _acfee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}:
				_fcedbb.TblPr = NewCT_TableProperties()
				if _fadb := d.DecodeElement(_fcedbb.TblPr, &_acfee); _fadb != nil {
					return _fadb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}:
				if _aefab := d.DecodeElement(_fcedbb.TblGrid, &_acfee); _aefab != nil {
					return _aefab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_cadg := NewCT_TableRow()
				if _eeffc := d.DecodeElement(_cadg, &_acfee); _eeffc != nil {
					return _eeffc
				}
				_fcedbb.Tr = append(_fcedbb.Tr, _cadg)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _acfee.Name)
				if _aagcfb := d.Skip(); _aagcfb != nil {
					return _aagcfb
				}
			}
		case _d.EndElement:
			break _aeebf
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_PresetColor() *CT_PresetColor {
	_bdef := &CT_PresetColor{}
	_bdef.ValAttr = ST_PresetColorVal(1)
	return _bdef
}
func (_bdgac ST_OnOffStyleType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cgcdea := _d.Attr{}
	_cgcdea.Name = name
	switch _bdgac {
	case ST_OnOffStyleTypeUnset:
		_cgcdea.Value = ""
	case ST_OnOffStyleTypeOn:
		_cgcdea.Value = "\u006f\u006e"
	case ST_OnOffStyleTypeOff:
		_cgcdea.Value = "\u006f\u0066\u0066"
	case ST_OnOffStyleTypeDef:
		_cgcdea.Value = "\u0064\u0065\u0066"
	}
	return _cgcdea, nil
}

// Validate validates the CT_EmbeddedWAVAudioFile and its children
func (_dgdd *CT_EmbeddedWAVAudioFile) Validate() error {
	return _dgdd.ValidateWithPath("\u0043\u0054\u005fEm\u0062\u0065\u0064\u0064\u0065\u0064\u0057\u0041\u0056\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065")
}

type ST_FontCollectionIndex byte

func (_bccb *CT_CustomColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bccb.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_bccb.NameAttr)})
	}
	e.EncodeToken(start)
	if _bccb.ScrgbClr != nil {
		_fede := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_bccb.ScrgbClr, _fede)
	}
	if _bccb.SrgbClr != nil {
		_ddbf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_bccb.SrgbClr, _ddbf)
	}
	if _bccb.HslClr != nil {
		_ceage := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_bccb.HslClr, _ceage)
	}
	if _bccb.SysClr != nil {
		_cdaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_bccb.SysClr, _cdaf)
	}
	if _bccb.SchemeClr != nil {
		_ccdc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_bccb.SchemeClr, _ccdc)
	}
	if _bccb.PrstClr != nil {
		_eebe := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_bccb.PrstClr, _eebe)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextTabStopList() *CT_TextTabStopList { _edaaeg := &CT_TextTabStopList{}; return _edaaeg }
func (_gabb *CT_GraphicalObject) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gabb.GraphicData = NewCT_GraphicalObjectData()
_acga:
	for {
		_adfd, _acfbd := d.Token()
		if _acfbd != nil {
			return _acfbd
		}
		switch _bbdac := _adfd.(type) {
		case _d.StartElement:
			switch _bbdac.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}:
				if _bdcc := d.DecodeElement(_gabb.GraphicData, &_bbdac); _bdcc != nil {
					return _bdcc
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069c\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _bbdac.Name)
				if _cgbff := d.Skip(); _cgbff != nil {
					return _cgbff
				}
			}
		case _d.EndElement:
			break _acga
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_Path2DArcTo() *CT_Path2DArcTo { _fdcfa := &CT_Path2DArcTo{}; return _fdcfa }
func (_bbac *CT_ComplementTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_acfe, _ggde := d.Token()
		if _ggde != nil {
			return _dg.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u006f\u006dp\u006ce\u006de\u006et\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u0073", _ggde)
		}
		if _babe, _gebed := _acfe.(_d.EndElement); _gebed && _babe.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aeg *Blip) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aeg.CT_Blip = *NewCT_Blip()
	for _, _fac := range start.Attr {
		if _fac.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fac.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_gaa, _dea := _fac.Value, error(nil)
			if _dea != nil {
				return _dea
			}
			_aeg.EmbedAttr = &_gaa
			continue
		}
		if _fac.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fac.Name.Local == "\u006c\u0069\u006e\u006b" {
			_fcc, _fb := _fac.Value, error(nil)
			if _fb != nil {
				return _fb
			}
			_aeg.LinkAttr = &_fcc
			continue
		}
		if _fac.Name.Local == "\u0063\u0073\u0074\u0061\u0074\u0065" {
			_aeg.CstateAttr.UnmarshalXMLAttr(_fac)
			continue
		}
	}
_ed:
	for {
		_bcf, _fbc := d.Token()
		if _fbc != nil {
			return _fbc
		}
		switch _fcg := _bcf.(type) {
		case _d.StartElement:
			switch _fcg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_deb := NewCT_BlipChoice()
				if _gfb := d.DecodeElement(&_deb.AlphaBiLevel, &_fcg); _gfb != nil {
					return _gfb
				}
				_aeg.Choice = append(_aeg.Choice, _deb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_dbe := NewCT_BlipChoice()
				if _ag := d.DecodeElement(&_dbe.AlphaCeiling, &_fcg); _ag != nil {
					return _ag
				}
				_aeg.Choice = append(_aeg.Choice, _dbe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_bb := NewCT_BlipChoice()
				if _dbb := d.DecodeElement(&_bb.AlphaFloor, &_fcg); _dbb != nil {
					return _dbb
				}
				_aeg.Choice = append(_aeg.Choice, _bb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_df := NewCT_BlipChoice()
				if _dbbb := d.DecodeElement(&_df.AlphaInv, &_fcg); _dbbb != nil {
					return _dbbb
				}
				_aeg.Choice = append(_aeg.Choice, _df)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_bbd := NewCT_BlipChoice()
				if _dadd := d.DecodeElement(&_bbd.AlphaMod, &_fcg); _dadd != nil {
					return _dadd
				}
				_aeg.Choice = append(_aeg.Choice, _bbd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_eaa := NewCT_BlipChoice()
				if _gac := d.DecodeElement(&_eaa.AlphaModFix, &_fcg); _gac != nil {
					return _gac
				}
				_aeg.Choice = append(_aeg.Choice, _eaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_bg := NewCT_BlipChoice()
				if _be := d.DecodeElement(&_bg.AlphaRepl, &_fcg); _be != nil {
					return _be
				}
				_aeg.Choice = append(_aeg.Choice, _bg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_bd := NewCT_BlipChoice()
				if _ccf := d.DecodeElement(&_bd.BiLevel, &_fcg); _ccf != nil {
					return _ccf
				}
				_aeg.Choice = append(_aeg.Choice, _bd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_bca := NewCT_BlipChoice()
				if _gae := d.DecodeElement(&_bca.Blur, &_fcg); _gae != nil {
					return _gae
				}
				_aeg.Choice = append(_aeg.Choice, _bca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_cfd := NewCT_BlipChoice()
				if _bda := d.DecodeElement(&_cfd.ClrChange, &_fcg); _bda != nil {
					return _bda
				}
				_aeg.Choice = append(_aeg.Choice, _cfd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_fbd := NewCT_BlipChoice()
				if _gff := d.DecodeElement(&_fbd.ClrRepl, &_fcg); _gff != nil {
					return _gff
				}
				_aeg.Choice = append(_aeg.Choice, _fbd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_bdb := NewCT_BlipChoice()
				if _agb := d.DecodeElement(&_bdb.Duotone, &_fcg); _agb != nil {
					return _agb
				}
				_aeg.Choice = append(_aeg.Choice, _bdb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_gedb := NewCT_BlipChoice()
				if _gdb := d.DecodeElement(&_gedb.FillOverlay, &_fcg); _gdb != nil {
					return _gdb
				}
				_aeg.Choice = append(_aeg.Choice, _gedb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_bbe := NewCT_BlipChoice()
				if _gfd := d.DecodeElement(&_bbe.Grayscl, &_fcg); _gfd != nil {
					return _gfd
				}
				_aeg.Choice = append(_aeg.Choice, _bbe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_aga := NewCT_BlipChoice()
				if _dfd := d.DecodeElement(&_aga.Hsl, &_fcg); _dfd != nil {
					return _dfd
				}
				_aeg.Choice = append(_aeg.Choice, _aga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_fad := NewCT_BlipChoice()
				if _daf := d.DecodeElement(&_fad.Lum, &_fcg); _daf != nil {
					return _daf
				}
				_aeg.Choice = append(_aeg.Choice, _fad)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_bed := NewCT_BlipChoice()
				if _cce := d.DecodeElement(&_bed.Tint, &_fcg); _cce != nil {
					return _cce
				}
				_aeg.Choice = append(_aeg.Choice, _bed)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aeg.ExtLst = NewCT_OfficeArtExtensionList()
				if _bbee := d.DecodeElement(_aeg.ExtLst, &_fcg); _bbee != nil {
					return _bbee
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0042\u006ci\u0070\u0020\u0025\u0076", _fcg.Name)
				if _ab := d.Skip(); _ab != nil {
					return _ab
				}
			}
		case _d.EndElement:
			break _ed
		case _d.CharData:
		}
	}
	return nil
}

// ST_PositiveFixedPercentage is a union type
type ST_PositiveFixedPercentage struct {
	ST_PositiveFixedPercentageDecimal *int32
	ST_PositiveFixedPercentage        *ST_Percentage
}
type CT_TableRow struct {
	HAttr  ST_Coordinate
	Tc     []*CT_TableCell
	ExtLst *CT_OfficeArtExtensionList
}

// Validate validates the ThemeOverride and its children
func (_fgaaa *ThemeOverride) Validate() error {
	return _fgaaa.ValidateWithPath("\u0054\u0068\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065")
}
func (_dacbeg *CT_TransformEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fbecd := range start.Attr {
		if _fbecd.Name.Local == "\u0073\u0078" {
			_bfabba, _fgbdda := ParseUnionST_Percentage(_fbecd.Value)
			if _fgbdda != nil {
				return _fgbdda
			}
			_dacbeg.SxAttr = &_bfabba
			continue
		}
		if _fbecd.Name.Local == "\u0073\u0079" {
			_dbfde, _gbfea := ParseUnionST_Percentage(_fbecd.Value)
			if _gbfea != nil {
				return _gbfea
			}
			_dacbeg.SyAttr = &_dbfde
			continue
		}
		if _fbecd.Name.Local == "\u006b\u0078" {
			_ggaed, _fcbega := _c.ParseInt(_fbecd.Value, 10, 32)
			if _fcbega != nil {
				return _fcbega
			}
			_efdce := int32(_ggaed)
			_dacbeg.KxAttr = &_efdce
			continue
		}
		if _fbecd.Name.Local == "\u006b\u0079" {
			_gdbe, _afaab := _c.ParseInt(_fbecd.Value, 10, 32)
			if _afaab != nil {
				return _afaab
			}
			_aadgc := int32(_gdbe)
			_dacbeg.KyAttr = &_aadgc
			continue
		}
		if _fbecd.Name.Local == "\u0074\u0078" {
			_gfbff, _ddaae := ParseUnionST_Coordinate(_fbecd.Value)
			if _ddaae != nil {
				return _ddaae
			}
			_dacbeg.TxAttr = &_gfbff
			continue
		}
		if _fbecd.Name.Local == "\u0074\u0079" {
			_gbcdd, _edega := ParseUnionST_Coordinate(_fbecd.Value)
			if _edega != nil {
				return _edega
			}
			_dacbeg.TyAttr = &_gbcdd
			continue
		}
	}
	for {
		_cffaed, _acgfg := d.Token()
		if _acgfg != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _acgfg)
		}
		if _bfgfd, _cgad := _cffaed.(_d.EndElement); _cgad && _bfgfd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dgdbg *EG_Geometry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dgdbg.CustGeom != nil {
		_adbbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_dgdbg.CustGeom, _adbbb)
	}
	if _dgdbg.PrstGeom != nil {
		_bdeegf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_dgdbg.PrstGeom, _bdeegf)
	}
	return nil
}

type CT_TextNoAutofit struct{}

// ValidateWithPath validates the CT_TableStyleList and its children, prefixing error messages with path
func (_ecafe *CT_TableStyleList) ValidateWithPath(path string) error {
	if !_fe.ST_GuidPatternRe.MatchString(_ecafe.DefAttr) {
		return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044\u0065\u0066\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020'\u0025\u0073\u0027\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, _fe.ST_GuidPatternRe, _ecafe.DefAttr)
	}
	for _gfebf, _fcfcg := range _ecafe.TblStyle {
		if _fdced := _fcfcg.ValidateWithPath(_dg.Sprintf("\u0025s\u002fT\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u005b\u0025\u0064\u005d", path, _gfebf)); _fdced != nil {
			return _fdced
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Point3D and its children, prefixing error messages with path
func (_aedba *CT_Point3D) ValidateWithPath(path string) error {
	if _gccf := _aedba.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _gccf != nil {
		return _gccf
	}
	if _cgdafb := _aedba.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _cgdafb != nil {
		return _cgdafb
	}
	if _aaaeb := _aedba.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _aaaeb != nil {
		return _aaaeb
	}
	return nil
}

// Validate validates the CT_GradientStop and its children
func (_ageab *CT_GradientStop) Validate() error {
	return _ageab.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070")
}

type CT_FillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func NewCT_GvmlGraphicFrameNonVisual() *CT_GvmlGraphicFrameNonVisual {
	_facdf := &CT_GvmlGraphicFrameNonVisual{}
	_facdf.CNvPr = NewCT_NonVisualDrawingProps()
	_facdf.CNvGraphicFramePr = NewCT_NonVisualGraphicFrameProperties()
	return _facdf
}

type CT_EffectProperties struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_eabd *EG_Effect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gebgf:
	for {
		_gcedg, _bccec := d.Token()
		if _bccec != nil {
			return _bccec
		}
		switch _egeba := _gcedg.(type) {
		case _d.StartElement:
			switch _egeba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				_eabd.Cont = NewCT_EffectContainer()
				if _eaabc := d.DecodeElement(_eabd.Cont, &_egeba); _eaabc != nil {
					return _eaabc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_eabd.Effect = NewCT_EffectReference()
				if _dfccaa := d.DecodeElement(_eabd.Effect, &_egeba); _dfccaa != nil {
					return _dfccaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_eabd.AlphaBiLevel = NewCT_AlphaBiLevelEffect()
				if _ecbfcg := d.DecodeElement(_eabd.AlphaBiLevel, &_egeba); _ecbfcg != nil {
					return _ecbfcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_eabd.AlphaCeiling = NewCT_AlphaCeilingEffect()
				if _cddca := d.DecodeElement(_eabd.AlphaCeiling, &_egeba); _cddca != nil {
					return _cddca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_eabd.AlphaFloor = NewCT_AlphaFloorEffect()
				if _degaga := d.DecodeElement(_eabd.AlphaFloor, &_egeba); _degaga != nil {
					return _degaga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_eabd.AlphaInv = NewCT_AlphaInverseEffect()
				if _gceab := d.DecodeElement(_eabd.AlphaInv, &_egeba); _gceab != nil {
					return _gceab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_eabd.AlphaMod = NewCT_AlphaModulateEffect()
				if _edacc := d.DecodeElement(_eabd.AlphaMod, &_egeba); _edacc != nil {
					return _edacc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_eabd.AlphaModFix = NewCT_AlphaModulateFixedEffect()
				if _faaec := d.DecodeElement(_eabd.AlphaModFix, &_egeba); _faaec != nil {
					return _faaec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}:
				_eabd.AlphaOutset = NewCT_AlphaOutsetEffect()
				if _gdffff := d.DecodeElement(_eabd.AlphaOutset, &_egeba); _gdffff != nil {
					return _gdffff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_eabd.AlphaRepl = NewCT_AlphaReplaceEffect()
				if _afeec := d.DecodeElement(_eabd.AlphaRepl, &_egeba); _afeec != nil {
					return _afeec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_eabd.BiLevel = NewCT_BiLevelEffect()
				if _daffcb := d.DecodeElement(_eabd.BiLevel, &_egeba); _daffcb != nil {
					return _daffcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}:
				_eabd.Blend = NewCT_BlendEffect()
				if _bcbce := d.DecodeElement(_eabd.Blend, &_egeba); _bcbce != nil {
					return _bcbce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_eabd.Blur = NewCT_BlurEffect()
				if _cbedd := d.DecodeElement(_eabd.Blur, &_egeba); _cbedd != nil {
					return _cbedd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_eabd.ClrChange = NewCT_ColorChangeEffect()
				if _bgcgeb := d.DecodeElement(_eabd.ClrChange, &_egeba); _bgcgeb != nil {
					return _bgcgeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_eabd.ClrRepl = NewCT_ColorReplaceEffect()
				if _baffc := d.DecodeElement(_eabd.ClrRepl, &_egeba); _baffc != nil {
					return _baffc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_eabd.Duotone = NewCT_DuotoneEffect()
				if _cafbc := d.DecodeElement(_eabd.Duotone, &_egeba); _cafbc != nil {
					return _cafbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_eabd.Fill = NewCT_FillEffect()
				if _dgfed := d.DecodeElement(_eabd.Fill, &_egeba); _dgfed != nil {
					return _dgfed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_eabd.FillOverlay = NewCT_FillOverlayEffect()
				if _eaadc := d.DecodeElement(_eabd.FillOverlay, &_egeba); _eaadc != nil {
					return _eaadc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_eabd.Glow = NewCT_GlowEffect()
				if _daaaa := d.DecodeElement(_eabd.Glow, &_egeba); _daaaa != nil {
					return _daaaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_eabd.Grayscl = NewCT_GrayscaleEffect()
				if _bffbd := d.DecodeElement(_eabd.Grayscl, &_egeba); _bffbd != nil {
					return _bffbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_eabd.Hsl = NewCT_HSLEffect()
				if _bdcd := d.DecodeElement(_eabd.Hsl, &_egeba); _bdcd != nil {
					return _bdcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_eabd.InnerShdw = NewCT_InnerShadowEffect()
				if _daade := d.DecodeElement(_eabd.InnerShdw, &_egeba); _daade != nil {
					return _daade
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_eabd.Lum = NewCT_LuminanceEffect()
				if _eeabg := d.DecodeElement(_eabd.Lum, &_egeba); _eeabg != nil {
					return _eeabg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_eabd.OuterShdw = NewCT_OuterShadowEffect()
				if _gacab := d.DecodeElement(_eabd.OuterShdw, &_egeba); _gacab != nil {
					return _gacab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_eabd.PrstShdw = NewCT_PresetShadowEffect()
				if _cgbae := d.DecodeElement(_eabd.PrstShdw, &_egeba); _cgbae != nil {
					return _cgbae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_eabd.Reflection = NewCT_ReflectionEffect()
				if _fcdgg := d.DecodeElement(_eabd.Reflection, &_egeba); _fcdgg != nil {
					return _fcdgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}:
				_eabd.RelOff = NewCT_RelativeOffsetEffect()
				if _ffbff := d.DecodeElement(_eabd.RelOff, &_egeba); _ffbff != nil {
					return _ffbff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_eabd.SoftEdge = NewCT_SoftEdgesEffect()
				if _agdb := d.DecodeElement(_eabd.SoftEdge, &_egeba); _agdb != nil {
					return _agdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_eabd.Tint = NewCT_TintEffect()
				if _cegbbc := d.DecodeElement(_eabd.Tint, &_egeba); _cegbbc != nil {
					return _cegbbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_eabd.Xfrm = NewCT_TransformEffect()
				if _ddacg := d.DecodeElement(_eabd.Xfrm, &_egeba); _ddacg != nil {
					return _ddacg
				}
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0045\u0066\u0066e\u0063\u0074 \u0025\u0076", _egeba.Name)
				if _ebacb := d.Skip(); _ebacb != nil {
					return _ebacb
				}
			}
		case _d.EndElement:
			break _gebgf
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_FontReference() *CT_FontReference {
	_fega := &CT_FontReference{}
	_fega.IdxAttr = ST_FontCollectionIndex(1)
	return _fega
}

// ValidateWithPath validates the CT_LineEndProperties and its children, prefixing error messages with path
func (_eeeec *CT_LineEndProperties) ValidateWithPath(path string) error {
	if _bgbfc := _eeeec.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bgbfc != nil {
		return _bgbfc
	}
	if _cfba := _eeeec.WAttr.ValidateWithPath(path + "\u002f\u0057\u0041\u0074\u0074\u0072"); _cfba != nil {
		return _cfba
	}
	if _bfcb := _eeeec.LenAttr.ValidateWithPath(path + "\u002f\u004c\u0065\u006e\u0041\u0074\u0074\u0072"); _bfcb != nil {
		return _bfcb
	}
	return nil
}
func (_gdabc ST_TextAnchoringType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gdabc.String(), start)
}

// ValidateWithPath validates the CT_TextNoAutofit and its children, prefixing error messages with path
func (_cgddg *CT_TextNoAutofit) ValidateWithPath(path string) error { return nil }
func (_acfde *ST_AnimationDgmOnlyBuildType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_baegf, _bacc := d.Token()
	if _bacc != nil {
		return _bacc
	}
	if _eefdd, _gedac := _baegf.(_d.EndElement); _gedac && _eefdd.Name == start.Name {
		*_acfde = 1
		return nil
	}
	if _ebgdb, _bcgdg := _baegf.(_d.CharData); !_bcgdg {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _baegf)
	} else {
		switch string(_ebgdb) {
		case "":
			*_acfde = 0
		case "\u006f\u006e\u0065":
			*_acfde = 1
		case "\u006c\u0076\u006c\u004f\u006e\u0065":
			*_acfde = 2
		case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_acfde = 3
		}
	}
	_baegf, _bacc = d.Token()
	if _bacc != nil {
		return _bacc
	}
	if _eddfd, _abdge := _baegf.(_d.EndElement); _abdge && _eddfd.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _baegf)
}
func NewCT_TextField() *CT_TextField {
	_gfcfd := &CT_TextField{}
	_gfcfd.IdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _gfcfd
}

type CT_VideoFile struct {
	LinkAttr        string
	ContentTypeAttr *string
	ExtLst          *CT_OfficeArtExtensionList
}

func (_cafcb ST_TextBulletSize) String() string {
	if _cafcb.ST_TextBulletSizePercent != nil {
		return _dg.Sprintf("\u0025\u0076", *_cafcb.ST_TextBulletSizePercent)
	}
	if _cafcb.ST_TextBulletSizeDecimal != nil {
		return _dg.Sprintf("\u0025\u0076", *_cafcb.ST_TextBulletSizeDecimal)
	}
	return ""
}
func (_agcffe *CT_WholeE2oFormatting) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _agcffe.Ln != nil {
		_cfdcf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_agcffe.Ln, _cfdcf)
	}
	if _agcffe.EffectLst != nil {
		_geagb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_agcffe.EffectLst, _geagb)
	}
	if _agcffe.EffectDag != nil {
		_cebgf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_agcffe.EffectDag, _cebgf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fdc *CT_Backdrop) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_edc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006e\u0063\u0068\u006f\u0072"}}
	e.EncodeElement(_fdc.Anchor, _edc)
	_faaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d"}}
	e.EncodeElement(_fdc.Norm, _faaa)
	_fggb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0075\u0070"}}
	e.EncodeElement(_fdc.Up, _fggb)
	if _fdc.ExtLst != nil {
		_dbed := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdc.ExtLst, _dbed)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bgad *CT_GvmlShapeNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bgad.CNvPr = NewCT_NonVisualDrawingProps()
	_bgad.CNvSpPr = NewCT_NonVisualDrawingShapeProps()
_dbfdf:
	for {
		_ggcd, _cgcbf := d.Token()
		if _cgcbf != nil {
			return _cgcbf
		}
		switch _afbc := _ggcd.(type) {
		case _d.StartElement:
			switch _afbc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _ccge := d.DecodeElement(_bgad.CNvPr, &_afbc); _ccge != nil {
					return _ccge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _bcbe := d.DecodeElement(_bgad.CNvSpPr, &_afbc); _bcbe != nil {
					return _bcbe
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0047\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _afbc.Name)
				if _eeeb := d.Skip(); _eeeb != nil {
					return _eeeb
				}
			}
		case _d.EndElement:
			break _dbfdf
		case _d.CharData:
		}
	}
	return nil
}
func (_ceaee *Graphic) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return _ceaee.CT_GraphicalObject.MarshalXML(e, start)
}
func (_cgbe *CT_GvmlPictureNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cgbe.CNvPr = NewCT_NonVisualDrawingProps()
	_cgbe.CNvPicPr = NewCT_NonVisualPictureProperties()
_fcbe:
	for {
		_abce, _bbabd := d.Token()
		if _bbabd != nil {
			return _bbabd
		}
		switch _cbcdc := _abce.(type) {
		case _d.StartElement:
			switch _cbcdc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _ageef := d.DecodeElement(_cgbe.CNvPr, &_cbcdc); _ageef != nil {
					return _ageef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _dcdbd := d.DecodeElement(_cgbe.CNvPicPr, &_cbcdc); _dcdbd != nil {
					return _dcdbd
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069\u0063\u0074\u0075r\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c \u0025\u0076", _cbcdc.Name)
				if _eaebc := d.Skip(); _eaebc != nil {
					return _eaebc
				}
			}
		case _d.EndElement:
			break _fcbe
		case _d.CharData:
		}
	}
	return nil
}

type CT_RelativeRect struct {
	LAttr *ST_Percentage
	TAttr *ST_Percentage
	RAttr *ST_Percentage
	BAttr *ST_Percentage
}
type CT_NonVisualDrawingProps struct {
	IdAttr     uint32
	NameAttr   string
	DescrAttr  *string
	HiddenAttr *bool
	TitleAttr  *string
	HlinkClick *CT_Hyperlink
	HlinkHover *CT_Hyperlink
	ExtLst     *CT_OfficeArtExtensionList
}
type CT_PositiveFixedPercentage struct{ ValAttr ST_PositiveFixedPercentage }

func (_fbeg *CT_GroupFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_abfab ST_TextPoint) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _abfab.ST_TextPointUnqualified != nil {
		e.EncodeToken(_d.CharData(_dg.Sprintf("\u0025\u0064", *_abfab.ST_TextPointUnqualified)))
	}
	if _abfab.ST_UniversalMeasure != nil {
		e.EncodeToken(_d.CharData(*_abfab.ST_UniversalMeasure))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

type CT_ColorReplaceEffect struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_dfcb *CT_DashStop) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cffe := range start.Attr {
		if _cffe.Name.Local == "\u0064" {
			_ffdfe, _eebc := ParseUnionST_PositivePercentage(_cffe.Value)
			if _eebc != nil {
				return _eebc
			}
			_dfcb.DAttr = _ffdfe
			continue
		}
		if _cffe.Name.Local == "\u0073\u0070" {
			_fdeab, _cbeb := ParseUnionST_PositivePercentage(_cffe.Value)
			if _cbeb != nil {
				return _cbeb
			}
			_dfcb.SpAttr = _fdeab
			continue
		}
	}
	for {
		_cgba, _agaf := d.Token()
		if _agaf != nil {
			return _dg.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u003a\u0020\u0025\u0073", _agaf)
		}
		if _cbfga, _abdfb := _cgba.(_d.EndElement); _abdfb && _cbfga.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TextTabStop and its children
func (_cafde *CT_TextTabStop) Validate() error {
	return _cafde.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070")
}

// ValidateWithPath validates the CT_InnerShadowEffect and its children, prefixing error messages with path
func (_decbc *CT_InnerShadowEffect) ValidateWithPath(path string) error {
	if _decbc.BlurRadAttr != nil {
		if *_decbc.BlurRadAttr < 0 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_decbc.BlurRadAttr)
		}
		if *_decbc.BlurRadAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_decbc.BlurRadAttr)
		}
	}
	if _decbc.DistAttr != nil {
		if *_decbc.DistAttr < 0 {
			return _dg.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_decbc.DistAttr)
		}
		if *_decbc.DistAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_decbc.DistAttr)
		}
	}
	if _decbc.DirAttr != nil {
		if *_decbc.DirAttr < 0 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_decbc.DirAttr)
		}
		if *_decbc.DirAttr >= 21600000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_decbc.DirAttr)
		}
	}
	if _decbc.ScrgbClr != nil {
		if _fecb := _decbc.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _fecb != nil {
			return _fecb
		}
	}
	if _decbc.SrgbClr != nil {
		if _cfef := _decbc.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _cfef != nil {
			return _cfef
		}
	}
	if _decbc.HslClr != nil {
		if _cgdd := _decbc.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _cgdd != nil {
			return _cgdd
		}
	}
	if _decbc.SysClr != nil {
		if _gfcfb := _decbc.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _gfcfb != nil {
			return _gfcfb
		}
	}
	if _decbc.SchemeClr != nil {
		if _eefbf := _decbc.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _eefbf != nil {
			return _eefbf
		}
	}
	if _decbc.PrstClr != nil {
		if _dadbf := _decbc.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _dadbf != nil {
			return _dadbf
		}
	}
	return nil
}

// Validate validates the CT_TextBody and its children
func (_gcdef *CT_TextBody) Validate() error {
	return _gcdef.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079")
}
func NewCT_Table() *CT_Table {
	_ebcbc := &CT_Table{}
	_ebcbc.TblGrid = NewCT_TableGrid()
	return _ebcbc
}
func (_caca *CT_Cell3D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_caca.Bevel = NewCT_Bevel()
	for _, _becb := range start.Attr {
		if _becb.Name.Local == "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c" {
			_caca.PrstMaterialAttr.UnmarshalXMLAttr(_becb)
			continue
		}
	}
_abbd:
	for {
		_gfdbc, _aabd := d.Token()
		if _aabd != nil {
			return _aabd
		}
		switch _bfeea := _gfdbc.(type) {
		case _d.StartElement:
			switch _bfeea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				if _egce := d.DecodeElement(_caca.Bevel, &_bfeea); _egce != nil {
					return _egce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}:
				_caca.LightRig = NewCT_LightRig()
				if _fgbc := d.DecodeElement(_caca.LightRig, &_bfeea); _fgbc != nil {
					return _fgbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caca.ExtLst = NewCT_OfficeArtExtensionList()
				if _agfb := d.DecodeElement(_caca.ExtLst, &_bfeea); _agfb != nil {
					return _agfb
				}
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0065\u006cl\u0033\u0044 \u0025\u0076", _bfeea.Name)
				if _affc := d.Skip(); _affc != nil {
					return _affc
				}
			}
		case _d.EndElement:
			break _abbd
		case _d.CharData:
		}
	}
	return nil
}

type ST_TextAlignType byte

const (
	ST_AnimationBuildTypeUnset     ST_AnimationBuildType = 0
	ST_AnimationBuildTypeAllAtOnce ST_AnimationBuildType = 1
)

func (_gecba *CT_LineJoinMiterProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _acdfc := range start.Attr {
		if _acdfc.Name.Local == "\u006c\u0069\u006d" {
			_abgbb, _aede := ParseUnionST_PositivePercentage(_acdfc.Value)
			if _aede != nil {
				return _aede
			}
			_gecba.LimAttr = &_abgbb
			continue
		}
	}
	for {
		_cgbga, _aebab := d.Token()
		if _aebab != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u004d\u0069\u0074\u0065\u0072P\u0072\u006f\u0070\u0065\u0072t\u0069\u0065s\u003a\u0020\u0025\u0073", _aebab)
		}
		if _bddgee, _aabbce := _cgbga.(_d.EndElement); _aabbce && _bddgee.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_PresetColorValUnset                ST_PresetColorVal = 0
	ST_PresetColorValAliceBlue            ST_PresetColorVal = 1
	ST_PresetColorValAntiqueWhite         ST_PresetColorVal = 2
	ST_PresetColorValAqua                 ST_PresetColorVal = 3
	ST_PresetColorValAquamarine           ST_PresetColorVal = 4
	ST_PresetColorValAzure                ST_PresetColorVal = 5
	ST_PresetColorValBeige                ST_PresetColorVal = 6
	ST_PresetColorValBisque               ST_PresetColorVal = 7
	ST_PresetColorValBlack                ST_PresetColorVal = 8
	ST_PresetColorValBlanchedAlmond       ST_PresetColorVal = 9
	ST_PresetColorValBlue                 ST_PresetColorVal = 10
	ST_PresetColorValBlueViolet           ST_PresetColorVal = 11
	ST_PresetColorValBrown                ST_PresetColorVal = 12
	ST_PresetColorValBurlyWood            ST_PresetColorVal = 13
	ST_PresetColorValCadetBlue            ST_PresetColorVal = 14
	ST_PresetColorValChartreuse           ST_PresetColorVal = 15
	ST_PresetColorValChocolate            ST_PresetColorVal = 16
	ST_PresetColorValCoral                ST_PresetColorVal = 17
	ST_PresetColorValCornflowerBlue       ST_PresetColorVal = 18
	ST_PresetColorValCornsilk             ST_PresetColorVal = 19
	ST_PresetColorValCrimson              ST_PresetColorVal = 20
	ST_PresetColorValCyan                 ST_PresetColorVal = 21
	ST_PresetColorValDarkBlue             ST_PresetColorVal = 22
	ST_PresetColorValDarkCyan             ST_PresetColorVal = 23
	ST_PresetColorValDarkGoldenrod        ST_PresetColorVal = 24
	ST_PresetColorValDarkGray             ST_PresetColorVal = 25
	ST_PresetColorValDarkGrey             ST_PresetColorVal = 26
	ST_PresetColorValDarkGreen            ST_PresetColorVal = 27
	ST_PresetColorValDarkKhaki            ST_PresetColorVal = 28
	ST_PresetColorValDarkMagenta          ST_PresetColorVal = 29
	ST_PresetColorValDarkOliveGreen       ST_PresetColorVal = 30
	ST_PresetColorValDarkOrange           ST_PresetColorVal = 31
	ST_PresetColorValDarkOrchid           ST_PresetColorVal = 32
	ST_PresetColorValDarkRed              ST_PresetColorVal = 33
	ST_PresetColorValDarkSalmon           ST_PresetColorVal = 34
	ST_PresetColorValDarkSeaGreen         ST_PresetColorVal = 35
	ST_PresetColorValDarkSlateBlue        ST_PresetColorVal = 36
	ST_PresetColorValDarkSlateGray        ST_PresetColorVal = 37
	ST_PresetColorValDarkSlateGrey        ST_PresetColorVal = 38
	ST_PresetColorValDarkTurquoise        ST_PresetColorVal = 39
	ST_PresetColorValDarkViolet           ST_PresetColorVal = 40
	ST_PresetColorValDkBlue               ST_PresetColorVal = 41
	ST_PresetColorValDkCyan               ST_PresetColorVal = 42
	ST_PresetColorValDkGoldenrod          ST_PresetColorVal = 43
	ST_PresetColorValDkGray               ST_PresetColorVal = 44
	ST_PresetColorValDkGrey               ST_PresetColorVal = 45
	ST_PresetColorValDkGreen              ST_PresetColorVal = 46
	ST_PresetColorValDkKhaki              ST_PresetColorVal = 47
	ST_PresetColorValDkMagenta            ST_PresetColorVal = 48
	ST_PresetColorValDkOliveGreen         ST_PresetColorVal = 49
	ST_PresetColorValDkOrange             ST_PresetColorVal = 50
	ST_PresetColorValDkOrchid             ST_PresetColorVal = 51
	ST_PresetColorValDkRed                ST_PresetColorVal = 52
	ST_PresetColorValDkSalmon             ST_PresetColorVal = 53
	ST_PresetColorValDkSeaGreen           ST_PresetColorVal = 54
	ST_PresetColorValDkSlateBlue          ST_PresetColorVal = 55
	ST_PresetColorValDkSlateGray          ST_PresetColorVal = 56
	ST_PresetColorValDkSlateGrey          ST_PresetColorVal = 57
	ST_PresetColorValDkTurquoise          ST_PresetColorVal = 58
	ST_PresetColorValDkViolet             ST_PresetColorVal = 59
	ST_PresetColorValDeepPink             ST_PresetColorVal = 60
	ST_PresetColorValDeepSkyBlue          ST_PresetColorVal = 61
	ST_PresetColorValDimGray              ST_PresetColorVal = 62
	ST_PresetColorValDimGrey              ST_PresetColorVal = 63
	ST_PresetColorValDodgerBlue           ST_PresetColorVal = 64
	ST_PresetColorValFirebrick            ST_PresetColorVal = 65
	ST_PresetColorValFloralWhite          ST_PresetColorVal = 66
	ST_PresetColorValForestGreen          ST_PresetColorVal = 67
	ST_PresetColorValFuchsia              ST_PresetColorVal = 68
	ST_PresetColorValGainsboro            ST_PresetColorVal = 69
	ST_PresetColorValGhostWhite           ST_PresetColorVal = 70
	ST_PresetColorValGold                 ST_PresetColorVal = 71
	ST_PresetColorValGoldenrod            ST_PresetColorVal = 72
	ST_PresetColorValGray                 ST_PresetColorVal = 73
	ST_PresetColorValGrey                 ST_PresetColorVal = 74
	ST_PresetColorValGreen                ST_PresetColorVal = 75
	ST_PresetColorValGreenYellow          ST_PresetColorVal = 76
	ST_PresetColorValHoneydew             ST_PresetColorVal = 77
	ST_PresetColorValHotPink              ST_PresetColorVal = 78
	ST_PresetColorValIndianRed            ST_PresetColorVal = 79
	ST_PresetColorValIndigo               ST_PresetColorVal = 80
	ST_PresetColorValIvory                ST_PresetColorVal = 81
	ST_PresetColorValKhaki                ST_PresetColorVal = 82
	ST_PresetColorValLavender             ST_PresetColorVal = 83
	ST_PresetColorValLavenderBlush        ST_PresetColorVal = 84
	ST_PresetColorValLawnGreen            ST_PresetColorVal = 85
	ST_PresetColorValLemonChiffon         ST_PresetColorVal = 86
	ST_PresetColorValLightBlue            ST_PresetColorVal = 87
	ST_PresetColorValLightCoral           ST_PresetColorVal = 88
	ST_PresetColorValLightCyan            ST_PresetColorVal = 89
	ST_PresetColorValLightGoldenrodYellow ST_PresetColorVal = 90
	ST_PresetColorValLightGray            ST_PresetColorVal = 91
	ST_PresetColorValLightGrey            ST_PresetColorVal = 92
	ST_PresetColorValLightGreen           ST_PresetColorVal = 93
	ST_PresetColorValLightPink            ST_PresetColorVal = 94
	ST_PresetColorValLightSalmon          ST_PresetColorVal = 95
	ST_PresetColorValLightSeaGreen        ST_PresetColorVal = 96
	ST_PresetColorValLightSkyBlue         ST_PresetColorVal = 97
	ST_PresetColorValLightSlateGray       ST_PresetColorVal = 98
	ST_PresetColorValLightSlateGrey       ST_PresetColorVal = 99
	ST_PresetColorValLightSteelBlue       ST_PresetColorVal = 100
	ST_PresetColorValLightYellow          ST_PresetColorVal = 101
	ST_PresetColorValLtBlue               ST_PresetColorVal = 102
	ST_PresetColorValLtCoral              ST_PresetColorVal = 103
	ST_PresetColorValLtCyan               ST_PresetColorVal = 104
	ST_PresetColorValLtGoldenrodYellow    ST_PresetColorVal = 105
	ST_PresetColorValLtGray               ST_PresetColorVal = 106
	ST_PresetColorValLtGrey               ST_PresetColorVal = 107
	ST_PresetColorValLtGreen              ST_PresetColorVal = 108
	ST_PresetColorValLtPink               ST_PresetColorVal = 109
	ST_PresetColorValLtSalmon             ST_PresetColorVal = 110
	ST_PresetColorValLtSeaGreen           ST_PresetColorVal = 111
	ST_PresetColorValLtSkyBlue            ST_PresetColorVal = 112
	ST_PresetColorValLtSlateGray          ST_PresetColorVal = 113
	ST_PresetColorValLtSlateGrey          ST_PresetColorVal = 114
	ST_PresetColorValLtSteelBlue          ST_PresetColorVal = 115
	ST_PresetColorValLtYellow             ST_PresetColorVal = 116
	ST_PresetColorValLime                 ST_PresetColorVal = 117
	ST_PresetColorValLimeGreen            ST_PresetColorVal = 118
	ST_PresetColorValLinen                ST_PresetColorVal = 119
	ST_PresetColorValMagenta              ST_PresetColorVal = 120
	ST_PresetColorValMaroon               ST_PresetColorVal = 121
	ST_PresetColorValMedAquamarine        ST_PresetColorVal = 122
	ST_PresetColorValMedBlue              ST_PresetColorVal = 123
	ST_PresetColorValMedOrchid            ST_PresetColorVal = 124
	ST_PresetColorValMedPurple            ST_PresetColorVal = 125
	ST_PresetColorValMedSeaGreen          ST_PresetColorVal = 126
	ST_PresetColorValMedSlateBlue         ST_PresetColorVal = 127
	ST_PresetColorValMedSpringGreen       ST_PresetColorVal = 128
	ST_PresetColorValMedTurquoise         ST_PresetColorVal = 129
	ST_PresetColorValMedVioletRed         ST_PresetColorVal = 130
	ST_PresetColorValMediumAquamarine     ST_PresetColorVal = 131
	ST_PresetColorValMediumBlue           ST_PresetColorVal = 132
	ST_PresetColorValMediumOrchid         ST_PresetColorVal = 133
	ST_PresetColorValMediumPurple         ST_PresetColorVal = 134
	ST_PresetColorValMediumSeaGreen       ST_PresetColorVal = 135
	ST_PresetColorValMediumSlateBlue      ST_PresetColorVal = 136
	ST_PresetColorValMediumSpringGreen    ST_PresetColorVal = 137
	ST_PresetColorValMediumTurquoise      ST_PresetColorVal = 138
	ST_PresetColorValMediumVioletRed      ST_PresetColorVal = 139
	ST_PresetColorValMidnightBlue         ST_PresetColorVal = 140
	ST_PresetColorValMintCream            ST_PresetColorVal = 141
	ST_PresetColorValMistyRose            ST_PresetColorVal = 142
	ST_PresetColorValMoccasin             ST_PresetColorVal = 143
	ST_PresetColorValNavajoWhite          ST_PresetColorVal = 144
	ST_PresetColorValNavy                 ST_PresetColorVal = 145
	ST_PresetColorValOldLace              ST_PresetColorVal = 146
	ST_PresetColorValOlive                ST_PresetColorVal = 147
	ST_PresetColorValOliveDrab            ST_PresetColorVal = 148
	ST_PresetColorValOrange               ST_PresetColorVal = 149
	ST_PresetColorValOrangeRed            ST_PresetColorVal = 150
	ST_PresetColorValOrchid               ST_PresetColorVal = 151
	ST_PresetColorValPaleGoldenrod        ST_PresetColorVal = 152
	ST_PresetColorValPaleGreen            ST_PresetColorVal = 153
	ST_PresetColorValPaleTurquoise        ST_PresetColorVal = 154
	ST_PresetColorValPaleVioletRed        ST_PresetColorVal = 155
	ST_PresetColorValPapayaWhip           ST_PresetColorVal = 156
	ST_PresetColorValPeachPuff            ST_PresetColorVal = 157
	ST_PresetColorValPeru                 ST_PresetColorVal = 158
	ST_PresetColorValPink                 ST_PresetColorVal = 159
	ST_PresetColorValPlum                 ST_PresetColorVal = 160
	ST_PresetColorValPowderBlue           ST_PresetColorVal = 161
	ST_PresetColorValPurple               ST_PresetColorVal = 162
	ST_PresetColorValRed                  ST_PresetColorVal = 163
	ST_PresetColorValRosyBrown            ST_PresetColorVal = 164
	ST_PresetColorValRoyalBlue            ST_PresetColorVal = 165
	ST_PresetColorValSaddleBrown          ST_PresetColorVal = 166
	ST_PresetColorValSalmon               ST_PresetColorVal = 167
	ST_PresetColorValSandyBrown           ST_PresetColorVal = 168
	ST_PresetColorValSeaGreen             ST_PresetColorVal = 169
	ST_PresetColorValSeaShell             ST_PresetColorVal = 170
	ST_PresetColorValSienna               ST_PresetColorVal = 171
	ST_PresetColorValSilver               ST_PresetColorVal = 172
	ST_PresetColorValSkyBlue              ST_PresetColorVal = 173
	ST_PresetColorValSlateBlue            ST_PresetColorVal = 174
	ST_PresetColorValSlateGray            ST_PresetColorVal = 175
	ST_PresetColorValSlateGrey            ST_PresetColorVal = 176
	ST_PresetColorValSnow                 ST_PresetColorVal = 177
	ST_PresetColorValSpringGreen          ST_PresetColorVal = 178
	ST_PresetColorValSteelBlue            ST_PresetColorVal = 179
	ST_PresetColorValTan                  ST_PresetColorVal = 180
	ST_PresetColorValTeal                 ST_PresetColorVal = 181
	ST_PresetColorValThistle              ST_PresetColorVal = 182
	ST_PresetColorValTomato               ST_PresetColorVal = 183
	ST_PresetColorValTurquoise            ST_PresetColorVal = 184
	ST_PresetColorValViolet               ST_PresetColorVal = 185
	ST_PresetColorValWheat                ST_PresetColorVal = 186
	ST_PresetColorValWhite                ST_PresetColorVal = 187
	ST_PresetColorValWhiteSmoke           ST_PresetColorVal = 188
	ST_PresetColorValYellow               ST_PresetColorVal = 189
	ST_PresetColorValYellowGreen          ST_PresetColorVal = 190
)

type CT_LineStyleList struct{ Ln []*CT_LineProperties }
type CT_Percentage struct{ ValAttr ST_Percentage }
type CT_TextBulletTypefaceFollowText struct{}

func (_fddg *CT_ColorMapping) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_becd, _dccg := _fddg.Bg1Attr.MarshalXMLAttr(_d.Name{Local: "\u0062\u0067\u0031"})
	if _dccg != nil {
		return _dccg
	}
	start.Attr = append(start.Attr, _becd)
	_becd, _dccg = _fddg.Tx1Attr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0078\u0031"})
	if _dccg != nil {
		return _dccg
	}
	start.Attr = append(start.Attr, _becd)
	_becd, _dccg = _fddg.Bg2Attr.MarshalXMLAttr(_d.Name{Local: "\u0062\u0067\u0032"})
	if _dccg != nil {
		return _dccg
	}
	start.Attr = append(start.Attr, _becd)
	_becd, _dccg = _fddg.Tx2Attr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0078\u0032"})
	if _dccg != nil {
		return _dccg
	}
	start.Attr = append(start.Attr, _becd)
	_becd, _dccg = _fddg.Accent1Attr.MarshalXMLAttr(_d.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"})
	if _dccg != nil {
		return _dccg
	}
	start.Attr = append(start.Attr, _becd)
	_becd, _dccg = _fddg.Accent2Attr.MarshalXMLAttr(_d.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"})
	if _dccg != nil {
		return _dccg
	}
	start.Attr = append(start.Attr, _becd)
	_becd, _dccg = _fddg.Accent3Attr.MarshalXMLAttr(_d.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"})
	if _dccg != nil {
		return _dccg
	}
	start.Attr = append(start.Attr, _becd)
	_becd, _dccg = _fddg.Accent4Attr.MarshalXMLAttr(_d.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"})
	if _dccg != nil {
		return _dccg
	}
	start.Attr = append(start.Attr, _becd)
	_becd, _dccg = _fddg.Accent5Attr.MarshalXMLAttr(_d.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"})
	if _dccg != nil {
		return _dccg
	}
	start.Attr = append(start.Attr, _becd)
	_becd, _dccg = _fddg.Accent6Attr.MarshalXMLAttr(_d.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"})
	if _dccg != nil {
		return _dccg
	}
	start.Attr = append(start.Attr, _becd)
	_becd, _dccg = _fddg.HlinkAttr.MarshalXMLAttr(_d.Name{Local: "\u0068\u006c\u0069n\u006b"})
	if _dccg != nil {
		return _dccg
	}
	start.Attr = append(start.Attr, _becd)
	_becd, _dccg = _fddg.FolHlinkAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"})
	if _dccg != nil {
		return _dccg
	}
	start.Attr = append(start.Attr, _becd)
	e.EncodeToken(start)
	if _fddg.ExtLst != nil {
		_agcd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fddg.ExtLst, _agcd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TextBodyProperties struct {
	RotAttr              *int32
	SpcFirstLastParaAttr *bool
	VertOverflowAttr     ST_TextVertOverflowType
	HorzOverflowAttr     ST_TextHorzOverflowType
	VertAttr             ST_TextVerticalType
	WrapAttr             ST_TextWrappingType
	LInsAttr             *ST_Coordinate32
	TInsAttr             *ST_Coordinate32
	RInsAttr             *ST_Coordinate32
	BInsAttr             *ST_Coordinate32
	NumColAttr           *int32
	SpcColAttr           *int32
	RtlColAttr           *bool
	FromWordArtAttr      *bool
	AnchorAttr           ST_TextAnchoringType
	AnchorCtrAttr        *bool
	ForceAAAttr          *bool
	UprightAttr          *bool
	CompatLnSpcAttr      *bool
	PrstTxWarp           *CT_PresetTextShape
	NoAutofit            *CT_TextNoAutofit
	NormAutofit          *CT_TextNormalAutofit
	SpAutoFit            *CT_TextShapeAutofit
	Scene3d              *CT_Scene3D
	Sp3d                 *CT_Shape3D
	FlatTx               *CT_FlatText
	ExtLst               *CT_OfficeArtExtensionList
}

func (_bggga *ST_PresetCameraType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bggga = 0
	case "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074":
		*_bggga = 1
	case "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
		*_bggga = 2
	case "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074":
		*_bggga = 3
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074":
		*_bggga = 4
	case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074":
		*_bggga = 5
	case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074":
		*_bggga = 6
	case "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
		*_bggga = 7
	case "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_bggga = 8
	case "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
		*_bggga = 9
	case "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074":
		*_bggga = 10
	case "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070":
		*_bggga = 11
	case "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t":
		*_bggga = 12
	case "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074":
		*_bggga = 13
	case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074":
		*_bggga = 14
	case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074":
		*_bggga = 15
	case "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074":
		*_bggga = 16
	case "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_bggga = 17
	case "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074":
		*_bggga = 18
	case "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074":
		*_bggga = 19
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070":
		*_bggga = 20
	case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e":
		*_bggga = 21
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070":
		*_bggga = 22
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e":
		*_bggga = 23
	case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070":
		*_bggga = 24
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e":
		*_bggga = 25
	case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070":
		*_bggga = 26
	case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e":
		*_bggga = 27
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074":
		*_bggga = 28
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074":
		*_bggga = 29
	case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070":
		*_bggga = 30
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074":
		*_bggga = 31
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074":
		*_bggga = 32
	case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070":
		*_bggga = 33
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074":
		*_bggga = 34
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074":
		*_bggga = 35
	case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d":
		*_bggga = 36
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074":
		*_bggga = 37
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074":
		*_bggga = 38
	case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d":
		*_bggga = 39
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074":
		*_bggga = 40
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
		*_bggga = 41
	case "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_bggga = 42
	case "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074":
		*_bggga = 43
	case "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074":
		*_bggga = 44
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074":
		*_bggga = 45
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_bggga = 46
	case "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074":
		*_bggga = 47
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074":
		*_bggga = 48
	case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074":
		*_bggga = 49
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074":
		*_bggga = 50
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065":
		*_bggga = 51
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077":
		*_bggga = 52
	case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067":
		*_bggga = 53
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067":
		*_bggga = 54
	case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
		*_bggga = 55
	case "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067":
		*_bggga = 56
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067":
		*_bggga = 57
	case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067":
		*_bggga = 58
	case "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
		*_bggga = 59
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067":
		*_bggga = 60
	case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064":
		*_bggga = 61
	case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079":
		*_bggga = 62
	}
	return nil
}

type VideoFile struct{ CT_VideoFile }

func (_degb *CT_AnimationChartElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _degb.SeriesIdxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073e\u0072\u0069\u0065\u0073\u0049\u0064x"}, Value: _dg.Sprintf("\u0025\u0076", *_degb.SeriesIdxAttr)})
	}
	if _degb.CategoryIdxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "c\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0049\u0064\u0078"}, Value: _dg.Sprintf("\u0025\u0076", *_degb.CategoryIdxAttr)})
	}
	_beg, _cefg := _degb.BldStepAttr.MarshalXMLAttr(_d.Name{Local: "\u0062l\u0064\u0053\u0074\u0065\u0070"})
	if _cefg != nil {
		return _cefg
	}
	start.Attr = append(start.Attr, _beg)
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_GroupLocking() *CT_GroupLocking { _dgbc := &CT_GroupLocking{}; return _dgbc }
func NewCT_GvmlConnectorNonVisual() *CT_GvmlConnectorNonVisual {
	_ffcgf := &CT_GvmlConnectorNonVisual{}
	_ffcgf.CNvPr = NewCT_NonVisualDrawingProps()
	_ffcgf.CNvCxnSpPr = NewCT_NonVisualConnectorProperties()
	return _ffcgf
}

type Tbl struct{ CT_Table }

func (_dcafab *ST_BlackWhiteMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cbabg, _abbed := d.Token()
	if _abbed != nil {
		return _abbed
	}
	if _eabgg, _ecdeb := _cbabg.(_d.EndElement); _ecdeb && _eabgg.Name == start.Name {
		*_dcafab = 1
		return nil
	}
	if _dbdg, _decga := _cbabg.(_d.CharData); !_decga {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbabg)
	} else {
		switch string(_dbdg) {
		case "":
			*_dcafab = 0
		case "\u0063\u006c\u0072":
			*_dcafab = 1
		case "\u0061\u0075\u0074\u006f":
			*_dcafab = 2
		case "\u0067\u0072\u0061\u0079":
			*_dcafab = 3
		case "\u006c\u0074\u0047\u0072\u0061\u0079":
			*_dcafab = 4
		case "\u0069n\u0076\u0047\u0072\u0061\u0079":
			*_dcafab = 5
		case "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e":
			*_dcafab = 6
		case "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y":
			*_dcafab = 7
		case "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065":
			*_dcafab = 8
		case "\u0062\u006c\u0061c\u006b":
			*_dcafab = 9
		case "\u0077\u0068\u0069t\u0065":
			*_dcafab = 10
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_dcafab = 11
		}
	}
	_cbabg, _abbed = d.Token()
	if _abbed != nil {
		return _abbed
	}
	if _ddgac, _bbage := _cbabg.(_d.EndElement); _bbage && _ddgac.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbabg)
}

type CT_TextLineBreak struct{ RPr *CT_TextCharacterProperties }

func (_cbdeb ST_PathFillMode) ValidateWithPath(path string) error {
	switch _cbdeb {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbdeb))
	}
	return nil
}
func (_bcafe *CT_SphereCoords) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bcafe.LatAttr = 0
	_bcafe.LonAttr = 0
	_bcafe.RevAttr = 0
	for _, _aaegc := range start.Attr {
		if _aaegc.Name.Local == "\u006c\u0061\u0074" {
			_afacb, _gcaf := _c.ParseInt(_aaegc.Value, 10, 32)
			if _gcaf != nil {
				return _gcaf
			}
			_bcafe.LatAttr = int32(_afacb)
			continue
		}
		if _aaegc.Name.Local == "\u006c\u006f\u006e" {
			_abfee, _gcaef := _c.ParseInt(_aaegc.Value, 10, 32)
			if _gcaef != nil {
				return _gcaef
			}
			_bcafe.LonAttr = int32(_abfee)
			continue
		}
		if _aaegc.Name.Local == "\u0072\u0065\u0076" {
			_acebf, _baegc := _c.ParseInt(_aaegc.Value, 10, 32)
			if _baegc != nil {
				return _baegc
			}
			_bcafe.RevAttr = int32(_acebf)
			continue
		}
	}
	for {
		_facae, _bcea := d.Token()
		if _bcea != nil {
			return _dg.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u0070\u0068\u0065\u0072\u0065C\u006f\u006f\u0072d\u0073:\u0020\u0025\u0073", _bcea)
		}
		if _ecfee, _dgeg := _facae.(_d.EndElement); _dgeg && _ecfee.Name == start.Name {
			break
		}
	}
	return nil
}

type EG_FillModeProperties struct {
	Tile    *CT_TileInfoProperties
	Stretch *CT_StretchInfoProperties
}

func NewCT_BlipFillProperties() *CT_BlipFillProperties {
	_acbga := &CT_BlipFillProperties{}
	return _acbga
}

// ValidateWithPath validates the CT_PresetLineDashProperties and its children, prefixing error messages with path
func (_babfe *CT_PresetLineDashProperties) ValidateWithPath(path string) error {
	if _beaf := _babfe.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _beaf != nil {
		return _beaf
	}
	return nil
}
func (_aabda *CT_GroupShapeProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cccf := range start.Attr {
		if _cccf.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_aabda.BwModeAttr.UnmarshalXMLAttr(_cccf)
			continue
		}
	}
_ebegd:
	for {
		_cabgg, _aeff := d.Token()
		if _aeff != nil {
			return _aeff
		}
		switch _febf := _cabgg.(type) {
		case _d.StartElement:
			switch _febf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_aabda.Xfrm = NewCT_GroupTransform2D()
				if _bggb := d.DecodeElement(_aabda.Xfrm, &_febf); _bggb != nil {
					return _bggb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_aabda.NoFill = NewCT_NoFillProperties()
				if _gefba := d.DecodeElement(_aabda.NoFill, &_febf); _gefba != nil {
					return _gefba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_aabda.SolidFill = NewCT_SolidColorFillProperties()
				if _ddfda := d.DecodeElement(_aabda.SolidFill, &_febf); _ddfda != nil {
					return _ddfda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_aabda.GradFill = NewCT_GradientFillProperties()
				if _bbacb := d.DecodeElement(_aabda.GradFill, &_febf); _bbacb != nil {
					return _bbacb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_aabda.BlipFill = NewCT_BlipFillProperties()
				if _accfd := d.DecodeElement(_aabda.BlipFill, &_febf); _accfd != nil {
					return _accfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_aabda.PattFill = NewCT_PatternFillProperties()
				if _cegb := d.DecodeElement(_aabda.PattFill, &_febf); _cegb != nil {
					return _cegb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_aabda.GrpFill = NewCT_GroupFillProperties()
				if _fgbgc := d.DecodeElement(_aabda.GrpFill, &_febf); _fgbgc != nil {
					return _fgbgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_aabda.EffectLst = NewCT_EffectList()
				if _gcda := d.DecodeElement(_aabda.EffectLst, &_febf); _gcda != nil {
					return _gcda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_aabda.EffectDag = NewCT_EffectContainer()
				if _dbbbc := d.DecodeElement(_aabda.EffectDag, &_febf); _dbbbc != nil {
					return _dbbbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_aabda.Scene3d = NewCT_Scene3D()
				if _dfafc := d.DecodeElement(_aabda.Scene3d, &_febf); _dfafc != nil {
					return _dfafc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aabda.ExtLst = NewCT_OfficeArtExtensionList()
				if _facc := d.DecodeElement(_aabda.ExtLst, &_febf); _facc != nil {
					return _facc
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070e\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _febf.Name)
				if _cfag := d.Skip(); _cfag != nil {
					return _cfag
				}
			}
		case _d.EndElement:
			break _ebegd
		case _d.CharData:
		}
	}
	return nil
}
func ParseUnionST_Percentage(s string) (ST_Percentage, error) {
	_ddadc := ST_Percentage{}
	if _fe.ST_PercentagePatternRe.MatchString(s) {
		_ddadc.ST_Percentage = &s
	} else {
		_ceebe, _dabfg := _c.ParseInt(s, 10, 64)
		if _dabfg != nil {
			return _ddadc, _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _dabfg)
		}
		_eccde := int32(_ceebe)
		_ddadc.ST_PercentageDecimal = &_eccde
	}
	return _ddadc, nil
}

// Validate validates the CT_TextBulletColorFollowText and its children
func (_dcdda *CT_TextBulletColorFollowText) Validate() error {
	return _dcdda.ValidateWithPath("\u0043\u0054\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0043\u006fl\u006fr\u0046\u006f\u006c\u006c\u006f\u0077\u0054e\u0078\u0074")
}
func NewCT_NonVisualConnectorProperties() *CT_NonVisualConnectorProperties {
	_fffcd := &CT_NonVisualConnectorProperties{}
	return _fffcd
}

// Validate validates the EG_ThemeableEffectStyle and its children
func (_bbdbb *EG_ThemeableEffectStyle) Validate() error {
	return _bbdbb.ValidateWithPath("\u0045\u0047\u005fTh\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065")
}

// ValidateWithPath validates the CT_NonVisualDrawingProps and its children, prefixing error messages with path
func (_fbcd *CT_NonVisualDrawingProps) ValidateWithPath(path string) error {
	if _fbcd.HlinkClick != nil {
		if _ffcc := _fbcd.HlinkClick.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"); _ffcc != nil {
			return _ffcc
		}
	}
	if _fbcd.HlinkHover != nil {
		if _affef := _fbcd.HlinkHover.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"); _affef != nil {
			return _affef
		}
	}
	if _fbcd.ExtLst != nil {
		if _bgea := _fbcd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgea != nil {
			return _bgea
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlConnector and its children, prefixing error messages with path
func (_faefg *CT_GvmlConnector) ValidateWithPath(path string) error {
	if _baebg := _faefg.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _baebg != nil {
		return _baebg
	}
	if _cefgf := _faefg.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _cefgf != nil {
		return _cefgf
	}
	if _faefg.Style != nil {
		if _gadb := _faefg.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _gadb != nil {
			return _gadb
		}
	}
	if _faefg.ExtLst != nil {
		if _eecb := _faefg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eecb != nil {
			return _eecb
		}
	}
	return nil
}
func (_befdf ST_TextFontAlignType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_befdf.String(), start)
}

// ValidateWithPath validates the Tbl and its children, prefixing error messages with path
func (_egdee *Tbl) ValidateWithPath(path string) error {
	if _gbcg := _egdee.CT_Table.ValidateWithPath(path); _gbcg != nil {
		return _gbcg
	}
	return nil
}
func (_cadcba *ST_TextAutonumberScheme) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cadcba = 0
	case "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_cadcba = 1
	case "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_cadcba = 2
	case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_cadcba = 3
	case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_cadcba = 4
	case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_cadcba = 5
	case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_cadcba = 6
	case "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_cadcba = 7
	case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_cadcba = 8
	case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_cadcba = 9
	case "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e":
		*_cadcba = 10
	case "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_cadcba = 11
	case "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_cadcba = 12
	case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_cadcba = 13
	case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_cadcba = 14
	case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_cadcba = 15
	case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_cadcba = 16
	case "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
		*_cadcba = 17
	case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e":
		*_cadcba = 18
	case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e":
		*_cadcba = 19
	case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
		*_cadcba = 20
	case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
		*_cadcba = 21
	case "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064":
		*_cadcba = 22
	case "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e":
		*_cadcba = 23
	case "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064":
		*_cadcba = 24
	case "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e":
		*_cadcba = 25
	case "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
		*_cadcba = 26
	case "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e":
		*_cadcba = 27
	case "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064":
		*_cadcba = 28
	case "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073":
		*_cadcba = 29
	case "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073":
		*_cadcba = 30
	case "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073":
		*_cadcba = 31
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
		*_cadcba = 32
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052":
		*_cadcba = 33
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068":
		*_cadcba = 34
	case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064":
		*_cadcba = 35
	case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052":
		*_cadcba = 36
	case "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_cadcba = 37
	case "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
		*_cadcba = 38
	case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064":
		*_cadcba = 39
	case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052":
		*_cadcba = 40
	case "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064":
		*_cadcba = 41
	}
	return nil
}
func (_eddgdf ST_EffectContainerType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_eddgdf.String(), start)
}
func (_abddc ST_BlackWhiteMode) ValidateWithPath(path string) error {
	switch _abddc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abddc))
	}
	return nil
}
func (_efbg *CT_XYAdjustHandle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_efbg.Pos = NewCT_AdjPoint2D()
	for _, _edaff := range start.Attr {
		if _edaff.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0058" {
			_bfcfcc, _cbabc := _edaff.Value, error(nil)
			if _cbabc != nil {
				return _cbabc
			}
			_efbg.GdRefXAttr = &_bfcfcc
			continue
		}
		if _edaff.Name.Local == "\u006d\u0069\u006e\u0058" {
			_gagedc, _fcage := ParseUnionST_AdjCoordinate(_edaff.Value)
			if _fcage != nil {
				return _fcage
			}
			_efbg.MinXAttr = &_gagedc
			continue
		}
		if _edaff.Name.Local == "\u006d\u0061\u0078\u0058" {
			_ggcbf, _bfgbc := ParseUnionST_AdjCoordinate(_edaff.Value)
			if _bfgbc != nil {
				return _bfgbc
			}
			_efbg.MaxXAttr = &_ggcbf
			continue
		}
		if _edaff.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0059" {
			_gccc, _gaeaea := _edaff.Value, error(nil)
			if _gaeaea != nil {
				return _gaeaea
			}
			_efbg.GdRefYAttr = &_gccc
			continue
		}
		if _edaff.Name.Local == "\u006d\u0069\u006e\u0059" {
			_bdfcg, _cbgbc := ParseUnionST_AdjCoordinate(_edaff.Value)
			if _cbgbc != nil {
				return _cbgbc
			}
			_efbg.MinYAttr = &_bdfcg
			continue
		}
		if _edaff.Name.Local == "\u006d\u0061\u0078\u0059" {
			_efaaa, _dbeae := ParseUnionST_AdjCoordinate(_edaff.Value)
			if _dbeae != nil {
				return _dbeae
			}
			_efbg.MaxYAttr = &_efaaa
			continue
		}
	}
_aacaa:
	for {
		_eedgf, _eaaac := d.Token()
		if _eaaac != nil {
			return _eaaac
		}
		switch _fccce := _eedgf.(type) {
		case _d.StartElement:
			switch _fccce.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _ccdbfe := d.DecodeElement(_efbg.Pos, &_fccce); _ccdbfe != nil {
					return _ccdbfe
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0020\u0025\u0076", _fccce.Name)
				if _dffgf := d.Skip(); _dffgf != nil {
					return _dffgf
				}
			}
		case _d.EndElement:
			break _aacaa
		case _d.CharData:
		}
	}
	return nil
}

type CT_SphereCoords struct {
	LatAttr int32
	LonAttr int32
	RevAttr int32
}

// ValidateWithPath validates the CT_PositiveSize2D and its children, prefixing error messages with path
func (_cede *CT_PositiveSize2D) ValidateWithPath(path string) error {
	if _cede.CxAttr < 0 {
		return _dg.Errorf("\u0025\u0073\u002fm.\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _cede.CxAttr)
	}
	if _cede.CxAttr > 27273042316900 {
		return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0043\u0078\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u0062e \u003c\u003d\u0020\u00327\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u003690\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _cede.CxAttr)
	}
	if _cede.CyAttr < 0 {
		return _dg.Errorf("\u0025\u0073\u002fm.\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _cede.CyAttr)
	}
	if _cede.CyAttr > 27273042316900 {
		return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0043\u0079\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u0062e \u003c\u003d\u0020\u00327\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u003690\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _cede.CyAttr)
	}
	return nil
}
func (_bfagd *CT_GvmlConnectorNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bfagd.CNvPr = NewCT_NonVisualDrawingProps()
	_bfagd.CNvCxnSpPr = NewCT_NonVisualConnectorProperties()
_febfg:
	for {
		_edacd, _eagb := d.Token()
		if _eagb != nil {
			return _eagb
		}
		switch _fecc := _edacd.(type) {
		case _d.StartElement:
			switch _fecc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _dcac := d.DecodeElement(_bfagd.CNvPr, &_fecc); _dcac != nil {
					return _dcac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _edfa := d.DecodeElement(_bfagd.CNvCxnSpPr, &_fecc); _edfa != nil {
					return _edfa
				}
			default:
				_cd.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0043\u006f\u006e\u006ee\u0063t\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073u\u0061l\u0020\u0025v", _fecc.Name)
				if _eecd := d.Skip(); _eecd != nil {
					return _eecd
				}
			}
		case _d.EndElement:
			break _febfg
		case _d.CharData:
		}
	}
	return nil
}
func (_ebcffa ST_AnimationBuildType) String() string {
	switch _ebcffa {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return ""
}
func NewCT_Path2DQuadBezierTo() *CT_Path2DQuadBezierTo {
	_dcgg := &CT_Path2DQuadBezierTo{}
	return _dcgg
}

// Validate validates the CT_Point2D and its children
func (_degga *CT_Point2D) Validate() error {
	return _degga.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044")
}
func (_bgccb *CT_TextBulletSizePoint) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bgccb.ValAttr = 100
	for _, _edbaa := range start.Attr {
		if _edbaa.Name.Local == "\u0076\u0061\u006c" {
			_bfbb, _bffdf := _c.ParseInt(_edbaa.Value, 10, 32)
			if _bffdf != nil {
				return _bffdf
			}
			_bgccb.ValAttr = int32(_bfbb)
			continue
		}
	}
	for {
		_dbcba, _dbceg := d.Token()
		if _dbceg != nil {
			return _dg.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078t\u0042u\u006cl\u0065t\u0053\u0069\u007a\u0065\u0050\u006f\u0069\u006e\u0074\u003a\u0020\u0025\u0073", _dbceg)
		}
		if _fcbbeed, _egbbb := _dbcba.(_d.EndElement); _egbbb && _fcbbeed.Name == start.Name {
			break
		}
	}
	return nil
}
func (_afadc *CT_Headers) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gfafd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0065\u0061\u0064\u0065\u0072"}}
	for _, _bbead := range _afadc.Header {
		e.EncodeElement(_bbead, _gfafd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextTabStop() *CT_TextTabStop { _faad := &CT_TextTabStop{}; return _faad }
func (_aaeg *CT_GradientFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bdbeb := range start.Attr {
		if _bdbeb.Name.Local == "\u0066\u006c\u0069\u0070" {
			_aaeg.FlipAttr.UnmarshalXMLAttr(_bdbeb)
			continue
		}
		if _bdbeb.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_eadb, _adffd := _c.ParseBool(_bdbeb.Value)
			if _adffd != nil {
				return _adffd
			}
			_aaeg.RotWithShapeAttr = &_eadb
			continue
		}
	}
_ceafg:
	for {
		_bgfaf, _fegab := d.Token()
		if _fegab != nil {
			return _fegab
		}
		switch _bcbg := _bgfaf.(type) {
		case _d.StartElement:
			switch _bcbg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073\u004cs\u0074"}:
				_aaeg.GsLst = NewCT_GradientStopList()
				if _acba := d.DecodeElement(_aaeg.GsLst, &_bcbg); _acba != nil {
					return _acba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}:
				_aaeg.Lin = NewCT_LinearShadeProperties()
				if _fggba := d.DecodeElement(_aaeg.Lin, &_bcbg); _fggba != nil {
					return _fggba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_aaeg.Path = NewCT_PathShadeProperties()
				if _gbgbf := d.DecodeElement(_aaeg.Path, &_bcbg); _gbgbf != nil {
					return _gbgbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}:
				_aaeg.TileRect = NewCT_RelativeRect()
				if _dfggc := d.DecodeElement(_aaeg.TileRect, &_bcbg); _dfggc != nil {
					return _dfggc
				}
			default:
				_cd.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0064\u0069\u0065\u006e\u0074F\u0069l\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065s\u0020\u0025v", _bcbg.Name)
				if _eeacc := d.Skip(); _eeacc != nil {
					return _eeacc
				}
			}
		case _d.EndElement:
			break _ceafg
		case _d.CharData:
		}
	}
	return nil
}
func (_gafe *CT_EmbeddedWAVAudioFile) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _dg.Sprintf("\u0025\u0076", _gafe.EmbedAttr)})
	if _gafe.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_gafe.NameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_TextBulletColor and its children, prefixing error messages with path
func (_dfdba *EG_TextBulletColor) ValidateWithPath(path string) error {
	if _dfdba.BuClrTx != nil {
		if _fbgae := _dfdba.BuClrTx.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072\u0054\u0078"); _fbgae != nil {
			return _fbgae
		}
	}
	if _dfdba.BuClr != nil {
		if _ggaa := _dfdba.BuClr.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072"); _ggaa != nil {
			return _ggaa
		}
	}
	return nil
}
func (_ddceb *CT_PositiveFixedAngle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _dg.Sprintf("\u0025\u0076", _ddceb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ecgb *CT_PolarAdjustHandle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ecgb.Pos = NewCT_AdjPoint2D()
	for _, _fbadg := range start.Attr {
		if _fbadg.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0052" {
			_aafff, _fecg := _fbadg.Value, error(nil)
			if _fecg != nil {
				return _fecg
			}
			_ecgb.GdRefRAttr = &_aafff
			continue
		}
		if _fbadg.Name.Local == "\u006d\u0069\u006e\u0052" {
			_caebe, _dedd := ParseUnionST_AdjCoordinate(_fbadg.Value)
			if _dedd != nil {
				return _dedd
			}
			_ecgb.MinRAttr = &_caebe
			continue
		}
		if _fbadg.Name.Local == "\u006d\u0061\u0078\u0052" {
			_dbabe, _afaa := ParseUnionST_AdjCoordinate(_fbadg.Value)
			if _afaa != nil {
				return _afaa
			}
			_ecgb.MaxRAttr = &_dbabe
			continue
		}
		if _fbadg.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0041\u006e\u0067" {
			_cbcdb, _ggcf := _fbadg.Value, error(nil)
			if _ggcf != nil {
				return _ggcf
			}
			_ecgb.GdRefAngAttr = &_cbcdb
			continue
		}
		if _fbadg.Name.Local == "\u006d\u0069\u006e\u0041\u006e\u0067" {
			_eadgc, _cgeae := ParseUnionST_AdjAngle(_fbadg.Value)
			if _cgeae != nil {
				return _cgeae
			}
			_ecgb.MinAngAttr = &_eadgc
			continue
		}
		if _fbadg.Name.Local == "\u006d\u0061\u0078\u0041\u006e\u0067" {
			_fbgeb, _fdfgc := ParseUnionST_AdjAngle(_fbadg.Value)
			if _fdfgc != nil {
				return _fdfgc
			}
			_ecgb.MaxAngAttr = &_fbgeb
			continue
		}
	}
_agebd:
	for {
		_fbefa, _bdbbb := d.Token()
		if _bdbbb != nil {
			return _bdbbb
		}
		switch _dafd := _fbefa.(type) {
		case _d.StartElement:
			switch _dafd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _dbefd := d.DecodeElement(_ecgb.Pos, &_dafd); _dbefd != nil {
					return _dbefd
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0020\u0025\u0076", _dafd.Name)
				if _gacdgd := d.Skip(); _gacdgd != nil {
					return _gacdgd
				}
			}
		case _d.EndElement:
			break _agebd
		case _d.CharData:
		}
	}
	return nil
}
func (_gfa *CT_AnimationChartBuildProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gfa.BldAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u006c\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_gfa.BldAttr)})
	}
	if _gfa.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_gfa.AnimBgAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ThemeManager struct{ CT_EmptyElement }

func (_debbc ST_ColorSchemeIndex) String() string {
	switch _debbc {
	case 0:
		return ""
	case 1:
		return "\u0064\u006b\u0031"
	case 2:
		return "\u006c\u0074\u0031"
	case 3:
		return "\u0064\u006b\u0032"
	case 4:
		return "\u006c\u0074\u0032"
	case 5:
		return "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case 6:
		return "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case 7:
		return "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case 8:
		return "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case 9:
		return "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case 10:
		return "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case 11:
		return "\u0068\u006c\u0069n\u006b"
	case 12:
		return "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	}
	return ""
}

type CT_FontCollection struct {
	Latin  *CT_TextFont
	Ea     *CT_TextFont
	Cs     *CT_TextFont
	Font   []*CT_SupplementalFont
	ExtLst *CT_OfficeArtExtensionList
}

func NewCT_TextUnderlineLineFollowText() *CT_TextUnderlineLineFollowText {
	_aeebd := &CT_TextUnderlineLineFollowText{}
	return _aeebd
}

// Validate validates the CT_NonVisualGroupDrawingShapeProps and its children
func (_eedbb *CT_NonVisualGroupDrawingShapeProps) Validate() error {
	return _eedbb.ValidateWithPath("\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072o\u0075p\u0044r\u0061w\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073")
}

// Validate validates the CT_BlipFillProperties and its children
func (_gebg *CT_BlipFillProperties) Validate() error {
	return _gebg.ValidateWithPath("C\u0054\u005f\u0042\u006cip\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_geagf *CT_DashStopList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_afcg:
	for {
		_addf, _egdf := d.Token()
		if _egdf != nil {
			return _egdf
		}
		switch _afgdg := _addf.(type) {
		case _d.StartElement:
			switch _afgdg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0073"}:
				_dgbe := NewCT_DashStop()
				if _cdff := d.DecodeElement(_dgbe, &_afgdg); _cdff != nil {
					return _cdff
				}
				_geagf.Ds = append(_geagf.Ds, _dgbe)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0073h\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _afgdg.Name)
				if _cgbac := d.Skip(); _cgbac != nil {
					return _cgbac
				}
			}
		case _d.EndElement:
			break _afcg
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_DgmBuildStepUnset ST_DgmBuildStep = 0
	ST_DgmBuildStepSp    ST_DgmBuildStep = 1
	ST_DgmBuildStepBg    ST_DgmBuildStep = 2
)

func (_dace *CT_BackgroundFillStyleList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fbdf:
	for {
		_bgfa, _fea := d.Token()
		if _fea != nil {
			return _fea
		}
		switch _bcbd := _bgfa.(type) {
		case _d.StartElement:
			switch _bcbd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fccg := NewEG_FillProperties()
				_fccg.NoFill = NewCT_NoFillProperties()
				if _bbae := d.DecodeElement(_fccg.NoFill, &_bcbd); _bbae != nil {
					return _bbae
				}
				_dace.EG_FillProperties = append(_dace.EG_FillProperties, _fccg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_eac := NewEG_FillProperties()
				_eac.SolidFill = NewCT_SolidColorFillProperties()
				if _gggb := d.DecodeElement(_eac.SolidFill, &_bcbd); _gggb != nil {
					return _gggb
				}
				_dace.EG_FillProperties = append(_dace.EG_FillProperties, _eac)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_bcc := NewEG_FillProperties()
				_bcc.GradFill = NewCT_GradientFillProperties()
				if _bcba := d.DecodeElement(_bcc.GradFill, &_bcbd); _bcba != nil {
					return _bcba
				}
				_dace.EG_FillProperties = append(_dace.EG_FillProperties, _bcc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_ced := NewEG_FillProperties()
				_ced.BlipFill = NewCT_BlipFillProperties()
				if _fdea := d.DecodeElement(_ced.BlipFill, &_bcbd); _fdea != nil {
					return _fdea
				}
				_dace.EG_FillProperties = append(_dace.EG_FillProperties, _ced)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_dec := NewEG_FillProperties()
				_dec.PattFill = NewCT_PatternFillProperties()
				if _dcc := d.DecodeElement(_dec.PattFill, &_bcbd); _dcc != nil {
					return _dcc
				}
				_dace.EG_FillProperties = append(_dace.EG_FillProperties, _dec)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_ccff := NewEG_FillProperties()
				_ccff.GrpFill = NewCT_GroupFillProperties()
				if _fgbg := d.DecodeElement(_ccff.GrpFill, &_bcbd); _fgbg != nil {
					return _fgbg
				}
				_dace.EG_FillProperties = append(_dace.EG_FillProperties, _ccff)
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0042\u0061c\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bcbd.Name)
				if _bdd := d.Skip(); _bdd != nil {
					return _bdd
				}
			}
		case _d.EndElement:
			break _fbdf
		case _d.CharData:
		}
	}
	return nil
}

type CT_AudioCDTime struct {
	TrackAttr uint8
	TimeAttr  *uint32
}
type CT_LineEndProperties struct {
	TypeAttr ST_LineEndType
	WAttr    ST_LineEndWidth
	LenAttr  ST_LineEndLength
}
type CT_DuotoneEffect struct{ EG_ColorChoice []*EG_ColorChoice }
type CT_GvmlConnectorNonVisual struct {
	CNvPr      *CT_NonVisualDrawingProps
	CNvCxnSpPr *CT_NonVisualConnectorProperties
}

func (_agadc ST_PresetShadowVal) String() string {
	switch _agadc {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0064w\u0031"
	case 2:
		return "\u0073\u0068\u0064w\u0032"
	case 3:
		return "\u0073\u0068\u0064w\u0033"
	case 4:
		return "\u0073\u0068\u0064w\u0034"
	case 5:
		return "\u0073\u0068\u0064w\u0035"
	case 6:
		return "\u0073\u0068\u0064w\u0036"
	case 7:
		return "\u0073\u0068\u0064w\u0037"
	case 8:
		return "\u0073\u0068\u0064w\u0038"
	case 9:
		return "\u0073\u0068\u0064w\u0039"
	case 10:
		return "\u0073\u0068\u0064\u0077\u0031\u0030"
	case 11:
		return "\u0073\u0068\u0064\u0077\u0031\u0031"
	case 12:
		return "\u0073\u0068\u0064\u0077\u0031\u0032"
	case 13:
		return "\u0073\u0068\u0064\u0077\u0031\u0033"
	case 14:
		return "\u0073\u0068\u0064\u0077\u0031\u0034"
	case 15:
		return "\u0073\u0068\u0064\u0077\u0031\u0035"
	case 16:
		return "\u0073\u0068\u0064\u0077\u0031\u0036"
	case 17:
		return "\u0073\u0068\u0064\u0077\u0031\u0037"
	case 18:
		return "\u0073\u0068\u0064\u0077\u0031\u0038"
	case 19:
		return "\u0073\u0068\u0064\u0077\u0031\u0039"
	case 20:
		return "\u0073\u0068\u0064\u0077\u0032\u0030"
	}
	return ""
}
func (_bfadf *CT_TableCol) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bagfc := range start.Attr {
		if _bagfc.Name.Local == "\u0077" {
			_fead, _fdbae := ParseUnionST_Coordinate(_bagfc.Value)
			if _fdbae != nil {
				return _fdbae
			}
			_bfadf.WAttr = _fead
			continue
		}
	}
_deegd:
	for {
		_dbdaa, _geabe := d.Token()
		if _geabe != nil {
			return _geabe
		}
		switch _bcfd := _dbdaa.(type) {
		case _d.StartElement:
			switch _bcfd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bfadf.ExtLst = NewCT_OfficeArtExtensionList()
				if _ccgbg := d.DecodeElement(_bfadf.ExtLst, &_bcfd); _ccgbg != nil {
					return _ccgbg
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0020\u0025\u0076", _bcfd.Name)
				if _afbbc := d.Skip(); _afbbc != nil {
					return _afbbc
				}
			}
		case _d.EndElement:
			break _deegd
		case _d.CharData:
		}
	}
	return nil
}
func (_dbfca *CT_EffectReference) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0065\u0066"}, Value: _dg.Sprintf("\u0025\u0076", _dbfca.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TextTabStopList struct{ Tab []*CT_TextTabStop }

// ValidateWithPath validates the EG_LineFillProperties and its children, prefixing error messages with path
func (_cagca *EG_LineFillProperties) ValidateWithPath(path string) error {
	if _cagca.NoFill != nil {
		if _ageaf := _cagca.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ageaf != nil {
			return _ageaf
		}
	}
	if _cagca.SolidFill != nil {
		if _bffgb := _cagca.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _bffgb != nil {
			return _bffgb
		}
	}
	if _cagca.GradFill != nil {
		if _fbbcd := _cagca.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fbbcd != nil {
			return _fbbcd
		}
	}
	if _cagca.PattFill != nil {
		if _cfegb := _cagca.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _cfegb != nil {
			return _cfegb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RelativeRect and its children, prefixing error messages with path
func (_cfdca *CT_RelativeRect) ValidateWithPath(path string) error {
	if _cfdca.LAttr != nil {
		if _bfaa := _cfdca.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _bfaa != nil {
			return _bfaa
		}
	}
	if _cfdca.TAttr != nil {
		if _cadab := _cfdca.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _cadab != nil {
			return _cadab
		}
	}
	if _cfdca.RAttr != nil {
		if _gecdg := _cfdca.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _gecdg != nil {
			return _gecdg
		}
	}
	if _cfdca.BAttr != nil {
		if _gbafc := _cfdca.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _gbafc != nil {
			return _gbafc
		}
	}
	return nil
}
func (_cece *CT_TileInfoProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cacd := range start.Attr {
		if _cacd.Name.Local == "\u0074\u0078" {
			_dbbde, _dgbda := ParseUnionST_Coordinate(_cacd.Value)
			if _dgbda != nil {
				return _dgbda
			}
			_cece.TxAttr = &_dbbde
			continue
		}
		if _cacd.Name.Local == "\u0074\u0079" {
			_addfc, _gbacad := ParseUnionST_Coordinate(_cacd.Value)
			if _gbacad != nil {
				return _gbacad
			}
			_cece.TyAttr = &_addfc
			continue
		}
		if _cacd.Name.Local == "\u0073\u0078" {
			_ecbae, _caebb := ParseUnionST_Percentage(_cacd.Value)
			if _caebb != nil {
				return _caebb
			}
			_cece.SxAttr = &_ecbae
			continue
		}
		if _cacd.Name.Local == "\u0073\u0079" {
			_decd, _bebef := ParseUnionST_Percentage(_cacd.Value)
			if _bebef != nil {
				return _bebef
			}
			_cece.SyAttr = &_decd
			continue
		}
		if _cacd.Name.Local == "\u0066\u006c\u0069\u0070" {
			_cece.FlipAttr.UnmarshalXMLAttr(_cacd)
			continue
		}
		if _cacd.Name.Local == "\u0061\u006c\u0067\u006e" {
			_cece.AlgnAttr.UnmarshalXMLAttr(_cacd)
			continue
		}
	}
	for {
		_dgcg, _fabc := d.Token()
		if _fabc != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054\u0069\u006c\u0065\u0049\u006e\u0066\u006f\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s\u003a\u0020\u0025\u0073", _fabc)
		}
		if _dbbdee, _gbcda := _dgcg.(_d.EndElement); _gbcda && _dbbdee.Name == start.Name {
			break
		}
	}
	return nil
}
func (_addbe *CT_TextBlipBullet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_addbe.Blip = NewCT_Blip()
_dcbca:
	for {
		_gafbb, _ddab := d.Token()
		if _ddab != nil {
			return _ddab
		}
		switch _eegfd := _gafbb.(type) {
		case _d.StartElement:
			switch _eegfd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}:
				if _ccdab := d.DecodeElement(_addbe.Blip, &_eegfd); _ccdab != nil {
					return _ccdab
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042\u0075\u006c\u006c\u0065\u0074\u0020\u0025\u0076", _eegfd.Name)
				if _ebcg := d.Skip(); _ebcg != nil {
					return _ebcg
				}
			}
		case _d.EndElement:
			break _dcbca
		case _d.CharData:
		}
	}
	return nil
}

type CT_ColorMappingOverrideChoice struct {
	MasterClrMapping   *CT_EmptyElement
	OverrideClrMapping *CT_ColorMapping
}

func (_acaa *CT_GvmlPicture) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gccdde := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006e\u0076\u0050\u0069\u0063\u0050r"}}
	e.EncodeElement(_acaa.NvPicPr, _gccdde)
	_fgfb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_acaa.BlipFill, _fgfb)
	_ebdfa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_acaa.SpPr, _ebdfa)
	if _acaa.Style != nil {
		_dgdbd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_acaa.Style, _dgdbd)
	}
	if _acaa.ExtLst != nil {
		_cebb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_acaa.ExtLst, _cebb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_LineJoinMiterProperties and its children
func (_cgeg *CT_LineJoinMiterProperties) Validate() error {
	return _cgeg.ValidateWithPath("\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006eM\u0069\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

// Validate validates the CT_Point3D and its children
func (_cgefb *CT_Point3D) Validate() error {
	return _cgefb.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044")
}
func NewCT_TextCharacterProperties() *CT_TextCharacterProperties {
	_babef := &CT_TextCharacterProperties{}
	return _babef
}
func (_agaed *CT_Path2DClose) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_acgb, _ebcfa := d.Token()
		if _ebcfa != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0074\u0068\u0032\u0044\u0043\u006c\u006f\u0073\u0065:\u0020\u0025\u0073", _ebcfa)
		}
		if _gagc, _dbcbb := _acgb.(_d.EndElement); _dbcbb && _gagc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_afgd *CT_BlipChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eecf:
	for {
		_gef, _aegf := d.Token()
		if _aegf != nil {
			return _aegf
		}
		switch _gga := _gef.(type) {
		case _d.StartElement:
			switch _gga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_dabgg := NewCT_AlphaBiLevelEffect()
				if _bfa := d.DecodeElement(_dabgg, &_gga); _bfa != nil {
					return _bfa
				}
				_afgd.AlphaBiLevel = append(_afgd.AlphaBiLevel, _dabgg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_gece := NewCT_AlphaCeilingEffect()
				if _fcbf := d.DecodeElement(_gece, &_gga); _fcbf != nil {
					return _fcbf
				}
				_afgd.AlphaCeiling = append(_afgd.AlphaCeiling, _gece)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_bgcf := NewCT_AlphaFloorEffect()
				if _egcg := d.DecodeElement(_bgcf, &_gga); _egcg != nil {
					return _egcg
				}
				_afgd.AlphaFloor = append(_afgd.AlphaFloor, _bgcf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_gdcac := NewCT_AlphaInverseEffect()
				if _fddaf := d.DecodeElement(_gdcac, &_gga); _fddaf != nil {
					return _fddaf
				}
				_afgd.AlphaInv = append(_afgd.AlphaInv, _gdcac)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_eggc := NewCT_AlphaModulateEffect()
				if _gbadb := d.DecodeElement(_eggc, &_gga); _gbadb != nil {
					return _gbadb
				}
				_afgd.AlphaMod = append(_afgd.AlphaMod, _eggc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_bagc := NewCT_AlphaModulateFixedEffect()
				if _fccdb := d.DecodeElement(_bagc, &_gga); _fccdb != nil {
					return _fccdb
				}
				_afgd.AlphaModFix = append(_afgd.AlphaModFix, _bagc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_febd := NewCT_AlphaReplaceEffect()
				if _eefe := d.DecodeElement(_febd, &_gga); _eefe != nil {
					return _eefe
				}
				_afgd.AlphaRepl = append(_afgd.AlphaRepl, _febd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_bce := NewCT_BiLevelEffect()
				if _efcd := d.DecodeElement(_bce, &_gga); _efcd != nil {
					return _efcd
				}
				_afgd.BiLevel = append(_afgd.BiLevel, _bce)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_ccdg := NewCT_BlurEffect()
				if _fcae := d.DecodeElement(_ccdg, &_gga); _fcae != nil {
					return _fcae
				}
				_afgd.Blur = append(_afgd.Blur, _ccdg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_ege := NewCT_ColorChangeEffect()
				if _ebc := d.DecodeElement(_ege, &_gga); _ebc != nil {
					return _ebc
				}
				_afgd.ClrChange = append(_afgd.ClrChange, _ege)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_dbf := NewCT_ColorReplaceEffect()
				if _febg := d.DecodeElement(_dbf, &_gga); _febg != nil {
					return _febg
				}
				_afgd.ClrRepl = append(_afgd.ClrRepl, _dbf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_fgce := NewCT_DuotoneEffect()
				if _bbdf := d.DecodeElement(_fgce, &_gga); _bbdf != nil {
					return _bbdf
				}
				_afgd.Duotone = append(_afgd.Duotone, _fgce)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_daca := NewCT_FillOverlayEffect()
				if _acbge := d.DecodeElement(_daca, &_gga); _acbge != nil {
					return _acbge
				}
				_afgd.FillOverlay = append(_afgd.FillOverlay, _daca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_bfgg := NewCT_GrayscaleEffect()
				if _ecd := d.DecodeElement(_bfgg, &_gga); _ecd != nil {
					return _ecd
				}
				_afgd.Grayscl = append(_afgd.Grayscl, _bfgg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_effba := NewCT_HSLEffect()
				if _bdgf := d.DecodeElement(_effba, &_gga); _bdgf != nil {
					return _bdgf
				}
				_afgd.Hsl = append(_afgd.Hsl, _effba)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_bfcf := NewCT_LuminanceEffect()
				if _cfca := d.DecodeElement(_bfcf, &_gga); _cfca != nil {
					return _cfca
				}
				_afgd.Lum = append(_afgd.Lum, _bfcf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_cefa := NewCT_TintEffect()
				if _gffba := d.DecodeElement(_cefa, &_gga); _gffba != nil {
					return _gffba
				}
				_afgd.Tint = append(_afgd.Tint, _cefa)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042l\u0069\u0070\u0043\u0068\u006f\u0069\u0063\u0065 \u0025\u0076", _gga.Name)
				if _afcb := d.Skip(); _afcb != nil {
					return _afcb
				}
			}
		case _d.EndElement:
			break _eecf
		case _d.CharData:
		}
	}
	return nil
}

// ST_TextSpacingPercentOrPercentString is a union type
type ST_TextSpacingPercentOrPercentString struct {
	ST_TextSpacingPercent *int32
	ST_Percentage         *string
}

func (_feccc *ST_TextPoint) Validate() error { return _feccc.ValidateWithPath("") }
func (_fdfgbd *CT_ShapeProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fdfgbd.BwModeAttr != ST_BlackWhiteModeUnset {
		_cgfcf, _efgfa := _fdfgbd.BwModeAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _efgfa != nil {
			return _efgfa
		}
		start.Attr = append(start.Attr, _cgfcf)
	}
	e.EncodeToken(start)
	if _fdfgbd.Xfrm != nil {
		_bfgfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_fdfgbd.Xfrm, _bfgfc)
	}
	if _fdfgbd.CustGeom != nil {
		_efcff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_fdfgbd.CustGeom, _efcff)
	}
	if _fdfgbd.PrstGeom != nil {
		_fddfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_fdfgbd.PrstGeom, _fddfe)
	}
	if _fdfgbd.NoFill != nil {
		_bcace := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdfgbd.NoFill, _bcace)
	}
	if _fdfgbd.SolidFill != nil {
		_gefdbd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdfgbd.SolidFill, _gefdbd)
	}
	if _fdfgbd.GradFill != nil {
		_afefc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdfgbd.GradFill, _afefc)
	}
	if _fdfgbd.BlipFill != nil {
		_afbdfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdfgbd.BlipFill, _afbdfe)
	}
	if _fdfgbd.PattFill != nil {
		_abegb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdfgbd.PattFill, _abegb)
	}
	if _fdfgbd.GrpFill != nil {
		_aadcf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_fdfgbd.GrpFill, _aadcf)
	}
	if _fdfgbd.Ln != nil {
		_baaef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_fdfgbd.Ln, _baaef)
	}
	if _fdfgbd.EffectLst != nil {
		_fcacad := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdfgbd.EffectLst, _fcacad)
	}
	if _fdfgbd.EffectDag != nil {
		_gdfgc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_fdfgbd.EffectDag, _gdfgc)
	}
	if _fdfgbd.Scene3d != nil {
		_ddbcg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_fdfgbd.Scene3d, _ddbcg)
	}
	if _fdfgbd.Sp3d != nil {
		_gdcgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_fdfgbd.Sp3d, _gdcgd)
	}
	if _fdfgbd.ExtLst != nil {
		_bfca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdfgbd.ExtLst, _bfca)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Color and its children, prefixing error messages with path
func (_dbdd *CT_Color) ValidateWithPath(path string) error {
	if _dbdd.ScrgbClr != nil {
		if _eccd := _dbdd.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _eccd != nil {
			return _eccd
		}
	}
	if _dbdd.SrgbClr != nil {
		if _cceg := _dbdd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _cceg != nil {
			return _cceg
		}
	}
	if _dbdd.HslClr != nil {
		if _cafe := _dbdd.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _cafe != nil {
			return _cafe
		}
	}
	if _dbdd.SysClr != nil {
		if _gffe := _dbdd.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _gffe != nil {
			return _gffe
		}
	}
	if _dbdd.SchemeClr != nil {
		if _bgca := _dbdd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _bgca != nil {
			return _bgca
		}
	}
	if _dbdd.PrstClr != nil {
		if _gbbc := _dbdd.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gbbc != nil {
			return _gbbc
		}
	}
	return nil
}
func (_eefg *CT_BlurEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ddcg := range start.Attr {
		if _ddcg.Name.Local == "\u0072\u0061\u0064" {
			_fdcg, _ggbc := _c.ParseInt(_ddcg.Value, 10, 64)
			if _ggbc != nil {
				return _ggbc
			}
			_eefg.RadAttr = &_fdcg
			continue
		}
		if _ddcg.Name.Local == "\u0067\u0072\u006f\u0077" {
			_ecfb, _eddg := _c.ParseBool(_ddcg.Value)
			if _eddg != nil {
				return _eddg
			}
			_eefg.GrowAttr = &_ecfb
			continue
		}
	}
	for {
		_cdfc, _bddgc := d.Token()
		if _bddgc != nil {
			return _dg.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0042l\u0075r\u0045f\u0066\u0065\u0063\u0074\u003a\u0020\u0025s", _bddgc)
		}
		if _gdac, _aefb := _cdfc.(_d.EndElement); _aefb && _gdac.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bfadg ST_ColorSchemeIndex) Validate() error { return _bfadg.ValidateWithPath("") }
func (_dcfda *CT_GvmlGroupShapeNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dcfda.CNvPr = NewCT_NonVisualDrawingProps()
	_dcfda.CNvGrpSpPr = NewCT_NonVisualGroupDrawingShapeProps()
_cgaaf:
	for {
		_dbee, _ageb := d.Token()
		if _ageb != nil {
			return _ageb
		}
		switch _caeb := _dbee.(type) {
		case _d.StartElement:
			switch _caeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gdeg := d.DecodeElement(_dcfda.CNvPr, &_caeb); _gdeg != nil {
					return _gdeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _ggdcg := d.DecodeElement(_dcfda.CNvGrpSpPr, &_caeb); _ggdcg != nil {
					return _ggdcg
				}
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0047\u0076m\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _caeb.Name)
				if _ffgb := d.Skip(); _ffgb != nil {
					return _ffgb
				}
			}
		case _d.EndElement:
			break _cgaaf
		case _d.CharData:
		}
	}
	return nil
}
func (_adfaf *CT_PresetTextShape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_adfaf.PrstAttr = ST_TextShapeType(1)
	for _, _fbggc := range start.Attr {
		if _fbggc.Name.Local == "\u0070\u0072\u0073\u0074" {
			_adfaf.PrstAttr.UnmarshalXMLAttr(_fbggc)
			continue
		}
	}
_bccfc:
	for {
		_gabd, _cbfea := d.Token()
		if _cbfea != nil {
			return _cbfea
		}
		switch _bcbgc := _gabd.(type) {
		case _d.StartElement:
			switch _bcbgc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_adfaf.AvLst = NewCT_GeomGuideList()
				if _egbdf := d.DecodeElement(_adfaf.AvLst, &_bcbgc); _egbdf != nil {
					return _egbdf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074T\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _bcbgc.Name)
				if _bgeg := d.Skip(); _bgeg != nil {
					return _bgeg
				}
			}
		case _d.EndElement:
			break _bccfc
		case _d.CharData:
		}
	}
	return nil
}
func (_dbbfb *CT_AudioCD) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_dadfb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0074"}}
	e.EncodeElement(_dbbfb.St, _dadfb)
	_dfab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065n\u0064"}}
	e.EncodeElement(_dbbfb.End, _dfab)
	if _dbbfb.ExtLst != nil {
		_aca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dbbfb.ExtLst, _aca)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dabe *CT_LineEndProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gbcd := range start.Attr {
		if _gbcd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dabe.TypeAttr.UnmarshalXMLAttr(_gbcd)
			continue
		}
		if _gbcd.Name.Local == "\u0077" {
			_dabe.WAttr.UnmarshalXMLAttr(_gbcd)
			continue
		}
		if _gbcd.Name.Local == "\u006c\u0065\u006e" {
			_dabe.LenAttr.UnmarshalXMLAttr(_gbcd)
			continue
		}
	}
	for {
		_adgcg, _abed := d.Token()
		if _abed != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065E\u006ed\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _abed)
		}
		if _adfe, _cdgfe := _adgcg.(_d.EndElement); _cdgfe && _adfe.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bbdga ST_PathShadeType) ValidateWithPath(path string) error {
	switch _bbdga {
	case 0, 1, 2, 3:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbdga))
	}
	return nil
}
func (_adddce *EG_TextGeometry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eadccg:
	for {
		_fdgdg, _dfage := d.Token()
		if _dfage != nil {
			return _dfage
		}
		switch _ggacc := _fdgdg.(type) {
		case _d.StartElement:
			switch _ggacc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_adddce.CustGeom = NewCT_CustomGeometry2D()
				if _gacag := d.DecodeElement(_adddce.CustGeom, &_ggacc); _gacag != nil {
					return _gacag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}:
				_adddce.PrstTxWarp = NewCT_PresetTextShape()
				if _dcddf := d.DecodeElement(_adddce.PrstTxWarp, &_ggacc); _dcddf != nil {
					return _dcddf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078t\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0020\u0025\u0076", _ggacc.Name)
				if _egbg := d.Skip(); _egbg != nil {
					return _egbg
				}
			}
		case _d.EndElement:
			break _eadccg
		case _d.CharData:
		}
	}
	return nil
}
func (_defgg *ST_TextAlignType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ecdad, _egafc := d.Token()
	if _egafc != nil {
		return _egafc
	}
	if _deeeb, _dgdec := _ecdad.(_d.EndElement); _dgdec && _deeeb.Name == start.Name {
		*_defgg = 1
		return nil
	}
	if _edfgd, _gcfgf := _ecdad.(_d.CharData); !_gcfgf {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ecdad)
	} else {
		switch string(_edfgd) {
		case "":
			*_defgg = 0
		case "\u006c":
			*_defgg = 1
		case "\u0063\u0074\u0072":
			*_defgg = 2
		case "\u0072":
			*_defgg = 3
		case "\u006a\u0075\u0073\u0074":
			*_defgg = 4
		case "\u006au\u0073\u0074\u004c\u006f\u0077":
			*_defgg = 5
		case "\u0064\u0069\u0073\u0074":
			*_defgg = 6
		case "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074":
			*_defgg = 7
		}
	}
	_ecdad, _egafc = d.Token()
	if _egafc != nil {
		return _egafc
	}
	if _fbafd, _ccbdd := _ecdad.(_d.EndElement); _ccbdd && _fbafd.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ecdad)
}

// ValidateWithPath validates the CT_AlphaReplaceEffect and its children, prefixing error messages with path
func (_aab *CT_AlphaReplaceEffect) ValidateWithPath(path string) error {
	if _cea := _aab.AAttr.ValidateWithPath(path + "\u002f\u0041\u0041\u0074\u0074\u0072"); _cea != nil {
		return _cea
	}
	return nil
}
func (_aecdd *CT_OfficeArtExtension) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0072\u0069"}, Value: _dg.Sprintf("\u0025\u0076", _aecdd.UriAttr)})
	e.EncodeToken(start)
	if _aecdd.Any != nil {
		for _, _dbbd := range _aecdd.Any {
			_dbbd.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_AnimationDgmOnlyBuildTypeUnset     ST_AnimationDgmOnlyBuildType = 0
	ST_AnimationDgmOnlyBuildTypeOne       ST_AnimationDgmOnlyBuildType = 1
	ST_AnimationDgmOnlyBuildTypeLvlOne    ST_AnimationDgmOnlyBuildType = 2
	ST_AnimationDgmOnlyBuildTypeLvlAtOnce ST_AnimationDgmOnlyBuildType = 3
)

func ParseUnionST_AdjAngle(s string) (ST_AdjAngle, error) {
	_dgdad := ST_AdjAngle{}
	_dcfdac, _gfcde := _c.ParseInt(s, 10, 64)
	if _gfcde != nil {
		_dgdad.ST_GeomGuideName = &s
	} else {
		_bgfca := int32(_dcfdac)
		_dgdad.ST_Angle = &_bgfca
	}
	return _dgdad, nil
}

// ValidateWithPath validates the CT_ConnectorLocking and its children, prefixing error messages with path
func (_bdeaa *CT_ConnectorLocking) ValidateWithPath(path string) error {
	if _bdeaa.ExtLst != nil {
		if _ceaa := _bdeaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ceaa != nil {
			return _ceaa
		}
	}
	return nil
}
func (_dccbc *CT_EffectProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ggfc:
	for {
		_ecfc, _acea := d.Token()
		if _acea != nil {
			return _acea
		}
		switch _dada := _ecfc.(type) {
		case _d.StartElement:
			switch _dada.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_dccbc.EffectLst = NewCT_EffectList()
				if _edgc := d.DecodeElement(_dccbc.EffectLst, &_dada); _edgc != nil {
					return _edgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_dccbc.EffectDag = NewCT_EffectContainer()
				if _dagf := d.DecodeElement(_dccbc.EffectDag, &_dada); _dagf != nil {
					return _dagf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dada.Name)
				if _dbdc := d.Skip(); _dbdc != nil {
					return _dbdc
				}
			}
		case _d.EndElement:
			break _ggfc
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_FontReference and its children
func (_dcce *CT_FontReference) Validate() error {
	return _dcce.ValidateWithPath("\u0043\u0054_\u0046\u006f\u006et\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065")
}

type ST_PresetPatternVal byte

// ValidateWithPath validates the CT_VideoFile and its children, prefixing error messages with path
func (_dcfdd *CT_VideoFile) ValidateWithPath(path string) error {
	if _dcfdd.ExtLst != nil {
		if _agdeb := _dcfdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agdeb != nil {
			return _agdeb
		}
	}
	return nil
}
func (_eeaea *CT_RelativeRect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ddfcb := range start.Attr {
		if _ddfcb.Name.Local == "\u006c" {
			_adfbb, _bfcfc := ParseUnionST_Percentage(_ddfcb.Value)
			if _bfcfc != nil {
				return _bfcfc
			}
			_eeaea.LAttr = &_adfbb
			continue
		}
		if _ddfcb.Name.Local == "\u0074" {
			_aggdab, _fdebbf := ParseUnionST_Percentage(_ddfcb.Value)
			if _fdebbf != nil {
				return _fdebbf
			}
			_eeaea.TAttr = &_aggdab
			continue
		}
		if _ddfcb.Name.Local == "\u0072" {
			_bgfac, _fdegb := ParseUnionST_Percentage(_ddfcb.Value)
			if _fdegb != nil {
				return _fdegb
			}
			_eeaea.RAttr = &_bgfac
			continue
		}
		if _ddfcb.Name.Local == "\u0062" {
			_deddb, _bfgaf := ParseUnionST_Percentage(_ddfcb.Value)
			if _bfgaf != nil {
				return _bfgaf
			}
			_eeaea.BAttr = &_deddb
			continue
		}
	}
	for {
		_bdec, _bbgcc := d.Token()
		if _bbgcc != nil {
			return _dg.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006c\u0061\u0074\u0069v\u0065\u0052\u0065c\u0074:\u0020\u0025\u0073", _bbgcc)
		}
		if _dafa, _bbabde := _bdec.(_d.EndElement); _bbabde && _dafa.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ThemeableLineStyle and its children, prefixing error messages with path
func (_geffd *CT_ThemeableLineStyle) ValidateWithPath(path string) error {
	if _geffd.Ln != nil {
		if _dacgga := _geffd.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _dacgga != nil {
			return _dacgga
		}
	}
	if _geffd.LnRef != nil {
		if _bfcad := _geffd.LnRef.ValidateWithPath(path + "\u002f\u004c\u006e\u0052\u0065\u0066"); _bfcad != nil {
			return _bfcad
		}
	}
	return nil
}

type CT_ColorMapping struct {
	Bg1Attr      ST_ColorSchemeIndex
	Tx1Attr      ST_ColorSchemeIndex
	Bg2Attr      ST_ColorSchemeIndex
	Tx2Attr      ST_ColorSchemeIndex
	Accent1Attr  ST_ColorSchemeIndex
	Accent2Attr  ST_ColorSchemeIndex
	Accent3Attr  ST_ColorSchemeIndex
	Accent4Attr  ST_ColorSchemeIndex
	Accent5Attr  ST_ColorSchemeIndex
	Accent6Attr  ST_ColorSchemeIndex
	HlinkAttr    ST_ColorSchemeIndex
	FolHlinkAttr ST_ColorSchemeIndex
	ExtLst       *CT_OfficeArtExtensionList
}

// Validate validates the CT_PatternFillProperties and its children
func (_dffb *CT_PatternFillProperties) Validate() error {
	return _dffb.ValidateWithPath("\u0043T\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_fbaegf ST_TextUnderlineType) String() string {
	switch _fbaegf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0077\u006f\u0072d\u0073"
	case 3:
		return "\u0073\u006e\u0067"
	case 4:
		return "\u0064\u0062\u006c"
	case 5:
		return "\u0068\u0065\u0061v\u0079"
	case 6:
		return "\u0064\u006f\u0074\u0074\u0065\u0064"
	case 7:
		return "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079"
	case 8:
		return "\u0064\u0061\u0073\u0068"
	case 9:
		return "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y"
	case 10:
		return "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067"
	case 11:
		return "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079"
	case 12:
		return "\u0064o\u0074\u0044\u0061\u0073\u0068"
	case 13:
		return "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case 14:
		return "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068"
	case 15:
		return "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case 16:
		return "\u0077\u0061\u0076\u0079"
	case 17:
		return "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y"
	case 18:
		return "\u0077a\u0076\u0079\u0044\u0062\u006c"
	}
	return ""
}

type CT_TextSpacingPercent struct {
	ValAttr ST_TextSpacingPercentOrPercentString
}

// Validate validates the CT_Color and its children
func (_ddbb *CT_Color) Validate() error {
	return _ddbb.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072")
}
func (_dgfge *ST_TextVertOverflowType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dgfge = 0
	case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
		*_dgfge = 1
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073":
		*_dgfge = 2
	case "\u0063\u006c\u0069\u0070":
		*_dgfge = 3
	}
	return nil
}
func NewCT_TextBulletTypefaceFollowText() *CT_TextBulletTypefaceFollowText {
	_efcaf := &CT_TextBulletTypefaceFollowText{}
	return _efcaf
}
func (_aebc *CT_StyleMatrix) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aebc.FillStyleLst = NewCT_FillStyleList()
	_aebc.LnStyleLst = NewCT_LineStyleList()
	_aebc.EffectStyleLst = NewCT_EffectStyleList()
	_aebc.BgFillStyleLst = NewCT_BackgroundFillStyleList()
	for _, _cbecd := range start.Attr {
		if _cbecd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_edbg, _gcea := _cbecd.Value, error(nil)
			if _gcea != nil {
				return _gcea
			}
			_aebc.NameAttr = &_edbg
			continue
		}
	}
_bcgc:
	for {
		_gabfg, _eccgbe := d.Token()
		if _eccgbe != nil {
			return _eccgbe
		}
		switch _dedaa := _gabfg.(type) {
		case _d.StartElement:
			switch _dedaa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}:
				if _bfbcc := d.DecodeElement(_aebc.FillStyleLst, &_dedaa); _bfbcc != nil {
					return _bfbcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}:
				if _cabeb := d.DecodeElement(_aebc.LnStyleLst, &_dedaa); _cabeb != nil {
					return _cabeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}:
				if _ffbde := d.DecodeElement(_aebc.EffectStyleLst, &_dedaa); _ffbde != nil {
					return _ffbde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0046\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0046\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}:
				if _aacde := d.DecodeElement(_aebc.BgFillStyleLst, &_dedaa); _aacde != nil {
					return _aacde
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004d\u0061t\u0072i\u0078\u0020\u0025\u0076", _dedaa.Name)
				if _fgbfdb := d.Skip(); _fgbfdb != nil {
					return _fgbfdb
				}
			}
		case _d.EndElement:
			break _bcgc
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the Blip and its children
func (_ebb *Blip) Validate() error { return _ebb.ValidateWithPath("\u0042\u006c\u0069\u0070") }
func (_ecfaa *CT_FontReference) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_dfgc, _bgdf := _ecfaa.IdxAttr.MarshalXMLAttr(_d.Name{Local: "\u0069\u0064\u0078"})
	if _bgdf != nil {
		return _bgdf
	}
	start.Attr = append(start.Attr, _dfgc)
	e.EncodeToken(start)
	if _ecfaa.ScrgbClr != nil {
		_faba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_ecfaa.ScrgbClr, _faba)
	}
	if _ecfaa.SrgbClr != nil {
		_eabb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_ecfaa.SrgbClr, _eabb)
	}
	if _ecfaa.HslClr != nil {
		_ageea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_ecfaa.HslClr, _ageea)
	}
	if _ecfaa.SysClr != nil {
		_adde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_ecfaa.SysClr, _adde)
	}
	if _ecfaa.SchemeClr != nil {
		_cgbg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_ecfaa.SchemeClr, _cgbg)
	}
	if _ecfaa.PrstClr != nil {
		_gggab := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_ecfaa.PrstClr, _gggab)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cbbcg *CT_PresetLineDashProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cbbcg.ValAttr != ST_PresetLineDashValUnset {
		_eece, _daegb := _cbbcg.ValAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0061\u006c"})
		if _daegb != nil {
			return _daegb
		}
		start.Attr = append(start.Attr, _eece)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_LinearShadeProperties and its children, prefixing error messages with path
func (_cceb *CT_LinearShadeProperties) ValidateWithPath(path string) error {
	if _cceb.AngAttr != nil {
		if *_cceb.AngAttr < 0 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0041\u006eg\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cceb.AngAttr)
		}
		if *_cceb.AngAttr >= 21600000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eA\u006e\u0067\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cceb.AngAttr)
		}
	}
	return nil
}
func (_ccda *CT_LineJoinRound) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_afbee, _dbegg := d.Token()
		if _dbegg != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065J\u006fi\u006e\u0052\u006f\u0075\u006e\u0064\u003a \u0025\u0073", _dbegg)
		}
		if _cefd, _dbef := _afbee.(_d.EndElement); _dbef && _cefd.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_VideoFile() *CT_VideoFile { _ddfab := &CT_VideoFile{}; return _ddfab }

type CT_ThemeableLineStyle struct {
	Ln    *CT_LineProperties
	LnRef *CT_StyleMatrixReference
}

func (_geceg ST_TextPoint) String() string {
	if _geceg.ST_TextPointUnqualified != nil {
		return _dg.Sprintf("\u0025\u0076", *_geceg.ST_TextPointUnqualified)
	}
	if _geceg.ST_UniversalMeasure != nil {
		return _dg.Sprintf("\u0025\u0076", *_geceg.ST_UniversalMeasure)
	}
	return ""
}
func (_efdca ST_DgmBuildStep) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bbeaa := _d.Attr{}
	_bbeaa.Name = name
	switch _efdca {
	case ST_DgmBuildStepUnset:
		_bbeaa.Value = ""
	case ST_DgmBuildStepSp:
		_bbeaa.Value = "\u0073\u0070"
	case ST_DgmBuildStepBg:
		_bbeaa.Value = "\u0062\u0067"
	}
	return _bbeaa, nil
}

// ValidateWithPath validates the CT_PositiveFixedAngle and its children, prefixing error messages with path
func (_aacce *CT_PositiveFixedAngle) ValidateWithPath(path string) error {
	if _aacce.ValAttr < 0 {
		return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _aacce.ValAttr)
	}
	if _aacce.ValAttr >= 21600000 {
		return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eV\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _aacce.ValAttr)
	}
	return nil
}

// ValidateWithPath validates the CT_LineJoinBevel and its children, prefixing error messages with path
func (_gbgdf *CT_LineJoinBevel) ValidateWithPath(path string) error { return nil }
func NewCT_GradientStop() *CT_GradientStop                          { _agdfa := &CT_GradientStop{}; return _agdfa }

// ValidateWithPath validates the EG_ThemeableFontStyles and its children, prefixing error messages with path
func (_bfdde *EG_ThemeableFontStyles) ValidateWithPath(path string) error {
	if _bfdde.Font != nil {
		if _abdgbc := _bfdde.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _abdgbc != nil {
			return _abdgbc
		}
	}
	if _bfdde.FontRef != nil {
		if _fcbfg := _bfdde.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _fcbfg != nil {
			return _fcbfg
		}
	}
	return nil
}

// Validate validates the CT_AudioFile and its children
func (_dbcb *CT_AudioFile) Validate() error {
	return _dbcb.ValidateWithPath("\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065")
}
func NewEG_OfficeArtExtensionList() *EG_OfficeArtExtensionList {
	_aaadbg := &EG_OfficeArtExtensionList{}
	return _aaadbg
}
func NewEG_ColorChoice() *EG_ColorChoice { _acfg := &EG_ColorChoice{}; return _acfg }
func (_ceega ST_LineEndLength) String() string {
	switch _ceega {
	case 0:
		return ""
	case 1:
		return "\u0073\u006d"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u006c\u0067"
	}
	return ""
}
func (_efaaf *CT_Scene3D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_egbdd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0061\u006d\u0065\u0072\u0061"}}
	e.EncodeElement(_efaaf.Camera, _egbdd)
	_deabe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}}
	e.EncodeElement(_efaaf.LightRig, _deabe)
	if _efaaf.Backdrop != nil {
		_fgfbd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}}
		e.EncodeElement(_efaaf.Backdrop, _fgfbd)
	}
	if _efaaf.ExtLst != nil {
		_cbdbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_efaaf.ExtLst, _cbdbb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_adfcc ST_RectAlignment) Validate() error { return _adfcc.ValidateWithPath("") }
func (_fgdd *CT_Hyperlink) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gfgfg := range start.Attr {
		if _gfgfg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gfgfg.Name.Local == "\u0069\u0064" || _gfgfg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gfgfg.Name.Local == "\u0069\u0064" {
			_cfgg, _fggce := _gfgfg.Value, error(nil)
			if _fggce != nil {
				return _fggce
			}
			_fgdd.IdAttr = &_cfgg
			continue
		}
		if _gfgfg.Name.Local == "\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0055\u0072\u006c" {
			_cfdd, _afdf := _gfgfg.Value, error(nil)
			if _afdf != nil {
				return _afdf
			}
			_fgdd.InvalidUrlAttr = &_cfdd
			continue
		}
		if _gfgfg.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_efad, _fdab := _gfgfg.Value, error(nil)
			if _fdab != nil {
				return _fdab
			}
			_fgdd.ActionAttr = &_efad
			continue
		}
		if _gfgfg.Name.Local == "\u0074\u0067\u0074\u0046\u0072\u0061\u006d\u0065" {
			_gaef, _ccadc := _gfgfg.Value, error(nil)
			if _ccadc != nil {
				return _ccadc
			}
			_fgdd.TgtFrameAttr = &_gaef
			continue
		}
		if _gfgfg.Name.Local == "\u0074o\u006f\u006c\u0074\u0069\u0070" {
			_daefb, _deedc := _gfgfg.Value, error(nil)
			if _deedc != nil {
				return _deedc
			}
			_fgdd.TooltipAttr = &_daefb
			continue
		}
		if _gfgfg.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_adddc, _bcdde := _c.ParseBool(_gfgfg.Value)
			if _bcdde != nil {
				return _bcdde
			}
			_fgdd.HistoryAttr = &_adddc
			continue
		}
		if _gfgfg.Name.Local == "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074C\u006c\u0069\u0063\u006b" {
			_ccadca, _egagg := _c.ParseBool(_gfgfg.Value)
			if _egagg != nil {
				return _egagg
			}
			_fgdd.HighlightClickAttr = &_ccadca
			continue
		}
		if _gfgfg.Name.Local == "\u0065\u006e\u0064\u0053\u006e\u0064" {
			_accc, _beea := _c.ParseBool(_gfgfg.Value)
			if _beea != nil {
				return _beea
			}
			_fgdd.EndSndAttr = &_accc
			continue
		}
	}
_bcdec:
	for {
		_efacf, _feefe := d.Token()
		if _feefe != nil {
			return _feefe
		}
		switch _egdcf := _efacf.(type) {
		case _d.StartElement:
			switch _egdcf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}:
				_fgdd.Snd = NewCT_EmbeddedWAVAudioFile()
				if _efag := d.DecodeElement(_fgdd.Snd, &_egdcf); _efag != nil {
					return _efag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgdd.ExtLst = NewCT_OfficeArtExtensionList()
				if _dbgg := d.DecodeElement(_fgdd.ExtLst, &_egdcf); _dbgg != nil {
					return _dbgg
				}
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_H\u0079\u0070e\u0072\u006c\u0069\u006e\u006b\u0020\u0025\u0076", _egdcf.Name)
				if _acef := d.Skip(); _acef != nil {
					return _acef
				}
			}
		case _d.EndElement:
			break _bcdec
		case _d.CharData:
		}
	}
	return nil
}
func (_aeacg *CT_GradientStopList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_edbf:
	for {
		_dbece, _fafgae := d.Token()
		if _fafgae != nil {
			return _fafgae
		}
		switch _cfcab := _dbece.(type) {
		case _d.StartElement:
			switch _cfcab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073"}:
				_dabac := NewCT_GradientStop()
				if _bcfcd := d.DecodeElement(_dabac, &_cfcab); _bcfcd != nil {
					return _bcfcd
				}
				_aeacg.Gs = append(_aeacg.Gs, _dabac)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0064\u0069\u0065\u006etS\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cfcab.Name)
				if _cgafb := d.Skip(); _cgafb != nil {
					return _cgafb
				}
			}
		case _d.EndElement:
			break _edbf
		case _d.CharData:
		}
	}
	return nil
}
func (_gedce ST_TextUnderlineType) ValidateWithPath(path string) error {
	switch _gedce {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gedce))
	}
	return nil
}

type CT_PictureLocking struct {
	NoCropAttr             *bool
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

// ValidateWithPath validates the EG_FillProperties and its children, prefixing error messages with path
func (_bgddf *EG_FillProperties) ValidateWithPath(path string) error {
	if _bgddf.NoFill != nil {
		if _cbagc := _bgddf.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _cbagc != nil {
			return _cbagc
		}
	}
	if _bgddf.SolidFill != nil {
		if _agffd := _bgddf.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _agffd != nil {
			return _agffd
		}
	}
	if _bgddf.GradFill != nil {
		if _fbeca := _bgddf.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fbeca != nil {
			return _fbeca
		}
	}
	if _bgddf.BlipFill != nil {
		if _dafeg := _bgddf.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _dafeg != nil {
			return _dafeg
		}
	}
	if _bgddf.PattFill != nil {
		if _bedcd := _bgddf.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bedcd != nil {
			return _bedcd
		}
	}
	if _bgddf.GrpFill != nil {
		if _bfafde := _bgddf.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _bfafde != nil {
			return _bfafde
		}
	}
	return nil
}

// Validate validates the CT_Path2DList and its children
func (_dgefa *CT_Path2DList) Validate() error {
	return _dgefa.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_AnimationChartElement and its children, prefixing error messages with path
func (_bbfb *CT_AnimationChartElement) ValidateWithPath(path string) error {
	if _bbfb.BldStepAttr == ST_ChartBuildStepUnset {
		return _dg.Errorf("%\u0073\u002f\u0042\u006c\u0064\u0053t\u0065\u0070\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _aee := _bbfb.BldStepAttr.ValidateWithPath(path + "\u002f\u0042\u006cd\u0053\u0074\u0065\u0070\u0041\u0074\u0074\u0072"); _aee != nil {
		return _aee
	}
	return nil
}

// ValidateWithPath validates the CT_BlurEffect and its children, prefixing error messages with path
func (_fcgd *CT_BlurEffect) ValidateWithPath(path string) error {
	if _fcgd.RadAttr != nil {
		if *_fcgd.RadAttr < 0 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fcgd.RadAttr)
		}
		if *_fcgd.RadAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, *_fcgd.RadAttr)
		}
	}
	return nil
}
func NewCT_OuterShadowEffect() *CT_OuterShadowEffect {
	_dfdfc := &CT_OuterShadowEffect{}
	return _dfdfc
}
func (_bbfed ST_TextVerticalType) Validate() error { return _bbfed.ValidateWithPath("") }

// ValidateWithPath validates the ThemeOverride and its children, prefixing error messages with path
func (_gffgc *ThemeOverride) ValidateWithPath(path string) error {
	if _bfccf := _gffgc.CT_BaseStylesOverride.ValidateWithPath(path); _bfccf != nil {
		return _bfccf
	}
	return nil
}

// Validate validates the EG_TextBulletColor and its children
func (_fbbcbe *EG_TextBulletColor) Validate() error {
	return _fbbcbe.ValidateWithPath("\u0045G\u005fT\u0065\u0078\u0074\u0042\u0075l\u006c\u0065t\u0043\u006f\u006c\u006f\u0072")
}

// ValidateWithPath validates the CT_AnimationChartBuildProperties and its children, prefixing error messages with path
func (_gdcd *CT_AnimationChartBuildProperties) ValidateWithPath(path string) error {
	if _gdcd.BldAttr != nil {
		if _agg := _gdcd.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _agg != nil {
			return _agg
		}
	}
	return nil
}
func (_abbc *CT_BlipFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cbbg := range start.Attr {
		if _cbbg.Name.Local == "\u0064\u0070\u0069" {
			_daega, _dbcf := _c.ParseUint(_cbbg.Value, 10, 32)
			if _dbcf != nil {
				return _dbcf
			}
			_edge := uint32(_daega)
			_abbc.DpiAttr = &_edge
			continue
		}
		if _cbbg.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_bgcff, _dbfc := _c.ParseBool(_cbbg.Value)
			if _dbfc != nil {
				return _dbfc
			}
			_abbc.RotWithShapeAttr = &_bgcff
			continue
		}
	}
_fgfd:
	for {
		_eeg, _ebd := d.Token()
		if _ebd != nil {
			return _ebd
		}
		switch _gcfe := _eeg.(type) {
		case _d.StartElement:
			switch _gcfe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}:
				_abbc.Blip = NewCT_Blip()
				if _dbede := d.DecodeElement(_abbc.Blip, &_gcfe); _dbede != nil {
					return _dbede
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0063\u0052\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0063\u0052\u0065\u0063\u0074"}:
				_abbc.SrcRect = NewCT_RelativeRect()
				if _edga := d.DecodeElement(_abbc.SrcRect, &_gcfe); _edga != nil {
					return _edga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}:
				_abbc.Tile = NewCT_TileInfoProperties()
				if _fgbgg := d.DecodeElement(_abbc.Tile, &_gcfe); _fgbgg != nil {
					return _fgbgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}:
				_abbc.Stretch = NewCT_StretchInfoProperties()
				if _fgfe := d.DecodeElement(_abbc.Stretch, &_gcfe); _fgfe != nil {
					return _fgfe
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0042\u006c\u0069\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gcfe.Name)
				if _cfaf := d.Skip(); _cfaf != nil {
					return _cfaf
				}
			}
		case _d.EndElement:
			break _fgfd
		case _d.CharData:
		}
	}
	return nil
}

type CT_TableStyleCellStyle struct {
	TcBdr   *CT_TableCellBorderStyle
	Fill    *CT_FillProperties
	FillRef *CT_StyleMatrixReference
	Cell3D  *CT_Cell3D
}
type CT_HSLEffect struct {
	HueAttr *int32
	SatAttr *ST_FixedPercentage
	LumAttr *ST_FixedPercentage
}

func (_ccbed ST_PitchFamily) Validate() error { return _ccbed.ValidateWithPath("") }

// Validate validates the CT_NonVisualConnectorProperties and its children
func (_ggadd *CT_NonVisualConnectorProperties) Validate() error {
	return _ggadd.ValidateWithPath("\u0043\u0054\u005fN\u006f\u006e\u0056\u0069s\u0075\u0061\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u006f\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_TableStyleTextStyle struct {
	BAttr     ST_OnOffStyleType
	IAttr     ST_OnOffStyleType
	Font      *CT_FontCollection
	FontRef   *CT_FontReference
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
	ExtLst    *CT_OfficeArtExtensionList
}

func (_acacd ST_TextHorzOverflowType) ValidateWithPath(path string) error {
	switch _acacd {
	case 0, 1, 2:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acacd))
	}
	return nil
}

// ValidateWithPath validates the CT_SupplementalFont and its children, prefixing error messages with path
func (_edgdbc *CT_SupplementalFont) ValidateWithPath(path string) error { return nil }
func (_adcbf *ST_BlipCompression) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_faaece, _fecdc := d.Token()
	if _fecdc != nil {
		return _fecdc
	}
	if _acgde, _abagd := _faaece.(_d.EndElement); _abagd && _acgde.Name == start.Name {
		*_adcbf = 1
		return nil
	}
	if _abdgbe, _ecbad := _faaece.(_d.CharData); !_ecbad {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _faaece)
	} else {
		switch string(_abdgbe) {
		case "":
			*_adcbf = 0
		case "\u0065\u006d\u0061i\u006c":
			*_adcbf = 1
		case "\u0073\u0063\u0072\u0065\u0065\u006e":
			*_adcbf = 2
		case "\u0070\u0072\u0069n\u0074":
			*_adcbf = 3
		case "\u0068q\u0070\u0072\u0069\u006e\u0074":
			*_adcbf = 4
		case "\u006e\u006f\u006e\u0065":
			*_adcbf = 5
		}
	}
	_faaece, _fecdc = d.Token()
	if _fecdc != nil {
		return _fecdc
	}
	if _geefg, _eabege := _faaece.(_d.EndElement); _eabege && _geefg.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _faaece)
}
func (_defff *CT_TableStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_defff.StyleIdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _bbgafd := range start.Attr {
		if _bbgafd.Name.Local == "\u0073t\u0079\u006c\u0065\u004e\u0061\u006de" {
			_egdfee, _beabf := _bbgafd.Value, error(nil)
			if _beabf != nil {
				return _beabf
			}
			_defff.StyleNameAttr = _egdfee
			continue
		}
		if _bbgafd.Name.Local == "\u0073t\u0079\u006c\u0065\u0049\u0064" {
			_cfdfed, _fbcb := _bbgafd.Value, error(nil)
			if _fbcb != nil {
				return _fbcb
			}
			_defff.StyleIdAttr = _cfdfed
			continue
		}
	}
_cfda:
	for {
		_gbcfg, _geac := d.Token()
		if _geac != nil {
			return _geac
		}
		switch _dfcgf := _gbcfg.(type) {
		case _d.StartElement:
			switch _dfcgf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cB\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cB\u0067"}:
				_defff.TblBg = NewCT_TableBackgroundStyle()
				if _dcfbdg := d.DecodeElement(_defff.TblBg, &_dfcgf); _dcfbdg != nil {
					return _dcfbdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}:
				_defff.WholeTbl = NewCT_TablePartStyle()
				if _fbaae := d.DecodeElement(_defff.WholeTbl, &_dfcgf); _fbaae != nil {
					return _fbaae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0048"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0048"}:
				_defff.Band1H = NewCT_TablePartStyle()
				if _ecece := d.DecodeElement(_defff.Band1H, &_dfcgf); _ecece != nil {
					return _ecece
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0048"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0048"}:
				_defff.Band2H = NewCT_TablePartStyle()
				if _badbd := d.DecodeElement(_defff.Band2H, &_dfcgf); _badbd != nil {
					return _badbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0056"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0056"}:
				_defff.Band1V = NewCT_TablePartStyle()
				if _ddbag := d.DecodeElement(_defff.Band1V, &_dfcgf); _ddbag != nil {
					return _ddbag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0056"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0056"}:
				_defff.Band2V = NewCT_TablePartStyle()
				if _efddc := d.DecodeElement(_defff.Band2V, &_dfcgf); _efddc != nil {
					return _efddc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}:
				_defff.LastCol = NewCT_TablePartStyle()
				if _affaf := d.DecodeElement(_defff.LastCol, &_dfcgf); _affaf != nil {
					return _affaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}:
				_defff.FirstCol = NewCT_TablePartStyle()
				if _gbbdc := d.DecodeElement(_defff.FirstCol, &_dfcgf); _gbbdc != nil {
					return _gbbdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}:
				_defff.LastRow = NewCT_TablePartStyle()
				if _cgbag := d.DecodeElement(_defff.LastRow, &_dfcgf); _cgbag != nil {
					return _cgbag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0043\u0065\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0043\u0065\u006c\u006c"}:
				_defff.SeCell = NewCT_TablePartStyle()
				if _egcebca := d.DecodeElement(_defff.SeCell, &_dfcgf); _egcebca != nil {
					return _egcebca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0077\u0043\u0065\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0077\u0043\u0065\u006c\u006c"}:
				_defff.SwCell = NewCT_TablePartStyle()
				if _cdcbg := d.DecodeElement(_defff.SwCell, &_dfcgf); _cdcbg != nil {
					return _cdcbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}:
				_defff.FirstRow = NewCT_TablePartStyle()
				if _dedde := d.DecodeElement(_defff.FirstRow, &_dfcgf); _dedde != nil {
					return _dedde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0065\u0043\u0065\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0065\u0043\u0065\u006c\u006c"}:
				_defff.NeCell = NewCT_TablePartStyle()
				if _aacgb := d.DecodeElement(_defff.NeCell, &_dfcgf); _aacgb != nil {
					return _aacgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0077\u0043\u0065\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0077\u0043\u0065\u006c\u006c"}:
				_defff.NwCell = NewCT_TablePartStyle()
				if _edagca := d.DecodeElement(_defff.NwCell, &_dfcgf); _edagca != nil {
					return _edagca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_defff.ExtLst = NewCT_OfficeArtExtensionList()
				if _edbfb := d.DecodeElement(_defff.ExtLst, &_dfcgf); _edbfb != nil {
					return _edbfb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _dfcgf.Name)
				if _gdgc := d.Skip(); _gdgc != nil {
					return _gdgc
				}
			}
		case _d.EndElement:
			break _cfda
		case _d.CharData:
		}
	}
	return nil
}
func (_dagdg *ST_TextWrappingType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dagdg = 0
	case "\u006e\u006f\u006e\u0065":
		*_dagdg = 1
	case "\u0073\u0071\u0075\u0061\u0072\u0065":
		*_dagdg = 2
	}
	return nil
}

// ValidateWithPath validates the CT_TextTabStop and its children, prefixing error messages with path
func (_gbfff *CT_TextTabStop) ValidateWithPath(path string) error {
	if _gbfff.PosAttr != nil {
		if _cgcfe := _gbfff.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _cgcfe != nil {
			return _cgcfe
		}
	}
	if _cfedc := _gbfff.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _cfedc != nil {
		return _cfedc
	}
	return nil
}

// ValidateWithPath validates the CT_PositiveFixedPercentage and its children, prefixing error messages with path
func (_bfgd *CT_PositiveFixedPercentage) ValidateWithPath(path string) error {
	if _aecbd := _bfgd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _aecbd != nil {
		return _aecbd
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlGroupShapeNonVisual and its children, prefixing error messages with path
func (_dacc *CT_GvmlGroupShapeNonVisual) ValidateWithPath(path string) error {
	if _ceeda := _dacc.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _ceeda != nil {
		return _ceeda
	}
	if _cacac := _dacc.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _cacac != nil {
		return _cacac
	}
	return nil
}
func (_aeefe ST_PresetMaterialType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_acfaf := _d.Attr{}
	_acfaf.Name = name
	switch _aeefe {
	case ST_PresetMaterialTypeUnset:
		_acfaf.Value = ""
	case ST_PresetMaterialTypeLegacyMatte:
		_acfaf.Value = "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065"
	case ST_PresetMaterialTypeLegacyPlastic:
		_acfaf.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063"
	case ST_PresetMaterialTypeLegacyMetal:
		_acfaf.Value = "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c"
	case ST_PresetMaterialTypeLegacyWireframe:
		_acfaf.Value = "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065"
	case ST_PresetMaterialTypeMatte:
		_acfaf.Value = "\u006d\u0061\u0074t\u0065"
	case ST_PresetMaterialTypePlastic:
		_acfaf.Value = "\u0070l\u0061\u0073\u0074\u0069\u0063"
	case ST_PresetMaterialTypeMetal:
		_acfaf.Value = "\u006d\u0065\u0074a\u006c"
	case ST_PresetMaterialTypeWarmMatte:
		_acfaf.Value = "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e"
	case ST_PresetMaterialTypeTranslucentPowder:
		_acfaf.Value = "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072"
	case ST_PresetMaterialTypePowder:
		_acfaf.Value = "\u0070\u006f\u0077\u0064\u0065\u0072"
	case ST_PresetMaterialTypeDkEdge:
		_acfaf.Value = "\u0064\u006b\u0045\u0064\u0067\u0065"
	case ST_PresetMaterialTypeSoftEdge:
		_acfaf.Value = "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"
	case ST_PresetMaterialTypeClear:
		_acfaf.Value = "\u0063\u006c\u0065a\u0072"
	case ST_PresetMaterialTypeFlat:
		_acfaf.Value = "\u0066\u006c\u0061\u0074"
	case ST_PresetMaterialTypeSoftmetal:
		_acfaf.Value = "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l"
	}
	return _acfaf, nil
}
func (_fdeeg *CT_GvmlGraphicalObjectFrame) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fdeeg.NvGraphicFramePr = NewCT_GvmlGraphicFrameNonVisual()
	_fdeeg.Graphic = NewGraphic()
	_fdeeg.Xfrm = NewCT_Transform2D()
_ecdab:
	for {
		_fgced, _badec := d.Token()
		if _badec != nil {
			return _badec
		}
		switch _dbgfd := _fgced.(type) {
		case _d.StartElement:
			switch _dbgfd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _dccdd := d.DecodeElement(_fdeeg.NvGraphicFramePr, &_dbgfd); _dccdd != nil {
					return _dccdd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _cfffa := d.DecodeElement(_fdeeg.Graphic, &_dbgfd); _cfffa != nil {
					return _cfffa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				if _eaabg := d.DecodeElement(_fdeeg.Xfrm, &_dbgfd); _eaabg != nil {
					return _eaabg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdeeg.ExtLst = NewCT_OfficeArtExtensionList()
				if _deebad := d.DecodeElement(_fdeeg.ExtLst, &_dbgfd); _deebad != nil {
					return _deebad
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0047\u0076\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065c\u0074\u0046\u0072\u0061\u006d\u0065\u0020\u0025\u0076", _dbgfd.Name)
				if _cdac := d.Skip(); _cdac != nil {
					return _cdac
				}
			}
		case _d.EndElement:
			break _ecdab
		case _d.CharData:
		}
	}
	return nil
}
func (_acbfc *CT_GvmlTextShapeChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _acbfc.UseSpRect != nil {
		_bfge := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0075\u0073\u0065\u0053\u0070\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_acbfc.UseSpRect, _bfge)
	}
	if _acbfc.Xfrm != nil {
		_ddbgag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_acbfc.Xfrm, _ddbgag)
	}
	return nil
}

type CT_Path2DLineTo struct{ Pt *CT_AdjPoint2D }

// Validate validates the EG_TextUnderlineLine and its children
func (_aafdf *EG_TextUnderlineLine) Validate() error {
	return _aafdf.ValidateWithPath("E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Li\u006e\u0065")
}

// ValidateWithPath validates the CT_Boolean and its children, prefixing error messages with path
func (_eaef *CT_Boolean) ValidateWithPath(path string) error {
	if _eaef.ValAttr != nil {
		if _eeea := _eaef.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _eeea != nil {
			return _eeea
		}
	}
	return nil
}
func (_daaad *CT_SupplementalFont) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0063\u0072\u0069\u0070\u0074"}, Value: _dg.Sprintf("\u0025\u0076", _daaad.ScriptAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065"}, Value: _dg.Sprintf("\u0025\u0076", _daaad.TypefaceAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_StyleMatrixReference struct {
	IdxAttr   uint32
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}
type EG_FillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func (_eagc ST_TextCapsType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_daebe := _d.Attr{}
	_daebe.Name = name
	switch _eagc {
	case ST_TextCapsTypeUnset:
		_daebe.Value = ""
	case ST_TextCapsTypeNone:
		_daebe.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextCapsTypeSmall:
		_daebe.Value = "\u0073\u006d\u0061l\u006c"
	case ST_TextCapsTypeAll:
		_daebe.Value = "\u0061\u006c\u006c"
	}
	return _daebe, nil
}
func (_bfabb *CT_QuickTimeFile) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _dg.Sprintf("\u0025\u0076", _bfabb.LinkAttr)})
	e.EncodeToken(start)
	if _bfabb.ExtLst != nil {
		_eaacab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bfabb.ExtLst, _eaacab)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewEG_Media() *EG_Media { _cbadcd := &EG_Media{}; return _cbadcd }
func (_deadd *ST_SystemColorVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eebee, _bdbaed := d.Token()
	if _bdbaed != nil {
		return _bdbaed
	}
	if _bfagb, _bdgbf := _eebee.(_d.EndElement); _bdgbf && _bfagb.Name == start.Name {
		*_deadd = 1
		return nil
	}
	if _deag, _fdafb := _eebee.(_d.CharData); !_fdafb {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eebee)
	} else {
		switch string(_deag) {
		case "":
			*_deadd = 0
		case "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r":
			*_deadd = 1
		case "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064":
			*_deadd = 2
		case "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_deadd = 3
		case "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_deadd = 4
		case "\u006d\u0065\u006e\u0075":
			*_deadd = 5
		case "\u0077\u0069\u006e\u0064\u006f\u0077":
			*_deadd = 6
		case "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065":
			*_deadd = 7
		case "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074":
			*_deadd = 8
		case "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074":
			*_deadd = 9
		case "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_deadd = 10
		case "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072":
			*_deadd = 11
		case "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072":
			*_deadd = 12
		case "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065":
			*_deadd = 13
		case "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t":
			*_deadd = 14
		case "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074":
			*_deadd = 15
		case "\u0062t\u006e\u0046\u0061\u0063\u0065":
			*_deadd = 16
		case "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw":
			*_deadd = 17
		case "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074":
			*_deadd = 18
		case "\u0062t\u006e\u0054\u0065\u0078\u0074":
			*_deadd = 19
		case "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_deadd = 20
		case "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
			*_deadd = 21
		case "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077":
			*_deadd = 22
		case "\u0033d\u004c\u0069\u0067\u0068\u0074":
			*_deadd = 23
		case "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074":
			*_deadd = 24
		case "\u0069\u006e\u0066\u006f\u0042\u006b":
			*_deadd = 25
		case "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074":
			*_deadd = 26
		case "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e":
			*_deadd = 27
		case "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_deadd = 28
		case "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
			*_deadd = 29
		case "\u006de\u006e\u0075\u0042\u0061\u0072":
			*_deadd = 30
		}
	}
	_eebee, _bdbaed = d.Token()
	if _bdbaed != nil {
		return _bdbaed
	}
	if _fddgc, _aabbd := _eebee.(_d.EndElement); _aabbd && _fddgc.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eebee)
}
func NewCT_GeomRect() *CT_GeomRect                     { _cadbb := &CT_GeomRect{}; return _cadbb }
func NewCT_AlphaInverseEffect() *CT_AlphaInverseEffect { _af := &CT_AlphaInverseEffect{}; return _af }

type ST_EffectContainerType byte

// ValidateWithPath validates the CT_GroupShapeProperties and its children, prefixing error messages with path
func (_aaab *CT_GroupShapeProperties) ValidateWithPath(path string) error {
	if _cbgb := _aaab.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _cbgb != nil {
		return _cbgb
	}
	if _aaab.Xfrm != nil {
		if _geeb := _aaab.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _geeb != nil {
			return _geeb
		}
	}
	if _aaab.NoFill != nil {
		if _caggf := _aaab.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _caggf != nil {
			return _caggf
		}
	}
	if _aaab.SolidFill != nil {
		if _ccaf := _aaab.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _ccaf != nil {
			return _ccaf
		}
	}
	if _aaab.GradFill != nil {
		if _agaff := _aaab.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _agaff != nil {
			return _agaff
		}
	}
	if _aaab.BlipFill != nil {
		if _fcafc := _aaab.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _fcafc != nil {
			return _fcafc
		}
	}
	if _aaab.PattFill != nil {
		if _abdde := _aaab.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _abdde != nil {
			return _abdde
		}
	}
	if _aaab.GrpFill != nil {
		if _feedg := _aaab.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _feedg != nil {
			return _feedg
		}
	}
	if _aaab.EffectLst != nil {
		if _afbeb := _aaab.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _afbeb != nil {
			return _afbeb
		}
	}
	if _aaab.EffectDag != nil {
		if _ecgd := _aaab.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _ecgd != nil {
			return _ecgd
		}
	}
	if _aaab.Scene3d != nil {
		if _efeb := _aaab.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _efeb != nil {
			return _efeb
		}
	}
	if _aaab.ExtLst != nil {
		if _fbaf := _aaab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbaf != nil {
			return _fbaf
		}
	}
	return nil
}

// Validate validates the CT_EffectContainer and its children
func (_agee *CT_EffectContainer) Validate() error {
	return _agee.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074C\u006f\u006et\u0061\u0069\u006e\u0065\u0072")
}
func (_ggdbgf *ST_SystemColorVal) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ggdbgf = 0
	case "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r":
		*_ggdbgf = 1
	case "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064":
		*_ggdbgf = 2
	case "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_ggdbgf = 3
	case "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_ggdbgf = 4
	case "\u006d\u0065\u006e\u0075":
		*_ggdbgf = 5
	case "\u0077\u0069\u006e\u0064\u006f\u0077":
		*_ggdbgf = 6
	case "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065":
		*_ggdbgf = 7
	case "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074":
		*_ggdbgf = 8
	case "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074":
		*_ggdbgf = 9
	case "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_ggdbgf = 10
	case "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072":
		*_ggdbgf = 11
	case "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072":
		*_ggdbgf = 12
	case "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065":
		*_ggdbgf = 13
	case "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t":
		*_ggdbgf = 14
	case "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074":
		*_ggdbgf = 15
	case "\u0062t\u006e\u0046\u0061\u0063\u0065":
		*_ggdbgf = 16
	case "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw":
		*_ggdbgf = 17
	case "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074":
		*_ggdbgf = 18
	case "\u0062t\u006e\u0054\u0065\u0078\u0074":
		*_ggdbgf = 19
	case "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_ggdbgf = 20
	case "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
		*_ggdbgf = 21
	case "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077":
		*_ggdbgf = 22
	case "\u0033d\u004c\u0069\u0067\u0068\u0074":
		*_ggdbgf = 23
	case "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074":
		*_ggdbgf = 24
	case "\u0069\u006e\u0066\u006f\u0042\u006b":
		*_ggdbgf = 25
	case "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074":
		*_ggdbgf = 26
	case "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e":
		*_ggdbgf = 27
	case "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_ggdbgf = 28
	case "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
		*_ggdbgf = 29
	case "\u006de\u006e\u0075\u0042\u0061\u0072":
		*_ggdbgf = 30
	}
	return nil
}

// ValidateWithPath validates the CT_StyleMatrixReference and its children, prefixing error messages with path
func (_cegbd *CT_StyleMatrixReference) ValidateWithPath(path string) error {
	if _cegbd.ScrgbClr != nil {
		if _agdaa := _cegbd.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _agdaa != nil {
			return _agdaa
		}
	}
	if _cegbd.SrgbClr != nil {
		if _ccabe := _cegbd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _ccabe != nil {
			return _ccabe
		}
	}
	if _cegbd.HslClr != nil {
		if _decfc := _cegbd.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _decfc != nil {
			return _decfc
		}
	}
	if _cegbd.SysClr != nil {
		if _beace := _cegbd.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _beace != nil {
			return _beace
		}
	}
	if _cegbd.SchemeClr != nil {
		if _bagf := _cegbd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _bagf != nil {
			return _bagf
		}
	}
	if _cegbd.PrstClr != nil {
		if _bgdae := _cegbd.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _bgdae != nil {
			return _bgdae
		}
	}
	return nil
}
func (_cadde *EG_FillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_decfb:
	for {
		_fgdff, _fgbca := d.Token()
		if _fgbca != nil {
			return _fgbca
		}
		switch _eefbb := _fgdff.(type) {
		case _d.StartElement:
			switch _eefbb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_cadde.NoFill = NewCT_NoFillProperties()
				if _faaag := d.DecodeElement(_cadde.NoFill, &_eefbb); _faaag != nil {
					return _faaag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_cadde.SolidFill = NewCT_SolidColorFillProperties()
				if _ccdbb := d.DecodeElement(_cadde.SolidFill, &_eefbb); _ccdbb != nil {
					return _ccdbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_cadde.GradFill = NewCT_GradientFillProperties()
				if _ddgdd := d.DecodeElement(_cadde.GradFill, &_eefbb); _ddgdd != nil {
					return _ddgdd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_cadde.BlipFill = NewCT_BlipFillProperties()
				if _ebabb := d.DecodeElement(_cadde.BlipFill, &_eefbb); _ebabb != nil {
					return _ebabb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_cadde.PattFill = NewCT_PatternFillProperties()
				if _gfdgc := d.DecodeElement(_cadde.PattFill, &_eefbb); _gfdgc != nil {
					return _gfdgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_cadde.GrpFill = NewCT_GroupFillProperties()
				if _dbaef := d.DecodeElement(_cadde.GrpFill, &_eefbb); _dbaef != nil {
					return _dbaef
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _eefbb.Name)
				if _fcbebb := d.Skip(); _fcbebb != nil {
					return _fcbebb
				}
			}
		case _d.EndElement:
			break _decfb
		case _d.CharData:
		}
	}
	return nil
}
func (_dacfde *EG_TextBullet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dacfde.BuNone != nil {
		_fegce := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u004e\u006f\u006e\u0065"}}
		e.EncodeElement(_dacfde.BuNone, _fegce)
	}
	if _dacfde.BuAutoNum != nil {
		_fcgge := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0062\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"}}
		e.EncodeElement(_dacfde.BuAutoNum, _fcgge)
	}
	if _dacfde.BuChar != nil {
		_geec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0043\u0068\u0061\u0072"}}
		e.EncodeElement(_dacfde.BuChar, _geec)
	}
	if _dacfde.BuBlip != nil {
		_fbcec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0042\u006c\u0069\u0070"}}
		e.EncodeElement(_dacfde.BuBlip, _fbcec)
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlGroupShape and its children, prefixing error messages with path
func (_gcee *CT_GvmlGroupShape) ValidateWithPath(path string) error {
	if _edce := _gcee.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _edce != nil {
		return _edce
	}
	if _daaed := _gcee.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _daaed != nil {
		return _daaed
	}
	for _deab, _cedgc := range _gcee.Choice {
		if _dbbc := _cedgc.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _deab)); _dbbc != nil {
			return _dbbc
		}
	}
	if _gcee.ExtLst != nil {
		if _dceda := _gcee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dceda != nil {
			return _dceda
		}
	}
	return nil
}

type CT_Transform2D struct {
	RotAttr   *int32
	FlipHAttr *bool
	FlipVAttr *bool
	Off       *CT_Point2D
	Ext       *CT_PositiveSize2D
}

func NewCT_TableCell() *CT_TableCell { _edebfa := &CT_TableCell{}; return _edebfa }

// ValidateWithPath validates the CT_TableStyleTextStyle and its children, prefixing error messages with path
func (_eebg *CT_TableStyleTextStyle) ValidateWithPath(path string) error {
	if _fagga := _eebg.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _fagga != nil {
		return _fagga
	}
	if _eecfae := _eebg.IAttr.ValidateWithPath(path + "\u002f\u0049\u0041\u0074\u0074\u0072"); _eecfae != nil {
		return _eecfae
	}
	if _eebg.Font != nil {
		if _dggeg := _eebg.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _dggeg != nil {
			return _dggeg
		}
	}
	if _eebg.FontRef != nil {
		if _bcbfb := _eebg.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _bcbfb != nil {
			return _bcbfb
		}
	}
	if _eebg.ScrgbClr != nil {
		if _gddeb := _eebg.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _gddeb != nil {
			return _gddeb
		}
	}
	if _eebg.SrgbClr != nil {
		if _ebbfg := _eebg.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _ebbfg != nil {
			return _ebbfg
		}
	}
	if _eebg.HslClr != nil {
		if _eefag := _eebg.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _eefag != nil {
			return _eefag
		}
	}
	if _eebg.SysClr != nil {
		if _gggac := _eebg.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _gggac != nil {
			return _gggac
		}
	}
	if _eebg.SchemeClr != nil {
		if _bfbdf := _eebg.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _bfbdf != nil {
			return _bfbdf
		}
	}
	if _eebg.PrstClr != nil {
		if _gbgfe := _eebg.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gbgfe != nil {
			return _gbgfe
		}
	}
	if _eebg.ExtLst != nil {
		if _egfca := _eebg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egfca != nil {
			return _egfca
		}
	}
	return nil
}
func (_ffdad *EG_TextAutofit) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gcbced:
	for {
		_bdcgc, _cdcafa := d.Token()
		if _cdcafa != nil {
			return _cdcafa
		}
		switch _dfdbd := _bdcgc.(type) {
		case _d.StartElement:
			switch _dfdbd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}:
				_ffdad.NoAutofit = NewCT_TextNoAutofit()
				if _aacbc := d.DecodeElement(_ffdad.NoAutofit, &_dfdbd); _aacbc != nil {
					return _aacbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}:
				_ffdad.NormAutofit = NewCT_TextNormalAutofit()
				if _ffcdea := d.DecodeElement(_ffdad.NormAutofit, &_dfdbd); _ffcdea != nil {
					return _ffcdea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}:
				_ffdad.SpAutoFit = NewCT_TextShapeAutofit()
				if _fabce := d.DecodeElement(_ffdad.SpAutoFit, &_dfdbd); _fabce != nil {
					return _fabce
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075\u0074o\u0066i\u0074\u0020\u0025\u0076", _dfdbd.Name)
				if _baagg := d.Skip(); _baagg != nil {
					return _baagg
				}
			}
		case _d.EndElement:
			break _gcbced
		case _d.CharData:
		}
	}
	return nil
}

type CT_GeomRect struct {
	LAttr ST_AdjCoordinate
	TAttr ST_AdjCoordinate
	RAttr ST_AdjCoordinate
	BAttr ST_AdjCoordinate
}

func NewCT_AudioCD() *CT_AudioCD {
	_eeba := &CT_AudioCD{}
	_eeba.St = NewCT_AudioCDTime()
	_eeba.End = NewCT_AudioCDTime()
	return _eeba
}
func NewCT_GvmlUseShapeRectangle() *CT_GvmlUseShapeRectangle {
	_fafgc := &CT_GvmlUseShapeRectangle{}
	return _fafgc
}

// Validate validates the CT_Transform2D and its children
func (_ggdbg *CT_Transform2D) Validate() error {
	return _ggdbg.ValidateWithPath("\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d\u0032\u0044")
}

// ValidateWithPath validates the CT_ColorSchemeAndMapping and its children, prefixing error messages with path
func (_aacd *CT_ColorSchemeAndMapping) ValidateWithPath(path string) error {
	if _gbdfb := _aacd.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _gbdfb != nil {
		return _gbdfb
	}
	if _aacd.ClrMap != nil {
		if _gcde := _aacd.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _gcde != nil {
			return _gcde
		}
	}
	return nil
}

// Validate validates the CT_FillOverlayEffect and its children
func (_ebgag *CT_FillOverlayEffect) Validate() error {
	return _ebgag.ValidateWithPath("C\u0054_\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072l\u0061\u0079\u0045\u0066fe\u0063\u0074")
}
func (_egggg *EG_ColorTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dgadg:
	for {
		_agafec, _cdbdb := d.Token()
		if _cdbdb != nil {
			return _cdbdb
		}
		switch _fdgcd := _agafec.(type) {
		case _d.StartElement:
			switch _fdgcd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_egggg.Tint = NewCT_PositiveFixedPercentage()
				if _fbgbe := d.DecodeElement(_egggg.Tint, &_fdgcd); _fbgbe != nil {
					return _fbgbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_egggg.Shade = NewCT_PositiveFixedPercentage()
				if _dbdfc := d.DecodeElement(_egggg.Shade, &_fdgcd); _dbdfc != nil {
					return _dbdfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_egggg.Comp = NewCT_ComplementTransform()
				if _fgcef := d.DecodeElement(_egggg.Comp, &_fdgcd); _fgcef != nil {
					return _fgcef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_egggg.Inv = NewCT_InverseTransform()
				if _agddg := d.DecodeElement(_egggg.Inv, &_fdgcd); _agddg != nil {
					return _agddg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_egggg.Gray = NewCT_GrayscaleTransform()
				if _acbgef := d.DecodeElement(_egggg.Gray, &_fdgcd); _acbgef != nil {
					return _acbgef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_egggg.Alpha = NewCT_PositiveFixedPercentage()
				if _cfddf := d.DecodeElement(_egggg.Alpha, &_fdgcd); _cfddf != nil {
					return _cfddf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_egggg.AlphaOff = NewCT_FixedPercentage()
				if _bddeg := d.DecodeElement(_egggg.AlphaOff, &_fdgcd); _bddeg != nil {
					return _bddeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_egggg.AlphaMod = NewCT_PositivePercentage()
				if _ebfdc := d.DecodeElement(_egggg.AlphaMod, &_fdgcd); _ebfdc != nil {
					return _ebfdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_egggg.Hue = NewCT_PositiveFixedAngle()
				if _dffbc := d.DecodeElement(_egggg.Hue, &_fdgcd); _dffbc != nil {
					return _dffbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_egggg.HueOff = NewCT_Angle()
				if _gbafe := d.DecodeElement(_egggg.HueOff, &_fdgcd); _gbafe != nil {
					return _gbafe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_egggg.HueMod = NewCT_PositivePercentage()
				if _cfefa := d.DecodeElement(_egggg.HueMod, &_fdgcd); _cfefa != nil {
					return _cfefa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_egggg.Sat = NewCT_Percentage()
				if _edegc := d.DecodeElement(_egggg.Sat, &_fdgcd); _edegc != nil {
					return _edegc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_egggg.SatOff = NewCT_Percentage()
				if _dbfbd := d.DecodeElement(_egggg.SatOff, &_fdgcd); _dbfbd != nil {
					return _dbfbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_egggg.SatMod = NewCT_Percentage()
				if _ggggb := d.DecodeElement(_egggg.SatMod, &_fdgcd); _ggggb != nil {
					return _ggggb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_egggg.Lum = NewCT_Percentage()
				if _ffcge := d.DecodeElement(_egggg.Lum, &_fdgcd); _ffcge != nil {
					return _ffcge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_egggg.LumOff = NewCT_Percentage()
				if _gafff := d.DecodeElement(_egggg.LumOff, &_fdgcd); _gafff != nil {
					return _gafff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_egggg.LumMod = NewCT_Percentage()
				if _cdee := d.DecodeElement(_egggg.LumMod, &_fdgcd); _cdee != nil {
					return _cdee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_egggg.Red = NewCT_Percentage()
				if _dfbeba := d.DecodeElement(_egggg.Red, &_fdgcd); _dfbeba != nil {
					return _dfbeba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_egggg.RedOff = NewCT_Percentage()
				if _fgcba := d.DecodeElement(_egggg.RedOff, &_fdgcd); _fgcba != nil {
					return _fgcba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_egggg.RedMod = NewCT_Percentage()
				if _fdccf := d.DecodeElement(_egggg.RedMod, &_fdgcd); _fdccf != nil {
					return _fdccf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_egggg.Green = NewCT_Percentage()
				if _geacc := d.DecodeElement(_egggg.Green, &_fdgcd); _geacc != nil {
					return _geacc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_egggg.GreenOff = NewCT_Percentage()
				if _bfbea := d.DecodeElement(_egggg.GreenOff, &_fdgcd); _bfbea != nil {
					return _bfbea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_egggg.GreenMod = NewCT_Percentage()
				if _cfgbg := d.DecodeElement(_egggg.GreenMod, &_fdgcd); _cfgbg != nil {
					return _cfgbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_egggg.Blue = NewCT_Percentage()
				if _dcegc := d.DecodeElement(_egggg.Blue, &_fdgcd); _dcegc != nil {
					return _dcegc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_egggg.BlueOff = NewCT_Percentage()
				if _bfcbb := d.DecodeElement(_egggg.BlueOff, &_fdgcd); _bfcbb != nil {
					return _bfcbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_egggg.BlueMod = NewCT_Percentage()
				if _bgaed := d.DecodeElement(_egggg.BlueMod, &_fdgcd); _bgaed != nil {
					return _bgaed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_egggg.Gamma = NewCT_GammaTransform()
				if _eabegd := d.DecodeElement(_egggg.Gamma, &_fdgcd); _eabegd != nil {
					return _eabegd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_egggg.InvGamma = NewCT_InverseGammaTransform()
				if _dfgga := d.DecodeElement(_egggg.InvGamma, &_fdgcd); _dfgga != nil {
					return _dfgga
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0020\u0025\u0076", _fdgcd.Name)
				if _afcdc := d.Skip(); _afcdc != nil {
					return _afcdc
				}
			}
		case _d.EndElement:
			break _dgadg
		case _d.CharData:
		}
	}
	return nil
}
func (_cgbefd ST_OnOffStyleType) String() string {
	switch _cgbefd {
	case 0:
		return ""
	case 1:
		return "\u006f\u006e"
	case 2:
		return "\u006f\u0066\u0066"
	case 3:
		return "\u0064\u0065\u0066"
	}
	return ""
}

// ValidateWithPath validates the CT_TextLineBreak and its children, prefixing error messages with path
func (_adabc *CT_TextLineBreak) ValidateWithPath(path string) error {
	if _adabc.RPr != nil {
		if _ffgeaa := _adabc.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _ffgeaa != nil {
			return _ffgeaa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FillStyleList and its children, prefixing error messages with path
func (_fagbe *CT_FillStyleList) ValidateWithPath(path string) error {
	for _adbf, _facab := range _fagbe.EG_FillProperties {
		if _gced := _facab.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u005b\u0025\u0064\u005d", path, _adbf)); _gced != nil {
			return _gced
		}
	}
	return nil
}
func NewEG_TextAutofit() *EG_TextAutofit { _fgbb := &EG_TextAutofit{}; return _fgbb }
func (_ggdecd *CT_GraphicalObjectFrameLocking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ceefg := range start.Attr {
		if _ceefg.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_faac, _dagde := _c.ParseBool(_ceefg.Value)
			if _dagde != nil {
				return _dagde
			}
			_ggdecd.NoGrpAttr = &_faac
			continue
		}
		if _ceefg.Name.Local == "n\u006f\u0044\u0072\u0069\u006c\u006c\u0064\u006f\u0077\u006e" {
			_fegabe, _bgcad := _c.ParseBool(_ceefg.Value)
			if _bgcad != nil {
				return _bgcad
			}
			_ggdecd.NoDrilldownAttr = &_fegabe
			continue
		}
		if _ceefg.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_aebf, _fdgg := _c.ParseBool(_ceefg.Value)
			if _fdgg != nil {
				return _fdgg
			}
			_ggdecd.NoSelectAttr = &_aebf
			continue
		}
		if _ceefg.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_eccgc, _ecfca := _c.ParseBool(_ceefg.Value)
			if _ecfca != nil {
				return _ecfca
			}
			_ggdecd.NoChangeAspectAttr = &_eccgc
			continue
		}
		if _ceefg.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_bfeaa, _cebdf := _c.ParseBool(_ceefg.Value)
			if _cebdf != nil {
				return _cebdf
			}
			_ggdecd.NoMoveAttr = &_bfeaa
			continue
		}
		if _ceefg.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_fgcg, _dcbga := _c.ParseBool(_ceefg.Value)
			if _dcbga != nil {
				return _dcbga
			}
			_ggdecd.NoResizeAttr = &_fgcg
			continue
		}
	}
_cffgb:
	for {
		_cbecb, _bbcbd := d.Token()
		if _bbcbd != nil {
			return _bbcbd
		}
		switch _ddeb := _cbecb.(type) {
		case _d.StartElement:
			switch _ddeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggdecd.ExtLst = NewCT_OfficeArtExtensionList()
				if _agaa := d.DecodeElement(_ggdecd.ExtLst, &_ddeb); _agaa != nil {
					return _agaa
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006es\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065\u004c\u006f\u0063k\u0069\u006e\u0067\u0020\u0025\u0076", _ddeb.Name)
				if _dceg := d.Skip(); _dceg != nil {
					return _dceg
				}
			}
		case _d.EndElement:
			break _cffgb
		case _d.CharData:
		}
	}
	return nil
}

type ST_DgmBuildStep byte

func (_bdbdf ST_TileFlipMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bdbdf.String(), start)
}

// Validate validates the CT_ConnectionSiteList and its children
func (_cdgd *CT_ConnectionSiteList) Validate() error {
	return _cdgd.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u0069\u006f\u006e\u0053i\u0074\u0065\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_GvmlUseShapeRectangle and its children
func (_bbaec *CT_GvmlUseShapeRectangle) Validate() error {
	return _bbaec.ValidateWithPath("\u0043T\u005f\u0047\u0076\u006d\u006c\u0055\u0073\u0065\u0053\u0068\u0061p\u0065\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065")
}
func (_agffb *VideoFile) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_agffb.CT_VideoFile = *NewCT_VideoFile()
	for _, _deafg := range start.Attr {
		if _deafg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _deafg.Name.Local == "\u006c\u0069\u006e\u006b" || _deafg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _deafg.Name.Local == "\u006c\u0069\u006e\u006b" {
			_dbdbbb, _dcbfb := _deafg.Value, error(nil)
			if _dcbfb != nil {
				return _dcbfb
			}
			_agffb.LinkAttr = _dbdbbb
			continue
		}
		if _deafg.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_cbedf, _ddccg := _deafg.Value, error(nil)
			if _ddccg != nil {
				return _ddccg
			}
			_agffb.ContentTypeAttr = &_cbedf
			continue
		}
	}
_afgg:
	for {
		_gfbce, _deada := d.Token()
		if _deada != nil {
			return _deada
		}
		switch _abdabg := _gfbce.(type) {
		case _d.StartElement:
			switch _abdabg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agffb.ExtLst = NewCT_OfficeArtExtensionList()
				if _bebad := d.DecodeElement(_agffb.ExtLst, &_abdabg); _bebad != nil {
					return _bebad
				}
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0056\u0069\u0064\u0065\u006f\u0046i\u006c\u0065 \u0025\u0076", _abdabg.Name)
				if _caedca := d.Skip(); _caedca != nil {
					return _caedca
				}
			}
		case _d.EndElement:
			break _afgg
		case _d.CharData:
		}
	}
	return nil
}
func (_feb *CT_AlphaCeilingEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ST_PositivePercentage is a union type
type ST_PositivePercentage struct {
	ST_PositivePercentageDecimal *int32
	ST_PositivePercentage        *ST_Percentage
}

// ValidateWithPath validates the EG_OfficeArtExtensionList and its children, prefixing error messages with path
func (_gfdad *EG_OfficeArtExtensionList) ValidateWithPath(path string) error {
	for _beege, _cbafa := range _gfdad.Ext {
		if _fcabcb := _cbafa.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _beege)); _fcabcb != nil {
			return _fcabcb
		}
	}
	return nil
}

// Validate validates the CT_NonVisualDrawingShapeProps and its children
func (_edagb *CT_NonVisualDrawingShapeProps) Validate() error {
	return _edagb.ValidateWithPath("\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050ro\u0070\u0073")
}

type ST_TextVerticalType byte
type ST_BevelPresetType byte

// ValidateWithPath validates the CT_TextUnderlineLineFollowText and its children, prefixing error messages with path
func (_gfacd *CT_TextUnderlineLineFollowText) ValidateWithPath(path string) error { return nil }
func NewCT_FlatText() *CT_FlatText                                                { _gdbf := &CT_FlatText{}; return _gdbf }
func NewCT_AlphaReplaceEffect() *CT_AlphaReplaceEffect {
	_cega := &CT_AlphaReplaceEffect{}
	return _cega
}
func NewCT_FixedPercentage() *CT_FixedPercentage { _baaed := &CT_FixedPercentage{}; return _baaed }
func (_eagffc ST_PositiveFixedPercentage) String() string {
	if _eagffc.ST_PositiveFixedPercentageDecimal != nil {
		return _dg.Sprintf("\u0025\u0076", *_eagffc.ST_PositiveFixedPercentageDecimal)
	}
	if _eagffc.ST_PositiveFixedPercentage != nil {
		return _eagffc.ST_PositiveFixedPercentage.String()
	}
	return ""
}

// Validate validates the CT_ConnectorLocking and its children
func (_abbg *CT_ConnectorLocking) Validate() error {
	return _abbg.ValidateWithPath("\u0043\u0054\u005f\u0043on\u006e\u0065\u0063\u0074\u006f\u0072\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

// ST_AdjCoordinate is a union type
type ST_AdjCoordinate struct {
	ST_Coordinate    *ST_Coordinate
	ST_GeomGuideName *string
}

// ValidateWithPath validates the CT_NonVisualContentPartProperties and its children, prefixing error messages with path
func (_gccae *CT_NonVisualContentPartProperties) ValidateWithPath(path string) error {
	if _gccae.CpLocks != nil {
		if _edgf := _gccae.CpLocks.ValidateWithPath(path + "\u002f\u0043\u0070\u004c\u006f\u0063\u006b\u0073"); _edgf != nil {
			return _edgf
		}
	}
	if _gccae.ExtLst != nil {
		if _aefda := _gccae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aefda != nil {
			return _aefda
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextBody and its children, prefixing error messages with path
func (_cefbc *CT_TextBody) ValidateWithPath(path string) error {
	if _geebdd := _cefbc.BodyPr.ValidateWithPath(path + "\u002fB\u006f\u0064\u0079\u0050\u0072"); _geebdd != nil {
		return _geebdd
	}
	if _cefbc.LstStyle != nil {
		if _gaeg := _cefbc.LstStyle.ValidateWithPath(path + "\u002fL\u0073\u0074\u0053\u0074\u0079\u006ce"); _gaeg != nil {
			return _gaeg
		}
	}
	for _cdea, _bbdgd := range _cefbc.P {
		if _edebfc := _bbdgd.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0050\u005b\u0025\u0064\u005d", path, _cdea)); _edebfc != nil {
			return _edebfc
		}
	}
	return nil
}

const (
	ST_TextVertOverflowTypeUnset    ST_TextVertOverflowType = 0
	ST_TextVertOverflowTypeOverflow ST_TextVertOverflowType = 1
	ST_TextVertOverflowTypeEllipsis ST_TextVertOverflowType = 2
	ST_TextVertOverflowTypeClip     ST_TextVertOverflowType = 3
)

func NewTblStyleLst() *TblStyleLst {
	_dgcbe := &TblStyleLst{}
	_dgcbe.CT_TableStyleList = *NewCT_TableStyleList()
	return _dgcbe
}

// ST_TextPoint is a union type
type ST_TextPoint struct {
	ST_TextPointUnqualified *int32
	ST_UniversalMeasure     *string
}

// Validate validates the CT_TableStyleList and its children
func (_dgcabc *CT_TableStyleList) Validate() error {
	return _dgcabc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_Path2DMoveTo and its children, prefixing error messages with path
func (_bfad *CT_Path2DMoveTo) ValidateWithPath(path string) error {
	if _gabef := _bfad.Pt.ValidateWithPath(path + "\u002f\u0050\u0074"); _gabef != nil {
		return _gabef
	}
	return nil
}

type CT_PatternFillProperties struct {
	PrstAttr ST_PresetPatternVal
	FgClr    *CT_Color
	BgClr    *CT_Color
}
type EG_ThemeableFillStyle struct {
	Fill    *CT_FillProperties
	FillRef *CT_StyleMatrixReference
}

func (_fedd *CT_TextSpacingPercent) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _dg.Sprintf("\u0025\u0076", _fedd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gbeeg *CT_Headers) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gefeb:
	for {
		_dgce, _gbfe := d.Token()
		if _gbfe != nil {
			return _gbfe
		}
		switch _bgggc := _dgce.(type) {
		case _d.StartElement:
			switch _bgggc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				var _adfc string
				if _aaafe := d.DecodeElement(&_adfc, &_bgggc); _aaafe != nil {
					return _aaafe
				}
				_gbeeg.Header = append(_gbeeg.Header, _adfc)
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fH\u0065\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _bgggc.Name)
				if _aceaf := d.Skip(); _aceaf != nil {
					return _aceaf
				}
			}
		case _d.EndElement:
			break _gefeb
		case _d.CharData:
		}
	}
	return nil
}
func (_gdgb *CT_TableStyleList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gdgb.DefAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _cffgf := range start.Attr {
		if _cffgf.Name.Local == "\u0064\u0065\u0066" {
			_fcgbc, _bafc := _cffgf.Value, error(nil)
			if _bafc != nil {
				return _bafc
			}
			_gdgb.DefAttr = _fcgbc
			continue
		}
	}
_afcf:
	for {
		_gddag, _bgcgf := d.Token()
		if _bgcgf != nil {
			return _bgcgf
		}
		switch _adbac := _gddag.(type) {
		case _d.StartElement:
			switch _adbac.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}:
				_fgde := NewCT_TableStyle()
				if _cceca := d.DecodeElement(_fgde, &_adbac); _cceca != nil {
					return _cceca
				}
				_gdgb.TblStyle = append(_gdgb.TblStyle, _fgde)
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _adbac.Name)
				if _febff := d.Skip(); _febff != nil {
					return _febff
				}
			}
		case _d.EndElement:
			break _afcf
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_NonVisualContentPartProperties() *CT_NonVisualContentPartProperties {
	_bebfb := &CT_NonVisualContentPartProperties{}
	return _bebfb
}

// ValidateWithPath validates the CT_LineStyleList and its children, prefixing error messages with path
func (_accgab *CT_LineStyleList) ValidateWithPath(path string) error {
	for _cbfed, _adec := range _accgab.Ln {
		if _dagfe := _adec.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u004c\u006e\u005b\u0025\u0064]", path, _cbfed)); _dagfe != nil {
			return _dagfe
		}
	}
	return nil
}
func NewCT_ThemeableLineStyle() *CT_ThemeableLineStyle {
	_fdgga := &CT_ThemeableLineStyle{}
	return _fdgga
}
func (_baee *CT_TextNoAutofit) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_BlendEffect and its children
func (_agac *CT_BlendEffect) Validate() error {
	return _agac.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045f\u0066\u0065\u0063\u0074")
}
func NewCT_FillEffect() *CT_FillEffect { _bacf := &CT_FillEffect{}; return _bacf }

// ValidateWithPath validates the CT_GvmlShape and its children, prefixing error messages with path
func (_gabac *CT_GvmlShape) ValidateWithPath(path string) error {
	if _gded := _gabac.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _gded != nil {
		return _gded
	}
	if _gege := _gabac.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _gege != nil {
		return _gege
	}
	if _gabac.TxSp != nil {
		if _ddeea := _gabac.TxSp.ValidateWithPath(path + "\u002f\u0054\u0078S\u0070"); _ddeea != nil {
			return _ddeea
		}
	}
	if _gabac.Style != nil {
		if _bgcg := _gabac.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _bgcg != nil {
			return _bgcg
		}
	}
	if _gabac.ExtLst != nil {
		if _abdab := _gabac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abdab != nil {
			return _abdab
		}
	}
	return nil
}
func (_ebaae ST_PathFillMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ebaae.String(), start)
}

type CT_Path2DCubicBezierTo struct{ Pt []*CT_AdjPoint2D }

func NewCT_TextListStyle() *CT_TextListStyle { _gfgaf := &CT_TextListStyle{}; return _gfgaf }
func (_fgdce *ST_PresetMaterialType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_efgab, _cgcfd := d.Token()
	if _cgcfd != nil {
		return _cgcfd
	}
	if _eddda, _ebeaa := _efgab.(_d.EndElement); _ebeaa && _eddda.Name == start.Name {
		*_fgdce = 1
		return nil
	}
	if _affda, _bbecf := _efgab.(_d.CharData); !_bbecf {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efgab)
	} else {
		switch string(_affda) {
		case "":
			*_fgdce = 0
		case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065":
			*_fgdce = 1
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063":
			*_fgdce = 2
		case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c":
			*_fgdce = 3
		case "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065":
			*_fgdce = 4
		case "\u006d\u0061\u0074t\u0065":
			*_fgdce = 5
		case "\u0070l\u0061\u0073\u0074\u0069\u0063":
			*_fgdce = 6
		case "\u006d\u0065\u0074a\u006c":
			*_fgdce = 7
		case "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e":
			*_fgdce = 8
		case "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072":
			*_fgdce = 9
		case "\u0070\u006f\u0077\u0064\u0065\u0072":
			*_fgdce = 10
		case "\u0064\u006b\u0045\u0064\u0067\u0065":
			*_fgdce = 11
		case "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065":
			*_fgdce = 12
		case "\u0063\u006c\u0065a\u0072":
			*_fgdce = 13
		case "\u0066\u006c\u0061\u0074":
			*_fgdce = 14
		case "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l":
			*_fgdce = 15
		}
	}
	_efgab, _cgcfd = d.Token()
	if _cgcfd != nil {
		return _cgcfd
	}
	if _gdgab, _ceeca := _efgab.(_d.EndElement); _ceeca && _gdgab.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efgab)
}

// ValidateWithPath validates the CT_PresetTextShape and its children, prefixing error messages with path
func (_bdgfg *CT_PresetTextShape) ValidateWithPath(path string) error {
	if _bdgfg.PrstAttr == ST_TextShapeTypeUnset {
		return _dg.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gffbd := _bdgfg.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _gffbd != nil {
		return _gffbd
	}
	if _bdgfg.AvLst != nil {
		if _daad := _bdgfg.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _daad != nil {
			return _daad
		}
	}
	return nil
}
func (_egfabe *EG_ColorChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _egfabe.ScrgbClr != nil {
		_cffea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_egfabe.ScrgbClr, _cffea)
	}
	if _egfabe.SrgbClr != nil {
		_agffcf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_egfabe.SrgbClr, _agffcf)
	}
	if _egfabe.HslClr != nil {
		_aacdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_egfabe.HslClr, _aacdg)
	}
	if _egfabe.SysClr != nil {
		_gdfdd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_egfabe.SysClr, _gdfdd)
	}
	if _egfabe.SchemeClr != nil {
		_ebebg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_egfabe.SchemeClr, _ebebg)
	}
	if _egfabe.PrstClr != nil {
		_gddgd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_egfabe.PrstClr, _gddgd)
	}
	return nil
}
func (_eaafc *CT_TextTabStop) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abdae := range start.Attr {
		if _abdae.Name.Local == "\u0070\u006f\u0073" {
			_ceaaa, _gdbfc := ParseUnionST_Coordinate32(_abdae.Value)
			if _gdbfc != nil {
				return _gdbfc
			}
			_eaafc.PosAttr = &_ceaaa
			continue
		}
		if _abdae.Name.Local == "\u0061\u006c\u0067\u006e" {
			_eaafc.AlgnAttr.UnmarshalXMLAttr(_abdae)
			continue
		}
	}
	for {
		_daggf, _abacfce := d.Token()
		if _abacfce != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u0065\u0078\u0074\u0054\u0061\u0062\u0053\u0074\u006f\u0070:\u0020\u0025\u0073", _abacfce)
		}
		if _edfaf, _edab := _daggf.(_d.EndElement); _edab && _edfaf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_XYAdjustHandle() *CT_XYAdjustHandle {
	_cgfcdb := &CT_XYAdjustHandle{}
	_cgfcdb.Pos = NewCT_AdjPoint2D()
	return _cgfcdb
}
func NewCT_GvmlPicture() *CT_GvmlPicture {
	_dbdba := &CT_GvmlPicture{}
	_dbdba.NvPicPr = NewCT_GvmlPictureNonVisual()
	_dbdba.BlipFill = NewCT_BlipFillProperties()
	_dbdba.SpPr = NewCT_ShapeProperties()
	return _dbdba
}
func (_dddbfb *ST_PresetColorVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bcbcb, _eedgfc := d.Token()
	if _eedgfc != nil {
		return _eedgfc
	}
	if _ddeab, _deddd := _bcbcb.(_d.EndElement); _deddd && _ddeab.Name == start.Name {
		*_dddbfb = 1
		return nil
	}
	if _afedcc, _feace := _bcbcb.(_d.CharData); !_feace {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcbcb)
	} else {
		switch string(_afedcc) {
		case "":
			*_dddbfb = 0
		case "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e":
			*_dddbfb = 1
		case "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065":
			*_dddbfb = 2
		case "\u0061\u0071\u0075\u0061":
			*_dddbfb = 3
		case "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_dddbfb = 4
		case "\u0061\u007a\u0075r\u0065":
			*_dddbfb = 5
		case "\u0062\u0065\u0069g\u0065":
			*_dddbfb = 6
		case "\u0062\u0069\u0073\u0071\u0075\u0065":
			*_dddbfb = 7
		case "\u0062\u006c\u0061c\u006b":
			*_dddbfb = 8
		case "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064":
			*_dddbfb = 9
		case "\u0062\u006c\u0075\u0065":
			*_dddbfb = 10
		case "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074":
			*_dddbfb = 11
		case "\u0062\u0072\u006fw\u006e":
			*_dddbfb = 12
		case "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd":
			*_dddbfb = 13
		case "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e":
			*_dddbfb = 14
		case "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065":
			*_dddbfb = 15
		case "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e":
			*_dddbfb = 16
		case "\u0063\u006f\u0072a\u006c":
			*_dddbfb = 17
		case "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065":
			*_dddbfb = 18
		case "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b":
			*_dddbfb = 19
		case "\u0063r\u0069\u006d\u0073\u006f\u006e":
			*_dddbfb = 20
		case "\u0063\u0079\u0061\u006e":
			*_dddbfb = 21
		case "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065":
			*_dddbfb = 22
		case "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e":
			*_dddbfb = 23
		case "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_dddbfb = 24
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
			*_dddbfb = 25
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079":
			*_dddbfb = 26
		case "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n":
			*_dddbfb = 27
		case "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi":
			*_dddbfb = 28
		case "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061":
			*_dddbfb = 29
		case "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e":
			*_dddbfb = 30
		case "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
			*_dddbfb = 31
		case "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
			*_dddbfb = 32
		case "\u0064a\u0072\u006b\u0052\u0065\u0064":
			*_dddbfb = 33
		case "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
			*_dddbfb = 34
		case "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 35
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_dddbfb = 36
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_dddbfb = 37
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_dddbfb = 38
		case "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_dddbfb = 39
		case "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
			*_dddbfb = 40
		case "\u0064\u006b\u0042\u006c\u0075\u0065":
			*_dddbfb = 41
		case "\u0064\u006b\u0043\u0079\u0061\u006e":
			*_dddbfb = 42
		case "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_dddbfb = 43
		case "\u0064\u006b\u0047\u0072\u0061\u0079":
			*_dddbfb = 44
		case "\u0064\u006b\u0047\u0072\u0065\u0079":
			*_dddbfb = 45
		case "\u0064k\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 46
		case "\u0064k\u004b\u0068\u0061\u006b\u0069":
			*_dddbfb = 47
		case "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a":
			*_dddbfb = 48
		case "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 49
		case "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
			*_dddbfb = 50
		case "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
			*_dddbfb = 51
		case "\u0064\u006b\u0052e\u0064":
			*_dddbfb = 52
		case "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
			*_dddbfb = 53
		case "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 54
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_dddbfb = 55
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_dddbfb = 56
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_dddbfb = 57
		case "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_dddbfb = 58
		case "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
			*_dddbfb = 59
		case "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b":
			*_dddbfb = 60
		case "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
			*_dddbfb = 61
		case "\u0064i\u006d\u0047\u0072\u0061\u0079":
			*_dddbfb = 62
		case "\u0064i\u006d\u0047\u0072\u0065\u0079":
			*_dddbfb = 63
		case "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065":
			*_dddbfb = 64
		case "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k":
			*_dddbfb = 65
		case "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065":
			*_dddbfb = 66
		case "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 67
		case "\u0066u\u0063\u0068\u0073\u0069\u0061":
			*_dddbfb = 68
		case "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o":
			*_dddbfb = 69
		case "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065":
			*_dddbfb = 70
		case "\u0067\u006f\u006c\u0064":
			*_dddbfb = 71
		case "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd":
			*_dddbfb = 72
		case "\u0067\u0072\u0061\u0079":
			*_dddbfb = 73
		case "\u0067\u0072\u0065\u0079":
			*_dddbfb = 74
		case "\u0067\u0072\u0065e\u006e":
			*_dddbfb = 75
		case "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077":
			*_dddbfb = 76
		case "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077":
			*_dddbfb = 77
		case "\u0068o\u0074\u0050\u0069\u006e\u006b":
			*_dddbfb = 78
		case "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d":
			*_dddbfb = 79
		case "\u0069\u006e\u0064\u0069\u0067\u006f":
			*_dddbfb = 80
		case "\u0069\u0076\u006fr\u0079":
			*_dddbfb = 81
		case "\u006b\u0068\u0061k\u0069":
			*_dddbfb = 82
		case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072":
			*_dddbfb = 83
		case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068":
			*_dddbfb = 84
		case "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n":
			*_dddbfb = 85
		case "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e":
			*_dddbfb = 86
		case "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e":
			*_dddbfb = 87
		case "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c":
			*_dddbfb = 88
		case "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n":
			*_dddbfb = 89
		case "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077":
			*_dddbfb = 90
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
			*_dddbfb = 91
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y":
			*_dddbfb = 92
		case "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 93
		case "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek":
			*_dddbfb = 94
		case "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
			*_dddbfb = 95
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 96
		case "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
			*_dddbfb = 97
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079":
			*_dddbfb = 98
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079":
			*_dddbfb = 99
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065":
			*_dddbfb = 100
		case "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
			*_dddbfb = 101
		case "\u006c\u0074\u0042\u006c\u0075\u0065":
			*_dddbfb = 102
		case "\u006ct\u0043\u006f\u0072\u0061\u006c":
			*_dddbfb = 103
		case "\u006c\u0074\u0043\u0079\u0061\u006e":
			*_dddbfb = 104
		case "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077":
			*_dddbfb = 105
		case "\u006c\u0074\u0047\u0072\u0061\u0079":
			*_dddbfb = 106
		case "\u006c\u0074\u0047\u0072\u0065\u0079":
			*_dddbfb = 107
		case "\u006ct\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 108
		case "\u006c\u0074\u0050\u0069\u006e\u006b":
			*_dddbfb = 109
		case "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
			*_dddbfb = 110
		case "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 111
		case "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e":
			*_dddbfb = 112
		case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_dddbfb = 113
		case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_dddbfb = 114
		case "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065":
			*_dddbfb = 115
		case "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
			*_dddbfb = 116
		case "\u006c\u0069\u006d\u0065":
			*_dddbfb = 117
		case "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n":
			*_dddbfb = 118
		case "\u006c\u0069\u006ee\u006e":
			*_dddbfb = 119
		case "\u006da\u0067\u0065\u006e\u0074\u0061":
			*_dddbfb = 120
		case "\u006d\u0061\u0072\u006f\u006f\u006e":
			*_dddbfb = 121
		case "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_dddbfb = 122
		case "\u006de\u0064\u0042\u006c\u0075\u0065":
			*_dddbfb = 123
		case "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d":
			*_dddbfb = 124
		case "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce":
			*_dddbfb = 125
		case "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 126
		case "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_dddbfb = 127
		case "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
			*_dddbfb = 128
		case "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_dddbfb = 129
		case "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_dddbfb = 130
		case "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_dddbfb = 131
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065":
			*_dddbfb = 132
		case "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064":
			*_dddbfb = 133
		case "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065":
			*_dddbfb = 134
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e":
			*_dddbfb = 135
		case "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_dddbfb = 136
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
			*_dddbfb = 137
		case "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_dddbfb = 138
		case "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_dddbfb = 139
		case "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065":
			*_dddbfb = 140
		case "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m":
			*_dddbfb = 141
		case "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e":
			*_dddbfb = 142
		case "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e":
			*_dddbfb = 143
		case "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065":
			*_dddbfb = 144
		case "\u006e\u0061\u0076\u0079":
			*_dddbfb = 145
		case "\u006fl\u0064\u004c\u0061\u0063\u0065":
			*_dddbfb = 146
		case "\u006f\u006c\u0069v\u0065":
			*_dddbfb = 147
		case "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b":
			*_dddbfb = 148
		case "\u006f\u0072\u0061\u006e\u0067\u0065":
			*_dddbfb = 149
		case "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d":
			*_dddbfb = 150
		case "\u006f\u0072\u0063\u0068\u0069\u0064":
			*_dddbfb = 151
		case "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_dddbfb = 152
		case "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n":
			*_dddbfb = 153
		case "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_dddbfb = 154
		case "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_dddbfb = 155
		case "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070":
			*_dddbfb = 156
		case "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f":
			*_dddbfb = 157
		case "\u0070\u0065\u0072\u0075":
			*_dddbfb = 158
		case "\u0070\u0069\u006e\u006b":
			*_dddbfb = 159
		case "\u0070\u006c\u0075\u006d":
			*_dddbfb = 160
		case "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065":
			*_dddbfb = 161
		case "\u0070\u0075\u0072\u0070\u006c\u0065":
			*_dddbfb = 162
		case "\u0072\u0065\u0064":
			*_dddbfb = 163
		case "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n":
			*_dddbfb = 164
		case "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e":
			*_dddbfb = 165
		case "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e":
			*_dddbfb = 166
		case "\u0073\u0061\u006c\u006d\u006f\u006e":
			*_dddbfb = 167
		case "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e":
			*_dddbfb = 168
		case "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 169
		case "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c":
			*_dddbfb = 170
		case "\u0073\u0069\u0065\u006e\u006e\u0061":
			*_dddbfb = 171
		case "\u0073\u0069\u006c\u0076\u0065\u0072":
			*_dddbfb = 172
		case "\u0073k\u0079\u0042\u006c\u0075\u0065":
			*_dddbfb = 173
		case "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e":
			*_dddbfb = 174
		case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y":
			*_dddbfb = 175
		case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y":
			*_dddbfb = 176
		case "\u0073\u006e\u006f\u0077":
			*_dddbfb = 177
		case "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 178
		case "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e":
			*_dddbfb = 179
		case "\u0074\u0061\u006e":
			*_dddbfb = 180
		case "\u0074\u0065\u0061\u006c":
			*_dddbfb = 181
		case "\u0074h\u0069\u0073\u0074\u006c\u0065":
			*_dddbfb = 182
		case "\u0074\u006f\u006d\u0061\u0074\u006f":
			*_dddbfb = 183
		case "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e":
			*_dddbfb = 184
		case "\u0076\u0069\u006f\u006c\u0065\u0074":
			*_dddbfb = 185
		case "\u0077\u0068\u0065a\u0074":
			*_dddbfb = 186
		case "\u0077\u0068\u0069t\u0065":
			*_dddbfb = 187
		case "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065":
			*_dddbfb = 188
		case "\u0079\u0065\u006c\u006c\u006f\u0077":
			*_dddbfb = 189
		case "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e":
			*_dddbfb = 190
		}
	}
	_bcbcb, _eedgfc = d.Token()
	if _eedgfc != nil {
		return _eedgfc
	}
	if _aedc, _aabfc := _bcbcb.(_d.EndElement); _aabfc && _aedc.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcbcb)
}
func NewCT_Connection() *CT_Connection { _dbfa := &CT_Connection{}; return _dbfa }
func NewCT_BlipChoice() *CT_BlipChoice { _gge := &CT_BlipChoice{}; return _gge }

// ValidateWithPath validates the CT_FontReference and its children, prefixing error messages with path
func (_cbef *CT_FontReference) ValidateWithPath(path string) error {
	if _cbef.IdxAttr == ST_FontCollectionIndexUnset {
		return _dg.Errorf("\u0025\u0073\u002fI\u0064\u0078\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dadab := _cbef.IdxAttr.ValidateWithPath(path + "\u002f\u0049\u0064\u0078\u0041\u0074\u0074\u0072"); _dadab != nil {
		return _dadab
	}
	if _cbef.ScrgbClr != nil {
		if _cgea := _cbef.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cgea != nil {
			return _cgea
		}
	}
	if _cbef.SrgbClr != nil {
		if _acab := _cbef.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _acab != nil {
			return _acab
		}
	}
	if _cbef.HslClr != nil {
		if _febce := _cbef.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _febce != nil {
			return _febce
		}
	}
	if _cbef.SysClr != nil {
		if _ccdcf := _cbef.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _ccdcf != nil {
			return _ccdcf
		}
	}
	if _cbef.SchemeClr != nil {
		if _cgfg := _cbef.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _cgfg != nil {
			return _cgfg
		}
	}
	if _cbef.PrstClr != nil {
		if _fcebb := _cbef.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _fcebb != nil {
			return _fcebb
		}
	}
	return nil
}
func (_ggedb *ST_PenAlignment) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbded, _ecbgd := d.Token()
	if _ecbgd != nil {
		return _ecbgd
	}
	if _abffac, _abbcf := _dbded.(_d.EndElement); _abbcf && _abffac.Name == start.Name {
		*_ggedb = 1
		return nil
	}
	if _eedeg, _aeedbb := _dbded.(_d.CharData); !_aeedbb {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbded)
	} else {
		switch string(_eedeg) {
		case "":
			*_ggedb = 0
		case "\u0063\u0074\u0072":
			*_ggedb = 1
		case "\u0069\u006e":
			*_ggedb = 2
		}
	}
	_dbded, _ecbgd = d.Token()
	if _ecbgd != nil {
		return _ecbgd
	}
	if _bfeb, _cadbg := _dbded.(_d.EndElement); _cadbg && _bfeb.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbded)
}
func NewCT_InnerShadowEffect() *CT_InnerShadowEffect {
	_caegg := &CT_InnerShadowEffect{}
	return _caegg
}
func (_egddb *CT_NonVisualContentPartProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _egddb.IsCommentAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069s\u0043\u006f\u006d\u006d\u0065\u006et"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_egddb.IsCommentAttr))})
	}
	e.EncodeToken(start)
	if _egddb.CpLocks != nil {
		_cdde := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u0070\u004c\u006f\u0063\u006bs"}}
		e.EncodeElement(_egddb.CpLocks, _cdde)
	}
	if _egddb.ExtLst != nil {
		_ggdccg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egddb.ExtLst, _ggdccg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cegece *ST_Coordinate) Validate() error { return _cegece.ValidateWithPath("") }

type EG_ColorChoice struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

// ValidateWithPath validates the CT_NoFillProperties and its children, prefixing error messages with path
func (_efbae *CT_NoFillProperties) ValidateWithPath(path string) error { return nil }
func (_bbfbf *CT_BaseStylesOverride) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bbfbf.ClrScheme != nil {
		_ddgb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_bbfbf.ClrScheme, _ddgb)
	}
	if _bbfbf.FontScheme != nil {
		_dfad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_bbfbf.FontScheme, _dfad)
	}
	if _bbfbf.FmtScheme != nil {
		_egcd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0066\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_bbfbf.FmtScheme, _egcd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dggfc *CT_TableStyleCellStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dggfc.TcBdr != nil {
		_fgdgc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0063\u0042\u0064\u0072"}}
		e.EncodeElement(_dggfc.TcBdr, _fgdgc)
	}
	if _dggfc.Fill != nil {
		_gegde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_dggfc.Fill, _gegde)
	}
	if _dggfc.FillRef != nil {
		_bggcb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_dggfc.FillRef, _bggcb)
	}
	if _dggfc.Cell3D != nil {
		_dffdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0065\u006c\u006c\u0033\u0044"}}
		e.EncodeElement(_dggfc.Cell3D, _dffdc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TableBackgroundStyle() *CT_TableBackgroundStyle {
	_aace := &CT_TableBackgroundStyle{}
	return _aace
}
func NewCT_ColorScheme() *CT_ColorScheme {
	_dccbf := &CT_ColorScheme{}
	_dccbf.Dk1 = NewCT_Color()
	_dccbf.Lt1 = NewCT_Color()
	_dccbf.Dk2 = NewCT_Color()
	_dccbf.Lt2 = NewCT_Color()
	_dccbf.Accent1 = NewCT_Color()
	_dccbf.Accent2 = NewCT_Color()
	_dccbf.Accent3 = NewCT_Color()
	_dccbf.Accent4 = NewCT_Color()
	_dccbf.Accent5 = NewCT_Color()
	_dccbf.Accent6 = NewCT_Color()
	_dccbf.Hlink = NewCT_Color()
	_dccbf.FolHlink = NewCT_Color()
	return _dccbf
}

// ValidateWithPath validates the CT_TextBulletColorFollowText and its children, prefixing error messages with path
func (_bgcgg *CT_TextBulletColorFollowText) ValidateWithPath(path string) error { return nil }
func (_deac ST_AnimationDgmOnlyBuildType) Validate() error                      { return _deac.ValidateWithPath("") }

const (
	ST_LineEndLengthUnset ST_LineEndLength = 0
	ST_LineEndLengthSm    ST_LineEndLength = 1
	ST_LineEndLengthMed   ST_LineEndLength = 2
	ST_LineEndLengthLg    ST_LineEndLength = 3
)

func (_cafad *CT_GeomGuide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _dg.Sprintf("\u0025\u0076", _cafad.NameAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006d\u006c\u0061"}, Value: _dg.Sprintf("\u0025\u0076", _cafad.FmlaAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dbbaf ST_TextAnchoringType) Validate() error { return _dbbaf.ValidateWithPath("") }
func (_adeec *CT_ReflectionEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bgaabf := range start.Attr {
		if _bgaabf.Name.Local == "\u0066a\u0064\u0065\u0044\u0069\u0072" {
			_febgf, _gedab := _c.ParseInt(_bgaabf.Value, 10, 32)
			if _gedab != nil {
				return _gedab
			}
			_dabce := int32(_febgf)
			_adeec.FadeDirAttr = &_dabce
			continue
		}
		if _bgaabf.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_gfbca, _affdf := _c.ParseInt(_bgaabf.Value, 10, 64)
			if _affdf != nil {
				return _affdf
			}
			_adeec.BlurRadAttr = &_gfbca
			continue
		}
		if _bgaabf.Name.Local == "\u0073\u0074\u0050o\u0073" {
			_babc, _dfbcb := ParseUnionST_PositiveFixedPercentage(_bgaabf.Value)
			if _dfbcb != nil {
				return _dfbcb
			}
			_adeec.StPosAttr = &_babc
			continue
		}
		if _bgaabf.Name.Local == "\u0065\u006e\u0064\u0041" {
			_dfffd, _gbfgf := ParseUnionST_PositiveFixedPercentage(_bgaabf.Value)
			if _gbfgf != nil {
				return _gbfgf
			}
			_adeec.EndAAttr = &_dfffd
			continue
		}
		if _bgaabf.Name.Local == "\u0065\u006e\u0064\u0050\u006f\u0073" {
			_bbbbe, _degef := ParseUnionST_PositiveFixedPercentage(_bgaabf.Value)
			if _degef != nil {
				return _degef
			}
			_adeec.EndPosAttr = &_bbbbe
			continue
		}
		if _bgaabf.Name.Local == "\u0064\u0069\u0073\u0074" {
			_fdga, _fdgag := _c.ParseInt(_bgaabf.Value, 10, 64)
			if _fdgag != nil {
				return _fdgag
			}
			_adeec.DistAttr = &_fdga
			continue
		}
		if _bgaabf.Name.Local == "\u0064\u0069\u0072" {
			_cffag, _bggd := _c.ParseInt(_bgaabf.Value, 10, 32)
			if _bggd != nil {
				return _bggd
			}
			_fabfg := int32(_cffag)
			_adeec.DirAttr = &_fabfg
			continue
		}
		if _bgaabf.Name.Local == "\u0073\u0074\u0041" {
			_daea, _faffacc := ParseUnionST_PositiveFixedPercentage(_bgaabf.Value)
			if _faffacc != nil {
				return _faffacc
			}
			_adeec.StAAttr = &_daea
			continue
		}
		if _bgaabf.Name.Local == "\u0073\u0078" {
			_cgdbd, _aadda := ParseUnionST_Percentage(_bgaabf.Value)
			if _aadda != nil {
				return _aadda
			}
			_adeec.SxAttr = &_cgdbd
			continue
		}
		if _bgaabf.Name.Local == "\u0073\u0079" {
			_fedeg, _facfd := ParseUnionST_Percentage(_bgaabf.Value)
			if _facfd != nil {
				return _facfd
			}
			_adeec.SyAttr = &_fedeg
			continue
		}
		if _bgaabf.Name.Local == "\u006b\u0078" {
			_abbcb, _gcaee := _c.ParseInt(_bgaabf.Value, 10, 32)
			if _gcaee != nil {
				return _gcaee
			}
			_fefcg := int32(_abbcb)
			_adeec.KxAttr = &_fefcg
			continue
		}
		if _bgaabf.Name.Local == "\u006b\u0079" {
			_ebefb, _eeeda := _c.ParseInt(_bgaabf.Value, 10, 32)
			if _eeeda != nil {
				return _eeeda
			}
			_feecg := int32(_ebefb)
			_adeec.KyAttr = &_feecg
			continue
		}
		if _bgaabf.Name.Local == "\u0061\u006c\u0067\u006e" {
			_adeec.AlgnAttr.UnmarshalXMLAttr(_bgaabf)
			continue
		}
		if _bgaabf.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_gcfaae, _bcga := _c.ParseBool(_bgaabf.Value)
			if _bcga != nil {
				return _bcga
			}
			_adeec.RotWithShapeAttr = &_gcfaae
			continue
		}
	}
	for {
		_edeecc, _abbdd := d.Token()
		if _abbdd != nil {
			return _dg.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0052\u0065\u0066\u006c\u0065c\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _abbdd)
		}
		if _dbccc, _aagcc := _edeecc.(_d.EndElement); _aagcc && _dbccc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bbdab ST_BlendMode) Validate() error { return _bbdab.ValidateWithPath("") }
func (_gbbge ST_BlipCompression) String() string {
	switch _gbbge {
	case 0:
		return ""
	case 1:
		return "\u0065\u006d\u0061i\u006c"
	case 2:
		return "\u0073\u0063\u0072\u0065\u0065\u006e"
	case 3:
		return "\u0070\u0072\u0069n\u0074"
	case 4:
		return "\u0068q\u0070\u0072\u0069\u006e\u0074"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_eaag *CT_VideoFile) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _egea := range start.Attr {
		if _egea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _egea.Name.Local == "\u006c\u0069\u006e\u006b" || _egea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _egea.Name.Local == "\u006c\u0069\u006e\u006b" {
			_beggf, _daddc := _egea.Value, error(nil)
			if _daddc != nil {
				return _daddc
			}
			_eaag.LinkAttr = _beggf
			continue
		}
		if _egea.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_gdfd, _fcdcc := _egea.Value, error(nil)
			if _fcdcc != nil {
				return _fcdcc
			}
			_eaag.ContentTypeAttr = &_gdfd
			continue
		}
	}
_gefbc:
	for {
		_bdegc, _eadgg := d.Token()
		if _eadgg != nil {
			return _eadgg
		}
		switch _bbeea := _bdegc.(type) {
		case _d.StartElement:
			switch _bbeea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eaag.ExtLst = NewCT_OfficeArtExtensionList()
				if _cdcfe := d.DecodeElement(_eaag.ExtLst, &_bbeea); _cdcfe != nil {
					return _cdcfe
				}
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_V\u0069\u0064e\u006f\u0046\u0069\u006c\u0065\u0020\u0025\u0076", _bbeea.Name)
				if _cabgc := d.Skip(); _cabgc != nil {
					return _cabgc
				}
			}
		case _d.EndElement:
			break _gefbc
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_Headers() *CT_Headers { _agfec := &CT_Headers{}; return _agfec }

type ST_PresetLineDashVal byte
type CT_TablePropertiesChoice struct {
	TableStyle   *CT_TableStyle
	TableStyleId *string
}

// Validate validates the AG_Blob and its children
func (_gb *AG_Blob) Validate() error {
	return _gb.ValidateWithPath("\u0041G\u005f\u0042\u006c\u006f\u0062")
}
func (_dfddb *CT_GroupLocking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bbeed := range start.Attr {
		if _bbeed.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_dedgg, _aafdg := _c.ParseBool(_bbeed.Value)
			if _aafdg != nil {
				return _aafdg
			}
			_dfddb.NoGrpAttr = &_dedgg
			continue
		}
		if _bbeed.Name.Local == "\u006eo\u0055\u006e\u0067\u0072\u0070" {
			_gbed, _cebc := _c.ParseBool(_bbeed.Value)
			if _cebc != nil {
				return _cebc
			}
			_dfddb.NoUngrpAttr = &_gbed
			continue
		}
		if _bbeed.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_bfbee, _ecgec := _c.ParseBool(_bbeed.Value)
			if _ecgec != nil {
				return _ecgec
			}
			_dfddb.NoSelectAttr = &_bfbee
			continue
		}
		if _bbeed.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_bgdad, _ggef := _c.ParseBool(_bbeed.Value)
			if _ggef != nil {
				return _ggef
			}
			_dfddb.NoRotAttr = &_bgdad
			continue
		}
		if _bbeed.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_gcfae, _bddd := _c.ParseBool(_bbeed.Value)
			if _bddd != nil {
				return _bddd
			}
			_dfddb.NoChangeAspectAttr = &_gcfae
			continue
		}
		if _bbeed.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_abbcc, _acbaf := _c.ParseBool(_bbeed.Value)
			if _acbaf != nil {
				return _acbaf
			}
			_dfddb.NoMoveAttr = &_abbcc
			continue
		}
		if _bbeed.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_eacce, _gbge := _c.ParseBool(_bbeed.Value)
			if _gbge != nil {
				return _gbge
			}
			_dfddb.NoResizeAttr = &_eacce
			continue
		}
	}
_deeed:
	for {
		_aggdf, _bfbc := d.Token()
		if _bfbc != nil {
			return _bfbc
		}
		switch _cefeb := _aggdf.(type) {
		case _d.StartElement:
			switch _cefeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfddb.ExtLst = NewCT_OfficeArtExtensionList()
				if _gefge := d.DecodeElement(_dfddb.ExtLst, &_cefeb); _gefge != nil {
					return _gefge
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _cefeb.Name)
				if _eeaf := d.Skip(); _eeaf != nil {
					return _eeaf
				}
			}
		case _d.EndElement:
			break _deeed
		case _d.CharData:
		}
	}
	return nil
}
func (_dcbeg ST_PenAlignment) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_eeafc := _d.Attr{}
	_eeafc.Name = name
	switch _dcbeg {
	case ST_PenAlignmentUnset:
		_eeafc.Value = ""
	case ST_PenAlignmentCtr:
		_eeafc.Value = "\u0063\u0074\u0072"
	case ST_PenAlignmentIn:
		_eeafc.Value = "\u0069\u006e"
	}
	return _eeafc, nil
}

// Validate validates the CT_SoftEdgesEffect and its children
func (_bgade *CT_SoftEdgesEffect) Validate() error {
	return _bgade.ValidateWithPath("\u0043T\u005fS\u006f\u0066\u0074\u0045\u0064g\u0065\u0073E\u0066\u0066\u0065\u0063\u0074")
}
func (_gaaf *CT_AnimationDgmElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gaaf.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_gaaf.IdAttr)})
	}
	if _gaaf.BldStepAttr != ST_DgmBuildStepUnset {
		_cabd, _degd := _gaaf.BldStepAttr.MarshalXMLAttr(_d.Name{Local: "\u0062l\u0064\u0053\u0074\u0065\u0070"})
		if _degd != nil {
			return _degd
		}
		start.Attr = append(start.Attr, _cabd)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Backdrop and its children, prefixing error messages with path
func (_gdfc *CT_Backdrop) ValidateWithPath(path string) error {
	if _gcgcf := _gdfc.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _gcgcf != nil {
		return _gcgcf
	}
	if _fgfg := _gdfc.Norm.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d"); _fgfg != nil {
		return _fgfg
	}
	if _gebb := _gdfc.Up.ValidateWithPath(path + "\u002f\u0055\u0070"); _gebb != nil {
		return _gebb
	}
	if _gdfc.ExtLst != nil {
		if _fedc := _gdfc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fedc != nil {
			return _fedc
		}
	}
	return nil
}

type CT_TextUnderlineFillGroupWrapper struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

// ValidateWithPath validates the EG_TextRun and its children, prefixing error messages with path
func (_abcfe *EG_TextRun) ValidateWithPath(path string) error {
	if _abcfe.R != nil {
		if _dageb := _abcfe.R.ValidateWithPath(path + "\u002f\u0052"); _dageb != nil {
			return _dageb
		}
	}
	if _abcfe.Br != nil {
		if _gedef := _abcfe.Br.ValidateWithPath(path + "\u002f\u0042\u0072"); _gedef != nil {
			return _gedef
		}
	}
	if _abcfe.Fld != nil {
		if _cggae := _abcfe.Fld.ValidateWithPath(path + "\u002f\u0046\u006c\u0064"); _cggae != nil {
			return _cggae
		}
	}
	return nil
}
func NewCT_AlphaOutsetEffect() *CT_AlphaOutsetEffect { _gab := &CT_AlphaOutsetEffect{}; return _gab }

// ValidateWithPath validates the CT_PatternFillProperties and its children, prefixing error messages with path
func (_bfecf *CT_PatternFillProperties) ValidateWithPath(path string) error {
	if _gbgea := _bfecf.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _gbgea != nil {
		return _gbgea
	}
	if _bfecf.FgClr != nil {
		if _ecgf := _bfecf.FgClr.ValidateWithPath(path + "\u002f\u0046\u0067\u0043\u006c\u0072"); _ecgf != nil {
			return _ecgf
		}
	}
	if _bfecf.BgClr != nil {
		if _ceafd := _bfecf.BgClr.ValidateWithPath(path + "\u002f\u0042\u0067\u0043\u006c\u0072"); _ceafd != nil {
			return _ceafd
		}
	}
	return nil
}
func (_bfgeg *CT_TextUnderlineFillGroupWrapper) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bfgeg.NoFill != nil {
		_befde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bfgeg.NoFill, _befde)
	}
	if _bfgeg.SolidFill != nil {
		_bbaed := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bfgeg.SolidFill, _bbaed)
	}
	if _bfgeg.GradFill != nil {
		_bcgg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bfgeg.GradFill, _bcgg)
	}
	if _bfgeg.BlipFill != nil {
		_cbge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bfgeg.BlipFill, _cbge)
	}
	if _bfgeg.PattFill != nil {
		_gfaaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bfgeg.PattFill, _gfaaa)
	}
	if _bfgeg.GrpFill != nil {
		_efbbf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_bfgeg.GrpFill, _efbbf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fegbe *CT_Scale2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_caed := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0078"}}
	e.EncodeElement(_fegbe.Sx, _caed)
	_cdbga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079"}}
	e.EncodeElement(_fegbe.Sy, _cdbga)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_afgdf *CT_PresetLineDashProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cffa := range start.Attr {
		if _cffa.Name.Local == "\u0076\u0061\u006c" {
			_afgdf.ValAttr.UnmarshalXMLAttr(_cffa)
			continue
		}
	}
	for {
		_abceg, _aecbb := d.Token()
		if _aecbb != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0072e\u0073\u0065\u0074\u004c\u0069\u006ee\u0044\u0061\u0073\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065s\u003a\u0020\u0025\u0073", _aecbb)
		}
		if _gdcf, _fbfe := _abceg.(_d.EndElement); _fbfe && _gdcf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ConnectionSite and its children, prefixing error messages with path
func (_fgegd *CT_ConnectionSite) ValidateWithPath(path string) error {
	if _gegaag := _fgegd.AngAttr.ValidateWithPath(path + "\u002f\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _gegaag != nil {
		return _gegaag
	}
	if _aaee := _fgegd.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _aaee != nil {
		return _aaee
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlTextShape and its children, prefixing error messages with path
func (_fgfec *CT_GvmlTextShape) ValidateWithPath(path string) error {
	if _ebebb := _fgfec.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _ebebb != nil {
		return _ebebb
	}
	if _fgfec.Choice != nil {
		if _bacg := _fgfec.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _bacg != nil {
			return _bacg
		}
	}
	if _fgfec.ExtLst != nil {
		if _dcbfe := _fgfec.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcbfe != nil {
			return _dcbfe
		}
	}
	return nil
}

// Validate validates the CT_AnimationChartElement and its children
func (_bdfg *CT_AnimationChartElement) Validate() error {
	return _bdfg.ValidateWithPath("\u0043T\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043h\u0061\u0072\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}
func (_dbdab ST_AnimationBuildType) ValidateWithPath(path string) error {
	switch _dbdab {
	case 0, 1:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbdab))
	}
	return nil
}
func (_ggbbce ST_PresetPatternVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ggbbce.String(), start)
}
func (_edgff *ST_AnimationDgmBuildType) Validate() error { return _edgff.ValidateWithPath("") }

// Validate validates the CT_GroupTransform2D and its children
func (_baec *CT_GroupTransform2D) Validate() error {
	return _baec.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0032\u0044")
}
func (_gbabc *CT_GvmlTextShape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gbabc.TxBody = NewCT_TextBody()
_dcaeb:
	for {
		_geaa, _ffdfc := d.Token()
		if _ffdfc != nil {
			return _ffdfc
		}
		switch _ccdee := _geaa.(type) {
		case _d.StartElement:
			switch _ccdee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				if _acdfb := d.DecodeElement(_gbabc.TxBody, &_ccdee); _acdfb != nil {
					return _acdfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}:
				_gbabc.Choice = NewCT_GvmlTextShapeChoice()
				if _fgeea := d.DecodeElement(&_gbabc.Choice.UseSpRect, &_ccdee); _fgeea != nil {
					return _fgeea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_gbabc.Choice = NewCT_GvmlTextShapeChoice()
				if _fefg := d.DecodeElement(&_gbabc.Choice.Xfrm, &_ccdee); _fefg != nil {
					return _fefg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbabc.ExtLst = NewCT_OfficeArtExtensionList()
				if _gbgc := d.DecodeElement(_gbabc.ExtLst, &_ccdee); _gbgc != nil {
					return _gbgc
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0020\u0025v", _ccdee.Name)
				if _gecb := d.Skip(); _gecb != nil {
					return _gecb
				}
			}
		case _d.EndElement:
			break _dcaeb
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TintEffect() *CT_TintEffect { _ddbdg := &CT_TintEffect{}; return _ddbdg }
func (_ecddc *CT_TextBulletTypefaceFollowText) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aeafd ST_PathFillMode) String() string {
	switch _aeafd {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006e\u006f\u0072\u006d"
	case 3:
		return "\u006ci\u0067\u0068\u0074\u0065\u006e"
	case 4:
		return "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073"
	case 5:
		return "\u0064\u0061\u0072\u006b\u0065\u006e"
	case 6:
		return "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073"
	}
	return ""
}
func (_bcaccc *CT_ShapeStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ccfdd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u006e\u0052\u0065\u0066"}}
	e.EncodeElement(_bcaccc.LnRef, _ccfdd)
	_dbedeg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
	e.EncodeElement(_bcaccc.FillRef, _dbedeg)
	_gagfb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
	e.EncodeElement(_bcaccc.EffectRef, _gagfb)
	_dbabb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
	e.EncodeElement(_bcaccc.FontRef, _dbabb)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_afda *CT_ColorReplaceEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ceee:
	for {
		_abac, _fbb := d.Token()
		if _fbb != nil {
			return _fbb
		}
		switch _febag := _abac.(type) {
		case _d.StartElement:
			switch _febag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_afda.ScrgbClr = NewCT_ScRgbColor()
				if _decc := d.DecodeElement(_afda.ScrgbClr, &_febag); _decc != nil {
					return _decc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_afda.SrgbClr = NewCT_SRgbColor()
				if _fcgdc := d.DecodeElement(_afda.SrgbClr, &_febag); _fcgdc != nil {
					return _fcgdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_afda.HslClr = NewCT_HslColor()
				if _dfgg := d.DecodeElement(_afda.HslClr, &_febag); _dfgg != nil {
					return _dfgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_afda.SysClr = NewCT_SystemColor()
				if _gbe := d.DecodeElement(_afda.SysClr, &_febag); _gbe != nil {
					return _gbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_afda.SchemeClr = NewCT_SchemeColor()
				if _cca := d.DecodeElement(_afda.SchemeClr, &_febag); _cca != nil {
					return _cca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_afda.PrstClr = NewCT_PresetColor()
				if _adac := d.DecodeElement(_afda.PrstClr, &_febag); _adac != nil {
					return _adac
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0052\u0065\u0070\u006c\u0061\u0063\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _febag.Name)
				if _aaeb := d.Skip(); _aaeb != nil {
					return _aaeb
				}
			}
		case _d.EndElement:
			break _ceee
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextAutonumberBullet and its children
func (_dbdcf *CT_TextAutonumberBullet) Validate() error {
	return _dbdcf.ValidateWithPath("\u0043\u0054\u005fTe\u0078\u0074\u0041\u0075\u0074\u006f\u006e\u0075\u006d\u0062\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074")
}
func (_cbgeb ST_LightRigType) ValidateWithPath(path string) error {
	switch _cbgeb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbgeb))
	}
	return nil
}

// ValidateWithPath validates the CT_TextCharacterProperties and its children, prefixing error messages with path
func (_geba *CT_TextCharacterProperties) ValidateWithPath(path string) error {
	if _geba.SzAttr != nil {
		if *_geba.SzAttr < 100 {
			return _dg.Errorf("\u0025\u0073/m\u002e\u0053\u007aA\u0074\u0074\u0072\u0020mus\u0074 b\u0065\u0020\u003e\u003d\u0020\u0031\u00300 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_geba.SzAttr)
		}
		if *_geba.SzAttr > 400000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u007a\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_geba.SzAttr)
		}
	}
	if _gabgd := _geba.UAttr.ValidateWithPath(path + "\u002f\u0055\u0041\u0074\u0074\u0072"); _gabgd != nil {
		return _gabgd
	}
	if _badecf := _geba.StrikeAttr.ValidateWithPath(path + "/\u0053\u0074\u0072\u0069\u006b\u0065\u0041\u0074\u0074\u0072"); _badecf != nil {
		return _badecf
	}
	if _geba.KernAttr != nil {
		if *_geba.KernAttr < 0 {
			return _dg.Errorf("\u0025\u0073/m\u002e\u004b\u0065r\u006e\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_geba.KernAttr)
		}
		if *_geba.KernAttr > 400000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eK\u0065\u0072\u006e\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_geba.KernAttr)
		}
	}
	if _gbefbe := _geba.CapAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u0070\u0041\u0074\u0074\u0072"); _gbefbe != nil {
		return _gbefbe
	}
	if _geba.SpcAttr != nil {
		if _eaegbd := _geba.SpcAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0063\u0041\u0074\u0074\u0072"); _eaegbd != nil {
			return _eaegbd
		}
	}
	if _geba.BaselineAttr != nil {
		if _fdafg := _geba.BaselineAttr.ValidateWithPath(path + "\u002f\u0042\u0061\u0073\u0065\u006c\u0069\u006e\u0065\u0041\u0074\u0074\u0072"); _fdafg != nil {
			return _fdafg
		}
	}
	if _geba.Ln != nil {
		if _eabgf := _geba.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _eabgf != nil {
			return _eabgf
		}
	}
	if _geba.NoFill != nil {
		if _cade := _geba.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _cade != nil {
			return _cade
		}
	}
	if _geba.SolidFill != nil {
		if _dccgg := _geba.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _dccgg != nil {
			return _dccgg
		}
	}
	if _geba.GradFill != nil {
		if _dcggc := _geba.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _dcggc != nil {
			return _dcggc
		}
	}
	if _geba.BlipFill != nil {
		if _ecagd := _geba.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ecagd != nil {
			return _ecagd
		}
	}
	if _geba.PattFill != nil {
		if _eceda := _geba.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _eceda != nil {
			return _eceda
		}
	}
	if _geba.GrpFill != nil {
		if _cbcfc := _geba.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _cbcfc != nil {
			return _cbcfc
		}
	}
	if _geba.EffectLst != nil {
		if _egacf := _geba.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _egacf != nil {
			return _egacf
		}
	}
	if _geba.EffectDag != nil {
		if _dadgb := _geba.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _dadgb != nil {
			return _dadgb
		}
	}
	if _geba.Highlight != nil {
		if _ggbbc := _geba.Highlight.ValidateWithPath(path + "\u002f\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"); _ggbbc != nil {
			return _ggbbc
		}
	}
	if _geba.ULnTx != nil {
		if _gdaab := _geba.ULnTx.ValidateWithPath(path + "\u002f\u0055\u004c\u006e\u0054\u0078"); _gdaab != nil {
			return _gdaab
		}
	}
	if _geba.ULn != nil {
		if _cccff := _geba.ULn.ValidateWithPath(path + "\u002f\u0055\u004c\u006e"); _cccff != nil {
			return _cccff
		}
	}
	if _geba.UFillTx != nil {
		if _cbfcgd := _geba.UFillTx.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c\u0054\u0078"); _cbfcgd != nil {
			return _cbfcgd
		}
	}
	if _geba.UFill != nil {
		if _cddbb := _geba.UFill.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c"); _cddbb != nil {
			return _cddbb
		}
	}
	if _geba.Latin != nil {
		if _ebfaa := _geba.Latin.ValidateWithPath(path + "\u002f\u004c\u0061\u0074\u0069\u006e"); _ebfaa != nil {
			return _ebfaa
		}
	}
	if _geba.Ea != nil {
		if _fbgac := _geba.Ea.ValidateWithPath(path + "\u002f\u0045\u0061"); _fbgac != nil {
			return _fbgac
		}
	}
	if _geba.Cs != nil {
		if _fgded := _geba.Cs.ValidateWithPath(path + "\u002f\u0043\u0073"); _fgded != nil {
			return _fgded
		}
	}
	if _geba.Sym != nil {
		if _eefgd := _geba.Sym.ValidateWithPath(path + "\u002f\u0053\u0079\u006d"); _eefgd != nil {
			return _eefgd
		}
	}
	if _geba.HlinkClick != nil {
		if _agde := _geba.HlinkClick.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"); _agde != nil {
			return _agde
		}
	}
	if _geba.HlinkMouseOver != nil {
		if _eabbg := _geba.HlinkMouseOver.ValidateWithPath(path + "\u002fH\u006ci\u006e\u006b\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"); _eabbg != nil {
			return _eabbg
		}
	}
	if _geba.Rtl != nil {
		if _cccfb := _geba.Rtl.ValidateWithPath(path + "\u002f\u0052\u0074\u006c"); _cccfb != nil {
			return _cccfb
		}
	}
	if _geba.ExtLst != nil {
		if _ffeca := _geba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffeca != nil {
			return _ffeca
		}
	}
	return nil
}
func (_aaaaa *EG_TextUnderlineFill) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_edagf:
	for {
		_dbgec, _gbada := d.Token()
		if _gbada != nil {
			return _gbada
		}
		switch _gdcff := _dbgec.(type) {
		case _d.StartElement:
			switch _gdcff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}:
				_aaaaa.UFillTx = NewCT_TextUnderlineFillFollowText()
				if _dafba := d.DecodeElement(_aaaaa.UFillTx, &_gdcff); _dafba != nil {
					return _dafba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}:
				_aaaaa.UFill = NewCT_TextUnderlineFillGroupWrapper()
				if _gfdac := d.DecodeElement(_aaaaa.UFill, &_gdcff); _gfdac != nil {
					return _gfdac
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _gdcff.Name)
				if _bbbbed := d.Skip(); _bbbbed != nil {
					return _bbbbed
				}
			}
		case _d.EndElement:
			break _edagf
		case _d.CharData:
		}
	}
	return nil
}
func (_fbcgc ST_TextFontAlignType) String() string {
	switch _fbcgc {
	case 0:
		return ""
	case 1:
		return "\u0061\u0075\u0074\u006f"
	case 2:
		return "\u0074"
	case 3:
		return "\u0063\u0074\u0072"
	case 4:
		return "\u0062\u0061\u0073\u0065"
	case 5:
		return "\u0062"
	}
	return ""
}

// Validate validates the CT_ShapeStyle and its children
func (_bfgee *CT_ShapeStyle) Validate() error {
	return _bfgee.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065")
}
func (_beag ST_BlackWhiteMode) String() string {
	switch _beag {
	case 0:
		return ""
	case 1:
		return "\u0063\u006c\u0072"
	case 2:
		return "\u0061\u0075\u0074\u006f"
	case 3:
		return "\u0067\u0072\u0061\u0079"
	case 4:
		return "\u006c\u0074\u0047\u0072\u0061\u0079"
	case 5:
		return "\u0069n\u0076\u0047\u0072\u0061\u0079"
	case 6:
		return "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e"
	case 7:
		return "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y"
	case 8:
		return "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065"
	case 9:
		return "\u0062\u006c\u0061c\u006b"
	case 10:
		return "\u0077\u0068\u0069t\u0065"
	case 11:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}
func NewCT_AdjPoint2D() *CT_AdjPoint2D { _cab := &CT_AdjPoint2D{}; return _cab }
func (_gggf *CT_BackgroundFillStyleList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	for _, _bbce := range _gggf.EG_FillProperties {
		_bbce.MarshalXML(e, _d.StartElement{})
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TextSpacing struct {
	SpcPct *CT_TextSpacingPercent
	SpcPts *CT_TextSpacingPoint
}

// ValidateWithPath validates the CT_TextUnderlineFillFollowText and its children, prefixing error messages with path
func (_fffaa *CT_TextUnderlineFillFollowText) ValidateWithPath(path string) error { return nil }

const (
	ST_TileFlipModeUnset ST_TileFlipMode = 0
	ST_TileFlipModeNone  ST_TileFlipMode = 1
	ST_TileFlipModeX     ST_TileFlipMode = 2
	ST_TileFlipModeY     ST_TileFlipMode = 3
	ST_TileFlipModeXy    ST_TileFlipMode = 4
)

// ValidateWithPath validates the CT_FillProperties and its children, prefixing error messages with path
func (_cabfd *CT_FillProperties) ValidateWithPath(path string) error {
	if _cabfd.NoFill != nil {
		if _cbdec := _cabfd.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _cbdec != nil {
			return _cbdec
		}
	}
	if _cabfd.SolidFill != nil {
		if _gefg := _cabfd.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _gefg != nil {
			return _gefg
		}
	}
	if _cabfd.GradFill != nil {
		if _deae := _cabfd.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _deae != nil {
			return _deae
		}
	}
	if _cabfd.BlipFill != nil {
		if _fgdg := _cabfd.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _fgdg != nil {
			return _fgdg
		}
	}
	if _cabfd.PattFill != nil {
		if _ebeac := _cabfd.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _ebeac != nil {
			return _ebeac
		}
	}
	if _cabfd.GrpFill != nil {
		if _fagb := _cabfd.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _fagb != nil {
			return _fagb
		}
	}
	return nil
}
func (_eage *ST_PathFillMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_eage = 0
	case "\u006e\u006f\u006e\u0065":
		*_eage = 1
	case "\u006e\u006f\u0072\u006d":
		*_eage = 2
	case "\u006ci\u0067\u0068\u0074\u0065\u006e":
		*_eage = 3
	case "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073":
		*_eage = 4
	case "\u0064\u0061\u0072\u006b\u0065\u006e":
		*_eage = 5
	case "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073":
		*_eage = 6
	}
	return nil
}

type CT_OfficeStyleSheet struct {
	NameAttr          *string
	ThemeElements     *CT_BaseStyles
	ObjectDefaults    *CT_ObjectStyleDefaults
	ExtraClrSchemeLst *CT_ColorSchemeList
	CustClrLst        *CT_CustomColorList
	ExtLst            *CT_OfficeArtExtensionList
}

func NewCT_LineJoinMiterProperties() *CT_LineJoinMiterProperties {
	_bcede := &CT_LineJoinMiterProperties{}
	return _bcede
}

type CT_Path2D struct {
	WAttr           *int64
	HAttr           *int64
	FillAttr        ST_PathFillMode
	StrokeAttr      *bool
	ExtrusionOkAttr *bool
	Close           []*CT_Path2DClose
	MoveTo          []*CT_Path2DMoveTo
	LnTo            []*CT_Path2DLineTo
	ArcTo           []*CT_Path2DArcTo
	QuadBezTo       []*CT_Path2DQuadBezierTo
	CubicBezTo      []*CT_Path2DCubicBezierTo
}

// ValidateWithPath validates the CT_Angle and its children, prefixing error messages with path
func (_gdfb *CT_Angle) ValidateWithPath(path string) error { return nil }

const (
	ST_CompoundLineUnset     ST_CompoundLine = 0
	ST_CompoundLineSng       ST_CompoundLine = 1
	ST_CompoundLineDbl       ST_CompoundLine = 2
	ST_CompoundLineThickThin ST_CompoundLine = 3
	ST_CompoundLineThinThick ST_CompoundLine = 4
	ST_CompoundLineTri       ST_CompoundLine = 5
)

// Validate validates the CT_NonVisualGraphicFrameProperties and its children
func (_faefe *CT_NonVisualGraphicFrameProperties) Validate() error {
	return _faefe.ValidateWithPath("\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072a\u0070h\u0069c\u0046r\u0061\u006d\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_LightRig struct {
	RigAttr ST_LightRigType
	DirAttr ST_LightRigDirection
	Rot     *CT_SphereCoords
}

func (_bgdcb ST_TextFontAlignType) ValidateWithPath(path string) error {
	switch _bgdcb {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgdcb))
	}
	return nil
}

type EG_ThemeableFontStyles struct {
	Font    *CT_FontCollection
	FontRef *CT_FontReference
}

// Validate validates the CT_PresetTextShape and its children
func (_eefc *CT_PresetTextShape) Validate() error {
	return _eefc.ValidateWithPath("\u0043T\u005fP\u0072\u0065\u0073\u0065\u0074T\u0065\u0078t\u0053\u0068\u0061\u0070\u0065")
}

type CT_Vector3D struct {
	DxAttr ST_Coordinate
	DyAttr ST_Coordinate
	DzAttr ST_Coordinate
}

func (_bfdg *CT_AudioCDTime) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0072\u0061c\u006b"}, Value: _dg.Sprintf("\u0025\u0076", _bfdg.TrackAttr)})
	if _bfdg.TimeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_bfdg.TimeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ColorMRU and its children, prefixing error messages with path
func (_afba *CT_ColorMRU) ValidateWithPath(path string) error {
	for _bdfge, _ecfbe := range _afba.EG_ColorChoice {
		if _aaec := _ecfbe.ValidateWithPath(_dg.Sprintf("%\u0073\u002f\u0045\u0047_C\u006fl\u006f\u0072\u0043\u0068\u006fi\u0063\u0065\u005b\u0025\u0064\u005d", path, _bdfge)); _aaec != nil {
			return _aaec
		}
	}
	return nil
}
func (_edee *CT_GammaTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TextBulletSizeFollowText struct{}

func (_fbgcfd *EG_TextBulletSize) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_adgec:
	for {
		_cgeadc, _fbegd := d.Token()
		if _fbegd != nil {
			return _fbegd
		}
		switch _dadadd := _cgeadc.(type) {
		case _d.StartElement:
			switch _dadadd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}:
				_fbgcfd.BuSzTx = NewCT_TextBulletSizeFollowText()
				if _dfcgg := d.DecodeElement(_fbgcfd.BuSzTx, &_dadadd); _dfcgg != nil {
					return _dfcgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}:
				_fbgcfd.BuSzPct = NewCT_TextBulletSizePercent()
				if _fdeabd := d.DecodeElement(_fbgcfd.BuSzPct, &_dadadd); _fdeabd != nil {
					return _fdeabd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}:
				_fbgcfd.BuSzPts = NewCT_TextBulletSizePoint()
				if _eedfa := d.DecodeElement(_fbgcfd.BuSzPts, &_dadadd); _eedfa != nil {
					return _eedfa
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0020\u0025\u0076", _dadadd.Name)
				if _fcdegc := d.Skip(); _fcdegc != nil {
					return _fcdegc
				}
			}
		case _d.EndElement:
			break _adgec
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_XYAdjustHandle and its children, prefixing error messages with path
func (_gbcfd *CT_XYAdjustHandle) ValidateWithPath(path string) error {
	if _gbcfd.MinXAttr != nil {
		if _aeafbc := _gbcfd.MinXAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0058\u0041\u0074\u0074r"); _aeafbc != nil {
			return _aeafbc
		}
	}
	if _gbcfd.MaxXAttr != nil {
		if _dddbgc := _gbcfd.MaxXAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0058\u0041\u0074\u0074r"); _dddbgc != nil {
			return _dddbgc
		}
	}
	if _gbcfd.MinYAttr != nil {
		if _gebfc := _gbcfd.MinYAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0059\u0041\u0074\u0074r"); _gebfc != nil {
			return _gebfc
		}
	}
	if _gbcfd.MaxYAttr != nil {
		if _egfce := _gbcfd.MaxYAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0059\u0041\u0074\u0074r"); _egfce != nil {
			return _egfce
		}
	}
	if _dbgbg := _gbcfd.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _dbgbg != nil {
		return _dbgbg
	}
	return nil
}
func (_defgbf *ST_LightRigDirection) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cfcaad, _gccfe := d.Token()
	if _gccfe != nil {
		return _gccfe
	}
	if _aeeeg, _decae := _cfcaad.(_d.EndElement); _decae && _aeeeg.Name == start.Name {
		*_defgbf = 1
		return nil
	}
	if _baafa, _fbbfb := _cfcaad.(_d.CharData); !_fbbfb {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cfcaad)
	} else {
		switch string(_baafa) {
		case "":
			*_defgbf = 0
		case "\u0074\u006c":
			*_defgbf = 1
		case "\u0074":
			*_defgbf = 2
		case "\u0074\u0072":
			*_defgbf = 3
		case "\u006c":
			*_defgbf = 4
		case "\u0072":
			*_defgbf = 5
		case "\u0062\u006c":
			*_defgbf = 6
		case "\u0062":
			*_defgbf = 7
		case "\u0062\u0072":
			*_defgbf = 8
		}
	}
	_cfcaad, _gccfe = d.Token()
	if _gccfe != nil {
		return _gccfe
	}
	if _fgead, _ecfae := _cfcaad.(_d.EndElement); _ecfae && _fgead.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cfcaad)
}

// ValidateWithPath validates the EG_TextBullet and its children, prefixing error messages with path
func (_effcf *EG_TextBullet) ValidateWithPath(path string) error {
	if _effcf.BuNone != nil {
		if _daafe := _effcf.BuNone.ValidateWithPath(path + "\u002fB\u0075\u004e\u006f\u006e\u0065"); _daafe != nil {
			return _daafe
		}
	}
	if _effcf.BuAutoNum != nil {
		if _dfcf := _effcf.BuAutoNum.ValidateWithPath(path + "\u002f\u0042\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"); _dfcf != nil {
			return _dfcf
		}
	}
	if _effcf.BuChar != nil {
		if _addad := _effcf.BuChar.ValidateWithPath(path + "\u002fB\u0075\u0043\u0068\u0061\u0072"); _addad != nil {
			return _addad
		}
	}
	if _effcf.BuBlip != nil {
		if _gedbb := _effcf.BuBlip.ValidateWithPath(path + "\u002fB\u0075\u0042\u006c\u0069\u0070"); _gedbb != nil {
			return _gedbb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LineProperties and its children, prefixing error messages with path
func (_gbacd *CT_LineProperties) ValidateWithPath(path string) error {
	if _gbacd.WAttr != nil {
		if *_gbacd.WAttr < 0 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gbacd.WAttr)
		}
		if *_gbacd.WAttr > 20116800 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020<\u003d\u0020\u0032\u0030\u0031\u0031\u0036\u0038\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_gbacd.WAttr)
		}
	}
	if _befed := _gbacd.CapAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u0070\u0041\u0074\u0074\u0072"); _befed != nil {
		return _befed
	}
	if _bcage := _gbacd.CmpdAttr.ValidateWithPath(path + "\u002fC\u006d\u0070\u0064\u0041\u0074\u0074r"); _bcage != nil {
		return _bcage
	}
	if _cfadd := _gbacd.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _cfadd != nil {
		return _cfadd
	}
	if _gbacd.NoFill != nil {
		if _gceb := _gbacd.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _gceb != nil {
			return _gceb
		}
	}
	if _gbacd.SolidFill != nil {
		if _aeaea := _gbacd.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _aeaea != nil {
			return _aeaea
		}
	}
	if _gbacd.GradFill != nil {
		if _aggaf := _gbacd.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _aggaf != nil {
			return _aggaf
		}
	}
	if _gbacd.PattFill != nil {
		if _fgab := _gbacd.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _fgab != nil {
			return _fgab
		}
	}
	if _gbacd.PrstDash != nil {
		if _abgbe := _gbacd.PrstDash.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0044\u0061\u0073h"); _abgbe != nil {
			return _abgbe
		}
	}
	if _gbacd.CustDash != nil {
		if _fbddg := _gbacd.CustDash.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0044\u0061\u0073h"); _fbddg != nil {
			return _fbddg
		}
	}
	if _gbacd.Round != nil {
		if _dbbca := _gbacd.Round.ValidateWithPath(path + "\u002f\u0052\u006f\u0075\u006e\u0064"); _dbbca != nil {
			return _dbbca
		}
	}
	if _gbacd.Bevel != nil {
		if _fdfgb := _gbacd.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _fdfgb != nil {
			return _fdfgb
		}
	}
	if _gbacd.Miter != nil {
		if _gadec := _gbacd.Miter.ValidateWithPath(path + "\u002f\u004d\u0069\u0074\u0065\u0072"); _gadec != nil {
			return _gadec
		}
	}
	if _gbacd.HeadEnd != nil {
		if _gffda := _gbacd.HeadEnd.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0045\u006e\u0064"); _gffda != nil {
			return _gffda
		}
	}
	if _gbacd.TailEnd != nil {
		if _cggea := _gbacd.TailEnd.ValidateWithPath(path + "\u002f\u0054\u0061\u0069\u006c\u0045\u006e\u0064"); _cggea != nil {
			return _cggea
		}
	}
	if _gbacd.ExtLst != nil {
		if _ddba := _gbacd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddba != nil {
			return _ddba
		}
	}
	return nil
}

type ST_BlendMode byte
type EG_ShadeProperties struct {
	Lin  *CT_LinearShadeProperties
	Path *CT_PathShadeProperties
}

func (_bbcafd ST_TextAutonumberScheme) ValidateWithPath(path string) error {
	switch _bbcafd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbcafd))
	}
	return nil
}

type CT_GvmlGroupShapeChoice struct {
	TxSp         []*CT_GvmlTextShape
	Sp           []*CT_GvmlShape
	CxnSp        []*CT_GvmlConnector
	Pic          []*CT_GvmlPicture
	GraphicFrame []*CT_GvmlGraphicalObjectFrame
	GrpSp        []*CT_GvmlGroupShape
}

func (_dbedb *CT_TextFont) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bgbgf := range start.Attr {
		if _bgbgf.Name.Local == "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065" {
			_gcdddc, _bbfaf := _bgbgf.Value, error(nil)
			if _bbfaf != nil {
				return _bbfaf
			}
			_dbedb.TypefaceAttr = _gcdddc
			continue
		}
		if _bgbgf.Name.Local == "\u0070\u0061\u006e\u006f\u0073\u0065" {
			_gbbbf, _efdadf := _bgbgf.Value, error(nil)
			if _efdadf != nil {
				return _efdadf
			}
			_dbedb.PanoseAttr = &_gbbbf
			continue
		}
		if _bgbgf.Name.Local == "p\u0069\u0074\u0063\u0068\u0046\u0061\u006d\u0069\u006c\u0079" {
			_dbedb.PitchFamilyAttr.UnmarshalXMLAttr(_bgbgf)
			continue
		}
		if _bgbgf.Name.Local == "\u0063h\u0061\u0072\u0073\u0065\u0074" {
			_fedba, _eaec := _c.ParseInt(_bgbgf.Value, 10, 8)
			if _eaec != nil {
				return _eaec
			}
			_fgdbg := int8(_fedba)
			_dbedb.CharsetAttr = &_fgdbg
			continue
		}
	}
	for {
		_aada, _degfb := d.Token()
		if _degfb != nil {
			return _dg.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074\u003a\u0020\u0025\u0073", _degfb)
		}
		if _deaee, _fcfde := _aada.(_d.EndElement); _fcfde && _deaee.Name == start.Name {
			break
		}
	}
	return nil
}
func (_egga *CT_GradientStop) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fefdd := range start.Attr {
		if _fefdd.Name.Local == "\u0070\u006f\u0073" {
			_cgdee, _fffab := ParseUnionST_PositiveFixedPercentage(_fefdd.Value)
			if _fffab != nil {
				return _fffab
			}
			_egga.PosAttr = _cgdee
			continue
		}
	}
_ccag:
	for {
		_ccgc, _dege := d.Token()
		if _dege != nil {
			return _dege
		}
		switch _acec := _ccgc.(type) {
		case _d.StartElement:
			switch _acec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_egga.ScrgbClr = NewCT_ScRgbColor()
				if _geaec := d.DecodeElement(_egga.ScrgbClr, &_acec); _geaec != nil {
					return _geaec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_egga.SrgbClr = NewCT_SRgbColor()
				if _bgcdg := d.DecodeElement(_egga.SrgbClr, &_acec); _bgcdg != nil {
					return _bgcdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_egga.HslClr = NewCT_HslColor()
				if _abeg := d.DecodeElement(_egga.HslClr, &_acec); _abeg != nil {
					return _abeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_egga.SysClr = NewCT_SystemColor()
				if _edebf := d.DecodeElement(_egga.SysClr, &_acec); _edebf != nil {
					return _edebf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_egga.SchemeClr = NewCT_SchemeColor()
				if _ggfb := d.DecodeElement(_egga.SchemeClr, &_acec); _ggfb != nil {
					return _ggfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_egga.PrstClr = NewCT_PresetColor()
				if _gged := d.DecodeElement(_egga.PrstClr, &_acec); _gged != nil {
					return _gged
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0020\u0025\u0076", _acec.Name)
				if _edeec := d.Skip(); _edeec != nil {
					return _edeec
				}
			}
		case _d.EndElement:
			break _ccag
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GeomGuide and its children
func (_fefaf *CT_GeomGuide) Validate() error {
	return _fefaf.ValidateWithPath("\u0043\u0054\u005fG\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065")
}

// Validate validates the CT_TablePropertiesChoice and its children
func (_abcgc *CT_TablePropertiesChoice) Validate() error {
	return _abcgc.ValidateWithPath("\u0043T\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065")
}
func NewCT_TransformEffect() *CT_TransformEffect { _ccbbc := &CT_TransformEffect{}; return _ccbbc }
func (_acdfe *CT_SRgbColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _dg.Sprintf("\u0025\u0076", _acdfe.ValAttr)})
	e.EncodeToken(start)
	if _acdfe.EG_ColorTransform != nil {
		for _, _agffc := range _acdfe.EG_ColorTransform {
			_agffc.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PresetPatternValUnset      ST_PresetPatternVal = 0
	ST_PresetPatternValPct5       ST_PresetPatternVal = 1
	ST_PresetPatternValPct10      ST_PresetPatternVal = 2
	ST_PresetPatternValPct20      ST_PresetPatternVal = 3
	ST_PresetPatternValPct25      ST_PresetPatternVal = 4
	ST_PresetPatternValPct30      ST_PresetPatternVal = 5
	ST_PresetPatternValPct40      ST_PresetPatternVal = 6
	ST_PresetPatternValPct50      ST_PresetPatternVal = 7
	ST_PresetPatternValPct60      ST_PresetPatternVal = 8
	ST_PresetPatternValPct70      ST_PresetPatternVal = 9
	ST_PresetPatternValPct75      ST_PresetPatternVal = 10
	ST_PresetPatternValPct80      ST_PresetPatternVal = 11
	ST_PresetPatternValPct90      ST_PresetPatternVal = 12
	ST_PresetPatternValHorz       ST_PresetPatternVal = 13
	ST_PresetPatternValVert       ST_PresetPatternVal = 14
	ST_PresetPatternValLtHorz     ST_PresetPatternVal = 15
	ST_PresetPatternValLtVert     ST_PresetPatternVal = 16
	ST_PresetPatternValDkHorz     ST_PresetPatternVal = 17
	ST_PresetPatternValDkVert     ST_PresetPatternVal = 18
	ST_PresetPatternValNarHorz    ST_PresetPatternVal = 19
	ST_PresetPatternValNarVert    ST_PresetPatternVal = 20
	ST_PresetPatternValDashHorz   ST_PresetPatternVal = 21
	ST_PresetPatternValDashVert   ST_PresetPatternVal = 22
	ST_PresetPatternValCross      ST_PresetPatternVal = 23
	ST_PresetPatternValDnDiag     ST_PresetPatternVal = 24
	ST_PresetPatternValUpDiag     ST_PresetPatternVal = 25
	ST_PresetPatternValLtDnDiag   ST_PresetPatternVal = 26
	ST_PresetPatternValLtUpDiag   ST_PresetPatternVal = 27
	ST_PresetPatternValDkDnDiag   ST_PresetPatternVal = 28
	ST_PresetPatternValDkUpDiag   ST_PresetPatternVal = 29
	ST_PresetPatternValWdDnDiag   ST_PresetPatternVal = 30
	ST_PresetPatternValWdUpDiag   ST_PresetPatternVal = 31
	ST_PresetPatternValDashDnDiag ST_PresetPatternVal = 32
	ST_PresetPatternValDashUpDiag ST_PresetPatternVal = 33
	ST_PresetPatternValDiagCross  ST_PresetPatternVal = 34
	ST_PresetPatternValSmCheck    ST_PresetPatternVal = 35
	ST_PresetPatternValLgCheck    ST_PresetPatternVal = 36
	ST_PresetPatternValSmGrid     ST_PresetPatternVal = 37
	ST_PresetPatternValLgGrid     ST_PresetPatternVal = 38
	ST_PresetPatternValDotGrid    ST_PresetPatternVal = 39
	ST_PresetPatternValSmConfetti ST_PresetPatternVal = 40
	ST_PresetPatternValLgConfetti ST_PresetPatternVal = 41
	ST_PresetPatternValHorzBrick  ST_PresetPatternVal = 42
	ST_PresetPatternValDiagBrick  ST_PresetPatternVal = 43
	ST_PresetPatternValSolidDmnd  ST_PresetPatternVal = 44
	ST_PresetPatternValOpenDmnd   ST_PresetPatternVal = 45
	ST_PresetPatternValDotDmnd    ST_PresetPatternVal = 46
	ST_PresetPatternValPlaid      ST_PresetPatternVal = 47
	ST_PresetPatternValSphere     ST_PresetPatternVal = 48
	ST_PresetPatternValWeave      ST_PresetPatternVal = 49
	ST_PresetPatternValDivot      ST_PresetPatternVal = 50
	ST_PresetPatternValShingle    ST_PresetPatternVal = 51
	ST_PresetPatternValWave       ST_PresetPatternVal = 52
	ST_PresetPatternValTrellis    ST_PresetPatternVal = 53
	ST_PresetPatternValZigZag     ST_PresetPatternVal = 54
)

func (_dafde ST_AnimationBuildType) Validate() error { return _dafde.ValidateWithPath("") }

// Validate validates the CT_ColorSchemeAndMapping and its children
func (_geab *CT_ColorSchemeAndMapping) Validate() error {
	return _geab.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006de\u0041\u006e\u0064\u004d\u0061\u0070\u0070\u0069\u006e\u0067")
}

// ValidateWithPath validates the CT_GroupTransform2D and its children, prefixing error messages with path
func (_edefb *CT_GroupTransform2D) ValidateWithPath(path string) error {
	if _edefb.Off != nil {
		if _bbegb := _edefb.Off.ValidateWithPath(path + "\u002f\u004f\u0066\u0066"); _bbegb != nil {
			return _bbegb
		}
	}
	if _edefb.Ext != nil {
		if _edcae := _edefb.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _edcae != nil {
			return _edcae
		}
	}
	if _edefb.ChOff != nil {
		if _efdda := _edefb.ChOff.ValidateWithPath(path + "\u002f\u0043\u0068\u004f\u0066\u0066"); _efdda != nil {
			return _efdda
		}
	}
	if _edefb.ChExt != nil {
		if _egaf := _edefb.ChExt.ValidateWithPath(path + "\u002f\u0043\u0068\u0045\u0078\u0074"); _egaf != nil {
			return _egaf
		}
	}
	return nil
}
func (_bgce *CT_ColorMappingOverride) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bgce.Choice = NewCT_ColorMappingOverrideChoice()
_aacc:
	for {
		_fgdb, _bcfb := d.Token()
		if _bcfb != nil {
			return _bcfb
		}
		switch _ecg := _fgdb.(type) {
		case _d.StartElement:
			switch _ecg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}:
				_bgce.Choice = NewCT_ColorMappingOverrideChoice()
				if _bdbge := d.DecodeElement(&_bgce.Choice.MasterClrMapping, &_ecg); _bdbge != nil {
					return _bdbge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}:
				_bgce.Choice = NewCT_ColorMappingOverrideChoice()
				if _afgag := d.DecodeElement(&_bgce.Choice.OverrideClrMapping, &_ecg); _afgag != nil {
					return _afgag
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070i\u006e\u0067\u004f\u0076\u0065\u0072r\u0069\u0064\u0065 \u0025\u0076", _ecg.Name)
				if _efef := d.Skip(); _efef != nil {
					return _efef
				}
			}
		case _d.EndElement:
			break _aacc
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SoftEdgesEffect and its children, prefixing error messages with path
func (_gabf *CT_SoftEdgesEffect) ValidateWithPath(path string) error {
	if _gabf.RadAttr < 0 {
		return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _gabf.RadAttr)
	}
	if _gabf.RadAttr > 27273042316900 {
		return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, _gabf.RadAttr)
	}
	return nil
}

type CT_GammaTransform struct{}

// Validate validates the CT_SphereCoords and its children
func (_aadgb *CT_SphereCoords) Validate() error {
	return _aadgb.ValidateWithPath("\u0043T\u005fS\u0070\u0068\u0065\u0072\u0065\u0043\u006f\u006f\u0072\u0064\u0073")
}

// ValidateWithPath validates the CT_ClipboardStyleSheet and its children, prefixing error messages with path
func (_ccea *CT_ClipboardStyleSheet) ValidateWithPath(path string) error {
	if _acgd := _ccea.ThemeElements.ValidateWithPath(path + "\u002f\u0054\u0068\u0065\u006d\u0065\u0045\u006c\u0065m\u0065\u006e\u0074\u0073"); _acgd != nil {
		return _acgd
	}
	if _ffdg := _ccea.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _ffdg != nil {
		return _ffdg
	}
	return nil
}

// ValidateWithPath validates the EG_ColorChoice and its children, prefixing error messages with path
func (_gfggd *EG_ColorChoice) ValidateWithPath(path string) error {
	if _gfggd.ScrgbClr != nil {
		if _cedaf := _gfggd.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cedaf != nil {
			return _cedaf
		}
	}
	if _gfggd.SrgbClr != nil {
		if _dcggb := _gfggd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _dcggb != nil {
			return _dcggb
		}
	}
	if _gfggd.HslClr != nil {
		if _aefae := _gfggd.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _aefae != nil {
			return _aefae
		}
	}
	if _gfggd.SysClr != nil {
		if _dafcc := _gfggd.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _dafcc != nil {
			return _dafcc
		}
	}
	if _gfggd.SchemeClr != nil {
		if _gdced := _gfggd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _gdced != nil {
			return _gdced
		}
	}
	if _gfggd.PrstClr != nil {
		if _abcbg := _gfggd.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _abcbg != nil {
			return _abcbg
		}
	}
	return nil
}
func (_eecff *CT_FontScheme) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eecff.MajorFont = NewCT_FontCollection()
	_eecff.MinorFont = NewCT_FontCollection()
	for _, _defgb := range start.Attr {
		if _defgb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fegb, _gacec := _defgb.Value, error(nil)
			if _gacec != nil {
				return _gacec
			}
			_eecff.NameAttr = _fegb
			continue
		}
	}
_gbcac:
	for {
		_afcaeb, _ffecd := d.Token()
		if _ffecd != nil {
			return _ffecd
		}
		switch _eegg := _afcaeb.(type) {
		case _d.StartElement:
			switch _eegg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006da\u006a\u006f\u0072\u0046\u006f\u006et"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006da\u006a\u006f\u0072\u0046\u006f\u006et"}:
				if _dfdf := d.DecodeElement(_eecff.MajorFont, &_eegg); _dfdf != nil {
					return _dfdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006di\u006e\u006f\u0072\u0046\u006f\u006et"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006di\u006e\u006f\u0072\u0046\u006f\u006et"}:
				if _adabb := d.DecodeElement(_eecff.MinorFont, &_eegg); _adabb != nil {
					return _adabb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eecff.ExtLst = NewCT_OfficeArtExtensionList()
				if _fbcf := d.DecodeElement(_eecff.ExtLst, &_eegg); _fbcf != nil {
					return _fbcf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065 \u0025\u0076", _eegg.Name)
				if _efbb := d.Skip(); _efbb != nil {
					return _efbb
				}
			}
		case _d.EndElement:
			break _gbcac
		case _d.CharData:
		}
	}
	return nil
}
func (_abca *CT_BiLevelEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0068\u0072\u0065\u0073\u0068"}, Value: _dg.Sprintf("\u0025\u0076", _abca.ThreshAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_TextRun and its children
func (_bfbgf *EG_TextRun) Validate() error {
	return _bfbgf.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075\u006e")
}
func NewCT_Path2DMoveTo() *CT_Path2DMoveTo {
	_fgeb := &CT_Path2DMoveTo{}
	_fgeb.Pt = NewCT_AdjPoint2D()
	return _fgeb
}
func NewCT_InverseGammaTransform() *CT_InverseGammaTransform {
	_edcea := &CT_InverseGammaTransform{}
	return _edcea
}
func NewCT_DuotoneEffect() *CT_DuotoneEffect { _bedg := &CT_DuotoneEffect{}; return _bedg }
func NewCT_GvmlConnector() *CT_GvmlConnector {
	_bbdec := &CT_GvmlConnector{}
	_bbdec.NvCxnSpPr = NewCT_GvmlConnectorNonVisual()
	_bbdec.SpPr = NewCT_ShapeProperties()
	return _bbdec
}
func (_debdc *ST_AnimationChartBuildType) Validate() error { return _debdc.ValidateWithPath("") }
func (_ebce *CT_ColorScheme) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _dg.Sprintf("\u0025\u0076", _ebce.NameAttr)})
	e.EncodeToken(start)
	_ffgea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0064k\u0031"}}
	e.EncodeElement(_ebce.Dk1, _ffgea)
	_gafb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006ct\u0031"}}
	e.EncodeElement(_ebce.Lt1, _gafb)
	_cabef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0064k\u0032"}}
	e.EncodeElement(_ebce.Dk2, _cabef)
	_cgcb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006ct\u0032"}}
	e.EncodeElement(_ebce.Lt2, _cgcb)
	_dfgb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00741"}}
	e.EncodeElement(_ebce.Accent1, _dfgb)
	_ecbf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00742"}}
	e.EncodeElement(_ebce.Accent2, _ecbf)
	_eggb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00743"}}
	e.EncodeElement(_ebce.Accent3, _eggb)
	_cfdcb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00744"}}
	e.EncodeElement(_ebce.Accent4, _cfdcb)
	_adgb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00745"}}
	e.EncodeElement(_ebce.Accent5, _adgb)
	_ggeg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00746"}}
	e.EncodeElement(_ebce.Accent6, _ggeg)
	_dgac := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0068\u006c\u0069\u006e\u006b"}}
	e.EncodeElement(_ebce.Hlink, _dgac)
	_agbgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}}
	e.EncodeElement(_ebce.FolHlink, _agbgb)
	if _ebce.ExtLst != nil {
		_cffc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ebce.ExtLst, _cffc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bccafc *ST_LineCap) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bccafc = 0
	case "\u0072\u006e\u0064":
		*_bccafc = 1
	case "\u0073\u0071":
		*_bccafc = 2
	case "\u0066\u006c\u0061\u0074":
		*_bccafc = 3
	}
	return nil
}

// Validate validates the CT_BlurEffect and its children
func (_gdg *CT_BlurEffect) Validate() error {
	return _gdg.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0075\u0072\u0045\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_ComplementTransform and its children, prefixing error messages with path
func (_fdcb *CT_ComplementTransform) ValidateWithPath(path string) error { return nil }
func (_dc *CT_AdjPoint2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078"}, Value: _dg.Sprintf("\u0025\u0076", _dc.XAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0079"}, Value: _dg.Sprintf("\u0025\u0076", _dc.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextNoAutofit and its children
func (_dfcgfd *CT_TextNoAutofit) Validate() error {
	return _dfcgfd.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074")
}
func (_efed *CT_TextBulletSizeFollowText) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextParagraph and its children, prefixing error messages with path
func (_fgbdd *CT_TextParagraph) ValidateWithPath(path string) error {
	if _fgbdd.PPr != nil {
		if _gceba := _fgbdd.PPr.ValidateWithPath(path + "\u002f\u0050\u0050\u0072"); _gceba != nil {
			return _gceba
		}
	}
	for _aedbac, _efceg := range _fgbdd.EG_TextRun {
		if _adbcg := _efceg.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075n\u005b\u0025\u0064\u005d", path, _aedbac)); _adbcg != nil {
			return _adbcg
		}
	}
	if _fgbdd.EndParaRPr != nil {
		if _cbcbf := _fgbdd.EndParaRPr.ValidateWithPath(path + "/\u0045\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"); _cbcbf != nil {
			return _cbcbf
		}
	}
	return nil
}
func (_cbcae ST_BlackWhiteMode) Validate() error { return _cbcae.ValidateWithPath("") }
func (_dbfggg ST_EffectContainerType) ValidateWithPath(path string) error {
	switch _dbfggg {
	case 0, 1, 2:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbfggg))
	}
	return nil
}
func (_ecgc *CT_ColorReplaceEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ecgc.ScrgbClr != nil {
		_fbfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_ecgc.ScrgbClr, _fbfc)
	}
	if _ecgc.SrgbClr != nil {
		_effbf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_ecgc.SrgbClr, _effbf)
	}
	if _ecgc.HslClr != nil {
		_aabbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_ecgc.HslClr, _aabbc)
	}
	if _ecgc.SysClr != nil {
		_cdef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_ecgc.SysClr, _cdef)
	}
	if _ecgc.SchemeClr != nil {
		_cgbf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_ecgc.SchemeClr, _cgbf)
	}
	if _ecgc.PrstClr != nil {
		_gdgd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_ecgc.PrstClr, _gdgd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fddcc *ST_ChartBuildStep) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fddcc = 0
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_fddcc = 1
	case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_fddcc = 2
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_fddcc = 3
	case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
		*_fddcc = 4
	case "\u0061\u006c\u006c\u0050\u0074\u0073":
		*_fddcc = 5
	case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
		*_fddcc = 6
	}
	return nil
}
func (_effec ST_BevelPresetType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_aaadcg := _d.Attr{}
	_aaadcg.Name = name
	switch _effec {
	case ST_BevelPresetTypeUnset:
		_aaadcg.Value = ""
	case ST_BevelPresetTypeRelaxedInset:
		_aaadcg.Value = "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074"
	case ST_BevelPresetTypeCircle:
		_aaadcg.Value = "\u0063\u0069\u0072\u0063\u006c\u0065"
	case ST_BevelPresetTypeSlope:
		_aaadcg.Value = "\u0073\u006c\u006fp\u0065"
	case ST_BevelPresetTypeCross:
		_aaadcg.Value = "\u0063\u0072\u006fs\u0073"
	case ST_BevelPresetTypeAngle:
		_aaadcg.Value = "\u0061\u006e\u0067l\u0065"
	case ST_BevelPresetTypeSoftRound:
		_aaadcg.Value = "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed"
	case ST_BevelPresetTypeConvex:
		_aaadcg.Value = "\u0063\u006f\u006e\u0076\u0065\u0078"
	case ST_BevelPresetTypeCoolSlant:
		_aaadcg.Value = "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et"
	case ST_BevelPresetTypeDivot:
		_aaadcg.Value = "\u0064\u0069\u0076o\u0074"
	case ST_BevelPresetTypeRiblet:
		_aaadcg.Value = "\u0072\u0069\u0062\u006c\u0065\u0074"
	case ST_BevelPresetTypeHardEdge:
		_aaadcg.Value = "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065"
	case ST_BevelPresetTypeArtDeco:
		_aaadcg.Value = "\u0061r\u0074\u0044\u0065\u0063\u006f"
	}
	return _aaadcg, nil
}

type CT_LineJoinBevel struct{}

func (_gacfd *CT_TableProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ecfge := range start.Attr {
		if _ecfge.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_gabfb, _cafccd := _c.ParseBool(_ecfge.Value)
			if _cafccd != nil {
				return _cafccd
			}
			_gacfd.FirstRowAttr = &_gabfb
			continue
		}
		if _ecfge.Name.Local == "\u006ca\u0073\u0074\u0052\u006f\u0077" {
			_dfdaf, _faeeb := _c.ParseBool(_ecfge.Value)
			if _faeeb != nil {
				return _faeeb
			}
			_gacfd.LastRowAttr = &_dfdaf
			continue
		}
		if _ecfge.Name.Local == "\u0062a\u006e\u0064\u0052\u006f\u0077" {
			_ebgge, _gcdgg := _c.ParseBool(_ecfge.Value)
			if _gcdgg != nil {
				return _gcdgg
			}
			_gacfd.BandRowAttr = &_ebgge
			continue
		}
		if _ecfge.Name.Local == "\u0062a\u006e\u0064\u0043\u006f\u006c" {
			_fagc, _dcddc := _c.ParseBool(_ecfge.Value)
			if _dcddc != nil {
				return _dcddc
			}
			_gacfd.BandColAttr = &_fagc
			continue
		}
		if _ecfge.Name.Local == "\u0072\u0074\u006c" {
			_aegcb, _ccada := _c.ParseBool(_ecfge.Value)
			if _ccada != nil {
				return _ccada
			}
			_gacfd.RtlAttr = &_aegcb
			continue
		}
		if _ecfge.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c" {
			_dbdbad, _cedeb := _c.ParseBool(_ecfge.Value)
			if _cedeb != nil {
				return _cedeb
			}
			_gacfd.FirstColAttr = &_dbdbad
			continue
		}
		if _ecfge.Name.Local == "\u006ca\u0073\u0074\u0043\u006f\u006c" {
			_dbgfb, _ddec := _c.ParseBool(_ecfge.Value)
			if _ddec != nil {
				return _ddec
			}
			_gacfd.LastColAttr = &_dbgfb
			continue
		}
	}
_ecgfc:
	for {
		_fafa, _fcce := d.Token()
		if _fcce != nil {
			return _fcce
		}
		switch _dcddb := _fafa.(type) {
		case _d.StartElement:
			switch _dcddb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_gacfd.NoFill = NewCT_NoFillProperties()
				if _caffc := d.DecodeElement(_gacfd.NoFill, &_dcddb); _caffc != nil {
					return _caffc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_gacfd.SolidFill = NewCT_SolidColorFillProperties()
				if _dbbef := d.DecodeElement(_gacfd.SolidFill, &_dcddb); _dbbef != nil {
					return _dbbef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_gacfd.GradFill = NewCT_GradientFillProperties()
				if _fcbg := d.DecodeElement(_gacfd.GradFill, &_dcddb); _fcbg != nil {
					return _fcbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_gacfd.BlipFill = NewCT_BlipFillProperties()
				if _bdcgd := d.DecodeElement(_gacfd.BlipFill, &_dcddb); _bdcgd != nil {
					return _bdcgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_gacfd.PattFill = NewCT_PatternFillProperties()
				if _adabee := d.DecodeElement(_gacfd.PattFill, &_dcddb); _adabee != nil {
					return _adabee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_gacfd.GrpFill = NewCT_GroupFillProperties()
				if _bdbbe := d.DecodeElement(_gacfd.GrpFill, &_dcddb); _bdbbe != nil {
					return _bdbbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_gacfd.EffectLst = NewCT_EffectList()
				if _cecdf := d.DecodeElement(_gacfd.EffectLst, &_dcddb); _cecdf != nil {
					return _cecdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_gacfd.EffectDag = NewCT_EffectContainer()
				if _gdfff := d.DecodeElement(_gacfd.EffectDag, &_dcddb); _gdfff != nil {
					return _gdfff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_gacfd.Choice = NewCT_TablePropertiesChoice()
				if _dcfeg := d.DecodeElement(&_gacfd.Choice.TableStyle, &_dcddb); _dcfeg != nil {
					return _dcfeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}:
				_gacfd.Choice = NewCT_TablePropertiesChoice()
				if _eaeae := d.DecodeElement(&_gacfd.Choice.TableStyleId, &_dcddb); _eaeae != nil {
					return _eaeae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gacfd.ExtLst = NewCT_OfficeArtExtensionList()
				if _gadgee := d.DecodeElement(_gacfd.ExtLst, &_dcddb); _gadgee != nil {
					return _gadgee
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dcddb.Name)
				if _eabee := d.Skip(); _eabee != nil {
					return _eabee
				}
			}
		case _d.EndElement:
			break _ecgfc
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Table and its children, prefixing error messages with path
func (_bgcdgf *CT_Table) ValidateWithPath(path string) error {
	if _bgcdgf.TblPr != nil {
		if _dbba := _bgcdgf.TblPr.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0050\u0072"); _dbba != nil {
			return _dbba
		}
	}
	if _cegea := _bgcdgf.TblGrid.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0047\u0072\u0069\u0064"); _cegea != nil {
		return _cegea
	}
	for _bdfdf, _ggfga := range _bgcdgf.Tr {
		if _gffbg := _ggfga.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0054\u0072\u005b\u0025\u0064]", path, _bdfdf)); _gffbg != nil {
			return _gffbg
		}
	}
	return nil
}
func NewCT_TableStyleList() *CT_TableStyleList {
	_efabf := &CT_TableStyleList{}
	_efabf.DefAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _efabf
}
func (_afabc *CT_TablePartStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _afabc.TcTxStyle != nil {
		_befg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0074\u0063\u0054\u0078\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_afabc.TcTxStyle, _befg)
	}
	if _afabc.TcStyle != nil {
		_cfgd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0063\u0053\u0074\u0079\u006ce"}}
		e.EncodeElement(_afabc.TcStyle, _cfgd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_AnimationChartOnlyBuildTypeUnset      ST_AnimationChartOnlyBuildType = 0
	ST_AnimationChartOnlyBuildTypeSeries     ST_AnimationChartOnlyBuildType = 1
	ST_AnimationChartOnlyBuildTypeCategory   ST_AnimationChartOnlyBuildType = 2
	ST_AnimationChartOnlyBuildTypeSeriesEl   ST_AnimationChartOnlyBuildType = 3
	ST_AnimationChartOnlyBuildTypeCategoryEl ST_AnimationChartOnlyBuildType = 4
)

func (_bcfgc ST_TileFlipMode) Validate() error { return _bcfgc.ValidateWithPath("") }

type CT_EmptyElement struct{}

func (_ccafb ST_AnimationChartOnlyBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ccafb.String(), start)
}
func (_fabcc ST_TextAutonumberScheme) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fabcc.String(), start)
}

// Validate validates the CT_TableCellProperties and its children
func (_agdag *CT_TableCellProperties) Validate() error {
	return _agdag.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// ValidateWithPath validates the CT_ConnectionSiteList and its children, prefixing error messages with path
func (_eccdg *CT_ConnectionSiteList) ValidateWithPath(path string) error {
	for _agbfg, _eggf := range _eccdg.Cxn {
		if _ecab := _eggf.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0043\u0078\u006e\u005b\u0025\u0064\u005d", path, _agbfg)); _ecab != nil {
			return _ecab
		}
	}
	return nil
}
func (_edafce ST_BevelPresetType) Validate() error { return _edafce.ValidateWithPath("") }

// ValidateWithPath validates the CT_Ratio and its children, prefixing error messages with path
func (_cddeg *CT_Ratio) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_TableStyleCellStyle and its children, prefixing error messages with path
func (_dgfff *CT_TableStyleCellStyle) ValidateWithPath(path string) error {
	if _dgfff.TcBdr != nil {
		if _fbba := _dgfff.TcBdr.ValidateWithPath(path + "\u002f\u0054\u0063\u0042\u0064\u0072"); _fbba != nil {
			return _fbba
		}
	}
	if _dgfff.Fill != nil {
		if _dacd := _dgfff.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _dacd != nil {
			return _dacd
		}
	}
	if _dgfff.FillRef != nil {
		if _fgbggf := _dgfff.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _fgbggf != nil {
			return _fgbggf
		}
	}
	if _dgfff.Cell3D != nil {
		if _bbabdg := _dgfff.Cell3D.ValidateWithPath(path + "\u002fC\u0065\u006c\u006c\u0033\u0044"); _bbabdg != nil {
			return _bbabdg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlUseShapeRectangle and its children, prefixing error messages with path
func (_aadg *CT_GvmlUseShapeRectangle) ValidateWithPath(path string) error { return nil }
func (_gfaeef ST_SystemColorVal) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ccfaa := _d.Attr{}
	_ccfaa.Name = name
	switch _gfaeef {
	case ST_SystemColorValUnset:
		_ccfaa.Value = ""
	case ST_SystemColorValScrollBar:
		_ccfaa.Value = "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r"
	case ST_SystemColorValBackground:
		_ccfaa.Value = "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"
	case ST_SystemColorValActiveCaption:
		_ccfaa.Value = "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValInactiveCaption:
		_ccfaa.Value = "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValMenu:
		_ccfaa.Value = "\u006d\u0065\u006e\u0075"
	case ST_SystemColorValWindow:
		_ccfaa.Value = "\u0077\u0069\u006e\u0064\u006f\u0077"
	case ST_SystemColorValWindowFrame:
		_ccfaa.Value = "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065"
	case ST_SystemColorValMenuText:
		_ccfaa.Value = "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074"
	case ST_SystemColorValWindowText:
		_ccfaa.Value = "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074"
	case ST_SystemColorValCaptionText:
		_ccfaa.Value = "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValActiveBorder:
		_ccfaa.Value = "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072"
	case ST_SystemColorValInactiveBorder:
		_ccfaa.Value = "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072"
	case ST_SystemColorValAppWorkspace:
		_ccfaa.Value = "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065"
	case ST_SystemColorValHighlight:
		_ccfaa.Value = "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"
	case ST_SystemColorValHighlightText:
		_ccfaa.Value = "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnFace:
		_ccfaa.Value = "\u0062t\u006e\u0046\u0061\u0063\u0065"
	case ST_SystemColorValBtnShadow:
		_ccfaa.Value = "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw"
	case ST_SystemColorValGrayText:
		_ccfaa.Value = "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnText:
		_ccfaa.Value = "\u0062t\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValInactiveCaptionText:
		_ccfaa.Value = "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnHighlight:
		_ccfaa.Value = "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case ST_SystemColorVal3dDkShadow:
		_ccfaa.Value = "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077"
	case ST_SystemColorVal3dLight:
		_ccfaa.Value = "\u0033d\u004c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValInfoText:
		_ccfaa.Value = "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074"
	case ST_SystemColorValInfoBk:
		_ccfaa.Value = "\u0069\u006e\u0066\u006f\u0042\u006b"
	case ST_SystemColorValHotLight:
		_ccfaa.Value = "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValGradientActiveCaption:
		_ccfaa.Value = "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValGradientInactiveCaption:
		_ccfaa.Value = "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValMenuHighlight:
		_ccfaa.Value = "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValMenuBar:
		_ccfaa.Value = "\u006de\u006e\u0075\u0042\u0061\u0072"
	}
	return _ccfaa, nil
}
func NewCT_TextBulletSizePercent() *CT_TextBulletSizePercent {
	_bbgg := &CT_TextBulletSizePercent{}
	_bbgg.ValAttr = "\u0031\u0030\u0030\u0025"
	return _bbgg
}
func NewCT_TextParagraph() *CT_TextParagraph { _cacgf := &CT_TextParagraph{}; return _cacgf }

// ST_Coordinate is a union type
type ST_Coordinate struct {
	ST_CoordinateUnqualified *int64
	ST_UniversalMeasure      *string
}

func (_bdagga ST_SchemeColorVal) ValidateWithPath(path string) error {
	switch _bdagga {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdagga))
	}
	return nil
}

type EG_TextBulletTypeface struct {
	BuFontTx *CT_TextBulletTypefaceFollowText
	BuFont   *CT_TextFont
}

func (_begfg ST_TextStrikeType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dcbdc := _d.Attr{}
	_dcbdc.Name = name
	switch _begfg {
	case ST_TextStrikeTypeUnset:
		_dcbdc.Value = ""
	case ST_TextStrikeTypeNoStrike:
		_dcbdc.Value = "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065"
	case ST_TextStrikeTypeSngStrike:
		_dcbdc.Value = "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be"
	case ST_TextStrikeTypeDblStrike:
		_dcbdc.Value = "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be"
	}
	return _dcbdc, nil
}

type CT_ColorMRU struct{ EG_ColorChoice []*EG_ColorChoice }
type CT_EffectList struct {
	Blur        *CT_BlurEffect
	FillOverlay *CT_FillOverlayEffect
	Glow        *CT_GlowEffect
	InnerShdw   *CT_InnerShadowEffect
	OuterShdw   *CT_OuterShadowEffect
	PrstShdw    *CT_PresetShadowEffect
	Reflection  *CT_ReflectionEffect
	SoftEdge    *CT_SoftEdgesEffect
}

// ValidateWithPath validates the EG_LineDashProperties and its children, prefixing error messages with path
func (_aceeg *EG_LineDashProperties) ValidateWithPath(path string) error {
	if _aceeg.PrstDash != nil {
		if _caffb := _aceeg.PrstDash.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0044\u0061\u0073h"); _caffb != nil {
			return _caffb
		}
	}
	if _aceeg.CustDash != nil {
		if _gbdff := _aceeg.CustDash.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0044\u0061\u0073h"); _gbdff != nil {
			return _gbdff
		}
	}
	return nil
}
func (_dcaaa ST_LineEndType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dcaaa.String(), start)
}
func (_fabac *CT_NonVisualGraphicFrameProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ffbb:
	for {
		_cbcea, _aggc := d.Token()
		if _aggc != nil {
			return _aggc
		}
		switch _bgeaf := _cbcea.(type) {
		case _d.StartElement:
			switch _bgeaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065L\u006f\u0063\u006b\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065L\u006f\u0063\u006b\u0073"}:
				_fabac.GraphicFrameLocks = NewCT_GraphicalObjectFrameLocking()
				if _afdfb := d.DecodeElement(_fabac.GraphicFrameLocks, &_bgeaf); _afdfb != nil {
					return _afdfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fabac.ExtLst = NewCT_OfficeArtExtensionList()
				if _aeefa := d.DecodeElement(_fabac.ExtLst, &_bgeaf); _aeefa != nil {
					return _aeefa
				}
			default:
				_cd.Log.Debug("s\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006de\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020%\u0076", _bgeaf.Name)
				if _efea := d.Skip(); _efea != nil {
					return _efea
				}
			}
		case _d.EndElement:
			break _ffbb
		case _d.CharData:
		}
	}
	return nil
}
func (_gbgef *ST_PositivePercentage) Validate() error { return _gbgef.ValidateWithPath("") }
func (_cbfba *CT_TextSpacing) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cbfba.SpcPct != nil {
		_fgaaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0050\u0063\u0074"}}
		e.EncodeElement(_cbfba.SpcPct, _fgaaf)
	}
	if _cbfba.SpcPts != nil {
		_cccfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0050\u0074\u0073"}}
		e.EncodeElement(_cbfba.SpcPts, _cccfc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_Path2DArcTo struct {
	WRAttr    ST_AdjCoordinate
	HRAttr    ST_AdjCoordinate
	StAngAttr ST_AdjAngle
	SwAngAttr ST_AdjAngle
}

// ValidateWithPath validates the CT_PolarAdjustHandle and its children, prefixing error messages with path
func (_dfaa *CT_PolarAdjustHandle) ValidateWithPath(path string) error {
	if _dfaa.MinRAttr != nil {
		if _abff := _dfaa.MinRAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0052\u0041\u0074\u0074r"); _abff != nil {
			return _abff
		}
	}
	if _dfaa.MaxRAttr != nil {
		if _fdfc := _dfaa.MaxRAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0052\u0041\u0074\u0074r"); _fdfc != nil {
			return _fdfc
		}
	}
	if _dfaa.MinAngAttr != nil {
		if _adaac := _dfaa.MinAngAttr.ValidateWithPath(path + "/\u004d\u0069\u006e\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _adaac != nil {
			return _adaac
		}
	}
	if _dfaa.MaxAngAttr != nil {
		if _cfadgf := _dfaa.MaxAngAttr.ValidateWithPath(path + "/\u004d\u0061\u0078\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _cfadgf != nil {
			return _cfadgf
		}
	}
	if _aaedf := _dfaa.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _aaedf != nil {
		return _aaedf
	}
	return nil
}
func NewCT_LuminanceEffect() *CT_LuminanceEffect { _bbbaf := &CT_LuminanceEffect{}; return _bbbaf }

type CT_ConnectorLocking struct {
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

// Validate validates the CT_EmptyElement and its children
func (_dbge *CT_EmptyElement) Validate() error {
	return _dbge.ValidateWithPath("\u0043T\u005fE\u006d\u0070\u0074\u0079\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}

// Validate validates the CT_ScRgbColor and its children
func (_edfef *CT_ScRgbColor) Validate() error {
	return _edfef.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}

// Validate validates the CT_TextSpacingPoint and its children
func (_caffe *CT_TextSpacingPoint) Validate() error {
	return _caffe.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0053\u0070\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074")
}
func (_cdeef *ST_LightRigType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gabec, _afdage := d.Token()
	if _afdage != nil {
		return _afdage
	}
	if _fdggab, _fdfdg := _gabec.(_d.EndElement); _fdfdg && _fdggab.Name == start.Name {
		*_cdeef = 1
		return nil
	}
	if _fdcede, _degbg := _gabec.(_d.CharData); !_degbg {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gabec)
	} else {
		switch string(_fdcede) {
		case "":
			*_cdeef = 0
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031":
			*_cdeef = 1
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032":
			*_cdeef = 2
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033":
			*_cdeef = 3
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034":
			*_cdeef = 4
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031":
			*_cdeef = 5
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032":
			*_cdeef = 6
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033":
			*_cdeef = 7
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034":
			*_cdeef = 8
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031":
			*_cdeef = 9
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032":
			*_cdeef = 10
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033":
			*_cdeef = 11
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034":
			*_cdeef = 12
		case "\u0074h\u0072\u0065\u0065\u0050\u0074":
			*_cdeef = 13
		case "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064":
			*_cdeef = 14
		case "\u0073\u006f\u0066\u0074":
			*_cdeef = 15
		case "\u0068\u0061\u0072s\u0068":
			*_cdeef = 16
		case "\u0066\u006c\u006fo\u0064":
			*_cdeef = 17
		case "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067":
			*_cdeef = 18
		case "\u006do\u0072\u006e\u0069\u006e\u0067":
			*_cdeef = 19
		case "\u0073u\u006e\u0072\u0069\u0073\u0065":
			*_cdeef = 20
		case "\u0073\u0075\u006e\u0073\u0065\u0074":
			*_cdeef = 21
		case "\u0063\u0068\u0069\u006c\u006c\u0079":
			*_cdeef = 22
		case "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067":
			*_cdeef = 23
		case "\u0066\u006c\u0061\u0074":
			*_cdeef = 24
		case "\u0074\u0077\u006fP\u0074":
			*_cdeef = 25
		case "\u0067\u006c\u006f\u0077":
			*_cdeef = 26
		case "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d":
			*_cdeef = 27
		}
	}
	_gabec, _afdage = d.Token()
	if _afdage != nil {
		return _afdage
	}
	if _gaffg, _gafbc := _gabec.(_d.EndElement); _gafbc && _gaffg.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gabec)
}

// ValidateWithPath validates the CT_TextBulletSizePercent and its children, prefixing error messages with path
func (_egbef *CT_TextBulletSizePercent) ValidateWithPath(path string) error {
	if !ST_TextBulletSizePercentPatternRe.MatchString(_egbef.ValAttr) {
		return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020'\u0025\u0073\u0027\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, ST_TextBulletSizePercentPatternRe, _egbef.ValAttr)
	}
	return nil
}

// Validate validates the CT_EffectStyleItem and its children
func (_gegda *CT_EffectStyleItem) Validate() error {
	return _gegda.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u0049\u0074\u0065\u006d")
}
func (_decbb *ST_AdjAngle) ValidateWithPath(path string) error {
	_aebcc := []string{}
	if _decbb.ST_Angle != nil {
		_aebcc = append(_aebcc, "\u0053\u0054\u005f\u0041\u006e\u0067\u006c\u0065")
	}
	if _decbb.ST_GeomGuideName != nil {
		_aebcc = append(_aebcc, "\u0053\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004e\u0061\u006d\u0065")
	}
	if len(_aebcc) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _aebcc)
	}
	return nil
}
func (_cbdde *EG_ThemeableFillStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cbdde.Fill != nil {
		_bdfcb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_cbdde.Fill, _bdfcb)
	}
	if _cbdde.FillRef != nil {
		_fbdgcg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_cbdde.FillRef, _fbdgcg)
	}
	return nil
}
func NewEG_EffectProperties() *EG_EffectProperties { _bfccd := &EG_EffectProperties{}; return _bfccd }

// Validate validates the CT_FlatText and its children
func (_aeec *CT_FlatText) Validate() error {
	return _aeec.ValidateWithPath("C\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074")
}

// Validate validates the CT_Angle and its children
func (_gffd *CT_Angle) Validate() error {
	return _gffd.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0067\u006c\u0065")
}

type CT_AnimationChartBuildProperties struct {
	BldAttr    *ST_AnimationChartBuildType
	AnimBgAttr *bool
}

// ValidateWithPath validates the CT_Path2DLineTo and its children, prefixing error messages with path
func (_bgafa *CT_Path2DLineTo) ValidateWithPath(path string) error {
	if _dfgd := _bgafa.Pt.ValidateWithPath(path + "\u002f\u0050\u0074"); _dfgd != nil {
		return _dfgd
	}
	return nil
}
func NewCT_AdjustHandleList() *CT_AdjustHandleList { _cabe := &CT_AdjustHandleList{}; return _cabe }

// ValidateWithPath validates the CT_SRgbColor and its children, prefixing error messages with path
func (_ddffd *CT_SRgbColor) ValidateWithPath(path string) error {
	for _edgbg, _bbced := range _ddffd.EG_ColorTransform {
		if _gadgd := _bbced.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _edgbg)); _gadgd != nil {
			return _gadgd
		}
	}
	return nil
}

type CT_GradientStopList struct{ Gs []*CT_GradientStop }

// Validate validates the CT_EffectProperties and its children
func (_aeaff *CT_EffectProperties) Validate() error {
	return _aeaff.ValidateWithPath("\u0043\u0054\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func NewCT_StyleMatrixReference() *CT_StyleMatrixReference {
	_afdaa := &CT_StyleMatrixReference{}
	return _afdaa
}

// ValidateWithPath validates the CT_TableCol and its children, prefixing error messages with path
func (_fbbf *CT_TableCol) ValidateWithPath(path string) error {
	if _bdeee := _fbbf.WAttr.ValidateWithPath(path + "\u002f\u0057\u0041\u0074\u0074\u0072"); _bdeee != nil {
		return _bdeee
	}
	if _fbbf.ExtLst != nil {
		if _eddgd := _fbbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eddgd != nil {
			return _eddgd
		}
	}
	return nil
}

// Validate validates the CT_GvmlGraphicFrameNonVisual and its children
func (_bfff *CT_GvmlGraphicFrameNonVisual) Validate() error {
	return _bfff.ValidateWithPath("\u0043\u0054\u005f\u0047v\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046r\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c")
}

// ValidateWithPath validates the CT_ColorReplaceEffect and its children, prefixing error messages with path
func (_bcd *CT_ColorReplaceEffect) ValidateWithPath(path string) error {
	if _bcd.ScrgbClr != nil {
		if _geega := _bcd.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _geega != nil {
			return _geega
		}
	}
	if _bcd.SrgbClr != nil {
		if _agea := _bcd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _agea != nil {
			return _agea
		}
	}
	if _bcd.HslClr != nil {
		if _aadc := _bcd.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _aadc != nil {
			return _aadc
		}
	}
	if _bcd.SysClr != nil {
		if _ceefd := _bcd.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _ceefd != nil {
			return _ceefd
		}
	}
	if _bcd.SchemeClr != nil {
		if _eaffc := _bcd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _eaffc != nil {
			return _eaffc
		}
	}
	if _bcd.PrstClr != nil {
		if _egca := _bcd.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _egca != nil {
			return _egca
		}
	}
	return nil
}
func NewCT_GvmlGroupShapeNonVisual() *CT_GvmlGroupShapeNonVisual {
	_gcabd := &CT_GvmlGroupShapeNonVisual{}
	_gcabd.CNvPr = NewCT_NonVisualDrawingProps()
	_gcabd.CNvGrpSpPr = NewCT_NonVisualGroupDrawingShapeProps()
	return _gcabd
}
func (_fcfeda ST_BevelPresetType) ValidateWithPath(path string) error {
	switch _fcfeda {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcfeda))
	}
	return nil
}
func (_bbgfde *EG_TextBulletTypeface) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ddfad:
	for {
		_fbegf, _eadca := d.Token()
		if _eadca != nil {
			return _eadca
		}
		switch _ccafg := _fbegf.(type) {
		case _d.StartElement:
			switch _ccafg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}:
				_bbgfde.BuFontTx = NewCT_TextBulletTypefaceFollowText()
				if _beafg := d.DecodeElement(_bbgfde.BuFontTx, &_ccafg); _beafg != nil {
					return _beafg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}:
				_bbgfde.BuFont = NewCT_TextFont()
				if _bdgg := d.DecodeElement(_bbgfde.BuFont, &_ccafg); _bdgg != nil {
					return _bdgg
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0054\u0079\u0070\u0065\u0066\u0061\u0063\u0065\u0020\u0025\u0076", _ccafg.Name)
				if _gebcd := d.Skip(); _gebcd != nil {
					return _gebcd
				}
			}
		case _d.EndElement:
			break _ddfad
		case _d.CharData:
		}
	}
	return nil
}

type EG_Geometry struct {
	CustGeom *CT_CustomGeometry2D
	PrstGeom *CT_PresetGeometry2D
}

func (_cbbcb *CT_PresetShadowEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cbbcb.PrstAttr = ST_PresetShadowVal(1)
	for _, _daeec := range start.Attr {
		if _daeec.Name.Local == "\u0070\u0072\u0073\u0074" {
			_cbbcb.PrstAttr.UnmarshalXMLAttr(_daeec)
			continue
		}
		if _daeec.Name.Local == "\u0064\u0069\u0073\u0074" {
			_gdfcf, _cdfgb := _c.ParseInt(_daeec.Value, 10, 64)
			if _cdfgb != nil {
				return _cdfgb
			}
			_cbbcb.DistAttr = &_gdfcf
			continue
		}
		if _daeec.Name.Local == "\u0064\u0069\u0072" {
			_faabe, _abcf := _c.ParseInt(_daeec.Value, 10, 32)
			if _abcf != nil {
				return _abcf
			}
			_ccga := int32(_faabe)
			_cbbcb.DirAttr = &_ccga
			continue
		}
	}
_ebbda:
	for {
		_efgf, _eeaga := d.Token()
		if _eeaga != nil {
			return _eeaga
		}
		switch _afdgc := _efgf.(type) {
		case _d.StartElement:
			switch _afdgc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_cbbcb.ScrgbClr = NewCT_ScRgbColor()
				if _cdecb := d.DecodeElement(_cbbcb.ScrgbClr, &_afdgc); _cdecb != nil {
					return _cdecb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cbbcb.SrgbClr = NewCT_SRgbColor()
				if _gaddd := d.DecodeElement(_cbbcb.SrgbClr, &_afdgc); _gaddd != nil {
					return _gaddd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_cbbcb.HslClr = NewCT_HslColor()
				if _fegff := d.DecodeElement(_cbbcb.HslClr, &_afdgc); _fegff != nil {
					return _fegff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_cbbcb.SysClr = NewCT_SystemColor()
				if _bgbfcb := d.DecodeElement(_cbbcb.SysClr, &_afdgc); _bgbfcb != nil {
					return _bgbfcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cbbcb.SchemeClr = NewCT_SchemeColor()
				if _gbba := d.DecodeElement(_cbbcb.SchemeClr, &_afdgc); _gbba != nil {
					return _gbba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_cbbcb.PrstClr = NewCT_PresetColor()
				if _gefce := d.DecodeElement(_cbbcb.PrstClr, &_afdgc); _gefce != nil {
					return _gefce
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _afdgc.Name)
				if _afdgcb := d.Skip(); _afdgcb != nil {
					return _afdgcb
				}
			}
		case _d.EndElement:
			break _ebbda
		case _d.CharData:
		}
	}
	return nil
}
func (_egeg *CT_GrayscaleTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_efac, _babf := d.Token()
		if _babf != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0079\u0073\u0063\u0061\u006c\u0065T\u0072\u0061\u006e\u0073\u0066\u006f\u0072m\u003a\u0020\u0025\u0073", _babf)
		}
		if _efdcc, _eebbg := _efac.(_d.EndElement); _eebbg && _efdcc.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TextVertOverflowType byte

func NewCT_TextUnderlineFillGroupWrapper() *CT_TextUnderlineFillGroupWrapper {
	_adfde := &CT_TextUnderlineFillGroupWrapper{}
	return _adfde
}
func NewEG_ThemeableFontStyles() *EG_ThemeableFontStyles {
	_dgbfg := &EG_ThemeableFontStyles{}
	return _dgbfg
}
func NewCT_Path2DCubicBezierTo() *CT_Path2DCubicBezierTo {
	_gbage := &CT_Path2DCubicBezierTo{}
	return _gbage
}
func NewCT_Boolean() *CT_Boolean { _gdefe := &CT_Boolean{}; return _gdefe }
func (_cgcg *CT_VideoFile) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _dg.Sprintf("\u0025\u0076", _cgcg.LinkAttr)})
	if _cgcg.ContentTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_cgcg.ContentTypeAttr)})
	}
	e.EncodeToken(start)
	if _cgcg.ExtLst != nil {
		_dgddc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cgcg.ExtLst, _dgddc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_HslColor and its children, prefixing error messages with path
func (_fcdeg *CT_HslColor) ValidateWithPath(path string) error {
	if _fcdeg.HueAttr < 0 {
		return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _fcdeg.HueAttr)
	}
	if _fcdeg.HueAttr >= 21600000 {
		return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fcdeg.HueAttr)
	}
	if _eecdf := _fcdeg.SatAttr.ValidateWithPath(path + "\u002f\u0053\u0061\u0074\u0041\u0074\u0074\u0072"); _eecdf != nil {
		return _eecdf
	}
	if _fdebb := _fcdeg.LumAttr.ValidateWithPath(path + "\u002f\u004c\u0075\u006d\u0041\u0074\u0074\u0072"); _fdebb != nil {
		return _fdebb
	}
	for _bddc, _ddaf := range _fcdeg.EG_ColorTransform {
		if _dgca := _ddaf.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _bddc)); _dgca != nil {
			return _dgca
		}
	}
	return nil
}
func NewCT_Color() *CT_Color { _dcbc := &CT_Color{}; return _dcbc }

// Validate validates the CT_TextBulletTypefaceFollowText and its children
func (_bcbec *CT_TextBulletTypefaceFollowText) Validate() error {
	return _bcbec.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070e\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

// Validate validates the CT_PathShadeProperties and its children
func (_ggbag *CT_PathShadeProperties) Validate() error {
	return _ggbag.ValidateWithPath("\u0043\u0054\u005f\u0050at\u0068\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}
func (_cdfdd *CT_ShapeProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dfea := range start.Attr {
		if _dfea.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_cdfdd.BwModeAttr.UnmarshalXMLAttr(_dfea)
			continue
		}
	}
_gddc:
	for {
		_efeag, _adagf := d.Token()
		if _adagf != nil {
			return _adagf
		}
		switch _gddbg := _efeag.(type) {
		case _d.StartElement:
			switch _gddbg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_cdfdd.Xfrm = NewCT_Transform2D()
				if _geedd := d.DecodeElement(_cdfdd.Xfrm, &_gddbg); _geedd != nil {
					return _geedd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_cdfdd.CustGeom = NewCT_CustomGeometry2D()
				if _ffeeee := d.DecodeElement(_cdfdd.CustGeom, &_gddbg); _ffeeee != nil {
					return _ffeeee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_cdfdd.PrstGeom = NewCT_PresetGeometry2D()
				if _daacg := d.DecodeElement(_cdfdd.PrstGeom, &_gddbg); _daacg != nil {
					return _daacg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_cdfdd.NoFill = NewCT_NoFillProperties()
				if _fgagb := d.DecodeElement(_cdfdd.NoFill, &_gddbg); _fgagb != nil {
					return _fgagb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_cdfdd.SolidFill = NewCT_SolidColorFillProperties()
				if _acfbf := d.DecodeElement(_cdfdd.SolidFill, &_gddbg); _acfbf != nil {
					return _acfbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_cdfdd.GradFill = NewCT_GradientFillProperties()
				if _cegf := d.DecodeElement(_cdfdd.GradFill, &_gddbg); _cegf != nil {
					return _cegf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_cdfdd.BlipFill = NewCT_BlipFillProperties()
				if _gccfc := d.DecodeElement(_cdfdd.BlipFill, &_gddbg); _gccfc != nil {
					return _gccfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_cdfdd.PattFill = NewCT_PatternFillProperties()
				if _cedgca := d.DecodeElement(_cdfdd.PattFill, &_gddbg); _cedgca != nil {
					return _cedgca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_cdfdd.GrpFill = NewCT_GroupFillProperties()
				if _cbcff := d.DecodeElement(_cdfdd.GrpFill, &_gddbg); _cbcff != nil {
					return _cbcff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_cdfdd.Ln = NewCT_LineProperties()
				if _cdce := d.DecodeElement(_cdfdd.Ln, &_gddbg); _cdce != nil {
					return _cdce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_cdfdd.EffectLst = NewCT_EffectList()
				if _gfdeb := d.DecodeElement(_cdfdd.EffectLst, &_gddbg); _gfdeb != nil {
					return _gfdeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_cdfdd.EffectDag = NewCT_EffectContainer()
				if _dccba := d.DecodeElement(_cdfdd.EffectDag, &_gddbg); _dccba != nil {
					return _dccba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_cdfdd.Scene3d = NewCT_Scene3D()
				if _fcdb := d.DecodeElement(_cdfdd.Scene3d, &_gddbg); _fcdb != nil {
					return _fcdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_cdfdd.Sp3d = NewCT_Shape3D()
				if _fbdgg := d.DecodeElement(_cdfdd.Sp3d, &_gddbg); _fbdgg != nil {
					return _fbdgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdfdd.ExtLst = NewCT_OfficeArtExtensionList()
				if _cfaeg := d.DecodeElement(_cdfdd.ExtLst, &_gddbg); _cfaeg != nil {
					return _cfaeg
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gddbg.Name)
				if _fgcge := d.Skip(); _fgcge != nil {
					return _fgcge
				}
			}
		case _d.EndElement:
			break _gddc
		case _d.CharData:
		}
	}
	return nil
}
func (_gfece *CT_FontScheme) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _dg.Sprintf("\u0025\u0076", _gfece.NameAttr)})
	e.EncodeToken(start)
	_egdg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006d\u0061\u006a\u006f\u0072\u0046\u006f\u006e\u0074"}}
	e.EncodeElement(_gfece.MajorFont, _egdg)
	_bgfd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006d\u0069\u006e\u006f\u0072\u0046\u006f\u006e\u0074"}}
	e.EncodeElement(_gfece.MinorFont, _bgfd)
	if _gfece.ExtLst != nil {
		_fgbfd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gfece.ExtLst, _fgbfd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_EffectContainer and its children, prefixing error messages with path
func (_ceae *CT_EffectContainer) ValidateWithPath(path string) error {
	if _badca := _ceae.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _badca != nil {
		return _badca
	}
	if _ceae.Cont != nil {
		if _dddge := _ceae.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _dddge != nil {
			return _dddge
		}
	}
	if _ceae.Effect != nil {
		if _daff := _ceae.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _daff != nil {
			return _daff
		}
	}
	if _ceae.AlphaBiLevel != nil {
		if _bbea := _ceae.AlphaBiLevel.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _bbea != nil {
			return _bbea
		}
	}
	if _ceae.AlphaCeiling != nil {
		if _bfbd := _ceae.AlphaCeiling.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"); _bfbd != nil {
			return _bfbd
		}
	}
	if _ceae.AlphaFloor != nil {
		if _aeaeg := _ceae.AlphaFloor.ValidateWithPath(path + "/\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"); _aeaeg != nil {
			return _aeaeg
		}
	}
	if _ceae.AlphaInv != nil {
		if _cbbde := _ceae.AlphaInv.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u0049\u006ev"); _cbbde != nil {
			return _cbbde
		}
	}
	if _ceae.AlphaMod != nil {
		if _cbfb := _ceae.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _cbfb != nil {
			return _cbfb
		}
	}
	if _ceae.AlphaModFix != nil {
		if _dbda := _ceae.AlphaModFix.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"); _dbda != nil {
			return _dbda
		}
	}
	if _ceae.AlphaOutset != nil {
		if _gaga := _ceae.AlphaOutset.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"); _gaga != nil {
			return _gaga
		}
	}
	if _ceae.AlphaRepl != nil {
		if _cggga := _ceae.AlphaRepl.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"); _cggga != nil {
			return _cggga
		}
	}
	if _ceae.BiLevel != nil {
		if _abee := _ceae.BiLevel.ValidateWithPath(path + "\u002f\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _abee != nil {
			return _abee
		}
	}
	if _ceae.Blend != nil {
		if _fefbc := _ceae.Blend.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064"); _fefbc != nil {
			return _fefbc
		}
	}
	if _ceae.Blur != nil {
		if _cage := _ceae.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _cage != nil {
			return _cage
		}
	}
	if _ceae.ClrChange != nil {
		if _dbgd := _ceae.ClrChange.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"); _dbgd != nil {
			return _dbgd
		}
	}
	if _ceae.ClrRepl != nil {
		if _egdd := _ceae.ClrRepl.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0052\u0065\u0070\u006c"); _egdd != nil {
			return _egdd
		}
	}
	if _ceae.Duotone != nil {
		if _cbfd := _ceae.Duotone.ValidateWithPath(path + "\u002f\u0044\u0075\u006f\u0074\u006f\u006e\u0065"); _cbfd != nil {
			return _cbfd
		}
	}
	if _ceae.Fill != nil {
		if _fddd := _ceae.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _fddd != nil {
			return _fddd
		}
	}
	if _ceae.FillOverlay != nil {
		if _cfbfa := _ceae.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _cfbfa != nil {
			return _cfbfa
		}
	}
	if _ceae.Glow != nil {
		if _acde := _ceae.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _acde != nil {
			return _acde
		}
	}
	if _ceae.Grayscl != nil {
		if _efdb := _ceae.Grayscl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0079\u0073\u0063\u006c"); _efdb != nil {
			return _efdb
		}
	}
	if _ceae.Hsl != nil {
		if _fdeaec := _ceae.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _fdeaec != nil {
			return _fdeaec
		}
	}
	if _ceae.InnerShdw != nil {
		if _gggda := _ceae.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _gggda != nil {
			return _gggda
		}
	}
	if _ceae.Lum != nil {
		if _bagb := _ceae.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _bagb != nil {
			return _bagb
		}
	}
	if _ceae.OuterShdw != nil {
		if _dfce := _ceae.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _dfce != nil {
			return _dfce
		}
	}
	if _ceae.PrstShdw != nil {
		if _baebc := _ceae.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _baebc != nil {
			return _baebc
		}
	}
	if _ceae.Reflection != nil {
		if _gdcea := _ceae.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _gdcea != nil {
			return _gdcea
		}
	}
	if _ceae.RelOff != nil {
		if _ebgg := _ceae.RelOff.ValidateWithPath(path + "\u002fR\u0065\u006c\u004f\u0066\u0066"); _ebgg != nil {
			return _ebgg
		}
	}
	if _ceae.SoftEdge != nil {
		if _gfdf := _ceae.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _gfdf != nil {
			return _gfdf
		}
	}
	if _ceae.Tint != nil {
		if _fcee := _ceae.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _fcee != nil {
			return _fcee
		}
	}
	if _ceae.Xfrm != nil {
		if _ebeg := _ceae.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _ebeg != nil {
			return _ebeg
		}
	}
	return nil
}

// Validate validates the EG_LineFillProperties and its children
func (_fafcb *EG_LineFillProperties) Validate() error {
	return _fafcb.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_NonVisualPictureProperties and its children
func (_cecad *CT_NonVisualPictureProperties) Validate() error {
	return _cecad.ValidateWithPath("\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072ti\u0065\u0073")
}

// Validate validates the CT_SolidColorFillProperties and its children
func (_acccf *CT_SolidColorFillProperties) Validate() error {
	return _acccf.ValidateWithPath("C\u0054\u005f\u0053\u006f\u006c\u0069d\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006cP\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073")
}

// Validate validates the CT_CustomGeometry2D and its children
func (_eddf *CT_CustomGeometry2D) Validate() error {
	return _eddf.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044")
}

// ValidateWithPath validates the EG_ColorTransform and its children, prefixing error messages with path
func (_fbaaa *EG_ColorTransform) ValidateWithPath(path string) error {
	if _fbaaa.Tint != nil {
		if _aedd := _fbaaa.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _aedd != nil {
			return _aedd
		}
	}
	if _fbaaa.Shade != nil {
		if _ffgbbe := _fbaaa.Shade.ValidateWithPath(path + "\u002f\u0053\u0068\u0061\u0064\u0065"); _ffgbbe != nil {
			return _ffgbbe
		}
	}
	if _fbaaa.Comp != nil {
		if _gcbgf := _fbaaa.Comp.ValidateWithPath(path + "\u002f\u0043\u006fm\u0070"); _gcbgf != nil {
			return _gcbgf
		}
	}
	if _fbaaa.Inv != nil {
		if _aefe := _fbaaa.Inv.ValidateWithPath(path + "\u002f\u0049\u006e\u0076"); _aefe != nil {
			return _aefe
		}
	}
	if _fbaaa.Gray != nil {
		if _abbfb := _fbaaa.Gray.ValidateWithPath(path + "\u002f\u0047\u0072a\u0079"); _abbfb != nil {
			return _abbfb
		}
	}
	if _fbaaa.Alpha != nil {
		if _dafe := _fbaaa.Alpha.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061"); _dafe != nil {
			return _dafe
		}
	}
	if _fbaaa.AlphaOff != nil {
		if _efgae := _fbaaa.AlphaOff.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004f\u0066f"); _efgae != nil {
			return _efgae
		}
	}
	if _fbaaa.AlphaMod != nil {
		if _gfbae := _fbaaa.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _gfbae != nil {
			return _gfbae
		}
	}
	if _fbaaa.Hue != nil {
		if _baedeb := _fbaaa.Hue.ValidateWithPath(path + "\u002f\u0048\u0075\u0065"); _baedeb != nil {
			return _baedeb
		}
	}
	if _fbaaa.HueOff != nil {
		if _egfbd := _fbaaa.HueOff.ValidateWithPath(path + "\u002fH\u0075\u0065\u004f\u0066\u0066"); _egfbd != nil {
			return _egfbd
		}
	}
	if _fbaaa.HueMod != nil {
		if _babff := _fbaaa.HueMod.ValidateWithPath(path + "\u002fH\u0075\u0065\u004d\u006f\u0064"); _babff != nil {
			return _babff
		}
	}
	if _fbaaa.Sat != nil {
		if _eagda := _fbaaa.Sat.ValidateWithPath(path + "\u002f\u0053\u0061\u0074"); _eagda != nil {
			return _eagda
		}
	}
	if _fbaaa.SatOff != nil {
		if _adge := _fbaaa.SatOff.ValidateWithPath(path + "\u002fS\u0061\u0074\u004f\u0066\u0066"); _adge != nil {
			return _adge
		}
	}
	if _fbaaa.SatMod != nil {
		if _ffgad := _fbaaa.SatMod.ValidateWithPath(path + "\u002fS\u0061\u0074\u004d\u006f\u0064"); _ffgad != nil {
			return _ffgad
		}
	}
	if _fbaaa.Lum != nil {
		if _ggbdg := _fbaaa.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _ggbdg != nil {
			return _ggbdg
		}
	}
	if _fbaaa.LumOff != nil {
		if _ecbac := _fbaaa.LumOff.ValidateWithPath(path + "\u002fL\u0075\u006d\u004f\u0066\u0066"); _ecbac != nil {
			return _ecbac
		}
	}
	if _fbaaa.LumMod != nil {
		if _bggbb := _fbaaa.LumMod.ValidateWithPath(path + "\u002fL\u0075\u006d\u004d\u006f\u0064"); _bggbb != nil {
			return _bggbb
		}
	}
	if _fbaaa.Red != nil {
		if _cfffd := _fbaaa.Red.ValidateWithPath(path + "\u002f\u0052\u0065\u0064"); _cfffd != nil {
			return _cfffd
		}
	}
	if _fbaaa.RedOff != nil {
		if _cfeec := _fbaaa.RedOff.ValidateWithPath(path + "\u002fR\u0065\u0064\u004f\u0066\u0066"); _cfeec != nil {
			return _cfeec
		}
	}
	if _fbaaa.RedMod != nil {
		if _ffeeec := _fbaaa.RedMod.ValidateWithPath(path + "\u002fR\u0065\u0064\u004d\u006f\u0064"); _ffeeec != nil {
			return _ffeeec
		}
	}
	if _fbaaa.Green != nil {
		if _cbfcb := _fbaaa.Green.ValidateWithPath(path + "\u002f\u0047\u0072\u0065\u0065\u006e"); _cbfcb != nil {
			return _cbfcb
		}
	}
	if _fbaaa.GreenOff != nil {
		if _bdgef := _fbaaa.GreenOff.ValidateWithPath(path + "\u002fG\u0072\u0065\u0065\u006e\u004f\u0066f"); _bdgef != nil {
			return _bdgef
		}
	}
	if _fbaaa.GreenMod != nil {
		if _ffdcc := _fbaaa.GreenMod.ValidateWithPath(path + "\u002fG\u0072\u0065\u0065\u006e\u004d\u006fd"); _ffdcc != nil {
			return _ffdcc
		}
	}
	if _fbaaa.Blue != nil {
		if _dfegc := _fbaaa.Blue.ValidateWithPath(path + "\u002f\u0042\u006cu\u0065"); _dfegc != nil {
			return _dfegc
		}
	}
	if _fbaaa.BlueOff != nil {
		if _eacf := _fbaaa.BlueOff.ValidateWithPath(path + "\u002f\u0042\u006c\u0075\u0065\u004f\u0066\u0066"); _eacf != nil {
			return _eacf
		}
	}
	if _fbaaa.BlueMod != nil {
		if _ecdae := _fbaaa.BlueMod.ValidateWithPath(path + "\u002f\u0042\u006c\u0075\u0065\u004d\u006f\u0064"); _ecdae != nil {
			return _ecdae
		}
	}
	if _fbaaa.Gamma != nil {
		if _bgfee := _fbaaa.Gamma.ValidateWithPath(path + "\u002f\u0047\u0061\u006d\u006d\u0061"); _bgfee != nil {
			return _bgfee
		}
	}
	if _fbaaa.InvGamma != nil {
		if _cgcgb := _fbaaa.InvGamma.ValidateWithPath(path + "\u002fI\u006e\u0076\u0047\u0061\u006d\u006da"); _cgcgb != nil {
			return _cgcgb
		}
	}
	return nil
}

type CT_PositivePercentage struct{ ValAttr ST_PositivePercentage }

// Validate validates the CT_TextCharacterProperties and its children
func (_eaggad *CT_TextCharacterProperties) Validate() error {
	return _eaggad.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

// Validate validates the CT_TextCharBullet and its children
func (_bgbgc *CT_TextCharBullet) Validate() error {
	return _bgbgc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042u\u006c\u006c\u0065\u0074")
}
func (_ccfda *EG_EffectProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ccfda.EffectLst != nil {
		_bgcfa := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccfda.EffectLst, _bgcfa)
	}
	if _ccfda.EffectDag != nil {
		_dfeac := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_ccfda.EffectDag, _dfeac)
	}
	return nil
}
func (_afadf *CT_GvmlGroupShape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_afadf.NvGrpSpPr = NewCT_GvmlGroupShapeNonVisual()
	_afadf.GrpSpPr = NewCT_GroupShapeProperties()
_egfd:
	for {
		_fbad, _eebd := d.Token()
		if _eebd != nil {
			return _eebd
		}
		switch _gcdeg := _fbad.(type) {
		case _d.StartElement:
			switch _gcdeg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _dage := d.DecodeElement(_afadf.NvGrpSpPr, &_gcdeg); _dage != nil {
					return _dage
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _efcda := d.DecodeElement(_afadf.GrpSpPr, &_gcdeg); _efcda != nil {
					return _efcda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_fcccc := NewCT_GvmlGroupShapeChoice()
				if _dbab := d.DecodeElement(&_fcccc.TxSp, &_gcdeg); _dbab != nil {
					return _dbab
				}
				_afadf.Choice = append(_afadf.Choice, _fcccc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_dbaa := NewCT_GvmlGroupShapeChoice()
				if _bdbfg := d.DecodeElement(&_dbaa.Sp, &_gcdeg); _bdbfg != nil {
					return _bdbfg
				}
				_afadf.Choice = append(_afadf.Choice, _dbaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_decb := NewCT_GvmlGroupShapeChoice()
				if _ggfcb := d.DecodeElement(&_decb.CxnSp, &_gcdeg); _ggfcb != nil {
					return _ggfcb
				}
				_afadf.Choice = append(_afadf.Choice, _decb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_dfdcbc := NewCT_GvmlGroupShapeChoice()
				if _cbbad := d.DecodeElement(&_dfdcbc.Pic, &_gcdeg); _cbbad != nil {
					return _cbbad
				}
				_afadf.Choice = append(_afadf.Choice, _dfdcbc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_eaga := NewCT_GvmlGroupShapeChoice()
				if _bbad := d.DecodeElement(&_eaga.GraphicFrame, &_gcdeg); _bbad != nil {
					return _bbad
				}
				_afadf.Choice = append(_afadf.Choice, _eaga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_eebda := NewCT_GvmlGroupShapeChoice()
				if _beecb := d.DecodeElement(&_eebda.GrpSp, &_gcdeg); _beecb != nil {
					return _beecb
				}
				_afadf.Choice = append(_afadf.Choice, _eebda)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afadf.ExtLst = NewCT_OfficeArtExtensionList()
				if _gafbg := d.DecodeElement(_afadf.ExtLst, &_gcdeg); _gafbg != nil {
					return _gafbg
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _gcdeg.Name)
				if _ceed := d.Skip(); _ceed != nil {
					return _ceed
				}
			}
		case _d.EndElement:
			break _egfd
		case _d.CharData:
		}
	}
	return nil
}

type CT_ColorScheme struct {
	NameAttr string
	Dk1      *CT_Color
	Lt1      *CT_Color
	Dk2      *CT_Color
	Lt2      *CT_Color
	Accent1  *CT_Color
	Accent2  *CT_Color
	Accent3  *CT_Color
	Accent4  *CT_Color
	Accent5  *CT_Color
	Accent6  *CT_Color
	Hlink    *CT_Color
	FolHlink *CT_Color
	ExtLst   *CT_OfficeArtExtensionList
}

func (_fafd *CT_ColorMapping) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fafd.Bg1Attr = ST_ColorSchemeIndex(1)
	_fafd.Tx1Attr = ST_ColorSchemeIndex(1)
	_fafd.Bg2Attr = ST_ColorSchemeIndex(1)
	_fafd.Tx2Attr = ST_ColorSchemeIndex(1)
	_fafd.Accent1Attr = ST_ColorSchemeIndex(1)
	_fafd.Accent2Attr = ST_ColorSchemeIndex(1)
	_fafd.Accent3Attr = ST_ColorSchemeIndex(1)
	_fafd.Accent4Attr = ST_ColorSchemeIndex(1)
	_fafd.Accent5Attr = ST_ColorSchemeIndex(1)
	_fafd.Accent6Attr = ST_ColorSchemeIndex(1)
	_fafd.HlinkAttr = ST_ColorSchemeIndex(1)
	_fafd.FolHlinkAttr = ST_ColorSchemeIndex(1)
	for _, _dgbd := range start.Attr {
		if _dgbd.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0033" {
			_fafd.Accent3Attr.UnmarshalXMLAttr(_dgbd)
			continue
		}
		if _dgbd.Name.Local == "\u0074\u0078\u0031" {
			_fafd.Tx1Attr.UnmarshalXMLAttr(_dgbd)
			continue
		}
		if _dgbd.Name.Local == "\u0062\u0067\u0032" {
			_fafd.Bg2Attr.UnmarshalXMLAttr(_dgbd)
			continue
		}
		if _dgbd.Name.Local == "\u0074\u0078\u0032" {
			_fafd.Tx2Attr.UnmarshalXMLAttr(_dgbd)
			continue
		}
		if _dgbd.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0031" {
			_fafd.Accent1Attr.UnmarshalXMLAttr(_dgbd)
			continue
		}
		if _dgbd.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0032" {
			_fafd.Accent2Attr.UnmarshalXMLAttr(_dgbd)
			continue
		}
		if _dgbd.Name.Local == "\u0062\u0067\u0031" {
			_fafd.Bg1Attr.UnmarshalXMLAttr(_dgbd)
			continue
		}
		if _dgbd.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0034" {
			_fafd.Accent4Attr.UnmarshalXMLAttr(_dgbd)
			continue
		}
		if _dgbd.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0035" {
			_fafd.Accent5Attr.UnmarshalXMLAttr(_dgbd)
			continue
		}
		if _dgbd.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0036" {
			_fafd.Accent6Attr.UnmarshalXMLAttr(_dgbd)
			continue
		}
		if _dgbd.Name.Local == "\u0068\u006c\u0069n\u006b" {
			_fafd.HlinkAttr.UnmarshalXMLAttr(_dgbd)
			continue
		}
		if _dgbd.Name.Local == "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b" {
			_fafd.FolHlinkAttr.UnmarshalXMLAttr(_dgbd)
			continue
		}
	}
_edagc:
	for {
		_caad, _faca := d.Token()
		if _faca != nil {
			return _faca
		}
		switch _bfcfd := _caad.(type) {
		case _d.StartElement:
			switch _bfcfd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fafd.ExtLst = NewCT_OfficeArtExtensionList()
				if _ebde := d.DecodeElement(_fafd.ExtLst, &_bfcfd); _ebde != nil {
					return _ebde
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006co\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u0020\u0025\u0076", _bfcfd.Name)
				if _fgff := d.Skip(); _fgff != nil {
					return _fgff
				}
			}
		case _d.EndElement:
			break _edagc
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_AlphaReplaceEffect and its children
func (_bdbg *CT_AlphaReplaceEffect) Validate() error {
	return _bdbg.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_bcacc *CT_PositiveSize2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0078"}, Value: _dg.Sprintf("\u0025\u0076", _bcacc.CxAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0079"}, Value: _dg.Sprintf("\u0025\u0076", _bcacc.CyAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ffeee *CT_GeomGuide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eeff := range start.Attr {
		if _eeff.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ebagd, _gefb := _eeff.Value, error(nil)
			if _gefb != nil {
				return _gefb
			}
			_ffeee.NameAttr = _ebagd
			continue
		}
		if _eeff.Name.Local == "\u0066\u006d\u006c\u0061" {
			_efbbe, _ggcba := _eeff.Value, error(nil)
			if _ggcba != nil {
				return _ggcba
			}
			_ffeee.FmlaAttr = _efbbe
			continue
		}
	}
	for {
		_aeegb, _becba := d.Token()
		if _becba != nil {
			return _dg.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0065o\u006d\u0047\u0075\u0069\u0064\u0065\u003a\u0020\u0025\u0073", _becba)
		}
		if _acdbd, _fbddd := _aeegb.(_d.EndElement); _fbddd && _acdbd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BaseStyles and its children, prefixing error messages with path
func (_defg *CT_BaseStyles) ValidateWithPath(path string) error {
	if _bcg := _defg.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _bcg != nil {
		return _bcg
	}
	if _bbeg := _defg.FontScheme.ValidateWithPath(path + "/\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _bbeg != nil {
		return _bbeg
	}
	if _acfb := _defg.FmtScheme.ValidateWithPath(path + "\u002f\u0046\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _acfb != nil {
		return _acfb
	}
	if _defg.ExtLst != nil {
		if _eadd := _defg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eadd != nil {
			return _eadd
		}
	}
	return nil
}
func NewEG_Text3D() *EG_Text3D { _ddgea := &EG_Text3D{}; return _ddgea }

// ST_FixedPercentage is a union type
type ST_FixedPercentage struct {
	ST_FixedPercentageDecimal *int32
	ST_FixedPercentage        *ST_Percentage
}

// Validate validates the CT_Path2DQuadBezierTo and its children
func (_ccecb *CT_Path2DQuadBezierTo) Validate() error {
	return _ccecb.ValidateWithPath("C\u0054\u005f\u0050\u0061th\u0032D\u0051\u0075\u0061\u0064\u0042e\u007a\u0069\u0065\u0072\u0054\u006f")
}
func (_bdgc *CT_Bevel) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bdgc.WAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0077"}, Value: _dg.Sprintf("\u0025\u0076", *_bdgc.WAttr)})
	}
	if _bdgc.HAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068"}, Value: _dg.Sprintf("\u0025\u0076", *_bdgc.HAttr)})
	}
	if _bdgc.PrstAttr != ST_BevelPresetTypeUnset {
		_aeae, _ddfe := _bdgc.PrstAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073\u0074"})
		if _ddfe != nil {
			return _ddfe
		}
		start.Attr = append(start.Attr, _aeae)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bgbgg *CT_TableRow) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bcef := range start.Attr {
		if _bcef.Name.Local == "\u0068" {
			_eebdgd, _bacb := ParseUnionST_Coordinate(_bcef.Value)
			if _bacb != nil {
				return _bacb
			}
			_bgbgg.HAttr = _eebdgd
			continue
		}
	}
_dfafca:
	for {
		_bgeafc, _dbebge := d.Token()
		if _dbebge != nil {
			return _dbebge
		}
		switch _ggcdb := _bgeafc.(type) {
		case _d.StartElement:
			switch _ggcdb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063"}:
				_eaeaef := NewCT_TableCell()
				if _ffdgbg := d.DecodeElement(_eaeaef, &_ggcdb); _ffdgbg != nil {
					return _ffdgbg
				}
				_bgbgg.Tc = append(_bgbgg.Tc, _eaeaef)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgbgg.ExtLst = NewCT_OfficeArtExtensionList()
				if _gbfgca := d.DecodeElement(_bgbgg.ExtLst, &_ggcdb); _gbfgca != nil {
					return _gbfgca
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077\u0020\u0025\u0076", _ggcdb.Name)
				if _faedb := d.Skip(); _faedb != nil {
					return _faedb
				}
			}
		case _d.EndElement:
			break _dfafca
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_AlphaOutsetEffect and its children
func (_bgd *CT_AlphaOutsetEffect) Validate() error {
	return _bgd.ValidateWithPath("C\u0054_\u0041\u006c\u0070\u0068\u0061\u004f\u0075\u0074s\u0065\u0074\u0045\u0066fe\u0063\u0074")
}
func (_ffec *CT_Camera) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ffec.PrstAttr = ST_PresetCameraType(1)
	for _, _faagg := range start.Attr {
		if _faagg.Name.Local == "\u0070\u0072\u0073\u0074" {
			_ffec.PrstAttr.UnmarshalXMLAttr(_faagg)
			continue
		}
		if _faagg.Name.Local == "\u0066\u006f\u0076" {
			_gbgag, _afefa := _c.ParseInt(_faagg.Value, 10, 32)
			if _afefa != nil {
				return _afefa
			}
			_cfac := int32(_gbgag)
			_ffec.FovAttr = &_cfac
			continue
		}
		if _faagg.Name.Local == "\u007a\u006f\u006f\u006d" {
			_dda, _bcfg := ParseUnionST_PositivePercentage(_faagg.Value)
			if _bcfg != nil {
				return _bcfg
			}
			_ffec.ZoomAttr = &_dda
			continue
		}
	}
_bbcac:
	for {
		_dbbe, _bgdg := d.Token()
		if _bgdg != nil {
			return _bgdg
		}
		switch _ffcee := _dbbe.(type) {
		case _d.StartElement:
			switch _ffcee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}:
				_ffec.Rot = NewCT_SphereCoords()
				if _deeb := d.DecodeElement(_ffec.Rot, &_ffcee); _deeb != nil {
					return _deeb
				}
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0061\u006de\u0072\u0061 \u0025\u0076", _ffcee.Name)
				if _bfb := d.Skip(); _bfb != nil {
					return _bfb
				}
			}
		case _d.EndElement:
			break _bbcac
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_AnimationChartBuildProperties() *CT_AnimationChartBuildProperties {
	_efc := &CT_AnimationChartBuildProperties{}
	return _efc
}
func (_ccad *CT_GeomGuideList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eeadd:
	for {
		_gagg, _gcgdfe := d.Token()
		if _gcgdfe != nil {
			return _gcgdfe
		}
		switch _fdege := _gagg.(type) {
		case _d.StartElement:
			switch _fdege.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064"}:
				_dfced := NewCT_GeomGuide()
				if _cgee := d.DecodeElement(_dfced, &_fdege); _cgee != nil {
					return _cgee
				}
				_ccad.Gd = append(_ccad.Gd, _dfced)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _fdege.Name)
				if _cdgaa := d.Skip(); _cdgaa != nil {
					return _cdgaa
				}
			}
		case _d.EndElement:
			break _eeadd
		case _d.CharData:
		}
	}
	return nil
}
func (_eccge *ST_ChartBuildStep) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_adbaf, _cgabg := d.Token()
	if _cgabg != nil {
		return _cgabg
	}
	if _eabea, _cdada := _adbaf.(_d.EndElement); _cdada && _eabea.Name == start.Name {
		*_eccge = 1
		return nil
	}
	if _egdge, _ggcaa := _adbaf.(_d.CharData); !_ggcaa {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adbaf)
	} else {
		switch string(_egdge) {
		case "":
			*_eccge = 0
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_eccge = 1
		case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_eccge = 2
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_eccge = 3
		case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
			*_eccge = 4
		case "\u0061\u006c\u006c\u0050\u0074\u0073":
			*_eccge = 5
		case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
			*_eccge = 6
		}
	}
	_adbaf, _cgabg = d.Token()
	if _cgabg != nil {
		return _cgabg
	}
	if _dfgfg, _bbdcb := _adbaf.(_d.EndElement); _bbdcb && _dfgfg.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adbaf)
}

type CT_Cell3D struct {
	PrstMaterialAttr ST_PresetMaterialType
	Bevel            *CT_Bevel
	LightRig         *CT_LightRig
	ExtLst           *CT_OfficeArtExtensionList
}

func NewCT_FillOverlayEffect() *CT_FillOverlayEffect {
	_fafga := &CT_FillOverlayEffect{}
	_fafga.BlendAttr = ST_BlendMode(1)
	return _fafga
}

// ValidateWithPath validates the CT_Path2DArcTo and its children, prefixing error messages with path
func (_fafff *CT_Path2DArcTo) ValidateWithPath(path string) error {
	if _eedf := _fafff.WRAttr.ValidateWithPath(path + "\u002fW\u0052\u0041\u0074\u0074\u0072"); _eedf != nil {
		return _eedf
	}
	if _efded := _fafff.HRAttr.ValidateWithPath(path + "\u002fH\u0052\u0041\u0074\u0074\u0072"); _efded != nil {
		return _efded
	}
	if _dcgcc := _fafff.StAngAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _dcgcc != nil {
		return _dcgcc
	}
	if _abde := _fafff.SwAngAttr.ValidateWithPath(path + "\u002f\u0053\u0077\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _abde != nil {
		return _abde
	}
	return nil
}

const (
	ST_PitchFamilyUnset ST_PitchFamily = 0
	ST_PitchFamily00    ST_PitchFamily = 1
	ST_PitchFamily01    ST_PitchFamily = 2
	ST_PitchFamily02    ST_PitchFamily = 3
	ST_PitchFamily16    ST_PitchFamily = 4
	ST_PitchFamily17    ST_PitchFamily = 5
	ST_PitchFamily18    ST_PitchFamily = 6
	ST_PitchFamily32    ST_PitchFamily = 7
	ST_PitchFamily33    ST_PitchFamily = 8
	ST_PitchFamily34    ST_PitchFamily = 9
	ST_PitchFamily48    ST_PitchFamily = 10
	ST_PitchFamily49    ST_PitchFamily = 11
	ST_PitchFamily50    ST_PitchFamily = 12
	ST_PitchFamily64    ST_PitchFamily = 13
	ST_PitchFamily65    ST_PitchFamily = 14
	ST_PitchFamily66    ST_PitchFamily = 15
	ST_PitchFamily80    ST_PitchFamily = 16
	ST_PitchFamily81    ST_PitchFamily = 17
	ST_PitchFamily82    ST_PitchFamily = 18
)

func NewCT_SoftEdgesEffect() *CT_SoftEdgesEffect {
	_cbabe := &CT_SoftEdgesEffect{}
	_cbabe.RadAttr = 0
	return _cbabe
}
func NewVideoFile() *VideoFile {
	_agfeb := &VideoFile{}
	_agfeb.CT_VideoFile = *NewCT_VideoFile()
	return _agfeb
}

// ValidateWithPath validates the EG_TextBulletSize and its children, prefixing error messages with path
func (_decce *EG_TextBulletSize) ValidateWithPath(path string) error {
	if _decce.BuSzTx != nil {
		if _accff := _decce.BuSzTx.ValidateWithPath(path + "\u002fB\u0075\u0053\u007a\u0054\u0078"); _accff != nil {
			return _accff
		}
	}
	if _decce.BuSzPct != nil {
		if _ecbfcf := _decce.BuSzPct.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0063\u0074"); _ecbfcf != nil {
			return _ecbfcf
		}
	}
	if _decce.BuSzPts != nil {
		if _gaefd := _decce.BuSzPts.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0074\u0073"); _gaefd != nil {
			return _gaefd
		}
	}
	return nil
}
func (_gedgf ST_LineEndWidth) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gedgf.String(), start)
}
func (_ffeb *CT_AnimationElementChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cbfc:
	for {
		_bdgd, _cfa := d.Token()
		if _cfa != nil {
			return _cfa
		}
		switch _aba := _bdgd.(type) {
		case _d.StartElement:
			switch _aba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0067\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0067\u006d"}:
				_ffeb.Dgm = NewCT_AnimationDgmElement()
				if _eada := d.DecodeElement(_ffeb.Dgm, &_aba); _eada != nil {
					return _eada
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074"}:
				_ffeb.Chart = NewCT_AnimationChartElement()
				if _efdf := d.DecodeElement(_ffeb.Chart, &_aba); _efdf != nil {
					return _efdf
				}
			default:
				_cd.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006fn\u0045l\u0065\u006d\u0065\u006e\u0074\u0043\u0068\u006fi\u0063e\u0020\u0025v", _aba.Name)
				if _fggc := d.Skip(); _fggc != nil {
					return _fggc
				}
			}
		case _d.EndElement:
			break _cbfc
		case _d.CharData:
		}
	}
	return nil
}

type CT_PresetShadowEffect struct {
	PrstAttr  ST_PresetShadowVal
	DistAttr  *int64
	DirAttr   *int32
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

// Validate validates the CT_AnimationElementChoice and its children
func (_fgb *CT_AnimationElementChoice) Validate() error {
	return _fgb.ValidateWithPath("\u0043T\u005f\u0041\u006e\u0069m\u0061\u0074\u0069\u006f\u006eE\u006ce\u006de\u006e\u0074\u0043\u0068\u006f\u0069\u0063e")
}
func NewCT_AlphaCeilingEffect() *CT_AlphaCeilingEffect { _gdf := &CT_AlphaCeilingEffect{}; return _gdf }
func (_fcadab *ST_AdjAngle) Validate() error           { return _fcadab.ValidateWithPath("") }

type CT_HslColor struct {
	HueAttr           int32
	SatAttr           ST_Percentage
	LumAttr           ST_Percentage
	EG_ColorTransform []*EG_ColorTransform
}

func (_bfbda *CT_RegularTextRun) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eebea:
	for {
		_aebbg, _fgfgbb := d.Token()
		if _fgfgbb != nil {
			return _fgfgbb
		}
		switch _cbegc := _aebbg.(type) {
		case _d.StartElement:
			switch _cbegc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_bfbda.RPr = NewCT_TextCharacterProperties()
				if _fgfca := d.DecodeElement(_bfbda.RPr, &_cbegc); _fgfca != nil {
					return _fgfca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _geagfa := d.DecodeElement(&_bfbda.T, &_cbegc); _geagfa != nil {
					return _geagfa
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065\u0078\u0074\u0052\u0075\u006e\u0020\u0025\u0076", _cbegc.Name)
				if _fcgbf := d.Skip(); _fcgbf != nil {
					return _fcgbf
				}
			}
		case _d.EndElement:
			break _eebea
		case _d.CharData:
		}
	}
	return nil
}
func (_aafeb *CT_InverseGammaTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_gaefa, _aaadb := d.Token()
		if _aaadb != nil {
			return _dg.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0049nve\u0072se\u0047\u0061\u006d\u006d\u0061\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _aaadb)
		}
		if _babfc, _cada := _gaefa.(_d.EndElement); _cada && _babfc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cgfca *CT_RelativeRect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cgfca.LAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c"}, Value: _dg.Sprintf("\u0025\u0076", *_cgfca.LAttr)})
	}
	if _cgfca.TAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_cgfca.TAttr)})
	}
	if _cgfca.RAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072"}, Value: _dg.Sprintf("\u0025\u0076", *_cgfca.RAttr)})
	}
	if _cgfca.BAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062"}, Value: _dg.Sprintf("\u0025\u0076", *_cgfca.BAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextListStyle and its children
func (_eedg *CT_TextListStyle) Validate() error {
	return _eedg.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065")
}
func (_bdaae *CT_CustomGeometry2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bdaae.AvLst != nil {
		_cgagc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_bdaae.AvLst, _cgagc)
	}
	if _bdaae.GdLst != nil {
		_fggab := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_bdaae.GdLst, _fggab)
	}
	if _bdaae.AhLst != nil {
		_gfca := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0068\u004c\u0073\u0074"}}
		e.EncodeElement(_bdaae.AhLst, _gfca)
	}
	if _bdaae.CxnLst != nil {
		_dcba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0078\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_bdaae.CxnLst, _dcba)
	}
	if _bdaae.Rect != nil {
		_bdafd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072\u0065\u0063\u0074"}}
		e.EncodeElement(_bdaae.Rect, _bdafd)
	}
	_aaed := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0061\u0074\u0068\u004c\u0073t"}}
	e.EncodeElement(_bdaae.PathLst, _aaed)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dgfda *CT_Hyperlink) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dgfda.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_dgfda.IdAttr)})
	}
	if _dgfda.InvalidUrlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0055\u0072\u006c"}, Value: _dg.Sprintf("\u0025\u0076", *_dgfda.InvalidUrlAttr)})
	}
	if _dgfda.ActionAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"}, Value: _dg.Sprintf("\u0025\u0076", *_dgfda.ActionAttr)})
	}
	if _dgfda.TgtFrameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0067\u0074\u0046\u0072\u0061\u006d\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_dgfda.TgtFrameAttr)})
	}
	if _dgfda.TooltipAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074o\u006f\u006c\u0074\u0069\u0070"}, Value: _dg.Sprintf("\u0025\u0076", *_dgfda.TooltipAttr)})
	}
	if _dgfda.HistoryAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068i\u0073\u0074\u006f\u0072\u0079"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_dgfda.HistoryAttr))})
	}
	if _dgfda.HighlightClickAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074C\u006c\u0069\u0063\u006b"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_dgfda.HighlightClickAttr))})
	}
	if _dgfda.EndSndAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_dgfda.EndSndAttr))})
	}
	e.EncodeToken(start)
	if _dgfda.Snd != nil {
		_gfgec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073n\u0064"}}
		e.EncodeElement(_dgfda.Snd, _gfgec)
	}
	if _dgfda.ExtLst != nil {
		_ggdcge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dgfda.ExtLst, _ggdcge)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dffe *CT_TextNormalAutofit) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _begf := range start.Attr {
		if _begf.Name.Local == "\u0066o\u006e\u0074\u0053\u0063\u0061\u006ce" {
			_bdfaf, _fcagc := ParseUnionST_TextFontScalePercentOrPercentString(_begf.Value)
			if _fcagc != nil {
				return _fcagc
			}
			_dffe.FontScaleAttr = &_bdfaf
			continue
		}
		if _begf.Name.Local == "\u006c\u006e\u0053\u0070\u0063\u0052\u0065\u0064\u0075c\u0074\u0069\u006f\u006e" {
			_cffade, _cadfa := ParseUnionST_TextSpacingPercentOrPercentString(_begf.Value)
			if _cadfa != nil {
				return _cadfa
			}
			_dffe.LnSpcReductionAttr = &_cffade
			continue
		}
	}
	for {
		_dccggb, _aebad := d.Token()
		if _aebad != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074N\u006fr\u006d\u0061\u006c\u0041\u0075\u0074\u006f\u0066\u0069\u0074\u003a\u0020\u0025\u0073", _aebad)
		}
		if _ddfdd, _bbbc := _dccggb.(_d.EndElement); _bbbc && _ddfdd.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_ReflectionEffect() *CT_ReflectionEffect { _gfba := &CT_ReflectionEffect{}; return _gfba }
func NewCT_AnimationGraphicalObjectBuildProperties() *CT_AnimationGraphicalObjectBuildProperties {
	_ffea := &CT_AnimationGraphicalObjectBuildProperties{}
	return _ffea
}
func NewCT_TextCharBullet() *CT_TextCharBullet { _gffca := &CT_TextCharBullet{}; return _gffca }
func (_gfbdfc *ST_TextAnchoringType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bdcbf, _fcfdcg := d.Token()
	if _fcfdcg != nil {
		return _fcfdcg
	}
	if _ecae, _ccdgff := _bdcbf.(_d.EndElement); _ccdgff && _ecae.Name == start.Name {
		*_gfbdfc = 1
		return nil
	}
	if _bfeadb, _bdcde := _bdcbf.(_d.CharData); !_bdcde {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdcbf)
	} else {
		switch string(_bfeadb) {
		case "":
			*_gfbdfc = 0
		case "\u0074":
			*_gfbdfc = 1
		case "\u0063\u0074\u0072":
			*_gfbdfc = 2
		case "\u0062":
			*_gfbdfc = 3
		case "\u006a\u0075\u0073\u0074":
			*_gfbdfc = 4
		case "\u0064\u0069\u0073\u0074":
			*_gfbdfc = 5
		}
	}
	_bdcbf, _fcfdcg = d.Token()
	if _fcfdcg != nil {
		return _fcfdcg
	}
	if _eecdg, _fbgcab := _bdcbf.(_d.EndElement); _fbgcab && _eecdg.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdcbf)
}
func (_dfae ST_LightRigDirection) ValidateWithPath(path string) error {
	switch _dfae {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfae))
	}
	return nil
}
func (_aafdb *CT_TextUnderlineLineFollowText) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dfaec ST_PresetPatternVal) String() string {
	switch _dfaec {
	case 0:
		return ""
	case 1:
		return "\u0070\u0063\u0074\u0035"
	case 2:
		return "\u0070\u0063\u00741\u0030"
	case 3:
		return "\u0070\u0063\u00742\u0030"
	case 4:
		return "\u0070\u0063\u00742\u0035"
	case 5:
		return "\u0070\u0063\u00743\u0030"
	case 6:
		return "\u0070\u0063\u00744\u0030"
	case 7:
		return "\u0070\u0063\u00745\u0030"
	case 8:
		return "\u0070\u0063\u00746\u0030"
	case 9:
		return "\u0070\u0063\u00747\u0030"
	case 10:
		return "\u0070\u0063\u00747\u0035"
	case 11:
		return "\u0070\u0063\u00748\u0030"
	case 12:
		return "\u0070\u0063\u00749\u0030"
	case 13:
		return "\u0068\u006f\u0072\u007a"
	case 14:
		return "\u0076\u0065\u0072\u0074"
	case 15:
		return "\u006c\u0074\u0048\u006f\u0072\u007a"
	case 16:
		return "\u006c\u0074\u0056\u0065\u0072\u0074"
	case 17:
		return "\u0064\u006b\u0048\u006f\u0072\u007a"
	case 18:
		return "\u0064\u006b\u0056\u0065\u0072\u0074"
	case 19:
		return "\u006ea\u0072\u0048\u006f\u0072\u007a"
	case 20:
		return "\u006ea\u0072\u0056\u0065\u0072\u0074"
	case 21:
		return "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a"
	case 22:
		return "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074"
	case 23:
		return "\u0063\u0072\u006fs\u0073"
	case 24:
		return "\u0064\u006e\u0044\u0069\u0061\u0067"
	case 25:
		return "\u0075\u0070\u0044\u0069\u0061\u0067"
	case 26:
		return "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067"
	case 27:
		return "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067"
	case 28:
		return "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067"
	case 29:
		return "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067"
	case 30:
		return "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067"
	case 31:
		return "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067"
	case 32:
		return "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067"
	case 33:
		return "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067"
	case 34:
		return "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s"
	case 35:
		return "\u0073m\u0043\u0068\u0065\u0063\u006b"
	case 36:
		return "\u006cg\u0043\u0068\u0065\u0063\u006b"
	case 37:
		return "\u0073\u006d\u0047\u0072\u0069\u0064"
	case 38:
		return "\u006c\u0067\u0047\u0072\u0069\u0064"
	case 39:
		return "\u0064o\u0074\u0047\u0072\u0069\u0064"
	case 40:
		return "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case 41:
		return "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case 42:
		return "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k"
	case 43:
		return "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k"
	case 44:
		return "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed"
	case 45:
		return "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064"
	case 46:
		return "\u0064o\u0074\u0044\u006d\u006e\u0064"
	case 47:
		return "\u0070\u006c\u0061i\u0064"
	case 48:
		return "\u0073\u0070\u0068\u0065\u0072\u0065"
	case 49:
		return "\u0077\u0065\u0061v\u0065"
	case 50:
		return "\u0064\u0069\u0076o\u0074"
	case 51:
		return "\u0073h\u0069\u006e\u0067\u006c\u0065"
	case 52:
		return "\u0077\u0061\u0076\u0065"
	case 53:
		return "\u0074r\u0065\u006c\u006c\u0069\u0073"
	case 54:
		return "\u007a\u0069\u0067\u005a\u0061\u0067"
	}
	return ""
}
func (_defca ST_PitchFamily) String() string {
	switch _defca {
	case 0:
		return ""
	case 1:
		return "\u0030\u0030"
	case 2:
		return "\u0030\u0031"
	case 3:
		return "\u0030\u0032"
	case 4:
		return "\u0031\u0036"
	case 5:
		return "\u0031\u0037"
	case 6:
		return "\u0031\u0038"
	case 7:
		return "\u0033\u0032"
	case 8:
		return "\u0033\u0033"
	case 9:
		return "\u0033\u0034"
	case 10:
		return "\u0034\u0038"
	case 11:
		return "\u0034\u0039"
	case 12:
		return "\u0035\u0030"
	case 13:
		return "\u0036\u0034"
	case 14:
		return "\u0036\u0035"
	case 15:
		return "\u0036\u0036"
	case 16:
		return "\u0038\u0030"
	case 17:
		return "\u0038\u0031"
	case 18:
		return "\u0038\u0032"
	}
	return ""
}

// Validate validates the Graphic and its children
func (_dcaab *Graphic) Validate() error {
	return _dcaab.ValidateWithPath("\u0047r\u0061\u0070\u0068\u0069\u0063")
}
func (_bfece ST_TextVertOverflowType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_acded := _d.Attr{}
	_acded.Name = name
	switch _bfece {
	case ST_TextVertOverflowTypeUnset:
		_acded.Value = ""
	case ST_TextVertOverflowTypeOverflow:
		_acded.Value = "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case ST_TextVertOverflowTypeEllipsis:
		_acded.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073"
	case ST_TextVertOverflowTypeClip:
		_acded.Value = "\u0063\u006c\u0069\u0070"
	}
	return _acded, nil
}

// Validate validates the CT_PresetColor and its children
func (_bfacb *CT_PresetColor) Validate() error {
	return _bfacb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074C\u006f\u006c\u006f\u0072")
}
func (_dbegc *CT_NonVisualConnectorProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dbegc.CxnSpLocks != nil {
		_bfdb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063x\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_dbegc.CxnSpLocks, _bfdb)
	}
	if _dbegc.StCxn != nil {
		_gdbde := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0043\u0078\u006e"}}
		e.EncodeElement(_dbegc.StCxn, _gdbde)
	}
	if _dbegc.EndCxn != nil {
		_edeba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u006e\u0064\u0043\u0078\u006e"}}
		e.EncodeElement(_dbegc.EndCxn, _edeba)
	}
	if _dbegc.ExtLst != nil {
		_gbgda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dbegc.ExtLst, _gbgda)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_LineJoinRound() *CT_LineJoinRound { _fbda := &CT_LineJoinRound{}; return _fbda }

// Validate validates the CT_FontCollection and its children
func (_eccgba *CT_FontCollection) Validate() error {
	return _eccgba.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065c\u0074\u0069\u006f\u006e")
}
func (_ccegg *CT_TableProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ccegg.RtlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0074\u006c"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccegg.RtlAttr))})
	}
	if _ccegg.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccegg.FirstRowAttr))})
	}
	if _ccegg.FirstColAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccegg.FirstColAttr))})
	}
	if _ccegg.LastRowAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccegg.LastRowAttr))})
	}
	if _ccegg.LastColAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccegg.LastColAttr))})
	}
	if _ccegg.BandRowAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062a\u006e\u0064\u0052\u006f\u0077"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccegg.BandRowAttr))})
	}
	if _ccegg.BandColAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062a\u006e\u0064\u0043\u006f\u006c"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ccegg.BandColAttr))})
	}
	e.EncodeToken(start)
	if _ccegg.NoFill != nil {
		_ggecc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccegg.NoFill, _ggecc)
	}
	if _ccegg.SolidFill != nil {
		_eddge := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccegg.SolidFill, _eddge)
	}
	if _ccegg.GradFill != nil {
		_dfgcd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccegg.GradFill, _dfgcd)
	}
	if _ccegg.BlipFill != nil {
		_ddffg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccegg.BlipFill, _ddffg)
	}
	if _ccegg.PattFill != nil {
		_gbbaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ccegg.PattFill, _gbbaa)
	}
	if _ccegg.GrpFill != nil {
		_fagdb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_ccegg.GrpFill, _fagdb)
	}
	if _ccegg.EffectLst != nil {
		_dafab := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccegg.EffectLst, _dafab)
	}
	if _ccegg.EffectDag != nil {
		_gbgf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_ccegg.EffectDag, _gbgf)
	}
	if _ccegg.Choice != nil {
		_ccegg.Choice.MarshalXML(e, _d.StartElement{})
	}
	if _ccegg.ExtLst != nil {
		_eeeebf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccegg.ExtLst, _eeeebf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_NonVisualPictureProperties and its children, prefixing error messages with path
func (_ceacc *CT_NonVisualPictureProperties) ValidateWithPath(path string) error {
	if _ceacc.PicLocks != nil {
		if _eeag := _ceacc.PicLocks.ValidateWithPath(path + "\u002fP\u0069\u0063\u004c\u006f\u0063\u006bs"); _eeag != nil {
			return _eeag
		}
	}
	if _ceacc.ExtLst != nil {
		if _cafc := _ceacc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cafc != nil {
			return _cafc
		}
	}
	return nil
}

const (
	ST_TextShapeTypeUnset                     ST_TextShapeType = 0
	ST_TextShapeTypeTextNoShape               ST_TextShapeType = 1
	ST_TextShapeTypeTextPlain                 ST_TextShapeType = 2
	ST_TextShapeTypeTextStop                  ST_TextShapeType = 3
	ST_TextShapeTypeTextTriangle              ST_TextShapeType = 4
	ST_TextShapeTypeTextTriangleInverted      ST_TextShapeType = 5
	ST_TextShapeTypeTextChevron               ST_TextShapeType = 6
	ST_TextShapeTypeTextChevronInverted       ST_TextShapeType = 7
	ST_TextShapeTypeTextRingInside            ST_TextShapeType = 8
	ST_TextShapeTypeTextRingOutside           ST_TextShapeType = 9
	ST_TextShapeTypeTextArchUp                ST_TextShapeType = 10
	ST_TextShapeTypeTextArchDown              ST_TextShapeType = 11
	ST_TextShapeTypeTextCircle                ST_TextShapeType = 12
	ST_TextShapeTypeTextButton                ST_TextShapeType = 13
	ST_TextShapeTypeTextArchUpPour            ST_TextShapeType = 14
	ST_TextShapeTypeTextArchDownPour          ST_TextShapeType = 15
	ST_TextShapeTypeTextCirclePour            ST_TextShapeType = 16
	ST_TextShapeTypeTextButtonPour            ST_TextShapeType = 17
	ST_TextShapeTypeTextCurveUp               ST_TextShapeType = 18
	ST_TextShapeTypeTextCurveDown             ST_TextShapeType = 19
	ST_TextShapeTypeTextCanUp                 ST_TextShapeType = 20
	ST_TextShapeTypeTextCanDown               ST_TextShapeType = 21
	ST_TextShapeTypeTextWave1                 ST_TextShapeType = 22
	ST_TextShapeTypeTextWave2                 ST_TextShapeType = 23
	ST_TextShapeTypeTextDoubleWave1           ST_TextShapeType = 24
	ST_TextShapeTypeTextWave4                 ST_TextShapeType = 25
	ST_TextShapeTypeTextInflate               ST_TextShapeType = 26
	ST_TextShapeTypeTextDeflate               ST_TextShapeType = 27
	ST_TextShapeTypeTextInflateBottom         ST_TextShapeType = 28
	ST_TextShapeTypeTextDeflateBottom         ST_TextShapeType = 29
	ST_TextShapeTypeTextInflateTop            ST_TextShapeType = 30
	ST_TextShapeTypeTextDeflateTop            ST_TextShapeType = 31
	ST_TextShapeTypeTextDeflateInflate        ST_TextShapeType = 32
	ST_TextShapeTypeTextDeflateInflateDeflate ST_TextShapeType = 33
	ST_TextShapeTypeTextFadeRight             ST_TextShapeType = 34
	ST_TextShapeTypeTextFadeLeft              ST_TextShapeType = 35
	ST_TextShapeTypeTextFadeUp                ST_TextShapeType = 36
	ST_TextShapeTypeTextFadeDown              ST_TextShapeType = 37
	ST_TextShapeTypeTextSlantUp               ST_TextShapeType = 38
	ST_TextShapeTypeTextSlantDown             ST_TextShapeType = 39
	ST_TextShapeTypeTextCascadeUp             ST_TextShapeType = 40
	ST_TextShapeTypeTextCascadeDown           ST_TextShapeType = 41
)

func (_abafg *CT_ThemeableLineStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _abafg.Ln != nil {
		_ededa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_abafg.Ln, _ededa)
	}
	if _abafg.LnRef != nil {
		_gbda := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u006e\u0052\u0065\u0066"}}
		e.EncodeElement(_abafg.LnRef, _gbda)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dcbfba ST_AnimationDgmOnlyBuildType) ValidateWithPath(path string) error {
	switch _dcbfba {
	case 0, 1, 2, 3:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcbfba))
	}
	return nil
}

type CT_TextUnderlineLineFollowText struct{}

func NewEG_TextBulletColor() *EG_TextBulletColor { _dcgdd := &EG_TextBulletColor{}; return _dcgdd }
func (_bgbddff *CT_TintEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bgbddff.HueAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0075\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_bgbddff.HueAttr)})
	}
	if _bgbddff.AmtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006d\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_bgbddff.AmtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dacbf ST_FontCollectionIndex) ValidateWithPath(path string) error {
	switch _dacbf {
	case 0, 1, 2, 3:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dacbf))
	}
	return nil
}
func (_ggfe *CT_TextLineBreak) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ggfe.RPr != nil {
		_dgde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_ggfe.RPr, _dgde)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextNormalAutofit and its children, prefixing error messages with path
func (_ceeac *CT_TextNormalAutofit) ValidateWithPath(path string) error {
	if _ceeac.FontScaleAttr != nil {
		if _gddfg := _ceeac.FontScaleAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0053\u0063\u0061\u006ce\u0041\u0074\u0074\u0072"); _gddfg != nil {
			return _gddfg
		}
	}
	if _ceeac.LnSpcReductionAttr != nil {
		if _aaegba := _ceeac.LnSpcReductionAttr.ValidateWithPath(path + "\u002f\u004c\u006e\u0053pc\u0052\u0065\u0064\u0075\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _aaegba != nil {
			return _aaegba
		}
	}
	return nil
}
func (_cffgdd *CT_EffectStyleList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gffga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}}
	for _, _dbfg := range _cffgdd.EffectStyle {
		e.EncodeElement(_dbfg, _gffga)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dgccd *CT_TextField) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dgccd.IdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _cddc := range start.Attr {
		if _cddc.Name.Local == "\u0069\u0064" {
			_ccade, _gceded := _cddc.Value, error(nil)
			if _gceded != nil {
				return _gceded
			}
			_dgccd.IdAttr = _ccade
			continue
		}
		if _cddc.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dcefa, _gaeae := _cddc.Value, error(nil)
			if _gaeae != nil {
				return _gaeae
			}
			_dgccd.TypeAttr = &_dcefa
			continue
		}
	}
_gabfbc:
	for {
		_ceedg, _cabed := d.Token()
		if _cabed != nil {
			return _cabed
		}
		switch _badba := _ceedg.(type) {
		case _d.StartElement:
			switch _badba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_dgccd.RPr = NewCT_TextCharacterProperties()
				if _bdfbaa := d.DecodeElement(_dgccd.RPr, &_badba); _bdfbaa != nil {
					return _bdfbaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}:
				_dgccd.PPr = NewCT_TextParagraphProperties()
				if _fabbg := d.DecodeElement(_dgccd.PPr, &_badba); _fabbg != nil {
					return _fabbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_dgccd.T = new(string)
				if _dgdgd := d.DecodeElement(_dgccd.T, &_badba); _dgdgd != nil {
					return _dgdgd
				}
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0065\u0078t\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _badba.Name)
				if _aefdga := d.Skip(); _aefdga != nil {
					return _aefdga
				}
			}
		case _d.EndElement:
			break _gabfbc
		case _d.CharData:
		}
	}
	return nil
}
func (_dbffa *CT_TextTabStopList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_geffc:
	for {
		_daggaf, _cebaef := d.Token()
		if _cebaef != nil {
			return _cebaef
		}
		switch _dagb := _daggaf.(type) {
		case _d.StartElement:
			switch _dagb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062"}:
				_eeffg := NewCT_TextTabStop()
				if _gagga := d.DecodeElement(_eeffg, &_dagb); _gagga != nil {
					return _gagga
				}
				_dbffa.Tab = append(_dbffa.Tab, _eeffg)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dagb.Name)
				if _fccgd := d.Skip(); _fccgd != nil {
					return _fccgd
				}
			}
		case _d.EndElement:
			break _geffc
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_PatternFillProperties() *CT_PatternFillProperties {
	_edfeg := &CT_PatternFillProperties{}
	return _edfeg
}
func (_efaad ST_AnimationChartOnlyBuildType) ValidateWithPath(path string) error {
	switch _efaad {
	case 0, 1, 2, 3, 4:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efaad))
	}
	return nil
}
func (_accbce *CT_TableStyleTextStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _accbce.BAttr != ST_OnOffStyleTypeUnset {
		_cgege, _ccddd := _accbce.BAttr.MarshalXMLAttr(_d.Name{Local: "\u0062"})
		if _ccddd != nil {
			return _ccddd
		}
		start.Attr = append(start.Attr, _cgege)
	}
	if _accbce.IAttr != ST_OnOffStyleTypeUnset {
		_gedcd, _ddgdg := _accbce.IAttr.MarshalXMLAttr(_d.Name{Local: "\u0069"})
		if _ddgdg != nil {
			return _ddgdg
		}
		start.Attr = append(start.Attr, _gedcd)
	}
	e.EncodeToken(start)
	if _accbce.Font != nil {
		_abbeb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_accbce.Font, _abbeb)
	}
	if _accbce.FontRef != nil {
		_fabdb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
		e.EncodeElement(_accbce.FontRef, _fabdb)
	}
	if _accbce.ScrgbClr != nil {
		_ggdad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_accbce.ScrgbClr, _ggdad)
	}
	if _accbce.SrgbClr != nil {
		_cbegb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_accbce.SrgbClr, _cbegb)
	}
	if _accbce.HslClr != nil {
		_cffd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_accbce.HslClr, _cffd)
	}
	if _accbce.SysClr != nil {
		_baeba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_accbce.SysClr, _baeba)
	}
	if _accbce.SchemeClr != nil {
		_deced := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_accbce.SchemeClr, _deced)
	}
	if _accbce.PrstClr != nil {
		_ffgab := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_accbce.PrstClr, _ffgab)
	}
	if _accbce.ExtLst != nil {
		_ecbfce := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_accbce.ExtLst, _ecbfce)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_efeed *ST_PresetPatternVal) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_efeed = 0
	case "\u0070\u0063\u0074\u0035":
		*_efeed = 1
	case "\u0070\u0063\u00741\u0030":
		*_efeed = 2
	case "\u0070\u0063\u00742\u0030":
		*_efeed = 3
	case "\u0070\u0063\u00742\u0035":
		*_efeed = 4
	case "\u0070\u0063\u00743\u0030":
		*_efeed = 5
	case "\u0070\u0063\u00744\u0030":
		*_efeed = 6
	case "\u0070\u0063\u00745\u0030":
		*_efeed = 7
	case "\u0070\u0063\u00746\u0030":
		*_efeed = 8
	case "\u0070\u0063\u00747\u0030":
		*_efeed = 9
	case "\u0070\u0063\u00747\u0035":
		*_efeed = 10
	case "\u0070\u0063\u00748\u0030":
		*_efeed = 11
	case "\u0070\u0063\u00749\u0030":
		*_efeed = 12
	case "\u0068\u006f\u0072\u007a":
		*_efeed = 13
	case "\u0076\u0065\u0072\u0074":
		*_efeed = 14
	case "\u006c\u0074\u0048\u006f\u0072\u007a":
		*_efeed = 15
	case "\u006c\u0074\u0056\u0065\u0072\u0074":
		*_efeed = 16
	case "\u0064\u006b\u0048\u006f\u0072\u007a":
		*_efeed = 17
	case "\u0064\u006b\u0056\u0065\u0072\u0074":
		*_efeed = 18
	case "\u006ea\u0072\u0048\u006f\u0072\u007a":
		*_efeed = 19
	case "\u006ea\u0072\u0056\u0065\u0072\u0074":
		*_efeed = 20
	case "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a":
		*_efeed = 21
	case "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074":
		*_efeed = 22
	case "\u0063\u0072\u006fs\u0073":
		*_efeed = 23
	case "\u0064\u006e\u0044\u0069\u0061\u0067":
		*_efeed = 24
	case "\u0075\u0070\u0044\u0069\u0061\u0067":
		*_efeed = 25
	case "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067":
		*_efeed = 26
	case "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067":
		*_efeed = 27
	case "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067":
		*_efeed = 28
	case "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067":
		*_efeed = 29
	case "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067":
		*_efeed = 30
	case "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067":
		*_efeed = 31
	case "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067":
		*_efeed = 32
	case "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067":
		*_efeed = 33
	case "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s":
		*_efeed = 34
	case "\u0073m\u0043\u0068\u0065\u0063\u006b":
		*_efeed = 35
	case "\u006cg\u0043\u0068\u0065\u0063\u006b":
		*_efeed = 36
	case "\u0073\u006d\u0047\u0072\u0069\u0064":
		*_efeed = 37
	case "\u006c\u0067\u0047\u0072\u0069\u0064":
		*_efeed = 38
	case "\u0064o\u0074\u0047\u0072\u0069\u0064":
		*_efeed = 39
	case "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
		*_efeed = 40
	case "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
		*_efeed = 41
	case "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k":
		*_efeed = 42
	case "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k":
		*_efeed = 43
	case "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed":
		*_efeed = 44
	case "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064":
		*_efeed = 45
	case "\u0064o\u0074\u0044\u006d\u006e\u0064":
		*_efeed = 46
	case "\u0070\u006c\u0061i\u0064":
		*_efeed = 47
	case "\u0073\u0070\u0068\u0065\u0072\u0065":
		*_efeed = 48
	case "\u0077\u0065\u0061v\u0065":
		*_efeed = 49
	case "\u0064\u0069\u0076o\u0074":
		*_efeed = 50
	case "\u0073h\u0069\u006e\u0067\u006c\u0065":
		*_efeed = 51
	case "\u0077\u0061\u0076\u0065":
		*_efeed = 52
	case "\u0074r\u0065\u006c\u006c\u0069\u0073":
		*_efeed = 53
	case "\u007a\u0069\u0067\u005a\u0061\u0067":
		*_efeed = 54
	}
	return nil
}
func (_defeb ST_PresetMaterialType) String() string {
	switch _defeb {
	case 0:
		return ""
	case 1:
		return "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065"
	case 2:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063"
	case 3:
		return "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c"
	case 4:
		return "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065"
	case 5:
		return "\u006d\u0061\u0074t\u0065"
	case 6:
		return "\u0070l\u0061\u0073\u0074\u0069\u0063"
	case 7:
		return "\u006d\u0065\u0074a\u006c"
	case 8:
		return "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e"
	case 9:
		return "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072"
	case 10:
		return "\u0070\u006f\u0077\u0064\u0065\u0072"
	case 11:
		return "\u0064\u006b\u0045\u0064\u0067\u0065"
	case 12:
		return "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"
	case 13:
		return "\u0063\u006c\u0065a\u0072"
	case 14:
		return "\u0066\u006c\u0061\u0074"
	case 15:
		return "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l"
	}
	return ""
}
func (_fcfagg *CT_TableCol) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0077"}, Value: _dg.Sprintf("\u0025\u0076", _fcfagg.WAttr)})
	e.EncodeToken(start)
	if _fcfagg.ExtLst != nil {
		_baagd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcfagg.ExtLst, _baagd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aafbgc *ST_AnimationBuildType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_aafbgc = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_aafbgc = 1
	}
	return nil
}

type CT_CustomGeometry2D struct {
	AvLst   *CT_GeomGuideList
	GdLst   *CT_GeomGuideList
	AhLst   *CT_AdjustHandleList
	CxnLst  *CT_ConnectionSiteList
	Rect    *CT_GeomRect
	PathLst *CT_Path2DList
}

// ValidateWithPath validates the CT_InverseTransform and its children, prefixing error messages with path
func (_cgfc *CT_InverseTransform) ValidateWithPath(path string) error { return nil }
func (_eafae ST_TextShapeType) String() string {
	switch _eafae {
	case 0:
		return ""
	case 1:
		return "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065"
	case 2:
		return "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n"
	case 3:
		return "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070"
	case 4:
		return "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 5:
		return "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064"
	case 6:
		return "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e"
	case 7:
		return "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064"
	case 8:
		return "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065"
	case 9:
		return "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065"
	case 10:
		return "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070"
	case 11:
		return "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e"
	case 12:
		return "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065"
	case 13:
		return "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e"
	case 14:
		return "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072"
	case 15:
		return "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072"
	case 16:
		return "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072"
	case 17:
		return "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072"
	case 18:
		return "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070"
	case 19:
		return "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e"
	case 20:
		return "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p"
	case 21:
		return "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e"
	case 22:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651"
	case 23:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652"
	case 24:
		return "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031"
	case 25:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654"
	case 26:
		return "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065"
	case 27:
		return "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065"
	case 28:
		return "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case 29:
		return "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case 30:
		return "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case 31:
		return "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case 32:
		return "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065"
	case 33:
		return "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e"
	case 34:
		return "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074"
	case 35:
		return "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074"
	case 36:
		return "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070"
	case 37:
		return "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	case 38:
		return "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070"
	case 39:
		return "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e"
	case 40:
		return "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070"
	case 41:
		return "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	}
	return ""
}
func (_cfbb *CT_EmbeddedWAVAudioFile) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _acfff := range start.Attr {
		if _acfff.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _acfff.Name.Local == "\u0065\u006d\u0062e\u0064" || _acfff.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _acfff.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_dggc, _fdeee := _acfff.Value, error(nil)
			if _fdeee != nil {
				return _fdeee
			}
			_cfbb.EmbedAttr = _dggc
			continue
		}
		if _acfff.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cfadg, _aeca := _acfff.Value, error(nil)
			if _aeca != nil {
				return _aeca
			}
			_cfbb.NameAttr = &_cfadg
			continue
		}
	}
	for {
		_aefbe, _gbadd := d.Token()
		if _gbadd != nil {
			return _dg.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0057\u0041\u0056A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065\u003a\u0020%\u0073", _gbadd)
		}
		if _bggg, _bgdb := _aefbe.(_d.EndElement); _bgdb && _bggg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextFont and its children, prefixing error messages with path
func (_bcbgd *CT_TextFont) ValidateWithPath(path string) error {
	if _ffggc := _bcbgd.PitchFamilyAttr.ValidateWithPath(path + "\u002f\u0050i\u0074\u0063\u0068F\u0061\u006d\u0069\u006c\u0079\u0041\u0074\u0074\u0072"); _ffggc != nil {
		return _ffggc
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaInverseEffect and its children, prefixing error messages with path
func (_cfb *CT_AlphaInverseEffect) ValidateWithPath(path string) error {
	if _cfb.ScrgbClr != nil {
		if _egf := _cfb.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _egf != nil {
			return _egf
		}
	}
	if _cfb.SrgbClr != nil {
		if _bde := _cfb.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _bde != nil {
			return _bde
		}
	}
	if _cfb.HslClr != nil {
		if _ffd := _cfb.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _ffd != nil {
			return _ffd
		}
	}
	if _cfb.SysClr != nil {
		if _dae := _cfb.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _dae != nil {
			return _dae
		}
	}
	if _cfb.SchemeClr != nil {
		if _effd := _cfb.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _effd != nil {
			return _effd
		}
	}
	if _cfb.PrstClr != nil {
		if _bgcc := _cfb.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _bgcc != nil {
			return _bgcc
		}
	}
	return nil
}
func (_cadff *ST_PresetColorVal) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cadff = 0
	case "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e":
		*_cadff = 1
	case "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065":
		*_cadff = 2
	case "\u0061\u0071\u0075\u0061":
		*_cadff = 3
	case "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_cadff = 4
	case "\u0061\u007a\u0075r\u0065":
		*_cadff = 5
	case "\u0062\u0065\u0069g\u0065":
		*_cadff = 6
	case "\u0062\u0069\u0073\u0071\u0075\u0065":
		*_cadff = 7
	case "\u0062\u006c\u0061c\u006b":
		*_cadff = 8
	case "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064":
		*_cadff = 9
	case "\u0062\u006c\u0075\u0065":
		*_cadff = 10
	case "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074":
		*_cadff = 11
	case "\u0062\u0072\u006fw\u006e":
		*_cadff = 12
	case "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd":
		*_cadff = 13
	case "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e":
		*_cadff = 14
	case "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065":
		*_cadff = 15
	case "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e":
		*_cadff = 16
	case "\u0063\u006f\u0072a\u006c":
		*_cadff = 17
	case "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065":
		*_cadff = 18
	case "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b":
		*_cadff = 19
	case "\u0063r\u0069\u006d\u0073\u006f\u006e":
		*_cadff = 20
	case "\u0063\u0079\u0061\u006e":
		*_cadff = 21
	case "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065":
		*_cadff = 22
	case "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e":
		*_cadff = 23
	case "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_cadff = 24
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
		*_cadff = 25
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079":
		*_cadff = 26
	case "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n":
		*_cadff = 27
	case "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi":
		*_cadff = 28
	case "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061":
		*_cadff = 29
	case "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e":
		*_cadff = 30
	case "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
		*_cadff = 31
	case "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
		*_cadff = 32
	case "\u0064a\u0072\u006b\u0052\u0065\u0064":
		*_cadff = 33
	case "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
		*_cadff = 34
	case "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 35
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_cadff = 36
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_cadff = 37
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_cadff = 38
	case "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_cadff = 39
	case "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
		*_cadff = 40
	case "\u0064\u006b\u0042\u006c\u0075\u0065":
		*_cadff = 41
	case "\u0064\u006b\u0043\u0079\u0061\u006e":
		*_cadff = 42
	case "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_cadff = 43
	case "\u0064\u006b\u0047\u0072\u0061\u0079":
		*_cadff = 44
	case "\u0064\u006b\u0047\u0072\u0065\u0079":
		*_cadff = 45
	case "\u0064k\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 46
	case "\u0064k\u004b\u0068\u0061\u006b\u0069":
		*_cadff = 47
	case "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a":
		*_cadff = 48
	case "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 49
	case "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
		*_cadff = 50
	case "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
		*_cadff = 51
	case "\u0064\u006b\u0052e\u0064":
		*_cadff = 52
	case "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
		*_cadff = 53
	case "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 54
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_cadff = 55
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_cadff = 56
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_cadff = 57
	case "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_cadff = 58
	case "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
		*_cadff = 59
	case "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b":
		*_cadff = 60
	case "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
		*_cadff = 61
	case "\u0064i\u006d\u0047\u0072\u0061\u0079":
		*_cadff = 62
	case "\u0064i\u006d\u0047\u0072\u0065\u0079":
		*_cadff = 63
	case "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065":
		*_cadff = 64
	case "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k":
		*_cadff = 65
	case "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065":
		*_cadff = 66
	case "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 67
	case "\u0066u\u0063\u0068\u0073\u0069\u0061":
		*_cadff = 68
	case "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o":
		*_cadff = 69
	case "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065":
		*_cadff = 70
	case "\u0067\u006f\u006c\u0064":
		*_cadff = 71
	case "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd":
		*_cadff = 72
	case "\u0067\u0072\u0061\u0079":
		*_cadff = 73
	case "\u0067\u0072\u0065\u0079":
		*_cadff = 74
	case "\u0067\u0072\u0065e\u006e":
		*_cadff = 75
	case "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077":
		*_cadff = 76
	case "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077":
		*_cadff = 77
	case "\u0068o\u0074\u0050\u0069\u006e\u006b":
		*_cadff = 78
	case "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d":
		*_cadff = 79
	case "\u0069\u006e\u0064\u0069\u0067\u006f":
		*_cadff = 80
	case "\u0069\u0076\u006fr\u0079":
		*_cadff = 81
	case "\u006b\u0068\u0061k\u0069":
		*_cadff = 82
	case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072":
		*_cadff = 83
	case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068":
		*_cadff = 84
	case "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n":
		*_cadff = 85
	case "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e":
		*_cadff = 86
	case "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e":
		*_cadff = 87
	case "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c":
		*_cadff = 88
	case "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n":
		*_cadff = 89
	case "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077":
		*_cadff = 90
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
		*_cadff = 91
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y":
		*_cadff = 92
	case "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 93
	case "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek":
		*_cadff = 94
	case "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
		*_cadff = 95
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 96
	case "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
		*_cadff = 97
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079":
		*_cadff = 98
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079":
		*_cadff = 99
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065":
		*_cadff = 100
	case "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
		*_cadff = 101
	case "\u006c\u0074\u0042\u006c\u0075\u0065":
		*_cadff = 102
	case "\u006ct\u0043\u006f\u0072\u0061\u006c":
		*_cadff = 103
	case "\u006c\u0074\u0043\u0079\u0061\u006e":
		*_cadff = 104
	case "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077":
		*_cadff = 105
	case "\u006c\u0074\u0047\u0072\u0061\u0079":
		*_cadff = 106
	case "\u006c\u0074\u0047\u0072\u0065\u0079":
		*_cadff = 107
	case "\u006ct\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 108
	case "\u006c\u0074\u0050\u0069\u006e\u006b":
		*_cadff = 109
	case "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
		*_cadff = 110
	case "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 111
	case "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e":
		*_cadff = 112
	case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_cadff = 113
	case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_cadff = 114
	case "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065":
		*_cadff = 115
	case "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
		*_cadff = 116
	case "\u006c\u0069\u006d\u0065":
		*_cadff = 117
	case "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n":
		*_cadff = 118
	case "\u006c\u0069\u006ee\u006e":
		*_cadff = 119
	case "\u006da\u0067\u0065\u006e\u0074\u0061":
		*_cadff = 120
	case "\u006d\u0061\u0072\u006f\u006f\u006e":
		*_cadff = 121
	case "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_cadff = 122
	case "\u006de\u0064\u0042\u006c\u0075\u0065":
		*_cadff = 123
	case "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d":
		*_cadff = 124
	case "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce":
		*_cadff = 125
	case "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 126
	case "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_cadff = 127
	case "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
		*_cadff = 128
	case "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_cadff = 129
	case "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_cadff = 130
	case "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_cadff = 131
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065":
		*_cadff = 132
	case "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064":
		*_cadff = 133
	case "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065":
		*_cadff = 134
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e":
		*_cadff = 135
	case "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_cadff = 136
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
		*_cadff = 137
	case "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_cadff = 138
	case "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_cadff = 139
	case "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065":
		*_cadff = 140
	case "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m":
		*_cadff = 141
	case "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e":
		*_cadff = 142
	case "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e":
		*_cadff = 143
	case "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065":
		*_cadff = 144
	case "\u006e\u0061\u0076\u0079":
		*_cadff = 145
	case "\u006fl\u0064\u004c\u0061\u0063\u0065":
		*_cadff = 146
	case "\u006f\u006c\u0069v\u0065":
		*_cadff = 147
	case "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b":
		*_cadff = 148
	case "\u006f\u0072\u0061\u006e\u0067\u0065":
		*_cadff = 149
	case "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d":
		*_cadff = 150
	case "\u006f\u0072\u0063\u0068\u0069\u0064":
		*_cadff = 151
	case "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_cadff = 152
	case "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n":
		*_cadff = 153
	case "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_cadff = 154
	case "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_cadff = 155
	case "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070":
		*_cadff = 156
	case "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f":
		*_cadff = 157
	case "\u0070\u0065\u0072\u0075":
		*_cadff = 158
	case "\u0070\u0069\u006e\u006b":
		*_cadff = 159
	case "\u0070\u006c\u0075\u006d":
		*_cadff = 160
	case "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065":
		*_cadff = 161
	case "\u0070\u0075\u0072\u0070\u006c\u0065":
		*_cadff = 162
	case "\u0072\u0065\u0064":
		*_cadff = 163
	case "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n":
		*_cadff = 164
	case "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e":
		*_cadff = 165
	case "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e":
		*_cadff = 166
	case "\u0073\u0061\u006c\u006d\u006f\u006e":
		*_cadff = 167
	case "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e":
		*_cadff = 168
	case "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 169
	case "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c":
		*_cadff = 170
	case "\u0073\u0069\u0065\u006e\u006e\u0061":
		*_cadff = 171
	case "\u0073\u0069\u006c\u0076\u0065\u0072":
		*_cadff = 172
	case "\u0073k\u0079\u0042\u006c\u0075\u0065":
		*_cadff = 173
	case "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e":
		*_cadff = 174
	case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y":
		*_cadff = 175
	case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y":
		*_cadff = 176
	case "\u0073\u006e\u006f\u0077":
		*_cadff = 177
	case "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 178
	case "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e":
		*_cadff = 179
	case "\u0074\u0061\u006e":
		*_cadff = 180
	case "\u0074\u0065\u0061\u006c":
		*_cadff = 181
	case "\u0074h\u0069\u0073\u0074\u006c\u0065":
		*_cadff = 182
	case "\u0074\u006f\u006d\u0061\u0074\u006f":
		*_cadff = 183
	case "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e":
		*_cadff = 184
	case "\u0076\u0069\u006f\u006c\u0065\u0074":
		*_cadff = 185
	case "\u0077\u0068\u0065a\u0074":
		*_cadff = 186
	case "\u0077\u0068\u0069t\u0065":
		*_cadff = 187
	case "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065":
		*_cadff = 188
	case "\u0079\u0065\u006c\u006c\u006f\u0077":
		*_cadff = 189
	case "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e":
		*_cadff = 190
	}
	return nil
}
func (_bebd *CT_Boolean) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bebd.ValAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _dg.Sprintf("\u0025\u0076", *_bebd.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_LightRigDirection byte

func (_bbfbfd *CT_GrayscaleEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PresetMaterialTypeUnset             ST_PresetMaterialType = 0
	ST_PresetMaterialTypeLegacyMatte       ST_PresetMaterialType = 1
	ST_PresetMaterialTypeLegacyPlastic     ST_PresetMaterialType = 2
	ST_PresetMaterialTypeLegacyMetal       ST_PresetMaterialType = 3
	ST_PresetMaterialTypeLegacyWireframe   ST_PresetMaterialType = 4
	ST_PresetMaterialTypeMatte             ST_PresetMaterialType = 5
	ST_PresetMaterialTypePlastic           ST_PresetMaterialType = 6
	ST_PresetMaterialTypeMetal             ST_PresetMaterialType = 7
	ST_PresetMaterialTypeWarmMatte         ST_PresetMaterialType = 8
	ST_PresetMaterialTypeTranslucentPowder ST_PresetMaterialType = 9
	ST_PresetMaterialTypePowder            ST_PresetMaterialType = 10
	ST_PresetMaterialTypeDkEdge            ST_PresetMaterialType = 11
	ST_PresetMaterialTypeSoftEdge          ST_PresetMaterialType = 12
	ST_PresetMaterialTypeClear             ST_PresetMaterialType = 13
	ST_PresetMaterialTypeFlat              ST_PresetMaterialType = 14
	ST_PresetMaterialTypeSoftmetal         ST_PresetMaterialType = 15
)

func (_egfg *CT_TextTabStopList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _egfg.Tab != nil {
		_ageaef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074a\u0062"}}
		for _, _bdagg := range _egfg.Tab {
			e.EncodeElement(_bdagg, _ageaef)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_StretchInfoProperties struct{ FillRect *CT_RelativeRect }

// ValidateWithPath validates the CT_DashStopList and its children, prefixing error messages with path
func (_dcae *CT_DashStopList) ValidateWithPath(path string) error {
	for _gfec, _dbbba := range _dcae.Ds {
		if _dadc := _dbbba.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0044\u0073\u005b\u0025\u0064]", path, _gfec)); _dadc != nil {
			return _dadc
		}
	}
	return nil
}
func (_dcg *CT_AlphaBiLevelEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _agd := range start.Attr {
		if _agd.Name.Local == "\u0074\u0068\u0072\u0065\u0073\u0068" {
			_bgf, _ffe := ParseUnionST_PositiveFixedPercentage(_agd.Value)
			if _ffe != nil {
				return _ffe
			}
			_dcg.ThreshAttr = _bgf
			continue
		}
	}
	for {
		_cbd, _bgc := d.Token()
		if _bgc != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065v\u0065\u006c\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _bgc)
		}
		if _cbb, _cdc := _cbd.(_d.EndElement); _cdc && _cbb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TableProperties and its children
func (_gcbe *CT_TableProperties) Validate() error {
	return _gcbe.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}
func NewCT_Cell3D() *CT_Cell3D { _fdgd := &CT_Cell3D{}; _fdgd.Bevel = NewCT_Bevel(); return _fdgd }
func (_fgccge *ST_AnimationChartBuildType) ValidateWithPath(path string) error {
	_cbgafc := []string{}
	if _fgccge.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		_cbgafc = append(_cbgafc, "S\u0054\u005f\u0041\u006eim\u0061t\u0069\u006f\u006e\u0042\u0075i\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if _fgccge.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		_cbgafc = append(_cbgafc, "\u0053\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0043\u0068\u0061\u0072\u0074\u004fn\u006c\u0079\u0042\u0075\u0069\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if len(_cbgafc) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cbgafc)
	}
	return nil
}

// Validate validates the CT_HslColor and its children
func (_dbfff *CT_HslColor) Validate() error {
	return _dbfff.ValidateWithPath("C\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072")
}

type CT_DefaultShapeDefinition struct {
	SpPr     *CT_ShapeProperties
	BodyPr   *CT_TextBodyProperties
	LstStyle *CT_TextListStyle
	Style    *CT_ShapeStyle
	ExtLst   *CT_OfficeArtExtensionList
}
type ST_SystemColorVal byte
type ST_LineCap byte

func NewCT_TablePartStyle() *CT_TablePartStyle { _bgga := &CT_TablePartStyle{}; return _bgga }
func (_fadge *ST_BlipCompression) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fadge = 0
	case "\u0065\u006d\u0061i\u006c":
		*_fadge = 1
	case "\u0073\u0063\u0072\u0065\u0065\u006e":
		*_fadge = 2
	case "\u0070\u0072\u0069n\u0074":
		*_fadge = 3
	case "\u0068q\u0070\u0072\u0069\u006e\u0074":
		*_fadge = 4
	case "\u006e\u006f\u006e\u0065":
		*_fadge = 5
	}
	return nil
}

type CT_Blip struct {
	CstateAttr ST_BlipCompression
	Choice     []*CT_BlipChoice
	ExtLst     *CT_OfficeArtExtensionList
	EmbedAttr  *string
	LinkAttr   *string
}

// ValidateWithPath validates the CT_FlatText and its children, prefixing error messages with path
func (_cegag *CT_FlatText) ValidateWithPath(path string) error {
	if _cegag.ZAttr != nil {
		if _fcfd := _cegag.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _fcfd != nil {
			return _fcfd
		}
	}
	return nil
}
func NewEG_ThemeableEffectStyle() *EG_ThemeableEffectStyle {
	_dgbacg := &EG_ThemeableEffectStyle{}
	return _dgbacg
}
func NewCT_Backdrop() *CT_Backdrop {
	_cefe := &CT_Backdrop{}
	_cefe.Anchor = NewCT_Point3D()
	_cefe.Norm = NewCT_Vector3D()
	_cefe.Up = NewCT_Vector3D()
	return _cefe
}
func (_bgda *CT_BackgroundFormatting) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eaaa:
	for {
		_abe, _aaf := d.Token()
		if _aaf != nil {
			return _aaf
		}
		switch _cedd := _abe.(type) {
		case _d.StartElement:
			switch _cedd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_bgda.NoFill = NewCT_NoFillProperties()
				if _aec := d.DecodeElement(_bgda.NoFill, &_cedd); _aec != nil {
					return _aec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_bgda.SolidFill = NewCT_SolidColorFillProperties()
				if _gcfbf := d.DecodeElement(_bgda.SolidFill, &_cedd); _gcfbf != nil {
					return _gcfbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_bgda.GradFill = NewCT_GradientFillProperties()
				if _aac := d.DecodeElement(_bgda.GradFill, &_cedd); _aac != nil {
					return _aac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_bgda.BlipFill = NewCT_BlipFillProperties()
				if _gfdg := d.DecodeElement(_bgda.BlipFill, &_cedd); _gfdg != nil {
					return _gfdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_bgda.PattFill = NewCT_PatternFillProperties()
				if _gbd := d.DecodeElement(_bgda.PattFill, &_cedd); _gbd != nil {
					return _gbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_bgda.GrpFill = NewCT_GroupFillProperties()
				if _bbab := d.DecodeElement(_bgda.GrpFill, &_cedd); _bbab != nil {
					return _bbab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_bgda.EffectLst = NewCT_EffectList()
				if _gcca := d.DecodeElement(_bgda.EffectLst, &_cedd); _gcca != nil {
					return _gcca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_bgda.EffectDag = NewCT_EffectContainer()
				if _gcgg := d.DecodeElement(_bgda.EffectDag, &_cedd); _gcgg != nil {
					return _gcgg
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006ed\u0046\u006f\u0072\u006d\u0061\u0074t\u0069\u006e\u0067 \u0025\u0076", _cedd.Name)
				if _fggac := d.Skip(); _fggac != nil {
					return _fggac
				}
			}
		case _d.EndElement:
			break _eaaa
		case _d.CharData:
		}
	}
	return nil
}
func (_aeaeb ST_AnimationChartOnlyBuildType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dgdbe := _d.Attr{}
	_dgdbe.Name = name
	switch _aeaeb {
	case ST_AnimationChartOnlyBuildTypeUnset:
		_dgdbe.Value = ""
	case ST_AnimationChartOnlyBuildTypeSeries:
		_dgdbe.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_AnimationChartOnlyBuildTypeCategory:
		_dgdbe.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_AnimationChartOnlyBuildTypeSeriesEl:
		_dgdbe.Value = "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case ST_AnimationChartOnlyBuildTypeCategoryEl:
		_dgdbe.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return _dgdbe, nil
}
func (_efafba *CT_TableStyleCellStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aagg:
	for {
		_ggedg, _bfgga := d.Token()
		if _bfgga != nil {
			return _bfgga
		}
		switch _gdbcc := _ggedg.(type) {
		case _d.StartElement:
			switch _gdbcc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0042d\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0042d\u0072"}:
				_efafba.TcBdr = NewCT_TableCellBorderStyle()
				if _baddb := d.DecodeElement(_efafba.TcBdr, &_gdbcc); _baddb != nil {
					return _baddb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_efafba.Fill = NewCT_FillProperties()
				if _dbcdb := d.DecodeElement(_efafba.Fill, &_gdbcc); _dbcdb != nil {
					return _dbcdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_efafba.FillRef = NewCT_StyleMatrixReference()
				if _abacfc := d.DecodeElement(_efafba.FillRef, &_gdbcc); _abacfc != nil {
					return _abacfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}:
				_efafba.Cell3D = NewCT_Cell3D()
				if _cafgb := d.DecodeElement(_efafba.Cell3D, &_gdbcc); _cafgb != nil {
					return _cafgb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _gdbcc.Name)
				if _ecefeg := d.Skip(); _ecefeg != nil {
					return _ecefeg
				}
			}
		case _d.EndElement:
			break _aagg
		case _d.CharData:
		}
	}
	return nil
}
func (_fcbd *CT_ColorChangeEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcbd.ClrFrom = NewCT_Color()
	_fcbd.ClrTo = NewCT_Color()
	for _, _aceg := range start.Attr {
		if _aceg.Name.Local == "\u0075\u0073\u0065\u0041" {
			_bbdd, _effc := _c.ParseBool(_aceg.Value)
			if _effc != nil {
				return _effc
			}
			_fcbd.UseAAttr = &_bbdd
			continue
		}
	}
_eggge:
	for {
		_eaad, _gegf := d.Token()
		if _gegf != nil {
			return _gegf
		}
		switch _cabec := _eaad.(type) {
		case _d.StartElement:
			switch _cabec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0046\u0072\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0046\u0072\u006f\u006d"}:
				if _dgfbf := d.DecodeElement(_fcbd.ClrFrom, &_cabec); _dgfbf != nil {
					return _dgfbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072T\u006f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072T\u006f"}:
				if _dgcb := d.DecodeElement(_fcbd.ClrTo, &_cabec); _dgcb != nil {
					return _dgcb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061\u006e\u0067\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _cabec.Name)
				if _fgcc := d.Skip(); _fgcc != nil {
					return _fgcc
				}
			}
		case _d.EndElement:
			break _eggge
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AudioFile and its children, prefixing error messages with path
func (_ecb *CT_AudioFile) ValidateWithPath(path string) error {
	if _ecb.ExtLst != nil {
		if _dbdb := _ecb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbdb != nil {
			return _dbdb
		}
	}
	return nil
}
func NewCT_GvmlTextShapeChoice() *CT_GvmlTextShapeChoice {
	_egaba := &CT_GvmlTextShapeChoice{}
	return _egaba
}
func (_eagfe ST_AnimationBuildType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gfbcebd := _d.Attr{}
	_gfbcebd.Name = name
	switch _eagfe {
	case ST_AnimationBuildTypeUnset:
		_gfbcebd.Value = ""
	case ST_AnimationBuildTypeAllAtOnce:
		_gfbcebd.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return _gfbcebd, nil
}
func (_ddbfe *CT_PositiveFixedPercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _dg.Sprintf("\u0025\u0076", _ddbfe.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_LineEndProperties() *CT_LineEndProperties {
	_bbfae := &CT_LineEndProperties{}
	return _bbfae
}

// ST_Percentage is a union type
type ST_Percentage struct {
	ST_PercentageDecimal *int32
	ST_Percentage        *string
}

func (_fdebd *EG_LineFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fdebd.NoFill != nil {
		_bafcg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdebd.NoFill, _bafcg)
	}
	if _fdebd.SolidFill != nil {
		_gaab := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdebd.SolidFill, _gaab)
	}
	if _fdebd.GradFill != nil {
		_bgecf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdebd.GradFill, _bgecf)
	}
	if _fdebd.PattFill != nil {
		_eebde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fdebd.PattFill, _eebde)
	}
	return nil
}
func (_abade *ThemeManager) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_abade.CT_EmptyElement = *NewCT_EmptyElement()
	for {
		_acbee, _fbecc := d.Token()
		if _fbecc != nil {
			return _dg.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0054\u0068\u0065\u006d\u0065M\u0061\u006e\u0061\u0067\u0065\u0072\u003a\u0020\u0025\u0073", _fbecc)
		}
		if _cgabb, _fdaa := _acbee.(_d.EndElement); _fdaa && _cgabb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_OfficeArtExtension struct {
	UriAttr string
	Any     []_cb.Any
}
type EG_Media struct {
	AudioCd       *CT_AudioCD
	WavAudioFile  *CT_EmbeddedWAVAudioFile
	AudioFile     *CT_AudioFile
	VideoFile     *CT_VideoFile
	QuickTimeFile *CT_QuickTimeFile
}

func (_ecacfc *ST_PathFillMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dceed, _aebfe := d.Token()
	if _aebfe != nil {
		return _aebfe
	}
	if _dcgec, _aecbef := _dceed.(_d.EndElement); _aecbef && _dcgec.Name == start.Name {
		*_ecacfc = 1
		return nil
	}
	if _ceaca, _efgbc := _dceed.(_d.CharData); !_efgbc {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dceed)
	} else {
		switch string(_ceaca) {
		case "":
			*_ecacfc = 0
		case "\u006e\u006f\u006e\u0065":
			*_ecacfc = 1
		case "\u006e\u006f\u0072\u006d":
			*_ecacfc = 2
		case "\u006ci\u0067\u0068\u0074\u0065\u006e":
			*_ecacfc = 3
		case "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073":
			*_ecacfc = 4
		case "\u0064\u0061\u0072\u006b\u0065\u006e":
			*_ecacfc = 5
		case "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073":
			*_ecacfc = 6
		}
	}
	_dceed, _aebfe = d.Token()
	if _aebfe != nil {
		return _aebfe
	}
	if _acdfce, _fcecg := _dceed.(_d.EndElement); _fcecg && _acdfce.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dceed)
}
func (_beff ST_TextShapeType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_eaffa := _d.Attr{}
	_eaffa.Name = name
	switch _beff {
	case ST_TextShapeTypeUnset:
		_eaffa.Value = ""
	case ST_TextShapeTypeTextNoShape:
		_eaffa.Value = "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065"
	case ST_TextShapeTypeTextPlain:
		_eaffa.Value = "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n"
	case ST_TextShapeTypeTextStop:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070"
	case ST_TextShapeTypeTextTriangle:
		_eaffa.Value = "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_TextShapeTypeTextTriangleInverted:
		_eaffa.Value = "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064"
	case ST_TextShapeTypeTextChevron:
		_eaffa.Value = "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e"
	case ST_TextShapeTypeTextChevronInverted:
		_eaffa.Value = "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064"
	case ST_TextShapeTypeTextRingInside:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065"
	case ST_TextShapeTypeTextRingOutside:
		_eaffa.Value = "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065"
	case ST_TextShapeTypeTextArchUp:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070"
	case ST_TextShapeTypeTextArchDown:
		_eaffa.Value = "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCircle:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065"
	case ST_TextShapeTypeTextButton:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e"
	case ST_TextShapeTypeTextArchUpPour:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextArchDownPour:
		_eaffa.Value = "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextCirclePour:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextButtonPour:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextCurveUp:
		_eaffa.Value = "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070"
	case ST_TextShapeTypeTextCurveDown:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCanUp:
		_eaffa.Value = "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p"
	case ST_TextShapeTypeTextCanDown:
		_eaffa.Value = "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextWave1:
		_eaffa.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651"
	case ST_TextShapeTypeTextWave2:
		_eaffa.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652"
	case ST_TextShapeTypeTextDoubleWave1:
		_eaffa.Value = "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031"
	case ST_TextShapeTypeTextWave4:
		_eaffa.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654"
	case ST_TextShapeTypeTextInflate:
		_eaffa.Value = "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextDeflate:
		_eaffa.Value = "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextInflateBottom:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case ST_TextShapeTypeTextDeflateBottom:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case ST_TextShapeTypeTextInflateTop:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case ST_TextShapeTypeTextDeflateTop:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case ST_TextShapeTypeTextDeflateInflate:
		_eaffa.Value = "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextDeflateInflateDeflate:
		_eaffa.Value = "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e"
	case ST_TextShapeTypeTextFadeRight:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_TextShapeTypeTextFadeLeft:
		_eaffa.Value = "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074"
	case ST_TextShapeTypeTextFadeUp:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070"
	case ST_TextShapeTypeTextFadeDown:
		_eaffa.Value = "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextSlantUp:
		_eaffa.Value = "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070"
	case ST_TextShapeTypeTextSlantDown:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCascadeUp:
		_eaffa.Value = "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070"
	case ST_TextShapeTypeTextCascadeDown:
		_eaffa.Value = "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	}
	return _eaffa, nil
}
func (_abdcf *ST_TextVerticalType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_abdcf = 0
	case "\u0068\u006f\u0072\u007a":
		*_abdcf = 1
	case "\u0076\u0065\u0072\u0074":
		*_abdcf = 2
	case "\u0076e\u0072\u0074\u0032\u0037\u0030":
		*_abdcf = 3
	case "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074":
		*_abdcf = 4
	case "\u0065\u0061\u0056\u0065\u0072\u0074":
		*_abdcf = 5
	case "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074":
		*_abdcf = 6
	case "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c":
		*_abdcf = 7
	}
	return nil
}
func NewCT_TextFont() *CT_TextFont { _gadca := &CT_TextFont{}; return _gadca }

const (
	ST_ShapeTypeUnset                      ST_ShapeType = 0
	ST_ShapeTypeLine                       ST_ShapeType = 1
	ST_ShapeTypeLineInv                    ST_ShapeType = 2
	ST_ShapeTypeTriangle                   ST_ShapeType = 3
	ST_ShapeTypeRtTriangle                 ST_ShapeType = 4
	ST_ShapeTypeRect                       ST_ShapeType = 5
	ST_ShapeTypeDiamond                    ST_ShapeType = 6
	ST_ShapeTypeParallelogram              ST_ShapeType = 7
	ST_ShapeTypeTrapezoid                  ST_ShapeType = 8
	ST_ShapeTypeNonIsoscelesTrapezoid      ST_ShapeType = 9
	ST_ShapeTypePentagon                   ST_ShapeType = 10
	ST_ShapeTypeHexagon                    ST_ShapeType = 11
	ST_ShapeTypeHeptagon                   ST_ShapeType = 12
	ST_ShapeTypeOctagon                    ST_ShapeType = 13
	ST_ShapeTypeDecagon                    ST_ShapeType = 14
	ST_ShapeTypeDodecagon                  ST_ShapeType = 15
	ST_ShapeTypeStar4                      ST_ShapeType = 16
	ST_ShapeTypeStar5                      ST_ShapeType = 17
	ST_ShapeTypeStar6                      ST_ShapeType = 18
	ST_ShapeTypeStar7                      ST_ShapeType = 19
	ST_ShapeTypeStar8                      ST_ShapeType = 20
	ST_ShapeTypeStar10                     ST_ShapeType = 21
	ST_ShapeTypeStar12                     ST_ShapeType = 22
	ST_ShapeTypeStar16                     ST_ShapeType = 23
	ST_ShapeTypeStar24                     ST_ShapeType = 24
	ST_ShapeTypeStar32                     ST_ShapeType = 25
	ST_ShapeTypeRoundRect                  ST_ShapeType = 26
	ST_ShapeTypeRound1Rect                 ST_ShapeType = 27
	ST_ShapeTypeRound2SameRect             ST_ShapeType = 28
	ST_ShapeTypeRound2DiagRect             ST_ShapeType = 29
	ST_ShapeTypeSnipRoundRect              ST_ShapeType = 30
	ST_ShapeTypeSnip1Rect                  ST_ShapeType = 31
	ST_ShapeTypeSnip2SameRect              ST_ShapeType = 32
	ST_ShapeTypeSnip2DiagRect              ST_ShapeType = 33
	ST_ShapeTypePlaque                     ST_ShapeType = 34
	ST_ShapeTypeEllipse                    ST_ShapeType = 35
	ST_ShapeTypeTeardrop                   ST_ShapeType = 36
	ST_ShapeTypeHomePlate                  ST_ShapeType = 37
	ST_ShapeTypeChevron                    ST_ShapeType = 38
	ST_ShapeTypePieWedge                   ST_ShapeType = 39
	ST_ShapeTypePie                        ST_ShapeType = 40
	ST_ShapeTypeBlockArc                   ST_ShapeType = 41
	ST_ShapeTypeDonut                      ST_ShapeType = 42
	ST_ShapeTypeNoSmoking                  ST_ShapeType = 43
	ST_ShapeTypeRightArrow                 ST_ShapeType = 44
	ST_ShapeTypeLeftArrow                  ST_ShapeType = 45
	ST_ShapeTypeUpArrow                    ST_ShapeType = 46
	ST_ShapeTypeDownArrow                  ST_ShapeType = 47
	ST_ShapeTypeStripedRightArrow          ST_ShapeType = 48
	ST_ShapeTypeNotchedRightArrow          ST_ShapeType = 49
	ST_ShapeTypeBentUpArrow                ST_ShapeType = 50
	ST_ShapeTypeLeftRightArrow             ST_ShapeType = 51
	ST_ShapeTypeUpDownArrow                ST_ShapeType = 52
	ST_ShapeTypeLeftUpArrow                ST_ShapeType = 53
	ST_ShapeTypeLeftRightUpArrow           ST_ShapeType = 54
	ST_ShapeTypeQuadArrow                  ST_ShapeType = 55
	ST_ShapeTypeLeftArrowCallout           ST_ShapeType = 56
	ST_ShapeTypeRightArrowCallout          ST_ShapeType = 57
	ST_ShapeTypeUpArrowCallout             ST_ShapeType = 58
	ST_ShapeTypeDownArrowCallout           ST_ShapeType = 59
	ST_ShapeTypeLeftRightArrowCallout      ST_ShapeType = 60
	ST_ShapeTypeUpDownArrowCallout         ST_ShapeType = 61
	ST_ShapeTypeQuadArrowCallout           ST_ShapeType = 62
	ST_ShapeTypeBentArrow                  ST_ShapeType = 63
	ST_ShapeTypeUturnArrow                 ST_ShapeType = 64
	ST_ShapeTypeCircularArrow              ST_ShapeType = 65
	ST_ShapeTypeLeftCircularArrow          ST_ShapeType = 66
	ST_ShapeTypeLeftRightCircularArrow     ST_ShapeType = 67
	ST_ShapeTypeCurvedRightArrow           ST_ShapeType = 68
	ST_ShapeTypeCurvedLeftArrow            ST_ShapeType = 69
	ST_ShapeTypeCurvedUpArrow              ST_ShapeType = 70
	ST_ShapeTypeCurvedDownArrow            ST_ShapeType = 71
	ST_ShapeTypeSwooshArrow                ST_ShapeType = 72
	ST_ShapeTypeCube                       ST_ShapeType = 73
	ST_ShapeTypeCan                        ST_ShapeType = 74
	ST_ShapeTypeLightningBolt              ST_ShapeType = 75
	ST_ShapeTypeHeart                      ST_ShapeType = 76
	ST_ShapeTypeSun                        ST_ShapeType = 77
	ST_ShapeTypeMoon                       ST_ShapeType = 78
	ST_ShapeTypeSmileyFace                 ST_ShapeType = 79
	ST_ShapeTypeIrregularSeal1             ST_ShapeType = 80
	ST_ShapeTypeIrregularSeal2             ST_ShapeType = 81
	ST_ShapeTypeFoldedCorner               ST_ShapeType = 82
	ST_ShapeTypeBevel                      ST_ShapeType = 83
	ST_ShapeTypeFrame                      ST_ShapeType = 84
	ST_ShapeTypeHalfFrame                  ST_ShapeType = 85
	ST_ShapeTypeCorner                     ST_ShapeType = 86
	ST_ShapeTypeDiagStripe                 ST_ShapeType = 87
	ST_ShapeTypeChord                      ST_ShapeType = 88
	ST_ShapeTypeArc                        ST_ShapeType = 89
	ST_ShapeTypeLeftBracket                ST_ShapeType = 90
	ST_ShapeTypeRightBracket               ST_ShapeType = 91
	ST_ShapeTypeLeftBrace                  ST_ShapeType = 92
	ST_ShapeTypeRightBrace                 ST_ShapeType = 93
	ST_ShapeTypeBracketPair                ST_ShapeType = 94
	ST_ShapeTypeBracePair                  ST_ShapeType = 95
	ST_ShapeTypeStraightConnector1         ST_ShapeType = 96
	ST_ShapeTypeBentConnector2             ST_ShapeType = 97
	ST_ShapeTypeBentConnector3             ST_ShapeType = 98
	ST_ShapeTypeBentConnector4             ST_ShapeType = 99
	ST_ShapeTypeBentConnector5             ST_ShapeType = 100
	ST_ShapeTypeCurvedConnector2           ST_ShapeType = 101
	ST_ShapeTypeCurvedConnector3           ST_ShapeType = 102
	ST_ShapeTypeCurvedConnector4           ST_ShapeType = 103
	ST_ShapeTypeCurvedConnector5           ST_ShapeType = 104
	ST_ShapeTypeCallout1                   ST_ShapeType = 105
	ST_ShapeTypeCallout2                   ST_ShapeType = 106
	ST_ShapeTypeCallout3                   ST_ShapeType = 107
	ST_ShapeTypeAccentCallout1             ST_ShapeType = 108
	ST_ShapeTypeAccentCallout2             ST_ShapeType = 109
	ST_ShapeTypeAccentCallout3             ST_ShapeType = 110
	ST_ShapeTypeBorderCallout1             ST_ShapeType = 111
	ST_ShapeTypeBorderCallout2             ST_ShapeType = 112
	ST_ShapeTypeBorderCallout3             ST_ShapeType = 113
	ST_ShapeTypeAccentBorderCallout1       ST_ShapeType = 114
	ST_ShapeTypeAccentBorderCallout2       ST_ShapeType = 115
	ST_ShapeTypeAccentBorderCallout3       ST_ShapeType = 116
	ST_ShapeTypeWedgeRectCallout           ST_ShapeType = 117
	ST_ShapeTypeWedgeRoundRectCallout      ST_ShapeType = 118
	ST_ShapeTypeWedgeEllipseCallout        ST_ShapeType = 119
	ST_ShapeTypeCloudCallout               ST_ShapeType = 120
	ST_ShapeTypeCloud                      ST_ShapeType = 121
	ST_ShapeTypeRibbon                     ST_ShapeType = 122
	ST_ShapeTypeRibbon2                    ST_ShapeType = 123
	ST_ShapeTypeEllipseRibbon              ST_ShapeType = 124
	ST_ShapeTypeEllipseRibbon2             ST_ShapeType = 125
	ST_ShapeTypeLeftRightRibbon            ST_ShapeType = 126
	ST_ShapeTypeVerticalScroll             ST_ShapeType = 127
	ST_ShapeTypeHorizontalScroll           ST_ShapeType = 128
	ST_ShapeTypeWave                       ST_ShapeType = 129
	ST_ShapeTypeDoubleWave                 ST_ShapeType = 130
	ST_ShapeTypePlus                       ST_ShapeType = 131
	ST_ShapeTypeFlowChartProcess           ST_ShapeType = 132
	ST_ShapeTypeFlowChartDecision          ST_ShapeType = 133
	ST_ShapeTypeFlowChartInputOutput       ST_ShapeType = 134
	ST_ShapeTypeFlowChartPredefinedProcess ST_ShapeType = 135
	ST_ShapeTypeFlowChartInternalStorage   ST_ShapeType = 136
	ST_ShapeTypeFlowChartDocument          ST_ShapeType = 137
	ST_ShapeTypeFlowChartMultidocument     ST_ShapeType = 138
	ST_ShapeTypeFlowChartTerminator        ST_ShapeType = 139
	ST_ShapeTypeFlowChartPreparation       ST_ShapeType = 140
	ST_ShapeTypeFlowChartManualInput       ST_ShapeType = 141
	ST_ShapeTypeFlowChartManualOperation   ST_ShapeType = 142
	ST_ShapeTypeFlowChartConnector         ST_ShapeType = 143
	ST_ShapeTypeFlowChartPunchedCard       ST_ShapeType = 144
	ST_ShapeTypeFlowChartPunchedTape       ST_ShapeType = 145
	ST_ShapeTypeFlowChartSummingJunction   ST_ShapeType = 146
	ST_ShapeTypeFlowChartOr                ST_ShapeType = 147
	ST_ShapeTypeFlowChartCollate           ST_ShapeType = 148
	ST_ShapeTypeFlowChartSort              ST_ShapeType = 149
	ST_ShapeTypeFlowChartExtract           ST_ShapeType = 150
	ST_ShapeTypeFlowChartMerge             ST_ShapeType = 151
	ST_ShapeTypeFlowChartOfflineStorage    ST_ShapeType = 152
	ST_ShapeTypeFlowChartOnlineStorage     ST_ShapeType = 153
	ST_ShapeTypeFlowChartMagneticTape      ST_ShapeType = 154
	ST_ShapeTypeFlowChartMagneticDisk      ST_ShapeType = 155
	ST_ShapeTypeFlowChartMagneticDrum      ST_ShapeType = 156
	ST_ShapeTypeFlowChartDisplay           ST_ShapeType = 157
	ST_ShapeTypeFlowChartDelay             ST_ShapeType = 158
	ST_ShapeTypeFlowChartAlternateProcess  ST_ShapeType = 159
	ST_ShapeTypeFlowChartOffpageConnector  ST_ShapeType = 160
	ST_ShapeTypeActionButtonBlank          ST_ShapeType = 161
	ST_ShapeTypeActionButtonHome           ST_ShapeType = 162
	ST_ShapeTypeActionButtonHelp           ST_ShapeType = 163
	ST_ShapeTypeActionButtonInformation    ST_ShapeType = 164
	ST_ShapeTypeActionButtonForwardNext    ST_ShapeType = 165
	ST_ShapeTypeActionButtonBackPrevious   ST_ShapeType = 166
	ST_ShapeTypeActionButtonEnd            ST_ShapeType = 167
	ST_ShapeTypeActionButtonBeginning      ST_ShapeType = 168
	ST_ShapeTypeActionButtonReturn         ST_ShapeType = 169
	ST_ShapeTypeActionButtonDocument       ST_ShapeType = 170
	ST_ShapeTypeActionButtonSound          ST_ShapeType = 171
	ST_ShapeTypeActionButtonMovie          ST_ShapeType = 172
	ST_ShapeTypeGear6                      ST_ShapeType = 173
	ST_ShapeTypeGear9                      ST_ShapeType = 174
	ST_ShapeTypeFunnel                     ST_ShapeType = 175
	ST_ShapeTypeMathPlus                   ST_ShapeType = 176
	ST_ShapeTypeMathMinus                  ST_ShapeType = 177
	ST_ShapeTypeMathMultiply               ST_ShapeType = 178
	ST_ShapeTypeMathDivide                 ST_ShapeType = 179
	ST_ShapeTypeMathEqual                  ST_ShapeType = 180
	ST_ShapeTypeMathNotEqual               ST_ShapeType = 181
	ST_ShapeTypeCornerTabs                 ST_ShapeType = 182
	ST_ShapeTypeSquareTabs                 ST_ShapeType = 183
	ST_ShapeTypePlaqueTabs                 ST_ShapeType = 184
	ST_ShapeTypeChartX                     ST_ShapeType = 185
	ST_ShapeTypeChartStar                  ST_ShapeType = 186
	ST_ShapeTypeChartPlus                  ST_ShapeType = 187
)

type CT_ColorSchemeList struct{ ExtraClrScheme []*CT_ColorSchemeAndMapping }

func NewCT_EffectList() *CT_EffectList           { _gbaf := &CT_EffectList{}; return _gbaf }
func NewCT_TableProperties() *CT_TableProperties { _dcdbg := &CT_TableProperties{}; return _dcdbg }

// ValidateWithPath validates the CT_BlipFillProperties and its children, prefixing error messages with path
func (_gafg *CT_BlipFillProperties) ValidateWithPath(path string) error {
	if _gafg.Blip != nil {
		if _cfcde := _gafg.Blip.ValidateWithPath(path + "\u002f\u0042\u006ci\u0070"); _cfcde != nil {
			return _cfcde
		}
	}
	if _gafg.SrcRect != nil {
		if _eged := _gafg.SrcRect.ValidateWithPath(path + "\u002f\u0053\u0072\u0063\u0052\u0065\u0063\u0074"); _eged != nil {
			return _eged
		}
	}
	if _gafg.Tile != nil {
		if _cfdc := _gafg.Tile.ValidateWithPath(path + "\u002f\u0054\u0069l\u0065"); _cfdc != nil {
			return _cfdc
		}
	}
	if _gafg.Stretch != nil {
		if _dcafb := _gafg.Stretch.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0065\u0074\u0063\u0068"); _dcafb != nil {
			return _dcafb
		}
	}
	return nil
}
func (_fgda *CT_EmptyElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cgcdeg ST_AdjCoordinate) String() string {
	if _cgcdeg.ST_Coordinate != nil {
		return _cgcdeg.ST_Coordinate.String()
	}
	if _cgcdeg.ST_GeomGuideName != nil {
		return _dg.Sprintf("\u0025\u0076", *_cgcdeg.ST_GeomGuideName)
	}
	return ""
}
func (_fdfg *CT_EmptyElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_eedc, _afgdb := d.Token()
		if _afgdb != nil {
			return _dg.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079\u0045l\u0065\u006d\u0065n\u0074:\u0020\u0025\u0073", _afgdb)
		}
		if _eead, _ecee := _eedc.(_d.EndElement); _ecee && _eead.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Path2DCubicBezierTo and its children, prefixing error messages with path
func (_gagcg *CT_Path2DCubicBezierTo) ValidateWithPath(path string) error {
	for _bcacbd, _abcbd := range _gagcg.Pt {
		if _feacgg := _abcbd.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0050\u0074\u005b\u0025\u0064]", path, _bcacbd)); _feacgg != nil {
			return _feacgg
		}
	}
	return nil
}

type CT_AnimationChartElement struct {
	SeriesIdxAttr   *int32
	CategoryIdxAttr *int32
	BldStepAttr     ST_ChartBuildStep
}

func (_bdbae *CT_PolarAdjustHandle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bdbae.GdRefRAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0052"}, Value: _dg.Sprintf("\u0025\u0076", *_bdbae.GdRefRAttr)})
	}
	if _bdbae.MinRAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0069\u006e\u0052"}, Value: _dg.Sprintf("\u0025\u0076", *_bdbae.MinRAttr)})
	}
	if _bdbae.MaxRAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0078\u0052"}, Value: _dg.Sprintf("\u0025\u0076", *_bdbae.MaxRAttr)})
	}
	if _bdbae.GdRefAngAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0041\u006e\u0067"}, Value: _dg.Sprintf("\u0025\u0076", *_bdbae.GdRefAngAttr)})
	}
	if _bdbae.MinAngAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0069\u006e\u0041\u006e\u0067"}, Value: _dg.Sprintf("\u0025\u0076", *_bdbae.MinAngAttr)})
	}
	if _bdbae.MaxAngAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0078\u0041\u006e\u0067"}, Value: _dg.Sprintf("\u0025\u0076", *_bdbae.MaxAngAttr)})
	}
	e.EncodeToken(start)
	_bbcef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_bdbae.Pos, _bbcef)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bgbe *CT_BaseStylesOverride) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aea:
	for {
		_caff, _cege := d.Token()
		if _cege != nil {
			return _cege
		}
		switch _ddgc := _caff.(type) {
		case _d.StartElement:
			switch _ddgc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				_bgbe.ClrScheme = NewCT_ColorScheme()
				if _bcbdd := d.DecodeElement(_bgbe.ClrScheme, &_ddgc); _bcbdd != nil {
					return _bcbdd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				_bgbe.FontScheme = NewCT_FontScheme()
				if _dcaf := d.DecodeElement(_bgbe.FontScheme, &_ddgc); _dcaf != nil {
					return _dcaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				_bgbe.FmtScheme = NewCT_StyleMatrix()
				if _fced := d.DecodeElement(_bgbe.FmtScheme, &_ddgc); _fced != nil {
					return _fced
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0020\u0025\u0076", _ddgc.Name)
				if _ffef := d.Skip(); _ffef != nil {
					return _ffef
				}
			}
		case _d.EndElement:
			break _aea
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TextSpacingPoint() *CT_TextSpacingPoint {
	_fagae := &CT_TextSpacingPoint{}
	_fagae.ValAttr = 0
	return _fagae
}

// Validate validates the CT_GvmlPicture and its children
func (_dbac *CT_GvmlPicture) Validate() error {
	return _dbac.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069c\u0074\u0075\u0072\u0065")
}
func (_faeffd ST_LightRigDirection) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_faeffd.String(), start)
}
func (_bafcf ST_BlipCompression) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dcecga := _d.Attr{}
	_dcecga.Name = name
	switch _bafcf {
	case ST_BlipCompressionUnset:
		_dcecga.Value = ""
	case ST_BlipCompressionEmail:
		_dcecga.Value = "\u0065\u006d\u0061i\u006c"
	case ST_BlipCompressionScreen:
		_dcecga.Value = "\u0073\u0063\u0072\u0065\u0065\u006e"
	case ST_BlipCompressionPrint:
		_dcecga.Value = "\u0070\u0072\u0069n\u0074"
	case ST_BlipCompressionHqprint:
		_dcecga.Value = "\u0068q\u0070\u0072\u0069\u006e\u0074"
	case ST_BlipCompressionNone:
		_dcecga.Value = "\u006e\u006f\u006e\u0065"
	}
	return _dcecga, nil
}

type CT_WholeE2oFormatting struct {
	Ln        *CT_LineProperties
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_fccgfg *CT_DuotoneEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eaeg:
	for {
		_cdeg, _dcea := d.Token()
		if _dcea != nil {
			return _dcea
		}
		switch _cafac := _cdeg.(type) {
		case _d.StartElement:
			switch _cafac.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_adgg := NewEG_ColorChoice()
				_adgg.ScrgbClr = NewCT_ScRgbColor()
				if _aaecc := d.DecodeElement(_adgg.ScrgbClr, &_cafac); _aaecc != nil {
					return _aaecc
				}
				_fccgfg.EG_ColorChoice = append(_fccgfg.EG_ColorChoice, _adgg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dbcd := NewEG_ColorChoice()
				_dbcd.SrgbClr = NewCT_SRgbColor()
				if _bfcc := d.DecodeElement(_dbcd.SrgbClr, &_cafac); _bfcc != nil {
					return _bfcc
				}
				_fccgfg.EG_ColorChoice = append(_fccgfg.EG_ColorChoice, _dbcd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_fgagd := NewEG_ColorChoice()
				_fgagd.HslClr = NewCT_HslColor()
				if _cfbc := d.DecodeElement(_fgagd.HslClr, &_cafac); _cfbc != nil {
					return _cfbc
				}
				_fccgfg.EG_ColorChoice = append(_fccgfg.EG_ColorChoice, _fgagd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_cbae := NewEG_ColorChoice()
				_cbae.SysClr = NewCT_SystemColor()
				if _edaga := d.DecodeElement(_cbae.SysClr, &_cafac); _edaga != nil {
					return _edaga
				}
				_fccgfg.EG_ColorChoice = append(_fccgfg.EG_ColorChoice, _cbae)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_ebag := NewEG_ColorChoice()
				_ebag.SchemeClr = NewCT_SchemeColor()
				if _fage := d.DecodeElement(_ebag.SchemeClr, &_cafac); _fage != nil {
					return _fage
				}
				_fccgfg.EG_ColorChoice = append(_fccgfg.EG_ColorChoice, _ebag)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ecec := NewEG_ColorChoice()
				_ecec.PrstClr = NewCT_PresetColor()
				if _bfbe := d.DecodeElement(_ecec.PrstClr, &_cafac); _bfbe != nil {
					return _bfbe
				}
				_fccgfg.EG_ColorChoice = append(_fccgfg.EG_ColorChoice, _ecec)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0075\u006f\u0074\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025v", _cafac.Name)
				if _ggdd := d.Skip(); _ggdd != nil {
					return _ggdd
				}
			}
		case _d.EndElement:
			break _eaeg
		case _d.CharData:
		}
	}
	return nil
}
func (_ggfdc *ST_SchemeColorVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_baebb, _fegfeb := d.Token()
	if _fegfeb != nil {
		return _fegfeb
	}
	if _ceefga, _cgaed := _baebb.(_d.EndElement); _cgaed && _ceefga.Name == start.Name {
		*_ggfdc = 1
		return nil
	}
	if _eafdeb, _bdbcg := _baebb.(_d.CharData); !_bdbcg {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _baebb)
	} else {
		switch string(_eafdeb) {
		case "":
			*_ggfdc = 0
		case "\u0062\u0067\u0031":
			*_ggfdc = 1
		case "\u0074\u0078\u0031":
			*_ggfdc = 2
		case "\u0062\u0067\u0032":
			*_ggfdc = 3
		case "\u0074\u0078\u0032":
			*_ggfdc = 4
		case "\u0061c\u0063\u0065\u006e\u0074\u0031":
			*_ggfdc = 5
		case "\u0061c\u0063\u0065\u006e\u0074\u0032":
			*_ggfdc = 6
		case "\u0061c\u0063\u0065\u006e\u0074\u0033":
			*_ggfdc = 7
		case "\u0061c\u0063\u0065\u006e\u0074\u0034":
			*_ggfdc = 8
		case "\u0061c\u0063\u0065\u006e\u0074\u0035":
			*_ggfdc = 9
		case "\u0061c\u0063\u0065\u006e\u0074\u0036":
			*_ggfdc = 10
		case "\u0068\u006c\u0069n\u006b":
			*_ggfdc = 11
		case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
			*_ggfdc = 12
		case "\u0070\u0068\u0043l\u0072":
			*_ggfdc = 13
		case "\u0064\u006b\u0031":
			*_ggfdc = 14
		case "\u006c\u0074\u0031":
			*_ggfdc = 15
		case "\u0064\u006b\u0032":
			*_ggfdc = 16
		case "\u006c\u0074\u0032":
			*_ggfdc = 17
		}
	}
	_baebb, _fegfeb = d.Token()
	if _fegfeb != nil {
		return _fegfeb
	}
	if _cbeaac, _dgcfa := _baebb.(_d.EndElement); _dgcfa && _cbeaac.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _baebb)
}
func (_ebedc ST_PresetMaterialType) Validate() error { return _ebedc.ValidateWithPath("") }

type CT_TableBackgroundStyle struct {
	Fill      *CT_FillProperties
	FillRef   *CT_StyleMatrixReference
	Effect    *CT_EffectProperties
	EffectRef *CT_StyleMatrixReference
}

func NewCT_PolarAdjustHandle() *CT_PolarAdjustHandle {
	_ebef := &CT_PolarAdjustHandle{}
	_ebef.Pos = NewCT_AdjPoint2D()
	return _ebef
}

// Validate validates the CT_GeomGuideList and its children
func (_affee *CT_GeomGuideList) Validate() error {
	return _affee.ValidateWithPath("\u0043\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}
func (_adcd *CT_ObjectStyleDefaults) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _adcd.SpDef != nil {
		_cgegf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0070\u0044\u0065\u0066"}}
		e.EncodeElement(_adcd.SpDef, _cgegf)
	}
	if _adcd.LnDef != nil {
		_bgbfcg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u006e\u0044\u0065\u0066"}}
		e.EncodeElement(_adcd.LnDef, _bgbfcg)
	}
	if _adcd.TxDef != nil {
		_acee := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0078\u0044\u0065\u0066"}}
		e.EncodeElement(_adcd.TxDef, _acee)
	}
	if _adcd.ExtLst != nil {
		_fggfd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_adcd.ExtLst, _fggfd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_LineJoinProperties struct {
	Round *CT_LineJoinRound
	Bevel *CT_LineJoinBevel
	Miter *CT_LineJoinMiterProperties
}

func NewCT_ConnectorLocking() *CT_ConnectorLocking { _beaa := &CT_ConnectorLocking{}; return _beaa }
func NewCT_Hyperlink() *CT_Hyperlink               { _fcgbe := &CT_Hyperlink{}; return _fcgbe }

type ST_LineEndType byte

func (_fegfb *ST_PresetShadowVal) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fegfb = 0
	case "\u0073\u0068\u0064w\u0031":
		*_fegfb = 1
	case "\u0073\u0068\u0064w\u0032":
		*_fegfb = 2
	case "\u0073\u0068\u0064w\u0033":
		*_fegfb = 3
	case "\u0073\u0068\u0064w\u0034":
		*_fegfb = 4
	case "\u0073\u0068\u0064w\u0035":
		*_fegfb = 5
	case "\u0073\u0068\u0064w\u0036":
		*_fegfb = 6
	case "\u0073\u0068\u0064w\u0037":
		*_fegfb = 7
	case "\u0073\u0068\u0064w\u0038":
		*_fegfb = 8
	case "\u0073\u0068\u0064w\u0039":
		*_fegfb = 9
	case "\u0073\u0068\u0064\u0077\u0031\u0030":
		*_fegfb = 10
	case "\u0073\u0068\u0064\u0077\u0031\u0031":
		*_fegfb = 11
	case "\u0073\u0068\u0064\u0077\u0031\u0032":
		*_fegfb = 12
	case "\u0073\u0068\u0064\u0077\u0031\u0033":
		*_fegfb = 13
	case "\u0073\u0068\u0064\u0077\u0031\u0034":
		*_fegfb = 14
	case "\u0073\u0068\u0064\u0077\u0031\u0035":
		*_fegfb = 15
	case "\u0073\u0068\u0064\u0077\u0031\u0036":
		*_fegfb = 16
	case "\u0073\u0068\u0064\u0077\u0031\u0037":
		*_fegfb = 17
	case "\u0073\u0068\u0064\u0077\u0031\u0038":
		*_fegfb = 18
	case "\u0073\u0068\u0064\u0077\u0031\u0039":
		*_fegfb = 19
	case "\u0073\u0068\u0064\u0077\u0032\u0030":
		*_fegfb = 20
	}
	return nil
}

// Validate validates the CT_PositiveSize2D and its children
func (_fgegb *CT_PositiveSize2D) Validate() error {
	return _fgegb.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053i\u007a\u0065\u0032\u0044")
}
func (_bddgf *CT_LineEndProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bddgf.TypeAttr != ST_LineEndTypeUnset {
		_fgdf, _fcbbee := _bddgf.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _fcbbee != nil {
			return _fcbbee
		}
		start.Attr = append(start.Attr, _fgdf)
	}
	if _bddgf.WAttr != ST_LineEndWidthUnset {
		_efbeg, _gccee := _bddgf.WAttr.MarshalXMLAttr(_d.Name{Local: "\u0077"})
		if _gccee != nil {
			return _gccee
		}
		start.Attr = append(start.Attr, _efbeg)
	}
	if _bddgf.LenAttr != ST_LineEndLengthUnset {
		_dded, _gdgde := _bddgf.LenAttr.MarshalXMLAttr(_d.Name{Local: "\u006c\u0065\u006e"})
		if _gdgde != nil {
			return _gdgde
		}
		start.Attr = append(start.Attr, _dded)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ThemeOverride struct{ CT_BaseStylesOverride }

// ValidateWithPath validates the CT_TablePartStyle and its children, prefixing error messages with path
func (_ccfab *CT_TablePartStyle) ValidateWithPath(path string) error {
	if _ccfab.TcTxStyle != nil {
		if _babbf := _ccfab.TcTxStyle.ValidateWithPath(path + "\u002f\u0054\u0063\u0054\u0078\u0053\u0074\u0079\u006c\u0065"); _babbf != nil {
			return _babbf
		}
	}
	if _ccfab.TcStyle != nil {
		if _cdbgf := _ccfab.TcStyle.ValidateWithPath(path + "\u002f\u0054\u0063\u0053\u0074\u0079\u006c\u0065"); _cdbgf != nil {
			return _cdbgf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_QuickTimeFile and its children, prefixing error messages with path
func (_fbgf *CT_QuickTimeFile) ValidateWithPath(path string) error {
	if _fbgf.ExtLst != nil {
		if _ffcgc := _fbgf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffcgc != nil {
			return _ffcgc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextParagraphProperties and its children, prefixing error messages with path
func (_fefgb *CT_TextParagraphProperties) ValidateWithPath(path string) error {
	if _fefgb.MarLAttr != nil {
		if *_fefgb.MarLAttr < 0 {
			return _dg.Errorf("\u0025\u0073/m\u002e\u004d\u0061r\u004c\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fefgb.MarLAttr)
		}
		if *_fefgb.MarLAttr > 51206400 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u004d\u0061r\u004c\u0041\u0074t\u0072\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fefgb.MarLAttr)
		}
	}
	if _fefgb.MarRAttr != nil {
		if *_fefgb.MarRAttr < 0 {
			return _dg.Errorf("\u0025\u0073/m\u002e\u004d\u0061r\u0052\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fefgb.MarRAttr)
		}
		if *_fefgb.MarRAttr > 51206400 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u004d\u0061r\u0052\u0041\u0074t\u0072\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fefgb.MarRAttr)
		}
	}
	if _fefgb.LvlAttr != nil {
		if *_fefgb.LvlAttr < 0 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0076l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fefgb.LvlAttr)
		}
		if *_fefgb.LvlAttr > 8 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0076l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fefgb.LvlAttr)
		}
	}
	if _fefgb.IndentAttr != nil {
		if *_fefgb.IndentAttr < -51206400 {
			return _dg.Errorf("\u0025\u0073/\u006d\u002e\u0049\u006e\u0064\u0065\u006e\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u002d\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fefgb.IndentAttr)
		}
		if *_fefgb.IndentAttr > 51206400 {
			return _dg.Errorf("\u0025s\u002f\u006d.\u0049\u006e\u0064e\u006e\u0074\u0041\u0074\u0074\u0072\u0020m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fefgb.IndentAttr)
		}
	}
	if _agge := _fefgb.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _agge != nil {
		return _agge
	}
	if _fefgb.DefTabSzAttr != nil {
		if _addbee := _fefgb.DefTabSzAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0054\u0061\u0062\u0053\u007a\u0041\u0074\u0074\u0072"); _addbee != nil {
			return _addbee
		}
	}
	if _cbgbb := _fefgb.FontAlgnAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0041\u006c\u0067\u006e\u0041\u0074\u0074\u0072"); _cbgbb != nil {
		return _cbgbb
	}
	if _fefgb.LnSpc != nil {
		if _fbffc := _fefgb.LnSpc.ValidateWithPath(path + "\u002f\u004c\u006e\u0053\u0070\u0063"); _fbffc != nil {
			return _fbffc
		}
	}
	if _fefgb.SpcBef != nil {
		if _ddgcg := _fefgb.SpcBef.ValidateWithPath(path + "\u002fS\u0070\u0063\u0042\u0065\u0066"); _ddgcg != nil {
			return _ddgcg
		}
	}
	if _fefgb.SpcAft != nil {
		if _dbaba := _fefgb.SpcAft.ValidateWithPath(path + "\u002fS\u0070\u0063\u0041\u0066\u0074"); _dbaba != nil {
			return _dbaba
		}
	}
	if _fefgb.BuClrTx != nil {
		if _debb := _fefgb.BuClrTx.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072\u0054\u0078"); _debb != nil {
			return _debb
		}
	}
	if _fefgb.BuClr != nil {
		if _bgbcf := _fefgb.BuClr.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072"); _bgbcf != nil {
			return _bgbcf
		}
	}
	if _fefgb.BuSzTx != nil {
		if _aegfb := _fefgb.BuSzTx.ValidateWithPath(path + "\u002fB\u0075\u0053\u007a\u0054\u0078"); _aegfb != nil {
			return _aegfb
		}
	}
	if _fefgb.BuSzPct != nil {
		if _cadbba := _fefgb.BuSzPct.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0063\u0074"); _cadbba != nil {
			return _cadbba
		}
	}
	if _fefgb.BuSzPts != nil {
		if _gbgcc := _fefgb.BuSzPts.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0074\u0073"); _gbgcc != nil {
			return _gbgcc
		}
	}
	if _fefgb.BuFontTx != nil {
		if _facg := _fefgb.BuFontTx.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074\u0054x"); _facg != nil {
			return _facg
		}
	}
	if _fefgb.BuFont != nil {
		if _bgdce := _fefgb.BuFont.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074"); _bgdce != nil {
			return _bgdce
		}
	}
	if _fefgb.BuNone != nil {
		if _ebaad := _fefgb.BuNone.ValidateWithPath(path + "\u002fB\u0075\u004e\u006f\u006e\u0065"); _ebaad != nil {
			return _ebaad
		}
	}
	if _fefgb.BuAutoNum != nil {
		if _gcfeff := _fefgb.BuAutoNum.ValidateWithPath(path + "\u002f\u0042\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"); _gcfeff != nil {
			return _gcfeff
		}
	}
	if _fefgb.BuChar != nil {
		if _eabeg := _fefgb.BuChar.ValidateWithPath(path + "\u002fB\u0075\u0043\u0068\u0061\u0072"); _eabeg != nil {
			return _eabeg
		}
	}
	if _fefgb.BuBlip != nil {
		if _bgcge := _fefgb.BuBlip.ValidateWithPath(path + "\u002fB\u0075\u0042\u006c\u0069\u0070"); _bgcge != nil {
			return _bgcge
		}
	}
	if _fefgb.TabLst != nil {
		if _fdggb := _fefgb.TabLst.ValidateWithPath(path + "\u002fT\u0061\u0062\u004c\u0073\u0074"); _fdggb != nil {
			return _fdggb
		}
	}
	if _fefgb.DefRPr != nil {
		if _aagea := _fefgb.DefRPr.ValidateWithPath(path + "\u002fD\u0065\u0066\u0052\u0050\u0072"); _aagea != nil {
			return _aagea
		}
	}
	if _fefgb.ExtLst != nil {
		if _bffefa := _fefgb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bffefa != nil {
			return _bffefa
		}
	}
	return nil
}

type CT_FixedPercentage struct{ ValAttr ST_FixedPercentage }

func (_egdec *CT_StyleMatrixReference) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064\u0078"}, Value: _dg.Sprintf("\u0025\u0076", _egdec.IdxAttr)})
	e.EncodeToken(start)
	if _egdec.ScrgbClr != nil {
		_aefdb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_egdec.ScrgbClr, _aefdb)
	}
	if _egdec.SrgbClr != nil {
		_ceaec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_egdec.SrgbClr, _ceaec)
	}
	if _egdec.HslClr != nil {
		_dbae := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_egdec.HslClr, _dbae)
	}
	if _egdec.SysClr != nil {
		_gacdeb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_egdec.SysClr, _gacdeb)
	}
	if _egdec.SchemeClr != nil {
		_ebfge := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_egdec.SchemeClr, _ebfge)
	}
	if _egdec.PrstClr != nil {
		_beacb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_egdec.PrstClr, _beacb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gbbbfd *CT_TextParagraphProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gbbbfd.MarLAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0072\u004c"}, Value: _dg.Sprintf("\u0025\u0076", *_gbbbfd.MarLAttr)})
	}
	if _gbbbfd.MarRAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0072\u0052"}, Value: _dg.Sprintf("\u0025\u0076", *_gbbbfd.MarRAttr)})
	}
	if _gbbbfd.LvlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0076\u006c"}, Value: _dg.Sprintf("\u0025\u0076", *_gbbbfd.LvlAttr)})
	}
	if _gbbbfd.IndentAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_gbbbfd.IndentAttr)})
	}
	if _gbbbfd.AlgnAttr != ST_TextAlignTypeUnset {
		_bccga, _ggdbc := _gbbbfd.AlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _ggdbc != nil {
			return _ggdbc
		}
		start.Attr = append(start.Attr, _bccga)
	}
	if _gbbbfd.DefTabSzAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0065\u0066\u0054\u0061\u0062\u0053\u007a"}, Value: _dg.Sprintf("\u0025\u0076", *_gbbbfd.DefTabSzAttr)})
	}
	if _gbbbfd.RtlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0074\u006c"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_gbbbfd.RtlAttr))})
	}
	if _gbbbfd.EaLnBrkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065a\u004c\u006e\u0042\u0072\u006b"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_gbbbfd.EaLnBrkAttr))})
	}
	if _gbbbfd.FontAlgnAttr != ST_TextFontAlignTypeUnset {
		_fdabd, _ecdaa := _gbbbfd.FontAlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u006f\u006e\u0074\u0041\u006c\u0067\u006e"})
		if _ecdaa != nil {
			return _ecdaa
		}
		start.Attr = append(start.Attr, _fdabd)
	}
	if _gbbbfd.LatinLnBrkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0061\u0074\u0069\u006e\u004c\u006e\u0042\u0072\u006b"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_gbbbfd.LatinLnBrkAttr))})
	}
	if _gbbbfd.HangingPunctAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0061\u006eg\u0069\u006e\u0067\u0050\u0075\u006e\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_gbbbfd.HangingPunctAttr))})
	}
	e.EncodeToken(start)
	if _gbbbfd.LnSpc != nil {
		_dffcg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u006e\u0053\u0070\u0063"}}
		e.EncodeElement(_gbbbfd.LnSpc, _dffcg)
	}
	if _gbbbfd.SpcBef != nil {
		_fgfdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0042\u0065\u0066"}}
		e.EncodeElement(_gbbbfd.SpcBef, _fgfdc)
	}
	if _gbbbfd.SpcAft != nil {
		_deaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0041\u0066\u0074"}}
		e.EncodeElement(_gbbbfd.SpcAft, _deaf)
	}
	if _gbbbfd.BuClrTx != nil {
		_dceef := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072\u0054x"}}
		e.EncodeElement(_gbbbfd.BuClrTx, _dceef)
	}
	if _gbbbfd.BuClr != nil {
		_fcdbg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072"}}
		e.EncodeElement(_gbbbfd.BuClr, _fcdbg)
	}
	if _gbbbfd.BuSzTx != nil {
		_fgbdb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0053\u007a\u0054\u0078"}}
		e.EncodeElement(_gbbbfd.BuSzTx, _fgbdb)
	}
	if _gbbbfd.BuSzPct != nil {
		_bceag := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0063t"}}
		e.EncodeElement(_gbbbfd.BuSzPct, _bceag)
	}
	if _gbbbfd.BuSzPts != nil {
		_aagcfe := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0074s"}}
		e.EncodeElement(_gbbbfd.BuSzPts, _aagcfe)
	}
	if _gbbbfd.BuFontTx != nil {
		_dfgeb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}}
		e.EncodeElement(_gbbbfd.BuFontTx, _dfgeb)
	}
	if _gbbbfd.BuFont != nil {
		_ccgfa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_gbbbfd.BuFont, _ccgfa)
	}
	if _gbbbfd.BuNone != nil {
		_gedgc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u004e\u006f\u006e\u0065"}}
		e.EncodeElement(_gbbbfd.BuNone, _gedgc)
	}
	if _gbbbfd.BuAutoNum != nil {
		_gfgfge := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0062\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"}}
		e.EncodeElement(_gbbbfd.BuAutoNum, _gfgfge)
	}
	if _gbbbfd.BuChar != nil {
		_gdcbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0043\u0068\u0061\u0072"}}
		e.EncodeElement(_gbbbfd.BuChar, _gdcbc)
	}
	if _gbbbfd.BuBlip != nil {
		_gegge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0042\u006c\u0069\u0070"}}
		e.EncodeElement(_gbbbfd.BuBlip, _gegge)
	}
	if _gbbbfd.TabLst != nil {
		_caagcf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0061\u0062\u004c\u0073\u0074"}}
		e.EncodeElement(_gbbbfd.TabLst, _caagcf)
	}
	if _gbbbfd.DefRPr != nil {
		_gcaad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0064\u0065\u0066\u0052\u0050\u0072"}}
		e.EncodeElement(_gbbbfd.DefRPr, _gcaad)
	}
	if _gbbbfd.ExtLst != nil {
		_addab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gbbbfd.ExtLst, _addab)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cdbbd ST_CompoundLine) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cdbbd.String(), start)
}
func (_agab *CT_AlphaModulateFixedEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eec := range start.Attr {
		if _eec.Name.Local == "\u0061\u006d\u0074" {
			_gffbc, _gea := ParseUnionST_PositivePercentage(_eec.Value)
			if _gea != nil {
				return _gea
			}
			_agab.AmtAttr = &_gffbc
			continue
		}
	}
	for {
		_bga, _ada := d.Token()
		if _ada != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0075l\u0061\u0074\u0065\u0046\u0069\u0078\u0065\u0064\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _ada)
		}
		if _gfda, _ded := _bga.(_d.EndElement); _ded && _gfda.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_GvmlGroupShapeNonVisual struct {
	CNvPr      *CT_NonVisualDrawingProps
	CNvGrpSpPr *CT_NonVisualGroupDrawingShapeProps
}
type CT_Path2DClose struct{}

// Validate validates the CT_RegularTextRun and its children
func (_daegbf *CT_RegularTextRun) Validate() error {
	return _daegbf.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065x\u0074\u0052\u0075\u006e")
}

// Validate validates the CT_ColorMRU and its children
func (_agfee *CT_ColorMRU) Validate() error {
	return _agfee.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055")
}

// Validate validates the EG_TextGeometry and its children
func (_ebdcf *EG_TextGeometry) Validate() error {
	return _ebdcf.ValidateWithPath("\u0045G\u005fT\u0065\u0078\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079")
}

const (
	ST_PresetLineDashValUnset         ST_PresetLineDashVal = 0
	ST_PresetLineDashValSolid         ST_PresetLineDashVal = 1
	ST_PresetLineDashValDot           ST_PresetLineDashVal = 2
	ST_PresetLineDashValDash          ST_PresetLineDashVal = 3
	ST_PresetLineDashValLgDash        ST_PresetLineDashVal = 4
	ST_PresetLineDashValDashDot       ST_PresetLineDashVal = 5
	ST_PresetLineDashValLgDashDot     ST_PresetLineDashVal = 6
	ST_PresetLineDashValLgDashDotDot  ST_PresetLineDashVal = 7
	ST_PresetLineDashValSysDash       ST_PresetLineDashVal = 8
	ST_PresetLineDashValSysDot        ST_PresetLineDashVal = 9
	ST_PresetLineDashValSysDashDot    ST_PresetLineDashVal = 10
	ST_PresetLineDashValSysDashDotDot ST_PresetLineDashVal = 11
)

func (_faga *CT_NonVisualContentPartProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _caccc := range start.Attr {
		if _caccc.Name.Local == "\u0069s\u0043\u006f\u006d\u006d\u0065\u006et" {
			_efbc, _gfecaa := _c.ParseBool(_caccc.Value)
			if _gfecaa != nil {
				return _gfecaa
			}
			_faga.IsCommentAttr = &_efbc
			continue
		}
	}
_fcfbg:
	for {
		_afadg, _dccbb := d.Token()
		if _dccbb != nil {
			return _dccbb
		}
		switch _afee := _afadg.(type) {
		case _d.StartElement:
			switch _afee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063p\u004c\u006f\u0063\u006b\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063p\u004c\u006f\u0063\u006b\u0073"}:
				_faga.CpLocks = NewCT_ContentPartLocking()
				if _fdag := d.DecodeElement(_faga.CpLocks, &_afee); _fdag != nil {
					return _fdag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_faga.ExtLst = NewCT_OfficeArtExtensionList()
				if _cecfg := d.DecodeElement(_faga.ExtLst, &_afee); _cecfg != nil {
					return _cecfg
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074\u0050\u0072o\u0070\u0065\u0072t\u0069\u0065\u0073\u0020\u0025\u0076", _afee.Name)
				if _cggd := d.Skip(); _cggd != nil {
					return _cggd
				}
			}
		case _d.EndElement:
			break _fcfbg
		case _d.CharData:
		}
	}
	return nil
}
func (_afcfg *ST_BevelPresetType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fedege, _bcaeb := d.Token()
	if _bcaeb != nil {
		return _bcaeb
	}
	if _dbfbc, _febgg := _fedege.(_d.EndElement); _febgg && _dbfbc.Name == start.Name {
		*_afcfg = 1
		return nil
	}
	if _ggbcg, _eebdd := _fedege.(_d.CharData); !_eebdd {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fedege)
	} else {
		switch string(_ggbcg) {
		case "":
			*_afcfg = 0
		case "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074":
			*_afcfg = 1
		case "\u0063\u0069\u0072\u0063\u006c\u0065":
			*_afcfg = 2
		case "\u0073\u006c\u006fp\u0065":
			*_afcfg = 3
		case "\u0063\u0072\u006fs\u0073":
			*_afcfg = 4
		case "\u0061\u006e\u0067l\u0065":
			*_afcfg = 5
		case "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed":
			*_afcfg = 6
		case "\u0063\u006f\u006e\u0076\u0065\u0078":
			*_afcfg = 7
		case "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et":
			*_afcfg = 8
		case "\u0064\u0069\u0076o\u0074":
			*_afcfg = 9
		case "\u0072\u0069\u0062\u006c\u0065\u0074":
			*_afcfg = 10
		case "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065":
			*_afcfg = 11
		case "\u0061r\u0074\u0044\u0065\u0063\u006f":
			*_afcfg = 12
		}
	}
	_fedege, _bcaeb = d.Token()
	if _bcaeb != nil {
		return _bcaeb
	}
	if _eeaddgb, _ebeea := _fedege.(_d.EndElement); _ebeea && _eeaddgb.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fedege)
}
func (_gfceed *CT_TextField) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _dg.Sprintf("\u0025\u0076", _gfceed.IdAttr)})
	if _gfceed.TypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_gfceed.TypeAttr)})
	}
	e.EncodeToken(start)
	if _gfceed.RPr != nil {
		_cedac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_gfceed.RPr, _cedac)
	}
	if _gfceed.PPr != nil {
		_abeea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070P\u0072"}}
		e.EncodeElement(_gfceed.PPr, _abeea)
	}
	if _gfceed.T != nil {
		_aecbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074"}}
		_cb.AddPreserveSpaceAttr(&_aecbe, *_gfceed.T)
		e.EncodeElement(_gfceed.T, _aecbe)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bcbgcc *CT_TransformEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bcbgcc.SxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0078"}, Value: _dg.Sprintf("\u0025\u0076", *_bcbgcc.SxAttr)})
	}
	if _bcbgcc.SyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0079"}, Value: _dg.Sprintf("\u0025\u0076", *_bcbgcc.SyAttr)})
	}
	if _bcbgcc.KxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0078"}, Value: _dg.Sprintf("\u0025\u0076", *_bcbgcc.KxAttr)})
	}
	if _bcbgcc.KyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0079"}, Value: _dg.Sprintf("\u0025\u0076", *_bcbgcc.KyAttr)})
	}
	if _bcbgcc.TxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0078"}, Value: _dg.Sprintf("\u0025\u0076", *_bcbgcc.TxAttr)})
	}
	if _bcbgcc.TyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0079"}, Value: _dg.Sprintf("\u0025\u0076", *_bcbgcc.TyAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aae *CT_ColorMRU) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dgad:
	for {
		_gdfg, _cbbgd := d.Token()
		if _cbbgd != nil {
			return _cbbgd
		}
		switch _bfbg := _gdfg.(type) {
		case _d.StartElement:
			switch _bfbg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_gbdf := NewEG_ColorChoice()
				_gbdf.ScrgbClr = NewCT_ScRgbColor()
				if _dbfd := d.DecodeElement(_gbdf.ScrgbClr, &_bfbg); _dbfd != nil {
					return _dbfd
				}
				_aae.EG_ColorChoice = append(_aae.EG_ColorChoice, _gbdf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_gbaa := NewEG_ColorChoice()
				_gbaa.SrgbClr = NewCT_SRgbColor()
				if _aegfa := d.DecodeElement(_gbaa.SrgbClr, &_bfbg); _aegfa != nil {
					return _aegfa
				}
				_aae.EG_ColorChoice = append(_aae.EG_ColorChoice, _gbaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_ebcb := NewEG_ColorChoice()
				_ebcb.HslClr = NewCT_HslColor()
				if _baad := d.DecodeElement(_ebcb.HslClr, &_bfbg); _baad != nil {
					return _baad
				}
				_aae.EG_ColorChoice = append(_aae.EG_ColorChoice, _ebcb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_gdcb := NewEG_ColorChoice()
				_gdcb.SysClr = NewCT_SystemColor()
				if _gffeb := d.DecodeElement(_gdcb.SysClr, &_bfbg); _gffeb != nil {
					return _gffeb
				}
				_aae.EG_ColorChoice = append(_aae.EG_ColorChoice, _gdcb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cbcbb := NewEG_ColorChoice()
				_cbcbb.SchemeClr = NewCT_SchemeColor()
				if _fdgb := d.DecodeElement(_cbcbb.SchemeClr, &_bfbg); _fdgb != nil {
					return _fdgb
				}
				_aae.EG_ColorChoice = append(_aae.EG_ColorChoice, _cbcbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_bbbb := NewEG_ColorChoice()
				_bbbb.PrstClr = NewCT_PresetColor()
				if _ggcb := d.DecodeElement(_bbbb.PrstClr, &_bfbg); _ggcb != nil {
					return _ggcb
				}
				_aae.EG_ColorChoice = append(_aae.EG_ColorChoice, _bbbb)
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055\u0020\u0025\u0076", _bfbg.Name)
				if _ggca := d.Skip(); _ggca != nil {
					return _ggca
				}
			}
		case _d.EndElement:
			break _dgad
		case _d.CharData:
		}
	}
	return nil
}
func (_gfgc *CT_TextCharBullet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fcgf := range start.Attr {
		if _fcgf.Name.Local == "\u0063\u0068\u0061\u0072" {
			_gdeea, _cbeaa := _fcgf.Value, error(nil)
			if _cbeaa != nil {
				return _cbeaa
			}
			_gfgc.CharAttr = _gdeea
			continue
		}
	}
	for {
		_ffedc, _badf := d.Token()
		if _badf != nil {
			return _dg.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042\u0075\u006c\u006c\u0065\u0074: \u0025\u0073", _badf)
		}
		if _gfadd, _eafad := _ffedc.(_d.EndElement); _eafad && _gfadd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gcfff ST_PresetColorVal) ValidateWithPath(path string) error {
	switch _gcfff {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcfff))
	}
	return nil
}
func NewCT_AnimationDgmElement() *CT_AnimationDgmElement {
	_edfe := &CT_AnimationDgmElement{}
	return _edfe
}
func ParseUnionST_Coordinate32(s string) (ST_Coordinate32, error) {
	_fddfd := ST_Coordinate32{}
	if _fe.ST_UniversalMeasurePatternRe.MatchString(s) {
		_fddfd.ST_UniversalMeasure = &s
	} else {
		_dgfcf, _dggde := _c.ParseInt(s, 10, 32)
		if _dggde != nil {
			return _fddfd, _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _dggde)
		}
		_edccf := int32(_dgfcf)
		_fddfd.ST_Coordinate32Unqualified = &_edccf
	}
	return _fddfd, nil
}
func (_cdbd *CT_FillEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cdegc:
	for {
		_ggebc, _caffa := d.Token()
		if _caffa != nil {
			return _caffa
		}
		switch _bcca := _ggebc.(type) {
		case _d.StartElement:
			switch _bcca.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_cdbd.NoFill = NewCT_NoFillProperties()
				if _bdae := d.DecodeElement(_cdbd.NoFill, &_bcca); _bdae != nil {
					return _bdae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_cdbd.SolidFill = NewCT_SolidColorFillProperties()
				if _dbec := d.DecodeElement(_cdbd.SolidFill, &_bcca); _dbec != nil {
					return _dbec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_cdbd.GradFill = NewCT_GradientFillProperties()
				if _ebaa := d.DecodeElement(_cdbd.GradFill, &_bcca); _ebaa != nil {
					return _ebaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_cdbd.BlipFill = NewCT_BlipFillProperties()
				if _fafdf := d.DecodeElement(_cdbd.BlipFill, &_bcca); _fafdf != nil {
					return _fafdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_cdbd.PattFill = NewCT_PatternFillProperties()
				if _dcga := d.DecodeElement(_cdbd.PattFill, &_bcca); _dcga != nil {
					return _dcga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_cdbd.GrpFill = NewCT_GroupFillProperties()
				if _eeae := d.DecodeElement(_cdbd.GrpFill, &_bcca); _eeae != nil {
					return _eeae
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046i\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074 \u0025\u0076", _bcca.Name)
				if _ggdg := d.Skip(); _ggdg != nil {
					return _ggdg
				}
			}
		case _d.EndElement:
			break _cdegc
		case _d.CharData:
		}
	}
	return nil
}

type CT_AnimationDgmElement struct {
	IdAttr      *string
	BldStepAttr ST_DgmBuildStep
}

func (_ebggg *CT_PictureLocking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dcggd := range start.Attr {
		if _dcggd.Name.Local == "\u006e\u006f\u0043\u0072\u006f\u0070" {
			_gdgg, _gbecf := _c.ParseBool(_dcggd.Value)
			if _gbecf != nil {
				return _gbecf
			}
			_ebggg.NoCropAttr = &_gdgg
			continue
		}
		if _dcggd.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_afbdd, _gfabd := _c.ParseBool(_dcggd.Value)
			if _gfabd != nil {
				return _gfabd
			}
			_ebggg.NoGrpAttr = &_afbdd
			continue
		}
		if _dcggd.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_fffge, _bfdag := _c.ParseBool(_dcggd.Value)
			if _bfdag != nil {
				return _bfdag
			}
			_ebggg.NoSelectAttr = &_fffge
			continue
		}
		if _dcggd.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_ecafcf, _acgea := _c.ParseBool(_dcggd.Value)
			if _acgea != nil {
				return _acgea
			}
			_ebggg.NoRotAttr = &_ecafcf
			continue
		}
		if _dcggd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_gffad, _badcc := _c.ParseBool(_dcggd.Value)
			if _badcc != nil {
				return _badcc
			}
			_ebggg.NoChangeAspectAttr = &_gffad
			continue
		}
		if _dcggd.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_dccfg, _gcbd := _c.ParseBool(_dcggd.Value)
			if _gcbd != nil {
				return _gcbd
			}
			_ebggg.NoMoveAttr = &_dccfg
			continue
		}
		if _dcggd.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_egdfc, _bbede := _c.ParseBool(_dcggd.Value)
			if _bbede != nil {
				return _bbede
			}
			_ebggg.NoResizeAttr = &_egdfc
			continue
		}
		if _dcggd.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_gafdg, _bccfe := _c.ParseBool(_dcggd.Value)
			if _bccfe != nil {
				return _bccfe
			}
			_ebggg.NoEditPointsAttr = &_gafdg
			continue
		}
		if _dcggd.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_fabd, _baef := _c.ParseBool(_dcggd.Value)
			if _baef != nil {
				return _baef
			}
			_ebggg.NoAdjustHandlesAttr = &_fabd
			continue
		}
		if _dcggd.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_egaege, _cegg := _c.ParseBool(_dcggd.Value)
			if _cegg != nil {
				return _cegg
			}
			_ebggg.NoChangeArrowheadsAttr = &_egaege
			continue
		}
		if _dcggd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_cefec, _agabd := _c.ParseBool(_dcggd.Value)
			if _agabd != nil {
				return _agabd
			}
			_ebggg.NoChangeShapeTypeAttr = &_cefec
			continue
		}
	}
_ddea:
	for {
		_ccgce, _cgbbd := d.Token()
		if _cgbbd != nil {
			return _cgbbd
		}
		switch _fdcd := _ccgce.(type) {
		case _d.StartElement:
			switch _fdcd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebggg.ExtLst = NewCT_OfficeArtExtensionList()
				if _bdaad := d.DecodeElement(_ebggg.ExtLst, &_fdcd); _bdaad != nil {
					return _bdaad
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _fdcd.Name)
				if _fcbcc := d.Skip(); _fcbcc != nil {
					return _fcbcc
				}
			}
		case _d.EndElement:
			break _ddea
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableCellBorderStyle and its children, prefixing error messages with path
func (_acdfbc *CT_TableCellBorderStyle) ValidateWithPath(path string) error {
	if _acdfbc.Left != nil {
		if _ebfdf := _acdfbc.Left.ValidateWithPath(path + "\u002f\u004c\u0065f\u0074"); _ebfdf != nil {
			return _ebfdf
		}
	}
	if _acdfbc.Right != nil {
		if _fegbg := _acdfbc.Right.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0068\u0074"); _fegbg != nil {
			return _fegbg
		}
	}
	if _acdfbc.Top != nil {
		if _eafeb := _acdfbc.Top.ValidateWithPath(path + "\u002f\u0054\u006f\u0070"); _eafeb != nil {
			return _eafeb
		}
	}
	if _acdfbc.Bottom != nil {
		if _aeggg := _acdfbc.Bottom.ValidateWithPath(path + "\u002fB\u006f\u0074\u0074\u006f\u006d"); _aeggg != nil {
			return _aeggg
		}
	}
	if _acdfbc.InsideH != nil {
		if _dfeb := _acdfbc.InsideH.ValidateWithPath(path + "\u002f\u0049\u006e\u0073\u0069\u0064\u0065\u0048"); _dfeb != nil {
			return _dfeb
		}
	}
	if _acdfbc.InsideV != nil {
		if _gcebba := _acdfbc.InsideV.ValidateWithPath(path + "\u002f\u0049\u006e\u0073\u0069\u0064\u0065\u0056"); _gcebba != nil {
			return _gcebba
		}
	}
	if _acdfbc.Tl2br != nil {
		if _aacg := _acdfbc.Tl2br.ValidateWithPath(path + "\u002f\u0054\u006c\u0032\u0062\u0072"); _aacg != nil {
			return _aacg
		}
	}
	if _acdfbc.Tr2bl != nil {
		if _fcbff := _acdfbc.Tr2bl.ValidateWithPath(path + "\u002f\u0054\u0072\u0032\u0062\u006c"); _fcbff != nil {
			return _fcbff
		}
	}
	if _acdfbc.ExtLst != nil {
		if _cefac := _acdfbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cefac != nil {
			return _cefac
		}
	}
	return nil
}

const (
	ST_TextHorzOverflowTypeUnset    ST_TextHorzOverflowType = 0
	ST_TextHorzOverflowTypeOverflow ST_TextHorzOverflowType = 1
	ST_TextHorzOverflowTypeClip     ST_TextHorzOverflowType = 2
)

func (_ffbdd ST_PresetMaterialType) ValidateWithPath(path string) error {
	switch _ffbdd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffbdd))
	}
	return nil
}
func (_cbda *CT_Connection) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _dg.Sprintf("\u0025\u0076", _cbda.IdAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064\u0078"}, Value: _dg.Sprintf("\u0025\u0076", _cbda.IdxAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_TextUnderlineLine and its children, prefixing error messages with path
func (_gcabg *EG_TextUnderlineLine) ValidateWithPath(path string) error {
	if _gcabg.ULnTx != nil {
		if _bcebe := _gcabg.ULnTx.ValidateWithPath(path + "\u002f\u0055\u004c\u006e\u0054\u0078"); _bcebe != nil {
			return _bcebe
		}
	}
	if _gcabg.ULn != nil {
		if _ebbgf := _gcabg.ULn.ValidateWithPath(path + "\u002f\u0055\u004c\u006e"); _ebbgf != nil {
			return _ebbgf
		}
	}
	return nil
}
func (_ggdec *CT_FlatText) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ggdec.ZAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u007a"}, Value: _dg.Sprintf("\u0025\u0076", *_ggdec.ZAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_ShapeStyle struct {
	LnRef     *CT_StyleMatrixReference
	FillRef   *CT_StyleMatrixReference
	EffectRef *CT_StyleMatrixReference
	FontRef   *CT_FontReference
}

// Validate validates the CT_ComplementTransform and its children
func (_faafg *CT_ComplementTransform) Validate() error {
	return _faafg.ValidateWithPath("\u0043\u0054\u005f\u0043om\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d")
}

// Validate validates the Tbl and its children
func (_gceef *Tbl) Validate() error { return _gceef.ValidateWithPath("\u0054\u0062\u006c") }
func (_egcaa ST_PresetLineDashVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_egcaa.String(), start)
}
func NewCT_Shape3D() *CT_Shape3D { _ccaaf := &CT_Shape3D{}; return _ccaaf }
func (_cbfa ST_PresetLineDashVal) ValidateWithPath(path string) error {
	switch _cbfa {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbfa))
	}
	return nil
}
func (_fbgdg ST_LightRigType) Validate() error { return _fbgdg.ValidateWithPath("") }

const (
	ST_BlendModeUnset   ST_BlendMode = 0
	ST_BlendModeOver    ST_BlendMode = 1
	ST_BlendModeMult    ST_BlendMode = 2
	ST_BlendModeScreen  ST_BlendMode = 3
	ST_BlendModeDarken  ST_BlendMode = 4
	ST_BlendModeLighten ST_BlendMode = 5
)

// ValidateWithPath validates the CT_TextShapeAutofit and its children, prefixing error messages with path
func (_dagcc *CT_TextShapeAutofit) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_AdjustHandleList and its children
func (_fefd *CT_AdjustHandleList) Validate() error {
	return _fefd.ValidateWithPath("\u0043\u0054\u005f\u0041dj\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u004c\u0069\u0073\u0074")
}
func NewCT_PositivePercentage() *CT_PositivePercentage {
	_fbece := &CT_PositivePercentage{}
	return _fbece
}
func (_edda *CT_EffectList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _edda.Blur != nil {
		_ccdb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_edda.Blur, _ccdb)
	}
	if _edda.FillOverlay != nil {
		_afbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_edda.FillOverlay, _afbg)
	}
	if _edda.Glow != nil {
		_ecfgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_edda.Glow, _ecfgd)
	}
	if _edda.InnerShdw != nil {
		_ggf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_edda.InnerShdw, _ggf)
	}
	if _edda.OuterShdw != nil {
		_bbdda := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_edda.OuterShdw, _bbdda)
	}
	if _edda.PrstShdw != nil {
		_gaac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_edda.PrstShdw, _gaac)
	}
	if _edda.Reflection != nil {
		_gefc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_edda.Reflection, _gefc)
	}
	if _edda.SoftEdge != nil {
		_eegc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_edda.SoftEdge, _eegc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_OuterShadowEffect struct {
	BlurRadAttr      *int64
	DistAttr         *int64
	DirAttr          *int32
	SxAttr           *ST_Percentage
	SyAttr           *ST_Percentage
	KxAttr           *int32
	KyAttr           *int32
	AlgnAttr         ST_RectAlignment
	RotWithShapeAttr *bool
	ScrgbClr         *CT_ScRgbColor
	SrgbClr          *CT_SRgbColor
	HslClr           *CT_HslColor
	SysClr           *CT_SystemColor
	SchemeClr        *CT_SchemeColor
	PrstClr          *CT_PresetColor
}

func (_efede ST_LineCap) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_efede.String(), start)
}
func (_fcdfd ST_TextTabAlignType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cdgfga := _d.Attr{}
	_cdgfga.Name = name
	switch _fcdfd {
	case ST_TextTabAlignTypeUnset:
		_cdgfga.Value = ""
	case ST_TextTabAlignTypeL:
		_cdgfga.Value = "\u006c"
	case ST_TextTabAlignTypeCtr:
		_cdgfga.Value = "\u0063\u0074\u0072"
	case ST_TextTabAlignTypeR:
		_cdgfga.Value = "\u0072"
	case ST_TextTabAlignTypeDec:
		_cdgfga.Value = "\u0064\u0065\u0063"
	}
	return _cdgfga, nil
}

// Validate validates the CT_EffectReference and its children
func (_dedg *CT_EffectReference) Validate() error {
	return _dedg.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065")
}
func (_efcdf *ST_TextCapsType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_beca, _fggbe := d.Token()
	if _fggbe != nil {
		return _fggbe
	}
	if _bdfcba, _dbga := _beca.(_d.EndElement); _dbga && _bdfcba.Name == start.Name {
		*_efcdf = 1
		return nil
	}
	if _caccg, _ceff := _beca.(_d.CharData); !_ceff {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _beca)
	} else {
		switch string(_caccg) {
		case "":
			*_efcdf = 0
		case "\u006e\u006f\u006e\u0065":
			*_efcdf = 1
		case "\u0073\u006d\u0061l\u006c":
			*_efcdf = 2
		case "\u0061\u006c\u006c":
			*_efcdf = 3
		}
	}
	_beca, _fggbe = d.Token()
	if _fggbe != nil {
		return _fggbe
	}
	if _bddaf, _ebbec := _beca.(_d.EndElement); _ebbec && _bddaf.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _beca)
}

// Validate validates the CT_Bevel and its children
func (_cdad *CT_Bevel) Validate() error {
	return _cdad.ValidateWithPath("\u0043\u0054\u005f\u0042\u0065\u0076\u0065\u006c")
}

type CT_XYAdjustHandle struct {
	GdRefXAttr *string
	MinXAttr   *ST_AdjCoordinate
	MaxXAttr   *ST_AdjCoordinate
	GdRefYAttr *string
	MinYAttr   *ST_AdjCoordinate
	MaxYAttr   *ST_AdjCoordinate
	Pos        *CT_AdjPoint2D
}

func NewEG_TextBulletTypeface() *EG_TextBulletTypeface {
	_gaded := &EG_TextBulletTypeface{}
	return _gaded
}
func (_fgcce *ST_FixedPercentage) ValidateWithPath(path string) error {
	_fabfa := []string{}
	if _fgcce.ST_FixedPercentageDecimal != nil {
		_fabfa = append(_fabfa, "\u0053T\u005f\u0046\u0069\u0078e\u0064\u0050\u0065\u0072\u0063e\u006et\u0061g\u0065\u0044\u0065\u0063\u0069\u006d\u0061l")
	}
	if _fgcce.ST_FixedPercentage != nil {
		if _dfbgb := _fgcce.ST_FixedPercentage.ValidateWithPath(path + "\u002f\u0053\u0054\u005fFi\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065"); _dfbgb != nil {
			return _dfbgb
		}
		_fabfa = append(_fabfa, "\u0053T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_fabfa) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _fabfa)
	}
	return nil
}
func (_gegaa *CT_ColorSchemeAndMapping) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_cfec := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_gegaa.ClrScheme, _cfec)
	if _gegaa.ClrMap != nil {
		_cbgaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
		e.EncodeElement(_gegaa.ClrMap, _cbgaf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PictureLocking and its children, prefixing error messages with path
func (_cfcaa *CT_PictureLocking) ValidateWithPath(path string) error {
	if _cfcaa.ExtLst != nil {
		if _babaa := _cfcaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _babaa != nil {
			return _babaa
		}
	}
	return nil
}

const (
	ST_LineEndTypeUnset    ST_LineEndType = 0
	ST_LineEndTypeNone     ST_LineEndType = 1
	ST_LineEndTypeTriangle ST_LineEndType = 2
	ST_LineEndTypeStealth  ST_LineEndType = 3
	ST_LineEndTypeDiamond  ST_LineEndType = 4
	ST_LineEndTypeOval     ST_LineEndType = 5
	ST_LineEndTypeArrow    ST_LineEndType = 6
)

// Validate validates the CT_Percentage and its children
func (_edbdc *CT_Percentage) Validate() error {
	return _edbdc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
}
func (_dagg *CT_Path2DCubicBezierTo) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cffeb:
	for {
		_gebeb, _dcdg := d.Token()
		if _dcdg != nil {
			return _dcdg
		}
		switch _dbcce := _gebeb.(type) {
		case _d.StartElement:
			switch _dbcce.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				_aaebf := NewCT_AdjPoint2D()
				if _dbeag := d.DecodeElement(_aaebf, &_dbcce); _dbeag != nil {
					return _dbeag
				}
				_dagg.Pt = append(_dagg.Pt, _aaebf)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0061\u0074\u00682\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072\u0054\u006f\u0020\u0025\u0076", _dbcce.Name)
				if _caef := d.Skip(); _caef != nil {
					return _caef
				}
			}
		case _d.EndElement:
			break _cffeb
		case _d.CharData:
		}
	}
	return nil
}
func (_efd *CT_Angle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dgfd := range start.Attr {
		if _dgfd.Name.Local == "\u0076\u0061\u006c" {
			_bafg, _adc := _c.ParseInt(_dgfd.Value, 10, 32)
			if _adc != nil {
				return _adc
			}
			_efd.ValAttr = int32(_bafg)
			continue
		}
	}
	for {
		_gcb, _bdg := d.Token()
		if _bdg != nil {
			return _dg.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fA\u006e\u0067\u006c\u0065: \u0025\u0073", _bdg)
		}
		if _gag, _cae := _gcb.(_d.EndElement); _cae && _gag.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_ObjectStyleDefaults() *CT_ObjectStyleDefaults {
	_affa := &CT_ObjectStyleDefaults{}
	return _affa
}

// ValidateWithPath validates the CT_GlowEffect and its children, prefixing error messages with path
func (_ffbd *CT_GlowEffect) ValidateWithPath(path string) error {
	if _ffbd.RadAttr != nil {
		if *_ffbd.RadAttr < 0 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_ffbd.RadAttr)
		}
		if *_ffbd.RadAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, *_ffbd.RadAttr)
		}
	}
	if _ffbd.ScrgbClr != nil {
		if _agafe := _ffbd.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _agafe != nil {
			return _agafe
		}
	}
	if _ffbd.SrgbClr != nil {
		if _fada := _ffbd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _fada != nil {
			return _fada
		}
	}
	if _ffbd.HslClr != nil {
		if _eecffd := _ffbd.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _eecffd != nil {
			return _eecffd
		}
	}
	if _ffbd.SysClr != nil {
		if _deee := _ffbd.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _deee != nil {
			return _deee
		}
	}
	if _ffbd.SchemeClr != nil {
		if _fefbd := _ffbd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _fefbd != nil {
			return _fefbd
		}
	}
	if _ffbd.PrstClr != nil {
		if _gfdee := _ffbd.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gfdee != nil {
			return _gfdee
		}
	}
	return nil
}

type ST_TextHorzOverflowType byte

func (_fdcfe *CT_TextShapeAutofit) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_faecf *CT_NoFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_abgc, _eafa := d.Token()
		if _eafa != nil {
			return _dg.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u004e\u006f\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _eafa)
		}
		if _cbdbeg, _ddeeg := _abgc.(_d.EndElement); _ddeeg && _cbdbeg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TablePartStyle and its children
func (_bgedb *CT_TablePartStyle) Validate() error {
	return _bgedb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074S\u0074\u0079\u006c\u0065")
}

// ValidateWithPath validates the CT_Cell3D and its children, prefixing error messages with path
func (_cbbab *CT_Cell3D) ValidateWithPath(path string) error {
	if _acgg := _cbbab.PrstMaterialAttr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u004d\u0061\u0074\u0065\u0072\u0069\u0061l\u0041\u0074\u0074\u0072"); _acgg != nil {
		return _acgg
	}
	if _eaeb := _cbbab.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _eaeb != nil {
		return _eaeb
	}
	if _cbbab.LightRig != nil {
		if _cdbc := _cbbab.LightRig.ValidateWithPath(path + "\u002fL\u0069\u0067\u0068\u0074\u0052\u0069g"); _cdbc != nil {
			return _cdbc
		}
	}
	if _cbbab.ExtLst != nil {
		if _fbgc := _cbbab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbgc != nil {
			return _fbgc
		}
	}
	return nil
}

type CT_BlipFillProperties struct {
	DpiAttr          *uint32
	RotWithShapeAttr *bool
	Blip             *CT_Blip
	SrcRect          *CT_RelativeRect
	Tile             *CT_TileInfoProperties
	Stretch          *CT_StretchInfoProperties
}

func NewCT_ShapeStyle() *CT_ShapeStyle {
	_ggda := &CT_ShapeStyle{}
	_ggda.LnRef = NewCT_StyleMatrixReference()
	_ggda.FillRef = NewCT_StyleMatrixReference()
	_ggda.EffectRef = NewCT_StyleMatrixReference()
	_ggda.FontRef = NewCT_FontReference()
	return _ggda
}
func (_gbccd ST_PenAlignment) String() string {
	switch _gbccd {
	case 0:
		return ""
	case 1:
		return "\u0063\u0074\u0072"
	case 2:
		return "\u0069\u006e"
	}
	return ""
}
func (_cbadc *CT_TextBody) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_dddbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006f\u0064\u0079\u0050\u0072"}}
	e.EncodeElement(_cbadc.BodyPr, _dddbg)
	if _cbadc.LstStyle != nil {
		_cefeaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cbadc.LstStyle, _cefeaa)
	}
	_gadcbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070"}}
	for _, _eccaf := range _cbadc.P {
		e.EncodeElement(_eccaf, _gadcbf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextAutonumberBullet() *CT_TextAutonumberBullet {
	_acddb := &CT_TextAutonumberBullet{}
	_acddb.TypeAttr = ST_TextAutonumberScheme(1)
	return _acddb
}
func (_gccgf ST_SystemColorVal) ValidateWithPath(path string) error {
	switch _gccgf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gccgf))
	}
	return nil
}
func (_dcfaf *ST_PathShadeType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eegcd, _gbbea := d.Token()
	if _gbbea != nil {
		return _gbbea
	}
	if _fdefa, _gfebd := _eegcd.(_d.EndElement); _gfebd && _fdefa.Name == start.Name {
		*_dcfaf = 1
		return nil
	}
	if _baedfc, _fddgg := _eegcd.(_d.CharData); !_fddgg {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eegcd)
	} else {
		switch string(_baedfc) {
		case "":
			*_dcfaf = 0
		case "\u0073\u0068\u0061p\u0065":
			*_dcfaf = 1
		case "\u0063\u0069\u0072\u0063\u006c\u0065":
			*_dcfaf = 2
		case "\u0072\u0065\u0063\u0074":
			*_dcfaf = 3
		}
	}
	_eegcd, _gbbea = d.Token()
	if _gbbea != nil {
		return _gbbea
	}
	if _gbgad, _efaga := _eegcd.(_d.EndElement); _efaga && _gbgad.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eegcd)
}
func (_ddbcga *EG_OfficeArtExtensionList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ddbcga.Ext != nil {
		_bccbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		for _, _dbgeaf := range _ddbcga.Ext {
			e.EncodeElement(_dbgeaf, _bccbc)
		}
	}
	return nil
}
func (_deaff ST_LightRigDirection) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_eeeg := _d.Attr{}
	_eeeg.Name = name
	switch _deaff {
	case ST_LightRigDirectionUnset:
		_eeeg.Value = ""
	case ST_LightRigDirectionTl:
		_eeeg.Value = "\u0074\u006c"
	case ST_LightRigDirectionT:
		_eeeg.Value = "\u0074"
	case ST_LightRigDirectionTr:
		_eeeg.Value = "\u0074\u0072"
	case ST_LightRigDirectionL:
		_eeeg.Value = "\u006c"
	case ST_LightRigDirectionR:
		_eeeg.Value = "\u0072"
	case ST_LightRigDirectionBl:
		_eeeg.Value = "\u0062\u006c"
	case ST_LightRigDirectionB:
		_eeeg.Value = "\u0062"
	case ST_LightRigDirectionBr:
		_eeeg.Value = "\u0062\u0072"
	}
	return _eeeg, nil
}
func (_afbdff *CT_TableCellProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cacb := range start.Attr {
		if _cacb.Name.Local == "\u006d\u0061\u0072\u0052" {
			_defcd, _fbfca := ParseUnionST_Coordinate32(_cacb.Value)
			if _fbfca != nil {
				return _fbfca
			}
			_afbdff.MarRAttr = &_defcd
			continue
		}
		if _cacb.Name.Local == "\u006d\u0061\u0072\u0042" {
			_dbabf, _defba := ParseUnionST_Coordinate32(_cacb.Value)
			if _defba != nil {
				return _defba
			}
			_afbdff.MarBAttr = &_dbabf
			continue
		}
		if _cacb.Name.Local == "\u0061\u006e\u0063\u0068\u006f\u0072" {
			_afbdff.AnchorAttr.UnmarshalXMLAttr(_cacb)
			continue
		}
		if _cacb.Name.Local == "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_afbdff.HorzOverflowAttr.UnmarshalXMLAttr(_cacb)
			continue
		}
		if _cacb.Name.Local == "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r" {
			_efbda, _fcbffg := _c.ParseBool(_cacb.Value)
			if _fcbffg != nil {
				return _fcbffg
			}
			_afbdff.AnchorCtrAttr = &_efbda
			continue
		}
		if _cacb.Name.Local == "\u0076\u0065\u0072\u0074" {
			_afbdff.VertAttr.UnmarshalXMLAttr(_cacb)
			continue
		}
		if _cacb.Name.Local == "\u006d\u0061\u0072\u004c" {
			_gbegb, _aaefc := ParseUnionST_Coordinate32(_cacb.Value)
			if _aaefc != nil {
				return _aaefc
			}
			_afbdff.MarLAttr = &_gbegb
			continue
		}
		if _cacb.Name.Local == "\u006d\u0061\u0072\u0054" {
			_bgcfc, _eaafa := ParseUnionST_Coordinate32(_cacb.Value)
			if _eaafa != nil {
				return _eaafa
			}
			_afbdff.MarTAttr = &_bgcfc
			continue
		}
	}
_gafcf:
	for {
		_afbec, _eedcd := d.Token()
		if _eedcd != nil {
			return _eedcd
		}
		switch _eeaec := _afbec.(type) {
		case _d.StartElement:
			switch _eeaec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u004c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u004c"}:
				_afbdff.LnL = NewCT_LineProperties()
				if _ceabf := d.DecodeElement(_afbdff.LnL, &_eeaec); _ceabf != nil {
					return _ceabf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052"}:
				_afbdff.LnR = NewCT_LineProperties()
				if _gfgbdc := d.DecodeElement(_afbdff.LnR, &_eeaec); _gfgbdc != nil {
					return _gfgbdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054"}:
				_afbdff.LnT = NewCT_LineProperties()
				if _accca := d.DecodeElement(_afbdff.LnT, &_eeaec); _accca != nil {
					return _accca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042"}:
				_afbdff.LnB = NewCT_LineProperties()
				if _caaa := d.DecodeElement(_afbdff.LnB, &_eeaec); _caaa != nil {
					return _caaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}:
				_afbdff.LnTlToBr = NewCT_LineProperties()
				if _ggcbb := d.DecodeElement(_afbdff.LnTlToBr, &_eeaec); _ggcbb != nil {
					return _ggcbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}:
				_afbdff.LnBlToTr = NewCT_LineProperties()
				if _afdbg := d.DecodeElement(_afbdff.LnBlToTr, &_eeaec); _afdbg != nil {
					return _afdbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}:
				_afbdff.Cell3D = NewCT_Cell3D()
				if _gcebf := d.DecodeElement(_afbdff.Cell3D, &_eeaec); _gcebf != nil {
					return _gcebf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_afbdff.NoFill = NewCT_NoFillProperties()
				if _efdbd := d.DecodeElement(_afbdff.NoFill, &_eeaec); _efdbd != nil {
					return _efdbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_afbdff.SolidFill = NewCT_SolidColorFillProperties()
				if _eggad := d.DecodeElement(_afbdff.SolidFill, &_eeaec); _eggad != nil {
					return _eggad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_afbdff.GradFill = NewCT_GradientFillProperties()
				if _gedfa := d.DecodeElement(_afbdff.GradFill, &_eeaec); _gedfa != nil {
					return _gedfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_afbdff.BlipFill = NewCT_BlipFillProperties()
				if _ffcbd := d.DecodeElement(_afbdff.BlipFill, &_eeaec); _ffcbd != nil {
					return _ffcbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_afbdff.PattFill = NewCT_PatternFillProperties()
				if _bdga := d.DecodeElement(_afbdff.PattFill, &_eeaec); _bdga != nil {
					return _bdga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_afbdff.GrpFill = NewCT_GroupFillProperties()
				if _adcad := d.DecodeElement(_afbdff.GrpFill, &_eeaec); _adcad != nil {
					return _adcad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}:
				_afbdff.Headers = NewCT_Headers()
				if _bbegc := d.DecodeElement(_afbdff.Headers, &_eeaec); _bbegc != nil {
					return _bbegc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afbdff.ExtLst = NewCT_OfficeArtExtensionList()
				if _gaacd := d.DecodeElement(_afbdff.ExtLst, &_eeaec); _gaacd != nil {
					return _gaacd
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _eeaec.Name)
				if _fcggf := d.Skip(); _fcggf != nil {
					return _fcggf
				}
			}
		case _d.EndElement:
			break _gafcf
		case _d.CharData:
		}
	}
	return nil
}
func (_gfeff ST_LineEndLength) ValidateWithPath(path string) error {
	switch _gfeff {
	case 0, 1, 2, 3:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfeff))
	}
	return nil
}

type EG_TextBullet struct {
	BuNone    *CT_TextNoBullet
	BuAutoNum *CT_TextAutonumberBullet
	BuChar    *CT_TextCharBullet
	BuBlip    *CT_TextBlipBullet
}

// Validate validates the CT_NonVisualDrawingProps and its children
func (_cgddc *CT_NonVisualDrawingProps) Validate() error {
	return _cgddc.ValidateWithPath("\u0043T\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044r\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006f\u0070\u0073")
}

// Validate validates the CT_CustomColorList and its children
func (_gbdb *CT_CustomColorList) Validate() error {
	return _gbdb.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dC\u006f\u006co\u0072\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_LuminanceEffect and its children, prefixing error messages with path
func (_gbcae *CT_LuminanceEffect) ValidateWithPath(path string) error {
	if _gbcae.BrightAttr != nil {
		if _agcec := _gbcae.BrightAttr.ValidateWithPath(path + "/\u0042\u0072\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072"); _agcec != nil {
			return _agcec
		}
	}
	if _gbcae.ContrastAttr != nil {
		if _cbaaf := _gbcae.ContrastAttr.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0041\u0074\u0074\u0072"); _cbaaf != nil {
			return _cbaaf
		}
	}
	return nil
}
func (_dcafg *CT_EffectContainer) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bedeab := range start.Attr {
		if _bedeab.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dcafg.TypeAttr.UnmarshalXMLAttr(_bedeab)
			continue
		}
		if _bedeab.Name.Local == "\u006e\u0061\u006d\u0065" {
			_afcae, _daae := _bedeab.Value, error(nil)
			if _daae != nil {
				return _daae
			}
			_dcafg.NameAttr = &_afcae
			continue
		}
	}
_fbdda:
	for {
		_gbbb, _cfcdc := d.Token()
		if _cfcdc != nil {
			return _cfcdc
		}
		switch _efec := _gbbb.(type) {
		case _d.StartElement:
			switch _efec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				_dcafg.Cont = NewCT_EffectContainer()
				if _bgbd := d.DecodeElement(_dcafg.Cont, &_efec); _bgbd != nil {
					return _bgbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_dcafg.Effect = NewCT_EffectReference()
				if _geaf := d.DecodeElement(_dcafg.Effect, &_efec); _geaf != nil {
					return _geaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_dcafg.AlphaBiLevel = NewCT_AlphaBiLevelEffect()
				if _deebb := d.DecodeElement(_dcafg.AlphaBiLevel, &_efec); _deebb != nil {
					return _deebb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_dcafg.AlphaCeiling = NewCT_AlphaCeilingEffect()
				if _egbda := d.DecodeElement(_dcafg.AlphaCeiling, &_efec); _egbda != nil {
					return _egbda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_dcafg.AlphaFloor = NewCT_AlphaFloorEffect()
				if _edae := d.DecodeElement(_dcafg.AlphaFloor, &_efec); _edae != nil {
					return _edae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_dcafg.AlphaInv = NewCT_AlphaInverseEffect()
				if _edef := d.DecodeElement(_dcafg.AlphaInv, &_efec); _edef != nil {
					return _edef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_dcafg.AlphaMod = NewCT_AlphaModulateEffect()
				if _ccce := d.DecodeElement(_dcafg.AlphaMod, &_efec); _ccce != nil {
					return _ccce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_dcafg.AlphaModFix = NewCT_AlphaModulateFixedEffect()
				if _efbd := d.DecodeElement(_dcafg.AlphaModFix, &_efec); _efbd != nil {
					return _efbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}:
				_dcafg.AlphaOutset = NewCT_AlphaOutsetEffect()
				if _gfcf := d.DecodeElement(_dcafg.AlphaOutset, &_efec); _gfcf != nil {
					return _gfcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_dcafg.AlphaRepl = NewCT_AlphaReplaceEffect()
				if _gfab := d.DecodeElement(_dcafg.AlphaRepl, &_efec); _gfab != nil {
					return _gfab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_dcafg.BiLevel = NewCT_BiLevelEffect()
				if _baag := d.DecodeElement(_dcafg.BiLevel, &_efec); _baag != nil {
					return _baag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}:
				_dcafg.Blend = NewCT_BlendEffect()
				if _gfcac := d.DecodeElement(_dcafg.Blend, &_efec); _gfcac != nil {
					return _gfcac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_dcafg.Blur = NewCT_BlurEffect()
				if _ecda := d.DecodeElement(_dcafg.Blur, &_efec); _ecda != nil {
					return _ecda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_dcafg.ClrChange = NewCT_ColorChangeEffect()
				if _cfad := d.DecodeElement(_dcafg.ClrChange, &_efec); _cfad != nil {
					return _cfad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_dcafg.ClrRepl = NewCT_ColorReplaceEffect()
				if _fcac := d.DecodeElement(_dcafg.ClrRepl, &_efec); _fcac != nil {
					return _fcac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_dcafg.Duotone = NewCT_DuotoneEffect()
				if _eadc := d.DecodeElement(_dcafg.Duotone, &_efec); _eadc != nil {
					return _eadc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_dcafg.Fill = NewCT_FillEffect()
				if _aag := d.DecodeElement(_dcafg.Fill, &_efec); _aag != nil {
					return _aag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_dcafg.FillOverlay = NewCT_FillOverlayEffect()
				if _cdab := d.DecodeElement(_dcafg.FillOverlay, &_efec); _cdab != nil {
					return _cdab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_dcafg.Glow = NewCT_GlowEffect()
				if _cbeg := d.DecodeElement(_dcafg.Glow, &_efec); _cbeg != nil {
					return _cbeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_dcafg.Grayscl = NewCT_GrayscaleEffect()
				if _ffcbb := d.DecodeElement(_dcafg.Grayscl, &_efec); _ffcbb != nil {
					return _ffcbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_dcafg.Hsl = NewCT_HSLEffect()
				if _bbgb := d.DecodeElement(_dcafg.Hsl, &_efec); _bbgb != nil {
					return _bbgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_dcafg.InnerShdw = NewCT_InnerShadowEffect()
				if _cbec := d.DecodeElement(_dcafg.InnerShdw, &_efec); _cbec != nil {
					return _cbec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_dcafg.Lum = NewCT_LuminanceEffect()
				if _gbec := d.DecodeElement(_dcafg.Lum, &_efec); _gbec != nil {
					return _gbec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_dcafg.OuterShdw = NewCT_OuterShadowEffect()
				if _gfcc := d.DecodeElement(_dcafg.OuterShdw, &_efec); _gfcc != nil {
					return _gfcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_dcafg.PrstShdw = NewCT_PresetShadowEffect()
				if _bbcc := d.DecodeElement(_dcafg.PrstShdw, &_efec); _bbcc != nil {
					return _bbcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_dcafg.Reflection = NewCT_ReflectionEffect()
				if _dfec := d.DecodeElement(_dcafg.Reflection, &_efec); _dfec != nil {
					return _dfec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}:
				_dcafg.RelOff = NewCT_RelativeOffsetEffect()
				if _effbg := d.DecodeElement(_dcafg.RelOff, &_efec); _effbg != nil {
					return _effbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_dcafg.SoftEdge = NewCT_SoftEdgesEffect()
				if _aed := d.DecodeElement(_dcafg.SoftEdge, &_efec); _aed != nil {
					return _aed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_dcafg.Tint = NewCT_TintEffect()
				if _dbgb := d.DecodeElement(_dcafg.Tint, &_efec); _dbgb != nil {
					return _dbgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_dcafg.Xfrm = NewCT_TransformEffect()
				if _fdeae := d.DecodeElement(_dcafg.Xfrm, &_efec); _fdeae != nil {
					return _fdeae
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025\u0076", _efec.Name)
				if _dbfe := d.Skip(); _dbfe != nil {
					return _dbfe
				}
			}
		case _d.EndElement:
			break _fbdda
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NonVisualGroupDrawingShapeProps and its children, prefixing error messages with path
func (_gaff *CT_NonVisualGroupDrawingShapeProps) ValidateWithPath(path string) error {
	if _gaff.GrpSpLocks != nil {
		if _cbdba := _gaff.GrpSpLocks.ValidateWithPath(path + "/\u0047\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _cbdba != nil {
			return _cbdba
		}
	}
	if _gaff.ExtLst != nil {
		if _edace := _gaff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edace != nil {
			return _edace
		}
	}
	return nil
}

// ValidateWithPath validates the VideoFile and its children, prefixing error messages with path
func (_fgeed *VideoFile) ValidateWithPath(path string) error {
	if _cebec := _fgeed.CT_VideoFile.ValidateWithPath(path); _cebec != nil {
		return _cebec
	}
	return nil
}
func (_fbgba ST_SchemeColorVal) Validate() error { return _fbgba.ValidateWithPath("") }

// ValidateWithPath validates the EG_TextGeometry and its children, prefixing error messages with path
func (_bbbfe *EG_TextGeometry) ValidateWithPath(path string) error {
	if _bbbfe.CustGeom != nil {
		if _efecf := _bbbfe.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _efecf != nil {
			return _efecf
		}
	}
	if _bbbfe.PrstTxWarp != nil {
		if _cfadgfd := _bbbfe.PrstTxWarp.ValidateWithPath(path + "/\u0050\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"); _cfadgfd != nil {
			return _cfadgfd
		}
	}
	return nil
}
func NewEG_LineDashProperties() *EG_LineDashProperties {
	_aebcf := &EG_LineDashProperties{}
	return _aebcf
}

type CT_FlatText struct{ ZAttr *ST_Coordinate }

func (_bedba *ST_SchemeColorVal) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bedba = 0
	case "\u0062\u0067\u0031":
		*_bedba = 1
	case "\u0074\u0078\u0031":
		*_bedba = 2
	case "\u0062\u0067\u0032":
		*_bedba = 3
	case "\u0074\u0078\u0032":
		*_bedba = 4
	case "\u0061c\u0063\u0065\u006e\u0074\u0031":
		*_bedba = 5
	case "\u0061c\u0063\u0065\u006e\u0074\u0032":
		*_bedba = 6
	case "\u0061c\u0063\u0065\u006e\u0074\u0033":
		*_bedba = 7
	case "\u0061c\u0063\u0065\u006e\u0074\u0034":
		*_bedba = 8
	case "\u0061c\u0063\u0065\u006e\u0074\u0035":
		*_bedba = 9
	case "\u0061c\u0063\u0065\u006e\u0074\u0036":
		*_bedba = 10
	case "\u0068\u006c\u0069n\u006b":
		*_bedba = 11
	case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
		*_bedba = 12
	case "\u0070\u0068\u0043l\u0072":
		*_bedba = 13
	case "\u0064\u006b\u0031":
		*_bedba = 14
	case "\u006c\u0074\u0031":
		*_bedba = 15
	case "\u0064\u006b\u0032":
		*_bedba = 16
	case "\u006c\u0074\u0032":
		*_bedba = 17
	}
	return nil
}

type CT_EffectStyleList struct{ EffectStyle []*CT_EffectStyleItem }

func (_efaba *ST_FixedPercentage) Validate() error { return _efaba.ValidateWithPath("") }

// ValidateWithPath validates the CT_AdjustHandleList and its children, prefixing error messages with path
func (_fed *CT_AdjustHandleList) ValidateWithPath(path string) error {
	for _ega, _fffa := range _fed.AhXY {
		if _dbbf := _fffa.ValidateWithPath(_dg.Sprintf("%\u0073\u002f\u0041\u0068\u0058\u0059\u005b\u0025\u0064\u005d", path, _ega)); _dbbf != nil {
			return _dbbf
		}
	}
	for _ad, _cfg := range _fed.AhPolar {
		if _dfdb := _cfg.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0041\u0068\u0050\u006f\u006c\u0061r\u005b\u0025\u0064\u005d", path, _ad)); _dfdb != nil {
			return _dfdb
		}
	}
	return nil
}
func NewCT_TextNormalAutofit() *CT_TextNormalAutofit {
	_becdd := &CT_TextNormalAutofit{}
	return _becdd
}

type CT_LineJoinRound struct{}

func (_gddga *ST_TextAnchoringType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gddga = 0
	case "\u0074":
		*_gddga = 1
	case "\u0063\u0074\u0072":
		*_gddga = 2
	case "\u0062":
		*_gddga = 3
	case "\u006a\u0075\u0073\u0074":
		*_gddga = 4
	case "\u0064\u0069\u0073\u0074":
		*_gddga = 5
	}
	return nil
}
func (_cfaggd *CT_TableCellProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cfaggd.MarLAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0072\u004c"}, Value: _dg.Sprintf("\u0025\u0076", *_cfaggd.MarLAttr)})
	}
	if _cfaggd.MarRAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0072\u0052"}, Value: _dg.Sprintf("\u0025\u0076", *_cfaggd.MarRAttr)})
	}
	if _cfaggd.MarTAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0072\u0054"}, Value: _dg.Sprintf("\u0025\u0076", *_cfaggd.MarTAttr)})
	}
	if _cfaggd.MarBAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0072\u0042"}, Value: _dg.Sprintf("\u0025\u0076", *_cfaggd.MarBAttr)})
	}
	if _cfaggd.VertAttr != ST_TextVerticalTypeUnset {
		_bgfgb, _gecde := _cfaggd.VertAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0065\u0072\u0074"})
		if _gecde != nil {
			return _gecde
		}
		start.Attr = append(start.Attr, _bgfgb)
	}
	if _cfaggd.AnchorAttr != ST_TextAnchoringTypeUnset {
		_dgfbe, _ceeef := _cfaggd.AnchorAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006e\u0063\u0068\u006f\u0072"})
		if _ceeef != nil {
			return _ceeef
		}
		start.Attr = append(start.Attr, _dgfbe)
	}
	if _cfaggd.AnchorCtrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_cfaggd.AnchorCtrAttr))})
	}
	if _cfaggd.HorzOverflowAttr != ST_TextHorzOverflowTypeUnset {
		_bbdeb, _caebef := _cfaggd.HorzOverflowAttr.MarshalXMLAttr(_d.Name{Local: "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _caebef != nil {
			return _caebef
		}
		start.Attr = append(start.Attr, _bbdeb)
	}
	e.EncodeToken(start)
	if _cfaggd.LnL != nil {
		_dggec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cn\u004c"}}
		e.EncodeElement(_cfaggd.LnL, _dggec)
	}
	if _cfaggd.LnR != nil {
		_bfadd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cn\u0052"}}
		e.EncodeElement(_cfaggd.LnR, _bfadd)
	}
	if _cfaggd.LnT != nil {
		_cebab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cn\u0054"}}
		e.EncodeElement(_cfaggd.LnT, _cebab)
	}
	if _cfaggd.LnB != nil {
		_feeeg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cn\u0042"}}
		e.EncodeElement(_cfaggd.LnB, _feeeg)
	}
	if _cfaggd.LnTlToBr != nil {
		_bebee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}}
		e.EncodeElement(_cfaggd.LnTlToBr, _bebee)
	}
	if _cfaggd.LnBlToTr != nil {
		_abgac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}}
		e.EncodeElement(_cfaggd.LnBlToTr, _abgac)
	}
	if _cfaggd.Cell3D != nil {
		_cfaea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0065\u006c\u006c\u0033\u0044"}}
		e.EncodeElement(_cfaggd.Cell3D, _cfaea)
	}
	if _cfaggd.NoFill != nil {
		_gcbfg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfaggd.NoFill, _gcbfg)
	}
	if _cfaggd.SolidFill != nil {
		_edbcc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfaggd.SolidFill, _edbcc)
	}
	if _cfaggd.GradFill != nil {
		_gcbdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfaggd.GradFill, _gcbdg)
	}
	if _cfaggd.BlipFill != nil {
		_gfbda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfaggd.BlipFill, _gfbda)
	}
	if _cfaggd.PattFill != nil {
		_gffbge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfaggd.PattFill, _gffbge)
	}
	if _cfaggd.GrpFill != nil {
		_dgbdc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_cfaggd.GrpFill, _dgbdc)
	}
	if _cfaggd.Headers != nil {
		_eafed := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0068\u0065\u0061\u0064\u0065\u0072s"}}
		e.EncodeElement(_cfaggd.Headers, _eafed)
	}
	if _cfaggd.ExtLst != nil {
		_ffdef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cfaggd.ExtLst, _ffdef)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bcaa *CT_ContentPartLocking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fagd := range start.Attr {
		if _fagd.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_acdg, _cecb := _c.ParseBool(_fagd.Value)
			if _cecb != nil {
				return _cecb
			}
			_bcaa.NoGrpAttr = &_acdg
			continue
		}
		if _fagd.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_acff, _dfedcf := _c.ParseBool(_fagd.Value)
			if _dfedcf != nil {
				return _dfedcf
			}
			_bcaa.NoSelectAttr = &_acff
			continue
		}
		if _fagd.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_gbeb, _cded := _c.ParseBool(_fagd.Value)
			if _cded != nil {
				return _cded
			}
			_bcaa.NoRotAttr = &_gbeb
			continue
		}
		if _fagd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_fafg, _bbff := _c.ParseBool(_fagd.Value)
			if _bbff != nil {
				return _bbff
			}
			_bcaa.NoChangeAspectAttr = &_fafg
			continue
		}
		if _fagd.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_acae, _eaddb := _c.ParseBool(_fagd.Value)
			if _eaddb != nil {
				return _eaddb
			}
			_bcaa.NoMoveAttr = &_acae
			continue
		}
		if _fagd.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_fcbfe, _gbef := _c.ParseBool(_fagd.Value)
			if _gbef != nil {
				return _gbef
			}
			_bcaa.NoResizeAttr = &_fcbfe
			continue
		}
		if _fagd.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_gaba, _egbd := _c.ParseBool(_fagd.Value)
			if _egbd != nil {
				return _egbd
			}
			_bcaa.NoEditPointsAttr = &_gaba
			continue
		}
		if _fagd.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_bcag, _gegff := _c.ParseBool(_fagd.Value)
			if _gegff != nil {
				return _gegff
			}
			_bcaa.NoAdjustHandlesAttr = &_bcag
			continue
		}
		if _fagd.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_acgf, _bdeb := _c.ParseBool(_fagd.Value)
			if _bdeb != nil {
				return _bdeb
			}
			_bcaa.NoChangeArrowheadsAttr = &_acgf
			continue
		}
		if _fagd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_cgbfd, _ecfg := _c.ParseBool(_fagd.Value)
			if _ecfg != nil {
				return _ecfg
			}
			_bcaa.NoChangeShapeTypeAttr = &_cgbfd
			continue
		}
	}
_bedea:
	for {
		_eebae, _bcaae := d.Token()
		if _bcaae != nil {
			return _bcaae
		}
		switch _ddbga := _eebae.(type) {
		case _d.StartElement:
			switch _ddbga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcaa.ExtLst = NewCT_OfficeArtExtensionList()
				if _afad := d.DecodeElement(_bcaa.ExtLst, &_ddbga); _afad != nil {
					return _afad
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _ddbga.Name)
				if _gcdde := d.Skip(); _gcdde != nil {
					return _gcdde
				}
			}
		case _d.EndElement:
			break _bedea
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Path2D and its children, prefixing error messages with path
func (_fabf *CT_Path2D) ValidateWithPath(path string) error {
	if _fabf.WAttr != nil {
		if *_fabf.WAttr < 0 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fabf.WAttr)
		}
		if *_fabf.WAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073/\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fabf.WAttr)
		}
	}
	if _fabf.HAttr != nil {
		if *_fabf.HAttr < 0 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0048A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fabf.HAttr)
		}
		if *_fabf.HAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073/\u006d\u002e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fabf.HAttr)
		}
	}
	if _aeffa := _fabf.FillAttr.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0041\u0074\u0074r"); _aeffa != nil {
		return _aeffa
	}
	for _cfbe, _ggdge := range _fabf.Close {
		if _bbbfd := _ggdge.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002fC\u006c\u006f\u0073\u0065\u005b\u0025\u0064\u005d", path, _cfbe)); _bbbfd != nil {
			return _bbbfd
		}
	}
	for _afbcg, _efabg := range _fabf.MoveTo {
		if _bacfa := _efabg.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u004d\u006f\u0076\u0065\u0054\u006f\u005b\u0025\u0064\u005d", path, _afbcg)); _bacfa != nil {
			return _bacfa
		}
	}
	for _aaadbd, _fcdd := range _fabf.LnTo {
		if _afab := _fcdd.ValidateWithPath(_dg.Sprintf("%\u0073\u002f\u004c\u006e\u0054\u006f\u005b\u0025\u0064\u005d", path, _aaadbd)); _afab != nil {
			return _afab
		}
	}
	for _egde, _cgfcd := range _fabf.ArcTo {
		if _bafgg := _cgfcd.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002fA\u0072\u0063\u0054\u006f\u005b\u0025\u0064\u005d", path, _egde)); _bafgg != nil {
			return _bafgg
		}
	}
	for _aeeed, _ffdab := range _fabf.QuadBezTo {
		if _adabea := _ffdab.ValidateWithPath(_dg.Sprintf("\u0025\u0073/\u0051\u0075\u0061d\u0042\u0065\u007a\u0054\u006f\u005b\u0025\u0064\u005d", path, _aeeed)); _adabea != nil {
			return _adabea
		}
	}
	for _cdccd, _bccae := range _fabf.CubicBezTo {
		if _aabead := _bccae.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054o\u005b\u0025\u0064\u005d", path, _cdccd)); _aabead != nil {
			return _aabead
		}
	}
	return nil
}
func NewCT_BackgroundFillStyleList() *CT_BackgroundFillStyleList {
	_bbfd := &CT_BackgroundFillStyleList{}
	return _bbfd
}
func NewEG_TextUnderlineFill() *EG_TextUnderlineFill {
	_fdeega := &EG_TextUnderlineFill{}
	return _fdeega
}
func (_dcabg *ST_TextFontAlignType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dcabg = 0
	case "\u0061\u0075\u0074\u006f":
		*_dcabg = 1
	case "\u0074":
		*_dcabg = 2
	case "\u0063\u0074\u0072":
		*_dcabg = 3
	case "\u0062\u0061\u0073\u0065":
		*_dcabg = 4
	case "\u0062":
		*_dcabg = 5
	}
	return nil
}
func (_bfbdfg *ST_LineEndType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bfbdfg = 0
	case "\u006e\u006f\u006e\u0065":
		*_bfbdfg = 1
	case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_bfbdfg = 2
	case "\u0073t\u0065\u0061\u006c\u0074\u0068":
		*_bfbdfg = 3
	case "\u0064i\u0061\u006d\u006f\u006e\u0064":
		*_bfbdfg = 4
	case "\u006f\u0076\u0061\u006c":
		*_bfbdfg = 5
	case "\u0061\u0072\u0072o\u0077":
		*_bfbdfg = 6
	}
	return nil
}

// Validate validates the EG_OfficeArtExtensionList and its children
func (_gecge *EG_OfficeArtExtensionList) Validate() error {
	return _gecge.ValidateWithPath("\u0045G\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t")
}

// Validate validates the CT_BiLevelEffect and its children
func (_geeg *CT_BiLevelEffect) Validate() error {
	return _geeg.ValidateWithPath("\u0043\u0054_\u0042\u0069\u004ce\u0076\u0065\u006c\u0045\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_OuterShadowEffect and its children
func (_ebfeb *CT_OuterShadowEffect) Validate() error {
	return _ebfeb.ValidateWithPath("C\u0054_\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074")
}

type EG_ColorTransform struct {
	Tint     *CT_PositiveFixedPercentage
	Shade    *CT_PositiveFixedPercentage
	Comp     *CT_ComplementTransform
	Inv      *CT_InverseTransform
	Gray     *CT_GrayscaleTransform
	Alpha    *CT_PositiveFixedPercentage
	AlphaOff *CT_FixedPercentage
	AlphaMod *CT_PositivePercentage
	Hue      *CT_PositiveFixedAngle
	HueOff   *CT_Angle
	HueMod   *CT_PositivePercentage
	Sat      *CT_Percentage
	SatOff   *CT_Percentage
	SatMod   *CT_Percentage
	Lum      *CT_Percentage
	LumOff   *CT_Percentage
	LumMod   *CT_Percentage
	Red      *CT_Percentage
	RedOff   *CT_Percentage
	RedMod   *CT_Percentage
	Green    *CT_Percentage
	GreenOff *CT_Percentage
	GreenMod *CT_Percentage
	Blue     *CT_Percentage
	BlueOff  *CT_Percentage
	BlueMod  *CT_Percentage
	Gamma    *CT_GammaTransform
	InvGamma *CT_InverseGammaTransform
}
type CT_FontReference struct {
	IdxAttr   ST_FontCollectionIndex
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_gcbge ST_AnimationDgmOnlyBuildType) String() string {
	switch _gcbge {
	case 0:
		return ""
	case 1:
		return "\u006f\u006e\u0065"
	case 2:
		return "\u006c\u0076\u006c\u004f\u006e\u0065"
	case 3:
		return "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return ""
}
func NewCT_NonVisualDrawingShapeProps() *CT_NonVisualDrawingShapeProps {
	_egega := &CT_NonVisualDrawingShapeProps{}
	return _egega
}

type ST_PresetMaterialType byte

func (_fcfef ST_PresetCameraType) ValidateWithPath(path string) error {
	switch _fcfef {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcfef))
	}
	return nil
}
func (_dgb *CT_BiLevelEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ccec := range start.Attr {
		if _ccec.Name.Local == "\u0074\u0068\u0072\u0065\u0073\u0068" {
			_fefa, _gacde := ParseUnionST_PositiveFixedPercentage(_ccec.Value)
			if _gacde != nil {
				return _gacde
			}
			_dgb.ThreshAttr = _fefa
			continue
		}
	}
	for {
		_addd, _abda := d.Token()
		if _abda != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0042\u0069\u004c\u0065v\u0065l\u0045\u0066\u0066\u0065\u0063\u0074\u003a \u0025\u0073", _abda)
		}
		if _edac, _gec := _addd.(_d.EndElement); _gec && _edac.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PositivePercentage and its children, prefixing error messages with path
func (_dfcccf *CT_PositivePercentage) ValidateWithPath(path string) error {
	if _afeg := _dfcccf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _afeg != nil {
		return _afeg
	}
	return nil
}

// Validate validates the EG_TextBulletSize and its children
func (_dgggb *EG_TextBulletSize) Validate() error {
	return _dgggb.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065")
}
func (_edeeb *CT_InverseTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_GradientStop struct {
	PosAttr   ST_PositiveFixedPercentage
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func NewCT_TableStyle() *CT_TableStyle {
	_bbdg := &CT_TableStyle{}
	_bbdg.StyleIdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _bbdg
}

type CT_BaseStyles struct {
	ClrScheme  *CT_ColorScheme
	FontScheme *CT_FontScheme
	FmtScheme  *CT_StyleMatrix
	ExtLst     *CT_OfficeArtExtensionList
}

// Validate validates the CT_PresetShadowEffect and its children
func (_adfca *CT_PresetShadowEffect) Validate() error {
	return _adfca.ValidateWithPath("C\u0054\u005f\u0050\u0072es\u0065t\u0053\u0068\u0061\u0064\u006fw\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_eacag *CT_Path2DMoveTo) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_cedaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0074"}}
	e.EncodeElement(_eacag.Pt, _cedaa)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fggge *CT_InverseTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_deabg, _geed := d.Token()
		if _geed != nil {
			return _dg.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0049\u006e\u0076\u0065\u0072s\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u0073", _geed)
		}
		if _eaaf, _aeefb := _deabg.(_d.EndElement); _aeefb && _eaaf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gdbdgc *CT_TextBulletSizePoint) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _dg.Sprintf("\u0025\u0076", _gdbdgc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_NonVisualGraphicFrameProperties() *CT_NonVisualGraphicFrameProperties {
	_bdfdb := &CT_NonVisualGraphicFrameProperties{}
	return _bdfdb
}
func (_dagcb *ST_LineEndWidth) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eacfg, _acdgf := d.Token()
	if _acdgf != nil {
		return _acdgf
	}
	if _ebfcc, _eafefc := _eacfg.(_d.EndElement); _eafefc && _ebfcc.Name == start.Name {
		*_dagcb = 1
		return nil
	}
	if _eefeg, _bbgee := _eacfg.(_d.CharData); !_bbgee {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eacfg)
	} else {
		switch string(_eefeg) {
		case "":
			*_dagcb = 0
		case "\u0073\u006d":
			*_dagcb = 1
		case "\u006d\u0065\u0064":
			*_dagcb = 2
		case "\u006c\u0067":
			*_dagcb = 3
		}
	}
	_eacfg, _acdgf = d.Token()
	if _acdgf != nil {
		return _acdgf
	}
	if _gbabec, _dacbb := _eacfg.(_d.EndElement); _dacbb && _gbabec.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eacfg)
}
func (_cgeac ST_TextShapeType) ValidateWithPath(path string) error {
	switch _cgeac {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgeac))
	}
	return nil
}

// Validate validates the CT_TableCol and its children
func (_eefbfa *CT_TableCol) Validate() error {
	return _eefbfa.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c")
}

// ValidateWithPath validates the CT_GvmlGraphicFrameNonVisual and its children, prefixing error messages with path
func (_fcaca *CT_GvmlGraphicFrameNonVisual) ValidateWithPath(path string) error {
	if _abgb := _fcaca.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _abgb != nil {
		return _abgb
	}
	if _edggc := _fcaca.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _edggc != nil {
		return _edggc
	}
	return nil
}
func NewCT_Path2DLineTo() *CT_Path2DLineTo {
	_cgbed := &CT_Path2DLineTo{}
	_cgbed.Pt = NewCT_AdjPoint2D()
	return _cgbed
}
func (_eaab *CT_AlphaFloorEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Shape3D and its children, prefixing error messages with path
func (_feca *CT_Shape3D) ValidateWithPath(path string) error {
	if _feca.ZAttr != nil {
		if _ggafe := _feca.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _ggafe != nil {
			return _ggafe
		}
	}
	if _feca.ExtrusionHAttr != nil {
		if *_feca.ExtrusionHAttr < 0 {
			return _dg.Errorf("\u0025\u0073\u002fm\u002e\u0045\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_feca.ExtrusionHAttr)
		}
		if *_feca.ExtrusionHAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0045\u0078t\u0072\u0075\u0073i\u006f\u006e\u0048A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020b\u0065 <\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_feca.ExtrusionHAttr)
		}
	}
	if _feca.ContourWAttr != nil {
		if *_feca.ContourWAttr < 0 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0043\u006f\u006e\u0074\u006f\u0075\u0072\u0057\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_feca.ContourWAttr)
		}
		if *_feca.ContourWAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u006f\u006e\u0074\u006f\u0075r\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_feca.ContourWAttr)
		}
	}
	if _cfegg := _feca.PrstMaterialAttr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u004d\u0061\u0074\u0065\u0072\u0069\u0061l\u0041\u0074\u0074\u0072"); _cfegg != nil {
		return _cfegg
	}
	if _feca.BevelT != nil {
		if _eceg := _feca.BevelT.ValidateWithPath(path + "\u002fB\u0065\u0076\u0065\u006c\u0054"); _eceg != nil {
			return _eceg
		}
	}
	if _feca.BevelB != nil {
		if _dfba := _feca.BevelB.ValidateWithPath(path + "\u002fB\u0065\u0076\u0065\u006c\u0042"); _dfba != nil {
			return _dfba
		}
	}
	if _feca.ExtrusionClr != nil {
		if _bagg := _feca.ExtrusionClr.ValidateWithPath(path + "\u002f\u0045\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"); _bagg != nil {
			return _bagg
		}
	}
	if _feca.ContourClr != nil {
		if _dbcbdf := _feca.ContourClr.ValidateWithPath(path + "/\u0043\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"); _dbcbdf != nil {
			return _dbcbdf
		}
	}
	if _feca.ExtLst != nil {
		if _gfbe := _feca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfbe != nil {
			return _gfbe
		}
	}
	return nil
}
func (_facf *CT_DefaultShapeDefinition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_facf.SpPr = NewCT_ShapeProperties()
	_facf.BodyPr = NewCT_TextBodyProperties()
	_facf.LstStyle = NewCT_TextListStyle()
_ccfc:
	for {
		_fdee, _ggbed := d.Token()
		if _ggbed != nil {
			return _ggbed
		}
		switch _bdce := _fdee.(type) {
		case _d.StartElement:
			switch _bdce.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _aaaea := d.DecodeElement(_facf.SpPr, &_bdce); _aaaea != nil {
					return _aaaea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}:
				if _dcec := d.DecodeElement(_facf.BodyPr, &_bdce); _dcec != nil {
					return _dcec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}:
				if _debe := d.DecodeElement(_facf.LstStyle, &_bdce); _debe != nil {
					return _debe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_facf.Style = NewCT_ShapeStyle()
				if _fddad := d.DecodeElement(_facf.Style, &_bdce); _fddad != nil {
					return _fddad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_facf.ExtLst = NewCT_OfficeArtExtensionList()
				if _feeg := d.DecodeElement(_facf.ExtLst, &_bdce); _feeg != nil {
					return _feeg
				}
			default:
				_cd.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0053h\u0061p\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074i\u006fn\u0020\u0025v", _bdce.Name)
				if _gfde := d.Skip(); _gfde != nil {
					return _gfde
				}
			}
		case _d.EndElement:
			break _ccfc
		case _d.CharData:
		}
	}
	return nil
}

type CT_EffectContainer struct {
	TypeAttr     ST_EffectContainerType
	NameAttr     *string
	Cont         *CT_EffectContainer
	Effect       *CT_EffectReference
	AlphaBiLevel *CT_AlphaBiLevelEffect
	AlphaCeiling *CT_AlphaCeilingEffect
	AlphaFloor   *CT_AlphaFloorEffect
	AlphaInv     *CT_AlphaInverseEffect
	AlphaMod     *CT_AlphaModulateEffect
	AlphaModFix  *CT_AlphaModulateFixedEffect
	AlphaOutset  *CT_AlphaOutsetEffect
	AlphaRepl    *CT_AlphaReplaceEffect
	BiLevel      *CT_BiLevelEffect
	Blend        *CT_BlendEffect
	Blur         *CT_BlurEffect
	ClrChange    *CT_ColorChangeEffect
	ClrRepl      *CT_ColorReplaceEffect
	Duotone      *CT_DuotoneEffect
	Fill         *CT_FillEffect
	FillOverlay  *CT_FillOverlayEffect
	Glow         *CT_GlowEffect
	Grayscl      *CT_GrayscaleEffect
	Hsl          *CT_HSLEffect
	InnerShdw    *CT_InnerShadowEffect
	Lum          *CT_LuminanceEffect
	OuterShdw    *CT_OuterShadowEffect
	PrstShdw     *CT_PresetShadowEffect
	Reflection   *CT_ReflectionEffect
	RelOff       *CT_RelativeOffsetEffect
	SoftEdge     *CT_SoftEdgesEffect
	Tint         *CT_TintEffect
	Xfrm         *CT_TransformEffect
}

func (_addda ST_BlendMode) ValidateWithPath(path string) error {
	switch _addda {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_addda))
	}
	return nil
}
func (_cbddd *CT_TextSpacingPoint) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _dg.Sprintf("\u0025\u0076", _cbddd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_Geometry and its children, prefixing error messages with path
func (_edbda *EG_Geometry) ValidateWithPath(path string) error {
	if _edbda.CustGeom != nil {
		if _acdfec := _edbda.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _acdfec != nil {
			return _acdfec
		}
	}
	if _edbda.PrstGeom != nil {
		if _abbcgc := _edbda.PrstGeom.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0047\u0065\u006fm"); _abbcgc != nil {
			return _abbcgc
		}
	}
	return nil
}
func (_gafce ST_ShapeType) Validate() error { return _gafce.ValidateWithPath("") }

// Validate validates the CT_PresetGeometry2D and its children
func (_bbdace *CT_PresetGeometry2D) Validate() error {
	return _bbdace.ValidateWithPath("\u0043\u0054\u005f\u0050re\u0073\u0065\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044")
}
func (_fbgec ST_AdjCoordinate) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fbgec.ST_Coordinate != nil {
		e.Encode(_fbgec.ST_Coordinate)
	}
	if _fbgec.ST_GeomGuideName != nil {
		e.EncodeToken(_d.CharData(*_fbgec.ST_GeomGuideName))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_fbffa *CT_PictureLocking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbffa.NoCropAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0072\u006f\u0070"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbffa.NoCropAttr))})
	}
	if _fbffa.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbffa.NoGrpAttr))})
	}
	if _fbffa.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbffa.NoSelectAttr))})
	}
	if _fbffa.NoRotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbffa.NoRotAttr))})
	}
	if _fbffa.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbffa.NoChangeAspectAttr))})
	}
	if _fbffa.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbffa.NoMoveAttr))})
	}
	if _fbffa.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbffa.NoResizeAttr))})
	}
	if _fbffa.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbffa.NoEditPointsAttr))})
	}
	if _fbffa.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbffa.NoAdjustHandlesAttr))})
	}
	if _fbffa.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbffa.NoChangeArrowheadsAttr))})
	}
	if _fbffa.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbffa.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _fbffa.ExtLst != nil {
		_dedga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbffa.ExtLst, _dedga)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gcf *CT_AdjPoint2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cff := range start.Attr {
		if _cff.Name.Local == "\u0078" {
			_ccg, _fff := ParseUnionST_AdjCoordinate(_cff.Value)
			if _fff != nil {
				return _fff
			}
			_gcf.XAttr = _ccg
			continue
		}
		if _cff.Name.Local == "\u0079" {
			_gde, _dafb := ParseUnionST_AdjCoordinate(_cff.Value)
			if _dafb != nil {
				return _dafb
			}
			_gcf.YAttr = _gde
			continue
		}
	}
	for {
		_ggg, _fde := d.Token()
		if _fde != nil {
			return _dg.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041d\u006aP\u006fi\u006e\u0074\u0032\u0044\u003a\u0020\u0025s", _fde)
		}
		if _dd, _ddd := _ggg.(_d.EndElement); _ddd && _dd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorSchemeList and its children, prefixing error messages with path
func (_agga *CT_ColorSchemeList) ValidateWithPath(path string) error {
	for _dggf, _bdaf := range _agga.ExtraClrScheme {
		if _cbgd := _bdaf.ValidateWithPath(_dg.Sprintf("%\u0073\u002f\u0045\u0078tr\u0061C\u006c\u0072\u0053\u0063\u0068e\u006d\u0065\u005b\u0025\u0064\u005d", path, _dggf)); _cbgd != nil {
			return _cbgd
		}
	}
	return nil
}
func (_bf *CT_AlphaBiLevelEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0068\u0072\u0065\u0073\u0068"}, Value: _dg.Sprintf("\u0025\u0076", _bf.ThreshAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_egdb ST_PresetCameraType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cadga := _d.Attr{}
	_cadga.Name = name
	switch _egdb {
	case ST_PresetCameraTypeUnset:
		_cadga.Value = ""
	case ST_PresetCameraTypeLegacyObliqueTopLeft:
		_cadga.Value = "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueTop:
		_cadga.Value = "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case ST_PresetCameraTypeLegacyObliqueTopRight:
		_cadga.Value = "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyObliqueLeft:
		_cadga.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueFront:
		_cadga.Value = "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypeLegacyObliqueRight:
		_cadga.Value = "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyObliqueBottomLeft:
		_cadga.Value = "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueBottom:
		_cadga.Value = "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeLegacyObliqueBottomRight:
		_cadga.Value = "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveTopLeft:
		_cadga.Value = "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveTop:
		_cadga.Value = "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070"
	case ST_PresetCameraTypeLegacyPerspectiveTopRight:
		_cadga.Value = "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t"
	case ST_PresetCameraTypeLegacyPerspectiveLeft:
		_cadga.Value = "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveFront:
		_cadga.Value = "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveRight:
		_cadga.Value = "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveBottomLeft:
		_cadga.Value = "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveBottom:
		_cadga.Value = "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeLegacyPerspectiveBottomRight:
		_cadga.Value = "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074"
	case ST_PresetCameraTypeOrthographicFront:
		_cadga.Value = "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypeIsometricTopUp:
		_cadga.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070"
	case ST_PresetCameraTypeIsometricTopDown:
		_cadga.Value = "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricBottomUp:
		_cadga.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070"
	case ST_PresetCameraTypeIsometricBottomDown:
		_cadga.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricLeftUp:
		_cadga.Value = "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070"
	case ST_PresetCameraTypeIsometricLeftDown:
		_cadga.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricRightUp:
		_cadga.Value = "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070"
	case ST_PresetCameraTypeIsometricRightDown:
		_cadga.Value = "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricOffAxis1Left:
		_cadga.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis1Right:
		_cadga.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis1Top:
		_cadga.Value = "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070"
	case ST_PresetCameraTypeIsometricOffAxis2Left:
		_cadga.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis2Right:
		_cadga.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis2Top:
		_cadga.Value = "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070"
	case ST_PresetCameraTypeIsometricOffAxis3Left:
		_cadga.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis3Right:
		_cadga.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis3Bottom:
		_cadga.Value = "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeIsometricOffAxis4Left:
		_cadga.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis4Right:
		_cadga.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis4Bottom:
		_cadga.Value = "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeObliqueTopLeft:
		_cadga.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueTop:
		_cadga.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case ST_PresetCameraTypeObliqueTopRight:
		_cadga.Value = "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeObliqueLeft:
		_cadga.Value = "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueRight:
		_cadga.Value = "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeObliqueBottomLeft:
		_cadga.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueBottom:
		_cadga.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeObliqueBottomRight:
		_cadga.Value = "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypePerspectiveFront:
		_cadga.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypePerspectiveLeft:
		_cadga.Value = "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypePerspectiveRight:
		_cadga.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypePerspectiveAbove:
		_cadga.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065"
	case ST_PresetCameraTypePerspectiveBelow:
		_cadga.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077"
	case ST_PresetCameraTypePerspectiveAboveLeftFacing:
		_cadga.Value = "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveAboveRightFacing:
		_cadga.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveContrastingLeftFacing:
		_cadga.Value = "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveContrastingRightFacing:
		_cadga.Value = "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicLeftFacing:
		_cadga.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicRightFacing:
		_cadga.Value = "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicExtremeLeftFacing:
		_cadga.Value = "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicExtremeRightFacing:
		_cadga.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067"
	case ST_PresetCameraTypePerspectiveRelaxed:
		_cadga.Value = "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064"
	case ST_PresetCameraTypePerspectiveRelaxedModerately:
		_cadga.Value = "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079"
	}
	return _cadga, nil
}
func (_abfg *EG_FillModeProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _abfg.Tile != nil {
		_fagfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065"}}
		e.EncodeElement(_abfg.Tile, _fagfe)
	}
	if _abfg.Stretch != nil {
		_cbcba := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0072\u0065\u0074\u0063h"}}
		e.EncodeElement(_abfg.Stretch, _cbcba)
	}
	return nil
}

// ValidateWithPath validates the CT_GammaTransform and its children, prefixing error messages with path
func (_bdee *CT_GammaTransform) ValidateWithPath(path string) error { return nil }
func NewEG_TextBulletSize() *EG_TextBulletSize                      { _cggfe := &EG_TextBulletSize{}; return _cggfe }

// Validate validates the CT_Path2DClose and its children
func (_fdedb *CT_Path2DClose) Validate() error {
	return _fdedb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044C\u006c\u006f\u0073\u0065")
}

// Validate validates the CT_InverseTransform and its children
func (_eegf *CT_InverseTransform) Validate() error {
	return _eegf.ValidateWithPath("\u0043\u0054\u005f\u0049nv\u0065\u0072\u0073\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

// ValidateWithPath validates the CT_TableBackgroundStyle and its children, prefixing error messages with path
func (_fddgd *CT_TableBackgroundStyle) ValidateWithPath(path string) error {
	if _fddgd.Fill != nil {
		if _egbfc := _fddgd.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _egbfc != nil {
			return _egbfc
		}
	}
	if _fddgd.FillRef != nil {
		if _bcgcd := _fddgd.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _bcgcd != nil {
			return _bcgcd
		}
	}
	if _fddgd.Effect != nil {
		if _fgaad := _fddgd.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _fgaad != nil {
			return _fgaad
		}
	}
	if _fddgd.EffectRef != nil {
		if _abfeb := _fddgd.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _abfeb != nil {
			return _abfeb
		}
	}
	return nil
}
func (_gdbfe *ST_Coordinate32) ValidateWithPath(path string) error {
	_fcbca := []string{}
	if _gdbfe.ST_Coordinate32Unqualified != nil {
		_fcbca = append(_fcbca, "\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061t\u0065\u0033\u0032\u0055\u006e\u0071\u0075\u0061\u006c\u0069f\u0069\u0065\u0064")
	}
	if _gdbfe.ST_UniversalMeasure != nil {
		_fcbca = append(_fcbca, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_fcbca) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _fcbca)
	}
	return nil
}
func NewCT_TextBulletColorFollowText() *CT_TextBulletColorFollowText {
	_bdaab := &CT_TextBulletColorFollowText{}
	return _bdaab
}

// Validate validates the CT_GroupLocking and its children
func (_cdge *CT_GroupLocking) Validate() error {
	return _cdge.ValidateWithPath("\u0043T\u005fG\u0072\u006f\u0075\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}
func (_cdfd *CT_Scale2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cdfd.Sx = NewCT_Ratio()
	_cdfd.Sy = NewCT_Ratio()
_dabgc:
	for {
		_cdecf, _ebdcc := d.Token()
		if _ebdcc != nil {
			return _ebdcc
		}
		switch _cffae := _cdecf.(type) {
		case _d.StartElement:
			switch _cffae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0078"}:
				if _decgd := d.DecodeElement(_cdfd.Sx, &_cffae); _decgd != nil {
					return _decgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079"}:
				if _cdbef := d.DecodeElement(_cdfd.Sy, &_cffae); _cdbef != nil {
					return _cdbef
				}
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0063\u0061\u006c\u0065\u0032\u0044\u0020\u0025\u0076", _cffae.Name)
				if _gdefd := d.Skip(); _gdefd != nil {
					return _gdefd
				}
			}
		case _d.EndElement:
			break _dabgc
		case _d.CharData:
		}
	}
	return nil
}
func (_bcfbf *CT_GeomRect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c"}, Value: _dg.Sprintf("\u0025\u0076", _bcfbf.LAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074"}, Value: _dg.Sprintf("\u0025\u0076", _bcfbf.TAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072"}, Value: _dg.Sprintf("\u0025\u0076", _bcfbf.RAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062"}, Value: _dg.Sprintf("\u0025\u0076", _bcfbf.BAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_BaseStylesOverride() *CT_BaseStylesOverride {
	_eggg := &CT_BaseStylesOverride{}
	return _eggg
}
func (_gcdgc *CT_Path2DArcTo) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0077\u0052"}, Value: _dg.Sprintf("\u0025\u0076", _gcdgc.WRAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0052"}, Value: _dg.Sprintf("\u0025\u0076", _gcdgc.HRAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0074\u0041n\u0067"}, Value: _dg.Sprintf("\u0025\u0076", _gcdgc.StAngAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0077\u0041n\u0067"}, Value: _dg.Sprintf("\u0025\u0076", _gcdgc.SwAngAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_SupplementalFont struct {
	ScriptAttr   string
	TypefaceAttr string
}
type CT_TableCell struct {
	RowSpanAttr  *int32
	GridSpanAttr *int32
	HMergeAttr   *bool
	VMergeAttr   *bool
	IdAttr       *string
	TxBody       *CT_TextBody
	TcPr         *CT_TableCellProperties
	ExtLst       *CT_OfficeArtExtensionList
}

func NewCT_Path2DList() *CT_Path2DList { _dbebg := &CT_Path2DList{}; return _dbebg }

type ST_ChartBuildStep byte

func (_ebbea *ST_LineCap) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bfaeb, _bgdfg := d.Token()
	if _bgdfg != nil {
		return _bgdfg
	}
	if _cecbc, _fgffa := _bfaeb.(_d.EndElement); _fgffa && _cecbc.Name == start.Name {
		*_ebbea = 1
		return nil
	}
	if _daag, _ccdbd := _bfaeb.(_d.CharData); !_ccdbd {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfaeb)
	} else {
		switch string(_daag) {
		case "":
			*_ebbea = 0
		case "\u0072\u006e\u0064":
			*_ebbea = 1
		case "\u0073\u0071":
			*_ebbea = 2
		case "\u0066\u006c\u0061\u0074":
			*_ebbea = 3
		}
	}
	_bfaeb, _bgdfg = d.Token()
	if _bgdfg != nil {
		return _bgdfg
	}
	if _fdecb, _efbec := _bfaeb.(_d.EndElement); _efbec && _fdecb.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfaeb)
}
func (_aabab *CT_FixedPercentage) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abeb := range start.Attr {
		if _abeb.Name.Local == "\u0076\u0061\u006c" {
			_ecef, _cbaf := ParseUnionST_FixedPercentage(_abeb.Value)
			if _cbaf != nil {
				return _cbaf
			}
			_aabab.ValAttr = _ecef
			continue
		}
	}
	for {
		_ebcd, _agfgd := d.Token()
		if _agfgd != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0046\u0069\u0078\u0065\u0064\u0050\u0065r\u0063\u0065\u006e\u0074\u0061\u0067\u0065\u003a\u0020\u0025\u0073", _agfgd)
		}
		if _edfbf, _ffffd := _ebcd.(_d.EndElement); _ffffd && _edfbf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ThemeableFillStyle and its children, prefixing error messages with path
func (_cdbdd *EG_ThemeableFillStyle) ValidateWithPath(path string) error {
	if _cdbdd.Fill != nil {
		if _dabeg := _cdbdd.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _dabeg != nil {
			return _dabeg
		}
	}
	if _cdbdd.FillRef != nil {
		if _ggeee := _cdbdd.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _ggeee != nil {
			return _ggeee
		}
	}
	return nil
}

// Validate validates the EG_Text3D and its children
func (_bgefe *EG_Text3D) Validate() error {
	return _bgefe.ValidateWithPath("\u0045G\u005f\u0054\u0065\u0078\u0074\u0033D")
}

const (
	ST_PenAlignmentUnset ST_PenAlignment = 0
	ST_PenAlignmentCtr   ST_PenAlignment = 1
	ST_PenAlignmentIn    ST_PenAlignment = 2
)

func (_ccgba *EG_TextBulletSize) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ccgba.BuSzTx != nil {
		_efgfb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0053\u007a\u0054\u0078"}}
		e.EncodeElement(_ccgba.BuSzTx, _efgfb)
	}
	if _ccgba.BuSzPct != nil {
		_geefeg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0063t"}}
		e.EncodeElement(_ccgba.BuSzPct, _geefeg)
	}
	if _ccgba.BuSzPts != nil {
		_fedgf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0074s"}}
		e.EncodeElement(_ccgba.BuSzPts, _fedgf)
	}
	return nil
}

type ST_PenAlignment byte

// Validate validates the CT_PositiveFixedPercentage and its children
func (_gfadf *CT_PositiveFixedPercentage) Validate() error {
	return _gfadf.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
}

type CT_BlipChoice struct {
	AlphaBiLevel []*CT_AlphaBiLevelEffect
	AlphaCeiling []*CT_AlphaCeilingEffect
	AlphaFloor   []*CT_AlphaFloorEffect
	AlphaInv     []*CT_AlphaInverseEffect
	AlphaMod     []*CT_AlphaModulateEffect
	AlphaModFix  []*CT_AlphaModulateFixedEffect
	AlphaRepl    []*CT_AlphaReplaceEffect
	BiLevel      []*CT_BiLevelEffect
	Blur         []*CT_BlurEffect
	ClrChange    []*CT_ColorChangeEffect
	ClrRepl      []*CT_ColorReplaceEffect
	Duotone      []*CT_DuotoneEffect
	FillOverlay  []*CT_FillOverlayEffect
	Grayscl      []*CT_GrayscaleEffect
	Hsl          []*CT_HSLEffect
	Lum          []*CT_LuminanceEffect
	Tint         []*CT_TintEffect
}

// ValidateWithPath validates the CT_GeomRect and its children, prefixing error messages with path
func (_dcad *CT_GeomRect) ValidateWithPath(path string) error {
	if _bccea := _dcad.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _bccea != nil {
		return _bccea
	}
	if _edaab := _dcad.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _edaab != nil {
		return _edaab
	}
	if _dcgb := _dcad.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _dcgb != nil {
		return _dcgb
	}
	if _affd := _dcad.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _affd != nil {
		return _affd
	}
	return nil
}
func (_dcfc *CT_Boolean) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _acca := range start.Attr {
		if _acca.Name.Local == "\u0076\u0061\u006c" {
			_caec, _afff := ParseUnionST_OnOff(_acca.Value)
			if _afff != nil {
				return _afff
			}
			_dcfc.ValAttr = &_caec
			continue
		}
	}
	for {
		_gbbee, _dfde := d.Token()
		if _dfde != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e\u003a\u0020%\u0073", _dfde)
		}
		if _eefa, _aeeg := _gbbee.(_d.EndElement); _aeeg && _eefa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ddgcbb ST_ChartBuildStep) String() string {
	switch _ddgcbb {
	case 0:
		return ""
	case 1:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 2:
		return "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 3:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 4:
		return "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case 5:
		return "\u0061\u006c\u006c\u0050\u0074\u0073"
	case 6:
		return "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	}
	return ""
}
func NewCT_LightRig() *CT_LightRig {
	_cafef := &CT_LightRig{}
	_cafef.RigAttr = ST_LightRigType(1)
	_cafef.DirAttr = ST_LightRigDirection(1)
	return _cafef
}
func NewEG_FillModeProperties() *EG_FillModeProperties {
	_gfbba := &EG_FillModeProperties{}
	return _gfbba
}

type CT_GvmlUseShapeRectangle struct{}
type CT_InverseGammaTransform struct{}

// ValidateWithPath validates the CT_Scene3D and its children, prefixing error messages with path
func (_degge *CT_Scene3D) ValidateWithPath(path string) error {
	if _begea := _degge.Camera.ValidateWithPath(path + "\u002fC\u0061\u006d\u0065\u0072\u0061"); _begea != nil {
		return _begea
	}
	if _faacd := _degge.LightRig.ValidateWithPath(path + "\u002fL\u0069\u0067\u0068\u0074\u0052\u0069g"); _faacd != nil {
		return _faacd
	}
	if _degge.Backdrop != nil {
		if _eedaec := _degge.Backdrop.ValidateWithPath(path + "\u002fB\u0061\u0063\u006b\u0064\u0072\u006fp"); _eedaec != nil {
			return _eedaec
		}
	}
	if _degge.ExtLst != nil {
		if _cgegff := _degge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgegff != nil {
			return _cgegff
		}
	}
	return nil
}
func (_aaace *ST_TextFontScalePercentOrPercentString) Validate() error {
	return _aaace.ValidateWithPath("")
}

type CT_AlphaCeilingEffect struct{}

func (_febba ST_TextAlignType) Validate() error { return _febba.ValidateWithPath("") }
func (_acdfd *CT_TextSpacingPercent) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _aaffb := range start.Attr {
		if _aaffb.Name.Local == "\u0076\u0061\u006c" {
			_gabgc, _fbgfd := ParseUnionST_TextSpacingPercentOrPercentString(_aaffb.Value)
			if _fbgfd != nil {
				return _fbgfd
			}
			_acdfd.ValAttr = _gabgc
			continue
		}
	}
	for {
		_ebfag, _effdd := d.Token()
		if _effdd != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070\u0061\u0063\u0069n\u0067\u0050\u0065\u0072\u0063\u0065\u006et\u003a\u0020\u0025\u0073", _effdd)
		}
		if _adfbce, _fgecec := _ebfag.(_d.EndElement); _fgecec && _adfbce.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ggfbc *CT_NonVisualConnectorProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eeab:
	for {
		_gfcb, _ggbca := d.Token()
		if _ggbca != nil {
			return _ggbca
		}
		switch _fgdcd := _gfcb.(type) {
		case _d.StartElement:
			switch _fgdcd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}:
				_ggfbc.CxnSpLocks = NewCT_ConnectorLocking()
				if _bdfdd := d.DecodeElement(_ggfbc.CxnSpLocks, &_fgdcd); _bdfdd != nil {
					return _bdfdd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0043x\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0043x\u006e"}:
				_ggfbc.StCxn = NewCT_Connection()
				if _fgege := d.DecodeElement(_ggfbc.StCxn, &_fgdcd); _fgege != nil {
					return _fgege
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u0078\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u0078\u006e"}:
				_ggfbc.EndCxn = NewCT_Connection()
				if _acbae := d.DecodeElement(_ggfbc.EndCxn, &_fgdcd); _acbae != nil {
					return _acbae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggfbc.ExtLst = NewCT_OfficeArtExtensionList()
				if _bbaa := d.DecodeElement(_ggfbc.ExtLst, &_fgdcd); _bbaa != nil {
					return _bbaa
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065l\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006cC\u006f\u006en\u0065\u0063\u0074\u006fr\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fgdcd.Name)
				if _ageac := d.Skip(); _ageac != nil {
					return _ageac
				}
			}
		case _d.EndElement:
			break _eeab
		case _d.CharData:
		}
	}
	return nil
}
func (_fabga *CT_PresetColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_bbfde, _gcef := _fabga.ValAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0061\u006c"})
	if _gcef != nil {
		return _gcef
	}
	start.Attr = append(start.Attr, _bbfde)
	e.EncodeToken(start)
	if _fabga.EG_ColorTransform != nil {
		for _, _gfac := range _fabga.EG_ColorTransform {
			_gfac.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_TextUnderlineFill and its children
func (_caaed *EG_TextUnderlineFill) Validate() error {
	return _caaed.ValidateWithPath("E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Fi\u006c\u006c")
}
func (_gdedg *CT_OfficeArtExtensionList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gcdg:
	for {
		_efbef, _eega := d.Token()
		if _eega != nil {
			return _eega
		}
		switch _dffa := _efbef.(type) {
		case _d.StartElement:
			switch _dffa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_degc := NewCT_OfficeArtExtension()
				if _dffag := d.DecodeElement(_degc, &_dffa); _dffag != nil {
					return _dffag
				}
				_gdedg.Ext = append(_gdedg.Ext, _degc)
			default:
				_cd.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0041\u0072t\u0045x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004ci\u0073t\u0020\u0025v", _dffa.Name)
				if _cbggg := d.Skip(); _cbggg != nil {
					return _cbggg
				}
			}
		case _d.EndElement:
			break _gcdg
		case _d.CharData:
		}
	}
	return nil
}
func (_fedce ST_PresetCameraType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fedce.String(), start)
}
func (_dfge *CT_LinearShadeProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dfge.AngAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006e\u0067"}, Value: _dg.Sprintf("\u0025\u0076", *_dfge.AngAttr)})
	}
	if _dfge.ScaledAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0063\u0061\u006c\u0065\u0064"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_dfge.ScaledAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cgade *ST_AnimationBuildType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cbeeb, _ffeac := d.Token()
	if _ffeac != nil {
		return _ffeac
	}
	if _agbff, _fceef := _cbeeb.(_d.EndElement); _fceef && _agbff.Name == start.Name {
		*_cgade = 1
		return nil
	}
	if _cddbc, _gdebd := _cbeeb.(_d.CharData); !_gdebd {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbeeb)
	} else {
		switch string(_cddbc) {
		case "":
			*_cgade = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_cgade = 1
		}
	}
	_cbeeb, _ffeac = d.Token()
	if _ffeac != nil {
		return _ffeac
	}
	if _ddef, _bceaf := _cbeeb.(_d.EndElement); _bceaf && _ddef.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbeeb)
}
func (_ggbfe ST_EffectContainerType) Validate() error { return _ggbfe.ValidateWithPath("") }
func (_gdaaga *Tbl) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074b\u006c"
	return _gdaaga.CT_Table.MarshalXML(e, start)
}
func (_gdagf *CT_Shape3D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fbdgf := range start.Attr {
		if _fbdgf.Name.Local == "\u007a" {
			_cfagg, _febe := ParseUnionST_Coordinate(_fbdgf.Value)
			if _febe != nil {
				return _febe
			}
			_gdagf.ZAttr = &_cfagg
			continue
		}
		if _fbdgf.Name.Local == "\u0065\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048" {
			_adfgb, _egdgg := _c.ParseInt(_fbdgf.Value, 10, 64)
			if _egdgg != nil {
				return _egdgg
			}
			_gdagf.ExtrusionHAttr = &_adfgb
			continue
		}
		if _fbdgf.Name.Local == "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0057" {
			_dfabea, _fcfed := _c.ParseInt(_fbdgf.Value, 10, 64)
			if _fcfed != nil {
				return _fcfed
			}
			_gdagf.ContourWAttr = &_dfabea
			continue
		}
		if _fbdgf.Name.Local == "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c" {
			_gdagf.PrstMaterialAttr.UnmarshalXMLAttr(_fbdgf)
			continue
		}
	}
_cdda:
	for {
		_cfagc, _gagd := d.Token()
		if _gagd != nil {
			return _gagd
		}
		switch _ddegg := _cfagc.(type) {
		case _d.StartElement:
			switch _ddegg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0054"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0054"}:
				_gdagf.BevelT = NewCT_Bevel()
				if _cfcad := d.DecodeElement(_gdagf.BevelT, &_ddegg); _cfcad != nil {
					return _cfcad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0042"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0042"}:
				_gdagf.BevelB = NewCT_Bevel()
				if _bfagf := d.DecodeElement(_gdagf.BevelB, &_ddegg); _bfagf != nil {
					return _bfagf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074r\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074r\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"}:
				_gdagf.ExtrusionClr = NewCT_Color()
				if _caagf := d.DecodeElement(_gdagf.ExtrusionClr, &_ddegg); _caagf != nil {
					return _caagf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}:
				_gdagf.ContourClr = NewCT_Color()
				if _dacgg := d.DecodeElement(_gdagf.ContourClr, &_ddegg); _dacgg != nil {
					return _dacgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdagf.ExtLst = NewCT_OfficeArtExtensionList()
				if _fffef := d.DecodeElement(_gdagf.ExtLst, &_ddegg); _fffef != nil {
					return _fffef
				}
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0068\u0061\u0070\u0065\u0033\u0044\u0020\u0025\u0076", _ddegg.Name)
				if _acefd := d.Skip(); _acefd != nil {
					return _acefd
				}
			}
		case _d.EndElement:
			break _cdda
		case _d.CharData:
		}
	}
	return nil
}
func (_gaega ST_TextWrappingType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gaega.String(), start)
}

type CT_Color struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_efbcg ST_LineEndWidth) String() string {
	switch _efbcg {
	case 0:
		return ""
	case 1:
		return "\u0073\u006d"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u006c\u0067"
	}
	return ""
}

// Validate validates the EG_LineJoinProperties and its children
func (_ebafc *EG_LineJoinProperties) Validate() error {
	return _ebafc.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_SystemColor and its children
func (_bbbedg *CT_SystemColor) Validate() error {
	return _bbbedg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006dC\u006f\u006c\u006f\u0072")
}

// Validate validates the CT_FillStyleList and its children
func (_bgfe *CT_FillStyleList) Validate() error {
	return _bgfe.ValidateWithPath("\u0043\u0054_\u0046\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074")
}
func (_cggde *ST_TextWrappingType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fdcbf, _bffeb := d.Token()
	if _bffeb != nil {
		return _bffeb
	}
	if _aabfe, _abcbdg := _fdcbf.(_d.EndElement); _abcbdg && _aabfe.Name == start.Name {
		*_cggde = 1
		return nil
	}
	if _gfced, _ffabf := _fdcbf.(_d.CharData); !_ffabf {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdcbf)
	} else {
		switch string(_gfced) {
		case "":
			*_cggde = 0
		case "\u006e\u006f\u006e\u0065":
			*_cggde = 1
		case "\u0073\u0071\u0075\u0061\u0072\u0065":
			*_cggde = 2
		}
	}
	_fdcbf, _bffeb = d.Token()
	if _bffeb != nil {
		return _bffeb
	}
	if _fgbcd, _ffacf := _fdcbf.(_d.EndElement); _ffacf && _fgbcd.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdcbf)
}
func NewCT_Ratio() *CT_Ratio { _bgac := &CT_Ratio{}; return _bgac }
func (_gdab *CT_GvmlGraphicFrameNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gdab.CNvPr = NewCT_NonVisualDrawingProps()
	_gdab.CNvGraphicFramePr = NewCT_NonVisualGraphicFrameProperties()
_egdc:
	for {
		_dfcg, _bfcdf := d.Token()
		if _bfcdf != nil {
			return _bfcdf
		}
		switch _fdgbe := _dfcg.(type) {
		case _d.StartElement:
			switch _fdgbe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _dcbf := d.DecodeElement(_gdab.CNvPr, &_fdgbe); _dcbf != nil {
					return _dcbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _ecefe := d.DecodeElement(_gdab.CNvGraphicFramePr, &_fdgbe); _ecefe != nil {
					return _ecefe
				}
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061m\u0065\u004eon\u0056\u0069\u0073u\u0061\u006c\u0020\u0025\u0076", _fdgbe.Name)
				if _cdgfg := d.Skip(); _cdgfg != nil {
					return _cdgfg
				}
			}
		case _d.EndElement:
			break _egdc
		case _d.CharData:
		}
	}
	return nil
}
func (_beddf *ST_TextUnderlineType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_baeff, _accea := d.Token()
	if _accea != nil {
		return _accea
	}
	if _abeeg, _bfgcg := _baeff.(_d.EndElement); _bfgcg && _abeeg.Name == start.Name {
		*_beddf = 1
		return nil
	}
	if _eegdg, _bbgae := _baeff.(_d.CharData); !_bbgae {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _baeff)
	} else {
		switch string(_eegdg) {
		case "":
			*_beddf = 0
		case "\u006e\u006f\u006e\u0065":
			*_beddf = 1
		case "\u0077\u006f\u0072d\u0073":
			*_beddf = 2
		case "\u0073\u006e\u0067":
			*_beddf = 3
		case "\u0064\u0062\u006c":
			*_beddf = 4
		case "\u0068\u0065\u0061v\u0079":
			*_beddf = 5
		case "\u0064\u006f\u0074\u0074\u0065\u0064":
			*_beddf = 6
		case "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079":
			*_beddf = 7
		case "\u0064\u0061\u0073\u0068":
			*_beddf = 8
		case "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y":
			*_beddf = 9
		case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067":
			*_beddf = 10
		case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079":
			*_beddf = 11
		case "\u0064o\u0074\u0044\u0061\u0073\u0068":
			*_beddf = 12
		case "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
			*_beddf = 13
		case "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068":
			*_beddf = 14
		case "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
			*_beddf = 15
		case "\u0077\u0061\u0076\u0079":
			*_beddf = 16
		case "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y":
			*_beddf = 17
		case "\u0077a\u0076\u0079\u0044\u0062\u006c":
			*_beddf = 18
		}
	}
	_baeff, _accea = d.Token()
	if _accea != nil {
		return _accea
	}
	if _ecafbf, _deadc := _baeff.(_d.EndElement); _deadc && _ecafbf.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _baeff)
}

type CT_Bevel struct {
	WAttr    *int64
	HAttr    *int64
	PrstAttr ST_BevelPresetType
}

func (_ffbc *CT_GlowEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gacdb := range start.Attr {
		if _gacdb.Name.Local == "\u0072\u0061\u0064" {
			_aabf, _bebca := _c.ParseInt(_gacdb.Value, 10, 64)
			if _bebca != nil {
				return _bebca
			}
			_ffbc.RadAttr = &_aabf
			continue
		}
	}
_debae:
	for {
		_bddge, _eagdg := d.Token()
		if _eagdg != nil {
			return _eagdg
		}
		switch _egeb := _bddge.(type) {
		case _d.StartElement:
			switch _egeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_ffbc.ScrgbClr = NewCT_ScRgbColor()
				if _bffe := d.DecodeElement(_ffbc.ScrgbClr, &_egeb); _bffe != nil {
					return _bffe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_ffbc.SrgbClr = NewCT_SRgbColor()
				if _ecdg := d.DecodeElement(_ffbc.SrgbClr, &_egeb); _ecdg != nil {
					return _ecdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_ffbc.HslClr = NewCT_HslColor()
				if _aafe := d.DecodeElement(_ffbc.HslClr, &_egeb); _aafe != nil {
					return _aafe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_ffbc.SysClr = NewCT_SystemColor()
				if _geegb := d.DecodeElement(_ffbc.SysClr, &_egeb); _geegb != nil {
					return _geegb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_ffbc.SchemeClr = NewCT_SchemeColor()
				if _accga := d.DecodeElement(_ffbc.SchemeClr, &_egeb); _accga != nil {
					return _accga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ffbc.PrstClr = NewCT_PresetColor()
				if _abdgb := d.DecodeElement(_ffbc.PrstClr, &_egeb); _abdgb != nil {
					return _abdgb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047l\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074 \u0025\u0076", _egeb.Name)
				if _cbecc := d.Skip(); _cbecc != nil {
					return _cbecc
				}
			}
		case _d.EndElement:
			break _debae
		case _d.CharData:
		}
	}
	return nil
}
func (_acaad *CT_TableCell) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _acaad.RowSpanAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072o\u0077\u0053\u0070\u0061\u006e"}, Value: _dg.Sprintf("\u0025\u0076", *_acaad.RowSpanAttr)})
	}
	if _acaad.GridSpanAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u006e"}, Value: _dg.Sprintf("\u0025\u0076", *_acaad.GridSpanAttr)})
	}
	if _acaad.HMergeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u004d\u0065\u0072\u0067\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_acaad.HMergeAttr))})
	}
	if _acaad.VMergeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u004d\u0065\u0072\u0067\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_acaad.VMergeAttr))})
	}
	if _acaad.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_acaad.IdAttr)})
	}
	e.EncodeToken(start)
	if _acaad.TxBody != nil {
		_gbabg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_acaad.TxBody, _gbabg)
	}
	if _acaad.TcPr != nil {
		_fcfab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0063\u0050\u0072"}}
		e.EncodeElement(_acaad.TcPr, _fcfab)
	}
	if _acaad.ExtLst != nil {
		_gagab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_acaad.ExtLst, _gagab)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cddf *ST_TextShapeType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dgcea, _aafafe := d.Token()
	if _aafafe != nil {
		return _aafafe
	}
	if _added, _acfeg := _dgcea.(_d.EndElement); _acfeg && _added.Name == start.Name {
		*_cddf = 1
		return nil
	}
	if _bddda, _cbbea := _dgcea.(_d.CharData); !_cbbea {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgcea)
	} else {
		switch string(_bddda) {
		case "":
			*_cddf = 0
		case "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065":
			*_cddf = 1
		case "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n":
			*_cddf = 2
		case "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070":
			*_cddf = 3
		case "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_cddf = 4
		case "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064":
			*_cddf = 5
		case "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e":
			*_cddf = 6
		case "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064":
			*_cddf = 7
		case "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065":
			*_cddf = 8
		case "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065":
			*_cddf = 9
		case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070":
			*_cddf = 10
		case "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e":
			*_cddf = 11
		case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065":
			*_cddf = 12
		case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e":
			*_cddf = 13
		case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072":
			*_cddf = 14
		case "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072":
			*_cddf = 15
		case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072":
			*_cddf = 16
		case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072":
			*_cddf = 17
		case "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070":
			*_cddf = 18
		case "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e":
			*_cddf = 19
		case "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p":
			*_cddf = 20
		case "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e":
			*_cddf = 21
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651":
			*_cddf = 22
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652":
			*_cddf = 23
		case "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031":
			*_cddf = 24
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654":
			*_cddf = 25
		case "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065":
			*_cddf = 26
		case "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065":
			*_cddf = 27
		case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
			*_cddf = 28
		case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
			*_cddf = 29
		case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
			*_cddf = 30
		case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
			*_cddf = 31
		case "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065":
			*_cddf = 32
		case "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e":
			*_cddf = 33
		case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074":
			*_cddf = 34
		case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074":
			*_cddf = 35
		case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070":
			*_cddf = 36
		case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
			*_cddf = 37
		case "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070":
			*_cddf = 38
		case "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e":
			*_cddf = 39
		case "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070":
			*_cddf = 40
		case "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
			*_cddf = 41
		}
	}
	_dgcea, _aafafe = d.Token()
	if _aafafe != nil {
		return _aafafe
	}
	if _bdgdb, _ffbea := _dgcea.(_d.EndElement); _ffbea && _bdgdb.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgcea)
}
func NewCT_RegularTextRun() *CT_RegularTextRun { _eadcc := &CT_RegularTextRun{}; return _eadcc }
func (_agfdc ST_BlipCompression) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_agfdc.String(), start)
}

// Validate validates the CT_TileInfoProperties and its children
func (_afeffb *CT_TileInfoProperties) Validate() error {
	return _afeffb.ValidateWithPath("C\u0054\u005f\u0054\u0069le\u0049n\u0066\u006f\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_aabgd ST_BevelPresetType) String() string {
	switch _aabgd {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074"
	case 2:
		return "\u0063\u0069\u0072\u0063\u006c\u0065"
	case 3:
		return "\u0073\u006c\u006fp\u0065"
	case 4:
		return "\u0063\u0072\u006fs\u0073"
	case 5:
		return "\u0061\u006e\u0067l\u0065"
	case 6:
		return "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed"
	case 7:
		return "\u0063\u006f\u006e\u0076\u0065\u0078"
	case 8:
		return "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et"
	case 9:
		return "\u0064\u0069\u0076o\u0074"
	case 10:
		return "\u0072\u0069\u0062\u006c\u0065\u0074"
	case 11:
		return "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065"
	case 12:
		return "\u0061r\u0074\u0044\u0065\u0063\u006f"
	}
	return ""
}

// Validate validates the CT_SupplementalFont and its children
func (_bdaba *CT_SupplementalFont) Validate() error {
	return _bdaba.ValidateWithPath("\u0043\u0054\u005f\u0053up\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074")
}
func (_febgdg *CT_TextNoBullet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_gdfgg, _abgcd := d.Token()
		if _abgcd != nil {
			return _dg.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004e\u006fB\u0075\u006c\u006ce\u0074:\u0020\u0025\u0073", _abgcd)
		}
		if _dgaeb, _ffbgc := _gdfgg.(_d.EndElement); _ffbgc && _dgaeb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fcag *CT_LightRig) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_ddgf, _fbaba := _fcag.RigAttr.MarshalXMLAttr(_d.Name{Local: "\u0072\u0069\u0067"})
	if _fbaba != nil {
		return _fbaba
	}
	start.Attr = append(start.Attr, _ddgf)
	_ddgf, _fbaba = _fcag.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
	if _fbaba != nil {
		return _fbaba
	}
	start.Attr = append(start.Attr, _ddgf)
	e.EncodeToken(start)
	if _fcag.Rot != nil {
		_aeadg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072o\u0074"}}
		e.EncodeElement(_fcag.Rot, _aeadg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dfagb *CT_HSLEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _efbbb := range start.Attr {
		if _efbbb.Name.Local == "\u0068\u0075\u0065" {
			_dbgeg, _cafd := _c.ParseInt(_efbbb.Value, 10, 32)
			if _cafd != nil {
				return _cafd
			}
			_beccg := int32(_dbgeg)
			_dfagb.HueAttr = &_beccg
			continue
		}
		if _efbbb.Name.Local == "\u0073\u0061\u0074" {
			_eaegfe, _cdgde := ParseUnionST_FixedPercentage(_efbbb.Value)
			if _cdgde != nil {
				return _cdgde
			}
			_dfagb.SatAttr = &_eaegfe
			continue
		}
		if _efbbb.Name.Local == "\u006c\u0075\u006d" {
			_ffae, _dabaf := ParseUnionST_FixedPercentage(_efbbb.Value)
			if _dabaf != nil {
				return _dabaf
			}
			_dfagb.LumAttr = &_ffae
			continue
		}
	}
	for {
		_dbcbd, _ddff := d.Token()
		if _ddff != nil {
			return _dg.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0053L\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _ddff)
		}
		if _bcdb, _cdgeg := _dbcbd.(_d.EndElement); _cdgeg && _bcdb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the EG_Media and its children
func (_dabffb *EG_Media) Validate() error {
	return _dabffb.ValidateWithPath("\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061")
}
func NewCT_ColorSchemeList() *CT_ColorSchemeList { _gcgd := &CT_ColorSchemeList{}; return _gcgd }

// ValidateWithPath validates the CT_GraphicalObject and its children, prefixing error messages with path
func (_ceca *CT_GraphicalObject) ValidateWithPath(path string) error {
	if _adca := _ceca.GraphicData.ValidateWithPath(path + "\u002f\u0047\u0072a\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"); _adca != nil {
		return _adca
	}
	return nil
}

type ST_PresetColorVal byte

func NewCT_SolidColorFillProperties() *CT_SolidColorFillProperties {
	_ggea := &CT_SolidColorFillProperties{}
	return _ggea
}
func NewCT_ConnectionSiteList() *CT_ConnectionSiteList {
	_cgae := &CT_ConnectionSiteList{}
	return _cgae
}

type CT_SRgbColor struct {
	ValAttr           string
	EG_ColorTransform []*EG_ColorTransform
}
type ST_CompoundLine byte

// Validate validates the CT_AudioCDTime and its children
func (_abcb *CT_AudioCDTime) Validate() error {
	return _abcb.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043D\u0054\u0069\u006d\u0065")
}
func (_gdfga ST_TextAlignType) ValidateWithPath(path string) error {
	switch _gdfga {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdfga))
	}
	return nil
}

type AG_Locking struct {
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}
type EG_TextAutofit struct {
	NoAutofit   *CT_TextNoAutofit
	NormAutofit *CT_TextNormalAutofit
	SpAutoFit   *CT_TextShapeAutofit
}
type CT_ComplementTransform struct{}

// Validate validates the CT_StyleMatrix and its children
func (_afecd *CT_StyleMatrix) Validate() error {
	return _afecd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004da\u0074\u0072\u0069\u0078")
}
func (_aabeab ST_LightRigDirection) String() string {
	switch _aabeab {
	case 0:
		return ""
	case 1:
		return "\u0074\u006c"
	case 2:
		return "\u0074"
	case 3:
		return "\u0074\u0072"
	case 4:
		return "\u006c"
	case 5:
		return "\u0072"
	case 6:
		return "\u0062\u006c"
	case 7:
		return "\u0062"
	case 8:
		return "\u0062\u0072"
	}
	return ""
}
func (_ccae *CT_Path2DCubicBezierTo) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ccdbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0074"}}
	for _, _ebcbb := range _ccae.Pt {
		e.EncodeElement(_ebcbb, _ccdbg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableCellBorderStyle and its children
func (_gceac *CT_TableCellBorderStyle) Validate() error {
	return _gceac.ValidateWithPath("\u0043\u0054\u005fTa\u0062\u006c\u0065\u0043\u0065\u006c\u006c\u0042\u006f\u0072\u0064\u0065\u0072\u0053\u0074\u0079\u006c\u0065")
}
func (_fdfbf ST_TextTabAlignType) Validate() error { return _fdfbf.ValidateWithPath("") }
func (_gfdbb *CT_TableStyleTextStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _agcc := range start.Attr {
		if _agcc.Name.Local == "\u0062" {
			_gfdbb.BAttr.UnmarshalXMLAttr(_agcc)
			continue
		}
		if _agcc.Name.Local == "\u0069" {
			_gfdbb.IAttr.UnmarshalXMLAttr(_agcc)
			continue
		}
	}
_cdefb:
	for {
		_adgddd, _dddbdf := d.Token()
		if _dddbdf != nil {
			return _dddbdf
		}
		switch _gfbge := _adgddd.(type) {
		case _d.StartElement:
			switch _gfbge.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_gfdbb.Font = NewCT_FontCollection()
				if _ddbaa := d.DecodeElement(_gfdbb.Font, &_gfbge); _ddbaa != nil {
					return _ddbaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				_gfdbb.FontRef = NewCT_FontReference()
				if _gdagc := d.DecodeElement(_gfdbb.FontRef, &_gfbge); _gdagc != nil {
					return _gdagc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_gfdbb.ScrgbClr = NewCT_ScRgbColor()
				if _cbed := d.DecodeElement(_gfdbb.ScrgbClr, &_gfbge); _cbed != nil {
					return _cbed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_gfdbb.SrgbClr = NewCT_SRgbColor()
				if _ggcdc := d.DecodeElement(_gfdbb.SrgbClr, &_gfbge); _ggcdc != nil {
					return _ggcdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_gfdbb.HslClr = NewCT_HslColor()
				if _gcefg := d.DecodeElement(_gfdbb.HslClr, &_gfbge); _gcefg != nil {
					return _gcefg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_gfdbb.SysClr = NewCT_SystemColor()
				if _aacgd := d.DecodeElement(_gfdbb.SysClr, &_gfbge); _aacgd != nil {
					return _aacgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_gfdbb.SchemeClr = NewCT_SchemeColor()
				if _cfebe := d.DecodeElement(_gfdbb.SchemeClr, &_gfbge); _cfebe != nil {
					return _cfebe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_gfdbb.PrstClr = NewCT_PresetColor()
				if _egafd := d.DecodeElement(_gfdbb.PrstClr, &_gfbge); _egafd != nil {
					return _egafd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfdbb.ExtLst = NewCT_OfficeArtExtensionList()
				if _edcff := d.DecodeElement(_gfdbb.ExtLst, &_gfbge); _edcff != nil {
					return _edcff
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _gfbge.Name)
				if _gfbaa := d.Skip(); _gfbaa != nil {
					return _gfbaa
				}
			}
		case _d.EndElement:
			break _cdefb
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Cell3D and its children
func (_fcaa *CT_Cell3D) Validate() error {
	return _fcaa.ValidateWithPath("\u0043T\u005f\u0043\u0065\u006c\u006c\u0033D")
}

// Validate validates the CT_OfficeArtExtensionList and its children
func (_aafdd *CT_OfficeArtExtensionList) Validate() error {
	return _aafdd.ValidateWithPath("\u0043T\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t")
}

// Validate validates the CT_AnimationDgmBuildProperties and its children
func (_dge *CT_AnimationDgmBuildProperties) Validate() error {
	return _dge.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0044\u0067\u006d\u0042\u0075\u0069l\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func NewCT_ColorReplaceEffect() *CT_ColorReplaceEffect {
	_fade := &CT_ColorReplaceEffect{}
	return _fade
}

type CT_AlphaModulateEffect struct{ Cont *CT_EffectContainer }

func (_acdded *EG_Geometry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aefc:
	for {
		_bffge, _ebcfdd := d.Token()
		if _ebcfdd != nil {
			return _ebcfdd
		}
		switch _ebfdcb := _bffge.(type) {
		case _d.StartElement:
			switch _ebfdcb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_acdded.CustGeom = NewCT_CustomGeometry2D()
				if _gadfg := d.DecodeElement(_acdded.CustGeom, &_ebfdcb); _gadfg != nil {
					return _gadfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_acdded.PrstGeom = NewCT_PresetGeometry2D()
				if _fbbcb := d.DecodeElement(_acdded.PrstGeom, &_ebfdcb); _fbbcb != nil {
					return _fbbcb
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0020\u0025\u0076", _ebfdcb.Name)
				if _cfbg := d.Skip(); _cfbg != nil {
					return _cfbg
				}
			}
		case _d.EndElement:
			break _aefc
		case _d.CharData:
		}
	}
	return nil
}
func (_dfgca *CT_LineProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _adgae := range start.Attr {
		if _adgae.Name.Local == "\u0077" {
			_eebdg, _fbdgc := _c.ParseInt(_adgae.Value, 10, 32)
			if _fbdgc != nil {
				return _fbdgc
			}
			_aegba := int32(_eebdg)
			_dfgca.WAttr = &_aegba
			continue
		}
		if _adgae.Name.Local == "\u0063\u006d\u0070\u0064" {
			_dfgca.CmpdAttr.UnmarshalXMLAttr(_adgae)
			continue
		}
		if _adgae.Name.Local == "\u0063\u0061\u0070" {
			_dfgca.CapAttr.UnmarshalXMLAttr(_adgae)
			continue
		}
		if _adgae.Name.Local == "\u0061\u006c\u0067\u006e" {
			_dfgca.AlgnAttr.UnmarshalXMLAttr(_adgae)
			continue
		}
	}
_adgaef:
	for {
		_fggcc, _gdeb := d.Token()
		if _gdeb != nil {
			return _gdeb
		}
		switch _cffec := _fggcc.(type) {
		case _d.StartElement:
			switch _cffec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_dfgca.NoFill = NewCT_NoFillProperties()
				if _fcgg := d.DecodeElement(_dfgca.NoFill, &_cffec); _fcgg != nil {
					return _fcgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_dfgca.SolidFill = NewCT_SolidColorFillProperties()
				if _dcbfd := d.DecodeElement(_dfgca.SolidFill, &_cffec); _dcbfd != nil {
					return _dcbfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_dfgca.GradFill = NewCT_GradientFillProperties()
				if _cfbaf := d.DecodeElement(_dfgca.GradFill, &_cffec); _cfbaf != nil {
					return _cfbaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_dfgca.PattFill = NewCT_PatternFillProperties()
				if _adag := d.DecodeElement(_dfgca.PattFill, &_cffec); _adag != nil {
					return _adag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_dfgca.PrstDash = NewCT_PresetLineDashProperties()
				if _daegd := d.DecodeElement(_dfgca.PrstDash, &_cffec); _daegd != nil {
					return _daegd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_dfgca.CustDash = NewCT_DashStopList()
				if _gagad := d.DecodeElement(_dfgca.CustDash, &_cffec); _gagad != nil {
					return _gagad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}:
				_dfgca.Round = NewCT_LineJoinRound()
				if _acegc := d.DecodeElement(_dfgca.Round, &_cffec); _acegc != nil {
					return _acegc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				_dfgca.Bevel = NewCT_LineJoinBevel()
				if _dbegf := d.DecodeElement(_dfgca.Bevel, &_cffec); _dbegf != nil {
					return _dbegf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}:
				_dfgca.Miter = NewCT_LineJoinMiterProperties()
				if _ceac := d.DecodeElement(_dfgca.Miter, &_cffec); _ceac != nil {
					return _ceac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0045\u006e\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0045\u006e\u0064"}:
				_dfgca.HeadEnd = NewCT_LineEndProperties()
				if _abbfg := d.DecodeElement(_dfgca.HeadEnd, &_cffec); _abbfg != nil {
					return _abbfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0069\u006c\u0045\u006e\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0069\u006c\u0045\u006e\u0064"}:
				_dfgca.TailEnd = NewCT_LineEndProperties()
				if _fgge := d.DecodeElement(_dfgca.TailEnd, &_cffec); _fgge != nil {
					return _fgge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfgca.ExtLst = NewCT_OfficeArtExtensionList()
				if _cdbe := d.DecodeElement(_dfgca.ExtLst, &_cffec); _cdbe != nil {
					return _cdbe
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cffec.Name)
				if _efcfe := d.Skip(); _efcfe != nil {
					return _efcfe
				}
			}
		case _d.EndElement:
			break _adgaef
		case _d.CharData:
		}
	}
	return nil
}

type CT_Scale2D struct {
	Sx *CT_Ratio
	Sy *CT_Ratio
}

func (_fcaec ST_AnimationChartBuildType) String() string {
	if _fcaec.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		return _fcaec.ST_AnimationBuildType.String()
	}
	if _fcaec.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		return _fcaec.ST_AnimationChartOnlyBuildType.String()
	}
	return ""
}
func (_dggce ST_LineCap) String() string {
	switch _dggce {
	case 0:
		return ""
	case 1:
		return "\u0072\u006e\u0064"
	case 2:
		return "\u0073\u0071"
	case 3:
		return "\u0066\u006c\u0061\u0074"
	}
	return ""
}
func (_egeeb ST_AnimationChartBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _egeeb.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		e.EncodeToken(_d.CharData(_egeeb.ST_AnimationBuildType.String()))
	}
	if _egeeb.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		e.EncodeToken(_d.CharData(_egeeb.ST_AnimationChartOnlyBuildType.String()))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

type CT_ConnectionSite struct {
	AngAttr ST_AdjAngle
	Pos     *CT_AdjPoint2D
}

// ValidateWithPath validates the CT_FontScheme and its children, prefixing error messages with path
func (_feea *CT_FontScheme) ValidateWithPath(path string) error {
	if _gdcgg := _feea.MajorFont.ValidateWithPath(path + "\u002f\u004d\u0061\u006a\u006f\u0072\u0046\u006f\u006e\u0074"); _gdcgg != nil {
		return _gdcgg
	}
	if _ffca := _feea.MinorFont.ValidateWithPath(path + "\u002f\u004d\u0069\u006e\u006f\u0072\u0046\u006f\u006e\u0074"); _ffca != nil {
		return _ffca
	}
	if _feea.ExtLst != nil {
		if _fbdb := _feea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbdb != nil {
			return _fbdb
		}
	}
	return nil
}

type CT_RegularTextRun struct {
	RPr *CT_TextCharacterProperties
	T   string
}
type CT_AlphaOutsetEffect struct{ RadAttr *ST_Coordinate }

func (_cbdcd *CT_TextUnderlineFillFollowText) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_cbfbee, _fbgd := d.Token()
		if _fbgd != nil {
			return _dg.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0046\u006f\u006c\u006c\u006fw\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _fbgd)
		}
		if _eagfg, _dbedba := _cbfbee.(_d.EndElement); _dbedba && _eagfg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bgccg *CT_TextBulletSizePercent) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bgccg.ValAttr = "\u0031\u0030\u0030\u0025"
	for _, _egcge := range start.Attr {
		if _egcge.Name.Local == "\u0076\u0061\u006c" {
			_cfccg, _dgdcd := _egcge.Value, error(nil)
			if _dgdcd != nil {
				return _dgdcd
			}
			_bgccg.ValAttr = _cfccg
			continue
		}
	}
	for {
		_adfgf, _fcga := d.Token()
		if _fcga != nil {
			return _dg.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054ext\u0042ul\u006c\u0065\u0074\u0053\u0069\u007a\u0065Pe\u0072\u0063\u0065\u006e\u0074\u003a\u0020%\u0073", _fcga)
		}
		if _cbfcg, _fdcec := _adfgf.(_d.EndElement); _fdcec && _cbfcg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fedde ST_ChartBuildStep) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fedde.String(), start)
}
func (_efcga ST_CompoundLine) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gffec := _d.Attr{}
	_gffec.Name = name
	switch _efcga {
	case ST_CompoundLineUnset:
		_gffec.Value = ""
	case ST_CompoundLineSng:
		_gffec.Value = "\u0073\u006e\u0067"
	case ST_CompoundLineDbl:
		_gffec.Value = "\u0064\u0062\u006c"
	case ST_CompoundLineThickThin:
		_gffec.Value = "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n"
	case ST_CompoundLineThinThick:
		_gffec.Value = "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k"
	case ST_CompoundLineTri:
		_gffec.Value = "\u0074\u0072\u0069"
	}
	return _gffec, nil
}

// Validate validates the TblStyleLst and its children
func (_gcag *TblStyleLst) Validate() error {
	return _gcag.ValidateWithPath("T\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074")
}

// ValidateWithPath validates the CT_FixedPercentage and its children, prefixing error messages with path
func (_ebbf *CT_FixedPercentage) ValidateWithPath(path string) error {
	if _bcceb := _ebbf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bcceb != nil {
		return _bcceb
	}
	return nil
}
func NewCT_StyleMatrix() *CT_StyleMatrix {
	_bgdcc := &CT_StyleMatrix{}
	_bgdcc.FillStyleLst = NewCT_FillStyleList()
	_bgdcc.LnStyleLst = NewCT_LineStyleList()
	_bgdcc.EffectStyleLst = NewCT_EffectStyleList()
	_bgdcc.BgFillStyleLst = NewCT_BackgroundFillStyleList()
	return _bgdcc
}

const (
	ST_TextFontAlignTypeUnset ST_TextFontAlignType = 0
	ST_TextFontAlignTypeAuto  ST_TextFontAlignType = 1
	ST_TextFontAlignTypeT     ST_TextFontAlignType = 2
	ST_TextFontAlignTypeCtr   ST_TextFontAlignType = 3
	ST_TextFontAlignTypeBase  ST_TextFontAlignType = 4
	ST_TextFontAlignTypeB     ST_TextFontAlignType = 5
)

func (_dfcef *CT_Path2DQuadBezierTo) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ceaeb:
	for {
		_geda, _gbeba := d.Token()
		if _gbeba != nil {
			return _gbeba
		}
		switch _dfgbd := _geda.(type) {
		case _d.StartElement:
			switch _dfgbd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				_dcag := NewCT_AdjPoint2D()
				if _gdff := d.DecodeElement(_dcag, &_dfgbd); _gdff != nil {
					return _gdff
				}
				_dfcef.Pt = append(_dfcef.Pt, _dcag)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u0051\u0075\u0061\u0064\u0042\u0065\u007a\u0069\u0065\u0072\u0054\u006f\u0020\u0025\u0076", _dfgbd.Name)
				if _edba := d.Skip(); _edba != nil {
					return _edba
				}
			}
		case _d.EndElement:
			break _ceaeb
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_NonVisualContentPartProperties and its children
func (_bbdfa *CT_NonVisualContentPartProperties) Validate() error {
	return _bbdfa.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u006eV\u0069\u0073\u0075\u0061\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050a\u0072\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

type CT_TextBulletSizePoint struct{ ValAttr int32 }

func NewCT_TableCellBorderStyle() *CT_TableCellBorderStyle {
	_gefebe := &CT_TableCellBorderStyle{}
	return _gefebe
}
func (_cbga *CT_ColorMRU) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cbga.EG_ColorChoice != nil {
		for _, _edeb := range _cbga.EG_ColorChoice {
			_edeb.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fdaca *ST_TextTabAlignType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fdaca = 0
	case "\u006c":
		*_fdaca = 1
	case "\u0063\u0074\u0072":
		*_fdaca = 2
	case "\u0072":
		*_fdaca = 3
	case "\u0064\u0065\u0063":
		*_fdaca = 4
	}
	return nil
}
func NewCT_GvmlShapeNonVisual() *CT_GvmlShapeNonVisual {
	_gbgga := &CT_GvmlShapeNonVisual{}
	_gbgga.CNvPr = NewCT_NonVisualDrawingProps()
	_gbgga.CNvSpPr = NewCT_NonVisualDrawingShapeProps()
	return _gbgga
}

type CT_PositiveFixedAngle struct{ ValAttr int32 }

func ParseUnionST_FixedPercentage(s string) (ST_FixedPercentage, error) {
	_bbacbg := ST_FixedPercentage{}
	if _fe.ST_FixedPercentagePatternRe.MatchString(s) {
		_bbacbg.ST_FixedPercentage = &ST_Percentage{}
		_bbacbg.ST_FixedPercentage.ST_Percentage = &s
	} else {
		_fdfcd, _ffeeg := _c.ParseInt(s, 10, 64)
		if _ffeeg != nil {
			return _bbacbg, _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _ffeeg)
		}
		_afdaab := int32(_fdfcd)
		_bbacbg.ST_FixedPercentageDecimal = &_afdaab
	}
	return _bbacbg, nil
}
func (_dedda *ST_BevelPresetType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dedda = 0
	case "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074":
		*_dedda = 1
	case "\u0063\u0069\u0072\u0063\u006c\u0065":
		*_dedda = 2
	case "\u0073\u006c\u006fp\u0065":
		*_dedda = 3
	case "\u0063\u0072\u006fs\u0073":
		*_dedda = 4
	case "\u0061\u006e\u0067l\u0065":
		*_dedda = 5
	case "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed":
		*_dedda = 6
	case "\u0063\u006f\u006e\u0076\u0065\u0078":
		*_dedda = 7
	case "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et":
		*_dedda = 8
	case "\u0064\u0069\u0076o\u0074":
		*_dedda = 9
	case "\u0072\u0069\u0062\u006c\u0065\u0074":
		*_dedda = 10
	case "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065":
		*_dedda = 11
	case "\u0061r\u0074\u0044\u0065\u0063\u006f":
		*_dedda = 12
	}
	return nil
}
func (_gd *AG_Locking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eb := range start.Attr {
		if _eb.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_ge, _a := _c.ParseBool(_eb.Value)
			if _a != nil {
				return _a
			}
			_gd.NoGrpAttr = &_ge
			continue
		}
		if _eb.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_dab, _gg := _c.ParseBool(_eb.Value)
			if _gg != nil {
				return _gg
			}
			_gd.NoSelectAttr = &_dab
			continue
		}
		if _eb.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_fef, _cc := _c.ParseBool(_eb.Value)
			if _cc != nil {
				return _cc
			}
			_gd.NoRotAttr = &_fef
			continue
		}
		if _eb.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_ba, _ca := _c.ParseBool(_eb.Value)
			if _ca != nil {
				return _ca
			}
			_gd.NoChangeAspectAttr = &_ba
			continue
		}
		if _eb.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_gaf, _cf := _c.ParseBool(_eb.Value)
			if _cf != nil {
				return _cf
			}
			_gd.NoMoveAttr = &_gaf
			continue
		}
		if _eb.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_de, _ae := _c.ParseBool(_eb.Value)
			if _ae != nil {
				return _ae
			}
			_gd.NoResizeAttr = &_de
			continue
		}
		if _eb.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_aa, _cgg := _c.ParseBool(_eb.Value)
			if _cgg != nil {
				return _cgg
			}
			_gd.NoEditPointsAttr = &_aa
			continue
		}
		if _eb.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_dadf, _fd := _c.ParseBool(_eb.Value)
			if _fd != nil {
				return _fd
			}
			_gd.NoAdjustHandlesAttr = &_dadf
			continue
		}
		if _eb.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_gbb, _egb := _c.ParseBool(_eb.Value)
			if _egb != nil {
				return _egb
			}
			_gd.NoChangeArrowheadsAttr = &_gbb
			continue
		}
		if _eb.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_ged, _ce := _c.ParseBool(_eb.Value)
			if _ce != nil {
				return _ce
			}
			_gd.NoChangeShapeTypeAttr = &_ged
			continue
		}
	}
	for {
		_cac, _ggb := d.Token()
		if _ggb != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u003a\u0020%\u0073", _ggb)
		}
		if _bag, _gc := _cac.(_d.EndElement); _gc && _bag.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TableStyle and its children
func (_addfga *CT_TableStyle) Validate() error {
	return _addfga.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065")
}

// Validate validates the Theme and its children
func (_bcbecg *Theme) Validate() error { return _bcbecg.ValidateWithPath("\u0054\u0068\u0065m\u0065") }

// Validate validates the CT_GrayscaleTransform and its children
func (_fece *CT_GrayscaleTransform) Validate() error {
	return _fece.ValidateWithPath("C\u0054\u005f\u0047\u0072ay\u0073c\u0061\u006c\u0065\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d")
}

type CT_CustomColor struct {
	NameAttr  *string
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

// ValidateWithPath validates the CT_EffectReference and its children, prefixing error messages with path
func (_bgaaf *CT_EffectReference) ValidateWithPath(path string) error { return nil }

// Validate validates the EG_ColorTransform and its children
func (_egaff *EG_ColorTransform) Validate() error {
	return _egaff.ValidateWithPath("\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d")
}
func (_geddc *CT_ObjectStyleDefaults) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_efca:
	for {
		_gfcec, _fdfeg := d.Token()
		if _fdfeg != nil {
			return _fdfeg
		}
		switch _gabe := _gfcec.(type) {
		case _d.StartElement:
			switch _gabe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0044e\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0044e\u0066"}:
				_geddc.SpDef = NewCT_DefaultShapeDefinition()
				if _gbecc := d.DecodeElement(_geddc.SpDef, &_gabe); _gbecc != nil {
					return _gbecc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0044e\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0044e\u0066"}:
				_geddc.LnDef = NewCT_DefaultShapeDefinition()
				if _dbfgf := d.DecodeElement(_geddc.LnDef, &_gabe); _dbfgf != nil {
					return _dbfgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0044e\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0044e\u0066"}:
				_geddc.TxDef = NewCT_DefaultShapeDefinition()
				if _gcfbd := d.DecodeElement(_geddc.TxDef, &_gabe); _gcfbd != nil {
					return _gcfbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_geddc.ExtLst = NewCT_OfficeArtExtensionList()
				if _cegca := d.DecodeElement(_geddc.ExtLst, &_gabe); _cegca != nil {
					return _cegca
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004f\u0062\u006a\u0065c\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073\u0020\u0025\u0076", _gabe.Name)
				if _deccg := d.Skip(); _deccg != nil {
					return _deccg
				}
			}
		case _d.EndElement:
			break _efca
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Camera and its children
func (_ebdb *CT_Camera) Validate() error {
	return _ebdb.ValidateWithPath("\u0043T\u005f\u0043\u0061\u006d\u0065\u0072a")
}

const (
	ST_SchemeColorValUnset    ST_SchemeColorVal = 0
	ST_SchemeColorValBg1      ST_SchemeColorVal = 1
	ST_SchemeColorValTx1      ST_SchemeColorVal = 2
	ST_SchemeColorValBg2      ST_SchemeColorVal = 3
	ST_SchemeColorValTx2      ST_SchemeColorVal = 4
	ST_SchemeColorValAccent1  ST_SchemeColorVal = 5
	ST_SchemeColorValAccent2  ST_SchemeColorVal = 6
	ST_SchemeColorValAccent3  ST_SchemeColorVal = 7
	ST_SchemeColorValAccent4  ST_SchemeColorVal = 8
	ST_SchemeColorValAccent5  ST_SchemeColorVal = 9
	ST_SchemeColorValAccent6  ST_SchemeColorVal = 10
	ST_SchemeColorValHlink    ST_SchemeColorVal = 11
	ST_SchemeColorValFolHlink ST_SchemeColorVal = 12
	ST_SchemeColorValPhClr    ST_SchemeColorVal = 13
	ST_SchemeColorValDk1      ST_SchemeColorVal = 14
	ST_SchemeColorValLt1      ST_SchemeColorVal = 15
	ST_SchemeColorValDk2      ST_SchemeColorVal = 16
	ST_SchemeColorValLt2      ST_SchemeColorVal = 17
)

type CT_SystemColor struct {
	ValAttr           ST_SystemColorVal
	LastClrAttr       *string
	EG_ColorTransform []*EG_ColorTransform
}

// ValidateWithPath validates the CT_TextSpacing and its children, prefixing error messages with path
func (_ddagcg *CT_TextSpacing) ValidateWithPath(path string) error {
	if _ddagcg.SpcPct != nil {
		if _fgceg := _ddagcg.SpcPct.ValidateWithPath(path + "\u002fS\u0070\u0063\u0050\u0063\u0074"); _fgceg != nil {
			return _fgceg
		}
	}
	if _ddagcg.SpcPts != nil {
		if _degdb := _ddagcg.SpcPts.ValidateWithPath(path + "\u002fS\u0070\u0063\u0050\u0074\u0073"); _degdb != nil {
			return _degdb
		}
	}
	return nil
}

type ST_LineEndWidth byte

const ST_TextBulletSizePercentPattern = "\u0030\u002a\u0028\u0028\u0032\u005b\u0035\u002d9\u005d\u0029\u007c([\u0033\u002d\u0039\u005d\u005b\u0030-\u0039\u005d\u0029\u007c\u0028\u005b\u0031\u002d\u0033\u005d\u005b\u0030\u002d\u0039\u005d[\u0030\u002d\u0039\u005d\u0029\u007c\u0034\u00300\u0029\u0025"

type CT_AnimationDgmBuildProperties struct {
	BldAttr *ST_AnimationDgmBuildType
	RevAttr *bool
}

func NewCT_AlphaBiLevelEffect() *CT_AlphaBiLevelEffect { _add := &CT_AlphaBiLevelEffect{}; return _add }

// Validate validates the CT_TextField and its children
func (_aedgd *CT_TextField) Validate() error {
	return _aedgd.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064")
}
func (_fddbe ST_ColorSchemeIndex) ValidateWithPath(path string) error {
	switch _fddbe {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fddbe))
	}
	return nil
}
func NewCT_ColorChangeEffect() *CT_ColorChangeEffect {
	_fgdc := &CT_ColorChangeEffect{}
	_fgdc.ClrFrom = NewCT_Color()
	_fgdc.ClrTo = NewCT_Color()
	return _fgdc
}
func (_bccff *EG_ColorTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bccff.Tint != nil {
		_cgcde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_bccff.Tint, _cgcde)
	}
	if _bccff.Shade != nil {
		_gfcfab := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0068\u0061\u0064\u0065"}}
		e.EncodeElement(_bccff.Shade, _gfcfab)
	}
	if _bccff.Comp != nil {
		_beedab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006f\u006d\u0070"}}
		e.EncodeElement(_bccff.Comp, _beedab)
	}
	if _bccff.Inv != nil {
		_ccgbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0069n\u0076"}}
		e.EncodeElement(_bccff.Inv, _ccgbb)
	}
	if _bccff.Gray != nil {
		_bdfgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0079"}}
		e.EncodeElement(_bccff.Gray, _bdfgb)
	}
	if _bccff.Alpha != nil {
		_ddcgf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u006c\u0070\u0068\u0061"}}
		e.EncodeElement(_bccff.Alpha, _ddcgf)
	}
	if _bccff.AlphaOff != nil {
		_cabfdf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}}
		e.EncodeElement(_bccff.AlphaOff, _cabfdf)
	}
	if _bccff.AlphaMod != nil {
		_geggb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_bccff.AlphaMod, _geggb)
	}
	if _bccff.Hue != nil {
		_cegeab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068u\u0065"}}
		e.EncodeElement(_bccff.Hue, _cegeab)
	}
	if _bccff.HueOff != nil {
		_cgegb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0075\u0065\u004f\u0066\u0066"}}
		e.EncodeElement(_bccff.HueOff, _cgegb)
	}
	if _bccff.HueMod != nil {
		_bggff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0075\u0065\u004d\u006f\u0064"}}
		e.EncodeElement(_bccff.HueMod, _bggff)
	}
	if _bccff.Sat != nil {
		_fbcff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073a\u0074"}}
		e.EncodeElement(_bccff.Sat, _fbcff)
	}
	if _bccff.SatOff != nil {
		_efdgf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0061\u0074\u004f\u0066\u0066"}}
		e.EncodeElement(_bccff.SatOff, _efdgf)
	}
	if _bccff.SatMod != nil {
		_ggafg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0061\u0074\u004d\u006f\u0064"}}
		e.EncodeElement(_bccff.SatMod, _ggafg)
	}
	if _bccff.Lum != nil {
		_fegfg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_bccff.Lum, _fegfg)
	}
	if _bccff.LumOff != nil {
		_cebga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0075\u006d\u004f\u0066\u0066"}}
		e.EncodeElement(_bccff.LumOff, _cebga)
	}
	if _bccff.LumMod != nil {
		_dbfcb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0075\u006d\u004d\u006f\u0064"}}
		e.EncodeElement(_bccff.LumMod, _dbfcb)
	}
	if _bccff.Red != nil {
		_aabaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072e\u0064"}}
		e.EncodeElement(_bccff.Red, _aabaa)
	}
	if _bccff.RedOff != nil {
		_dfffdd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072\u0065\u0064\u004f\u0066\u0066"}}
		e.EncodeElement(_bccff.RedOff, _dfffdd)
	}
	if _bccff.RedMod != nil {
		_bdgad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072\u0065\u0064\u004d\u006f\u0064"}}
		e.EncodeElement(_bccff.RedMod, _bdgad)
	}
	if _bccff.Green != nil {
		_fcgfg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0065\u0065\u006e"}}
		e.EncodeElement(_bccff.Green, _fcgfg)
	}
	if _bccff.GreenOff != nil {
		_cefgc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}}
		e.EncodeElement(_bccff.GreenOff, _cefgc)
	}
	if _bccff.GreenMod != nil {
		_fcfdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}}
		e.EncodeElement(_bccff.GreenMod, _fcfdc)
	}
	if _bccff.Blue != nil {
		_bgced := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0065"}}
		e.EncodeElement(_bccff.Blue, _bgced)
	}
	if _bccff.BlueOff != nil {
		_agfeec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u006c\u0075\u0065\u004f\u0066f"}}
		e.EncodeElement(_bccff.BlueOff, _agfeec)
	}
	if _bccff.BlueMod != nil {
		_adgga := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u006c\u0075\u0065\u004d\u006fd"}}
		e.EncodeElement(_bccff.BlueMod, _adgga)
	}
	if _bccff.Gamma != nil {
		_adggg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0061\u006d\u006d\u0061"}}
		e.EncodeElement(_bccff.Gamma, _adggg)
	}
	if _bccff.InvGamma != nil {
		_cbgdba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}}
		e.EncodeElement(_bccff.InvGamma, _cbgdba)
	}
	return nil
}

type CT_GvmlTextShape struct {
	TxBody *CT_TextBody
	Choice *CT_GvmlTextShapeChoice
	ExtLst *CT_OfficeArtExtensionList
}

func (_gfadc ST_LineEndWidth) ValidateWithPath(path string) error {
	switch _gfadc {
	case 0, 1, 2, 3:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfadc))
	}
	return nil
}
func (_cdaff *CT_DefaultShapeDefinition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_bcab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_cdaff.SpPr, _bcab)
	_aeadd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006f\u0064\u0079\u0050\u0072"}}
	e.EncodeElement(_cdaff.BodyPr, _aeadd)
	_bbabg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}}
	e.EncodeElement(_cdaff.LstStyle, _bbabg)
	if _cdaff.Style != nil {
		_dgbf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cdaff.Style, _dgbf)
	}
	if _cdaff.ExtLst != nil {
		_eadga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdaff.ExtLst, _eadga)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TableCellProperties and its children, prefixing error messages with path
func (_fcabd *CT_TableCellProperties) ValidateWithPath(path string) error {
	if _fcabd.MarLAttr != nil {
		if _dacce := _fcabd.MarLAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u004c\u0041\u0074\u0074r"); _dacce != nil {
			return _dacce
		}
	}
	if _fcabd.MarRAttr != nil {
		if _edded := _fcabd.MarRAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0052\u0041\u0074\u0074r"); _edded != nil {
			return _edded
		}
	}
	if _fcabd.MarTAttr != nil {
		if _dbfad := _fcabd.MarTAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0054\u0041\u0074\u0074r"); _dbfad != nil {
			return _dbfad
		}
	}
	if _fcabd.MarBAttr != nil {
		if _bbcaa := _fcabd.MarBAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0042\u0041\u0074\u0074r"); _bbcaa != nil {
			return _bbcaa
		}
	}
	if _dgfc := _fcabd.VertAttr.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0041\u0074\u0074r"); _dgfc != nil {
		return _dgfc
	}
	if _bbgdd := _fcabd.AnchorAttr.ValidateWithPath(path + "/\u0041\u006e\u0063\u0068\u006f\u0072\u0041\u0074\u0074\u0072"); _bbgdd != nil {
		return _bbgdd
	}
	if _fdffd := _fcabd.HorzOverflowAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _fdffd != nil {
		return _fdffd
	}
	if _fcabd.LnL != nil {
		if _ggeef := _fcabd.LnL.ValidateWithPath(path + "\u002f\u004c\u006e\u004c"); _ggeef != nil {
			return _ggeef
		}
	}
	if _fcabd.LnR != nil {
		if _fcgcc := _fcabd.LnR.ValidateWithPath(path + "\u002f\u004c\u006e\u0052"); _fcgcc != nil {
			return _fcgcc
		}
	}
	if _fcabd.LnT != nil {
		if _aegcf := _fcabd.LnT.ValidateWithPath(path + "\u002f\u004c\u006e\u0054"); _aegcf != nil {
			return _aegcf
		}
	}
	if _fcabd.LnB != nil {
		if _cgcbe := _fcabd.LnB.ValidateWithPath(path + "\u002f\u004c\u006e\u0042"); _cgcbe != nil {
			return _cgcbe
		}
	}
	if _fcabd.LnTlToBr != nil {
		if _fbgcd := _fcabd.LnTlToBr.ValidateWithPath(path + "\u002fL\u006e\u0054\u006c\u0054\u006f\u0042r"); _fbgcd != nil {
			return _fbgcd
		}
	}
	if _fcabd.LnBlToTr != nil {
		if _gedag := _fcabd.LnBlToTr.ValidateWithPath(path + "\u002fL\u006e\u0042\u006c\u0054\u006f\u0054r"); _gedag != nil {
			return _gedag
		}
	}
	if _fcabd.Cell3D != nil {
		if _fcabc := _fcabd.Cell3D.ValidateWithPath(path + "\u002fC\u0065\u006c\u006c\u0033\u0044"); _fcabc != nil {
			return _fcabc
		}
	}
	if _fcabd.NoFill != nil {
		if _ffedd := _fcabd.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ffedd != nil {
			return _ffedd
		}
	}
	if _fcabd.SolidFill != nil {
		if _gagbf := _fcabd.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _gagbf != nil {
			return _gagbf
		}
	}
	if _fcabd.GradFill != nil {
		if _caba := _fcabd.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _caba != nil {
			return _caba
		}
	}
	if _fcabd.BlipFill != nil {
		if _fefef := _fcabd.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _fefef != nil {
			return _fefef
		}
	}
	if _fcabd.PattFill != nil {
		if _bcae := _fcabd.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bcae != nil {
			return _bcae
		}
	}
	if _fcabd.GrpFill != nil {
		if _fbfdf := _fcabd.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _fbfdf != nil {
			return _fbfdf
		}
	}
	if _fcabd.Headers != nil {
		if _beeaa := _fcabd.Headers.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0073"); _beeaa != nil {
			return _beeaa
		}
	}
	if _fcabd.ExtLst != nil {
		if _aefge := _fcabd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aefge != nil {
			return _aefge
		}
	}
	return nil
}
func (_caab *CT_ClipboardStyleSheet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Name.Local = "\u0061:\u0043\u0054\u005f\u0043\u006c\u0069\u0070\u0062\u006f\u0061\u0072d\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074"
	e.EncodeToken(start)
	_gaed := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074h\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}}
	e.EncodeElement(_caab.ThemeElements, _gaed)
	_fcaaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_caab.ClrMap, _fcaaa)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Blip and its children
func (_aadf *CT_Blip) Validate() error {
	return _aadf.ValidateWithPath("\u0043T\u005f\u0042\u006c\u0069\u0070")
}
func (_dbaaa *CT_OfficeArtExtensionList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dbaaa.Ext != nil {
		_fbafe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		for _, _gegeg := range _dbaaa.Ext {
			e.EncodeElement(_gegeg, _fbafe)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GradientStopList and its children
func (_fcbfd *CT_GradientStopList) Validate() error {
	return _fcbfd.ValidateWithPath("\u0043\u0054\u005f\u0047ra\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074")
}
func (_bageb ST_AnimationDgmOnlyBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bageb.String(), start)
}

// Validate validates the CT_Path2DCubicBezierTo and its children
func (_gaffc *CT_Path2DCubicBezierTo) Validate() error {
	return _gaffc.ValidateWithPath("\u0043\u0054\u005f\u0050at\u0068\u0032\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072T\u006f")
}
func (_fedab ST_TextFontScalePercentOrPercentString) String() string {
	if _fedab.ST_TextFontScalePercent != nil {
		return _dg.Sprintf("\u0025\u0076", *_fedab.ST_TextFontScalePercent)
	}
	if _fedab.ST_Percentage != nil {
		return _dg.Sprintf("\u0025\u0076", *_fedab.ST_Percentage)
	}
	return ""
}
func NewCT_Scale2D() *CT_Scale2D {
	_cfcda := &CT_Scale2D{}
	_cfcda.Sx = NewCT_Ratio()
	_cfcda.Sy = NewCT_Ratio()
	return _cfcda
}

// ValidateWithPath validates the CT_Path2DClose and its children, prefixing error messages with path
func (_gggde *CT_Path2DClose) ValidateWithPath(path string) error { return nil }
func NewCT_Vector3D() *CT_Vector3D                                { _dffg := &CT_Vector3D{}; return _dffg }

type CT_PresetLineDashProperties struct{ ValAttr ST_PresetLineDashVal }

func NewCT_GvmlGroupShapeChoice() *CT_GvmlGroupShapeChoice {
	_fggd := &CT_GvmlGroupShapeChoice{}
	return _fggd
}
func NewCT_AudioFile() *CT_AudioFile { _afb := &CT_AudioFile{}; return _afb }
func (_bdcef *CT_LineJoinRound) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cabc *CT_AlphaModulateEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cabc.Cont = NewCT_EffectContainer()
_bdf:
	for {
		_dca, _bede := d.Token()
		if _bede != nil {
			return _bede
		}
		switch _ace := _dca.(type) {
		case _d.StartElement:
			switch _ace.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				if _ceb := d.DecodeElement(_cabc.Cont, &_ace); _ceb != nil {
					return _ceb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _ace.Name)
				if _ceg := d.Skip(); _ceg != nil {
					return _ceg
				}
			}
		case _d.EndElement:
			break _bdf
		case _d.CharData:
		}
	}
	return nil
}
func (_addde ST_AdjAngle) String() string {
	if _addde.ST_Angle != nil {
		return _dg.Sprintf("\u0025\u0076", *_addde.ST_Angle)
	}
	if _addde.ST_GeomGuideName != nil {
		return _dg.Sprintf("\u0025\u0076", *_addde.ST_GeomGuideName)
	}
	return ""
}
func (_edceac ST_AnimationDgmOnlyBuildType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fedag := _d.Attr{}
	_fedag.Name = name
	switch _edceac {
	case ST_AnimationDgmOnlyBuildTypeUnset:
		_fedag.Value = ""
	case ST_AnimationDgmOnlyBuildTypeOne:
		_fedag.Value = "\u006f\u006e\u0065"
	case ST_AnimationDgmOnlyBuildTypeLvlOne:
		_fedag.Value = "\u006c\u0076\u006c\u004f\u006e\u0065"
	case ST_AnimationDgmOnlyBuildTypeLvlAtOnce:
		_fedag.Value = "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return _fedag, nil
}

type ST_ColorSchemeIndex byte

func (_edafc *CT_GrayscaleTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type Theme struct{ CT_OfficeStyleSheet }

func (_cdgf *CT_BlipFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cdgf.DpiAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0070\u0069"}, Value: _dg.Sprintf("\u0025\u0076", *_cdgf.DpiAttr)})
	}
	if _cdgf.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_cdgf.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _cdgf.Blip != nil {
		_cbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070"}}
		e.EncodeElement(_cdgf.Blip, _cbg)
	}
	if _cdgf.SrcRect != nil {
		_aebg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0063\u0052\u0065\u0063t"}}
		e.EncodeElement(_cdgf.SrcRect, _aebg)
	}
	if _cdgf.Tile != nil {
		_gefe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065"}}
		e.EncodeElement(_cdgf.Tile, _gefe)
	}
	if _cdgf.Stretch != nil {
		_dee := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0072\u0065\u0074\u0063h"}}
		e.EncodeElement(_cdgf.Stretch, _dee)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ccfeb ST_TextShapeType) Validate() error { return _ccfeb.ValidateWithPath("") }

// ValidateWithPath validates the CT_GradientStop and its children, prefixing error messages with path
func (_fcfag *CT_GradientStop) ValidateWithPath(path string) error {
	if _eafge := _fcfag.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _eafge != nil {
		return _eafge
	}
	if _fcfag.ScrgbClr != nil {
		if _ebdfb := _fcfag.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _ebdfb != nil {
			return _ebdfb
		}
	}
	if _fcfag.SrgbClr != nil {
		if _gbfge := _fcfag.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _gbfge != nil {
			return _gbfge
		}
	}
	if _fcfag.HslClr != nil {
		if _bcbgg := _fcfag.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bcbgg != nil {
			return _bcbgg
		}
	}
	if _fcfag.SysClr != nil {
		if _eecfd := _fcfag.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _eecfd != nil {
			return _eecfd
		}
	}
	if _fcfag.SchemeClr != nil {
		if _bcfc := _fcfag.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _bcfc != nil {
			return _bcfc
		}
	}
	if _fcfag.PrstClr != nil {
		if _dcbcc := _fcfag.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _dcbcc != nil {
			return _dcbcc
		}
	}
	return nil
}

type CT_Backdrop struct {
	Anchor *CT_Point3D
	Norm   *CT_Vector3D
	Up     *CT_Vector3D
	ExtLst *CT_OfficeArtExtensionList
}

func (_afbeg *ST_PresetMaterialType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_afbeg = 0
	case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065":
		*_afbeg = 1
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063":
		*_afbeg = 2
	case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c":
		*_afbeg = 3
	case "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065":
		*_afbeg = 4
	case "\u006d\u0061\u0074t\u0065":
		*_afbeg = 5
	case "\u0070l\u0061\u0073\u0074\u0069\u0063":
		*_afbeg = 6
	case "\u006d\u0065\u0074a\u006c":
		*_afbeg = 7
	case "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e":
		*_afbeg = 8
	case "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072":
		*_afbeg = 9
	case "\u0070\u006f\u0077\u0064\u0065\u0072":
		*_afbeg = 10
	case "\u0064\u006b\u0045\u0064\u0067\u0065":
		*_afbeg = 11
	case "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065":
		*_afbeg = 12
	case "\u0063\u006c\u0065a\u0072":
		*_afbeg = 13
	case "\u0066\u006c\u0061\u0074":
		*_afbeg = 14
	case "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l":
		*_afbeg = 15
	}
	return nil
}

// Validate validates the CT_OfficeStyleSheet and its children
func (_gdbcf *CT_OfficeStyleSheet) Validate() error {
	return _gdbcf.ValidateWithPath("\u0043\u0054\u005f\u004fff\u0069\u0063\u0065\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074")
}
func NewCT_SphereCoords() *CT_SphereCoords {
	_cafag := &CT_SphereCoords{}
	_cafag.LatAttr = 0
	_cafag.LonAttr = 0
	_cafag.RevAttr = 0
	return _cafag
}
func (_fddccb *ST_PitchFamily) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_abfcf, _cfegcc := d.Token()
	if _cfegcc != nil {
		return _cfegcc
	}
	if _cbacb, _fefege := _abfcf.(_d.EndElement); _fefege && _cbacb.Name == start.Name {
		*_fddccb = 1
		return nil
	}
	if _bedef, _gccac := _abfcf.(_d.CharData); !_gccac {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abfcf)
	} else {
		switch string(_bedef) {
		case "":
			*_fddccb = 0
		case "\u0030\u0030":
			*_fddccb = 1
		case "\u0030\u0031":
			*_fddccb = 2
		case "\u0030\u0032":
			*_fddccb = 3
		case "\u0031\u0036":
			*_fddccb = 4
		case "\u0031\u0037":
			*_fddccb = 5
		case "\u0031\u0038":
			*_fddccb = 6
		case "\u0033\u0032":
			*_fddccb = 7
		case "\u0033\u0033":
			*_fddccb = 8
		case "\u0033\u0034":
			*_fddccb = 9
		case "\u0034\u0038":
			*_fddccb = 10
		case "\u0034\u0039":
			*_fddccb = 11
		case "\u0035\u0030":
			*_fddccb = 12
		case "\u0036\u0034":
			*_fddccb = 13
		case "\u0036\u0035":
			*_fddccb = 14
		case "\u0036\u0036":
			*_fddccb = 15
		case "\u0038\u0030":
			*_fddccb = 16
		case "\u0038\u0031":
			*_fddccb = 17
		case "\u0038\u0032":
			*_fddccb = 18
		}
	}
	_abfcf, _cfegcc = d.Token()
	if _cfegcc != nil {
		return _cfegcc
	}
	if _aeddg, _bcgfd := _abfcf.(_d.EndElement); _bcgfd && _aeddg.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abfcf)
}
func (_geagfg ST_PitchFamily) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_egffc := _d.Attr{}
	_egffc.Name = name
	switch _geagfg {
	case ST_PitchFamilyUnset:
		_egffc.Value = ""
	case ST_PitchFamily00:
		_egffc.Value = "\u0030\u0030"
	case ST_PitchFamily01:
		_egffc.Value = "\u0030\u0031"
	case ST_PitchFamily02:
		_egffc.Value = "\u0030\u0032"
	case ST_PitchFamily16:
		_egffc.Value = "\u0031\u0036"
	case ST_PitchFamily17:
		_egffc.Value = "\u0031\u0037"
	case ST_PitchFamily18:
		_egffc.Value = "\u0031\u0038"
	case ST_PitchFamily32:
		_egffc.Value = "\u0033\u0032"
	case ST_PitchFamily33:
		_egffc.Value = "\u0033\u0033"
	case ST_PitchFamily34:
		_egffc.Value = "\u0033\u0034"
	case ST_PitchFamily48:
		_egffc.Value = "\u0034\u0038"
	case ST_PitchFamily49:
		_egffc.Value = "\u0034\u0039"
	case ST_PitchFamily50:
		_egffc.Value = "\u0035\u0030"
	case ST_PitchFamily64:
		_egffc.Value = "\u0036\u0034"
	case ST_PitchFamily65:
		_egffc.Value = "\u0036\u0035"
	case ST_PitchFamily66:
		_egffc.Value = "\u0036\u0036"
	case ST_PitchFamily80:
		_egffc.Value = "\u0038\u0030"
	case ST_PitchFamily81:
		_egffc.Value = "\u0038\u0031"
	case ST_PitchFamily82:
		_egffc.Value = "\u0038\u0032"
	}
	return _egffc, nil
}
func (_edbdab ST_FontCollectionIndex) String() string {
	switch _edbdab {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006ao\u0072"
	case 2:
		return "\u006d\u0069\u006eo\u0072"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_cbbcd *ST_Coordinate) ValidateWithPath(path string) error {
	_fbdfgc := []string{}
	if _cbbcd.ST_CoordinateUnqualified != nil {
		_fbdfgc = append(_fbdfgc, "\u0053T\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065U\u006e\u0071\u0075\u0061\u006c\u0069\u0066\u0069\u0065\u0064")
	}
	if _cbbcd.ST_UniversalMeasure != nil {
		_fbdfgc = append(_fbdfgc, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_fbdfgc) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _fbdfgc)
	}
	return nil
}

// Validate validates the AG_Locking and its children
func (_gdc *AG_Locking) Validate() error {
	return _gdc.ValidateWithPath("\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

// ValidateWithPath validates the CT_GvmlShapeNonVisual and its children, prefixing error messages with path
func (_eccc *CT_GvmlShapeNonVisual) ValidateWithPath(path string) error {
	if _eaca := _eccc.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _eaca != nil {
		return _eaca
	}
	if _effdb := _eccc.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _effdb != nil {
		return _effdb
	}
	return nil
}

type EG_LineDashProperties struct {
	PrstDash *CT_PresetLineDashProperties
	CustDash *CT_DashStopList
}

// Validate validates the CT_Path2D and its children
func (_faabg *CT_Path2D) Validate() error {
	return _faabg.ValidateWithPath("\u0043T\u005f\u0050\u0061\u0074\u0068\u0032D")
}
func (_cccce ST_LineCap) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ffeae := _d.Attr{}
	_ffeae.Name = name
	switch _cccce {
	case ST_LineCapUnset:
		_ffeae.Value = ""
	case ST_LineCapRnd:
		_ffeae.Value = "\u0072\u006e\u0064"
	case ST_LineCapSq:
		_ffeae.Value = "\u0073\u0071"
	case ST_LineCapFlat:
		_ffeae.Value = "\u0066\u006c\u0061\u0074"
	}
	return _ffeae, nil
}

// ValidateWithPath validates the CT_Headers and its children, prefixing error messages with path
func (_eedca *CT_Headers) ValidateWithPath(path string) error { return nil }

type CT_EffectReference struct{ RefAttr string }

// Validate validates the CT_Path2DMoveTo and its children
func (_cefb *CT_Path2DMoveTo) Validate() error {
	return _cefb.ValidateWithPath("\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f")
}
func (_aefa *CT_ColorSchemeAndMapping) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aefa.ClrScheme = NewCT_ColorScheme()
_fabgb:
	for {
		_bfede, _acag := d.Token()
		if _acag != nil {
			return _acag
		}
		switch _fgea := _bfede.(type) {
		case _d.StartElement:
			switch _fgea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				if _efcfg := d.DecodeElement(_aefa.ClrScheme, &_fgea); _efcfg != nil {
					return _efcfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				_aefa.ClrMap = NewCT_ColorMapping()
				if _fdead := d.DecodeElement(_aefa.ClrMap, &_fgea); _fdead != nil {
					return _fdead
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u0041\u006e\u0064\u004d\u0061p\u0070\u0069\u006e\u0067\u0020%\u0076", _fgea.Name)
				if _gdga := d.Skip(); _gdga != nil {
					return _gdga
				}
			}
		case _d.EndElement:
			break _fabgb
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TextVerticalTypeUnset          ST_TextVerticalType = 0
	ST_TextVerticalTypeHorz           ST_TextVerticalType = 1
	ST_TextVerticalTypeVert           ST_TextVerticalType = 2
	ST_TextVerticalTypeVert270        ST_TextVerticalType = 3
	ST_TextVerticalTypeWordArtVert    ST_TextVerticalType = 4
	ST_TextVerticalTypeEaVert         ST_TextVerticalType = 5
	ST_TextVerticalTypeMongolianVert  ST_TextVerticalType = 6
	ST_TextVerticalTypeWordArtVertRtl ST_TextVerticalType = 7
)

// Validate validates the CT_ObjectStyleDefaults and its children
func (_dbfeg *CT_ObjectStyleDefaults) Validate() error {
	return _dbfeg.ValidateWithPath("\u0043\u0054\u005f\u004fbj\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006ct\u0073")
}
func (_ebaag *CT_LuminanceEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ebaag.BrightAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0072\u0069\u0067\u0068\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_ebaag.BrightAttr)})
	}
	if _ebaag.ContrastAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006f\u006e\u0074\u0072\u0061\u0073\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_ebaag.ContrastAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Blip and its children, prefixing error messages with path
func (_agf *Blip) ValidateWithPath(path string) error {
	if _bdab := _agf.CT_Blip.ValidateWithPath(path); _bdab != nil {
		return _bdab
	}
	return nil
}
func (_bcfdd *ST_TileFlipMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bcfdd = 0
	case "\u006e\u006f\u006e\u0065":
		*_bcfdd = 1
	case "\u0078":
		*_bcfdd = 2
	case "\u0079":
		*_bcfdd = 3
	case "\u0078\u0079":
		*_bcfdd = 4
	}
	return nil
}

type TblStyleLst struct{ CT_TableStyleList }

func (_aaeeg *CT_TableGrid) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_feffc:
	for {
		_eaada, _cagbc := d.Token()
		if _cagbc != nil {
			return _cagbc
		}
		switch _fafgb := _eaada.(type) {
		case _d.StartElement:
			switch _fafgb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0069\u0064\u0043\u006f\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0069\u0064\u0043\u006f\u006c"}:
				_edaae := NewCT_TableCol()
				if _cegeb := d.DecodeElement(_edaae, &_fafgb); _cegeb != nil {
					return _cegeb
				}
				_aaeeg.GridCol = append(_aaeeg.GridCol, _edaae)
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0061\u0062l\u0065\u0047\u0072\u0069\u0064\u0020\u0025\u0076", _fafgb.Name)
				if _cagf := d.Skip(); _cagf != nil {
					return _cagf
				}
			}
		case _d.EndElement:
			break _feffc
		case _d.CharData:
		}
	}
	return nil
}
func NewEG_TextGeometry() *EG_TextGeometry { _cgeaf := &EG_TextGeometry{}; return _cgeaf }
func ParseUnionST_AnimationDgmBuildType(s string) (ST_AnimationDgmBuildType, error) {
	_cbdac := ST_AnimationDgmBuildType{}
	switch s {
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		_cbdac.ST_AnimationBuildType = ST_AnimationBuildTypeAllAtOnce
	case "\u006f\u006e\u0065":
		_cbdac.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeOne
	case "\u006c\u0076\u006c\u004f\u006e\u0065":
		_cbdac.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeLvlOne
	case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
		_cbdac.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeLvlAtOnce
	}
	return _cbdac, nil
}
func (_cbbcc ST_PresetShadowVal) ValidateWithPath(path string) error {
	switch _cbbcc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbbcc))
	}
	return nil
}

// Validate validates the CT_Vector3D and its children
func (_ebbde *CT_Vector3D) Validate() error {
	return _ebbde.ValidateWithPath("C\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044")
}
func (_dafbd *EG_ShadeProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dafbd.Lin != nil {
		_eddbca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006ci\u006e"}}
		e.EncodeElement(_dafbd.Lin, _eddbca)
	}
	if _dafbd.Path != nil {
		_cccgf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		e.EncodeElement(_dafbd.Path, _cccgf)
	}
	return nil
}
func (_efda *CT_BlipChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _efda.AlphaBiLevel != nil {
		_badc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		for _, _bged := range _efda.AlphaBiLevel {
			e.EncodeElement(_bged, _badc)
		}
	}
	if _efda.AlphaCeiling != nil {
		_fdda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		for _, _dcfd := range _efda.AlphaCeiling {
			e.EncodeElement(_dcfd, _fdda)
		}
	}
	if _efda.AlphaFloor != nil {
		_cbde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		for _, _dcdd := range _efda.AlphaFloor {
			e.EncodeElement(_dcdd, _cbde)
		}
	}
	if _efda.AlphaInv != nil {
		_ddgcb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		for _, _dggg := range _efda.AlphaInv {
			e.EncodeElement(_dggg, _ddgcb)
		}
	}
	if _efda.AlphaMod != nil {
		_dcfg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		for _, _aeee := range _efda.AlphaMod {
			e.EncodeElement(_aeee, _dcfg)
		}
	}
	if _efda.AlphaModFix != nil {
		_cabgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		for _, _gecd := range _efda.AlphaModFix {
			e.EncodeElement(_gecd, _cabgb)
		}
	}
	if _efda.AlphaRepl != nil {
		_aabe := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		for _, _cfbd := range _efda.AlphaRepl {
			e.EncodeElement(_cfbd, _aabe)
		}
	}
	if _efda.BiLevel != nil {
		_cbbf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		for _, _bec := range _efda.BiLevel {
			e.EncodeElement(_bec, _cbbf)
		}
	}
	if _efda.Blur != nil {
		_ebf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		for _, _aged := range _efda.Blur {
			e.EncodeElement(_aged, _ebf)
		}
	}
	if _efda.ClrChange != nil {
		_beec := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		for _, _ccd := range _efda.ClrChange {
			e.EncodeElement(_ccd, _beec)
		}
	}
	if _efda.ClrRepl != nil {
		_gcdd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		for _, _dfedc := range _efda.ClrRepl {
			e.EncodeElement(_dfedc, _gcdd)
		}
	}
	if _efda.Duotone != nil {
		_fgae := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		for _, _gede := range _efda.Duotone {
			e.EncodeElement(_gede, _fgae)
		}
	}
	if _efda.FillOverlay != nil {
		_ggc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		for _, _dbg := range _efda.FillOverlay {
			e.EncodeElement(_dbg, _ggc)
		}
	}
	if _efda.Grayscl != nil {
		_ffff := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		for _, _ddgdc := range _efda.Grayscl {
			e.EncodeElement(_ddgdc, _ffff)
		}
	}
	if _efda.Hsl != nil {
		_dacf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		for _, _fffe := range _efda.Hsl {
			e.EncodeElement(_fffe, _dacf)
		}
	}
	if _efda.Lum != nil {
		_fded := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		for _, _eca := range _efda.Lum {
			e.EncodeElement(_eca, _fded)
		}
	}
	if _efda.Tint != nil {
		_gegd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		for _, _gedd := range _efda.Tint {
			e.EncodeElement(_gedd, _gegd)
		}
	}
	return nil
}
func (_fcbcf *CT_TableRow) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068"}, Value: _dg.Sprintf("\u0025\u0076", _fcbcf.HAttr)})
	e.EncodeToken(start)
	if _fcbcf.Tc != nil {
		_aabdaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0063"}}
		for _, _cagfc := range _fcbcf.Tc {
			e.EncodeElement(_cagfc, _aabdaa)
		}
	}
	if _fcbcf.ExtLst != nil {
		_dcebd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcbcf.ExtLst, _dcebd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_PresetShadowEffect() *CT_PresetShadowEffect {
	_fbeac := &CT_PresetShadowEffect{}
	_fbeac.PrstAttr = ST_PresetShadowVal(1)
	return _fbeac
}
func NewCT_TextNoAutofit() *CT_TextNoAutofit { _gdba := &CT_TextNoAutofit{}; return _gdba }
func (_bcbea *TblStyleLst) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"
	return _bcbea.CT_TableStyleList.MarshalXML(e, start)
}
func (_fdefac ST_TextHorzOverflowType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cagegc := _d.Attr{}
	_cagegc.Name = name
	switch _fdefac {
	case ST_TextHorzOverflowTypeUnset:
		_cagegc.Value = ""
	case ST_TextHorzOverflowTypeOverflow:
		_cagegc.Value = "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case ST_TextHorzOverflowTypeClip:
		_cagegc.Value = "\u0063\u006c\u0069\u0070"
	}
	return _cagegc, nil
}
func (_edd *CT_Angle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _dg.Sprintf("\u0025\u0076", _edd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_LineDashProperties and its children
func (_bbeae *EG_LineDashProperties) Validate() error {
	return _bbeae.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u0044a\u0073\u0068\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func NewCT_AlphaFloorEffect() *CT_AlphaFloorEffect { _dfe := &CT_AlphaFloorEffect{}; return _dfe }

type CT_TextCharacterProperties struct {
	KumimojiAttr   *bool
	LangAttr       *string
	AltLangAttr    *string
	SzAttr         *int32
	BAttr          *bool
	IAttr          *bool
	UAttr          ST_TextUnderlineType
	StrikeAttr     ST_TextStrikeType
	KernAttr       *int32
	CapAttr        ST_TextCapsType
	SpcAttr        *ST_TextPoint
	NormalizeHAttr *bool
	BaselineAttr   *ST_Percentage
	NoProofAttr    *bool
	DirtyAttr      *bool
	ErrAttr        *bool
	SmtCleanAttr   *bool
	SmtIdAttr      *uint32
	BmkAttr        *string
	Ln             *CT_LineProperties
	NoFill         *CT_NoFillProperties
	SolidFill      *CT_SolidColorFillProperties
	GradFill       *CT_GradientFillProperties
	BlipFill       *CT_BlipFillProperties
	PattFill       *CT_PatternFillProperties
	GrpFill        *CT_GroupFillProperties
	EffectLst      *CT_EffectList
	EffectDag      *CT_EffectContainer
	Highlight      *CT_Color
	ULnTx          *CT_TextUnderlineLineFollowText
	ULn            *CT_LineProperties
	UFillTx        *CT_TextUnderlineFillFollowText
	UFill          *CT_TextUnderlineFillGroupWrapper
	Latin          *CT_TextFont
	Ea             *CT_TextFont
	Cs             *CT_TextFont
	Sym            *CT_TextFont
	HlinkClick     *CT_Hyperlink
	HlinkMouseOver *CT_Hyperlink
	Rtl            *CT_Boolean
	ExtLst         *CT_OfficeArtExtensionList
}

// Validate validates the CT_VideoFile and its children
func (_babcda *CT_VideoFile) Validate() error {
	return _babcda.ValidateWithPath("\u0043\u0054\u005fV\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065")
}
func (_aagge ST_PresetShadowVal) Validate() error { return _aagge.ValidateWithPath("") }
func (_dcgbf *CT_GvmlGroupShapeChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dcgbf.TxSp != nil {
		_ggfdf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0078\u0053\u0070"}}
		for _, _adad := range _dcgbf.TxSp {
			e.EncodeElement(_adad, _ggfdf)
		}
	}
	if _dcgbf.Sp != nil {
		_gabbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070"}}
		for _, _acabg := range _dcgbf.Sp {
			e.EncodeElement(_acabg, _gabbf)
		}
	}
	if _dcgbf.CxnSp != nil {
		_affb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u0078\u006e\u0053\u0070"}}
		for _, _dcfca := range _dcgbf.CxnSp {
			e.EncodeElement(_dcfca, _affb)
		}
	}
	if _dcgbf.Pic != nil {
		_deff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070i\u0063"}}
		for _, _dagc := range _dcgbf.Pic {
			e.EncodeElement(_dagc, _deff)
		}
	}
	if _dcgbf.GraphicFrame != nil {
		_geefe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065"}}
		for _, _dfeeg := range _dcgbf.GraphicFrame {
			e.EncodeElement(_dfeeg, _geefe)
		}
	}
	if _dcgbf.GrpSp != nil {
		_edbb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0053\u0070"}}
		for _, _fbbd := range _dcgbf.GrpSp {
			e.EncodeElement(_fbbd, _edbb)
		}
	}
	return nil
}
func (_dbag *CT_Connection) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fdfb := range start.Attr {
		if _fdfb.Name.Local == "\u0069\u0064" {
			_aafd, _feag := _c.ParseUint(_fdfb.Value, 10, 32)
			if _feag != nil {
				return _feag
			}
			_dbag.IdAttr = uint32(_aafd)
			continue
		}
		if _fdfb.Name.Local == "\u0069\u0064\u0078" {
			_cbbdf, _ebcf := _c.ParseUint(_fdfb.Value, 10, 32)
			if _ebcf != nil {
				return _ebcf
			}
			_dbag.IdxAttr = uint32(_cbbdf)
			continue
		}
	}
	for {
		_gbfg, _adeb := d.Token()
		if _adeb != nil {
			return _dg.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0043o\u006en\u0065c\u0074\u0069\u006f\u006e\u003a\u0020\u0025s", _adeb)
		}
		if _bebf, _ecdf := _gbfg.(_d.EndElement); _ecdf && _bebf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cegfa *CT_TextNoAutofit) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_ggddc, _fcfda := d.Token()
		if _fcfda != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074N\u006fA\u0075\u0074\u006f\u0066\u0069\u0074\u003a \u0025\u0073", _fcfda)
		}
		if _ggdffa, _bcge := _ggddc.(_d.EndElement); _bcge && _ggdffa.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SchemeColor and its children, prefixing error messages with path
func (_bggeb *CT_SchemeColor) ValidateWithPath(path string) error {
	if _bggeb.ValAttr == ST_SchemeColorValUnset {
		return _dg.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fcfacf := _bggeb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fcfacf != nil {
		return _fcfacf
	}
	for _geadcc, _fafbb := range _bggeb.EG_ColorTransform {
		if _bfffdd := _fafbb.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _geadcc)); _bfffdd != nil {
			return _bfffdd
		}
	}
	return nil
}

type ST_PresetCameraType byte

func (_bgbec *CT_GradientFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bgbec.FlipAttr != ST_TileFlipModeUnset {
		_aage, _gccdf := _bgbec.FlipAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u006c\u0069\u0070"})
		if _gccdf != nil {
			return _gccdf
		}
		start.Attr = append(start.Attr, _aage)
	}
	if _bgbec.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_bgbec.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _bgbec.GsLst != nil {
		_ccgb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0073\u004c\u0073\u0074"}}
		e.EncodeElement(_bgbec.GsLst, _ccgb)
	}
	if _bgbec.Lin != nil {
		_deed := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006ci\u006e"}}
		e.EncodeElement(_bgbec.Lin, _deed)
	}
	if _bgbec.Path != nil {
		_cbgad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		e.EncodeElement(_bgbec.Path, _cbgad)
	}
	if _bgbec.TileRect != nil {
		_fffeg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_bgbec.TileRect, _fffeg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_acafb *ST_AnimationChartOnlyBuildType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gbdge, _cfga := d.Token()
	if _cfga != nil {
		return _cfga
	}
	if _ccbab, _afeaf := _gbdge.(_d.EndElement); _afeaf && _ccbab.Name == start.Name {
		*_acafb = 1
		return nil
	}
	if _gfbdb, _bdfce := _gbdge.(_d.CharData); !_bdfce {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbdge)
	} else {
		switch string(_gfbdb) {
		case "":
			*_acafb = 0
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_acafb = 1
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_acafb = 2
		case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
			*_acafb = 3
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
			*_acafb = 4
		}
	}
	_gbdge, _cfga = d.Token()
	if _cfga != nil {
		return _cfga
	}
	if _dcgbd, _gcgec := _gbdge.(_d.EndElement); _gcgec && _dcgbd.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbdge)
}
func NewCT_TableStyleTextStyle() *CT_TableStyleTextStyle {
	_babdd := &CT_TableStyleTextStyle{}
	return _babdd
}

type CT_ReflectionEffect struct {
	BlurRadAttr      *int64
	StAAttr          *ST_PositiveFixedPercentage
	StPosAttr        *ST_PositiveFixedPercentage
	EndAAttr         *ST_PositiveFixedPercentage
	EndPosAttr       *ST_PositiveFixedPercentage
	DistAttr         *int64
	DirAttr          *int32
	FadeDirAttr      *int32
	SxAttr           *ST_Percentage
	SyAttr           *ST_Percentage
	KxAttr           *int32
	KyAttr           *int32
	AlgnAttr         ST_RectAlignment
	RotWithShapeAttr *bool
}

func (_bacge ST_RectAlignment) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_agfcg := _d.Attr{}
	_agfcg.Name = name
	switch _bacge {
	case ST_RectAlignmentUnset:
		_agfcg.Value = ""
	case ST_RectAlignmentTl:
		_agfcg.Value = "\u0074\u006c"
	case ST_RectAlignmentT:
		_agfcg.Value = "\u0074"
	case ST_RectAlignmentTr:
		_agfcg.Value = "\u0074\u0072"
	case ST_RectAlignmentL:
		_agfcg.Value = "\u006c"
	case ST_RectAlignmentCtr:
		_agfcg.Value = "\u0063\u0074\u0072"
	case ST_RectAlignmentR:
		_agfcg.Value = "\u0072"
	case ST_RectAlignmentBl:
		_agfcg.Value = "\u0062\u006c"
	case ST_RectAlignmentB:
		_agfcg.Value = "\u0062"
	case ST_RectAlignmentBr:
		_agfcg.Value = "\u0062\u0072"
	}
	return _agfcg, nil
}
func NewCT_TextParagraphProperties() *CT_TextParagraphProperties {
	_aebag := &CT_TextParagraphProperties{}
	return _aebag
}
func (_dgfe *CT_LineJoinBevel) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_aabbf, _gdfgb := d.Token()
		if _gdfgb != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065J\u006fi\u006e\u0042\u0065\u0076\u0065\u006c\u003a \u0025\u0073", _gdfgb)
		}
		if _efff, _fegfe := _aabbf.(_d.EndElement); _fegfe && _efff.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_AnimationChartElement() *CT_AnimationChartElement {
	_fbe := &CT_AnimationChartElement{}
	_fbe.BldStepAttr = ST_ChartBuildStep(1)
	return _fbe
}
func (_degac *CT_Ratio) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ccddc := range start.Attr {
		if _ccddc.Name.Local == "\u006e" {
			_afae, _dgec := _c.ParseInt(_ccddc.Value, 10, 64)
			if _dgec != nil {
				return _dgec
			}
			_degac.NAttr = _afae
			continue
		}
		if _ccddc.Name.Local == "\u0064" {
			_aecdf, _efce := _c.ParseInt(_ccddc.Value, 10, 64)
			if _efce != nil {
				return _efce
			}
			_degac.DAttr = _aecdf
			continue
		}
	}
	for {
		_dfgab, _dadad := d.Token()
		if _dadad != nil {
			return _dg.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fR\u0061\u0074\u0069\u006f: \u0025\u0073", _dadad)
		}
		if _eadf, _abace := _dfgab.(_d.EndElement); _abace && _eadf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_defe ST_Coordinate) String() string {
	if _defe.ST_CoordinateUnqualified != nil {
		return _dg.Sprintf("\u0025\u0076", *_defe.ST_CoordinateUnqualified)
	}
	if _defe.ST_UniversalMeasure != nil {
		return _dg.Sprintf("\u0025\u0076", *_defe.ST_UniversalMeasure)
	}
	return ""
}

const (
	ST_SystemColorValUnset                   ST_SystemColorVal = 0
	ST_SystemColorValScrollBar               ST_SystemColorVal = 1
	ST_SystemColorValBackground              ST_SystemColorVal = 2
	ST_SystemColorValActiveCaption           ST_SystemColorVal = 3
	ST_SystemColorValInactiveCaption         ST_SystemColorVal = 4
	ST_SystemColorValMenu                    ST_SystemColorVal = 5
	ST_SystemColorValWindow                  ST_SystemColorVal = 6
	ST_SystemColorValWindowFrame             ST_SystemColorVal = 7
	ST_SystemColorValMenuText                ST_SystemColorVal = 8
	ST_SystemColorValWindowText              ST_SystemColorVal = 9
	ST_SystemColorValCaptionText             ST_SystemColorVal = 10
	ST_SystemColorValActiveBorder            ST_SystemColorVal = 11
	ST_SystemColorValInactiveBorder          ST_SystemColorVal = 12
	ST_SystemColorValAppWorkspace            ST_SystemColorVal = 13
	ST_SystemColorValHighlight               ST_SystemColorVal = 14
	ST_SystemColorValHighlightText           ST_SystemColorVal = 15
	ST_SystemColorValBtnFace                 ST_SystemColorVal = 16
	ST_SystemColorValBtnShadow               ST_SystemColorVal = 17
	ST_SystemColorValGrayText                ST_SystemColorVal = 18
	ST_SystemColorValBtnText                 ST_SystemColorVal = 19
	ST_SystemColorValInactiveCaptionText     ST_SystemColorVal = 20
	ST_SystemColorValBtnHighlight            ST_SystemColorVal = 21
	ST_SystemColorVal3dDkShadow              ST_SystemColorVal = 22
	ST_SystemColorVal3dLight                 ST_SystemColorVal = 23
	ST_SystemColorValInfoText                ST_SystemColorVal = 24
	ST_SystemColorValInfoBk                  ST_SystemColorVal = 25
	ST_SystemColorValHotLight                ST_SystemColorVal = 26
	ST_SystemColorValGradientActiveCaption   ST_SystemColorVal = 27
	ST_SystemColorValGradientInactiveCaption ST_SystemColorVal = 28
	ST_SystemColorValMenuHighlight           ST_SystemColorVal = 29
	ST_SystemColorValMenuBar                 ST_SystemColorVal = 30
)

type CT_Ratio struct {
	NAttr int64
	DAttr int64
}

// ValidateWithPath validates the CT_AlphaModulateFixedEffect and its children, prefixing error messages with path
func (_faa *CT_AlphaModulateFixedEffect) ValidateWithPath(path string) error {
	if _faa.AmtAttr != nil {
		if _fca := _faa.AmtAttr.ValidateWithPath(path + "\u002f\u0041\u006d\u0074\u0041\u0074\u0074\u0072"); _fca != nil {
			return _fca
		}
	}
	return nil
}
func NewEG_LineJoinProperties() *EG_LineJoinProperties {
	_egbaa := &EG_LineJoinProperties{}
	return _egbaa
}

// Validate validates the CT_Boolean and its children
func (_afca *CT_Boolean) Validate() error {
	return _afca.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e")
}

type ST_ShapeType byte

func (_gfae *CT_AnimationGraphicalObjectBuildProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gfae.BldDgm != nil {
		_faag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0064\u0044\u0067\u006d"}}
		e.EncodeElement(_gfae.BldDgm, _faag)
	}
	if _gfae.BldChart != nil {
		_bgff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}}
		e.EncodeElement(_gfae.BldChart, _bgff)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eeb *CT_AnimationDgmBuildProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eeb.BldAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u006c\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_eeb.BldAttr)})
	}
	if _eeb.RevAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0065\u0076"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_eeb.RevAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func ParseUnionST_TextSpacingPercentOrPercentString(s string) (ST_TextSpacingPercentOrPercentString, error) {
	_eeeab := ST_TextSpacingPercentOrPercentString{}
	if _fe.ST_PercentagePatternRe.MatchString(s) {
		_eeeab.ST_Percentage = &s
	} else {
		_efgag, _cdafd := _c.ParseInt(s, 10, 64)
		if _cdafd != nil {
			return _eeeab, _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _cdafd)
		}
		_agcb := int32(_efgag)
		_eeeab.ST_TextSpacingPercent = &_agcb
	}
	return _eeeab, nil
}

// ValidateWithPath validates the CT_PathShadeProperties and its children, prefixing error messages with path
func (_bfadb *CT_PathShadeProperties) ValidateWithPath(path string) error {
	if _cedgf := _bfadb.PathAttr.ValidateWithPath(path + "\u002fP\u0061\u0074\u0068\u0041\u0074\u0074r"); _cedgf != nil {
		return _cedgf
	}
	if _bfadb.FillToRect != nil {
		if _fdcea := _bfadb.FillToRect.ValidateWithPath(path + "/\u0046\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"); _fdcea != nil {
			return _fdcea
		}
	}
	return nil
}

type ST_RectAlignment byte

func ParseUnionST_TextFontScalePercentOrPercentString(s string) (ST_TextFontScalePercentOrPercentString, error) {
	_addfa := ST_TextFontScalePercentOrPercentString{}
	if _fe.ST_PercentagePatternRe.MatchString(s) {
		_addfa.ST_Percentage = &s
	} else {
		_ecadf, _aceed := _c.ParseInt(s, 10, 64)
		if _aceed != nil {
			return _addfa, _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _aceed)
		}
		_cacda := int32(_ecadf)
		_addfa.ST_TextFontScalePercent = &_cacda
	}
	return _addfa, nil
}
func (_eecfec ST_PathShadeType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_eecfec.String(), start)
}

// Validate validates the EG_TextBullet and its children
func (_ccfdf *EG_TextBullet) Validate() error {
	return _ccfdf.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074")
}
func (_dddbca ST_ShapeType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fcffc := _d.Attr{}
	_fcffc.Name = name
	switch _dddbca {
	case ST_ShapeTypeUnset:
		_fcffc.Value = ""
	case ST_ShapeTypeLine:
		_fcffc.Value = "\u006c\u0069\u006e\u0065"
	case ST_ShapeTypeLineInv:
		_fcffc.Value = "\u006ci\u006e\u0065\u0049\u006e\u0076"
	case ST_ShapeTypeTriangle:
		_fcffc.Value = "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_ShapeTypeRtTriangle:
		_fcffc.Value = "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_ShapeTypeRect:
		_fcffc.Value = "\u0072\u0065\u0063\u0074"
	case ST_ShapeTypeDiamond:
		_fcffc.Value = "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case ST_ShapeTypeParallelogram:
		_fcffc.Value = "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d"
	case ST_ShapeTypeTrapezoid:
		_fcffc.Value = "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d"
	case ST_ShapeTypeNonIsoscelesTrapezoid:
		_fcffc.Value = "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064"
	case ST_ShapeTypePentagon:
		_fcffc.Value = "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeHexagon:
		_fcffc.Value = "\u0068e\u0078\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeHeptagon:
		_fcffc.Value = "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeOctagon:
		_fcffc.Value = "\u006fc\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeDecagon:
		_fcffc.Value = "\u0064e\u0063\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeDodecagon:
		_fcffc.Value = "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn"
	case ST_ShapeTypeStar4:
		_fcffc.Value = "\u0073\u0074\u0061r\u0034"
	case ST_ShapeTypeStar5:
		_fcffc.Value = "\u0073\u0074\u0061r\u0035"
	case ST_ShapeTypeStar6:
		_fcffc.Value = "\u0073\u0074\u0061r\u0036"
	case ST_ShapeTypeStar7:
		_fcffc.Value = "\u0073\u0074\u0061r\u0037"
	case ST_ShapeTypeStar8:
		_fcffc.Value = "\u0073\u0074\u0061r\u0038"
	case ST_ShapeTypeStar10:
		_fcffc.Value = "\u0073\u0074\u0061\u0072\u0031\u0030"
	case ST_ShapeTypeStar12:
		_fcffc.Value = "\u0073\u0074\u0061\u0072\u0031\u0032"
	case ST_ShapeTypeStar16:
		_fcffc.Value = "\u0073\u0074\u0061\u0072\u0031\u0036"
	case ST_ShapeTypeStar24:
		_fcffc.Value = "\u0073\u0074\u0061\u0072\u0032\u0034"
	case ST_ShapeTypeStar32:
		_fcffc.Value = "\u0073\u0074\u0061\u0072\u0033\u0032"
	case ST_ShapeTypeRoundRect:
		_fcffc.Value = "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t"
	case ST_ShapeTypeRound1Rect:
		_fcffc.Value = "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeRound2SameRect:
		_fcffc.Value = "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeRound2DiagRect:
		_fcffc.Value = "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnipRoundRect:
		_fcffc.Value = "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnip1Rect:
		_fcffc.Value = "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t"
	case ST_ShapeTypeSnip2SameRect:
		_fcffc.Value = "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnip2DiagRect:
		_fcffc.Value = "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074"
	case ST_ShapeTypePlaque:
		_fcffc.Value = "\u0070\u006c\u0061\u0071\u0075\u0065"
	case ST_ShapeTypeEllipse:
		_fcffc.Value = "\u0065l\u006c\u0069\u0070\u0073\u0065"
	case ST_ShapeTypeTeardrop:
		_fcffc.Value = "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070"
	case ST_ShapeTypeHomePlate:
		_fcffc.Value = "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e"
	case ST_ShapeTypeChevron:
		_fcffc.Value = "\u0063h\u0065\u0076\u0072\u006f\u006e"
	case ST_ShapeTypePieWedge:
		_fcffc.Value = "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065"
	case ST_ShapeTypePie:
		_fcffc.Value = "\u0070\u0069\u0065"
	case ST_ShapeTypeBlockArc:
		_fcffc.Value = "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063"
	case ST_ShapeTypeDonut:
		_fcffc.Value = "\u0064\u006f\u006eu\u0074"
	case ST_ShapeTypeNoSmoking:
		_fcffc.Value = "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg"
	case ST_ShapeTypeRightArrow:
		_fcffc.Value = "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftArrow:
		_fcffc.Value = "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeUpArrow:
		_fcffc.Value = "\u0075p\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeDownArrow:
		_fcffc.Value = "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeStripedRightArrow:
		_fcffc.Value = "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeNotchedRightArrow:
		_fcffc.Value = "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeBentUpArrow:
		_fcffc.Value = "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightArrow:
		_fcffc.Value = "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeUpDownArrow:
		_fcffc.Value = "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftUpArrow:
		_fcffc.Value = "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightUpArrow:
		_fcffc.Value = "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeQuadArrow:
		_fcffc.Value = "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeLeftArrowCallout:
		_fcffc.Value = "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeRightArrowCallout:
		_fcffc.Value = "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeUpArrowCallout:
		_fcffc.Value = "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeDownArrowCallout:
		_fcffc.Value = "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeLeftRightArrowCallout:
		_fcffc.Value = "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeUpDownArrowCallout:
		_fcffc.Value = "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeQuadArrowCallout:
		_fcffc.Value = "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeBentArrow:
		_fcffc.Value = "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeUturnArrow:
		_fcffc.Value = "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCircularArrow:
		_fcffc.Value = "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftCircularArrow:
		_fcffc.Value = "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightCircularArrow:
		_fcffc.Value = "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077"
	case ST_ShapeTypeCurvedRightArrow:
		_fcffc.Value = "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedLeftArrow:
		_fcffc.Value = "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedUpArrow:
		_fcffc.Value = "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedDownArrow:
		_fcffc.Value = "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeSwooshArrow:
		_fcffc.Value = "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCube:
		_fcffc.Value = "\u0063\u0075\u0062\u0065"
	case ST_ShapeTypeCan:
		_fcffc.Value = "\u0063\u0061\u006e"
	case ST_ShapeTypeLightningBolt:
		_fcffc.Value = "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074"
	case ST_ShapeTypeHeart:
		_fcffc.Value = "\u0068\u0065\u0061r\u0074"
	case ST_ShapeTypeSun:
		_fcffc.Value = "\u0073\u0075\u006e"
	case ST_ShapeTypeMoon:
		_fcffc.Value = "\u006d\u006f\u006f\u006e"
	case ST_ShapeTypeSmileyFace:
		_fcffc.Value = "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065"
	case ST_ShapeTypeIrregularSeal1:
		_fcffc.Value = "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031"
	case ST_ShapeTypeIrregularSeal2:
		_fcffc.Value = "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032"
	case ST_ShapeTypeFoldedCorner:
		_fcffc.Value = "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072"
	case ST_ShapeTypeBevel:
		_fcffc.Value = "\u0062\u0065\u0076e\u006c"
	case ST_ShapeTypeFrame:
		_fcffc.Value = "\u0066\u0072\u0061m\u0065"
	case ST_ShapeTypeHalfFrame:
		_fcffc.Value = "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de"
	case ST_ShapeTypeCorner:
		_fcffc.Value = "\u0063\u006f\u0072\u006e\u0065\u0072"
	case ST_ShapeTypeDiagStripe:
		_fcffc.Value = "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065"
	case ST_ShapeTypeChord:
		_fcffc.Value = "\u0063\u0068\u006fr\u0064"
	case ST_ShapeTypeArc:
		_fcffc.Value = "\u0061\u0072\u0063"
	case ST_ShapeTypeLeftBracket:
		_fcffc.Value = "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case ST_ShapeTypeRightBracket:
		_fcffc.Value = "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case ST_ShapeTypeLeftBrace:
		_fcffc.Value = "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e"
	case ST_ShapeTypeRightBrace:
		_fcffc.Value = "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065"
	case ST_ShapeTypeBracketPair:
		_fcffc.Value = "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072"
	case ST_ShapeTypeBracePair:
		_fcffc.Value = "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r"
	case ST_ShapeTypeStraightConnector1:
		_fcffc.Value = "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031"
	case ST_ShapeTypeBentConnector2:
		_fcffc.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032"
	case ST_ShapeTypeBentConnector3:
		_fcffc.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033"
	case ST_ShapeTypeBentConnector4:
		_fcffc.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034"
	case ST_ShapeTypeBentConnector5:
		_fcffc.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035"
	case ST_ShapeTypeCurvedConnector2:
		_fcffc.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032"
	case ST_ShapeTypeCurvedConnector3:
		_fcffc.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033"
	case ST_ShapeTypeCurvedConnector4:
		_fcffc.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034"
	case ST_ShapeTypeCurvedConnector5:
		_fcffc.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035"
	case ST_ShapeTypeCallout1:
		_fcffc.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeCallout2:
		_fcffc.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeCallout3:
		_fcffc.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeAccentCallout1:
		_fcffc.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeAccentCallout2:
		_fcffc.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeAccentCallout3:
		_fcffc.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeBorderCallout1:
		_fcffc.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeBorderCallout2:
		_fcffc.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeBorderCallout3:
		_fcffc.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeAccentBorderCallout1:
		_fcffc.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031"
	case ST_ShapeTypeAccentBorderCallout2:
		_fcffc.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032"
	case ST_ShapeTypeAccentBorderCallout3:
		_fcffc.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033"
	case ST_ShapeTypeWedgeRectCallout:
		_fcffc.Value = "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeWedgeRoundRectCallout:
		_fcffc.Value = "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeWedgeEllipseCallout:
		_fcffc.Value = "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeCloudCallout:
		_fcffc.Value = "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeCloud:
		_fcffc.Value = "\u0063\u006c\u006fu\u0064"
	case ST_ShapeTypeRibbon:
		_fcffc.Value = "\u0072\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeRibbon2:
		_fcffc.Value = "\u0072i\u0062\u0062\u006f\u006e\u0032"
	case ST_ShapeTypeEllipseRibbon:
		_fcffc.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeEllipseRibbon2:
		_fcffc.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032"
	case ST_ShapeTypeLeftRightRibbon:
		_fcffc.Value = "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeVerticalScroll:
		_fcffc.Value = "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c"
	case ST_ShapeTypeHorizontalScroll:
		_fcffc.Value = "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c"
	case ST_ShapeTypeWave:
		_fcffc.Value = "\u0077\u0061\u0076\u0065"
	case ST_ShapeTypeDoubleWave:
		_fcffc.Value = "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065"
	case ST_ShapeTypePlus:
		_fcffc.Value = "\u0070\u006c\u0075\u0073"
	case ST_ShapeTypeFlowChartProcess:
		_fcffc.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073"
	case ST_ShapeTypeFlowChartDecision:
		_fcffc.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartInputOutput:
		_fcffc.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074"
	case ST_ShapeTypeFlowChartPredefinedProcess:
		_fcffc.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073"
	case ST_ShapeTypeFlowChartInternalStorage:
		_fcffc.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case ST_ShapeTypeFlowChartDocument:
		_fcffc.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074"
	case ST_ShapeTypeFlowChartMultidocument:
		_fcffc.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074"
	case ST_ShapeTypeFlowChartTerminator:
		_fcffc.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072"
	case ST_ShapeTypeFlowChartPreparation:
		_fcffc.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e"
	case ST_ShapeTypeFlowChartManualInput:
		_fcffc.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074"
	case ST_ShapeTypeFlowChartManualOperation:
		_fcffc.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartConnector:
		_fcffc.Value = "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072"
	case ST_ShapeTypeFlowChartPunchedCard:
		_fcffc.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064"
	case ST_ShapeTypeFlowChartPunchedTape:
		_fcffc.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065"
	case ST_ShapeTypeFlowChartSummingJunction:
		_fcffc.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartOr:
		_fcffc.Value = "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072"
	case ST_ShapeTypeFlowChartCollate:
		_fcffc.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065"
	case ST_ShapeTypeFlowChartSort:
		_fcffc.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074"
	case ST_ShapeTypeFlowChartExtract:
		_fcffc.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074"
	case ST_ShapeTypeFlowChartMerge:
		_fcffc.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065"
	case ST_ShapeTypeFlowChartOfflineStorage:
		_fcffc.Value = "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case ST_ShapeTypeFlowChartOnlineStorage:
		_fcffc.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065"
	case ST_ShapeTypeFlowChartMagneticTape:
		_fcffc.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065"
	case ST_ShapeTypeFlowChartMagneticDisk:
		_fcffc.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b"
	case ST_ShapeTypeFlowChartMagneticDrum:
		_fcffc.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d"
	case ST_ShapeTypeFlowChartDisplay:
		_fcffc.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079"
	case ST_ShapeTypeFlowChartDelay:
		_fcffc.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079"
	case ST_ShapeTypeFlowChartAlternateProcess:
		_fcffc.Value = "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s"
	case ST_ShapeTypeFlowChartOffpageConnector:
		_fcffc.Value = "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr"
	case ST_ShapeTypeActionButtonBlank:
		_fcffc.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b"
	case ST_ShapeTypeActionButtonHome:
		_fcffc.Value = "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065"
	case ST_ShapeTypeActionButtonHelp:
		_fcffc.Value = "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070"
	case ST_ShapeTypeActionButtonInformation:
		_fcffc.Value = "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeActionButtonForwardNext:
		_fcffc.Value = "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074"
	case ST_ShapeTypeActionButtonBackPrevious:
		_fcffc.Value = "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073"
	case ST_ShapeTypeActionButtonEnd:
		_fcffc.Value = "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064"
	case ST_ShapeTypeActionButtonBeginning:
		_fcffc.Value = "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067"
	case ST_ShapeTypeActionButtonReturn:
		_fcffc.Value = "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e"
	case ST_ShapeTypeActionButtonDocument:
		_fcffc.Value = "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074"
	case ST_ShapeTypeActionButtonSound:
		_fcffc.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064"
	case ST_ShapeTypeActionButtonMovie:
		_fcffc.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065"
	case ST_ShapeTypeGear6:
		_fcffc.Value = "\u0067\u0065\u0061r\u0036"
	case ST_ShapeTypeGear9:
		_fcffc.Value = "\u0067\u0065\u0061r\u0039"
	case ST_ShapeTypeFunnel:
		_fcffc.Value = "\u0066\u0075\u006e\u006e\u0065\u006c"
	case ST_ShapeTypeMathPlus:
		_fcffc.Value = "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073"
	case ST_ShapeTypeMathMinus:
		_fcffc.Value = "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s"
	case ST_ShapeTypeMathMultiply:
		_fcffc.Value = "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079"
	case ST_ShapeTypeMathDivide:
		_fcffc.Value = "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065"
	case ST_ShapeTypeMathEqual:
		_fcffc.Value = "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l"
	case ST_ShapeTypeMathNotEqual:
		_fcffc.Value = "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_ShapeTypeCornerTabs:
		_fcffc.Value = "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073"
	case ST_ShapeTypeSquareTabs:
		_fcffc.Value = "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073"
	case ST_ShapeTypePlaqueTabs:
		_fcffc.Value = "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073"
	case ST_ShapeTypeChartX:
		_fcffc.Value = "\u0063\u0068\u0061\u0072\u0074\u0058"
	case ST_ShapeTypeChartStar:
		_fcffc.Value = "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r"
	case ST_ShapeTypeChartPlus:
		_fcffc.Value = "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s"
	}
	return _fcffc, nil
}

// ValidateWithPath validates the EG_ThemeableEffectStyle and its children, prefixing error messages with path
func (_gdecd *EG_ThemeableEffectStyle) ValidateWithPath(path string) error {
	if _gdecd.Effect != nil {
		if _ddacc := _gdecd.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _ddacc != nil {
			return _ddacc
		}
	}
	if _gdecd.EffectRef != nil {
		if _gfbaab := _gdecd.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _gfbaab != nil {
			return _gfbaab
		}
	}
	return nil
}

// Validate validates the CT_LightRig and its children
func (_bgaef *CT_LightRig) Validate() error {
	return _bgaef.ValidateWithPath("C\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067")
}

// ValidateWithPath validates the CT_TextListStyle and its children, prefixing error messages with path
func (_fbabf *CT_TextListStyle) ValidateWithPath(path string) error {
	if _fbabf.DefPPr != nil {
		if _bcddf := _fbabf.DefPPr.ValidateWithPath(path + "\u002fD\u0065\u0066\u0050\u0050\u0072"); _bcddf != nil {
			return _bcddf
		}
	}
	if _fbabf.Lvl1pPr != nil {
		if _edagba := _fbabf.Lvl1pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0031\u0070\u0050\u0072"); _edagba != nil {
			return _edagba
		}
	}
	if _fbabf.Lvl2pPr != nil {
		if _fbagg := _fbabf.Lvl2pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0032\u0070\u0050\u0072"); _fbagg != nil {
			return _fbagg
		}
	}
	if _fbabf.Lvl3pPr != nil {
		if _agdc := _fbabf.Lvl3pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0033\u0070\u0050\u0072"); _agdc != nil {
			return _agdc
		}
	}
	if _fbabf.Lvl4pPr != nil {
		if _bbag := _fbabf.Lvl4pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0034\u0070\u0050\u0072"); _bbag != nil {
			return _bbag
		}
	}
	if _fbabf.Lvl5pPr != nil {
		if _fgefc := _fbabf.Lvl5pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0035\u0070\u0050\u0072"); _fgefc != nil {
			return _fgefc
		}
	}
	if _fbabf.Lvl6pPr != nil {
		if _fcbeg := _fbabf.Lvl6pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0036\u0070\u0050\u0072"); _fcbeg != nil {
			return _fcbeg
		}
	}
	if _fbabf.Lvl7pPr != nil {
		if _cfcdaa := _fbabf.Lvl7pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0037\u0070\u0050\u0072"); _cfcdaa != nil {
			return _cfcdaa
		}
	}
	if _fbabf.Lvl8pPr != nil {
		if _eeaccb := _fbabf.Lvl8pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0038\u0070\u0050\u0072"); _eeaccb != nil {
			return _eeaccb
		}
	}
	if _fbabf.Lvl9pPr != nil {
		if _gfdfc := _fbabf.Lvl9pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0039\u0070\u0050\u0072"); _gfdfc != nil {
			return _gfdfc
		}
	}
	if _fbabf.ExtLst != nil {
		if _gfgbb := _fbabf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfgbb != nil {
			return _gfgbb
		}
	}
	return nil
}

type CT_GrayscaleTransform struct{}

// ValidateWithPath validates the Theme and its children, prefixing error messages with path
func (_dbdaf *Theme) ValidateWithPath(path string) error {
	if _egabdf := _dbdaf.CT_OfficeStyleSheet.ValidateWithPath(path); _egabdf != nil {
		return _egabdf
	}
	return nil
}

type CT_GroupFillProperties struct{}

func NewAG_Blob() *AG_Blob { _fa := &AG_Blob{}; return _fa }
func NewCT_GvmlGraphicalObjectFrame() *CT_GvmlGraphicalObjectFrame {
	_geaeg := &CT_GvmlGraphicalObjectFrame{}
	_geaeg.NvGraphicFramePr = NewCT_GvmlGraphicFrameNonVisual()
	_geaeg.Graphic = NewGraphic()
	_geaeg.Xfrm = NewCT_Transform2D()
	return _geaeg
}

// ValidateWithPath validates the CT_ShapeProperties and its children, prefixing error messages with path
func (_cacae *CT_ShapeProperties) ValidateWithPath(path string) error {
	if _baffe := _cacae.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _baffe != nil {
		return _baffe
	}
	if _cacae.Xfrm != nil {
		if _adcgd := _cacae.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _adcgd != nil {
			return _adcgd
		}
	}
	if _cacae.CustGeom != nil {
		if _defde := _cacae.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _defde != nil {
			return _defde
		}
	}
	if _cacae.PrstGeom != nil {
		if _dgcab := _cacae.PrstGeom.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0047\u0065\u006fm"); _dgcab != nil {
			return _dgcab
		}
	}
	if _cacae.NoFill != nil {
		if _aedgb := _cacae.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _aedgb != nil {
			return _aedgb
		}
	}
	if _cacae.SolidFill != nil {
		if _gdda := _cacae.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _gdda != nil {
			return _gdda
		}
	}
	if _cacae.GradFill != nil {
		if _cfdfg := _cacae.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _cfdfg != nil {
			return _cfdfg
		}
	}
	if _cacae.BlipFill != nil {
		if _aeabf := _cacae.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _aeabf != nil {
			return _aeabf
		}
	}
	if _cacae.PattFill != nil {
		if _gdbfa := _cacae.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _gdbfa != nil {
			return _gdbfa
		}
	}
	if _cacae.GrpFill != nil {
		if _agcfb := _cacae.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _agcfb != nil {
			return _agcfb
		}
	}
	if _cacae.Ln != nil {
		if _cggfg := _cacae.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _cggfg != nil {
			return _cggfg
		}
	}
	if _cacae.EffectLst != nil {
		if _cfgb := _cacae.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _cfgb != nil {
			return _cfgb
		}
	}
	if _cacae.EffectDag != nil {
		if _ecfba := _cacae.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _ecfba != nil {
			return _ecfba
		}
	}
	if _cacae.Scene3d != nil {
		if _cgfab := _cacae.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _cgfab != nil {
			return _cgfab
		}
	}
	if _cacae.Sp3d != nil {
		if _aeaef := _cacae.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _aeaef != nil {
			return _aeaef
		}
	}
	if _cacae.ExtLst != nil {
		if _efdee := _cacae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efdee != nil {
			return _efdee
		}
	}
	return nil
}
func (_bbfeg ST_LineEndType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bedge := _d.Attr{}
	_bedge.Name = name
	switch _bbfeg {
	case ST_LineEndTypeUnset:
		_bedge.Value = ""
	case ST_LineEndTypeNone:
		_bedge.Value = "\u006e\u006f\u006e\u0065"
	case ST_LineEndTypeTriangle:
		_bedge.Value = "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_LineEndTypeStealth:
		_bedge.Value = "\u0073t\u0065\u0061\u006c\u0074\u0068"
	case ST_LineEndTypeDiamond:
		_bedge.Value = "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case ST_LineEndTypeOval:
		_bedge.Value = "\u006f\u0076\u0061\u006c"
	case ST_LineEndTypeArrow:
		_bedge.Value = "\u0061\u0072\u0072o\u0077"
	}
	return _bedge, nil
}

// ValidateWithPath validates the CT_GvmlConnectorNonVisual and its children, prefixing error messages with path
func (_dbad *CT_GvmlConnectorNonVisual) ValidateWithPath(path string) error {
	if _aafeg := _dbad.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _aafeg != nil {
		return _aafeg
	}
	if _fedea := _dbad.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _fedea != nil {
		return _fedea
	}
	return nil
}
func (_bbcce *ST_BlackWhiteMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bbcce = 0
	case "\u0063\u006c\u0072":
		*_bbcce = 1
	case "\u0061\u0075\u0074\u006f":
		*_bbcce = 2
	case "\u0067\u0072\u0061\u0079":
		*_bbcce = 3
	case "\u006c\u0074\u0047\u0072\u0061\u0079":
		*_bbcce = 4
	case "\u0069n\u0076\u0047\u0072\u0061\u0079":
		*_bbcce = 5
	case "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e":
		*_bbcce = 6
	case "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y":
		*_bbcce = 7
	case "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065":
		*_bbcce = 8
	case "\u0062\u006c\u0061c\u006b":
		*_bbcce = 9
	case "\u0077\u0068\u0069t\u0065":
		*_bbcce = 10
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_bbcce = 11
	}
	return nil
}

// Validate validates the CT_FillEffect and its children
func (_fccdf *CT_FillEffect) Validate() error {
	return _fccdf.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074")
}

const (
	ST_ChartBuildStepUnset        ST_ChartBuildStep = 0
	ST_ChartBuildStepCategory     ST_ChartBuildStep = 1
	ST_ChartBuildStepPtInCategory ST_ChartBuildStep = 2
	ST_ChartBuildStepSeries       ST_ChartBuildStep = 3
	ST_ChartBuildStepPtInSeries   ST_ChartBuildStep = 4
	ST_ChartBuildStepAllPts       ST_ChartBuildStep = 5
	ST_ChartBuildStepGridLegend   ST_ChartBuildStep = 6
)

func (_bbdbg *CT_PositivePercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _dg.Sprintf("\u0025\u0076", _bbdbg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bdedc *CT_GvmlGroupShapeNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gdcgc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_bdedc.CNvPr, _gdcgc)
	_daffc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063N\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_bdedc.CNvGrpSpPr, _daffc)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_LineJoinRound and its children, prefixing error messages with path
func (_abbf *CT_LineJoinRound) ValidateWithPath(path string) error { return nil }

type CT_Headers struct{ Header []string }

// Validate validates the CT_ColorReplaceEffect and its children
func (_edccc *CT_ColorReplaceEffect) Validate() error {
	return _edccc.ValidateWithPath("C\u0054\u005f\u0043\u006flo\u0072R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_aaebb ST_TextUnderlineType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bdafa := _d.Attr{}
	_bdafa.Name = name
	switch _aaebb {
	case ST_TextUnderlineTypeUnset:
		_bdafa.Value = ""
	case ST_TextUnderlineTypeNone:
		_bdafa.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextUnderlineTypeWords:
		_bdafa.Value = "\u0077\u006f\u0072d\u0073"
	case ST_TextUnderlineTypeSng:
		_bdafa.Value = "\u0073\u006e\u0067"
	case ST_TextUnderlineTypeDbl:
		_bdafa.Value = "\u0064\u0062\u006c"
	case ST_TextUnderlineTypeHeavy:
		_bdafa.Value = "\u0068\u0065\u0061v\u0079"
	case ST_TextUnderlineTypeDotted:
		_bdafa.Value = "\u0064\u006f\u0074\u0074\u0065\u0064"
	case ST_TextUnderlineTypeDottedHeavy:
		_bdafa.Value = "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDash:
		_bdafa.Value = "\u0064\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDashHeavy:
		_bdafa.Value = "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y"
	case ST_TextUnderlineTypeDashLong:
		_bdafa.Value = "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067"
	case ST_TextUnderlineTypeDashLongHeavy:
		_bdafa.Value = "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDotDash:
		_bdafa.Value = "\u0064o\u0074\u0044\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDotDashHeavy:
		_bdafa.Value = "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDotDotDash:
		_bdafa.Value = "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDotDotDashHeavy:
		_bdafa.Value = "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeWavy:
		_bdafa.Value = "\u0077\u0061\u0076\u0079"
	case ST_TextUnderlineTypeWavyHeavy:
		_bdafa.Value = "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y"
	case ST_TextUnderlineTypeWavyDbl:
		_bdafa.Value = "\u0077a\u0076\u0079\u0044\u0062\u006c"
	}
	return _bdafa, nil
}
func (_bdaada ST_TextCapsType) String() string {
	switch _bdaada {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u006d\u0061l\u006c"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}
func (_gdaabd *ST_TextAutonumberScheme) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aebfb, _efbcf := d.Token()
	if _efbcf != nil {
		return _efbcf
	}
	if _eceff, _badcd := _aebfb.(_d.EndElement); _badcd && _eceff.Name == start.Name {
		*_gdaabd = 1
		return nil
	}
	if _bdggc, _afgbe := _aebfb.(_d.CharData); !_afgbe {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aebfb)
	} else {
		switch string(_bdggc) {
		case "":
			*_gdaabd = 0
		case "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_gdaabd = 1
		case "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_gdaabd = 2
		case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gdaabd = 3
		case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gdaabd = 4
		case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gdaabd = 5
		case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gdaabd = 6
		case "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_gdaabd = 7
		case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gdaabd = 8
		case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gdaabd = 9
		case "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e":
			*_gdaabd = 10
		case "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_gdaabd = 11
		case "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_gdaabd = 12
		case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gdaabd = 13
		case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gdaabd = 14
		case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gdaabd = 15
		case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gdaabd = 16
		case "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
			*_gdaabd = 17
		case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e":
			*_gdaabd = 18
		case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e":
			*_gdaabd = 19
		case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
			*_gdaabd = 20
		case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
			*_gdaabd = 21
		case "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gdaabd = 22
		case "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e":
			*_gdaabd = 23
		case "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gdaabd = 24
		case "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e":
			*_gdaabd = 25
		case "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
			*_gdaabd = 26
		case "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e":
			*_gdaabd = 27
		case "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gdaabd = 28
		case "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073":
			*_gdaabd = 29
		case "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073":
			*_gdaabd = 30
		case "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073":
			*_gdaabd = 31
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gdaabd = 32
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gdaabd = 33
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068":
			*_gdaabd = 34
		case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gdaabd = 35
		case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gdaabd = 36
		case "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_gdaabd = 37
		case "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gdaabd = 38
		case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064":
			*_gdaabd = 39
		case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052":
			*_gdaabd = 40
		case "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064":
			*_gdaabd = 41
		}
	}
	_aebfb, _efbcf = d.Token()
	if _efbcf != nil {
		return _efbcf
	}
	if _egfbce, _ccffa := _aebfb.(_d.EndElement); _ccffa && _egfbce.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aebfb)
}
func (_dedac *ST_DgmBuildStep) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dedac = 0
	case "\u0073\u0070":
		*_dedac = 1
	case "\u0062\u0067":
		*_dedac = 2
	}
	return nil
}
func (_fbdbef *ST_PresetShadowVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_adaea, _cfdfa := d.Token()
	if _cfdfa != nil {
		return _cfdfa
	}
	if _fdae, _bcfge := _adaea.(_d.EndElement); _bcfge && _fdae.Name == start.Name {
		*_fbdbef = 1
		return nil
	}
	if _ffbbc, _gbcdc := _adaea.(_d.CharData); !_gbcdc {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adaea)
	} else {
		switch string(_ffbbc) {
		case "":
			*_fbdbef = 0
		case "\u0073\u0068\u0064w\u0031":
			*_fbdbef = 1
		case "\u0073\u0068\u0064w\u0032":
			*_fbdbef = 2
		case "\u0073\u0068\u0064w\u0033":
			*_fbdbef = 3
		case "\u0073\u0068\u0064w\u0034":
			*_fbdbef = 4
		case "\u0073\u0068\u0064w\u0035":
			*_fbdbef = 5
		case "\u0073\u0068\u0064w\u0036":
			*_fbdbef = 6
		case "\u0073\u0068\u0064w\u0037":
			*_fbdbef = 7
		case "\u0073\u0068\u0064w\u0038":
			*_fbdbef = 8
		case "\u0073\u0068\u0064w\u0039":
			*_fbdbef = 9
		case "\u0073\u0068\u0064\u0077\u0031\u0030":
			*_fbdbef = 10
		case "\u0073\u0068\u0064\u0077\u0031\u0031":
			*_fbdbef = 11
		case "\u0073\u0068\u0064\u0077\u0031\u0032":
			*_fbdbef = 12
		case "\u0073\u0068\u0064\u0077\u0031\u0033":
			*_fbdbef = 13
		case "\u0073\u0068\u0064\u0077\u0031\u0034":
			*_fbdbef = 14
		case "\u0073\u0068\u0064\u0077\u0031\u0035":
			*_fbdbef = 15
		case "\u0073\u0068\u0064\u0077\u0031\u0036":
			*_fbdbef = 16
		case "\u0073\u0068\u0064\u0077\u0031\u0037":
			*_fbdbef = 17
		case "\u0073\u0068\u0064\u0077\u0031\u0038":
			*_fbdbef = 18
		case "\u0073\u0068\u0064\u0077\u0031\u0039":
			*_fbdbef = 19
		case "\u0073\u0068\u0064\u0077\u0032\u0030":
			*_fbdbef = 20
		}
	}
	_adaea, _cfdfa = d.Token()
	if _cfdfa != nil {
		return _cfdfa
	}
	if _fcbec, _acddd := _adaea.(_d.EndElement); _acddd && _fcbec.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adaea)
}
func (_gfga *CT_StyleMatrix) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gfga.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_gfga.NameAttr)})
	}
	e.EncodeToken(start)
	_ebee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_gfga.FillStyleLst, _ebee)
	_ggfbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cn\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_gfga.LnStyleLst, _ggfbe)
	_gbaba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003ae\u0066\u0066\u0065c\u0074\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_gfga.EffectStyleLst, _gbaba)
	_dbbeg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003ab\u0067\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_gfga.BgFillStyleLst, _dbbeg)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_febfd ST_TextVerticalType) String() string {
	switch _febfd {
	case 0:
		return ""
	case 1:
		return "\u0068\u006f\u0072\u007a"
	case 2:
		return "\u0076\u0065\u0072\u0074"
	case 3:
		return "\u0076e\u0072\u0074\u0032\u0037\u0030"
	case 4:
		return "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074"
	case 5:
		return "\u0065\u0061\u0056\u0065\u0072\u0074"
	case 6:
		return "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074"
	case 7:
		return "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c"
	}
	return ""
}
func (_ecfcg ST_TextTabAlignType) String() string {
	switch _ecfcg {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0072"
	case 4:
		return "\u0064\u0065\u0063"
	}
	return ""
}
func (_dfgfe ST_SystemColorVal) Validate() error   { return _dfgfe.ValidateWithPath("") }
func NewCT_GroupTransform2D() *CT_GroupTransform2D { _bgbfd := &CT_GroupTransform2D{}; return _bgbfd }

// Validate validates the CT_TextUnderlineFillFollowText and its children
func (_gebeef *CT_TextUnderlineFillFollowText) Validate() error {
	return _gebeef.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u0046\u0069l\u006c\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

type CT_AlphaReplaceEffect struct{ AAttr ST_PositiveFixedPercentage }

func NewCT_NonVisualGroupDrawingShapeProps() *CT_NonVisualGroupDrawingShapeProps {
	_baede := &CT_NonVisualGroupDrawingShapeProps{}
	return _baede
}
func (_ggbee *CT_ConnectionSite) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ggbee.Pos = NewCT_AdjPoint2D()
	for _, _efg := range start.Attr {
		if _efg.Name.Local == "\u0061\u006e\u0067" {
			_fbeb, _ceba := ParseUnionST_AdjAngle(_efg.Value)
			if _ceba != nil {
				return _ceba
			}
			_ggbee.AngAttr = _fbeb
			continue
		}
	}
_egabd:
	for {
		_edbe, _cbad := d.Token()
		if _cbad != nil {
			return _cbad
		}
		switch _gdce := _edbe.(type) {
		case _d.StartElement:
			switch _gdce.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _eefd := d.DecodeElement(_ggbee.Pos, &_gdce); _eefd != nil {
					return _eefd
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0053\u0069\u0074\u0065\u0020\u0025\u0076", _gdce.Name)
				if _ccgd := d.Skip(); _ccgd != nil {
					return _ccgd
				}
			}
		case _d.EndElement:
			break _egabd
		case _d.CharData:
		}
	}
	return nil
}
func (_fcdbd ST_LineEndLength) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fcdbd.String(), start)
}
func (_gdedc ST_AnimationDgmBuildType) String() string {
	if _gdedc.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		return _gdedc.ST_AnimationBuildType.String()
	}
	if _gdedc.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		return _gdedc.ST_AnimationDgmOnlyBuildType.String()
	}
	return ""
}

const (
	ST_TextAutonumberSchemeUnset                 ST_TextAutonumberScheme = 0
	ST_TextAutonumberSchemeAlphaLcParenBoth      ST_TextAutonumberScheme = 1
	ST_TextAutonumberSchemeAlphaUcParenBoth      ST_TextAutonumberScheme = 2
	ST_TextAutonumberSchemeAlphaLcParenR         ST_TextAutonumberScheme = 3
	ST_TextAutonumberSchemeAlphaUcParenR         ST_TextAutonumberScheme = 4
	ST_TextAutonumberSchemeAlphaLcPeriod         ST_TextAutonumberScheme = 5
	ST_TextAutonumberSchemeAlphaUcPeriod         ST_TextAutonumberScheme = 6
	ST_TextAutonumberSchemeArabicParenBoth       ST_TextAutonumberScheme = 7
	ST_TextAutonumberSchemeArabicParenR          ST_TextAutonumberScheme = 8
	ST_TextAutonumberSchemeArabicPeriod          ST_TextAutonumberScheme = 9
	ST_TextAutonumberSchemeArabicPlain           ST_TextAutonumberScheme = 10
	ST_TextAutonumberSchemeRomanLcParenBoth      ST_TextAutonumberScheme = 11
	ST_TextAutonumberSchemeRomanUcParenBoth      ST_TextAutonumberScheme = 12
	ST_TextAutonumberSchemeRomanLcParenR         ST_TextAutonumberScheme = 13
	ST_TextAutonumberSchemeRomanUcParenR         ST_TextAutonumberScheme = 14
	ST_TextAutonumberSchemeRomanLcPeriod         ST_TextAutonumberScheme = 15
	ST_TextAutonumberSchemeRomanUcPeriod         ST_TextAutonumberScheme = 16
	ST_TextAutonumberSchemeCircleNumDbPlain      ST_TextAutonumberScheme = 17
	ST_TextAutonumberSchemeCircleNumWdBlackPlain ST_TextAutonumberScheme = 18
	ST_TextAutonumberSchemeCircleNumWdWhitePlain ST_TextAutonumberScheme = 19
	ST_TextAutonumberSchemeArabicDbPeriod        ST_TextAutonumberScheme = 20
	ST_TextAutonumberSchemeArabicDbPlain         ST_TextAutonumberScheme = 21
	ST_TextAutonumberSchemeEa1ChsPeriod          ST_TextAutonumberScheme = 22
	ST_TextAutonumberSchemeEa1ChsPlain           ST_TextAutonumberScheme = 23
	ST_TextAutonumberSchemeEa1ChtPeriod          ST_TextAutonumberScheme = 24
	ST_TextAutonumberSchemeEa1ChtPlain           ST_TextAutonumberScheme = 25
	ST_TextAutonumberSchemeEa1JpnChsDbPeriod     ST_TextAutonumberScheme = 26
	ST_TextAutonumberSchemeEa1JpnKorPlain        ST_TextAutonumberScheme = 27
	ST_TextAutonumberSchemeEa1JpnKorPeriod       ST_TextAutonumberScheme = 28
	ST_TextAutonumberSchemeArabic1Minus          ST_TextAutonumberScheme = 29
	ST_TextAutonumberSchemeArabic2Minus          ST_TextAutonumberScheme = 30
	ST_TextAutonumberSchemeHebrew2Minus          ST_TextAutonumberScheme = 31
	ST_TextAutonumberSchemeThaiAlphaPeriod       ST_TextAutonumberScheme = 32
	ST_TextAutonumberSchemeThaiAlphaParenR       ST_TextAutonumberScheme = 33
	ST_TextAutonumberSchemeThaiAlphaParenBoth    ST_TextAutonumberScheme = 34
	ST_TextAutonumberSchemeThaiNumPeriod         ST_TextAutonumberScheme = 35
	ST_TextAutonumberSchemeThaiNumParenR         ST_TextAutonumberScheme = 36
	ST_TextAutonumberSchemeThaiNumParenBoth      ST_TextAutonumberScheme = 37
	ST_TextAutonumberSchemeHindiAlphaPeriod      ST_TextAutonumberScheme = 38
	ST_TextAutonumberSchemeHindiNumPeriod        ST_TextAutonumberScheme = 39
	ST_TextAutonumberSchemeHindiNumParenR        ST_TextAutonumberScheme = 40
	ST_TextAutonumberSchemeHindiAlpha1Period     ST_TextAutonumberScheme = 41
)

// Validate validates the CT_TextNoBullet and its children
func (_dcab *CT_TextNoBullet) Validate() error {
	return _dcab.ValidateWithPath("\u0043T\u005fT\u0065\u0078\u0074\u004e\u006f\u0042\u0075\u006c\u006c\u0065\u0074")
}

// ValidateWithPath validates the CT_Bevel and its children, prefixing error messages with path
func (_bad *CT_Bevel) ValidateWithPath(path string) error {
	if _bad.WAttr != nil {
		if *_bad.WAttr < 0 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_bad.WAttr)
		}
		if *_bad.WAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073/\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bad.WAttr)
		}
	}
	if _bad.HAttr != nil {
		if *_bad.HAttr < 0 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0048A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_bad.HAttr)
		}
		if *_bad.HAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073/\u006d\u002e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bad.HAttr)
		}
	}
	if _faff := _bad.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _faff != nil {
		return _faff
	}
	return nil
}
func NewCT_EffectReference() *CT_EffectReference { _dbccg := &CT_EffectReference{}; return _dbccg }
func NewCT_GraphicalObject() *CT_GraphicalObject {
	_bcaag := &CT_GraphicalObject{}
	_bcaag.GraphicData = NewCT_GraphicalObjectData()
	return _bcaag
}
func NewCT_SystemColor() *CT_SystemColor {
	_cdefa := &CT_SystemColor{}
	_cdefa.ValAttr = ST_SystemColorVal(1)
	return _cdefa
}

type CT_TextField struct {
	IdAttr   string
	TypeAttr *string
	RPr      *CT_TextCharacterProperties
	PPr      *CT_TextParagraphProperties
	T        *string
}
type CT_AlphaInverseEffect struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_gcfa *CT_AlphaModulateEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gcc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
	e.EncodeElement(_gcfa.Cont, _gcc)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_Table struct {
	TblPr   *CT_TableProperties
	TblGrid *CT_TableGrid
	Tr      []*CT_TableRow
}

func (_gceec *CT_HSLEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gceec.HueAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0075\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_gceec.HueAttr)})
	}
	if _gceec.SatAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0061\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_gceec.SatAttr)})
	}
	if _gceec.LumAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0075\u006d"}, Value: _dg.Sprintf("\u0025\u0076", *_gceec.LumAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_PathShadeProperties struct {
	PathAttr   ST_PathShadeType
	FillToRect *CT_RelativeRect
}

const (
	ST_PathShadeTypeUnset  ST_PathShadeType = 0
	ST_PathShadeTypeShape  ST_PathShadeType = 1
	ST_PathShadeTypeCircle ST_PathShadeType = 2
	ST_PathShadeTypeRect   ST_PathShadeType = 3
)

// Validate validates the CT_BackgroundFormatting and its children
func (_bbb *CT_BackgroundFormatting) Validate() error {
	return _bbb.ValidateWithPath("\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067")
}
func (_agfgb ST_TextVertOverflowType) String() string {
	switch _agfgb {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case 2:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073"
	case 3:
		return "\u0063\u006c\u0069\u0070"
	}
	return ""
}

// ValidateWithPath validates the CT_Vector3D and its children, prefixing error messages with path
func (_cdgc *CT_Vector3D) ValidateWithPath(path string) error {
	if _gacgc := _cdgc.DxAttr.ValidateWithPath(path + "\u002fD\u0078\u0041\u0074\u0074\u0072"); _gacgc != nil {
		return _gacgc
	}
	if _cgaba := _cdgc.DyAttr.ValidateWithPath(path + "\u002fD\u0079\u0041\u0074\u0074\u0072"); _cgaba != nil {
		return _cgaba
	}
	if _eccggd := _cdgc.DzAttr.ValidateWithPath(path + "\u002fD\u007a\u0041\u0074\u0074\u0072"); _eccggd != nil {
		return _eccggd
	}
	return nil
}

type CT_NonVisualContentPartProperties struct {
	IsCommentAttr *bool
	CpLocks       *CT_ContentPartLocking
	ExtLst        *CT_OfficeArtExtensionList
}

func (_edagd ST_AnimationDgmBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _edagd.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		e.EncodeToken(_d.CharData(_edagd.ST_AnimationBuildType.String()))
	}
	if _edagd.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		e.EncodeToken(_d.CharData(_edagd.ST_AnimationDgmOnlyBuildType.String()))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_aafbb *ST_PitchFamily) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_aafbb = 0
	case "\u0030\u0030":
		*_aafbb = 1
	case "\u0030\u0031":
		*_aafbb = 2
	case "\u0030\u0032":
		*_aafbb = 3
	case "\u0031\u0036":
		*_aafbb = 4
	case "\u0031\u0037":
		*_aafbb = 5
	case "\u0031\u0038":
		*_aafbb = 6
	case "\u0033\u0032":
		*_aafbb = 7
	case "\u0033\u0033":
		*_aafbb = 8
	case "\u0033\u0034":
		*_aafbb = 9
	case "\u0034\u0038":
		*_aafbb = 10
	case "\u0034\u0039":
		*_aafbb = 11
	case "\u0035\u0030":
		*_aafbb = 12
	case "\u0036\u0034":
		*_aafbb = 13
	case "\u0036\u0035":
		*_aafbb = 14
	case "\u0036\u0036":
		*_aafbb = 15
	case "\u0038\u0030":
		*_aafbb = 16
	case "\u0038\u0031":
		*_aafbb = 17
	case "\u0038\u0032":
		*_aafbb = 18
	}
	return nil
}

// ValidateWithPath validates the EG_ShadeProperties and its children, prefixing error messages with path
func (_bbfbd *EG_ShadeProperties) ValidateWithPath(path string) error {
	if _bbfbd.Lin != nil {
		if _eefad := _bbfbd.Lin.ValidateWithPath(path + "\u002f\u004c\u0069\u006e"); _eefad != nil {
			return _eefad
		}
	}
	if _bbfbd.Path != nil {
		if _gfadb := _bbfbd.Path.ValidateWithPath(path + "\u002f\u0050\u0061t\u0068"); _gfadb != nil {
			return _gfadb
		}
	}
	return nil
}
func (_dce *CT_AlphaReplaceEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061"}, Value: _dg.Sprintf("\u0025\u0076", _dce.AAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ebadef *ST_OnOffStyleType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bfedcg, _eefcc := d.Token()
	if _eefcc != nil {
		return _eefcc
	}
	if _efegc, _abfabc := _bfedcg.(_d.EndElement); _abfabc && _efegc.Name == start.Name {
		*_ebadef = 1
		return nil
	}
	if _agdbe, _ffagd := _bfedcg.(_d.CharData); !_ffagd {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfedcg)
	} else {
		switch string(_agdbe) {
		case "":
			*_ebadef = 0
		case "\u006f\u006e":
			*_ebadef = 1
		case "\u006f\u0066\u0066":
			*_ebadef = 2
		case "\u0064\u0065\u0066":
			*_ebadef = 3
		}
	}
	_bfedcg, _eefcc = d.Token()
	if _eefcc != nil {
		return _eefcc
	}
	if _dfggcd, _bddeb := _bfedcg.(_d.EndElement); _bddeb && _dfggcd.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfedcg)
}
func (_ddg *CT_AlphaOutsetEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bfd := range start.Attr {
		if _bfd.Name.Local == "\u0072\u0061\u0064" {
			_eab, _gee := ParseUnionST_Coordinate(_bfd.Value)
			if _gee != nil {
				return _gee
			}
			_ddg.RadAttr = &_eab
			continue
		}
	}
	for {
		_degg, _cfbf := d.Token()
		if _cfbf != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068a\u004fu\u0074\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _cfbf)
		}
		if _eef, _def := _degg.(_d.EndElement); _def && _eef.Name == start.Name {
			break
		}
	}
	return nil
}
func (_agffa *CT_PresetGeometry2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_geccb, _caecc := _agffa.PrstAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _caecc != nil {
		return _caecc
	}
	start.Attr = append(start.Attr, _geccb)
	e.EncodeToken(start)
	if _agffa.AvLst != nil {
		_bfeca := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_agffa.AvLst, _bfeca)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_GvmlTextShape() *CT_GvmlTextShape {
	_gade := &CT_GvmlTextShape{}
	_gade.TxBody = NewCT_TextBody()
	return _gade
}
func (_bdcdf ST_BlipCompression) Validate() error { return _bdcdf.ValidateWithPath("") }
func (_afcba *CT_EffectContainer) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afcba.TypeAttr != ST_EffectContainerTypeUnset {
		_fgccg, _bbfga := _afcba.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _bbfga != nil {
			return _bbfga
		}
		start.Attr = append(start.Attr, _fgccg)
	}
	if _afcba.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _dg.Sprintf("\u0025\u0076", *_afcba.NameAttr)})
	}
	e.EncodeToken(start)
	if _afcba.Cont != nil {
		_babb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
		e.EncodeElement(_afcba.Cont, _babb)
	}
	if _afcba.Effect != nil {
		_agbfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_afcba.Effect, _agbfc)
	}
	if _afcba.AlphaBiLevel != nil {
		_ccde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_afcba.AlphaBiLevel, _ccde)
	}
	if _afcba.AlphaCeiling != nil {
		_dbgf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		e.EncodeElement(_afcba.AlphaCeiling, _dbgf)
	}
	if _afcba.AlphaFloor != nil {
		_adabe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		e.EncodeElement(_afcba.AlphaFloor, _adabe)
	}
	if _afcba.AlphaInv != nil {
		_becc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		e.EncodeElement(_afcba.AlphaInv, _becc)
	}
	if _afcba.AlphaMod != nil {
		_gbgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_afcba.AlphaMod, _gbgd)
	}
	if _afcba.AlphaModFix != nil {
		_fefb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		e.EncodeElement(_afcba.AlphaModFix, _fefb)
	}
	if _afcba.AlphaOutset != nil {
		_fgfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}}
		e.EncodeElement(_afcba.AlphaOutset, _fgfc)
	}
	if _afcba.AlphaRepl != nil {
		_eafc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		e.EncodeElement(_afcba.AlphaRepl, _eafc)
	}
	if _afcba.BiLevel != nil {
		_fggg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		e.EncodeElement(_afcba.BiLevel, _fggg)
	}
	if _afcba.Blend != nil {
		_aggb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u006c\u0065\u006e\u0064"}}
		e.EncodeElement(_afcba.Blend, _aggb)
	}
	if _afcba.Blur != nil {
		_ebagf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_afcba.Blur, _ebagf)
	}
	if _afcba.ClrChange != nil {
		_gadcb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		e.EncodeElement(_afcba.ClrChange, _gadcb)
	}
	if _afcba.ClrRepl != nil {
		_cadb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		e.EncodeElement(_afcba.ClrRepl, _cadb)
	}
	if _afcba.Duotone != nil {
		_cdfea := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		e.EncodeElement(_afcba.Duotone, _cdfea)
	}
	if _afcba.Fill != nil {
		_gbabf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_afcba.Fill, _gbabf)
	}
	if _afcba.FillOverlay != nil {
		_eaegb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_afcba.FillOverlay, _eaegb)
	}
	if _afcba.Glow != nil {
		_gagf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_afcba.Glow, _gagf)
	}
	if _afcba.Grayscl != nil {
		_dgdf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		e.EncodeElement(_afcba.Grayscl, _dgdf)
	}
	if _afcba.Hsl != nil {
		_dacfd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		e.EncodeElement(_afcba.Hsl, _dacfd)
	}
	if _afcba.InnerShdw != nil {
		_gcgdf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_afcba.InnerShdw, _gcgdf)
	}
	if _afcba.Lum != nil {
		_befe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_afcba.Lum, _befe)
	}
	if _afcba.OuterShdw != nil {
		_fbdfe := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_afcba.OuterShdw, _fbdfe)
	}
	if _afcba.PrstShdw != nil {
		_fdbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_afcba.PrstShdw, _fdbe)
	}
	if _afcba.Reflection != nil {
		_effg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_afcba.Reflection, _effg)
	}
	if _afcba.RelOff != nil {
		_efab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072\u0065\u006c\u004f\u0066\u0066"}}
		e.EncodeElement(_afcba.RelOff, _efab)
	}
	if _afcba.SoftEdge != nil {
		_bbgf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_afcba.SoftEdge, _bbgf)
	}
	if _afcba.Tint != nil {
		_adbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_afcba.Tint, _adbc)
	}
	if _afcba.Xfrm != nil {
		_feafg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_afcba.Xfrm, _feafg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_EffectProperties() *CT_EffectProperties { _ccac := &CT_EffectProperties{}; return _ccac }
func (_gffcd *CT_InnerShadowEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gffcd.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_gffcd.BlurRadAttr)})
	}
	if _gffcd.DistAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_gffcd.DistAttr)})
	}
	if _gffcd.DirAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0072"}, Value: _dg.Sprintf("\u0025\u0076", *_gffcd.DirAttr)})
	}
	e.EncodeToken(start)
	if _gffcd.ScrgbClr != nil {
		_agec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_gffcd.ScrgbClr, _agec)
	}
	if _gffcd.SrgbClr != nil {
		_fcfaf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_gffcd.SrgbClr, _fcfaf)
	}
	if _gffcd.HslClr != nil {
		_cgda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_gffcd.HslClr, _cgda)
	}
	if _gffcd.SysClr != nil {
		_gecbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_gffcd.SysClr, _gecbf)
	}
	if _gffcd.SchemeClr != nil {
		_fgfgf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_gffcd.SchemeClr, _fgfgf)
	}
	if _gffcd.PrstClr != nil {
		_aaegd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_gffcd.PrstClr, _aaegd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_beaef ST_LineEndWidth) Validate() error { return _beaef.ValidateWithPath("") }
func (_eebcg *EG_ColorChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gffbb:
	for {
		_cbgae, _ecgfcb := d.Token()
		if _ecgfcb != nil {
			return _ecgfcb
		}
		switch _aacaag := _cbgae.(type) {
		case _d.StartElement:
			switch _aacaag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_eebcg.ScrgbClr = NewCT_ScRgbColor()
				if _degfa := d.DecodeElement(_eebcg.ScrgbClr, &_aacaag); _degfa != nil {
					return _degfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_eebcg.SrgbClr = NewCT_SRgbColor()
				if _fgbea := d.DecodeElement(_eebcg.SrgbClr, &_aacaag); _fgbea != nil {
					return _fgbea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_eebcg.HslClr = NewCT_HslColor()
				if _afdge := d.DecodeElement(_eebcg.HslClr, &_aacaag); _afdge != nil {
					return _afdge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_eebcg.SysClr = NewCT_SystemColor()
				if _bebgd := d.DecodeElement(_eebcg.SysClr, &_aacaag); _bebgd != nil {
					return _bebgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_eebcg.SchemeClr = NewCT_SchemeColor()
				if _babgg := d.DecodeElement(_eebcg.SchemeClr, &_aacaag); _babgg != nil {
					return _babgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_eebcg.PrstClr = NewCT_PresetColor()
				if _afdaf := d.DecodeElement(_eebcg.PrstClr, &_aacaag); _afdaf != nil {
					return _afdaf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043\u0068o\u0069c\u0065\u0020\u0025\u0076", _aacaag.Name)
				if _afedf := d.Skip(); _afedf != nil {
					return _afedf
				}
			}
		case _d.EndElement:
			break _gffbb
		case _d.CharData:
		}
	}
	return nil
}
func (_fbgbc ST_TextHorzOverflowType) Validate() error { return _fbgbc.ValidateWithPath("") }
func NewCT_ScRgbColor() *CT_ScRgbColor                 { _bcad := &CT_ScRgbColor{}; return _bcad }
func (_gdca *CT_BlendEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gdca.BlendAttr = ST_BlendMode(1)
	_gdca.Cont = NewCT_EffectContainer()
	for _, _bbfa := range start.Attr {
		if _bbfa.Name.Local == "\u0062\u006c\u0065n\u0064" {
			_gdca.BlendAttr.UnmarshalXMLAttr(_bbfa)
			continue
		}
	}
_faaga:
	for {
		_afec, _ffge := d.Token()
		if _ffge != nil {
			return _ffge
		}
		switch _abae := _afec.(type) {
		case _d.StartElement:
			switch _abae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				if _fcaf := d.DecodeElement(_gdca.Cont, &_abae); _fcaf != nil {
					return _fcaf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045\u0066f\u0065c\u0074\u0020\u0025\u0076", _abae.Name)
				if _edcd := d.Skip(); _edcd != nil {
					return _edcd
				}
			}
		case _d.EndElement:
			break _faaga
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GvmlGroupShapeChoice and its children
func (_fbgcb *CT_GvmlGroupShapeChoice) Validate() error {
	return _fbgcb.ValidateWithPath("\u0043\u0054\u005fGv\u006d\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}

// ValidateWithPath validates the CT_AnimationGraphicalObjectBuildProperties and its children, prefixing error messages with path
func (_ddcd *CT_AnimationGraphicalObjectBuildProperties) ValidateWithPath(path string) error {
	if _ddcd.BldDgm != nil {
		if _ddf := _ddcd.BldDgm.ValidateWithPath(path + "\u002fB\u006c\u0064\u0044\u0067\u006d"); _ddf != nil {
			return _ddf
		}
	}
	if _ddcd.BldChart != nil {
		if _acf := _ddcd.BldChart.ValidateWithPath(path + "\u002fB\u006c\u0064\u0043\u0068\u0061\u0072t"); _acf != nil {
			return _acf
		}
	}
	return nil
}
func NewCT_BackgroundFormatting() *CT_BackgroundFormatting {
	_aef := &CT_BackgroundFormatting{}
	return _aef
}
func NewCT_GvmlGroupShape() *CT_GvmlGroupShape {
	_fbddf := &CT_GvmlGroupShape{}
	_fbddf.NvGrpSpPr = NewCT_GvmlGroupShapeNonVisual()
	_fbddf.GrpSpPr = NewCT_GroupShapeProperties()
	return _fbddf
}

// Validate validates the CT_SchemeColor and its children
func (_bbgaf *CT_SchemeColor) Validate() error {
	return _bbgaf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065C\u006f\u006c\u006f\u0072")
}
func (_bebge *CT_SoftEdgesEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bebge.RadAttr = 0
	for _, _abagf := range start.Attr {
		if _abagf.Name.Local == "\u0072\u0061\u0064" {
			_ceaef, _dgdge := _c.ParseInt(_abagf.Value, 10, 64)
			if _dgdge != nil {
				return _dgdge
			}
			_bebge.RadAttr = _ceaef
			continue
		}
	}
	for {
		_dbgc, _gaaab := d.Token()
		if _gaaab != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u006f\u0066\u0074\u0045\u0064\u0067e\u0073\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _gaaab)
		}
		if _ggebcf, _daebf := _dbgc.(_d.EndElement); _daebf && _ggebcf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bbgaa *CT_TableBackgroundStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cagag:
	for {
		_bgaabe, _feced := d.Token()
		if _feced != nil {
			return _feced
		}
		switch _cfeb := _bgaabe.(type) {
		case _d.StartElement:
			switch _cfeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_bbgaa.Fill = NewCT_FillProperties()
				if _addcd := d.DecodeElement(_bbgaa.Fill, &_cfeb); _addcd != nil {
					return _addcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_bbgaa.FillRef = NewCT_StyleMatrixReference()
				if _adda := d.DecodeElement(_bbgaa.FillRef, &_cfeb); _adda != nil {
					return _adda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_bbgaa.Effect = NewCT_EffectProperties()
				if _acbc := d.DecodeElement(_bbgaa.Effect, &_cfeb); _acbc != nil {
					return _acbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				_bbgaa.EffectRef = NewCT_StyleMatrixReference()
				if _facca := d.DecodeElement(_bbgaa.EffectRef, &_cfeb); _facca != nil {
					return _facca
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0042\u0061\u0063\u006bg\u0072\u006f\u0075\u006e\u0064\u0053t\u0079\u006c\u0065 \u0025\u0076", _cfeb.Name)
				if _gadge := d.Skip(); _gadge != nil {
					return _gadge
				}
			}
		case _d.EndElement:
			break _cagag
		case _d.CharData:
		}
	}
	return nil
}
func (_gaeef *CT_Path2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ggfgb := range start.Attr {
		if _ggfgb.Name.Local == "\u0077" {
			_cbccb, _cffb := _c.ParseInt(_ggfgb.Value, 10, 64)
			if _cffb != nil {
				return _cffb
			}
			_gaeef.WAttr = &_cbccb
			continue
		}
		if _ggfgb.Name.Local == "\u0068" {
			_bgcaa, _bedb := _c.ParseInt(_ggfgb.Value, 10, 64)
			if _bedb != nil {
				return _bedb
			}
			_gaeef.HAttr = &_bgcaa
			continue
		}
		if _ggfgb.Name.Local == "\u0066\u0069\u006c\u006c" {
			_gaeef.FillAttr.UnmarshalXMLAttr(_ggfgb)
			continue
		}
		if _ggfgb.Name.Local == "\u0073\u0074\u0072\u006f\u006b\u0065" {
			_ecbd, _facdfe := _c.ParseBool(_ggfgb.Value)
			if _facdfe != nil {
				return _facdfe
			}
			_gaeef.StrokeAttr = &_ecbd
			continue
		}
		if _ggfgb.Name.Local == "e\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u004f\u006b" {
			_ddafa, _acac := _c.ParseBool(_ggfgb.Value)
			if _acac != nil {
				return _acac
			}
			_gaeef.ExtrusionOkAttr = &_ddafa
			continue
		}
	}
_egac:
	for {
		_fdede, _aeadgc := d.Token()
		if _aeadgc != nil {
			return _aeadgc
		}
		switch _gfecb := _fdede.(type) {
		case _d.StartElement:
			switch _gfecb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u006fs\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u006fs\u0065"}:
				_defaf := NewCT_Path2DClose()
				if _bdgcc := d.DecodeElement(_defaf, &_gfecb); _bdgcc != nil {
					return _bdgcc
				}
				_gaeef.Close = append(_gaeef.Close, _defaf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0076\u0065\u0054\u006f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0076\u0065\u0054\u006f"}:
				_acda := NewCT_Path2DMoveTo()
				if _bedd := d.DecodeElement(_acda, &_gfecb); _bedd != nil {
					return _bedd
				}
				_gaeef.MoveTo = append(_gaeef.MoveTo, _acda)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006f"}:
				_bafa := NewCT_Path2DLineTo()
				if _agbcc := d.DecodeElement(_bafa, &_gfecb); _agbcc != nil {
					return _agbcc
				}
				_gaeef.LnTo = append(_gaeef.LnTo, _bafa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0072\u0063T\u006f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0072\u0063T\u006f"}:
				_fafeg := NewCT_Path2DArcTo()
				if _gedc := d.DecodeElement(_fafeg, &_gfecb); _gedc != nil {
					return _gedc
				}
				_gaeef.ArcTo = append(_gaeef.ArcTo, _fafeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0061\u0064\u0042\u0065\u007a\u0054o"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0061\u0064\u0042\u0065\u007a\u0054o"}:
				_bgcgd := NewCT_Path2DQuadBezierTo()
				if _aafbc := d.DecodeElement(_bgcgd, &_gfecb); _aafbc != nil {
					return _aafbc
				}
				_gaeef.QuadBezTo = append(_gaeef.QuadBezTo, _bgcgd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}:
				_aaade := NewCT_Path2DCubicBezierTo()
				if _dfcca := d.DecodeElement(_aaade, &_gfecb); _dfcca != nil {
					return _dfcca
				}
				_gaeef.CubicBezTo = append(_gaeef.CubicBezTo, _aaade)
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044 \u0025\u0076", _gfecb.Name)
				if _fdcgd := d.Skip(); _fdcgd != nil {
					return _fdcgd
				}
			}
		case _d.EndElement:
			break _egac
		case _d.CharData:
		}
	}
	return nil
}
func (_agbe *CT_FillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ebec:
	for {
		_gfad, _dgcfb := d.Token()
		if _dgcfb != nil {
			return _dgcfb
		}
		switch _ddfcc := _gfad.(type) {
		case _d.StartElement:
			switch _ddfcc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_agbe.NoFill = NewCT_NoFillProperties()
				if _gefd := d.DecodeElement(_agbe.NoFill, &_ddfcc); _gefd != nil {
					return _gefd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_agbe.SolidFill = NewCT_SolidColorFillProperties()
				if _bcde := d.DecodeElement(_agbe.SolidFill, &_ddfcc); _bcde != nil {
					return _bcde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_agbe.GradFill = NewCT_GradientFillProperties()
				if _agbc := d.DecodeElement(_agbe.GradFill, &_ddfcc); _agbc != nil {
					return _agbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_agbe.BlipFill = NewCT_BlipFillProperties()
				if _gbee := d.DecodeElement(_agbe.BlipFill, &_ddfcc); _gbee != nil {
					return _gbee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_agbe.PattFill = NewCT_PatternFillProperties()
				if _gdde := d.DecodeElement(_agbe.PattFill, &_ddfcc); _gdde != nil {
					return _gdde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_agbe.GrpFill = NewCT_GroupFillProperties()
				if _fbddc := d.DecodeElement(_agbe.GrpFill, &_ddfcc); _fbddc != nil {
					return _fbddc
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ddfcc.Name)
				if _cecd := d.Skip(); _cecd != nil {
					return _cecd
				}
			}
		case _d.EndElement:
			break _ebec
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ContentPartLocking and its children
func (_cdga *CT_ContentPartLocking) Validate() error {
	return _cdga.ValidateWithPath("C\u0054\u005f\u0043\u006fnt\u0065n\u0074\u0050\u0061\u0072\u0074L\u006f\u0063\u006b\u0069\u006e\u0067")
}
func (_dadge *ST_PositiveFixedPercentage) Validate() error { return _dadge.ValidateWithPath("") }
func (_ddaeeb ST_PathShadeType) Validate() error           { return _ddaeeb.ValidateWithPath("") }

// Validate validates the CT_TextShapeAutofit and its children
func (_bbegd *CT_TextShapeAutofit) Validate() error {
	return _bbegd.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0053\u0068\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074")
}
func (_cfedgd *ST_TextPoint) ValidateWithPath(path string) error {
	_faabb := []string{}
	if _cfedgd.ST_TextPointUnqualified != nil {
		_faabb = append(_faabb, "\u0053\u0054\u005fTe\u0078\u0074\u0050\u006f\u0069\u006e\u0074\u0055\u006e\u0071\u0075\u0061\u006c\u0069\u0066\u0069\u0065\u0064")
	}
	if _cfedgd.ST_UniversalMeasure != nil {
		_faabb = append(_faabb, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_faabb) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _faabb)
	}
	return nil
}
func NewCT_ColorMappingOverride() *CT_ColorMappingOverride {
	_ddag := &CT_ColorMappingOverride{}
	_ddag.Choice = NewCT_ColorMappingOverrideChoice()
	return _ddag
}

type CT_GraphicalObjectFrameLocking struct {
	NoGrpAttr          *bool
	NoDrilldownAttr    *bool
	NoSelectAttr       *bool
	NoChangeAspectAttr *bool
	NoMoveAttr         *bool
	NoResizeAttr       *bool
	ExtLst             *CT_OfficeArtExtensionList
}

const (
	ST_EffectContainerTypeUnset ST_EffectContainerType = 0
	ST_EffectContainerTypeSib   ST_EffectContainerType = 1
	ST_EffectContainerTypeTree  ST_EffectContainerType = 2
)

type AG_Blob struct {
	EmbedAttr *string
	LinkAttr  *string
}
type CT_PresetColor struct {
	ValAttr           ST_PresetColorVal
	EG_ColorTransform []*EG_ColorTransform
}

func NewCT_GrayscaleTransform() *CT_GrayscaleTransform {
	_ddbge := &CT_GrayscaleTransform{}
	return _ddbge
}
func (_bead ST_DgmBuildStep) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bead.String(), start)
}
func NewCT_PresetLineDashProperties() *CT_PresetLineDashProperties {
	_gdbbg := &CT_PresetLineDashProperties{}
	return _gdbbg
}
func NewCT_GammaTransform() *CT_GammaTransform { _bbed := &CT_GammaTransform{}; return _bbed }
func (_bafbdf *CT_SchemeColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bafbdf.ValAttr = ST_SchemeColorVal(1)
	for _, _gcffa := range start.Attr {
		if _gcffa.Name.Local == "\u0076\u0061\u006c" {
			_bafbdf.ValAttr.UnmarshalXMLAttr(_gcffa)
			continue
		}
	}
_gaadf:
	for {
		_aaea, _baaa := d.Token()
		if _baaa != nil {
			return _baaa
		}
		switch _bbfbb := _aaea.(type) {
		case _d.StartElement:
			switch _bbfbb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_egcgc := NewEG_ColorTransform()
				_egcgc.Tint = NewCT_PositiveFixedPercentage()
				if _fadeb := d.DecodeElement(_egcgc.Tint, &_bbfbb); _fadeb != nil {
					return _fadeb
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _egcgc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_caabd := NewEG_ColorTransform()
				_caabd.Shade = NewCT_PositiveFixedPercentage()
				if _adae := d.DecodeElement(_caabd.Shade, &_bbfbb); _adae != nil {
					return _adae
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _caabd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_dcfba := NewEG_ColorTransform()
				_dcfba.Comp = NewCT_ComplementTransform()
				if _fbce := d.DecodeElement(_dcfba.Comp, &_bbfbb); _fbce != nil {
					return _fbce
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _dcfba)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_gcebb := NewEG_ColorTransform()
				_gcebb.Inv = NewCT_InverseTransform()
				if _daffcf := d.DecodeElement(_gcebb.Inv, &_bbfbb); _daffcf != nil {
					return _daffcf
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _gcebb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_deadf := NewEG_ColorTransform()
				_deadf.Gray = NewCT_GrayscaleTransform()
				if _gcbac := d.DecodeElement(_deadf.Gray, &_bbfbb); _gcbac != nil {
					return _gcbac
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _deadf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_gageg := NewEG_ColorTransform()
				_gageg.Alpha = NewCT_PositiveFixedPercentage()
				if _fcgbd := d.DecodeElement(_gageg.Alpha, &_bbfbb); _fcgbd != nil {
					return _fcgbd
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _gageg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_cadbf := NewEG_ColorTransform()
				_cadbf.AlphaOff = NewCT_FixedPercentage()
				if _febcef := d.DecodeElement(_cadbf.AlphaOff, &_bbfbb); _febcef != nil {
					return _febcef
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _cadbf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_agag := NewEG_ColorTransform()
				_agag.AlphaMod = NewCT_PositivePercentage()
				if _eagdb := d.DecodeElement(_agag.AlphaMod, &_bbfbb); _eagdb != nil {
					return _eagdb
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _agag)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_adbcd := NewEG_ColorTransform()
				_adbcd.Hue = NewCT_PositiveFixedAngle()
				if _aagec := d.DecodeElement(_adbcd.Hue, &_bbfbb); _aagec != nil {
					return _aagec
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _adbcd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_fcagd := NewEG_ColorTransform()
				_fcagd.HueOff = NewCT_Angle()
				if _adfcb := d.DecodeElement(_fcagd.HueOff, &_bbfbb); _adfcb != nil {
					return _adfcb
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _fcagd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_fgccc := NewEG_ColorTransform()
				_fgccc.HueMod = NewCT_PositivePercentage()
				if _egedc := d.DecodeElement(_fgccc.HueMod, &_bbfbb); _egedc != nil {
					return _egedc
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _fgccc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_fbdfeg := NewEG_ColorTransform()
				_fbdfeg.Sat = NewCT_Percentage()
				if _fadec := d.DecodeElement(_fbdfeg.Sat, &_bbfbb); _fadec != nil {
					return _fadec
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _fbdfeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_abcag := NewEG_ColorTransform()
				_abcag.SatOff = NewCT_Percentage()
				if _bgacd := d.DecodeElement(_abcag.SatOff, &_bbfbb); _bgacd != nil {
					return _bgacd
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _abcag)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_bdac := NewEG_ColorTransform()
				_bdac.SatMod = NewCT_Percentage()
				if _defcb := d.DecodeElement(_bdac.SatMod, &_bbfbb); _defcb != nil {
					return _defcb
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _bdac)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_fbdce := NewEG_ColorTransform()
				_fbdce.Lum = NewCT_Percentage()
				if _dfdag := d.DecodeElement(_fbdce.Lum, &_bbfbb); _dfdag != nil {
					return _dfdag
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _fbdce)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_deeg := NewEG_ColorTransform()
				_deeg.LumOff = NewCT_Percentage()
				if _aeffb := d.DecodeElement(_deeg.LumOff, &_bbfbb); _aeffb != nil {
					return _aeffb
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _deeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_edaeg := NewEG_ColorTransform()
				_edaeg.LumMod = NewCT_Percentage()
				if _gecga := d.DecodeElement(_edaeg.LumMod, &_bbfbb); _gecga != nil {
					return _gecga
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _edaeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_daedd := NewEG_ColorTransform()
				_daedd.Red = NewCT_Percentage()
				if _dfdfb := d.DecodeElement(_daedd.Red, &_bbfbb); _dfdfb != nil {
					return _dfdfb
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _daedd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_bebfg := NewEG_ColorTransform()
				_bebfg.RedOff = NewCT_Percentage()
				if _cgac := d.DecodeElement(_bebfg.RedOff, &_bbfbb); _cgac != nil {
					return _cgac
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _bebfg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_gaefb := NewEG_ColorTransform()
				_gaefb.RedMod = NewCT_Percentage()
				if _dgccf := d.DecodeElement(_gaefb.RedMod, &_bbfbb); _dgccf != nil {
					return _dgccf
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _gaefb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_defb := NewEG_ColorTransform()
				_defb.Green = NewCT_Percentage()
				if _gacf := d.DecodeElement(_defb.Green, &_bbfbb); _gacf != nil {
					return _gacf
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _defb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_gdacf := NewEG_ColorTransform()
				_gdacf.GreenOff = NewCT_Percentage()
				if _edfbfc := d.DecodeElement(_gdacf.GreenOff, &_bbfbb); _edfbfc != nil {
					return _edfbfc
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _gdacf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_bccdc := NewEG_ColorTransform()
				_bccdc.GreenMod = NewCT_Percentage()
				if _egff := d.DecodeElement(_bccdc.GreenMod, &_bbfbb); _egff != nil {
					return _egff
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _bccdc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_gfbfd := NewEG_ColorTransform()
				_gfbfd.Blue = NewCT_Percentage()
				if _aegg := d.DecodeElement(_gfbfd.Blue, &_bbfbb); _aegg != nil {
					return _aegg
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _gfbfd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_effcd := NewEG_ColorTransform()
				_effcd.BlueOff = NewCT_Percentage()
				if _aafbca := d.DecodeElement(_effcd.BlueOff, &_bbfbb); _aafbca != nil {
					return _aafbca
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _effcd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_feaeb := NewEG_ColorTransform()
				_feaeb.BlueMod = NewCT_Percentage()
				if _bgffa := d.DecodeElement(_feaeb.BlueMod, &_bbfbb); _bgffa != nil {
					return _bgffa
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _feaeb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_ffebc := NewEG_ColorTransform()
				_ffebc.Gamma = NewCT_GammaTransform()
				if _fgfdg := d.DecodeElement(_ffebc.Gamma, &_bbfbb); _fgfdg != nil {
					return _fgfdg
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _ffebc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_cbgbf := NewEG_ColorTransform()
				_cbgbf.InvGamma = NewCT_InverseGammaTransform()
				if _cadcb := d.DecodeElement(_cbgbf.InvGamma, &_bbfbb); _cadcb != nil {
					return _cadcb
				}
				_bafbdf.EG_ColorTransform = append(_bafbdf.EG_ColorTransform, _cbgbf)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065\u0043o\u006co\u0072\u0020\u0025\u0076", _bbfbb.Name)
				if _ffcff := d.Skip(); _ffcff != nil {
					return _ffcff
				}
			}
		case _d.EndElement:
			break _gaadf
		case _d.CharData:
		}
	}
	return nil
}
func (_ccfabc ST_PresetCameraType) String() string {
	switch _ccfabc {
	case 0:
		return ""
	case 1:
		return "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074"
	case 2:
		return "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case 3:
		return "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074"
	case 4:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074"
	case 5:
		return "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074"
	case 6:
		return "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074"
	case 7:
		return "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case 8:
		return "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 9:
		return "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case 10:
		return "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074"
	case 11:
		return "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070"
	case 12:
		return "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t"
	case 13:
		return "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074"
	case 14:
		return "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074"
	case 15:
		return "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074"
	case 16:
		return "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074"
	case 17:
		return "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 18:
		return "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074"
	case 19:
		return "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074"
	case 20:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070"
	case 21:
		return "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e"
	case 22:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070"
	case 23:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e"
	case 24:
		return "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070"
	case 25:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e"
	case 26:
		return "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070"
	case 27:
		return "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e"
	case 28:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074"
	case 29:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074"
	case 30:
		return "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070"
	case 31:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074"
	case 32:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074"
	case 33:
		return "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070"
	case 34:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074"
	case 35:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074"
	case 36:
		return "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d"
	case 37:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074"
	case 38:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074"
	case 39:
		return "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d"
	case 40:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074"
	case 41:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case 42:
		return "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case 43:
		return "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074"
	case 44:
		return "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074"
	case 45:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074"
	case 46:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 47:
		return "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074"
	case 48:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074"
	case 49:
		return "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074"
	case 50:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074"
	case 51:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065"
	case 52:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077"
	case 53:
		return "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067"
	case 54:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067"
	case 55:
		return "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case 56:
		return "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067"
	case 57:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067"
	case 58:
		return "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067"
	case 59:
		return "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case 60:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067"
	case 61:
		return "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064"
	case 62:
		return "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079"
	}
	return ""
}
func (_ebdbe *EG_Text3D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ebdbe.Sp3d != nil {
		_dcade := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_ebdbe.Sp3d, _dcade)
	}
	if _ebdbe.FlatTx != nil {
		_cedcc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u006c\u0061\u0074\u0054\u0078"}}
		e.EncodeElement(_ebdbe.FlatTx, _cedcc)
	}
	return nil
}
func NewCT_Transform2D() *CT_Transform2D { _cgfd := &CT_Transform2D{}; return _cgfd }

// ValidateWithPath validates the CT_AnimationDgmElement and its children, prefixing error messages with path
func (_cbcb *CT_AnimationDgmElement) ValidateWithPath(path string) error {
	if _cbcb.IdAttr != nil {
		if !_fe.ST_GuidPatternRe.MatchString(*_cbcb.IdAttr) {
			return _dg.Errorf("\u0025\u0073/\u006d\u002e\u0049\u0064A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061t\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _fe.ST_GuidPatternRe, *_cbcb.IdAttr)
		}
	}
	if _cgdg := _cbcb.BldStepAttr.ValidateWithPath(path + "\u002f\u0042\u006cd\u0053\u0074\u0065\u0070\u0041\u0074\u0074\u0072"); _cgdg != nil {
		return _cgdg
	}
	return nil
}

type ST_AnimationBuildType byte

func NewCT_ConnectionSite() *CT_ConnectionSite {
	_cbee := &CT_ConnectionSite{}
	_cbee.Pos = NewCT_AdjPoint2D()
	return _cbee
}
func NewCT_GrayscaleEffect() *CT_GrayscaleEffect { _fdbf := &CT_GrayscaleEffect{}; return _fdbf }
func (_dadba *CT_GroupTransform2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cdec := range start.Attr {
		if _cdec.Name.Local == "\u0072\u006f\u0074" {
			_fadg, _ggdcc := _c.ParseInt(_cdec.Value, 10, 32)
			if _ggdcc != nil {
				return _ggdcc
			}
			_edgga := int32(_fadg)
			_dadba.RotAttr = &_edgga
			continue
		}
		if _cdec.Name.Local == "\u0066\u006c\u0069p\u0048" {
			_ebfc, _ecdc := _c.ParseBool(_cdec.Value)
			if _ecdc != nil {
				return _ecdc
			}
			_dadba.FlipHAttr = &_ebfc
			continue
		}
		if _cdec.Name.Local == "\u0066\u006c\u0069p\u0056" {
			_cbce, _cbded := _c.ParseBool(_cdec.Value)
			if _cbded != nil {
				return _cbded
			}
			_dadba.FlipVAttr = &_cbce
			continue
		}
	}
_bagee:
	for {
		_egcea, _dega := d.Token()
		if _dega != nil {
			return _dega
		}
		switch _egceb := _egcea.(type) {
		case _d.StartElement:
			switch _egceb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}:
				_dadba.Off = NewCT_Point2D()
				if _fcfac := d.DecodeElement(_dadba.Off, &_egceb); _fcfac != nil {
					return _fcfac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_dadba.Ext = NewCT_PositiveSize2D()
				if _edbcb := d.DecodeElement(_dadba.Ext, &_egceb); _edbcb != nil {
					return _edbcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u004ff\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u004ff\u0066"}:
				_dadba.ChOff = NewCT_Point2D()
				if _edagce := d.DecodeElement(_dadba.ChOff, &_egceb); _edagce != nil {
					return _edagce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0045x\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0045x\u0074"}:
				_dadba.ChExt = NewCT_PositiveSize2D()
				if _aaeed := d.DecodeElement(_dadba.ChExt, &_egceb); _aaeed != nil {
					return _aaeed
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u0032\u0044\u0020\u0025\u0076", _egceb.Name)
				if _fagge := d.Skip(); _fagge != nil {
					return _fagge
				}
			}
		case _d.EndElement:
			break _bagee
		case _d.CharData:
		}
	}
	return nil
}
func (_gggg *CT_PositiveFixedPercentage) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ebdca := range start.Attr {
		if _ebdca.Name.Local == "\u0076\u0061\u006c" {
			_efgb, _bfdaa := ParseUnionST_PositiveFixedPercentage(_ebdca.Value)
			if _bfdaa != nil {
				return _bfdaa
			}
			_gggg.ValAttr = _efgb
			continue
		}
	}
	for {
		_eggfa, _bbgc := d.Token()
		if _bbgc != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063\u0065\u006et\u0061\u0067e\u003a\u0020\u0025\u0073", _bbgc)
		}
		if _eeffb, _abbbe := _eggfa.(_d.EndElement); _abbbe && _eeffb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adcec *ST_RectAlignment) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_adcec = 0
	case "\u0074\u006c":
		*_adcec = 1
	case "\u0074":
		*_adcec = 2
	case "\u0074\u0072":
		*_adcec = 3
	case "\u006c":
		*_adcec = 4
	case "\u0063\u0074\u0072":
		*_adcec = 5
	case "\u0072":
		*_adcec = 6
	case "\u0062\u006c":
		*_adcec = 7
	case "\u0062":
		*_adcec = 8
	case "\u0062\u0072":
		*_adcec = 9
	}
	return nil
}
func (_dfcea *CT_GvmlPicture) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dfcea.NvPicPr = NewCT_GvmlPictureNonVisual()
	_dfcea.BlipFill = NewCT_BlipFillProperties()
	_dfcea.SpPr = NewCT_ShapeProperties()
_ffeec:
	for {
		_fgbdge, _bbeb := d.Token()
		if _bbeb != nil {
			return _bbeb
		}
		switch _ccfff := _fgbdge.(type) {
		case _d.StartElement:
			switch _ccfff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _daccd := d.DecodeElement(_dfcea.NvPicPr, &_ccfff); _daccd != nil {
					return _daccd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _feede := d.DecodeElement(_dfcea.BlipFill, &_ccfff); _feede != nil {
					return _feede
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _degf := d.DecodeElement(_dfcea.SpPr, &_ccfff); _degf != nil {
					return _degf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_dfcea.Style = NewCT_ShapeStyle()
				if _edea := d.DecodeElement(_dfcea.Style, &_ccfff); _edea != nil {
					return _edea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfcea.ExtLst = NewCT_OfficeArtExtensionList()
				if _cgbaf := d.DecodeElement(_dfcea.ExtLst, &_ccfff); _cgbaf != nil {
					return _cgbaf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069\u0063t\u0075r\u0065\u0020\u0025\u0076", _ccfff.Name)
				if _cgcc := d.Skip(); _cgcc != nil {
					return _cgcc
				}
			}
		case _d.EndElement:
			break _ffeec
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ColorScheme and its children
func (_babg *CT_ColorScheme) Validate() error {
	return _babg.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065")
}

const (
	ST_TextTabAlignTypeUnset ST_TextTabAlignType = 0
	ST_TextTabAlignTypeL     ST_TextTabAlignType = 1
	ST_TextTabAlignTypeCtr   ST_TextTabAlignType = 2
	ST_TextTabAlignTypeR     ST_TextTabAlignType = 3
	ST_TextTabAlignTypeDec   ST_TextTabAlignType = 4
)

func (_ffa *CT_Blip) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ffa.CstateAttr != ST_BlipCompressionUnset {
		_cag, _efaa := _ffa.CstateAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u0073\u0074\u0061\u0074\u0065"})
		if _efaa != nil {
			return _efaa
		}
		start.Attr = append(start.Attr, _cag)
	}
	if _ffa.EmbedAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _dg.Sprintf("\u0025\u0076", *_ffa.EmbedAttr)})
	}
	if _ffa.LinkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _dg.Sprintf("\u0025\u0076", *_ffa.LinkAttr)})
	}
	e.EncodeToken(start)
	if _ffa.Choice != nil {
		for _, _fcd := range _ffa.Choice {
			_fcd.MarshalXML(e, _d.StartElement{})
		}
	}
	if _ffa.ExtLst != nil {
		_ceef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ffa.ExtLst, _ceef)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dgddd *CT_TextSpacing) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eggae:
	for {
		_bbegg, _adgaa := d.Token()
		if _adgaa != nil {
			return _adgaa
		}
		switch _abdafa := _bbegg.(type) {
		case _d.StartElement:
			switch _abdafa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0063\u0074"}:
				_dgddd.SpcPct = NewCT_TextSpacingPercent()
				if _agbcd := d.DecodeElement(_dgddd.SpcPct, &_abdafa); _agbcd != nil {
					return _agbcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0074\u0073"}:
				_dgddd.SpcPts = NewCT_TextSpacingPoint()
				if _gcdggc := d.DecodeElement(_dgddd.SpcPts, &_abdafa); _gcdggc != nil {
					return _gcdggc
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070\u0061c\u0069n\u0067\u0020\u0025\u0076", _abdafa.Name)
				if _bedgg := d.Skip(); _bedgg != nil {
					return _bedgg
				}
			}
		case _d.EndElement:
			break _eggae
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ShapeProperties and its children
func (_eefgg *CT_ShapeProperties) Validate() error {
	return _eefgg.ValidateWithPath("\u0043T\u005fS\u0068\u0061\u0070\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_TextParagraph and its children
func (_acgdbc *CT_TextParagraph) Validate() error {
	return _acgdbc.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068")
}

type CT_GvmlGroupShape struct {
	NvGrpSpPr *CT_GvmlGroupShapeNonVisual
	GrpSpPr   *CT_GroupShapeProperties
	Choice    []*CT_GvmlGroupShapeChoice
	ExtLst    *CT_OfficeArtExtensionList
}

// Validate validates the CT_QuickTimeFile and its children
func (_dfabec *CT_QuickTimeFile) Validate() error {
	return _dfabec.ValidateWithPath("\u0043\u0054_\u0051\u0075\u0069c\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065")
}
func (_cgfcg ST_TextStrikeType) ValidateWithPath(path string) error {
	switch _cgfcg {
	case 0, 1, 2, 3:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgfcg))
	}
	return nil
}
func (_gbgdg ST_LineEndWidth) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_egcbf := _d.Attr{}
	_egcbf.Name = name
	switch _gbgdg {
	case ST_LineEndWidthUnset:
		_egcbf.Value = ""
	case ST_LineEndWidthSm:
		_egcbf.Value = "\u0073\u006d"
	case ST_LineEndWidthMed:
		_egcbf.Value = "\u006d\u0065\u0064"
	case ST_LineEndWidthLg:
		_egcbf.Value = "\u006c\u0067"
	}
	return _egcbf, nil
}
func (_ffddf ST_RectAlignment) String() string {
	switch _ffddf {
	case 0:
		return ""
	case 1:
		return "\u0074\u006c"
	case 2:
		return "\u0074"
	case 3:
		return "\u0074\u0072"
	case 4:
		return "\u006c"
	case 5:
		return "\u0063\u0074\u0072"
	case 6:
		return "\u0072"
	case 7:
		return "\u0062\u006c"
	case 8:
		return "\u0062"
	case 9:
		return "\u0062\u0072"
	}
	return ""
}

const (
	ST_TextUnderlineTypeUnset           ST_TextUnderlineType = 0
	ST_TextUnderlineTypeNone            ST_TextUnderlineType = 1
	ST_TextUnderlineTypeWords           ST_TextUnderlineType = 2
	ST_TextUnderlineTypeSng             ST_TextUnderlineType = 3
	ST_TextUnderlineTypeDbl             ST_TextUnderlineType = 4
	ST_TextUnderlineTypeHeavy           ST_TextUnderlineType = 5
	ST_TextUnderlineTypeDotted          ST_TextUnderlineType = 6
	ST_TextUnderlineTypeDottedHeavy     ST_TextUnderlineType = 7
	ST_TextUnderlineTypeDash            ST_TextUnderlineType = 8
	ST_TextUnderlineTypeDashHeavy       ST_TextUnderlineType = 9
	ST_TextUnderlineTypeDashLong        ST_TextUnderlineType = 10
	ST_TextUnderlineTypeDashLongHeavy   ST_TextUnderlineType = 11
	ST_TextUnderlineTypeDotDash         ST_TextUnderlineType = 12
	ST_TextUnderlineTypeDotDashHeavy    ST_TextUnderlineType = 13
	ST_TextUnderlineTypeDotDotDash      ST_TextUnderlineType = 14
	ST_TextUnderlineTypeDotDotDashHeavy ST_TextUnderlineType = 15
	ST_TextUnderlineTypeWavy            ST_TextUnderlineType = 16
	ST_TextUnderlineTypeWavyHeavy       ST_TextUnderlineType = 17
	ST_TextUnderlineTypeWavyDbl         ST_TextUnderlineType = 18
)

type ST_PathFillMode byte

func (_aedcd ST_TextWrappingType) Validate() error { return _aedcd.ValidateWithPath("") }

// ValidateWithPath validates the CT_StyleMatrix and its children, prefixing error messages with path
func (_bacef *CT_StyleMatrix) ValidateWithPath(path string) error {
	if _addb := _bacef.FillStyleLst.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _addb != nil {
		return _addb
	}
	if _cfaa := _bacef.LnStyleLst.ValidateWithPath(path + "/\u004c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _cfaa != nil {
		return _cfaa
	}
	if _abgdc := _bacef.EffectStyleLst.ValidateWithPath(path + "\u002fE\u0066f\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _abgdc != nil {
		return _abgdc
	}
	if _dacbe := _bacef.BgFillStyleLst.ValidateWithPath(path + "\u002fB\u0067F\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _dacbe != nil {
		return _dacbe
	}
	return nil
}
func (_gfeca *CT_GvmlGraphicFrameNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ddee := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_gfeca.CNvPr, _ddee)
	_fcad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u004evG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_gfeca.CNvGraphicFramePr, _fcad)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewEG_FillProperties() *EG_FillProperties { _gbggca := &EG_FillProperties{}; return _gbggca }

// Validate validates the EG_ColorChoice and its children
func (_eeca *EG_ColorChoice) Validate() error {
	return _eeca.ValidateWithPath("\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043h\u006f\u0069\u0063\u0065")
}

type ST_PresetShadowVal byte

// ValidateWithPath validates the Graphic and its children, prefixing error messages with path
func (_fggae *Graphic) ValidateWithPath(path string) error {
	if _begaa := _fggae.CT_GraphicalObject.ValidateWithPath(path); _begaa != nil {
		return _begaa
	}
	return nil
}
func (_acbed *Theme) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061:\u0074\u0068\u0065\u006d\u0065"
	return _acbed.CT_OfficeStyleSheet.MarshalXML(e, start)
}
func (_feed *CT_FillEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _feed.NoFill != nil {
		_ceea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_feed.NoFill, _ceea)
	}
	if _feed.SolidFill != nil {
		_ddfc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_feed.SolidFill, _ddfc)
	}
	if _feed.GradFill != nil {
		_dfee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_feed.GradFill, _dfee)
	}
	if _feed.BlipFill != nil {
		_eefef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_feed.BlipFill, _eefef)
	}
	if _feed.PattFill != nil {
		_ebbab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_feed.PattFill, _ebbab)
	}
	if _feed.GrpFill != nil {
		_cddba := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_feed.GrpFill, _cddba)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_AnimationDgmBuildProperties and its children, prefixing error messages with path
func (_afg *CT_AnimationDgmBuildProperties) ValidateWithPath(path string) error {
	if _afg.BldAttr != nil {
		if _ead := _afg.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _ead != nil {
			return _ead
		}
	}
	return nil
}
func NewCT_EmbeddedWAVAudioFile() *CT_EmbeddedWAVAudioFile {
	_bgab := &CT_EmbeddedWAVAudioFile{}
	return _bgab
}
func (_abcd ST_ShapeType) ValidateWithPath(path string) error {
	switch _abcd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abcd))
	}
	return nil
}
func (_aefdag *CT_TextNoBullet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bageed *CT_TextUnderlineFillGroupWrapper) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bfgcc:
	for {
		_bdgb, _dabcda := d.Token()
		if _dabcda != nil {
			return _dabcda
		}
		switch _egfgg := _bdgb.(type) {
		case _d.StartElement:
			switch _egfgg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_bageed.NoFill = NewCT_NoFillProperties()
				if _dfgf := d.DecodeElement(_bageed.NoFill, &_egfgg); _dfgf != nil {
					return _dfgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_bageed.SolidFill = NewCT_SolidColorFillProperties()
				if _bagdg := d.DecodeElement(_bageed.SolidFill, &_egfgg); _bagdg != nil {
					return _bagdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_bageed.GradFill = NewCT_GradientFillProperties()
				if _gbggc := d.DecodeElement(_bageed.GradFill, &_egfgg); _gbggc != nil {
					return _gbggc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_bageed.BlipFill = NewCT_BlipFillProperties()
				if _fgcgd := d.DecodeElement(_bageed.BlipFill, &_egfgg); _fgcgd != nil {
					return _fgcgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_bageed.PattFill = NewCT_PatternFillProperties()
				if _badbc := d.DecodeElement(_bageed.PattFill, &_egfgg); _badbc != nil {
					return _badbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_bageed.GrpFill = NewCT_GroupFillProperties()
				if _cadgd := d.DecodeElement(_bageed.GrpFill, &_egfgg); _cadgd != nil {
					return _cadgd
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078t\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0047\u0072o\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065r\u0020\u0025\u0076", _egfgg.Name)
				if _dcdc := d.Skip(); _dcdc != nil {
					return _dcdc
				}
			}
		case _d.EndElement:
			break _bfgcc
		case _d.CharData:
		}
	}
	return nil
}
func (_fcca *CT_Path2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fcca.WAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0077"}, Value: _dg.Sprintf("\u0025\u0076", *_fcca.WAttr)})
	}
	if _fcca.HAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068"}, Value: _dg.Sprintf("\u0025\u0076", *_fcca.HAttr)})
	}
	if _fcca.FillAttr != ST_PathFillModeUnset {
		_accad, _eggd := _fcca.FillAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u0069\u006c\u006c"})
		if _eggd != nil {
			return _eggd
		}
		start.Attr = append(start.Attr, _accad)
	}
	if _fcca.StrokeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0074\u0072\u006f\u006b\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fcca.StrokeAttr))})
	}
	if _fcca.ExtrusionOkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "e\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u004f\u006b"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fcca.ExtrusionOkAttr))})
	}
	e.EncodeToken(start)
	if _fcca.Close != nil {
		_edfbfg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u006c\u006f\u0073\u0065"}}
		for _, _gbcf := range _fcca.Close {
			e.EncodeElement(_gbcf, _edfbfg)
		}
	}
	if _fcca.MoveTo != nil {
		_ebcdb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006d\u006f\u0076\u0065\u0054\u006f"}}
		for _, _eeaddg := range _fcca.MoveTo {
			e.EncodeElement(_eeaddg, _ebcdb)
		}
	}
	if _fcca.LnTo != nil {
		_bgeab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e\u0054\u006f"}}
		for _, _ebdec := range _fcca.LnTo {
			e.EncodeElement(_ebdec, _bgeab)
		}
	}
	if _fcca.ArcTo != nil {
		_cggce := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0072\u0063\u0054\u006f"}}
		for _, _cefag := range _fcca.ArcTo {
			e.EncodeElement(_cefag, _cggce)
		}
	}
	if _fcca.QuadBezTo != nil {
		_cfafc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0071\u0075\u0061\u0064\u0042\u0065\u007a\u0054\u006f"}}
		for _, _cgccg := range _fcca.QuadBezTo {
			e.EncodeElement(_cgccg, _cfafc)
		}
	}
	if _fcca.CubicBezTo != nil {
		_cebde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063u\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}}
		for _, _dfadb := range _fcca.CubicBezTo {
			e.EncodeElement(_dfadb, _cebde)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TextAutonumberBullet struct {
	TypeAttr    ST_TextAutonumberScheme
	StartAtAttr *int32
}

// ValidateWithPath validates the CT_PresetShadowEffect and its children, prefixing error messages with path
func (_edege *CT_PresetShadowEffect) ValidateWithPath(path string) error {
	if _edege.PrstAttr == ST_PresetShadowValUnset {
		return _dg.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _agbb := _edege.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _agbb != nil {
		return _agbb
	}
	if _edege.DistAttr != nil {
		if *_edege.DistAttr < 0 {
			return _dg.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_edege.DistAttr)
		}
		if *_edege.DistAttr > 27273042316900 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_edege.DistAttr)
		}
	}
	if _edege.DirAttr != nil {
		if *_edege.DirAttr < 0 {
			return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_edege.DirAttr)
		}
		if *_edege.DirAttr >= 21600000 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_edege.DirAttr)
		}
	}
	if _edege.ScrgbClr != nil {
		if _abdgc := _edege.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _abdgc != nil {
			return _abdgc
		}
	}
	if _edege.SrgbClr != nil {
		if _ffbcc := _edege.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _ffbcc != nil {
			return _ffbcc
		}
	}
	if _edege.HslClr != nil {
		if _fbdbe := _edege.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _fbdbe != nil {
			return _fbdbe
		}
	}
	if _edege.SysClr != nil {
		if _gfdgf := _edege.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _gfdgf != nil {
			return _gfdgf
		}
	}
	if _edege.SchemeClr != nil {
		if _agcf := _edege.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _agcf != nil {
			return _agcf
		}
	}
	if _edege.PrstClr != nil {
		if _fgfef := _edege.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _fgfef != nil {
			return _fgfef
		}
	}
	return nil
}
func NewCT_GradientFillProperties() *CT_GradientFillProperties {
	_ebad := &CT_GradientFillProperties{}
	return _ebad
}
func (_eaega *CT_InverseGammaTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_BlurEffect struct {
	RadAttr  *int64
	GrowAttr *bool
}
type ST_AnimationDgmOnlyBuildType byte

func (_gfebe *Tbl) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gfebe.CT_Table = *NewCT_Table()
_daeed:
	for {
		_baafba, _aaafa := d.Token()
		if _aaafa != nil {
			return _aaafa
		}
		switch _bbccf := _baafba.(type) {
		case _d.StartElement:
			switch _bbccf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}:
				_gfebe.TblPr = NewCT_TableProperties()
				if _fcebc := d.DecodeElement(_gfebe.TblPr, &_bbccf); _fcebc != nil {
					return _fcebc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}:
				if _bddde := d.DecodeElement(_gfebe.TblGrid, &_bbccf); _bddde != nil {
					return _bddde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_gfccc := NewCT_TableRow()
				if _bdccf := d.DecodeElement(_gfccc, &_bbccf); _bdccf != nil {
					return _bdccf
				}
				_gfebe.Tr = append(_gfebe.Tr, _gfccc)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0054b\u006c\u0020\u0025\u0076", _bbccf.Name)
				if _dfabed := d.Skip(); _dfabed != nil {
					return _dfabed
				}
			}
		case _d.EndElement:
			break _daeed
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TableCol() *CT_TableCol { _bdccd := &CT_TableCol{}; return _bdccd }
func (_dbeb *CT_LineJoinBevel) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_TextUnderlineType byte

// ValidateWithPath validates the CT_TextField and its children, prefixing error messages with path
func (_ddfcd *CT_TextField) ValidateWithPath(path string) error {
	if !_fe.ST_GuidPatternRe.MatchString(_ddfcd.IdAttr) {
		return _dg.Errorf("\u0025\u0073/\u006d\u002e\u0049\u0064A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061t\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _fe.ST_GuidPatternRe, _ddfcd.IdAttr)
	}
	if _ddfcd.RPr != nil {
		if _acedd := _ddfcd.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _acedd != nil {
			return _acedd
		}
	}
	if _ddfcd.PPr != nil {
		if _bfecd := _ddfcd.PPr.ValidateWithPath(path + "\u002f\u0050\u0050\u0072"); _bfecd != nil {
			return _bfecd
		}
	}
	return nil
}
func (_eefaa ST_TextAutonumberScheme) Validate() error { return _eefaa.ValidateWithPath("") }

// ValidateWithPath validates the CT_ColorMappingOverride and its children, prefixing error messages with path
func (_ccead *CT_ColorMappingOverride) ValidateWithPath(path string) error {
	if _cace := _ccead.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _cace != nil {
		return _cace
	}
	return nil
}
func (_cfdfd *CT_ShapeStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cfdfd.LnRef = NewCT_StyleMatrixReference()
	_cfdfd.FillRef = NewCT_StyleMatrixReference()
	_cfdfd.EffectRef = NewCT_StyleMatrixReference()
	_cfdfd.FontRef = NewCT_FontReference()
_adcfb:
	for {
		_cdfef, _gebce := d.Token()
		if _gebce != nil {
			return _gebce
		}
		switch _caee := _cdfef.(type) {
		case _d.StartElement:
			switch _caee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}:
				if _dgfa := d.DecodeElement(_cfdfd.LnRef, &_caee); _dgfa != nil {
					return _dgfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				if _bgbg := d.DecodeElement(_cfdfd.FillRef, &_caee); _bgbg != nil {
					return _bgbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				if _gcadb := d.DecodeElement(_cfdfd.EffectRef, &_caee); _gcadb != nil {
					return _gcadb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				if _decfa := d.DecodeElement(_cfdfd.FontRef, &_caee); _decfa != nil {
					return _decfa
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _caee.Name)
				if _egbcb := d.Skip(); _egbcb != nil {
					return _egbcb
				}
			}
		case _d.EndElement:
			break _adcfb
		case _d.CharData:
		}
	}
	return nil
}
func (_ecaa *CT_FillOverlayEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_dedcg, _bgggg := _ecaa.BlendAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u006c\u0065n\u0064"})
	if _bgggg != nil {
		return _bgggg
	}
	start.Attr = append(start.Attr, _dedcg)
	e.EncodeToken(start)
	if _ecaa.NoFill != nil {
		_fcaab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ecaa.NoFill, _fcaab)
	}
	if _ecaa.SolidFill != nil {
		_cfffb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ecaa.SolidFill, _cfffb)
	}
	if _ecaa.GradFill != nil {
		_fdec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ecaa.GradFill, _fdec)
	}
	if _ecaa.BlipFill != nil {
		_babba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ecaa.BlipFill, _babba)
	}
	if _ecaa.PattFill != nil {
		_cdbbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ecaa.PattFill, _cdbbg)
	}
	if _ecaa.GrpFill != nil {
		_gcfag := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_ecaa.GrpFill, _gcfag)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_GeomGuideList() *CT_GeomGuideList { _cggf := &CT_GeomGuideList{}; return _cggf }
func (_efbe *CT_GvmlGroupShapeChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_faffac:
	for {
		_ccbcd, _bccc := d.Token()
		if _bccc != nil {
			return _bccc
		}
		switch _bddbf := _ccbcd.(type) {
		case _d.StartElement:
			switch _bddbf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_dgbfe := NewCT_GvmlTextShape()
				if _faec := d.DecodeElement(_dgbfe, &_bddbf); _faec != nil {
					return _faec
				}
				_efbe.TxSp = append(_efbe.TxSp, _dgbfe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_edfaa := NewCT_GvmlShape()
				if _cgef := d.DecodeElement(_edfaa, &_bddbf); _cgef != nil {
					return _cgef
				}
				_efbe.Sp = append(_efbe.Sp, _edfaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_acdgg := NewCT_GvmlConnector()
				if _ccfd := d.DecodeElement(_acdgg, &_bddbf); _ccfd != nil {
					return _ccfd
				}
				_efbe.CxnSp = append(_efbe.CxnSp, _acdgg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_ccfa := NewCT_GvmlPicture()
				if _bdfaa := d.DecodeElement(_ccfa, &_bddbf); _bdfaa != nil {
					return _bdfaa
				}
				_efbe.Pic = append(_efbe.Pic, _ccfa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_bgccc := NewCT_GvmlGraphicalObjectFrame()
				if _ccdga := d.DecodeElement(_bgccc, &_bddbf); _ccdga != nil {
					return _ccdga
				}
				_efbe.GraphicFrame = append(_efbe.GraphicFrame, _bgccc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_cdddd := NewCT_GvmlGroupShape()
				if _ceabb := d.DecodeElement(_cdddd, &_bddbf); _ceabb != nil {
					return _ceabb
				}
				_efbe.GrpSp = append(_efbe.GrpSp, _cdddd)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065\u0043\u0068o\u0069\u0063\u0065 \u0025\u0076", _bddbf.Name)
				if _ddbd := d.Skip(); _ddbd != nil {
					return _ddbd
				}
			}
		case _d.EndElement:
			break _faffac
		case _d.CharData:
		}
	}
	return nil
}
func (_dff *CT_ClipboardStyleSheet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dff.ThemeElements = NewCT_BaseStyles()
	_dff.ClrMap = NewCT_ColorMapping()
_acfd:
	for {
		_dafg, _ceaf := d.Token()
		if _ceaf != nil {
			return _ceaf
		}
		switch _egaed := _dafg.(type) {
		case _d.StartElement:
			switch _egaed.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _fbae := d.DecodeElement(_dff.ThemeElements, &_egaed); _fbae != nil {
					return _fbae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _cgga := d.DecodeElement(_dff.ClrMap, &_egaed); _cgga != nil {
					return _cgga
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006c\u0069\u0070b\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _egaed.Name)
				if _egfe := d.Skip(); _egfe != nil {
					return _egfe
				}
			}
		case _d.EndElement:
			break _acfd
		case _d.CharData:
		}
	}
	return nil
}

type CT_StyleMatrix struct {
	NameAttr       *string
	FillStyleLst   *CT_FillStyleList
	LnStyleLst     *CT_LineStyleList
	EffectStyleLst *CT_EffectStyleList
	BgFillStyleLst *CT_BackgroundFillStyleList
}

func (_fbfd *CT_GvmlConnectorNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_cegec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_fbfd.CNvPr, _cegec)
	_adfa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063N\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fbfd.CNvCxnSpPr, _adfa)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ggcdcb *EG_ThemeableFontStyles) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cabae:
	for {
		_eagdab, _ecbe := d.Token()
		if _ecbe != nil {
			return _ecbe
		}
		switch _faeb := _eagdab.(type) {
		case _d.StartElement:
			switch _faeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_ggcdcb.Font = NewCT_FontCollection()
				if _ggggfa := d.DecodeElement(_ggcdcb.Font, &_faeb); _ggggfa != nil {
					return _ggggfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				_ggcdcb.FontRef = NewCT_FontReference()
				if _agfa := d.DecodeElement(_ggcdcb.FontRef, &_faeb); _agfa != nil {
					return _agfa
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045G\u005f\u0054\u0068\u0065\u006de\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006c\u0065\u0073\u0020\u0025\u0076", _faeb.Name)
				if _dfdee := d.Skip(); _dfdee != nil {
					return _dfdee
				}
			}
		case _d.EndElement:
			break _cabae
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_ColorSchemeIndexUnset    ST_ColorSchemeIndex = 0
	ST_ColorSchemeIndexDk1      ST_ColorSchemeIndex = 1
	ST_ColorSchemeIndexLt1      ST_ColorSchemeIndex = 2
	ST_ColorSchemeIndexDk2      ST_ColorSchemeIndex = 3
	ST_ColorSchemeIndexLt2      ST_ColorSchemeIndex = 4
	ST_ColorSchemeIndexAccent1  ST_ColorSchemeIndex = 5
	ST_ColorSchemeIndexAccent2  ST_ColorSchemeIndex = 6
	ST_ColorSchemeIndexAccent3  ST_ColorSchemeIndex = 7
	ST_ColorSchemeIndexAccent4  ST_ColorSchemeIndex = 8
	ST_ColorSchemeIndexAccent5  ST_ColorSchemeIndex = 9
	ST_ColorSchemeIndexAccent6  ST_ColorSchemeIndex = 10
	ST_ColorSchemeIndexHlink    ST_ColorSchemeIndex = 11
	ST_ColorSchemeIndexFolHlink ST_ColorSchemeIndex = 12
)

// Validate validates the CT_AlphaBiLevelEffect and its children
func (_eba *CT_AlphaBiLevelEffect) Validate() error {
	return _eba.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061B\u0069\u004c\u0065\u0076\u0065l\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_adddcc *CT_Scene3D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_adddcc.Camera = NewCT_Camera()
	_adddcc.LightRig = NewCT_LightRig()
_eecfa:
	for {
		_edgce, _ebfa := d.Token()
		if _ebfa != nil {
			return _ebfa
		}
		switch _dcbe := _edgce.(type) {
		case _d.StartElement:
			switch _dcbe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006d\u0065\u0072\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006d\u0065\u0072\u0061"}:
				if _ebafa := d.DecodeElement(_adddcc.Camera, &_dcbe); _ebafa != nil {
					return _ebafa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}:
				if _efada := d.DecodeElement(_adddcc.LightRig, &_dcbe); _efada != nil {
					return _efada
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}:
				_adddcc.Backdrop = NewCT_Backdrop()
				if _gbaae := d.DecodeElement(_adddcc.Backdrop, &_dcbe); _gbaae != nil {
					return _gbaae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adddcc.ExtLst = NewCT_OfficeArtExtensionList()
				if _fcdef := d.DecodeElement(_adddcc.ExtLst, &_dcbe); _fcdef != nil {
					return _fcdef
				}
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0063\u0065\u006e\u0065\u0033\u0044\u0020\u0025\u0076", _dcbe.Name)
				if _ddgbbc := d.Skip(); _ddgbbc != nil {
					return _ddgbbc
				}
			}
		case _d.EndElement:
			break _eecfa
		case _d.CharData:
		}
	}
	return nil
}

type CT_LineProperties struct {
	WAttr     *int32
	CapAttr   ST_LineCap
	CmpdAttr  ST_CompoundLine
	AlgnAttr  ST_PenAlignment
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	PattFill  *CT_PatternFillProperties
	PrstDash  *CT_PresetLineDashProperties
	CustDash  *CT_DashStopList
	Round     *CT_LineJoinRound
	Bevel     *CT_LineJoinBevel
	Miter     *CT_LineJoinMiterProperties
	HeadEnd   *CT_LineEndProperties
	TailEnd   *CT_LineEndProperties
	ExtLst    *CT_OfficeArtExtensionList
}

func (_fc *AG_Locking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fc.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fc.NoGrpAttr))})
	}
	if _fc.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fc.NoSelectAttr))})
	}
	if _fc.NoRotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fc.NoRotAttr))})
	}
	if _fc.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fc.NoChangeAspectAttr))})
	}
	if _fc.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fc.NoMoveAttr))})
	}
	if _fc.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fc.NoResizeAttr))})
	}
	if _fc.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fc.NoEditPointsAttr))})
	}
	if _fc.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fc.NoAdjustHandlesAttr))})
	}
	if _fc.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fc.NoChangeArrowheadsAttr))})
	}
	if _fc.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fc.NoChangeShapeTypeAttr))})
	}
	return nil
}

// ValidateWithPath validates the CT_OfficeArtExtensionList and its children, prefixing error messages with path
func (_cdcf *CT_OfficeArtExtensionList) ValidateWithPath(path string) error {
	for _bfgfe, _aebb := range _cdcf.Ext {
		if _bfead := _aebb.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _bfgfe)); _bfead != nil {
			return _bfead
		}
	}
	return nil
}

// Validate validates the CT_WholeE2oFormatting and its children
func (_bgef *CT_WholeE2oFormatting) Validate() error {
	return _bgef.ValidateWithPath("C\u0054\u005f\u0057\u0068ol\u0065E\u0032\u006f\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067")
}
func (_ffbdb ST_PresetColorVal) Validate() error { return _ffbdb.ValidateWithPath("") }
func (_eaff *CT_ColorChangeEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eaff.UseAAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0073\u0065\u0041"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_eaff.UseAAttr))})
	}
	e.EncodeToken(start)
	_ffdge := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u006c\u0072\u0046\u0072\u006fm"}}
	e.EncodeElement(_eaff.ClrFrom, _ffdge)
	_fgcb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u006c\u0072\u0054\u006f"}}
	e.EncodeElement(_eaff.ClrTo, _fgcb)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_LuminanceEffect struct {
	BrightAttr   *ST_FixedPercentage
	ContrastAttr *ST_FixedPercentage
}

func (_dbeagb *ST_TextVerticalType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bfgebe, _defdea := d.Token()
	if _defdea != nil {
		return _defdea
	}
	if _abecb, _deeggb := _bfgebe.(_d.EndElement); _deeggb && _abecb.Name == start.Name {
		*_dbeagb = 1
		return nil
	}
	if _abgfg, _aafab := _bfgebe.(_d.CharData); !_aafab {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfgebe)
	} else {
		switch string(_abgfg) {
		case "":
			*_dbeagb = 0
		case "\u0068\u006f\u0072\u007a":
			*_dbeagb = 1
		case "\u0076\u0065\u0072\u0074":
			*_dbeagb = 2
		case "\u0076e\u0072\u0074\u0032\u0037\u0030":
			*_dbeagb = 3
		case "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074":
			*_dbeagb = 4
		case "\u0065\u0061\u0056\u0065\u0072\u0074":
			*_dbeagb = 5
		case "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074":
			*_dbeagb = 6
		case "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c":
			*_dbeagb = 7
		}
	}
	_bfgebe, _defdea = d.Token()
	if _defdea != nil {
		return _defdea
	}
	if _befee, _cgfga := _bfgebe.(_d.EndElement); _cgfga && _befee.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfgebe)
}

type CT_GrayscaleEffect struct{}
type ST_TextWrappingType byte

func (_abcbdgg ST_TextStrikeType) Validate() error { return _abcbdgg.ValidateWithPath("") }

type EG_TextUnderlineLine struct {
	ULnTx *CT_TextUnderlineLineFollowText
	ULn   *CT_LineProperties
}

func (_bcgfc *ST_ShapeType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cdccde, _bbgfaa := d.Token()
	if _bbgfaa != nil {
		return _bbgfaa
	}
	if _fbeea, _adffg := _cdccde.(_d.EndElement); _adffg && _fbeea.Name == start.Name {
		*_bcgfc = 1
		return nil
	}
	if _dbfdd, _cbdaac := _cdccde.(_d.CharData); !_cbdaac {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdccde)
	} else {
		switch string(_dbfdd) {
		case "":
			*_bcgfc = 0
		case "\u006c\u0069\u006e\u0065":
			*_bcgfc = 1
		case "\u006ci\u006e\u0065\u0049\u006e\u0076":
			*_bcgfc = 2
		case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_bcgfc = 3
		case "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_bcgfc = 4
		case "\u0072\u0065\u0063\u0074":
			*_bcgfc = 5
		case "\u0064i\u0061\u006d\u006f\u006e\u0064":
			*_bcgfc = 6
		case "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d":
			*_bcgfc = 7
		case "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d":
			*_bcgfc = 8
		case "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064":
			*_bcgfc = 9
		case "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e":
			*_bcgfc = 10
		case "\u0068e\u0078\u0061\u0067\u006f\u006e":
			*_bcgfc = 11
		case "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e":
			*_bcgfc = 12
		case "\u006fc\u0074\u0061\u0067\u006f\u006e":
			*_bcgfc = 13
		case "\u0064e\u0063\u0061\u0067\u006f\u006e":
			*_bcgfc = 14
		case "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn":
			*_bcgfc = 15
		case "\u0073\u0074\u0061r\u0034":
			*_bcgfc = 16
		case "\u0073\u0074\u0061r\u0035":
			*_bcgfc = 17
		case "\u0073\u0074\u0061r\u0036":
			*_bcgfc = 18
		case "\u0073\u0074\u0061r\u0037":
			*_bcgfc = 19
		case "\u0073\u0074\u0061r\u0038":
			*_bcgfc = 20
		case "\u0073\u0074\u0061\u0072\u0031\u0030":
			*_bcgfc = 21
		case "\u0073\u0074\u0061\u0072\u0031\u0032":
			*_bcgfc = 22
		case "\u0073\u0074\u0061\u0072\u0031\u0036":
			*_bcgfc = 23
		case "\u0073\u0074\u0061\u0072\u0032\u0034":
			*_bcgfc = 24
		case "\u0073\u0074\u0061\u0072\u0033\u0032":
			*_bcgfc = 25
		case "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t":
			*_bcgfc = 26
		case "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074":
			*_bcgfc = 27
		case "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074":
			*_bcgfc = 28
		case "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074":
			*_bcgfc = 29
		case "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074":
			*_bcgfc = 30
		case "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t":
			*_bcgfc = 31
		case "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074":
			*_bcgfc = 32
		case "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074":
			*_bcgfc = 33
		case "\u0070\u006c\u0061\u0071\u0075\u0065":
			*_bcgfc = 34
		case "\u0065l\u006c\u0069\u0070\u0073\u0065":
			*_bcgfc = 35
		case "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070":
			*_bcgfc = 36
		case "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e":
			*_bcgfc = 37
		case "\u0063h\u0065\u0076\u0072\u006f\u006e":
			*_bcgfc = 38
		case "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065":
			*_bcgfc = 39
		case "\u0070\u0069\u0065":
			*_bcgfc = 40
		case "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063":
			*_bcgfc = 41
		case "\u0064\u006f\u006eu\u0074":
			*_bcgfc = 42
		case "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg":
			*_bcgfc = 43
		case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 44
		case "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw":
			*_bcgfc = 45
		case "\u0075p\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 46
		case "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw":
			*_bcgfc = 47
		case "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_bcgfc = 48
		case "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_bcgfc = 49
		case "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 50
		case "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_bcgfc = 51
		case "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 52
		case "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 53
		case "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 54
		case "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw":
			*_bcgfc = 55
		case "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_bcgfc = 56
		case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
			*_bcgfc = 57
		case "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
			*_bcgfc = 58
		case "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_bcgfc = 59
		case "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074":
			*_bcgfc = 60
		case "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074":
			*_bcgfc = 61
		case "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_bcgfc = 62
		case "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw":
			*_bcgfc = 63
		case "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 64
		case "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 65
		case "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077":
			*_bcgfc = 66
		case "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077":
			*_bcgfc = 67
		case "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 68
		case "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 69
		case "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 70
		case "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 71
		case "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077":
			*_bcgfc = 72
		case "\u0063\u0075\u0062\u0065":
			*_bcgfc = 73
		case "\u0063\u0061\u006e":
			*_bcgfc = 74
		case "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074":
			*_bcgfc = 75
		case "\u0068\u0065\u0061r\u0074":
			*_bcgfc = 76
		case "\u0073\u0075\u006e":
			*_bcgfc = 77
		case "\u006d\u006f\u006f\u006e":
			*_bcgfc = 78
		case "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065":
			*_bcgfc = 79
		case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031":
			*_bcgfc = 80
		case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032":
			*_bcgfc = 81
		case "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072":
			*_bcgfc = 82
		case "\u0062\u0065\u0076e\u006c":
			*_bcgfc = 83
		case "\u0066\u0072\u0061m\u0065":
			*_bcgfc = 84
		case "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de":
			*_bcgfc = 85
		case "\u0063\u006f\u0072\u006e\u0065\u0072":
			*_bcgfc = 86
		case "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065":
			*_bcgfc = 87
		case "\u0063\u0068\u006fr\u0064":
			*_bcgfc = 88
		case "\u0061\u0072\u0063":
			*_bcgfc = 89
		case "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
			*_bcgfc = 90
		case "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
			*_bcgfc = 91
		case "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e":
			*_bcgfc = 92
		case "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065":
			*_bcgfc = 93
		case "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072":
			*_bcgfc = 94
		case "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r":
			*_bcgfc = 95
		case "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031":
			*_bcgfc = 96
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032":
			*_bcgfc = 97
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033":
			*_bcgfc = 98
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034":
			*_bcgfc = 99
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035":
			*_bcgfc = 100
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032":
			*_bcgfc = 101
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033":
			*_bcgfc = 102
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034":
			*_bcgfc = 103
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035":
			*_bcgfc = 104
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031":
			*_bcgfc = 105
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032":
			*_bcgfc = 106
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033":
			*_bcgfc = 107
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
			*_bcgfc = 108
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
			*_bcgfc = 109
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
			*_bcgfc = 110
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
			*_bcgfc = 111
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
			*_bcgfc = 112
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
			*_bcgfc = 113
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031":
			*_bcgfc = 114
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032":
			*_bcgfc = 115
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033":
			*_bcgfc = 116
		case "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_bcgfc = 117
		case "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074":
			*_bcgfc = 118
		case "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_bcgfc = 119
		case "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_bcgfc = 120
		case "\u0063\u006c\u006fu\u0064":
			*_bcgfc = 121
		case "\u0072\u0069\u0062\u0062\u006f\u006e":
			*_bcgfc = 122
		case "\u0072i\u0062\u0062\u006f\u006e\u0032":
			*_bcgfc = 123
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e":
			*_bcgfc = 124
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032":
			*_bcgfc = 125
		case "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e":
			*_bcgfc = 126
		case "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c":
			*_bcgfc = 127
		case "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c":
			*_bcgfc = 128
		case "\u0077\u0061\u0076\u0065":
			*_bcgfc = 129
		case "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065":
			*_bcgfc = 130
		case "\u0070\u006c\u0075\u0073":
			*_bcgfc = 131
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073":
			*_bcgfc = 132
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e":
			*_bcgfc = 133
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074":
			*_bcgfc = 134
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073":
			*_bcgfc = 135
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
			*_bcgfc = 136
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074":
			*_bcgfc = 137
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074":
			*_bcgfc = 138
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072":
			*_bcgfc = 139
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e":
			*_bcgfc = 140
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074":
			*_bcgfc = 141
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e":
			*_bcgfc = 142
		case "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072":
			*_bcgfc = 143
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064":
			*_bcgfc = 144
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065":
			*_bcgfc = 145
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e":
			*_bcgfc = 146
		case "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072":
			*_bcgfc = 147
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065":
			*_bcgfc = 148
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074":
			*_bcgfc = 149
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074":
			*_bcgfc = 150
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065":
			*_bcgfc = 151
		case "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
			*_bcgfc = 152
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065":
			*_bcgfc = 153
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065":
			*_bcgfc = 154
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b":
			*_bcgfc = 155
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d":
			*_bcgfc = 156
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079":
			*_bcgfc = 157
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079":
			*_bcgfc = 158
		case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s":
			*_bcgfc = 159
		case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr":
			*_bcgfc = 160
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b":
			*_bcgfc = 161
		case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065":
			*_bcgfc = 162
		case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070":
			*_bcgfc = 163
		case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
			*_bcgfc = 164
		case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074":
			*_bcgfc = 165
		case "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073":
			*_bcgfc = 166
		case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064":
			*_bcgfc = 167
		case "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067":
			*_bcgfc = 168
		case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e":
			*_bcgfc = 169
		case "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074":
			*_bcgfc = 170
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064":
			*_bcgfc = 171
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065":
			*_bcgfc = 172
		case "\u0067\u0065\u0061r\u0036":
			*_bcgfc = 173
		case "\u0067\u0065\u0061r\u0039":
			*_bcgfc = 174
		case "\u0066\u0075\u006e\u006e\u0065\u006c":
			*_bcgfc = 175
		case "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073":
			*_bcgfc = 176
		case "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s":
			*_bcgfc = 177
		case "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079":
			*_bcgfc = 178
		case "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065":
			*_bcgfc = 179
		case "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l":
			*_bcgfc = 180
		case "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_bcgfc = 181
		case "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073":
			*_bcgfc = 182
		case "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073":
			*_bcgfc = 183
		case "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073":
			*_bcgfc = 184
		case "\u0063\u0068\u0061\u0072\u0074\u0058":
			*_bcgfc = 185
		case "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r":
			*_bcgfc = 186
		case "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s":
			*_bcgfc = 187
		}
	}
	_cdccde, _bbgfaa = d.Token()
	if _bbgfaa != nil {
		return _bbgfaa
	}
	if _cfcae, _gbcge := _cdccde.(_d.EndElement); _gbcge && _cfcae.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdccde)
}
func NewCT_TableRow() *CT_TableRow { _afdga := &CT_TableRow{}; return _afdga }
func (_fadgef ST_TextTabAlignType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fadgef.String(), start)
}
func (_fbcgb *CT_NonVisualPictureProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbcgb.PreferRelativeResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "p\u0072e\u0066\u0065\u0072\u0052\u0065\u006c\u0061\u0074i\u0076\u0065\u0052\u0065si\u007a\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_fbcgb.PreferRelativeResizeAttr))})
	}
	e.EncodeToken(start)
	if _fbcgb.PicLocks != nil {
		_afaff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_fbcgb.PicLocks, _afaff)
	}
	if _fbcgb.ExtLst != nil {
		_aafea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbcgb.ExtLst, _aafea)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TableGrid and its children, prefixing error messages with path
func (_cdddc *CT_TableGrid) ValidateWithPath(path string) error {
	for _bcee, _ccfb := range _cdddc.GridCol {
		if _becbb := _ccfb.ValidateWithPath(_dg.Sprintf("\u0025\u0073\u002f\u0047\u0072\u0069\u0064\u0043\u006fl\u005b\u0025\u0064\u005d", path, _bcee)); _becbb != nil {
			return _becbb
		}
	}
	return nil
}
func (_bbeeb ST_Percentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bbeeb.ST_PercentageDecimal != nil {
		e.EncodeToken(_d.CharData(_dg.Sprintf("\u0025\u0064", *_bbeeb.ST_PercentageDecimal)))
	}
	if _bbeeb.ST_Percentage != nil {
		e.EncodeToken(_d.CharData(*_bbeeb.ST_Percentage))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

// Validate validates the CT_GvmlShape and its children
func (_ggffe *CT_GvmlShape) Validate() error {
	return _ggffe.ValidateWithPath("\u0043\u0054\u005fG\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065")
}

type CT_BackgroundFormatting struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}
type EG_TextBulletSize struct {
	BuSzTx  *CT_TextBulletSizeFollowText
	BuSzPct *CT_TextBulletSizePercent
	BuSzPts *CT_TextBulletSizePoint
}

// Validate validates the CT_AlphaModulateEffect and its children
func (_bdc *CT_AlphaModulateEffect) Validate() error {
	return _bdc.ValidateWithPath("\u0043\u0054\u005f\u0041lp\u0068\u0061\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065c\u0074")
}

// ValidateWithPath validates the CT_TableStyle and its children, prefixing error messages with path
func (_fbga *CT_TableStyle) ValidateWithPath(path string) error {
	if !_fe.ST_GuidPatternRe.MatchString(_fbga.StyleIdAttr) {
		return _dg.Errorf("\u0025\u0073\u002fm\u002e\u0053\u0074\u0079\u006c\u0065\u0049\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fe.ST_GuidPatternRe, _fbga.StyleIdAttr)
	}
	if _fbga.TblBg != nil {
		if _ecdabf := _fbga.TblBg.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0042\u0067"); _ecdabf != nil {
			return _ecdabf
		}
	}
	if _fbga.WholeTbl != nil {
		if _cdcgce := _fbga.WholeTbl.ValidateWithPath(path + "\u002fW\u0068\u006f\u006c\u0065\u0054\u0062l"); _cdcgce != nil {
			return _cdcgce
		}
	}
	if _fbga.Band1H != nil {
		if _fffae := _fbga.Band1H.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0031\u0048"); _fffae != nil {
			return _fffae
		}
	}
	if _fbga.Band2H != nil {
		if _gceeg := _fbga.Band2H.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0032\u0048"); _gceeg != nil {
			return _gceeg
		}
	}
	if _fbga.Band1V != nil {
		if _eecfag := _fbga.Band1V.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0031\u0056"); _eecfag != nil {
			return _eecfag
		}
	}
	if _fbga.Band2V != nil {
		if _dedgbc := _fbga.Band2V.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0032\u0056"); _dedgbc != nil {
			return _dedgbc
		}
	}
	if _fbga.LastCol != nil {
		if _cegcf := _fbga.LastCol.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0043\u006f\u006c"); _cegcf != nil {
			return _cegcf
		}
	}
	if _fbga.FirstCol != nil {
		if _dedgf := _fbga.FirstCol.ValidateWithPath(path + "\u002fF\u0069\u0072\u0073\u0074\u0043\u006fl"); _dedgf != nil {
			return _dedgf
		}
	}
	if _fbga.LastRow != nil {
		if _bbfff := _fbga.LastRow.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0052\u006f\u0077"); _bbfff != nil {
			return _bbfff
		}
	}
	if _fbga.SeCell != nil {
		if _fdfgd := _fbga.SeCell.ValidateWithPath(path + "\u002fS\u0065\u0043\u0065\u006c\u006c"); _fdfgd != nil {
			return _fdfgd
		}
	}
	if _fbga.SwCell != nil {
		if _ddfcf := _fbga.SwCell.ValidateWithPath(path + "\u002fS\u0077\u0043\u0065\u006c\u006c"); _ddfcf != nil {
			return _ddfcf
		}
	}
	if _fbga.FirstRow != nil {
		if _dcfcd := _fbga.FirstRow.ValidateWithPath(path + "\u002fF\u0069\u0072\u0073\u0074\u0052\u006fw"); _dcfcd != nil {
			return _dcfcd
		}
	}
	if _fbga.NeCell != nil {
		if _gbaef := _fbga.NeCell.ValidateWithPath(path + "\u002fN\u0065\u0043\u0065\u006c\u006c"); _gbaef != nil {
			return _gbaef
		}
	}
	if _fbga.NwCell != nil {
		if _bggee := _fbga.NwCell.ValidateWithPath(path + "\u002fN\u0077\u0043\u0065\u006c\u006c"); _bggee != nil {
			return _bggee
		}
	}
	if _fbga.ExtLst != nil {
		if _cead := _fbga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cead != nil {
			return _cead
		}
	}
	return nil
}
func (_dfa *CT_AnimationDgmBuildProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cdcc := range start.Attr {
		if _cdcc.Name.Local == "\u0062\u006c\u0064" {
			_fafe, _bgcb := ParseUnionST_AnimationDgmBuildType(_cdcc.Value)
			if _bgcb != nil {
				return _bgcb
			}
			_dfa.BldAttr = &_fafe
			continue
		}
		if _cdcc.Name.Local == "\u0072\u0065\u0076" {
			_age, _agfe := _c.ParseBool(_cdcc.Value)
			if _agfe != nil {
				return _agfe
			}
			_dfa.RevAttr = &_age
			continue
		}
	}
	for {
		_cee, _bgde := d.Token()
		if _bgde != nil {
			return _dg.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0042\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _bgde)
		}
		if _gca, _abb := _cee.(_d.EndElement); _abb && _gca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eegce *CT_Shape3D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eegce.ZAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u007a"}, Value: _dg.Sprintf("\u0025\u0076", *_eegce.ZAttr)})
	}
	if _eegce.ExtrusionHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048"}, Value: _dg.Sprintf("\u0025\u0076", *_eegce.ExtrusionHAttr)})
	}
	if _eegce.ContourWAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0057"}, Value: _dg.Sprintf("\u0025\u0076", *_eegce.ContourWAttr)})
	}
	if _eegce.PrstMaterialAttr != ST_PresetMaterialTypeUnset {
		_dfdg, _cdffg := _eegce.PrstMaterialAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c"})
		if _cdffg != nil {
			return _cdffg
		}
		start.Attr = append(start.Attr, _dfdg)
	}
	e.EncodeToken(start)
	if _eegce.BevelT != nil {
		_bbbfag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0065\u0076\u0065\u006c\u0054"}}
		e.EncodeElement(_eegce.BevelT, _bbbfag)
	}
	if _eegce.BevelB != nil {
		_ecaga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0065\u0076\u0065\u006c\u0042"}}
		e.EncodeElement(_eegce.BevelB, _ecaga)
	}
	if _eegce.ExtrusionClr != nil {
		_affab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u0072\u0075\u0073\u0069o\u006e\u0043\u006c\u0072"}}
		e.EncodeElement(_eegce.ExtrusionClr, _affab)
	}
	if _eegce.ContourClr != nil {
		_dbebd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063o\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}}
		e.EncodeElement(_eegce.ContourClr, _dbebd)
	}
	if _eegce.ExtLst != nil {
		_fcbde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eegce.ExtLst, _fcbde)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gbacg *ST_TextVertOverflowType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bcggg, _cgeaa := d.Token()
	if _cgeaa != nil {
		return _cgeaa
	}
	if _fgbbb, _eegeeb := _bcggg.(_d.EndElement); _eegeeb && _fgbbb.Name == start.Name {
		*_gbacg = 1
		return nil
	}
	if _ffdgbf, _cedbb := _bcggg.(_d.CharData); !_cedbb {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcggg)
	} else {
		switch string(_ffdgbf) {
		case "":
			*_gbacg = 0
		case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
			*_gbacg = 1
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073":
			*_gbacg = 2
		case "\u0063\u006c\u0069\u0070":
			*_gbacg = 3
		}
	}
	_bcggg, _cgeaa = d.Token()
	if _cgeaa != nil {
		return _cgeaa
	}
	if _dfgfd, _agbcdc := _bcggg.(_d.EndElement); _agbcdc && _dfgfd.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcggg)
}
func (_cbefc *CT_GeomRect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fbcc := range start.Attr {
		if _fbcc.Name.Local == "\u006c" {
			_bbga, _acabe := ParseUnionST_AdjCoordinate(_fbcc.Value)
			if _acabe != nil {
				return _acabe
			}
			_cbefc.LAttr = _bbga
			continue
		}
		if _fbcc.Name.Local == "\u0074" {
			_aeef, _ccba := ParseUnionST_AdjCoordinate(_fbcc.Value)
			if _ccba != nil {
				return _ccba
			}
			_cbefc.TAttr = _aeef
			continue
		}
		if _fbcc.Name.Local == "\u0072" {
			_cdgac, _acdd := ParseUnionST_AdjCoordinate(_fbcc.Value)
			if _acdd != nil {
				return _acdd
			}
			_cbefc.RAttr = _cdgac
			continue
		}
		if _fbcc.Name.Local == "\u0062" {
			_bace, _ebfe := ParseUnionST_AdjCoordinate(_fbcc.Value)
			if _ebfe != nil {
				return _ebfe
			}
			_cbefc.BAttr = _bace
			continue
		}
	}
	for {
		_fdeadb, _ddae := d.Token()
		if _ddae != nil {
			return _dg.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _ddae)
		}
		if _ccfeg, _cabcbf := _fdeadb.(_d.EndElement); _cabcbf && _ccfeg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_geeae ST_PitchFamily) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_geeae.String(), start)
}

type CT_SchemeColor struct {
	ValAttr           ST_SchemeColorVal
	EG_ColorTransform []*EG_ColorTransform
}

// ValidateWithPath validates the CT_NonVisualDrawingShapeProps and its children, prefixing error messages with path
func (_adeba *CT_NonVisualDrawingShapeProps) ValidateWithPath(path string) error {
	if _adeba.SpLocks != nil {
		if _eddfa := _adeba.SpLocks.ValidateWithPath(path + "\u002f\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _eddfa != nil {
			return _eddfa
		}
	}
	if _adeba.ExtLst != nil {
		if _ggfg := _adeba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggfg != nil {
			return _ggfg
		}
	}
	return nil
}
func (_cfbbd ST_ChartBuildStep) Validate() error { return _cfbbd.ValidateWithPath("") }

type CT_TextNormalAutofit struct {
	FontScaleAttr      *ST_TextFontScalePercentOrPercentString
	LnSpcReductionAttr *ST_TextSpacingPercentOrPercentString
}

// Validate validates the EG_ThemeableFillStyle and its children
func (_deeea *EG_ThemeableFillStyle) Validate() error {
	return _deeea.ValidateWithPath("E\u0047\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065")
}

// Validate validates the CT_ShapeLocking and its children
func (_ffga *CT_ShapeLocking) Validate() error {
	return _ffga.ValidateWithPath("\u0043T\u005fS\u0068\u0061\u0070\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}
func (_fdfcb *CT_TextListStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fdfcb.DefPPr != nil {
		_ddfgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0064\u0065\u0066\u0050\u0050\u0072"}}
		e.EncodeElement(_fdfcb.DefPPr, _ddfgd)
	}
	if _fdfcb.Lvl1pPr != nil {
		_egfab := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0031\u0070\u0050r"}}
		e.EncodeElement(_fdfcb.Lvl1pPr, _egfab)
	}
	if _fdfcb.Lvl2pPr != nil {
		_ggega := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0032\u0070\u0050r"}}
		e.EncodeElement(_fdfcb.Lvl2pPr, _ggega)
	}
	if _fdfcb.Lvl3pPr != nil {
		_eabbb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0033\u0070\u0050r"}}
		e.EncodeElement(_fdfcb.Lvl3pPr, _eabbb)
	}
	if _fdfcb.Lvl4pPr != nil {
		_efbbbg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0034\u0070\u0050r"}}
		e.EncodeElement(_fdfcb.Lvl4pPr, _efbbbg)
	}
	if _fdfcb.Lvl5pPr != nil {
		_gcec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0035\u0070\u0050r"}}
		e.EncodeElement(_fdfcb.Lvl5pPr, _gcec)
	}
	if _fdfcb.Lvl6pPr != nil {
		_abbgd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0036\u0070\u0050r"}}
		e.EncodeElement(_fdfcb.Lvl6pPr, _abbgd)
	}
	if _fdfcb.Lvl7pPr != nil {
		_aeaec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0037\u0070\u0050r"}}
		e.EncodeElement(_fdfcb.Lvl7pPr, _aeaec)
	}
	if _fdfcb.Lvl8pPr != nil {
		_dfaff := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0038\u0070\u0050r"}}
		e.EncodeElement(_fdfcb.Lvl8pPr, _dfaff)
	}
	if _fdfcb.Lvl9pPr != nil {
		_gegea := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0039\u0070\u0050r"}}
		e.EncodeElement(_fdfcb.Lvl9pPr, _gegea)
	}
	if _fdfcb.ExtLst != nil {
		_gedeba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdfcb.ExtLst, _gedeba)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RegularTextRun and its children, prefixing error messages with path
func (_fcagf *CT_RegularTextRun) ValidateWithPath(path string) error {
	if _fcagf.RPr != nil {
		if _ccca := _fcagf.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _ccca != nil {
			return _ccca
		}
	}
	return nil
}
func (_bffg *CT_FillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bffg.NoFill != nil {
		_cdgaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bffg.NoFill, _cdgaf)
	}
	if _bffg.SolidFill != nil {
		_adcc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bffg.SolidFill, _adcc)
	}
	if _bffg.GradFill != nil {
		_dbce := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bffg.GradFill, _dbce)
	}
	if _bffg.BlipFill != nil {
		_fegg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bffg.BlipFill, _fegg)
	}
	if _bffg.PattFill != nil {
		_edfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bffg.PattFill, _edfc)
	}
	if _bffg.GrpFill != nil {
		_accfg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_bffg.GrpFill, _accfg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dafac ST_TextHorzOverflowType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dafac.String(), start)
}

// Validate validates the CT_TextSpacing and its children
func (_fgfed *CT_TextSpacing) Validate() error {
	return _fgfed.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070a\u0063\u0069\u006e\u0067")
}
func NewCT_Point2D() *CT_Point2D { _ffgbb := &CT_Point2D{}; return _ffgbb }
func (_eaedc *CT_ShapeLocking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fccdfa := range start.Attr {
		if _fccdfa.Name.Local == "\u006e\u006f\u0054\u0065\u0078\u0074\u0045\u0064\u0069\u0074" {
			_addc, _dgfg := _c.ParseBool(_fccdfa.Value)
			if _dgfg != nil {
				return _dgfg
			}
			_eaedc.NoTextEditAttr = &_addc
			continue
		}
		if _fccdfa.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_ecgba, _egcebc := _c.ParseBool(_fccdfa.Value)
			if _egcebc != nil {
				return _egcebc
			}
			_eaedc.NoGrpAttr = &_ecgba
			continue
		}
		if _fccdfa.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_gbgcb, _bfffg := _c.ParseBool(_fccdfa.Value)
			if _bfffg != nil {
				return _bfffg
			}
			_eaedc.NoSelectAttr = &_gbgcb
			continue
		}
		if _fccdfa.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_gecbc, _eccgf := _c.ParseBool(_fccdfa.Value)
			if _eccgf != nil {
				return _eccgf
			}
			_eaedc.NoRotAttr = &_gecbc
			continue
		}
		if _fccdfa.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_fbbba, _fbegb := _c.ParseBool(_fccdfa.Value)
			if _fbegb != nil {
				return _fbegb
			}
			_eaedc.NoChangeAspectAttr = &_fbbba
			continue
		}
		if _fccdfa.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_cfcce, _abgae := _c.ParseBool(_fccdfa.Value)
			if _abgae != nil {
				return _abgae
			}
			_eaedc.NoMoveAttr = &_cfcce
			continue
		}
		if _fccdfa.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_egfaf, _fbagd := _c.ParseBool(_fccdfa.Value)
			if _fbagd != nil {
				return _fbagd
			}
			_eaedc.NoResizeAttr = &_egfaf
			continue
		}
		if _fccdfa.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_fbeaf, _fgfgbbg := _c.ParseBool(_fccdfa.Value)
			if _fgfgbbg != nil {
				return _fgfgbbg
			}
			_eaedc.NoEditPointsAttr = &_fbeaf
			continue
		}
		if _fccdfa.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_eebbf, _dbgea := _c.ParseBool(_fccdfa.Value)
			if _dbgea != nil {
				return _dbgea
			}
			_eaedc.NoAdjustHandlesAttr = &_eebbf
			continue
		}
		if _fccdfa.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_bdegf, _fbcaa := _c.ParseBool(_fccdfa.Value)
			if _fbcaa != nil {
				return _fbcaa
			}
			_eaedc.NoChangeArrowheadsAttr = &_bdegf
			continue
		}
		if _fccdfa.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_gbfgdg, _feefb := _c.ParseBool(_fccdfa.Value)
			if _feefb != nil {
				return _feefb
			}
			_eaedc.NoChangeShapeTypeAttr = &_gbfgdg
			continue
		}
	}
_ddgg:
	for {
		_aadffc, _bcfbg := d.Token()
		if _bcfbg != nil {
			return _bcfbg
		}
		switch _cccga := _aadffc.(type) {
		case _d.StartElement:
			switch _cccga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eaedc.ExtLst = NewCT_OfficeArtExtensionList()
				if _fddgf := d.DecodeElement(_eaedc.ExtLst, &_cccga); _fddgf != nil {
					return _fddgf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061p\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _cccga.Name)
				if _dbdf := d.Skip(); _dbdf != nil {
					return _dbdf
				}
			}
		case _d.EndElement:
			break _ddgg
		case _d.CharData:
		}
	}
	return nil
}
func (_gcga ST_RectAlignment) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gcga.String(), start)
}

// ValidateWithPath validates the CT_OfficeArtExtension and its children, prefixing error messages with path
func (_gfeb *CT_OfficeArtExtension) ValidateWithPath(path string) error { return nil }
func (_bebb *CT_GvmlTextShape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_acdcd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
	e.EncodeElement(_bebb.TxBody, _acdcd)
	if _bebb.Choice != nil {
		_bebb.Choice.MarshalXML(e, _d.StartElement{})
	}
	if _bebb.ExtLst != nil {
		_gdbdf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bebb.ExtLst, _gdbdf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eeefa *EG_TextBulletColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eeefa.BuClrTx != nil {
		_gbbfd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072\u0054x"}}
		e.EncodeElement(_eeefa.BuClrTx, _gbbfd)
	}
	if _eeefa.BuClr != nil {
		_dggea := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072"}}
		e.EncodeElement(_eeefa.BuClr, _dggea)
	}
	return nil
}
func (_dcee *CT_HslColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dcee.HueAttr = 0
	for _, _bedee := range start.Attr {
		if _bedee.Name.Local == "\u0068\u0075\u0065" {
			_bbaff, _gccg := _c.ParseInt(_bedee.Value, 10, 32)
			if _gccg != nil {
				return _gccg
			}
			_dcee.HueAttr = int32(_bbaff)
			continue
		}
		if _bedee.Name.Local == "\u0073\u0061\u0074" {
			_ebac, _bbdbc := ParseUnionST_Percentage(_bedee.Value)
			if _bbdbc != nil {
				return _bbdbc
			}
			_dcee.SatAttr = _ebac
			continue
		}
		if _bedee.Name.Local == "\u006c\u0075\u006d" {
			_dddbf, _fggf := ParseUnionST_Percentage(_bedee.Value)
			if _fggf != nil {
				return _fggf
			}
			_dcee.LumAttr = _dddbf
			continue
		}
	}
_eceag:
	for {
		_bcbef, _ecdgb := d.Token()
		if _ecdgb != nil {
			return _ecdgb
		}
		switch _ecfaf := _bcbef.(type) {
		case _d.StartElement:
			switch _ecfaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_bgbdf := NewEG_ColorTransform()
				_bgbdf.Tint = NewCT_PositiveFixedPercentage()
				if _edbbe := d.DecodeElement(_bgbdf.Tint, &_ecfaf); _edbbe != nil {
					return _edbbe
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _bgbdf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_ggac := NewEG_ColorTransform()
				_ggac.Shade = NewCT_PositiveFixedPercentage()
				if _bedf := d.DecodeElement(_ggac.Shade, &_ecfaf); _bedf != nil {
					return _bedf
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _ggac)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_bfef := NewEG_ColorTransform()
				_bfef.Comp = NewCT_ComplementTransform()
				if _fdef := d.DecodeElement(_bfef.Comp, &_ecfaf); _fdef != nil {
					return _fdef
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _bfef)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_fcdae := NewEG_ColorTransform()
				_fcdae.Inv = NewCT_InverseTransform()
				if _eeaee := d.DecodeElement(_fcdae.Inv, &_ecfaf); _eeaee != nil {
					return _eeaee
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _fcdae)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_dbeg := NewEG_ColorTransform()
				_dbeg.Gray = NewCT_GrayscaleTransform()
				if _gggbb := d.DecodeElement(_dbeg.Gray, &_ecfaf); _gggbb != nil {
					return _gggbb
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _dbeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_eddd := NewEG_ColorTransform()
				_eddd.Alpha = NewCT_PositiveFixedPercentage()
				if _acgag := d.DecodeElement(_eddd.Alpha, &_ecfaf); _acgag != nil {
					return _acgag
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _eddd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_gcaab := NewEG_ColorTransform()
				_gcaab.AlphaOff = NewCT_FixedPercentage()
				if _fdcgc := d.DecodeElement(_gcaab.AlphaOff, &_ecfaf); _fdcgc != nil {
					return _fdcgc
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _gcaab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_cbbfd := NewEG_ColorTransform()
				_cbbfd.AlphaMod = NewCT_PositivePercentage()
				if _bbbba := d.DecodeElement(_cbbfd.AlphaMod, &_ecfaf); _bbbba != nil {
					return _bbbba
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _cbbfd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_gebfg := NewEG_ColorTransform()
				_gebfg.Hue = NewCT_PositiveFixedAngle()
				if _deede := d.DecodeElement(_gebfg.Hue, &_ecfaf); _deede != nil {
					return _deede
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _gebfg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_bafed := NewEG_ColorTransform()
				_bafed.HueOff = NewCT_Angle()
				if _adcfa := d.DecodeElement(_bafed.HueOff, &_ecfaf); _adcfa != nil {
					return _adcfa
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _bafed)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_eedba := NewEG_ColorTransform()
				_eedba.HueMod = NewCT_PositivePercentage()
				if _gafd := d.DecodeElement(_eedba.HueMod, &_ecfaf); _gafd != nil {
					return _gafd
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _eedba)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_eadcg := NewEG_ColorTransform()
				_eadcg.Sat = NewCT_Percentage()
				if _egfa := d.DecodeElement(_eadcg.Sat, &_ecfaf); _egfa != nil {
					return _egfa
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _eadcg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_bdfc := NewEG_ColorTransform()
				_bdfc.SatOff = NewCT_Percentage()
				if _bfgf := d.DecodeElement(_bdfc.SatOff, &_ecfaf); _bfgf != nil {
					return _bfgf
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _bdfc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_cdaa := NewEG_ColorTransform()
				_cdaa.SatMod = NewCT_Percentage()
				if _ebeaf := d.DecodeElement(_cdaa.SatMod, &_ecfaf); _ebeaf != nil {
					return _ebeaf
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _cdaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_bbedb := NewEG_ColorTransform()
				_bbedb.Lum = NewCT_Percentage()
				if _dfedb := d.DecodeElement(_bbedb.Lum, &_ecfaf); _dfedb != nil {
					return _dfedb
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _bbedb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_afac := NewEG_ColorTransform()
				_afac.LumOff = NewCT_Percentage()
				if _bbcca := d.DecodeElement(_afac.LumOff, &_ecfaf); _bbcca != nil {
					return _bbcca
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _afac)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_affg := NewEG_ColorTransform()
				_affg.LumMod = NewCT_Percentage()
				if _aecb := d.DecodeElement(_affg.LumMod, &_ecfaf); _aecb != nil {
					return _aecb
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _affg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_ddcddg := NewEG_ColorTransform()
				_ddcddg.Red = NewCT_Percentage()
				if _dabc := d.DecodeElement(_ddcddg.Red, &_ecfaf); _dabc != nil {
					return _dabc
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _ddcddg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_ddgbb := NewEG_ColorTransform()
				_ddgbb.RedOff = NewCT_Percentage()
				if _cebg := d.DecodeElement(_ddgbb.RedOff, &_ecfaf); _cebg != nil {
					return _cebg
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _ddgbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_gdbbb := NewEG_ColorTransform()
				_gdbbb.RedMod = NewCT_Percentage()
				if _ecccg := d.DecodeElement(_gdbbb.RedMod, &_ecfaf); _ecccg != nil {
					return _ecccg
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _gdbbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_bgcaf := NewEG_ColorTransform()
				_bgcaf.Green = NewCT_Percentage()
				if _egcba := d.DecodeElement(_bgcaf.Green, &_ecfaf); _egcba != nil {
					return _egcba
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _bgcaf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_feee := NewEG_ColorTransform()
				_feee.GreenOff = NewCT_Percentage()
				if _cdaeb := d.DecodeElement(_feee.GreenOff, &_ecfaf); _cdaeb != nil {
					return _cdaeb
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _feee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_cafec := NewEG_ColorTransform()
				_cafec.GreenMod = NewCT_Percentage()
				if _cdca := d.DecodeElement(_cafec.GreenMod, &_ecfaf); _cdca != nil {
					return _cdca
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _cafec)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_cbab := NewEG_ColorTransform()
				_cbab.Blue = NewCT_Percentage()
				if _aeeb := d.DecodeElement(_cbab.Blue, &_ecfaf); _aeeb != nil {
					return _aeeb
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _cbab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_bebg := NewEG_ColorTransform()
				_bebg.BlueOff = NewCT_Percentage()
				if _ecfe := d.DecodeElement(_bebg.BlueOff, &_ecfaf); _ecfe != nil {
					return _ecfe
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _bebg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_abfb := NewEG_ColorTransform()
				_abfb.BlueMod = NewCT_Percentage()
				if _gaad := d.DecodeElement(_abfb.BlueMod, &_ecfaf); _gaad != nil {
					return _gaad
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _abfb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_dbace := NewEG_ColorTransform()
				_dbace.Gamma = NewCT_GammaTransform()
				if _bgge := d.DecodeElement(_dbace.Gamma, &_ecfaf); _bgge != nil {
					return _bgge
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _dbace)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_cedad := NewEG_ColorTransform()
				_cedad.InvGamma = NewCT_InverseGammaTransform()
				if _aafbg := d.DecodeElement(_cedad.InvGamma, &_ecfaf); _aafbg != nil {
					return _aafbg
				}
				_dcee.EG_ColorTransform = append(_dcee.EG_ColorTransform, _cedad)
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _ecfaf.Name)
				if _cfedf := d.Skip(); _cfedf != nil {
					return _cfedf
				}
			}
		case _d.EndElement:
			break _eceag
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RelativeRect and its children
func (_dcgag *CT_RelativeRect) Validate() error {
	return _dcgag.ValidateWithPath("\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0052\u0065\u0063\u0074")
}
func NewCT_ShapeProperties() *CT_ShapeProperties { _eabad := &CT_ShapeProperties{}; return _eabad }
func (_fcde *CT_EffectList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_feef:
	for {
		_afea, _fcdc := d.Token()
		if _fcdc != nil {
			return _fcdc
		}
		switch _daefg := _afea.(type) {
		case _d.StartElement:
			switch _daefg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_fcde.Blur = NewCT_BlurEffect()
				if _beccc := d.DecodeElement(_fcde.Blur, &_daefg); _beccc != nil {
					return _beccc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_fcde.FillOverlay = NewCT_FillOverlayEffect()
				if _gggef := d.DecodeElement(_fcde.FillOverlay, &_daefg); _gggef != nil {
					return _gggef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_fcde.Glow = NewCT_GlowEffect()
				if _gdbc := d.DecodeElement(_fcde.Glow, &_daefg); _gdbc != nil {
					return _gdbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_fcde.InnerShdw = NewCT_InnerShadowEffect()
				if _dgdb := d.DecodeElement(_fcde.InnerShdw, &_daefg); _dgdb != nil {
					return _dgdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_fcde.OuterShdw = NewCT_OuterShadowEffect()
				if _aafa := d.DecodeElement(_fcde.OuterShdw, &_daefg); _aafa != nil {
					return _aafa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_fcde.PrstShdw = NewCT_PresetShadowEffect()
				if _feae := d.DecodeElement(_fcde.PrstShdw, &_daefg); _feae != nil {
					return _feae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_fcde.Reflection = NewCT_ReflectionEffect()
				if _eded := d.DecodeElement(_fcde.Reflection, &_daefg); _eded != nil {
					return _eded
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_fcde.SoftEdge = NewCT_SoftEdgesEffect()
				if _fgbdg := d.DecodeElement(_fcde.SoftEdge, &_daefg); _fgbdg != nil {
					return _fgbdg
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045f\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074 \u0025\u0076", _daefg.Name)
				if _eafca := d.Skip(); _eafca != nil {
					return _eafca
				}
			}
		case _d.EndElement:
			break _feef
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableProperties and its children, prefixing error messages with path
func (_egfbc *CT_TableProperties) ValidateWithPath(path string) error {
	if _egfbc.NoFill != nil {
		if _gbbd := _egfbc.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _gbbd != nil {
			return _gbbd
		}
	}
	if _egfbc.SolidFill != nil {
		if _fabgg := _egfbc.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _fabgg != nil {
			return _fabgg
		}
	}
	if _egfbc.GradFill != nil {
		if _fgfcde := _egfbc.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fgfcde != nil {
			return _fgfcde
		}
	}
	if _egfbc.BlipFill != nil {
		if _ddddb := _egfbc.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ddddb != nil {
			return _ddddb
		}
	}
	if _egfbc.PattFill != nil {
		if _bcbf := _egfbc.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bcbf != nil {
			return _bcbf
		}
	}
	if _egfbc.GrpFill != nil {
		if _bgbfa := _egfbc.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _bgbfa != nil {
			return _bgbfa
		}
	}
	if _egfbc.EffectLst != nil {
		if _efebg := _egfbc.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _efebg != nil {
			return _efebg
		}
	}
	if _egfbc.EffectDag != nil {
		if _fdbeb := _egfbc.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _fdbeb != nil {
			return _fdbeb
		}
	}
	if _egfbc.Choice != nil {
		if _dedgb := _egfbc.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _dedgb != nil {
			return _dedgb
		}
	}
	if _egfbc.ExtLst != nil {
		if _adaee := _egfbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adaee != nil {
			return _adaee
		}
	}
	return nil
}
func (_dddca ST_PresetColorVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dddca.String(), start)
}
func NewCT_AnimationDgmBuildProperties() *CT_AnimationDgmBuildProperties {
	_eda := &CT_AnimationDgmBuildProperties{}
	return _eda
}

type CT_TableCellBorderStyle struct {
	Left    *CT_ThemeableLineStyle
	Right   *CT_ThemeableLineStyle
	Top     *CT_ThemeableLineStyle
	Bottom  *CT_ThemeableLineStyle
	InsideH *CT_ThemeableLineStyle
	InsideV *CT_ThemeableLineStyle
	Tl2br   *CT_ThemeableLineStyle
	Tr2bl   *CT_ThemeableLineStyle
	ExtLst  *CT_OfficeArtExtensionList
}

func NewCT_PositiveFixedAngle() *CT_PositiveFixedAngle {
	_beeda := &CT_PositiveFixedAngle{}
	_beeda.ValAttr = 0
	return _beeda
}

// ValidateWithPath validates the CT_GvmlTextShapeChoice and its children, prefixing error messages with path
func (_deaa *CT_GvmlTextShapeChoice) ValidateWithPath(path string) error {
	if _deaa.UseSpRect != nil {
		if _bbcec := _deaa.UseSpRect.ValidateWithPath(path + "\u002f\u0055\u0073\u0065\u0053\u0070\u0052\u0065\u0063\u0074"); _bbcec != nil {
			return _bbcec
		}
	}
	if _deaa.Xfrm != nil {
		if _abgf := _deaa.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _abgf != nil {
			return _abgf
		}
	}
	return nil
}
func (_afdb *CT_GvmlConnector) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_afdb.NvCxnSpPr = NewCT_GvmlConnectorNonVisual()
	_afdb.SpPr = NewCT_ShapeProperties()
_edgdg:
	for {
		_cabfc, _dcafbf := d.Token()
		if _dcafbf != nil {
			return _dcafbf
		}
		switch _acdea := _cabfc.(type) {
		case _d.StartElement:
			switch _acdea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _edggbd := d.DecodeElement(_afdb.NvCxnSpPr, &_acdea); _edggbd != nil {
					return _edggbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _efeg := d.DecodeElement(_afdb.SpPr, &_acdea); _efeg != nil {
					return _efeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_afdb.Style = NewCT_ShapeStyle()
				if _ggba := d.DecodeElement(_afdb.Style, &_acdea); _ggba != nil {
					return _ggba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afdb.ExtLst = NewCT_OfficeArtExtensionList()
				if _aggbg := d.DecodeElement(_afdb.ExtLst, &_acdea); _aggbg != nil {
					return _aggbg
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0020\u0025v", _acdea.Name)
				if _gddg := d.Skip(); _gddg != nil {
					return _gddg
				}
			}
		case _d.EndElement:
			break _edgdg
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupFillProperties and its children, prefixing error messages with path
func (_ecbff *CT_GroupFillProperties) ValidateWithPath(path string) error { return nil }
func (_bcacce ST_PresetCameraType) Validate() error                       { return _bcacce.ValidateWithPath("") }

// Validate validates the CT_AlphaModulateFixedEffect and its children
func (_cfcd *CT_AlphaModulateFixedEffect) Validate() error {
	return _cfcd.ValidateWithPath("C\u0054\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0046i\u0078\u0065\u0064E\u0066f\u0065\u0063\u0074")
}

// Validate validates the CT_BackgroundFillStyleList and its children
func (_edcc *CT_BackgroundFillStyleList) Validate() error {
	return _edcc.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075n\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065L\u0069\u0073\u0074")
}
func NewCT_PresetTextShape() *CT_PresetTextShape {
	_dbabg := &CT_PresetTextShape{}
	_dbabg.PrstAttr = ST_TextShapeType(1)
	return _dbabg
}
func (_ebadd *CT_GvmlConnector) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ceeeb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ebadd.NvCxnSpPr, _ceeeb)
	_gbdba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_ebadd.SpPr, _gbdba)
	if _ebadd.Style != nil {
		_fcec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_ebadd.Style, _fcec)
	}
	if _ebadd.ExtLst != nil {
		_eabcf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ebadd.ExtLst, _eabcf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fbabeg ST_ShapeType) String() string {
	switch _fbabeg {
	case 0:
		return ""
	case 1:
		return "\u006c\u0069\u006e\u0065"
	case 2:
		return "\u006ci\u006e\u0065\u0049\u006e\u0076"
	case 3:
		return "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 4:
		return "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 5:
		return "\u0072\u0065\u0063\u0074"
	case 6:
		return "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case 7:
		return "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d"
	case 8:
		return "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d"
	case 9:
		return "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064"
	case 10:
		return "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e"
	case 11:
		return "\u0068e\u0078\u0061\u0067\u006f\u006e"
	case 12:
		return "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e"
	case 13:
		return "\u006fc\u0074\u0061\u0067\u006f\u006e"
	case 14:
		return "\u0064e\u0063\u0061\u0067\u006f\u006e"
	case 15:
		return "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn"
	case 16:
		return "\u0073\u0074\u0061r\u0034"
	case 17:
		return "\u0073\u0074\u0061r\u0035"
	case 18:
		return "\u0073\u0074\u0061r\u0036"
	case 19:
		return "\u0073\u0074\u0061r\u0037"
	case 20:
		return "\u0073\u0074\u0061r\u0038"
	case 21:
		return "\u0073\u0074\u0061\u0072\u0031\u0030"
	case 22:
		return "\u0073\u0074\u0061\u0072\u0031\u0032"
	case 23:
		return "\u0073\u0074\u0061\u0072\u0031\u0036"
	case 24:
		return "\u0073\u0074\u0061\u0072\u0032\u0034"
	case 25:
		return "\u0073\u0074\u0061\u0072\u0033\u0032"
	case 26:
		return "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t"
	case 27:
		return "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074"
	case 28:
		return "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074"
	case 29:
		return "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074"
	case 30:
		return "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074"
	case 31:
		return "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t"
	case 32:
		return "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074"
	case 33:
		return "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074"
	case 34:
		return "\u0070\u006c\u0061\u0071\u0075\u0065"
	case 35:
		return "\u0065l\u006c\u0069\u0070\u0073\u0065"
	case 36:
		return "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070"
	case 37:
		return "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e"
	case 38:
		return "\u0063h\u0065\u0076\u0072\u006f\u006e"
	case 39:
		return "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065"
	case 40:
		return "\u0070\u0069\u0065"
	case 41:
		return "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063"
	case 42:
		return "\u0064\u006f\u006eu\u0074"
	case 43:
		return "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg"
	case 44:
		return "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case 45:
		return "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw"
	case 46:
		return "\u0075p\u0041\u0072\u0072\u006f\u0077"
	case 47:
		return "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw"
	case 48:
		return "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 49:
		return "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 50:
		return "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 51:
		return "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 52:
		return "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case 53:
		return "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 54:
		return "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 55:
		return "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw"
	case 56:
		return "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 57:
		return "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case 58:
		return "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case 59:
		return "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 60:
		return "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074"
	case 61:
		return "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074"
	case 62:
		return "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 63:
		return "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw"
	case 64:
		return "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077"
	case 65:
		return "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077"
	case 66:
		return "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077"
	case 67:
		return "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077"
	case 68:
		return "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case 69:
		return "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077"
	case 70:
		return "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 71:
		return "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case 72:
		return "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077"
	case 73:
		return "\u0063\u0075\u0062\u0065"
	case 74:
		return "\u0063\u0061\u006e"
	case 75:
		return "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074"
	case 76:
		return "\u0068\u0065\u0061r\u0074"
	case 77:
		return "\u0073\u0075\u006e"
	case 78:
		return "\u006d\u006f\u006f\u006e"
	case 79:
		return "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065"
	case 80:
		return "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031"
	case 81:
		return "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032"
	case 82:
		return "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072"
	case 83:
		return "\u0062\u0065\u0076e\u006c"
	case 84:
		return "\u0066\u0072\u0061m\u0065"
	case 85:
		return "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de"
	case 86:
		return "\u0063\u006f\u0072\u006e\u0065\u0072"
	case 87:
		return "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065"
	case 88:
		return "\u0063\u0068\u006fr\u0064"
	case 89:
		return "\u0061\u0072\u0063"
	case 90:
		return "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case 91:
		return "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case 92:
		return "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e"
	case 93:
		return "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065"
	case 94:
		return "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072"
	case 95:
		return "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r"
	case 96:
		return "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031"
	case 97:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032"
	case 98:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033"
	case 99:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034"
	case 100:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035"
	case 101:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032"
	case 102:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033"
	case 103:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034"
	case 104:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035"
	case 105:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031"
	case 106:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032"
	case 107:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033"
	case 108:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case 109:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case 110:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case 111:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case 112:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case 113:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case 114:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031"
	case 115:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032"
	case 116:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033"
	case 117:
		return "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 118:
		return "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074"
	case 119:
		return "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 120:
		return "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 121:
		return "\u0063\u006c\u006fu\u0064"
	case 122:
		return "\u0072\u0069\u0062\u0062\u006f\u006e"
	case 123:
		return "\u0072i\u0062\u0062\u006f\u006e\u0032"
	case 124:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e"
	case 125:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032"
	case 126:
		return "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e"
	case 127:
		return "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c"
	case 128:
		return "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c"
	case 129:
		return "\u0077\u0061\u0076\u0065"
	case 130:
		return "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065"
	case 131:
		return "\u0070\u006c\u0075\u0073"
	case 132:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073"
	case 133:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e"
	case 134:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074"
	case 135:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073"
	case 136:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case 137:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074"
	case 138:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074"
	case 139:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072"
	case 140:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e"
	case 141:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074"
	case 142:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e"
	case 143:
		return "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072"
	case 144:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064"
	case 145:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065"
	case 146:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e"
	case 147:
		return "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072"
	case 148:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065"
	case 149:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074"
	case 150:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074"
	case 151:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065"
	case 152:
		return "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case 153:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065"
	case 154:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065"
	case 155:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b"
	case 156:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d"
	case 157:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079"
	case 158:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079"
	case 159:
		return "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s"
	case 160:
		return "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr"
	case 161:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b"
	case 162:
		return "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065"
	case 163:
		return "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070"
	case 164:
		return "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	case 165:
		return "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074"
	case 166:
		return "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073"
	case 167:
		return "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064"
	case 168:
		return "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067"
	case 169:
		return "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e"
	case 170:
		return "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074"
	case 171:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064"
	case 172:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065"
	case 173:
		return "\u0067\u0065\u0061r\u0036"
	case 174:
		return "\u0067\u0065\u0061r\u0039"
	case 175:
		return "\u0066\u0075\u006e\u006e\u0065\u006c"
	case 176:
		return "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073"
	case 177:
		return "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s"
	case 178:
		return "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079"
	case 179:
		return "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065"
	case 180:
		return "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l"
	case 181:
		return "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 182:
		return "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073"
	case 183:
		return "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073"
	case 184:
		return "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073"
	case 185:
		return "\u0063\u0068\u0061\u0072\u0074\u0058"
	case 186:
		return "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r"
	case 187:
		return "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s"
	}
	return ""
}

// Validate validates the CT_LineEndProperties and its children
func (_ebaf *CT_LineEndProperties) Validate() error {
	return _ebaf.ValidateWithPath("C\u0054_\u004c\u0069\u006e\u0065\u0045\u006e\u0064\u0050r\u006f\u0070\u0065\u0072ti\u0065\u0073")
}

type CT_GvmlTextShapeChoice struct {
	UseSpRect *CT_GvmlUseShapeRectangle
	Xfrm      *CT_Transform2D
}

// Validate validates the CT_PictureLocking and its children
func (_dbbcb *CT_PictureLocking) Validate() error {
	return _dbbcb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006fc\u006b\u0069\u006e\u0067")
}

// ValidateWithPath validates the CT_TextSpacingPoint and its children, prefixing error messages with path
func (_aebgb *CT_TextSpacingPoint) ValidateWithPath(path string) error {
	if _aebgb.ValAttr < 0 {
		return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _aebgb.ValAttr)
	}
	if _aebgb.ValAttr > 158400 {
		return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0031\u0035\u0038\u0034\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, _aebgb.ValAttr)
	}
	return nil
}
func (_bgbb *EG_TextBulletTypeface) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bgbb.BuFontTx != nil {
		_aeaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}}
		e.EncodeElement(_bgbb.BuFontTx, _aeaa)
	}
	if _bgbb.BuFont != nil {
		_egcgcc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_bgbb.BuFont, _egcgcc)
	}
	return nil
}
func (_bbcdb *CT_TextBodyProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eecfac := range start.Attr {
		if _eecfac.Name.Local == "f\u0072\u006f\u006d\u0057\u006f\u0072\u0064\u0041\u0072\u0074" {
			_eagff, _aadcd := _c.ParseBool(_eecfac.Value)
			if _aadcd != nil {
				return _aadcd
			}
			_bbcdb.FromWordArtAttr = &_eagff
			continue
		}
		if _eecfac.Name.Local == "\u0061\u006e\u0063\u0068\u006f\u0072" {
			_bbcdb.AnchorAttr.UnmarshalXMLAttr(_eecfac)
			continue
		}
		if _eecfac.Name.Local == "\u0073\u0070c\u0046\u0069\u0072s\u0074\u004c\u0061\u0073\u0074\u0050\u0061\u0072\u0061" {
			_bfgbf, _bcgbba := _c.ParseBool(_eecfac.Value)
			if _bcgbba != nil {
				return _bcgbba
			}
			_bbcdb.SpcFirstLastParaAttr = &_bfgbf
			continue
		}
		if _eecfac.Name.Local == "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r" {
			_ffcgb, _dedbd := _c.ParseBool(_eecfac.Value)
			if _dedbd != nil {
				return _dedbd
			}
			_bbcdb.AnchorCtrAttr = &_ffcgb
			continue
		}
		if _eecfac.Name.Local == "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_bbcdb.HorzOverflowAttr.UnmarshalXMLAttr(_eecfac)
			continue
		}
		if _eecfac.Name.Local == "\u0066o\u0072\u0063\u0065\u0041\u0041" {
			_gdbcg, _efcac := _c.ParseBool(_eecfac.Value)
			if _efcac != nil {
				return _efcac
			}
			_bbcdb.ForceAAAttr = &_gdbcg
			continue
		}
		if _eecfac.Name.Local == "\u0077\u0072\u0061\u0070" {
			_bbcdb.WrapAttr.UnmarshalXMLAttr(_eecfac)
			continue
		}
		if _eecfac.Name.Local == "\u0075p\u0072\u0069\u0067\u0068\u0074" {
			_dbabgf, _gebff := _c.ParseBool(_eecfac.Value)
			if _gebff != nil {
				return _gebff
			}
			_bbcdb.UprightAttr = &_dbabgf
			continue
		}
		if _eecfac.Name.Local == "\u0074\u0049\u006e\u0073" {
			_gdcca, _daaea := ParseUnionST_Coordinate32(_eecfac.Value)
			if _daaea != nil {
				return _daaea
			}
			_bbcdb.TInsAttr = &_gdcca
			continue
		}
		if _eecfac.Name.Local == "c\u006f\u006d\u0070\u0061\u0074\u004c\u006e\u0053\u0070\u0063" {
			_ecebc, _edbag := _c.ParseBool(_eecfac.Value)
			if _edbag != nil {
				return _edbag
			}
			_bbcdb.CompatLnSpcAttr = &_ecebc
			continue
		}
		if _eecfac.Name.Local == "\u0062\u0049\u006e\u0073" {
			_bagbe, _dbdag := ParseUnionST_Coordinate32(_eecfac.Value)
			if _dbdag != nil {
				return _dbdag
			}
			_bbcdb.BInsAttr = &_bagbe
			continue
		}
		if _eecfac.Name.Local == "\u0076\u0065\u0072t\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_bbcdb.VertOverflowAttr.UnmarshalXMLAttr(_eecfac)
			continue
		}
		if _eecfac.Name.Local == "\u0072\u006f\u0074" {
			_ffcbe, _eecbf := _c.ParseInt(_eecfac.Value, 10, 32)
			if _eecbf != nil {
				return _eecbf
			}
			_dcebb := int32(_ffcbe)
			_bbcdb.RotAttr = &_dcebb
			continue
		}
		if _eecfac.Name.Local == "\u0073\u0070\u0063\u0043\u006f\u006c" {
			_dcaa, _ggcfe := _c.ParseInt(_eecfac.Value, 10, 32)
			if _ggcfe != nil {
				return _ggcfe
			}
			_beced := int32(_dcaa)
			_bbcdb.SpcColAttr = &_beced
			continue
		}
		if _eecfac.Name.Local == "\u0076\u0065\u0072\u0074" {
			_bbcdb.VertAttr.UnmarshalXMLAttr(_eecfac)
			continue
		}
		if _eecfac.Name.Local == "\u0072\u0049\u006e\u0073" {
			_dcde, _cedb := ParseUnionST_Coordinate32(_eecfac.Value)
			if _cedb != nil {
				return _cedb
			}
			_bbcdb.RInsAttr = &_dcde
			continue
		}
		if _eecfac.Name.Local == "\u006e\u0075\u006d\u0043\u006f\u006c" {
			_efead, _becdc := _c.ParseInt(_eecfac.Value, 10, 32)
			if _becdc != nil {
				return _becdc
			}
			_bdddb := int32(_efead)
			_bbcdb.NumColAttr = &_bdddb
			continue
		}
		if _eecfac.Name.Local == "\u0072\u0074\u006c\u0043\u006f\u006c" {
			_bdda, _aacgg := _c.ParseBool(_eecfac.Value)
			if _aacgg != nil {
				return _aacgg
			}
			_bbcdb.RtlColAttr = &_bdda
			continue
		}
		if _eecfac.Name.Local == "\u006c\u0049\u006e\u0073" {
			_cffad, _bbdbf := ParseUnionST_Coordinate32(_eecfac.Value)
			if _bbdbf != nil {
				return _bbdbf
			}
			_bbcdb.LInsAttr = &_cffad
			continue
		}
	}
_eafgb:
	for {
		_decgg, _dcefg := d.Token()
		if _dcefg != nil {
			return _dcefg
		}
		switch _afgaa := _decgg.(type) {
		case _d.StartElement:
			switch _afgaa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}:
				_bbcdb.PrstTxWarp = NewCT_PresetTextShape()
				if _cafecf := d.DecodeElement(_bbcdb.PrstTxWarp, &_afgaa); _cafecf != nil {
					return _cafecf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}:
				_bbcdb.NoAutofit = NewCT_TextNoAutofit()
				if _gefee := d.DecodeElement(_bbcdb.NoAutofit, &_afgaa); _gefee != nil {
					return _gefee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}:
				_bbcdb.NormAutofit = NewCT_TextNormalAutofit()
				if _cgdfa := d.DecodeElement(_bbcdb.NormAutofit, &_afgaa); _cgdfa != nil {
					return _cgdfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}:
				_bbcdb.SpAutoFit = NewCT_TextShapeAutofit()
				if _afecf := d.DecodeElement(_bbcdb.SpAutoFit, &_afgaa); _afecf != nil {
					return _afecf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_bbcdb.Scene3d = NewCT_Scene3D()
				if _dbcgd := d.DecodeElement(_bbcdb.Scene3d, &_afgaa); _dbcgd != nil {
					return _dbcgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_bbcdb.Sp3d = NewCT_Shape3D()
				if _acfeb := d.DecodeElement(_bbcdb.Sp3d, &_afgaa); _acfeb != nil {
					return _acfeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}:
				_bbcdb.FlatTx = NewCT_FlatText()
				if _gefgf := d.DecodeElement(_bbcdb.FlatTx, &_afgaa); _gefgf != nil {
					return _gefgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbcdb.ExtLst = NewCT_OfficeArtExtensionList()
				if _gfbfg := d.DecodeElement(_bbcdb.ExtLst, &_afgaa); _gfbfg != nil {
					return _gfbfg
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _afgaa.Name)
				if _ceafgd := d.Skip(); _ceafgd != nil {
					return _ceafgd
				}
			}
		case _d.EndElement:
			break _eafgb
		case _d.CharData:
		}
	}
	return nil
}
func (_dfdagd *ST_TextHorzOverflowType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dfdagd = 0
	case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
		*_dfdagd = 1
	case "\u0063\u006c\u0069\u0070":
		*_dfdagd = 2
	}
	return nil
}
func (_agfge *CT_FillStyleList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fddba:
	for {
		_bfeaf, _gdfgf := d.Token()
		if _gdfgf != nil {
			return _gdfgf
		}
		switch _bbbae := _bfeaf.(type) {
		case _d.StartElement:
			switch _bbbae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_afeb := NewEG_FillProperties()
				_afeb.NoFill = NewCT_NoFillProperties()
				if _gaeb := d.DecodeElement(_afeb.NoFill, &_bbbae); _gaeb != nil {
					return _gaeb
				}
				_agfge.EG_FillProperties = append(_agfge.EG_FillProperties, _afeb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_ffdgb := NewEG_FillProperties()
				_ffdgb.SolidFill = NewCT_SolidColorFillProperties()
				if _bbda := d.DecodeElement(_ffdgb.SolidFill, &_bbbae); _bbda != nil {
					return _bbda
				}
				_agfge.EG_FillProperties = append(_agfge.EG_FillProperties, _ffdgb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_cffed := NewEG_FillProperties()
				_cffed.GradFill = NewCT_GradientFillProperties()
				if _ddge := d.DecodeElement(_cffed.GradFill, &_bbbae); _ddge != nil {
					return _ddge
				}
				_agfge.EG_FillProperties = append(_agfge.EG_FillProperties, _cffed)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_egdfb := NewEG_FillProperties()
				_egdfb.BlipFill = NewCT_BlipFillProperties()
				if _gbca := d.DecodeElement(_egdfb.BlipFill, &_bbbae); _gbca != nil {
					return _gbca
				}
				_agfge.EG_FillProperties = append(_agfge.EG_FillProperties, _egdfb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_cfedg := NewEG_FillProperties()
				_cfedg.PattFill = NewCT_PatternFillProperties()
				if _bfggf := d.DecodeElement(_cfedg.PattFill, &_bbbae); _bfggf != nil {
					return _bfggf
				}
				_agfge.EG_FillProperties = append(_agfge.EG_FillProperties, _cfedg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_dcbcdf := NewEG_FillProperties()
				_dcbcdf.GrpFill = NewCT_GroupFillProperties()
				if _gfaee := d.DecodeElement(_dcbcdf.GrpFill, &_bbbae); _gfaee != nil {
					return _gfaee
				}
				_agfge.EG_FillProperties = append(_agfge.EG_FillProperties, _dcbcdf)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _bbbae.Name)
				if _aeab := d.Skip(); _aeab != nil {
					return _aeab
				}
			}
		case _d.EndElement:
			break _fddba
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_DashStopList() *CT_DashStopList       { _cecf := &CT_DashStopList{}; return _cecf }
func NewCT_CustomColorList() *CT_CustomColorList { _dccc := &CT_CustomColorList{}; return _dccc }

// Validate validates the CT_TextSpacingPercent and its children
func (_ccdbef *CT_TextSpacingPercent) Validate() error {
	return _ccdbef.ValidateWithPath("C\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074")
}

// Validate validates the CT_Scene3D and its children
func (_afgdbe *CT_Scene3D) Validate() error {
	return _afgdbe.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0065\u0033\u0044")
}
func (_gfgdce ST_BlackWhiteMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gfgdce.String(), start)
}
func NewCT_Percentage() *CT_Percentage { _eacdb := &CT_Percentage{}; return _eacdb }
func (_fgee *CT_ColorMappingOverrideChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fgee.MasterClrMapping != nil {
		_dced := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006da\u0073\u0074\u0065\u0072\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}}
		e.EncodeElement(_fgee.MasterClrMapping, _dced)
	}
	if _fgee.OverrideClrMapping != nil {
		_ecge := _d.StartElement{Name: _d.Name{Local: "a\u003ao\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0043l\u0072\u004d\u0061\u0070pi\u006e\u0067"}}
		e.EncodeElement(_fgee.OverrideClrMapping, _ecge)
	}
	return nil
}

// Validate validates the CT_Headers and its children
func (_ffcf *CT_Headers) Validate() error {
	return _ffcf.ValidateWithPath("\u0043\u0054\u005f\u0048\u0065\u0061\u0064\u0065\u0072\u0073")
}
func (_cfbbe ST_TextUnderlineType) Validate() error { return _cfbbe.ValidateWithPath("") }

type CT_BiLevelEffect struct{ ThreshAttr ST_PositiveFixedPercentage }

func (_bbcbb ST_SystemColorVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bbcbb.String(), start)
}
func NewCT_ComplementTransform() *CT_ComplementTransform {
	_dddg := &CT_ComplementTransform{}
	return _dddg
}
func (_cdgcd *ST_EffectContainerType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cdgcd = 0
	case "\u0073\u0069\u0062":
		*_cdgcd = 1
	case "\u0074\u0072\u0065\u0065":
		*_cdgcd = 2
	}
	return nil
}

// ValidateWithPath validates the CT_Transform2D and its children, prefixing error messages with path
func (_bfgef *CT_Transform2D) ValidateWithPath(path string) error {
	if _bfgef.Off != nil {
		if _gabcf := _bfgef.Off.ValidateWithPath(path + "\u002f\u004f\u0066\u0066"); _gabcf != nil {
			return _gabcf
		}
	}
	if _bfgef.Ext != nil {
		if _dabff := _bfgef.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _dabff != nil {
			return _dabff
		}
	}
	return nil
}
func (_dgf *CT_AdjustHandleList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dgf.AhXY != nil {
		_fgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u0068\u0058\u0059"}}
		for _, _bab := range _dgf.AhXY {
			e.EncodeElement(_bab, _fgd)
		}
	}
	if _dgf.AhPolar != nil {
		_fdd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0068\u0050\u006f\u006c\u0061r"}}
		for _, _ef := range _dgf.AhPolar {
			e.EncodeElement(_ef, _fdd)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cfegc ST_PositivePercentage) String() string {
	if _cfegc.ST_PositivePercentageDecimal != nil {
		return _dg.Sprintf("\u0025\u0076", *_cfegc.ST_PositivePercentageDecimal)
	}
	if _cfegc.ST_PositivePercentage != nil {
		return _cfegc.ST_PositivePercentage.String()
	}
	return ""
}
func NewCT_Path2D() *CT_Path2D { _eacab := &CT_Path2D{}; return _eacab }

// ValidateWithPath validates the CT_AnimationElementChoice and its children, prefixing error messages with path
func (_afge *CT_AnimationElementChoice) ValidateWithPath(path string) error {
	if _afge.Dgm != nil {
		if _bbg := _afge.Dgm.ValidateWithPath(path + "\u002f\u0044\u0067\u006d"); _bbg != nil {
			return _bbg
		}
	}
	if _afge.Chart != nil {
		if _gfdb := _afge.Chart.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0074"); _gfdb != nil {
			return _gfdb
		}
	}
	return nil
}
func (_deec *CT_OfficeArtExtension) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bceg := range start.Attr {
		if _bceg.Name.Local == "\u0075\u0072\u0069" {
			_abaebd, _cefea := _bceg.Value, error(nil)
			if _cefea != nil {
				return _cefea
			}
			_deec.UriAttr = _abaebd
			continue
		}
	}
_gbadc:
	for {
		_edbdb, _fccccf := d.Token()
		if _fccccf != nil {
			return _fccccf
		}
		switch _aced := _edbdb.(type) {
		case _d.StartElement:
			switch _aced.Name {
			default:
				if _gddee, _cgaaa := _cb.CreateElement(_aced); _cgaaa != nil {
					return _cgaaa
				} else {
					if _cacg := d.DecodeElement(_gddee, &_aced); _cacg != nil {
						return _cacg
					}
					_deec.Any = append(_deec.Any, _gddee)
				}
			}
		case _d.EndElement:
			break _gbadc
		case _d.CharData:
		}
	}
	return nil
}
func (_feaff *EG_FillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _feaff.NoFill != nil {
		_deeega := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_feaff.NoFill, _deeega)
	}
	if _feaff.SolidFill != nil {
		_fbgfa := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_feaff.SolidFill, _fbgfa)
	}
	if _feaff.GradFill != nil {
		_facfb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_feaff.GradFill, _facfb)
	}
	if _feaff.BlipFill != nil {
		_cgadf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_feaff.BlipFill, _cgadf)
	}
	if _feaff.PattFill != nil {
		_eccbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_feaff.PattFill, _eccbg)
	}
	if _feaff.GrpFill != nil {
		_cebcf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_feaff.GrpFill, _cebcf)
	}
	return nil
}
func (_aacdb *CT_GraphicalObjectFrameLocking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	if _aacdb.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_aacdb.NoGrpAttr))})
	}
	if _aacdb.NoDrilldownAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "n\u006f\u0044\u0072\u0069\u006c\u006c\u0064\u006f\u0077\u006e"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_aacdb.NoDrilldownAttr))})
	}
	if _aacdb.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_aacdb.NoSelectAttr))})
	}
	if _aacdb.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_aacdb.NoChangeAspectAttr))})
	}
	if _aacdb.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_aacdb.NoMoveAttr))})
	}
	if _aacdb.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_aacdb.NoResizeAttr))})
	}
	e.EncodeToken(start)
	if _aacdb.ExtLst != nil {
		_cdbfg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aacdb.ExtLst, _cdbfg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_GvmlShape() *CT_GvmlShape {
	_ebbb := &CT_GvmlShape{}
	_ebbb.NvSpPr = NewCT_GvmlShapeNonVisual()
	_ebbb.SpPr = NewCT_ShapeProperties()
	return _ebbb
}

type CT_DashStop struct {
	DAttr  ST_PositivePercentage
	SpAttr ST_PositivePercentage
}

func NewCT_FontScheme() *CT_FontScheme {
	_dfff := &CT_FontScheme{}
	_dfff.MajorFont = NewCT_FontCollection()
	_dfff.MinorFont = NewCT_FontCollection()
	return _dfff
}
func (_bdeeb *CT_TextUnderlineLineFollowText) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_gafa, _fgdee := d.Token()
		if _fgdee != nil {
			return _dg.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u004c\u0069\u006e\u0065\u0046\u006f\u006c\u006c\u006fw\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _fgdee)
		}
		if _ffada, _ecbdf := _gafa.(_d.EndElement); _ecbdf && _ffada.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TextAnchoringType byte
type CT_Connection struct {
	IdAttr  uint32
	IdxAttr uint32
}
type CT_QuickTimeFile struct {
	LinkAttr string
	ExtLst   *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_InverseGammaTransform and its children, prefixing error messages with path
func (_fgdcg *CT_InverseGammaTransform) ValidateWithPath(path string) error { return nil }

type CT_ShapeProperties struct {
	BwModeAttr ST_BlackWhiteMode
	Xfrm       *CT_Transform2D
	CustGeom   *CT_CustomGeometry2D
	PrstGeom   *CT_PresetGeometry2D
	NoFill     *CT_NoFillProperties
	SolidFill  *CT_SolidColorFillProperties
	GradFill   *CT_GradientFillProperties
	BlipFill   *CT_BlipFillProperties
	PattFill   *CT_PatternFillProperties
	GrpFill    *CT_GroupFillProperties
	Ln         *CT_LineProperties
	EffectLst  *CT_EffectList
	EffectDag  *CT_EffectContainer
	Scene3d    *CT_Scene3D
	Sp3d       *CT_Shape3D
	ExtLst     *CT_OfficeArtExtensionList
}

func (_efcfga ST_PositiveFixedPercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _efcfga.ST_PositiveFixedPercentageDecimal != nil {
		e.EncodeToken(_d.CharData(_dg.Sprintf("\u0025\u0064", *_efcfga.ST_PositiveFixedPercentageDecimal)))
	}
	if _efcfga.ST_PositiveFixedPercentage != nil {
		e.Encode(_efcfga.ST_PositiveFixedPercentage)
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_dffec *ST_PresetPatternVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bgbfe, _aeeag := d.Token()
	if _aeeag != nil {
		return _aeeag
	}
	if _bdaca, _ffgac := _bgbfe.(_d.EndElement); _ffgac && _bdaca.Name == start.Name {
		*_dffec = 1
		return nil
	}
	if _eegedc, _daeac := _bgbfe.(_d.CharData); !_daeac {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgbfe)
	} else {
		switch string(_eegedc) {
		case "":
			*_dffec = 0
		case "\u0070\u0063\u0074\u0035":
			*_dffec = 1
		case "\u0070\u0063\u00741\u0030":
			*_dffec = 2
		case "\u0070\u0063\u00742\u0030":
			*_dffec = 3
		case "\u0070\u0063\u00742\u0035":
			*_dffec = 4
		case "\u0070\u0063\u00743\u0030":
			*_dffec = 5
		case "\u0070\u0063\u00744\u0030":
			*_dffec = 6
		case "\u0070\u0063\u00745\u0030":
			*_dffec = 7
		case "\u0070\u0063\u00746\u0030":
			*_dffec = 8
		case "\u0070\u0063\u00747\u0030":
			*_dffec = 9
		case "\u0070\u0063\u00747\u0035":
			*_dffec = 10
		case "\u0070\u0063\u00748\u0030":
			*_dffec = 11
		case "\u0070\u0063\u00749\u0030":
			*_dffec = 12
		case "\u0068\u006f\u0072\u007a":
			*_dffec = 13
		case "\u0076\u0065\u0072\u0074":
			*_dffec = 14
		case "\u006c\u0074\u0048\u006f\u0072\u007a":
			*_dffec = 15
		case "\u006c\u0074\u0056\u0065\u0072\u0074":
			*_dffec = 16
		case "\u0064\u006b\u0048\u006f\u0072\u007a":
			*_dffec = 17
		case "\u0064\u006b\u0056\u0065\u0072\u0074":
			*_dffec = 18
		case "\u006ea\u0072\u0048\u006f\u0072\u007a":
			*_dffec = 19
		case "\u006ea\u0072\u0056\u0065\u0072\u0074":
			*_dffec = 20
		case "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a":
			*_dffec = 21
		case "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074":
			*_dffec = 22
		case "\u0063\u0072\u006fs\u0073":
			*_dffec = 23
		case "\u0064\u006e\u0044\u0069\u0061\u0067":
			*_dffec = 24
		case "\u0075\u0070\u0044\u0069\u0061\u0067":
			*_dffec = 25
		case "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067":
			*_dffec = 26
		case "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067":
			*_dffec = 27
		case "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067":
			*_dffec = 28
		case "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067":
			*_dffec = 29
		case "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067":
			*_dffec = 30
		case "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067":
			*_dffec = 31
		case "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067":
			*_dffec = 32
		case "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067":
			*_dffec = 33
		case "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s":
			*_dffec = 34
		case "\u0073m\u0043\u0068\u0065\u0063\u006b":
			*_dffec = 35
		case "\u006cg\u0043\u0068\u0065\u0063\u006b":
			*_dffec = 36
		case "\u0073\u006d\u0047\u0072\u0069\u0064":
			*_dffec = 37
		case "\u006c\u0067\u0047\u0072\u0069\u0064":
			*_dffec = 38
		case "\u0064o\u0074\u0047\u0072\u0069\u0064":
			*_dffec = 39
		case "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
			*_dffec = 40
		case "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
			*_dffec = 41
		case "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k":
			*_dffec = 42
		case "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k":
			*_dffec = 43
		case "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed":
			*_dffec = 44
		case "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064":
			*_dffec = 45
		case "\u0064o\u0074\u0044\u006d\u006e\u0064":
			*_dffec = 46
		case "\u0070\u006c\u0061i\u0064":
			*_dffec = 47
		case "\u0073\u0070\u0068\u0065\u0072\u0065":
			*_dffec = 48
		case "\u0077\u0065\u0061v\u0065":
			*_dffec = 49
		case "\u0064\u0069\u0076o\u0074":
			*_dffec = 50
		case "\u0073h\u0069\u006e\u0067\u006c\u0065":
			*_dffec = 51
		case "\u0077\u0061\u0076\u0065":
			*_dffec = 52
		case "\u0074r\u0065\u006c\u006c\u0069\u0073":
			*_dffec = 53
		case "\u007a\u0069\u0067\u005a\u0061\u0067":
			*_dffec = 54
		}
	}
	_bgbfe, _aeeag = d.Token()
	if _aeeag != nil {
		return _aeeag
	}
	if _agbfff, _cgafe := _bgbfe.(_d.EndElement); _cgafe && _agbfff.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgbfe)
}
func NewCT_BiLevelEffect() *CT_BiLevelEffect { _fgec := &CT_BiLevelEffect{}; return _fgec }
func (_cde *CT_Blip) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eccg := range start.Attr {
		if _eccg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eccg.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_dga, _gdfa := _eccg.Value, error(nil)
			if _gdfa != nil {
				return _gdfa
			}
			_cde.EmbedAttr = &_dga
			continue
		}
		if _eccg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eccg.Name.Local == "\u006c\u0069\u006e\u006b" {
			_fdf, _abdb := _eccg.Value, error(nil)
			if _abdb != nil {
				return _abdb
			}
			_cde.LinkAttr = &_fdf
			continue
		}
		if _eccg.Name.Local == "\u0063\u0073\u0074\u0061\u0074\u0065" {
			_cde.CstateAttr.UnmarshalXMLAttr(_eccg)
			continue
		}
	}
_fgac:
	for {
		_abbb, _afd := d.Token()
		if _afd != nil {
			return _afd
		}
		switch _ade := _abbb.(type) {
		case _d.StartElement:
			switch _ade.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_begc := NewCT_BlipChoice()
				if _eeac := d.DecodeElement(&_begc.AlphaBiLevel, &_ade); _eeac != nil {
					return _eeac
				}
				_cde.Choice = append(_cde.Choice, _begc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_facb := NewCT_BlipChoice()
				if _cacc := d.DecodeElement(&_facb.AlphaCeiling, &_ade); _cacc != nil {
					return _cacc
				}
				_cde.Choice = append(_cde.Choice, _facb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_cabge := NewCT_BlipChoice()
				if _ffdb := d.DecodeElement(&_cabge.AlphaFloor, &_ade); _ffdb != nil {
					return _ffdb
				}
				_cde.Choice = append(_cde.Choice, _cabge)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_gggc := NewCT_BlipChoice()
				if _bddg := d.DecodeElement(&_gggc.AlphaInv, &_ade); _bddg != nil {
					return _bddg
				}
				_cde.Choice = append(_cde.Choice, _gggc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_cbbe := NewCT_BlipChoice()
				if _bded := d.DecodeElement(&_cbbe.AlphaMod, &_ade); _bded != nil {
					return _bded
				}
				_cde.Choice = append(_cde.Choice, _cbbe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_adef := NewCT_BlipChoice()
				if _geag := d.DecodeElement(&_adef.AlphaModFix, &_ade); _geag != nil {
					return _geag
				}
				_cde.Choice = append(_cde.Choice, _adef)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_fccgf := NewCT_BlipChoice()
				if _bfdc := d.DecodeElement(&_fccgf.AlphaRepl, &_ade); _bfdc != nil {
					return _bfdc
				}
				_cde.Choice = append(_cde.Choice, _fccgf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_ffbg := NewCT_BlipChoice()
				if _baffb := d.DecodeElement(&_ffbg.BiLevel, &_ade); _baffb != nil {
					return _baffb
				}
				_cde.Choice = append(_cde.Choice, _ffbg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_fccf := NewCT_BlipChoice()
				if _cagg := d.DecodeElement(&_fccf.Blur, &_ade); _cagg != nil {
					return _cagg
				}
				_cde.Choice = append(_cde.Choice, _fccf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_gbbf := NewCT_BlipChoice()
				if _gaec := d.DecodeElement(&_gbbf.ClrChange, &_ade); _gaec != nil {
					return _gaec
				}
				_cde.Choice = append(_cde.Choice, _gbbf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_bee := NewCT_BlipChoice()
				if _aafb := d.DecodeElement(&_bee.ClrRepl, &_ade); _aafb != nil {
					return _aafb
				}
				_cde.Choice = append(_cde.Choice, _bee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_cbcc := NewCT_BlipChoice()
				if _aggd := d.DecodeElement(&_cbcc.Duotone, &_ade); _aggd != nil {
					return _aggd
				}
				_cde.Choice = append(_cde.Choice, _cbcc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_dfaf := NewCT_BlipChoice()
				if _bgbc := d.DecodeElement(&_dfaf.FillOverlay, &_ade); _bgbc != nil {
					return _bgbc
				}
				_cde.Choice = append(_cde.Choice, _dfaf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_daef := NewCT_BlipChoice()
				if _afgc := d.DecodeElement(&_daef.Grayscl, &_ade); _afgc != nil {
					return _afgc
				}
				_cde.Choice = append(_cde.Choice, _daef)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_cfed := NewCT_BlipChoice()
				if _edcb := d.DecodeElement(&_cfed.Hsl, &_ade); _edcb != nil {
					return _edcb
				}
				_cde.Choice = append(_cde.Choice, _cfed)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_efb := NewCT_BlipChoice()
				if _gffa := d.DecodeElement(&_efb.Lum, &_ade); _gffa != nil {
					return _gffa
				}
				_cde.Choice = append(_cde.Choice, _efb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_ede := NewCT_BlipChoice()
				if _dfed := d.DecodeElement(&_ede.Tint, &_ade); _dfed != nil {
					return _dfed
				}
				_cde.Choice = append(_cde.Choice, _ede)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cde.ExtLst = NewCT_OfficeArtExtensionList()
				if _bdbd := d.DecodeElement(_cde.ExtLst, &_ade); _bdbd != nil {
					return _bdbd
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0042\u006c\u0069\u0070\u0020\u0025\u0076", _ade.Name)
				if _ggga := d.Skip(); _ggga != nil {
					return _ggga
				}
			}
		case _d.EndElement:
			break _fgac
		case _d.CharData:
		}
	}
	return nil
}
func (_beged *CT_TextBlipBullet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_abgfa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070"}}
	e.EncodeElement(_beged.Blip, _abgfa)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Table and its children
func (_dcgbg *CT_Table) Validate() error {
	return _dcgbg.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065")
}

type ST_TextCapsType byte

// ValidateWithPath validates the AG_Blob and its children, prefixing error messages with path
func (_dac *AG_Blob) ValidateWithPath(path string) error { return nil }
func NewCT_TableCellProperties() *CT_TableCellProperties {
	_badee := &CT_TableCellProperties{}
	return _badee
}
func (_abgd *CT_Path2DMoveTo) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_abgd.Pt = NewCT_AdjPoint2D()
_dagga:
	for {
		_cfgf, _egfec := d.Token()
		if _egfec != nil {
			return _egfec
		}
		switch _geedg := _cfgf.(type) {
		case _d.StartElement:
			switch _geedg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				if _ffabd := d.DecodeElement(_abgd.Pt, &_geedg); _ffabd != nil {
					return _ffabd
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f\u0020\u0025\u0076", _geedg.Name)
				if _cbdfa := d.Skip(); _cbdfa != nil {
					return _cbdfa
				}
			}
		case _d.EndElement:
			break _dagga
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PresetLineDashProperties and its children
func (_dbbbf *CT_PresetLineDashProperties) Validate() error {
	return _dbbbf.ValidateWithPath("C\u0054\u005f\u0050\u0072\u0065\u0073e\u0074\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068P\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_PresetColor and its children, prefixing error messages with path
func (_eegcg *CT_PresetColor) ValidateWithPath(path string) error {
	if _eegcg.ValAttr == ST_PresetColorValUnset {
		return _dg.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _accbc := _eegcg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _accbc != nil {
		return _accbc
	}
	for _beegc, _acaea := range _eegcg.EG_ColorTransform {
		if _dfbce := _acaea.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _beegc)); _dfbce != nil {
			return _dfbce
		}
	}
	return nil
}

type EG_TextGeometry struct {
	CustGeom   *CT_CustomGeometry2D
	PrstTxWarp *CT_PresetTextShape
}

func (_fab *CT_AlphaInverseEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fab.ScrgbClr != nil {
		_fccc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_fab.ScrgbClr, _fccc)
	}
	if _fab.SrgbClr != nil {
		_dadg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_fab.SrgbClr, _dadg)
	}
	if _fab.HslClr != nil {
		_ebe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_fab.HslClr, _ebe)
	}
	if _fab.SysClr != nil {
		_fgf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_fab.SysClr, _fgf)
	}
	if _fab.SchemeClr != nil {
		_cgb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_fab.SchemeClr, _cgb)
	}
	if _fab.PrstClr != nil {
		_edfb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_fab.PrstClr, _edfb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_EffectProperties and its children, prefixing error messages with path
func (_abacf *CT_EffectProperties) ValidateWithPath(path string) error {
	if _abacf.EffectLst != nil {
		if _bdbc := _abacf.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _bdbc != nil {
			return _bdbc
		}
	}
	if _abacf.EffectDag != nil {
		if _dfedcfd := _abacf.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _dfedcfd != nil {
			return _dfedcfd
		}
	}
	return nil
}

const (
	ST_FontCollectionIndexUnset ST_FontCollectionIndex = 0
	ST_FontCollectionIndexMajor ST_FontCollectionIndex = 1
	ST_FontCollectionIndexMinor ST_FontCollectionIndex = 2
	ST_FontCollectionIndexNone  ST_FontCollectionIndex = 3
)

func NewCT_Path2DClose() *CT_Path2DClose { _gcdfg := &CT_Path2DClose{}; return _gcdfg }
func ParseUnionST_PositiveFixedPercentage(s string) (ST_PositiveFixedPercentage, error) {
	_fgfbda := ST_PositiveFixedPercentage{}
	if _fe.ST_PercentagePatternRe.MatchString(s) {
		_fgfbda.ST_PositiveFixedPercentage = &ST_Percentage{}
		_fgfbda.ST_PositiveFixedPercentage.ST_Percentage = &s
	} else {
		_acbcg, _bccaf := _c.ParseInt(s, 10, 64)
		if _bccaf != nil {
			return _fgfbda, _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _bccaf)
		}
		_feagg := int32(_acbcg)
		_fgfbda.ST_PositiveFixedPercentageDecimal = &_feagg
	}
	return _fgfbda, nil
}
func NewCT_PathShadeProperties() *CT_PathShadeProperties {
	_ebbg := &CT_PathShadeProperties{}
	return _ebbg
}
func NewCT_NoFillProperties() *CT_NoFillProperties { _gdfbc := &CT_NoFillProperties{}; return _gdfbc }
func (_dbegd *EG_OfficeArtExtensionList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cafeg:
	for {
		_cdgb, _fabfde := d.Token()
		if _fabfde != nil {
			return _fabfde
		}
		switch _daggge := _cdgb.(type) {
		case _d.StartElement:
			switch _daggge.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_acdga := NewCT_OfficeArtExtension()
				if _aaecd := d.DecodeElement(_acdga, &_daggge); _aaecd != nil {
					return _aaecd
				}
				_dbegd.Ext = append(_dbegd.Ext, _acdga)
			default:
				_cd.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0041\u0072t\u0045x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004ci\u0073t\u0020\u0025v", _daggge.Name)
				if _dbbcc := d.Skip(); _dbbcc != nil {
					return _dbbcc
				}
			}
		case _d.EndElement:
			break _cafeg
		case _d.CharData:
		}
	}
	return nil
}
func (_bbaged ST_LightRigType) String() string {
	switch _bbaged {
	case 0:
		return ""
	case 1:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031"
	case 2:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032"
	case 3:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033"
	case 4:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034"
	case 5:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031"
	case 6:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032"
	case 7:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033"
	case 8:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034"
	case 9:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031"
	case 10:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032"
	case 11:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033"
	case 12:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034"
	case 13:
		return "\u0074h\u0072\u0065\u0065\u0050\u0074"
	case 14:
		return "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"
	case 15:
		return "\u0073\u006f\u0066\u0074"
	case 16:
		return "\u0068\u0061\u0072s\u0068"
	case 17:
		return "\u0066\u006c\u006fo\u0064"
	case 18:
		return "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067"
	case 19:
		return "\u006do\u0072\u006e\u0069\u006e\u0067"
	case 20:
		return "\u0073u\u006e\u0072\u0069\u0073\u0065"
	case 21:
		return "\u0073\u0075\u006e\u0073\u0065\u0074"
	case 22:
		return "\u0063\u0068\u0069\u006c\u006c\u0079"
	case 23:
		return "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067"
	case 24:
		return "\u0066\u006c\u0061\u0074"
	case 25:
		return "\u0074\u0077\u006fP\u0074"
	case 26:
		return "\u0067\u006c\u006f\u0077"
	case 27:
		return "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d"
	}
	return ""
}

// ValidateWithPath validates the CT_DashStop and its children, prefixing error messages with path
func (_aaaa *CT_DashStop) ValidateWithPath(path string) error {
	if _gfea := _aaaa.DAttr.ValidateWithPath(path + "\u002f\u0044\u0041\u0074\u0074\u0072"); _gfea != nil {
		return _gfea
	}
	if _cabcb := _aaaa.SpAttr.ValidateWithPath(path + "\u002fS\u0070\u0041\u0074\u0074\u0072"); _cabcb != nil {
		return _cabcb
	}
	return nil
}

type CT_TableStyleList struct {
	DefAttr  string
	TblStyle []*CT_TableStyle
}

func (_bafgf ST_Coordinate32) String() string {
	if _bafgf.ST_Coordinate32Unqualified != nil {
		return _dg.Sprintf("\u0025\u0076", *_bafgf.ST_Coordinate32Unqualified)
	}
	if _bafgf.ST_UniversalMeasure != nil {
		return _dg.Sprintf("\u0025\u0076", *_bafgf.ST_UniversalMeasure)
	}
	return ""
}
func (_aafc *ThemeOverride) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061:\u0074h\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"
	return _aafc.CT_BaseStylesOverride.MarshalXML(e, start)
}

const (
	ST_LightRigDirectionUnset ST_LightRigDirection = 0
	ST_LightRigDirectionTl    ST_LightRigDirection = 1
	ST_LightRigDirectionT     ST_LightRigDirection = 2
	ST_LightRigDirectionTr    ST_LightRigDirection = 3
	ST_LightRigDirectionL     ST_LightRigDirection = 4
	ST_LightRigDirectionR     ST_LightRigDirection = 5
	ST_LightRigDirectionBl    ST_LightRigDirection = 6
	ST_LightRigDirectionB     ST_LightRigDirection = 7
	ST_LightRigDirectionBr    ST_LightRigDirection = 8
)

func (_cgdfd *CT_Point2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ecgdd := range start.Attr {
		if _ecgdd.Name.Local == "\u0078" {
			_dbgef, _fdaf := ParseUnionST_Coordinate(_ecgdd.Value)
			if _fdaf != nil {
				return _fdaf
			}
			_cgdfd.XAttr = _dbgef
			continue
		}
		if _ecgdd.Name.Local == "\u0079" {
			_ddacd, _edecb := ParseUnionST_Coordinate(_ecgdd.Value)
			if _edecb != nil {
				return _edecb
			}
			_cgdfd.YAttr = _ddacd
			continue
		}
	}
	for {
		_beef, _cgdaf := d.Token()
		if _cgdaf != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044\u003a\u0020%\u0073", _cgdaf)
		}
		if _fbcda, _edacf := _beef.(_d.EndElement); _edacf && _fbcda.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gecgd *ST_PresetLineDashVal) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gecgd = 0
	case "\u0073\u006f\u006ci\u0064":
		*_gecgd = 1
	case "\u0064\u006f\u0074":
		*_gecgd = 2
	case "\u0064\u0061\u0073\u0068":
		*_gecgd = 3
	case "\u006c\u0067\u0044\u0061\u0073\u0068":
		*_gecgd = 4
	case "\u0064a\u0073\u0068\u0044\u006f\u0074":
		*_gecgd = 5
	case "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft":
		*_gecgd = 6
	case "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_gecgd = 7
	case "\u0073y\u0073\u0044\u0061\u0073\u0068":
		*_gecgd = 8
	case "\u0073\u0079\u0073\u0044\u006f\u0074":
		*_gecgd = 9
	case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_gecgd = 10
	case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_gecgd = 11
	}
	return nil
}
func (_fbedb ST_TextFontScalePercentOrPercentString) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fbedb.ST_TextFontScalePercent != nil {
		e.EncodeToken(_d.CharData(_dg.Sprintf("\u0025\u0064", *_fbedb.ST_TextFontScalePercent)))
	}
	if _fbedb.ST_Percentage != nil {
		e.EncodeToken(_d.CharData(*_fbedb.ST_Percentage))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_baaf *CT_BaseStyles) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_afa := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_baaf.ClrScheme, _afa)
	_adaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_baaf.FontScheme, _adaf)
	_bgb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0066\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_baaf.FmtScheme, _bgb)
	if _baaf.ExtLst != nil {
		_ebgf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_baaf.ExtLst, _ebgf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ccdaf *CT_TextBulletSizePercent) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _dg.Sprintf("\u0025\u0076", _ccdaf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextBodyProperties and its children, prefixing error messages with path
func (_cdbfe *CT_TextBodyProperties) ValidateWithPath(path string) error {
	if _adfcfe := _cdbfe.VertOverflowAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _adfcfe != nil {
		return _adfcfe
	}
	if _cgeea := _cdbfe.HorzOverflowAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _cgeea != nil {
		return _cgeea
	}
	if _ggbff := _cdbfe.VertAttr.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0041\u0074\u0074r"); _ggbff != nil {
		return _ggbff
	}
	if _cefbg := _cdbfe.WrapAttr.ValidateWithPath(path + "\u002fW\u0072\u0061\u0070\u0041\u0074\u0074r"); _cefbg != nil {
		return _cefbg
	}
	if _cdbfe.LInsAttr != nil {
		if _fdbc := _cdbfe.LInsAttr.ValidateWithPath(path + "\u002fL\u0049\u006e\u0073\u0041\u0074\u0074r"); _fdbc != nil {
			return _fdbc
		}
	}
	if _cdbfe.TInsAttr != nil {
		if _faagec := _cdbfe.TInsAttr.ValidateWithPath(path + "\u002fT\u0049\u006e\u0073\u0041\u0074\u0074r"); _faagec != nil {
			return _faagec
		}
	}
	if _cdbfe.RInsAttr != nil {
		if _efee := _cdbfe.RInsAttr.ValidateWithPath(path + "\u002fR\u0049\u006e\u0073\u0041\u0074\u0074r"); _efee != nil {
			return _efee
		}
	}
	if _cdbfe.BInsAttr != nil {
		if _ffdged := _cdbfe.BInsAttr.ValidateWithPath(path + "\u002fB\u0049\u006e\u0073\u0041\u0074\u0074r"); _ffdged != nil {
			return _ffdged
		}
	}
	if _cdbfe.NumColAttr != nil {
		if *_cdbfe.NumColAttr < 1 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u004e\u0075\u006d\u0043\u006f\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0031\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_cdbfe.NumColAttr)
		}
		if *_cdbfe.NumColAttr > 16 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u004e\u0075\u006d\u0043\u006f\u006c\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003c\u003d\u0020\u0031\u0036\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_cdbfe.NumColAttr)
		}
	}
	if _cdbfe.SpcColAttr != nil {
		if *_cdbfe.SpcColAttr < 0 {
			return _dg.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0070\u0063\u0043\u006f\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0030\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_cdbfe.SpcColAttr)
		}
	}
	if _caadf := _cdbfe.AnchorAttr.ValidateWithPath(path + "/\u0041\u006e\u0063\u0068\u006f\u0072\u0041\u0074\u0074\u0072"); _caadf != nil {
		return _caadf
	}
	if _cdbfe.PrstTxWarp != nil {
		if _ebcfc := _cdbfe.PrstTxWarp.ValidateWithPath(path + "/\u0050\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"); _ebcfc != nil {
			return _ebcfc
		}
	}
	if _cdbfe.NoAutofit != nil {
		if _cgbef := _cdbfe.NoAutofit.ValidateWithPath(path + "\u002f\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _cgbef != nil {
			return _cgbef
		}
	}
	if _cdbfe.NormAutofit != nil {
		if _geddd := _cdbfe.NormAutofit.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _geddd != nil {
			return _geddd
		}
	}
	if _cdbfe.SpAutoFit != nil {
		if _cgbbc := _cdbfe.SpAutoFit.ValidateWithPath(path + "\u002f\u0053\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"); _cgbbc != nil {
			return _cgbbc
		}
	}
	if _cdbfe.Scene3d != nil {
		if _gfeaf := _cdbfe.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _gfeaf != nil {
			return _gfeaf
		}
	}
	if _cdbfe.Sp3d != nil {
		if _cgbfeg := _cdbfe.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _cgbfeg != nil {
			return _cgbfeg
		}
	}
	if _cdbfe.FlatTx != nil {
		if _bbdea := _cdbfe.FlatTx.ValidateWithPath(path + "\u002fF\u006c\u0061\u0074\u0054\u0078"); _bbdea != nil {
			return _bbdea
		}
	}
	if _cdbfe.ExtLst != nil {
		if _bcacca := _cdbfe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcacca != nil {
			return _bcacca
		}
	}
	return nil
}

// Validate validates the CT_BaseStylesOverride and its children
func (_fcb *CT_BaseStylesOverride) Validate() error {
	return _fcb.ValidateWithPath("C\u0054\u005f\u0042\u0061se\u0053t\u0079\u006c\u0065\u0073\u004fv\u0065\u0072\u0072\u0069\u0064\u0065")
}
func (_cdbda *CT_XYAdjustHandle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cdbda.GdRefXAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0058"}, Value: _dg.Sprintf("\u0025\u0076", *_cdbda.GdRefXAttr)})
	}
	if _cdbda.MinXAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0069\u006e\u0058"}, Value: _dg.Sprintf("\u0025\u0076", *_cdbda.MinXAttr)})
	}
	if _cdbda.MaxXAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0078\u0058"}, Value: _dg.Sprintf("\u0025\u0076", *_cdbda.MaxXAttr)})
	}
	if _cdbda.GdRefYAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0059"}, Value: _dg.Sprintf("\u0025\u0076", *_cdbda.GdRefYAttr)})
	}
	if _cdbda.MinYAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0069\u006e\u0059"}, Value: _dg.Sprintf("\u0025\u0076", *_cdbda.MinYAttr)})
	}
	if _cdbda.MaxYAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0078\u0059"}, Value: _dg.Sprintf("\u0025\u0076", *_cdbda.MaxYAttr)})
	}
	e.EncodeToken(start)
	_fbdag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_cdbda.Pos, _fbdag)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_adea *CT_ConnectorLocking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _egd := range start.Attr {
		if _egd.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_afffg, _dfbc := _c.ParseBool(_egd.Value)
			if _dfbc != nil {
				return _dfbc
			}
			_adea.NoGrpAttr = &_afffg
			continue
		}
		if _egd.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_cgdgb, _dddfb := _c.ParseBool(_egd.Value)
			if _dddfb != nil {
				return _dddfb
			}
			_adea.NoSelectAttr = &_cgdgb
			continue
		}
		if _egd.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_gfdbe, _dgcf := _c.ParseBool(_egd.Value)
			if _dgcf != nil {
				return _dgcf
			}
			_adea.NoRotAttr = &_gfdbe
			continue
		}
		if _egd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_agdf, _aecc := _c.ParseBool(_egd.Value)
			if _aecc != nil {
				return _aecc
			}
			_adea.NoChangeAspectAttr = &_agdf
			continue
		}
		if _egd.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_bgfg, _aecf := _c.ParseBool(_egd.Value)
			if _aecf != nil {
				return _aecf
			}
			_adea.NoMoveAttr = &_bgfg
			continue
		}
		if _egd.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_gbgb, _ebgd := _c.ParseBool(_egd.Value)
			if _ebgd != nil {
				return _ebgd
			}
			_adea.NoResizeAttr = &_gbgb
			continue
		}
		if _egd.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_dgae, _gfef := _c.ParseBool(_egd.Value)
			if _gfef != nil {
				return _gfef
			}
			_adea.NoEditPointsAttr = &_dgae
			continue
		}
		if _egd.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_agdd, _gcgf := _c.ParseBool(_egd.Value)
			if _gcgf != nil {
				return _gcgf
			}
			_adea.NoAdjustHandlesAttr = &_agdd
			continue
		}
		if _egd.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_baae, _eced := _c.ParseBool(_egd.Value)
			if _eced != nil {
				return _eced
			}
			_adea.NoChangeArrowheadsAttr = &_baae
			continue
		}
		if _egd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_fffc, _cggbae := _c.ParseBool(_egd.Value)
			if _cggbae != nil {
				return _cggbae
			}
			_adea.NoChangeShapeTypeAttr = &_fffc
			continue
		}
	}
_bdeae:
	for {
		_gcab, _acdf := d.Token()
		if _acdf != nil {
			return _acdf
		}
		switch _gecc := _gcab.(type) {
		case _d.StartElement:
			switch _gecc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adea.ExtLst = NewCT_OfficeArtExtensionList()
				if _cbdf := d.DecodeElement(_adea.ExtLst, &_gecc); _cbdf != nil {
					return _cbdf
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074or\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _gecc.Name)
				if _cbdbe := d.Skip(); _cbdbe != nil {
					return _cbdbe
				}
			}
		case _d.EndElement:
			break _bdeae
		case _d.CharData:
		}
	}
	return nil
}
func (_edgg *CT_AnimationChartElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_edgg.BldStepAttr = ST_ChartBuildStep(1)
	for _, _gdee := range start.Attr {
		if _gdee.Name.Local == "\u0073e\u0072\u0069\u0065\u0073\u0049\u0064x" {
			_ddb, _acb := _c.ParseInt(_gdee.Value, 10, 32)
			if _acb != nil {
				return _acb
			}
			_geg := int32(_ddb)
			_edgg.SeriesIdxAttr = &_geg
			continue
		}
		if _gdee.Name.Local == "c\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0049\u0064\u0078" {
			_cbcd, _fdb := _c.ParseInt(_gdee.Value, 10, 32)
			if _fdb != nil {
				return _fdb
			}
			_cbbd := int32(_cbcd)
			_edgg.CategoryIdxAttr = &_cbbd
			continue
		}
		if _gdee.Name.Local == "\u0062l\u0064\u0053\u0074\u0065\u0070" {
			_edgg.BldStepAttr.UnmarshalXMLAttr(_gdee)
			continue
		}
	}
	for {
		_dddb, _afef := d.Token()
		if _afef != nil {
			return _dg.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0041nim\u0061ti\u006f\u006e\u0043\u0068\u0061\u0072\u0074El\u0065\u006d\u0065\u006e\u0074\u003a\u0020%\u0073", _afef)
		}
		if _beac, _cgdf := _dddb.(_d.EndElement); _cgdf && _beac.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SRgbColor and its children
func (_bebbd *CT_SRgbColor) Validate() error {
	return _bebbd.ValidateWithPath("\u0043\u0054\u005fS\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}
func (_caac ST_TextBulletSize) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _caac.ST_TextBulletSizePercent != nil {
		e.EncodeToken(_d.CharData(*_caac.ST_TextBulletSizePercent))
	}
	if _caac.ST_TextBulletSizeDecimal != nil {
		e.EncodeToken(_d.CharData(_dg.Sprintf("\u0025\u0064", *_caac.ST_TextBulletSizeDecimal)))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

// Validate validates the CT_GrayscaleEffect and its children
func (_fbab *CT_GrayscaleEffect) Validate() error {
	return _fbab.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0079\u0073\u0063a\u006c\u0065E\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_ColorMapping and its children
func (_bcce *CT_ColorMapping) Validate() error {
	return _bcce.ValidateWithPath("\u0043T\u005fC\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067")
}
func (_bgbfdc ST_LightRigDirection) Validate() error { return _bgbfdc.ValidateWithPath("") }

// Validate validates the CT_InnerShadowEffect and its children
func (_gbeg *CT_InnerShadowEffect) Validate() error {
	return _gbeg.ValidateWithPath("C\u0054_\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074")
}

// Validate validates the EG_FillProperties and its children
func (_fdca *EG_FillProperties) Validate() error {
	return _fdca.ValidateWithPath("\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// Validate validates the VideoFile and its children
func (_dbfdc *VideoFile) Validate() error {
	return _dbfdc.ValidateWithPath("\u0056i\u0064\u0065\u006f\u0046\u0069\u006ce")
}
func (_dabcd *CT_PathShadeProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dabcd.PathAttr != ST_PathShadeTypeUnset {
		_aaebc, _bdceg := _dabcd.PathAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0061\u0074\u0068"})
		if _bdceg != nil {
			return _bdceg
		}
		start.Attr = append(start.Attr, _aaebc)
	}
	e.EncodeToken(start)
	if _dabcd.FillToRect != nil {
		_bgagf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066i\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_dabcd.FillToRect, _bgagf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gffb *CT_AlphaCeilingEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_fce, _eff := d.Token()
		if _eff != nil {
			return _dg.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006ci\u006e\u0067\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _eff)
		}
		if _gacd, _gfdd := _fce.(_d.EndElement); _gfdd && _gacd.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Scene3D() *CT_Scene3D {
	_agbbg := &CT_Scene3D{}
	_agbbg.Camera = NewCT_Camera()
	_agbbg.LightRig = NewCT_LightRig()
	return _agbbg
}

// ValidateWithPath validates the CT_AdjPoint2D and its children, prefixing error messages with path
func (_ddda *CT_AdjPoint2D) ValidateWithPath(path string) error {
	if _edg := _ddda.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _edg != nil {
		return _edg
	}
	if _cgd := _ddda.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _cgd != nil {
		return _cgd
	}
	return nil
}

// ValidateWithPath validates the CT_TextBulletSizeFollowText and its children, prefixing error messages with path
func (_adcca *CT_TextBulletSizeFollowText) ValidateWithPath(path string) error { return nil }
func (_gdadf ST_PathFillMode) Validate() error                                 { return _gdadf.ValidateWithPath("") }

// ST_AnimationChartBuildType is a union type
type ST_AnimationChartBuildType struct {
	ST_AnimationBuildType          ST_AnimationBuildType
	ST_AnimationChartOnlyBuildType ST_AnimationChartOnlyBuildType
}
type CT_TableCol struct {
	WAttr  ST_Coordinate
	ExtLst *CT_OfficeArtExtensionList
}

func (_adcg *CT_NonVisualGroupDrawingShapeProps) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eabe:
	for {
		_dbacf, _gcdf := d.Token()
		if _gcdf != nil {
			return _gcdf
		}
		switch _gdadb := _dbacf.(type) {
		case _d.StartElement:
			switch _gdadb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}:
				_adcg.GrpSpLocks = NewCT_GroupLocking()
				if _fbgg := d.DecodeElement(_adcg.GrpSpLocks, &_gdadb); _fbgg != nil {
					return _fbgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adcg.ExtLst = NewCT_OfficeArtExtensionList()
				if _ecfag := d.DecodeElement(_adcg.ExtLst, &_gdadb); _ecfag != nil {
					return _ecfag
				}
			default:
				_cd.Log.Debug("s\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c\u0047\u0072\u006f\u0075\u0070\u0044\u0072\u0061\u0077\u0069\u006eg\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073\u0020%\u0076", _gdadb.Name)
				if _gbaca := d.Skip(); _gbaca != nil {
					return _gbaca
				}
			}
		case _d.EndElement:
			break _eabe
		case _d.CharData:
		}
	}
	return nil
}
func (_abdc *CT_HslColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0075\u0065"}, Value: _dg.Sprintf("\u0025\u0076", _abdc.HueAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0061\u0074"}, Value: _dg.Sprintf("\u0025\u0076", _abdc.SatAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0075\u006d"}, Value: _dg.Sprintf("\u0025\u0076", _abdc.LumAttr)})
	e.EncodeToken(start)
	if _abdc.EG_ColorTransform != nil {
		for _, _ddga := range _abdc.EG_ColorTransform {
			_ddga.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_abccge ST_TextCapsType) ValidateWithPath(path string) error {
	switch _abccge {
	case 0, 1, 2, 3:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abccge))
	}
	return nil
}
func NewCT_TableGrid() *CT_TableGrid { _gdffa := &CT_TableGrid{}; return _gdffa }
func (_ggab *ST_EffectContainerType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_abba, _adgeb := d.Token()
	if _adgeb != nil {
		return _adgeb
	}
	if _daaada, _dcfcg := _abba.(_d.EndElement); _dcfcg && _daaada.Name == start.Name {
		*_ggab = 1
		return nil
	}
	if _bfbgg, _gcaag := _abba.(_d.CharData); !_gcaag {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abba)
	} else {
		switch string(_bfbgg) {
		case "":
			*_ggab = 0
		case "\u0073\u0069\u0062":
			*_ggab = 1
		case "\u0074\u0072\u0065\u0065":
			*_ggab = 2
		}
	}
	_abba, _adgeb = d.Token()
	if _adgeb != nil {
		return _adgeb
	}
	if _cecaf, _daafd := _abba.(_d.EndElement); _daafd && _cecaf.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abba)
}
func (_dcefd ST_TextAutonumberScheme) String() string {
	switch _dcefd {
	case 0:
		return ""
	case 1:
		return "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 2:
		return "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 3:
		return "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 4:
		return "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 5:
		return "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 6:
		return "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 7:
		return "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 8:
		return "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 9:
		return "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 10:
		return "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e"
	case 11:
		return "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 12:
		return "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 13:
		return "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 14:
		return "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 15:
		return "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 16:
		return "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 17:
		return "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case 18:
		return "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e"
	case 19:
		return "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e"
	case 20:
		return "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case 21:
		return "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case 22:
		return "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064"
	case 23:
		return "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e"
	case 24:
		return "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064"
	case 25:
		return "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e"
	case 26:
		return "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case 27:
		return "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e"
	case 28:
		return "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064"
	case 29:
		return "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073"
	case 30:
		return "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073"
	case 31:
		return "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073"
	case 32:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case 33:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052"
	case 34:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068"
	case 35:
		return "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064"
	case 36:
		return "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052"
	case 37:
		return "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 38:
		return "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case 39:
		return "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064"
	case 40:
		return "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052"
	case 41:
		return "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064"
	}
	return ""
}
func (_bcceab *EG_EffectProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aeabe:
	for {
		_dgdcg, _bfacc := d.Token()
		if _bfacc != nil {
			return _bfacc
		}
		switch _bffbf := _dgdcg.(type) {
		case _d.StartElement:
			switch _bffbf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_bcceab.EffectLst = NewCT_EffectList()
				if _baffa := d.DecodeElement(_bcceab.EffectLst, &_bffbf); _baffa != nil {
					return _baffa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_bcceab.EffectDag = NewCT_EffectContainer()
				if _ffaeg := d.DecodeElement(_bcceab.EffectDag, &_bffbf); _ffaeg != nil {
					return _ffaeg
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u0047\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bffbf.Name)
				if _eegag := d.Skip(); _eegag != nil {
					return _eegag
				}
			}
		case _d.EndElement:
			break _aeabe
		case _d.CharData:
		}
	}
	return nil
}
func (_fcdg *CT_GvmlGroupShape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gcddbg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fcdg.NvGrpSpPr, _gcddbg)
	_agcg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_fcdg.GrpSpPr, _agcg)
	if _fcdg.Choice != nil {
		for _, _fbbb := range _fcdg.Choice {
			_fbbb.MarshalXML(e, _d.StartElement{})
		}
	}
	if _fcdg.ExtLst != nil {
		_defd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcdg.ExtLst, _defd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextNoBullet and its children, prefixing error messages with path
func (_daffa *CT_TextNoBullet) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_NoFillProperties and its children
func (_ggfca *CT_NoFillProperties) Validate() error {
	return _ggfca.ValidateWithPath("\u0043\u0054\u005f\u004eoF\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_AdjPoint2D struct {
	XAttr ST_AdjCoordinate
	YAttr ST_AdjCoordinate
}

func (_cgeca *ST_FontCollectionIndex) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dfbfb, _ggddcc := d.Token()
	if _ggddcc != nil {
		return _ggddcc
	}
	if _ecfbg, _agdgg := _dfbfb.(_d.EndElement); _agdgg && _ecfbg.Name == start.Name {
		*_cgeca = 1
		return nil
	}
	if _efged, _egbac := _dfbfb.(_d.CharData); !_egbac {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfbfb)
	} else {
		switch string(_efged) {
		case "":
			*_cgeca = 0
		case "\u006d\u0061\u006ao\u0072":
			*_cgeca = 1
		case "\u006d\u0069\u006eo\u0072":
			*_cgeca = 2
		case "\u006e\u006f\u006e\u0065":
			*_cgeca = 3
		}
	}
	_dfbfb, _ggddcc = d.Token()
	if _ggddcc != nil {
		return _ggddcc
	}
	if _aggdbb, _cfgdcf := _dfbfb.(_d.EndElement); _cfgdcf && _aggdbb.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfbfb)
}

const (
	ST_PresetShadowValUnset  ST_PresetShadowVal = 0
	ST_PresetShadowValShdw1  ST_PresetShadowVal = 1
	ST_PresetShadowValShdw2  ST_PresetShadowVal = 2
	ST_PresetShadowValShdw3  ST_PresetShadowVal = 3
	ST_PresetShadowValShdw4  ST_PresetShadowVal = 4
	ST_PresetShadowValShdw5  ST_PresetShadowVal = 5
	ST_PresetShadowValShdw6  ST_PresetShadowVal = 6
	ST_PresetShadowValShdw7  ST_PresetShadowVal = 7
	ST_PresetShadowValShdw8  ST_PresetShadowVal = 8
	ST_PresetShadowValShdw9  ST_PresetShadowVal = 9
	ST_PresetShadowValShdw10 ST_PresetShadowVal = 10
	ST_PresetShadowValShdw11 ST_PresetShadowVal = 11
	ST_PresetShadowValShdw12 ST_PresetShadowVal = 12
	ST_PresetShadowValShdw13 ST_PresetShadowVal = 13
	ST_PresetShadowValShdw14 ST_PresetShadowVal = 14
	ST_PresetShadowValShdw15 ST_PresetShadowVal = 15
	ST_PresetShadowValShdw16 ST_PresetShadowVal = 16
	ST_PresetShadowValShdw17 ST_PresetShadowVal = 17
	ST_PresetShadowValShdw18 ST_PresetShadowVal = 18
	ST_PresetShadowValShdw19 ST_PresetShadowVal = 19
	ST_PresetShadowValShdw20 ST_PresetShadowVal = 20
)

func (_fgfdb *EG_Media) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fgfdb.AudioCd != nil {
		_ceeb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0075\u0064\u0069\u006f\u0043d"}}
		e.EncodeElement(_fgfdb.AudioCd, _ceeb)
	}
	if _fgfdb.WavAudioFile != nil {
		_bcgga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0077\u0061\u0076\u0041\u0075\u0064\u0069o\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_fgfdb.WavAudioFile, _bcgga)
	}
	if _fgfdb.AudioFile != nil {
		_degfbf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0061\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_fgfdb.AudioFile, _degfbf)
	}
	if _fgfdb.VideoFile != nil {
		_bdbad := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_fgfdb.VideoFile, _bdbad)
	}
	if _fgfdb.QuickTimeFile != nil {
		_fdbbf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0071u\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_fgfdb.QuickTimeFile, _fdbbf)
	}
	return nil
}
func (_adgce *CT_Path2DList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ccfgc:
	for {
		_cafg, _cbea := d.Token()
		if _cbea != nil {
			return _cbea
		}
		switch _afgab := _cafg.(type) {
		case _d.StartElement:
			switch _afgab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_aaegb := NewCT_Path2D()
				if _eegdf := d.DecodeElement(_aaegb, &_afgab); _eegdf != nil {
					return _eegdf
				}
				_adgce.Path = append(_adgce.Path, _aaegb)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074 \u0025\u0076", _afgab.Name)
				if _febb := d.Skip(); _febb != nil {
					return _febb
				}
			}
		case _d.EndElement:
			break _ccfgc
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_StretchInfoProperties() *CT_StretchInfoProperties {
	_fgafg := &CT_StretchInfoProperties{}
	return _fgafg
}
func (_fdcbg ST_LineEndLength) Validate() error { return _fdcbg.ValidateWithPath("") }

// ValidateWithPath validates the CT_EmptyElement and its children, prefixing error messages with path
func (_geafe *CT_EmptyElement) ValidateWithPath(path string) error { return nil }
func (_efadf *CT_PresetShadowEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_adgbd, _bffec := _efadf.PrstAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _bffec != nil {
		return _bffec
	}
	start.Attr = append(start.Attr, _adgbd)
	if _efadf.DistAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_efadf.DistAttr)})
	}
	if _efadf.DirAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0072"}, Value: _dg.Sprintf("\u0025\u0076", *_efadf.DirAttr)})
	}
	e.EncodeToken(start)
	if _efadf.ScrgbClr != nil {
		_fcbbd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_efadf.ScrgbClr, _fcbbd)
	}
	if _efadf.SrgbClr != nil {
		_cfcc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_efadf.SrgbClr, _cfcc)
	}
	if _efadf.HslClr != nil {
		_eefab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_efadf.HslClr, _eefab)
	}
	if _efadf.SysClr != nil {
		_cdaba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_efadf.SysClr, _cdaba)
	}
	if _efadf.SchemeClr != nil {
		_agfgf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_efadf.SchemeClr, _agfgf)
	}
	if _efadf.PrstClr != nil {
		_adddb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_efadf.PrstClr, _adddb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextBlipBullet() *CT_TextBlipBullet {
	_dedfb := &CT_TextBlipBullet{}
	_dedfb.Blip = NewCT_Blip()
	return _dedfb
}

type ST_PitchFamily byte

func (_gfce *CT_LineProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gfce.WAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0077"}, Value: _dg.Sprintf("\u0025\u0076", *_gfce.WAttr)})
	}
	if _gfce.CapAttr != ST_LineCapUnset {
		_fdbfd, _bfgade := _gfce.CapAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u0061\u0070"})
		if _bfgade != nil {
			return _bfgade
		}
		start.Attr = append(start.Attr, _fdbfd)
	}
	if _gfce.CmpdAttr != ST_CompoundLineUnset {
		_gegce, _aagb := _gfce.CmpdAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u006d\u0070\u0064"})
		if _aagb != nil {
			return _aagb
		}
		start.Attr = append(start.Attr, _gegce)
	}
	if _gfce.AlgnAttr != ST_PenAlignmentUnset {
		_bdde, _ccaa := _gfce.AlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _ccaa != nil {
			return _ccaa
		}
		start.Attr = append(start.Attr, _bdde)
	}
	e.EncodeToken(start)
	if _gfce.NoFill != nil {
		_gegg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gfce.NoFill, _gegg)
	}
	if _gfce.SolidFill != nil {
		_daaaf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gfce.SolidFill, _daaaf)
	}
	if _gfce.GradFill != nil {
		_abacbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gfce.GradFill, _abacbf)
	}
	if _gfce.PattFill != nil {
		_caebg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gfce.PattFill, _caebg)
	}
	if _gfce.PrstDash != nil {
		_bdfd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_gfce.PrstDash, _bdfd)
	}
	if _gfce.CustDash != nil {
		_cdgg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_gfce.CustDash, _cdgg)
	}
	if _gfce.Round != nil {
		_egee := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0072\u006f\u0075\u006e\u0064"}}
		e.EncodeElement(_gfce.Round, _egee)
	}
	if _gfce.Bevel != nil {
		_baed := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_gfce.Bevel, _baed)
	}
	if _gfce.Miter != nil {
		_gdgfc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006d\u0069\u0074\u0065\u0072"}}
		e.EncodeElement(_gfce.Miter, _gdgfc)
	}
	if _gfce.HeadEnd != nil {
		_eeefg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0068\u0065\u0061\u0064\u0045\u006ed"}}
		e.EncodeElement(_gfce.HeadEnd, _eeefg)
	}
	if _gfce.TailEnd != nil {
		_daec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0061\u0069\u006c\u0045\u006ed"}}
		e.EncodeElement(_gfce.TailEnd, _daec)
	}
	if _gfce.ExtLst != nil {
		_eaafg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gfce.ExtLst, _eaafg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_LinearShadeProperties() *CT_LinearShadeProperties {
	_cfggf := &CT_LinearShadeProperties{}
	return _cfggf
}
func NewBlip() *Blip { _cggb := &Blip{}; _cggb.CT_Blip = *NewCT_Blip(); return _cggb }
func (_fabcb ST_TextAnchoringType) String() string {
	switch _fabcb {
	case 0:
		return ""
	case 1:
		return "\u0074"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0062"
	case 4:
		return "\u006a\u0075\u0073\u0074"
	case 5:
		return "\u0064\u0069\u0073\u0074"
	}
	return ""
}
func (_dcfgcg *CT_PatternFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dcfgcg.PrstAttr != ST_PresetPatternValUnset {
		_beddg, _bccf := _dcfgcg.PrstAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073\u0074"})
		if _bccf != nil {
			return _bccf
		}
		start.Attr = append(start.Attr, _beddg)
	}
	e.EncodeToken(start)
	if _dcfgcg.FgClr != nil {
		_ddcddd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u0067\u0043\u006c\u0072"}}
		e.EncodeElement(_dcfgcg.FgClr, _ddcddd)
	}
	if _dcfgcg.BgClr != nil {
		_acge := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0067\u0043\u006c\u0072"}}
		e.EncodeElement(_dcfgcg.BgClr, _acge)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Ratio and its children
func (_afde *CT_Ratio) Validate() error {
	return _afde.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u0074\u0069\u006f")
}
func (_fgbf *CT_BaseStyles) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fgbf.ClrScheme = NewCT_ColorScheme()
	_fgbf.FontScheme = NewCT_FontScheme()
	_fgbf.FmtScheme = NewCT_StyleMatrix()
_fabe:
	for {
		_gebf, _cdbf := d.Token()
		if _cdbf != nil {
			return _cdbf
		}
		switch _baeg := _gebf.(type) {
		case _d.StartElement:
			switch _baeg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				if _gdaaf := d.DecodeElement(_fgbf.ClrScheme, &_baeg); _gdaaf != nil {
					return _gdaaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				if _dcf := d.DecodeElement(_fgbf.FontScheme, &_baeg); _dcf != nil {
					return _dcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				if _dcdb := d.DecodeElement(_fgbf.FmtScheme, &_baeg); _dcdb != nil {
					return _dcdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgbf.ExtLst = NewCT_OfficeArtExtensionList()
				if _gbbe := d.DecodeElement(_fgbf.ExtLst, &_baeg); _gbbe != nil {
					return _gbbe
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042a\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073 \u0025\u0076", _baeg.Name)
				if _afbd := d.Skip(); _afbd != nil {
					return _afbd
				}
			}
		case _d.EndElement:
			break _fabe
		case _d.CharData:
		}
	}
	return nil
}
func (_eadde *ST_Percentage) ValidateWithPath(path string) error {
	_fbceca := []string{}
	if _eadde.ST_PercentageDecimal != nil {
		_fbceca = append(_fbceca, "S\u0054_\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061g\u0065\u0044\u0065\u0063im\u0061\u006c")
	}
	if _eadde.ST_Percentage != nil {
		_fbceca = append(_fbceca, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_fbceca) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _fbceca)
	}
	return nil
}

type CT_AudioCD struct {
	St     *CT_AudioCDTime
	End    *CT_AudioCDTime
	ExtLst *CT_OfficeArtExtensionList
}

func (_dbc *CT_AlphaFloorEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_fbg, _agfd := d.Token()
		if _agfd != nil {
			return _dg.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0041\u006c\u0070\u0068\u0061F\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _agfd)
		}
		if _baa, _gdd := _fbg.(_d.EndElement); _gdd && _baa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_efgdd *CT_SolidColorFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gebef:
	for {
		_aabbcb, _gbfcf := d.Token()
		if _gbfcf != nil {
			return _gbfcf
		}
		switch _cfaggb := _aabbcb.(type) {
		case _d.StartElement:
			switch _cfaggb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_efgdd.ScrgbClr = NewCT_ScRgbColor()
				if _fbbbc := d.DecodeElement(_efgdd.ScrgbClr, &_cfaggb); _fbbbc != nil {
					return _fbbbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_efgdd.SrgbClr = NewCT_SRgbColor()
				if _fgfga := d.DecodeElement(_efgdd.SrgbClr, &_cfaggb); _fgfga != nil {
					return _fgfga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_efgdd.HslClr = NewCT_HslColor()
				if _aadce := d.DecodeElement(_efgdd.HslClr, &_cfaggb); _aadce != nil {
					return _aadce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_efgdd.SysClr = NewCT_SystemColor()
				if _daacgb := d.DecodeElement(_efgdd.SysClr, &_cfaggb); _daacgb != nil {
					return _daacgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_efgdd.SchemeClr = NewCT_SchemeColor()
				if _aadb := d.DecodeElement(_efgdd.SchemeClr, &_cfaggb); _aadb != nil {
					return _aadb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_efgdd.PrstClr = NewCT_PresetColor()
				if _efdad := d.DecodeElement(_efgdd.PrstClr, &_cfaggb); _efdad != nil {
					return _efdad
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0053\u006f\u006c\u0069\u0064\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cfaggb.Name)
				if _gafc := d.Skip(); _gafc != nil {
					return _gafc
				}
			}
		case _d.EndElement:
			break _gebef
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DuotoneEffect and its children, prefixing error messages with path
func (_aaad *CT_DuotoneEffect) ValidateWithPath(path string) error {
	for _bgdgb, _daddd := range _aaad.EG_ColorChoice {
		if _eafg := _daddd.ValidateWithPath(_dg.Sprintf("%\u0073\u002f\u0045\u0047_C\u006fl\u006f\u0072\u0043\u0068\u006fi\u0063\u0065\u005b\u0025\u0064\u005d", path, _bgdgb)); _eafg != nil {
			return _eafg
		}
	}
	return nil
}

type CT_TextBulletColorFollowText struct{}

func (_caffeg ST_CompoundLine) String() string {
	switch _caffeg {
	case 0:
		return ""
	case 1:
		return "\u0073\u006e\u0067"
	case 2:
		return "\u0064\u0062\u006c"
	case 3:
		return "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n"
	case 4:
		return "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k"
	case 5:
		return "\u0074\u0072\u0069"
	}
	return ""
}
func (_eagf *CT_TextAutonumberBullet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eagf.TypeAttr = ST_TextAutonumberScheme(1)
	for _, _cfbdd := range start.Attr {
		if _cfbdd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_eagf.TypeAttr.UnmarshalXMLAttr(_cfbdd)
			continue
		}
		if _cfbdd.Name.Local == "\u0073t\u0061\u0072\u0074\u0041\u0074" {
			_gedbf, _ffgbd := _c.ParseInt(_cfbdd.Value, 10, 32)
			if _ffgbd != nil {
				return _ffgbd
			}
			_gddac := int32(_gedbf)
			_eagf.StartAtAttr = &_gddac
			continue
		}
	}
	for {
		_baea, _dbecd := d.Token()
		if _dbecd != nil {
			return _dg.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0065\u0078t\u0041\u0075\u0074\u006f\u006e\u0075\u006db\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074\u003a\u0020%\u0073", _dbecd)
		}
		if _bgacc, _cbede := _baea.(_d.EndElement); _cbede && _bgacc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TextCharBullet struct{ CharAttr string }
type CT_BaseStylesOverride struct {
	ClrScheme  *CT_ColorScheme
	FontScheme *CT_FontScheme
	FmtScheme  *CT_StyleMatrix
}

// ValidateWithPath validates the CT_FillEffect and its children, prefixing error messages with path
func (_fgfcg *CT_FillEffect) ValidateWithPath(path string) error {
	if _fgfcg.NoFill != nil {
		if _ebdc := _fgfcg.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ebdc != nil {
			return _ebdc
		}
	}
	if _fgfcg.SolidFill != nil {
		if _afag := _fgfcg.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _afag != nil {
			return _afag
		}
	}
	if _fgfcg.GradFill != nil {
		if _affe := _fgfcg.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _affe != nil {
			return _affe
		}
	}
	if _fgfcg.BlipFill != nil {
		if _cgbc := _fgfcg.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _cgbc != nil {
			return _cgbc
		}
	}
	if _fgfcg.PattFill != nil {
		if _deeba := _fgfcg.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _deeba != nil {
			return _deeba
		}
	}
	if _fgfcg.GrpFill != nil {
		if _ffffc := _fgfcg.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _ffffc != nil {
			return _ffffc
		}
	}
	return nil
}

type CT_TextSpacingPoint struct{ ValAttr int32 }

func NewEG_ColorTransform() *EG_ColorTransform { _fbdfd := &EG_ColorTransform{}; return _fbdfd }
func (_bdfddg ST_TextWrappingType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cfacb := _d.Attr{}
	_cfacb.Name = name
	switch _bdfddg {
	case ST_TextWrappingTypeUnset:
		_cfacb.Value = ""
	case ST_TextWrappingTypeNone:
		_cfacb.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextWrappingTypeSquare:
		_cfacb.Value = "\u0073\u0071\u0075\u0061\u0072\u0065"
	}
	return _cfacb, nil
}
func (_aaebe *EG_TextUnderlineLine) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_faeff:
	for {
		_ebfae, _cdafab := d.Token()
		if _cdafab != nil {
			return _cdafab
		}
		switch _cgbeb := _ebfae.(type) {
		case _d.StartElement:
			switch _cgbeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}:
				_aaebe.ULnTx = NewCT_TextUnderlineLineFollowText()
				if _fgbba := d.DecodeElement(_aaebe.ULnTx, &_cgbeb); _fgbba != nil {
					return _fgbba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}:
				_aaebe.ULn = NewCT_LineProperties()
				if _eccfb := d.DecodeElement(_aaebe.ULn, &_cgbeb); _eccfb != nil {
					return _eccfb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u004c\u0069\u006e\u0065\u0020\u0025\u0076", _cgbeb.Name)
				if _afccf := d.Skip(); _afccf != nil {
					return _afccf
				}
			}
		case _d.EndElement:
			break _faeff
		case _d.CharData:
		}
	}
	return nil
}
func (_bfcdeg *CT_Path2DQuadBezierTo) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ccbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0074"}}
	for _, _adafe := range _bfcdeg.Pt {
		e.EncodeElement(_adafe, _ccbf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ffaea *ST_TextTabAlignType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ebeag, _cbgdc := d.Token()
	if _cbgdc != nil {
		return _cbgdc
	}
	if _ccffg, _agedf := _ebeag.(_d.EndElement); _agedf && _ccffg.Name == start.Name {
		*_ffaea = 1
		return nil
	}
	if _bedae, _dabgb := _ebeag.(_d.CharData); !_dabgb {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebeag)
	} else {
		switch string(_bedae) {
		case "":
			*_ffaea = 0
		case "\u006c":
			*_ffaea = 1
		case "\u0063\u0074\u0072":
			*_ffaea = 2
		case "\u0072":
			*_ffaea = 3
		case "\u0064\u0065\u0063":
			*_ffaea = 4
		}
	}
	_ebeag, _cbgdc = d.Token()
	if _cbgdc != nil {
		return _cbgdc
	}
	if _ggeeb, _agged := _ebeag.(_d.EndElement); _agged && _ggeeb.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebeag)
}

type EG_EffectProperties struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_aecgd ST_PathShadeType) String() string {
	switch _aecgd {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0061p\u0065"
	case 2:
		return "\u0063\u0069\u0072\u0063\u006c\u0065"
	case 3:
		return "\u0072\u0065\u0063\u0074"
	}
	return ""
}

type ST_TextTabAlignType byte

func (_dfgdg *Theme) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dfgdg.CT_OfficeStyleSheet = *NewCT_OfficeStyleSheet()
	for _, _abfbg := range start.Attr {
		if _abfbg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dcdea, _ggaaa := _abfbg.Value, error(nil)
			if _ggaaa != nil {
				return _ggaaa
			}
			_dfgdg.NameAttr = &_dcdea
			continue
		}
	}
_facfda:
	for {
		_egcag, _bbabf := d.Token()
		if _bbabf != nil {
			return _bbabf
		}
		switch _fgeead := _egcag.(type) {
		case _d.StartElement:
			switch _fgeead.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _ebfea := d.DecodeElement(_dfgdg.ThemeElements, &_fgeead); _ebfea != nil {
					return _ebfea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}:
				_dfgdg.ObjectDefaults = NewCT_ObjectStyleDefaults()
				if _eddbf := d.DecodeElement(_dfgdg.ObjectDefaults, &_fgeead); _eddbf != nil {
					return _eddbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}:
				_dfgdg.ExtraClrSchemeLst = NewCT_ColorSchemeList()
				if _ccgdf := d.DecodeElement(_dfgdg.ExtraClrSchemeLst, &_fgeead); _ccgdf != nil {
					return _ccgdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}:
				_dfgdg.CustClrLst = NewCT_CustomColorList()
				if _fcagb := d.DecodeElement(_dfgdg.CustClrLst, &_fgeead); _fcagb != nil {
					return _fcagb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfgdg.ExtLst = NewCT_OfficeArtExtensionList()
				if _cbfbae := d.DecodeElement(_dfgdg.ExtLst, &_fgeead); _cbfbae != nil {
					return _cbfbae
				}
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0068\u0065m\u0065 \u0025\u0076", _fgeead.Name)
				if _cabee := d.Skip(); _cabee != nil {
					return _cabee
				}
			}
		case _d.EndElement:
			break _facfda
		case _d.CharData:
		}
	}
	return nil
}
func (_cgcca *CT_TextShapeAutofit) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_cggfd, _aafbcb := d.Token()
		if _aafbcb != nil {
			return _dg.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0054\u0065\u0078\u0074\u0053h\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074\u003a\u0020\u0025\u0073", _aafbcb)
		}
		if _bbdee, _fdgfg := _cggfd.(_d.EndElement); _fdgfg && _bbdee.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_TextSpacingPercent() *CT_TextSpacingPercent {
	_dccae := &CT_TextSpacingPercent{}
	return _dccae
}

type CT_GvmlGraphicalObjectFrame struct {
	NvGraphicFramePr *CT_GvmlGraphicFrameNonVisual
	Graphic          *Graphic
	Xfrm             *CT_Transform2D
	ExtLst           *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_WholeE2oFormatting and its children, prefixing error messages with path
func (_ceeec *CT_WholeE2oFormatting) ValidateWithPath(path string) error {
	if _ceeec.Ln != nil {
		if _edeef := _ceeec.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _edeef != nil {
			return _edeef
		}
	}
	if _ceeec.EffectLst != nil {
		if _accaf := _ceeec.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _accaf != nil {
			return _accaf
		}
	}
	if _ceeec.EffectDag != nil {
		if _cbbac := _ceeec.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _cbbac != nil {
			return _cbbac
		}
	}
	return nil
}

type CT_SolidColorFillProperties struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_gebdc ST_BlendMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gfbgd := _d.Attr{}
	_gfbgd.Name = name
	switch _gebdc {
	case ST_BlendModeUnset:
		_gfbgd.Value = ""
	case ST_BlendModeOver:
		_gfbgd.Value = "\u006f\u0076\u0065\u0072"
	case ST_BlendModeMult:
		_gfbgd.Value = "\u006d\u0075\u006c\u0074"
	case ST_BlendModeScreen:
		_gfbgd.Value = "\u0073\u0063\u0072\u0065\u0065\u006e"
	case ST_BlendModeDarken:
		_gfbgd.Value = "\u0064\u0061\u0072\u006b\u0065\u006e"
	case ST_BlendModeLighten:
		_gfbgd.Value = "\u006ci\u0067\u0068\u0074\u0065\u006e"
	}
	return _gfbgd, nil
}
func (_agef *CT_LineStyleList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cfcgf:
	for {
		_cgdb, _eeacf := d.Token()
		if _eeacf != nil {
			return _eeacf
		}
		switch _fdgfb := _cgdb.(type) {
		case _d.StartElement:
			switch _fdgfb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_ffcfe := NewCT_LineProperties()
				if _ddac := d.DecodeElement(_ffcfe, &_fdgfb); _ddac != nil {
					return _ddac
				}
				_agef.Ln = append(_agef.Ln, _ffcfe)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _fdgfb.Name)
				if _egdgd := d.Skip(); _egdgd != nil {
					return _egdgd
				}
			}
		case _d.EndElement:
			break _cfcgf
		case _d.CharData:
		}
	}
	return nil
}
func (_ecbb *CT_TableCellBorderStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ecbb.Left != nil {
		_bgcfd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0065\u0066\u0074"}}
		e.EncodeElement(_ecbb.Left, _bgcfd)
	}
	if _ecbb.Right != nil {
		_bggfd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0072\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_ecbb.Right, _bggfd)
	}
	if _ecbb.Top != nil {
		_faage := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074o\u0070"}}
		e.EncodeElement(_ecbb.Top, _faage)
	}
	if _ecbb.Bottom != nil {
		_dabde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006f\u0074\u0074\u006f\u006d"}}
		e.EncodeElement(_ecbb.Bottom, _dabde)
	}
	if _ecbb.InsideH != nil {
		_cfcbg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0069\u006e\u0073\u0069\u0064\u0065H"}}
		e.EncodeElement(_ecbb.InsideH, _cfcbg)
	}
	if _ecbb.InsideV != nil {
		_fgcd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0069\u006e\u0073\u0069\u0064\u0065V"}}
		e.EncodeElement(_ecbb.InsideV, _fgcd)
	}
	if _ecbb.Tl2br != nil {
		_bbaba := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u006c\u0032\u0062\u0072"}}
		e.EncodeElement(_ecbb.Tl2br, _bbaba)
	}
	if _ecbb.Tr2bl != nil {
		_fgdbe := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0072\u0032\u0062\u006c"}}
		e.EncodeElement(_ecbb.Tr2bl, _fgdbe)
	}
	if _ecbb.ExtLst != nil {
		_dccdb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecbb.ExtLst, _dccdb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bdedd *EG_Text3D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bedcg:
	for {
		_ffafe, _cadfe := d.Token()
		if _cadfe != nil {
			return _cadfe
		}
		switch _dccce := _ffafe.(type) {
		case _d.StartElement:
			switch _dccce.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_bdedd.Sp3d = NewCT_Shape3D()
				if _cfdcd := d.DecodeElement(_bdedd.Sp3d, &_dccce); _cfdcd != nil {
					return _cfdcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}:
				_bdedd.FlatTx = NewCT_FlatText()
				if _acgec := d.DecodeElement(_bdedd.FlatTx, &_dccce); _acgec != nil {
					return _acgec
				}
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0054\u0065\u0078t\u0033\u0044 \u0025\u0076", _dccce.Name)
				if _abfaf := d.Skip(); _abfaf != nil {
					return _abfaf
				}
			}
		case _d.EndElement:
			break _bedcg
		case _d.CharData:
		}
	}
	return nil
}
func _dadfe(_ddfb bool) uint8 {
	if _ddfb {
		return 1
	}
	return 0
}

type CT_Angle struct{ ValAttr int32 }

func (_gebdda ST_PenAlignment) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gebdda.String(), start)
}
func (_ceeaac *CT_Transform2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ceeaac.RotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_ceeaac.RotAttr)})
	}
	if _ceeaac.FlipHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006c\u0069p\u0048"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ceeaac.FlipHAttr))})
	}
	if _ceeaac.FlipVAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006c\u0069p\u0056"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_ceeaac.FlipVAttr))})
	}
	e.EncodeToken(start)
	if _ceeaac.Off != nil {
		_fbfed := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006ff\u0066"}}
		e.EncodeElement(_ceeaac.Off, _fbfed)
	}
	if _ceeaac.Ext != nil {
		_ffaac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		e.EncodeElement(_ceeaac.Ext, _ffaac)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fgcf *CT_ColorSchemeList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fgcf.ExtraClrScheme != nil {
		_dcgeg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003ae\u0078\u0074\u0072a\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
		for _, _gage := range _fgcf.ExtraClrScheme {
			e.EncodeElement(_gage, _dcgeg)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_Effect struct {
	Cont         *CT_EffectContainer
	Effect       *CT_EffectReference
	AlphaBiLevel *CT_AlphaBiLevelEffect
	AlphaCeiling *CT_AlphaCeilingEffect
	AlphaFloor   *CT_AlphaFloorEffect
	AlphaInv     *CT_AlphaInverseEffect
	AlphaMod     *CT_AlphaModulateEffect
	AlphaModFix  *CT_AlphaModulateFixedEffect
	AlphaOutset  *CT_AlphaOutsetEffect
	AlphaRepl    *CT_AlphaReplaceEffect
	BiLevel      *CT_BiLevelEffect
	Blend        *CT_BlendEffect
	Blur         *CT_BlurEffect
	ClrChange    *CT_ColorChangeEffect
	ClrRepl      *CT_ColorReplaceEffect
	Duotone      *CT_DuotoneEffect
	Fill         *CT_FillEffect
	FillOverlay  *CT_FillOverlayEffect
	Glow         *CT_GlowEffect
	Grayscl      *CT_GrayscaleEffect
	Hsl          *CT_HSLEffect
	InnerShdw    *CT_InnerShadowEffect
	Lum          *CT_LuminanceEffect
	OuterShdw    *CT_OuterShadowEffect
	PrstShdw     *CT_PresetShadowEffect
	Reflection   *CT_ReflectionEffect
	RelOff       *CT_RelativeOffsetEffect
	SoftEdge     *CT_SoftEdgesEffect
	Tint         *CT_TintEffect
	Xfrm         *CT_TransformEffect
}

func (_cdgaff ST_TextVerticalType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cdgaff.String(), start)
}

// ValidateWithPath validates the TblStyleLst and its children, prefixing error messages with path
func (_aceaa *TblStyleLst) ValidateWithPath(path string) error {
	if _cdabg := _aceaa.CT_TableStyleList.ValidateWithPath(path); _cdabg != nil {
		return _cdabg
	}
	return nil
}
func (_bbffe *CT_FillStyleList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	for _, _aaca := range _bbffe.EG_FillProperties {
		_aaca.MarshalXML(e, _d.StartElement{})
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_WholeE2oFormatting() *CT_WholeE2oFormatting {
	_edgcea := &CT_WholeE2oFormatting{}
	return _edgcea
}

type CT_ContentPartLocking struct {
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}
type CT_TransformEffect struct {
	SxAttr *ST_Percentage
	SyAttr *ST_Percentage
	KxAttr *int32
	KyAttr *int32
	TxAttr *ST_Coordinate
	TyAttr *ST_Coordinate
}
type CT_ClipboardStyleSheet struct {
	ThemeElements *CT_BaseStyles
	ClrMap        *CT_ColorMapping
}

// ValidateWithPath validates the CT_TextUnderlineFillGroupWrapper and its children, prefixing error messages with path
func (_cedga *CT_TextUnderlineFillGroupWrapper) ValidateWithPath(path string) error {
	if _cedga.NoFill != nil {
		if _fafea := _cedga.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _fafea != nil {
			return _fafea
		}
	}
	if _cedga.SolidFill != nil {
		if _ggddg := _cedga.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _ggddg != nil {
			return _ggddg
		}
	}
	if _cedga.GradFill != nil {
		if _eccfg := _cedga.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _eccfg != nil {
			return _eccfg
		}
	}
	if _cedga.BlipFill != nil {
		if _egfda := _cedga.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _egfda != nil {
			return _egfda
		}
	}
	if _cedga.PattFill != nil {
		if _bbcfd := _cedga.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bbcfd != nil {
			return _bbcfd
		}
	}
	if _cedga.GrpFill != nil {
		if _aeecc := _cedga.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _aeecc != nil {
			return _aeecc
		}
	}
	return nil
}
func (_dcfaed ST_TextVerticalType) ValidateWithPath(path string) error {
	switch _dcfaed {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcfaed))
	}
	return nil
}
func (_cagee *EG_TextRun) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dcgdb:
	for {
		_cfebb, _dbddf := d.Token()
		if _dbddf != nil {
			return _dbddf
		}
		switch _degde := _cfebb.(type) {
		case _d.StartElement:
			switch _degde.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_cagee.R = NewCT_RegularTextRun()
				if _bddcb := d.DecodeElement(_cagee.R, &_degde); _bddcb != nil {
					return _bddcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}:
				_cagee.Br = NewCT_TextLineBreak()
				if _ddgcbc := d.DecodeElement(_cagee.Br, &_degde); _ddgcbc != nil {
					return _ddgcbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}:
				_cagee.Fld = NewCT_TextField()
				if _egcebg := d.DecodeElement(_cagee.Fld, &_degde); _egcebg != nil {
					return _egcebg
				}
			default:
				_cd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005fT\u0065\u0078\u0074\u0052\u0075\u006e\u0020\u0025\u0076", _degde.Name)
				if _cbgafd := d.Skip(); _cbgafd != nil {
					return _cbgafd
				}
			}
		case _d.EndElement:
			break _dcgdb
		case _d.CharData:
		}
	}
	return nil
}
func (_gagaba *ST_CompoundLine) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gagaba = 0
	case "\u0073\u006e\u0067":
		*_gagaba = 1
	case "\u0064\u0062\u006c":
		*_gagaba = 2
	case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":
		*_gagaba = 3
	case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":
		*_gagaba = 4
	case "\u0074\u0072\u0069":
		*_gagaba = 5
	}
	return nil
}

// Validate validates the CT_PositivePercentage and its children
func (_bgdc *CT_PositivePercentage) Validate() error {
	return _bgdc.ValidateWithPath("C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065")
}
func (_egab *CT_ComplementTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_feba *CT_AnimationGraphicalObjectBuildProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gda:
	for {
		_cgaf, _cdg := d.Token()
		if _cdg != nil {
			return _cdg
		}
		switch _gega := _cgaf.(type) {
		case _d.StartElement:
			switch _gega.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}:
				_feba.BldDgm = NewCT_AnimationDgmBuildProperties()
				if _dgfb := d.DecodeElement(_feba.BldDgm, &_gega); _dgfb != nil {
					return _dgfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}:
				_feba.BldChart = NewCT_AnimationChartBuildProperties()
				if _dfc := d.DecodeElement(_feba.BldChart, &_gega); _dfc != nil {
					return _dfc
				}
			default:
				_cd.Log.Debug("sk\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064P\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gega.Name)
				if _ffb := d.Skip(); _ffb != nil {
					return _ffb
				}
			}
		case _d.EndElement:
			break _gda
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TextBulletSizeFollowText() *CT_TextBulletSizeFollowText {
	_fefaaa := &CT_TextBulletSizeFollowText{}
	return _fefaaa
}

const (
	ST_TextAlignTypeUnset    ST_TextAlignType = 0
	ST_TextAlignTypeL        ST_TextAlignType = 1
	ST_TextAlignTypeCtr      ST_TextAlignType = 2
	ST_TextAlignTypeR        ST_TextAlignType = 3
	ST_TextAlignTypeJust     ST_TextAlignType = 4
	ST_TextAlignTypeJustLow  ST_TextAlignType = 5
	ST_TextAlignTypeDist     ST_TextAlignType = 6
	ST_TextAlignTypeThaiDist ST_TextAlignType = 7
)

// ValidateWithPath validates the EG_Media and its children, prefixing error messages with path
func (_bbabe *EG_Media) ValidateWithPath(path string) error {
	if _bbabe.AudioCd != nil {
		if _ddeeaf := _bbabe.AudioCd.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0043\u0064"); _ddeeaf != nil {
			return _ddeeaf
		}
	}
	if _bbabe.WavAudioFile != nil {
		if _dgcbf := _bbabe.WavAudioFile.ValidateWithPath(path + "\u002f\u0057\u0061\u0076\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _dgcbf != nil {
			return _dgcbf
		}
	}
	if _bbabe.AudioFile != nil {
		if _fbdfdd := _bbabe.AudioFile.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _fbdfdd != nil {
			return _fbdfdd
		}
	}
	if _bbabe.VideoFile != nil {
		if _dgfgd := _bbabe.VideoFile.ValidateWithPath(path + "\u002f\u0056\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"); _dgfgd != nil {
			return _dgfgd
		}
	}
	if _bbabe.QuickTimeFile != nil {
		if _edfceb := _bbabe.QuickTimeFile.ValidateWithPath(path + "\u002f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006de\u0046\u0069\u006c\u0065"); _edfceb != nil {
			return _edfceb
		}
	}
	return nil
}
func (_cgdaff ST_BlendMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cgdaff.String(), start)
}
func (_dabca *CT_Path2DClose) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_BlendEffect() *CT_BlendEffect {
	_aegc := &CT_BlendEffect{}
	_aegc.BlendAttr = ST_BlendMode(1)
	_aegc.Cont = NewCT_EffectContainer()
	return _aegc
}
func NewCT_GroupFillProperties() *CT_GroupFillProperties {
	_gbgg := &CT_GroupFillProperties{}
	return _gbgg
}
func (_cbfbf ST_TextAlignType) String() string {
	switch _cbfbf {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0072"
	case 4:
		return "\u006a\u0075\u0073\u0074"
	case 5:
		return "\u006au\u0073\u0074\u004c\u006f\u0077"
	case 6:
		return "\u0064\u0069\u0073\u0074"
	case 7:
		return "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074"
	}
	return ""
}

// ValidateWithPath validates the CT_EffectList and its children, prefixing error messages with path
func (_gffdg *CT_EffectList) ValidateWithPath(path string) error {
	if _gffdg.Blur != nil {
		if _cdcg := _gffdg.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _cdcg != nil {
			return _cdcg
		}
	}
	if _gffdg.FillOverlay != nil {
		if _acdb := _gffdg.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _acdb != nil {
			return _acdb
		}
	}
	if _gffdg.Glow != nil {
		if _dece := _gffdg.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _dece != nil {
			return _dece
		}
	}
	if _gffdg.InnerShdw != nil {
		if _cddb := _gffdg.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _cddb != nil {
			return _cddb
		}
	}
	if _gffdg.OuterShdw != nil {
		if _cge := _gffdg.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _cge != nil {
			return _cge
		}
	}
	if _gffdg.PrstShdw != nil {
		if _ceeg := _gffdg.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _ceeg != nil {
			return _ceeg
		}
	}
	if _gffdg.Reflection != nil {
		if _ddgdf := _gffdg.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _ddgdf != nil {
			return _ddgdf
		}
	}
	if _gffdg.SoftEdge != nil {
		if _caga := _gffdg.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _caga != nil {
			return _caga
		}
	}
	return nil
}

type CT_GlowEffect struct {
	RadAttr   *int64
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func NewCT_AlphaModulateEffect() *CT_AlphaModulateEffect {
	_fabg := &CT_AlphaModulateEffect{}
	_fabg.Cont = NewCT_EffectContainer()
	return _fabg
}
func (_begdf *ST_OnOffStyleType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_begdf = 0
	case "\u006f\u006e":
		*_begdf = 1
	case "\u006f\u0066\u0066":
		*_begdf = 2
	case "\u0064\u0065\u0066":
		*_begdf = 3
	}
	return nil
}
func (_fafdb ST_FontCollectionIndex) Validate() error { return _fafdb.ValidateWithPath("") }
func (_fee *CT_Color) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_effde:
	for {
		_dgef, _bgg := d.Token()
		if _bgg != nil {
			return _bgg
		}
		switch _feff := _dgef.(type) {
		case _d.StartElement:
			switch _feff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_fee.ScrgbClr = NewCT_ScRgbColor()
				if _bcgd := d.DecodeElement(_fee.ScrgbClr, &_feff); _bcgd != nil {
					return _bcgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_fee.SrgbClr = NewCT_SRgbColor()
				if _fefe := d.DecodeElement(_fee.SrgbClr, &_feff); _fefe != nil {
					return _fefe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_fee.HslClr = NewCT_HslColor()
				if _fgag := d.DecodeElement(_fee.HslClr, &_feff); _fgag != nil {
					return _fgag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_fee.SysClr = NewCT_SystemColor()
				if _bcfe := d.DecodeElement(_fee.SysClr, &_feff); _bcfe != nil {
					return _bcfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_fee.SchemeClr = NewCT_SchemeColor()
				if _gadc := d.DecodeElement(_fee.SchemeClr, &_feff); _gadc != nil {
					return _gadc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_fee.PrstClr = NewCT_PresetColor()
				if _afdd := d.DecodeElement(_fee.PrstClr, &_feff); _afdd != nil {
					return _afdd
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _feff.Name)
				if _gdgf := d.Skip(); _gdgf != nil {
					return _gdgf
				}
			}
		case _d.EndElement:
			break _effde
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_BlurEffect() *CT_BlurEffect { _abf := &CT_BlurEffect{}; return _abf }

// Validate validates the CT_AlphaInverseEffect and its children
func (_gcg *CT_AlphaInverseEffect) Validate() error {
	return _gcg.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061I\u006e\u0076\u0065\u0072\u0073e\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_fgacb *CT_GraphicalObjectData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _afedc := range start.Attr {
		if _afedc.Name.Local == "\u0075\u0072\u0069" {
			_cgbge, _gdfe := _afedc.Value, error(nil)
			if _gdfe != nil {
				return _gdfe
			}
			_fgacb.UriAttr = _cgbge
			continue
		}
	}
_dcbcgf:
	for {
		_ffdaf, _bfcde := d.Token()
		if _bfcde != nil {
			return _bfcde
		}
		switch _geegg := _ffdaf.(type) {
		case _d.StartElement:
			switch _geegg.Name {
			default:
				if _cggac, _gfgbd := _cb.CreateElement(_geegg); _gfgbd != nil {
					return _gfgbd
				} else {
					if _aeag := d.DecodeElement(_cggac, &_geegg); _aeag != nil {
						return _aeag
					}
					_fgacb.Any = append(_fgacb.Any, _cggac)
				}
			}
		case _d.EndElement:
			break _dcbcgf
		case _d.CharData:
		}
	}
	return nil
}
func (_eaffcc ST_AdjAngle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _eaffcc.ST_Angle != nil {
		e.EncodeToken(_d.CharData(_dg.Sprintf("\u0025\u0064", *_eaffcc.ST_Angle)))
	}
	if _eaffcc.ST_GeomGuideName != nil {
		e.EncodeToken(_d.CharData(*_eaffcc.ST_GeomGuideName))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

type CT_DashStopList struct{ Ds []*CT_DashStop }

// Validate validates the EG_TextBulletTypeface and its children
func (_fddce *EG_TextBulletTypeface) Validate() error {
	return _fddce.ValidateWithPath("E\u0047\u005f\u0054\u0065xt\u0042u\u006c\u006c\u0065\u0074\u0054y\u0070\u0065\u0066\u0061\u0063\u0065")
}
func (_aeedb ST_TileFlipMode) String() string {
	switch _aeedb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0078"
	case 3:
		return "\u0079"
	case 4:
		return "\u0078\u0079"
	}
	return ""
}
func (_fgcfe *CT_TextNormalAutofit) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fgcfe.FontScaleAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066o\u006e\u0074\u0053\u0063\u0061\u006ce"}, Value: _dg.Sprintf("\u0025\u0076", *_fgcfe.FontScaleAttr)})
	}
	if _fgcfe.LnSpcReductionAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u006e\u0053\u0070\u0063\u0052\u0065\u0064\u0075c\u0074\u0069\u006f\u006e"}, Value: _dg.Sprintf("\u0025\u0076", *_fgcfe.LnSpcReductionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bbabaa ST_SchemeColorVal) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cfdg := _d.Attr{}
	_cfdg.Name = name
	switch _bbabaa {
	case ST_SchemeColorValUnset:
		_cfdg.Value = ""
	case ST_SchemeColorValBg1:
		_cfdg.Value = "\u0062\u0067\u0031"
	case ST_SchemeColorValTx1:
		_cfdg.Value = "\u0074\u0078\u0031"
	case ST_SchemeColorValBg2:
		_cfdg.Value = "\u0062\u0067\u0032"
	case ST_SchemeColorValTx2:
		_cfdg.Value = "\u0074\u0078\u0032"
	case ST_SchemeColorValAccent1:
		_cfdg.Value = "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case ST_SchemeColorValAccent2:
		_cfdg.Value = "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case ST_SchemeColorValAccent3:
		_cfdg.Value = "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case ST_SchemeColorValAccent4:
		_cfdg.Value = "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case ST_SchemeColorValAccent5:
		_cfdg.Value = "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case ST_SchemeColorValAccent6:
		_cfdg.Value = "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case ST_SchemeColorValHlink:
		_cfdg.Value = "\u0068\u006c\u0069n\u006b"
	case ST_SchemeColorValFolHlink:
		_cfdg.Value = "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	case ST_SchemeColorValPhClr:
		_cfdg.Value = "\u0070\u0068\u0043l\u0072"
	case ST_SchemeColorValDk1:
		_cfdg.Value = "\u0064\u006b\u0031"
	case ST_SchemeColorValLt1:
		_cfdg.Value = "\u006c\u0074\u0031"
	case ST_SchemeColorValDk2:
		_cfdg.Value = "\u0064\u006b\u0032"
	case ST_SchemeColorValLt2:
		_cfdg.Value = "\u006c\u0074\u0032"
	}
	return _cfdg, nil
}
func (_dag *Blip) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0062\u006c\u0069\u0070"
	return _dag.CT_Blip.MarshalXML(e, start)
}
func NewCT_AudioCDTime() *CT_AudioCDTime { _cdd := &CT_AudioCDTime{}; return _cdd }
func (_fdcdg *CT_TableCell) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _affffb := range start.Attr {
		if _affffb.Name.Local == "\u0072o\u0077\u0053\u0070\u0061\u006e" {
			_gfgfe, _abgcb := _c.ParseInt(_affffb.Value, 10, 32)
			if _abgcb != nil {
				return _abgcb
			}
			_bdcbb := int32(_gfgfe)
			_fdcdg.RowSpanAttr = &_bdcbb
			continue
		}
		if _affffb.Name.Local == "\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u006e" {
			_acebd, _dgdc := _c.ParseInt(_affffb.Value, 10, 32)
			if _dgdc != nil {
				return _dgdc
			}
			_bcdf := int32(_acebd)
			_fdcdg.GridSpanAttr = &_bcdf
			continue
		}
		if _affffb.Name.Local == "\u0068\u004d\u0065\u0072\u0067\u0065" {
			_gdgdf, _cdbcf := _c.ParseBool(_affffb.Value)
			if _cdbcf != nil {
				return _cdbcf
			}
			_fdcdg.HMergeAttr = &_gdgdf
			continue
		}
		if _affffb.Name.Local == "\u0076\u004d\u0065\u0072\u0067\u0065" {
			_cged, _cbaeg := _c.ParseBool(_affffb.Value)
			if _cbaeg != nil {
				return _cbaeg
			}
			_fdcdg.VMergeAttr = &_cged
			continue
		}
		if _affffb.Name.Local == "\u0069\u0064" {
			_aebe, _fcgbbe := _affffb.Value, error(nil)
			if _fcgbbe != nil {
				return _fcgbbe
			}
			_fdcdg.IdAttr = &_aebe
			continue
		}
	}
_bagef:
	for {
		_ebggc, _acbbe := d.Token()
		if _acbbe != nil {
			return _acbbe
		}
		switch _egbb := _ebggc.(type) {
		case _d.StartElement:
			switch _egbb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_fdcdg.TxBody = NewCT_TextBody()
				if _ageeae := d.DecodeElement(_fdcdg.TxBody, &_egbb); _ageeae != nil {
					return _ageeae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0050\u0072"}:
				_fdcdg.TcPr = NewCT_TableCellProperties()
				if _gfbgc := d.DecodeElement(_fdcdg.TcPr, &_egbb); _gfbgc != nil {
					return _gfbgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdcdg.ExtLst = NewCT_OfficeArtExtensionList()
				if _abegf := d.DecodeElement(_fdcdg.ExtLst, &_egbb); _abegf != nil {
					return _abegf
				}
			default:
				_cd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0061\u0062l\u0065\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _egbb.Name)
				if _cggag := d.Skip(); _cggag != nil {
					return _cggag
				}
			}
		case _d.EndElement:
			break _bagef
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ThemeableLineStyle and its children
func (_aeea *CT_ThemeableLineStyle) Validate() error {
	return _aeea.ValidateWithPath("C\u0054\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u004c\u0069n\u0065\u0053\u0074\u0079\u006c\u0065")
}

// Validate validates the CT_ReflectionEffect and its children
func (_caagc *CT_ReflectionEffect) Validate() error {
	return _caagc.ValidateWithPath("\u0043\u0054\u005f\u0052ef\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_bdaadb ST_TextVertOverflowType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bdaadb.String(), start)
}
func (_ccaec ST_PresetPatternVal) Validate() error { return _ccaec.ValidateWithPath("") }

// Validate validates the CT_TintEffect and its children
func (_geaad *CT_TintEffect) Validate() error {
	return _geaad.ValidateWithPath("\u0043\u0054\u005f\u0054\u0069\u006e\u0074\u0045\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_EffectStyleItem and its children, prefixing error messages with path
func (_ddfdf *CT_EffectStyleItem) ValidateWithPath(path string) error {
	if _ddfdf.EffectLst != nil {
		if _caecd := _ddfdf.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _caecd != nil {
			return _caecd
		}
	}
	if _ddfdf.EffectDag != nil {
		if _bgcca := _ddfdf.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _bgcca != nil {
			return _bgcca
		}
	}
	if _ddfdf.Scene3d != nil {
		if _fdeg := _ddfdf.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _fdeg != nil {
			return _fdeg
		}
	}
	if _ddfdf.Sp3d != nil {
		if _gfcfa := _ddfdf.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _gfcfa != nil {
			return _gfcfa
		}
	}
	return nil
}

type CT_TintEffect struct {
	HueAttr *int32
	AmtAttr *ST_FixedPercentage
}

const (
	ST_TextCapsTypeUnset ST_TextCapsType = 0
	ST_TextCapsTypeNone  ST_TextCapsType = 1
	ST_TextCapsTypeSmall ST_TextCapsType = 2
	ST_TextCapsTypeAll   ST_TextCapsType = 3
)

type ST_TextFontAlignType byte

// Validate validates the CT_LineProperties and its children
func (_ggaf *CT_LineProperties) Validate() error {
	return _ggaf.ValidateWithPath("\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// ST_AdjAngle is a union type
type ST_AdjAngle struct {
	ST_Angle         *int32
	ST_GeomGuideName *string
}

func (_bdbff *CT_Transform2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _accac := range start.Attr {
		if _accac.Name.Local == "\u0072\u006f\u0074" {
			_faedg, _gbcafg := _c.ParseInt(_accac.Value, 10, 32)
			if _gbcafg != nil {
				return _gbcafg
			}
			_aaadc := int32(_faedg)
			_bdbff.RotAttr = &_aaadc
			continue
		}
		if _accac.Name.Local == "\u0066\u006c\u0069p\u0048" {
			_bbaffc, _bbdbge := _c.ParseBool(_accac.Value)
			if _bbdbge != nil {
				return _bbdbge
			}
			_bdbff.FlipHAttr = &_bbaffc
			continue
		}
		if _accac.Name.Local == "\u0066\u006c\u0069p\u0056" {
			_ggdaf, _cbaeb := _c.ParseBool(_accac.Value)
			if _cbaeb != nil {
				return _cbaeb
			}
			_bdbff.FlipVAttr = &_ggdaf
			continue
		}
	}
_bdbfe:
	for {
		_deebe, _aecfg := d.Token()
		if _aecfg != nil {
			return _aecfg
		}
		switch _egcgea := _deebe.(type) {
		case _d.StartElement:
			switch _egcgea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}:
				_bdbff.Off = NewCT_Point2D()
				if _ffag := d.DecodeElement(_bdbff.Off, &_egcgea); _ffag != nil {
					return _ffag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_bdbff.Ext = NewCT_PositiveSize2D()
				if _fgddb := d.DecodeElement(_bdbff.Ext, &_egcgea); _fgddb != nil {
					return _fgddb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d2\u0044\u0020\u0025\u0076", _egcgea.Name)
				if _bbef := d.Skip(); _bbef != nil {
					return _bbef
				}
			}
		case _d.EndElement:
			break _bdbfe
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RelativeOffsetEffect and its children
func (_dbfb *CT_RelativeOffsetEffect) Validate() error {
	return _dbfb.ValidateWithPath("\u0043\u0054\u005fRe\u006c\u0061\u0074\u0069\u0076\u0065\u004f\u0066\u0066\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_Connection and its children, prefixing error messages with path
func (_cffg *CT_Connection) ValidateWithPath(path string) error { return nil }
func (_bgdag *CT_PresetGeometry2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bgdag.PrstAttr = ST_ShapeType(1)
	for _, _faed := range start.Attr {
		if _faed.Name.Local == "\u0070\u0072\u0073\u0074" {
			_bgdag.PrstAttr.UnmarshalXMLAttr(_faed)
			continue
		}
	}
_adefd:
	for {
		_ecaab, _gdegb := d.Token()
		if _gdegb != nil {
			return _gdegb
		}
		switch _ccdd := _ecaab.(type) {
		case _d.StartElement:
			switch _ccdd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_bgdag.AvLst = NewCT_GeomGuideList()
				if _gfaef := d.DecodeElement(_bgdag.AvLst, &_ccdd); _gfaef != nil {
					return _gfaef
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0047eo\u006d\u0065\u0074\u0072\u0079\u0032\u0044\u0020\u0025\u0076", _ccdd.Name)
				if _cadae := d.Skip(); _cadae != nil {
					return _cadae
				}
			}
		case _d.EndElement:
			break _adefd
		case _d.CharData:
		}
	}
	return nil
}
func (_bfedc *CT_DuotoneEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	for _, _cfge := range _bfedc.EG_ColorChoice {
		_cfge.MarshalXML(e, _d.StartElement{})
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cebee ST_PositivePercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cebee.ST_PositivePercentageDecimal != nil {
		e.EncodeToken(_d.CharData(_dg.Sprintf("\u0025\u0064", *_cebee.ST_PositivePercentageDecimal)))
	}
	if _cebee.ST_PositivePercentage != nil {
		e.Encode(_cebee.ST_PositivePercentage)
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_dggfd *CT_NonVisualDrawingShapeProps) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dggfd.TxBoxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0078\u0042o\u0078"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_dggfd.TxBoxAttr))})
	}
	e.EncodeToken(start)
	if _dggfd.SpLocks != nil {
		_aebabg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0070\u004c\u006f\u0063\u006bs"}}
		e.EncodeElement(_dggfd.SpLocks, _aebabg)
	}
	if _dggfd.ExtLst != nil {
		_dcca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dggfd.ExtLst, _dcca)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GraphicalObjectData and its children, prefixing error messages with path
func (_acaf *CT_GraphicalObjectData) ValidateWithPath(path string) error { return nil }
func (_cacgd ST_TextVertOverflowType) Validate() error                   { return _cacgd.ValidateWithPath("") }
func (_ecgfca *ST_PresetCameraType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eggbb, _eabec := d.Token()
	if _eabec != nil {
		return _eabec
	}
	if _cbeba, _afedd := _eggbb.(_d.EndElement); _afedd && _cbeba.Name == start.Name {
		*_ecgfca = 1
		return nil
	}
	if _aggde, _fdabb := _eggbb.(_d.CharData); !_fdabb {
		return _dg.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eggbb)
	} else {
		switch string(_aggde) {
		case "":
			*_ecgfca = 0
		case "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074":
			*_ecgfca = 1
		case "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
			*_ecgfca = 2
		case "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074":
			*_ecgfca = 3
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074":
			*_ecgfca = 4
		case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074":
			*_ecgfca = 5
		case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074":
			*_ecgfca = 6
		case "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
			*_ecgfca = 7
		case "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_ecgfca = 8
		case "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
			*_ecgfca = 9
		case "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074":
			*_ecgfca = 10
		case "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070":
			*_ecgfca = 11
		case "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t":
			*_ecgfca = 12
		case "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074":
			*_ecgfca = 13
		case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074":
			*_ecgfca = 14
		case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074":
			*_ecgfca = 15
		case "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074":
			*_ecgfca = 16
		case "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_ecgfca = 17
		case "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074":
			*_ecgfca = 18
		case "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074":
			*_ecgfca = 19
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070":
			*_ecgfca = 20
		case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e":
			*_ecgfca = 21
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070":
			*_ecgfca = 22
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e":
			*_ecgfca = 23
		case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070":
			*_ecgfca = 24
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e":
			*_ecgfca = 25
		case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070":
			*_ecgfca = 26
		case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e":
			*_ecgfca = 27
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074":
			*_ecgfca = 28
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074":
			*_ecgfca = 29
		case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070":
			*_ecgfca = 30
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074":
			*_ecgfca = 31
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074":
			*_ecgfca = 32
		case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070":
			*_ecgfca = 33
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074":
			*_ecgfca = 34
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074":
			*_ecgfca = 35
		case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d":
			*_ecgfca = 36
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074":
			*_ecgfca = 37
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074":
			*_ecgfca = 38
		case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d":
			*_ecgfca = 39
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074":
			*_ecgfca = 40
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
			*_ecgfca = 41
		case "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_ecgfca = 42
		case "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074":
			*_ecgfca = 43
		case "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074":
			*_ecgfca = 44
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074":
			*_ecgfca = 45
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_ecgfca = 46
		case "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074":
			*_ecgfca = 47
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074":
			*_ecgfca = 48
		case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074":
			*_ecgfca = 49
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074":
			*_ecgfca = 50
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065":
			*_ecgfca = 51
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077":
			*_ecgfca = 52
		case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067":
			*_ecgfca = 53
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067":
			*_ecgfca = 54
		case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
			*_ecgfca = 55
		case "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067":
			*_ecgfca = 56
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067":
			*_ecgfca = 57
		case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067":
			*_ecgfca = 58
		case "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
			*_ecgfca = 59
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067":
			*_ecgfca = 60
		case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064":
			*_ecgfca = 61
		case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079":
			*_ecgfca = 62
		}
	}
	_eggbb, _eabec = d.Token()
	if _eabec != nil {
		return _eabec
	}
	if _cgfea, _ecfeeg := _eggbb.(_d.EndElement); _ecfeeg && _cgfea.Name == start.Name {
		return nil
	}
	return _dg.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eggbb)
}
func (_abacb *CT_LightRig) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_abacb.RigAttr = ST_LightRigType(1)
	_abacb.DirAttr = ST_LightRigDirection(1)
	for _, _fcbeb := range start.Attr {
		if _fcbeb.Name.Local == "\u0072\u0069\u0067" {
			_abacb.RigAttr.UnmarshalXMLAttr(_fcbeb)
			continue
		}
		if _fcbeb.Name.Local == "\u0064\u0069\u0072" {
			_abacb.DirAttr.UnmarshalXMLAttr(_fcbeb)
			continue
		}
	}
_agfed:
	for {
		_ffab, _cdafa := d.Token()
		if _cdafa != nil {
			return _cdafa
		}
		switch _ggade := _ffab.(type) {
		case _d.StartElement:
			switch _ggade.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}:
				_abacb.Rot = NewCT_SphereCoords()
				if _fgaf := d.DecodeElement(_abacb.Rot, &_ggade); _fgaf != nil {
					return _fgaf
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067\u0020\u0025\u0076", _ggade.Name)
				if _egcee := d.Skip(); _egcee != nil {
					return _egcee
				}
			}
		case _d.EndElement:
			break _agfed
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FontCollection and its children, prefixing error messages with path
func (_dfdcb *CT_FontCollection) ValidateWithPath(path string) error {
	if _cbfe := _dfdcb.Latin.ValidateWithPath(path + "\u002f\u004c\u0061\u0074\u0069\u006e"); _cbfe != nil {
		return _cbfe
	}
	if _gfaa := _dfdcb.Ea.ValidateWithPath(path + "\u002f\u0045\u0061"); _gfaa != nil {
		return _gfaa
	}
	if _beed := _dfdcb.Cs.ValidateWithPath(path + "\u002f\u0043\u0073"); _beed != nil {
		return _beed
	}
	for _ecba, _abef := range _dfdcb.Font {
		if _bgcag := _abef.ValidateWithPath(_dg.Sprintf("%\u0073\u002f\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _ecba)); _bgcag != nil {
			return _bgcag
		}
	}
	if _dfdcb.ExtLst != nil {
		if _bcgbb := _dfdcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcgbb != nil {
			return _bcgbb
		}
	}
	return nil
}
func (_ffcef ST_TextAlignType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cbfcad := _d.Attr{}
	_cbfcad.Name = name
	switch _ffcef {
	case ST_TextAlignTypeUnset:
		_cbfcad.Value = ""
	case ST_TextAlignTypeL:
		_cbfcad.Value = "\u006c"
	case ST_TextAlignTypeCtr:
		_cbfcad.Value = "\u0063\u0074\u0072"
	case ST_TextAlignTypeR:
		_cbfcad.Value = "\u0072"
	case ST_TextAlignTypeJust:
		_cbfcad.Value = "\u006a\u0075\u0073\u0074"
	case ST_TextAlignTypeJustLow:
		_cbfcad.Value = "\u006au\u0073\u0074\u004c\u006f\u0077"
	case ST_TextAlignTypeDist:
		_cbfcad.Value = "\u0064\u0069\u0073\u0074"
	case ST_TextAlignTypeThaiDist:
		_cbfcad.Value = "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074"
	}
	return _cbfcad, nil
}

// ValidateWithPath validates the CT_Path2DQuadBezierTo and its children, prefixing error messages with path
func (_fgef *CT_Path2DQuadBezierTo) ValidateWithPath(path string) error {
	for _ecag, _dbcde := range _fgef.Pt {
		if _ecfaff := _dbcde.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0050\u0074\u005b\u0025\u0064]", path, _ecag)); _ecfaff != nil {
			return _ecfaff
		}
	}
	return nil
}

// ST_Coordinate32 is a union type
type ST_Coordinate32 struct {
	ST_Coordinate32Unqualified *int32
	ST_UniversalMeasure        *string
}

// ValidateWithPath validates the EG_FillModeProperties and its children, prefixing error messages with path
func (_caedc *EG_FillModeProperties) ValidateWithPath(path string) error {
	if _caedc.Tile != nil {
		if _fdedee := _caedc.Tile.ValidateWithPath(path + "\u002f\u0054\u0069l\u0065"); _fdedee != nil {
			return _fdedee
		}
	}
	if _caedc.Stretch != nil {
		if _eefdg := _caedc.Stretch.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0065\u0074\u0063\u0068"); _eefdg != nil {
			return _eefdg
		}
	}
	return nil
}

const (
	ST_PathFillModeUnset       ST_PathFillMode = 0
	ST_PathFillModeNone        ST_PathFillMode = 1
	ST_PathFillModeNorm        ST_PathFillMode = 2
	ST_PathFillModeLighten     ST_PathFillMode = 3
	ST_PathFillModeLightenLess ST_PathFillMode = 4
	ST_PathFillModeDarken      ST_PathFillMode = 5
	ST_PathFillModeDarkenLess  ST_PathFillMode = 6
)

// Validate validates the CT_LineStyleList and its children
func (_bggc *CT_LineStyleList) Validate() error {
	return _bggc.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074")
}
func NewCT_PresetGeometry2D() *CT_PresetGeometry2D {
	_ceedf := &CT_PresetGeometry2D{}
	_ceedf.PrstAttr = ST_ShapeType(1)
	return _ceedf
}
func NewCT_GraphicalObjectData() *CT_GraphicalObjectData {
	_fgece := &CT_GraphicalObjectData{}
	return _fgece
}

type ST_LightRigType byte

// Validate validates the EG_Geometry and its children
func (_bdccg *EG_Geometry) Validate() error {
	return _bdccg.ValidateWithPath("E\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079")
}

// ValidateWithPath validates the EG_LineJoinProperties and its children, prefixing error messages with path
func (_fbbbaa *EG_LineJoinProperties) ValidateWithPath(path string) error {
	if _fbbbaa.Round != nil {
		if _cfccgf := _fbbbaa.Round.ValidateWithPath(path + "\u002f\u0052\u006f\u0075\u006e\u0064"); _cfccgf != nil {
			return _cfccgf
		}
	}
	if _fbbbaa.Bevel != nil {
		if _face := _fbbbaa.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _face != nil {
			return _face
		}
	}
	if _fbbbaa.Miter != nil {
		if _eeeea := _fbbbaa.Miter.ValidateWithPath(path + "\u002f\u004d\u0069\u0074\u0065\u0072"); _eeeea != nil {
			return _eeeea
		}
	}
	return nil
}
func NewCT_TablePropertiesChoice() *CT_TablePropertiesChoice {
	_cgbcd := &CT_TablePropertiesChoice{}
	return _cgbcd
}
func (_eeedae *Graphic) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eeedae.CT_GraphicalObject = *NewCT_GraphicalObject()
_gdbdfb:
	for {
		_dffad, _babgb := d.Token()
		if _babgb != nil {
			return _babgb
		}
		switch _baac := _dffad.(type) {
		case _d.StartElement:
			switch _baac.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}:
				if _ebgdeb := d.DecodeElement(_eeedae.GraphicData, &_baac); _ebgdeb != nil {
					return _ebgdeb
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0047r\u0061\u0070\u0068\u0069\u0063\u0020\u0025\u0076", _baac.Name)
				if _gfbag := d.Skip(); _gfbag != nil {
					return _gfbag
				}
			}
		case _d.EndElement:
			break _gdbdfb
		case _d.CharData:
		}
	}
	return nil
}
func (_ageg *CT_Backdrop) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ageg.Anchor = NewCT_Point3D()
	_ageg.Norm = NewCT_Vector3D()
	_ageg.Up = NewCT_Vector3D()
_dcgc:
	for {
		_dba, _egc := d.Token()
		if _egc != nil {
			return _egc
		}
		switch _gead := _dba.(type) {
		case _d.StartElement:
			switch _gead.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _bfec := d.DecodeElement(_ageg.Anchor, &_gead); _bfec != nil {
					return _bfec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072\u006d"}:
				if _bae := d.DecodeElement(_ageg.Norm, &_gead); _bae != nil {
					return _bae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0070"}:
				if _dgga := d.DecodeElement(_ageg.Up, &_gead); _dgga != nil {
					return _dgga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ageg.ExtLst = NewCT_OfficeArtExtensionList()
				if _bcb := d.DecodeElement(_ageg.ExtLst, &_gead); _bcb != nil {
					return _bcb
				}
			default:
				_cd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070\u0020\u0025\u0076", _gead.Name)
				if _daba := d.Skip(); _daba != nil {
					return _daba
				}
			}
		case _d.EndElement:
			break _dcgc
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Path2DLineTo and its children
func (_fbbc *CT_Path2DLineTo) Validate() error {
	return _fbbc.ValidateWithPath("\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f")
}

// Validate validates the CT_GvmlGroupShape and its children
func (_bffd *CT_GvmlGroupShape) Validate() error {
	return _bffd.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065")
}

type Blip struct{ CT_Blip }
type CT_ScRgbColor struct {
	RAttr             ST_Percentage
	GAttr             ST_Percentage
	BAttr             ST_Percentage
	EG_ColorTransform []*EG_ColorTransform
}

func (_ffgf *ST_TextSpacingPercentOrPercentString) ValidateWithPath(path string) error {
	_cbbcf := []string{}
	if _ffgf.ST_TextSpacingPercent != nil {
		_cbbcf = append(_cbbcf, "S\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _ffgf.ST_Percentage != nil {
		_cbbcf = append(_cbbcf, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_cbbcf) > 1 {
		return _dg.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cbbcf)
	}
	return nil
}
func (_faffa *CT_ContentPartLocking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _faffa.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_faffa.NoGrpAttr))})
	}
	if _faffa.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_faffa.NoSelectAttr))})
	}
	if _faffa.NoRotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_faffa.NoRotAttr))})
	}
	if _faffa.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_faffa.NoChangeAspectAttr))})
	}
	if _faffa.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_faffa.NoMoveAttr))})
	}
	if _faffa.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_faffa.NoResizeAttr))})
	}
	if _faffa.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_faffa.NoEditPointsAttr))})
	}
	if _faffa.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_faffa.NoAdjustHandlesAttr))})
	}
	if _faffa.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_faffa.NoChangeArrowheadsAttr))})
	}
	if _faffa.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_faffa.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _faffa.ExtLst != nil {
		_gaca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_faffa.ExtLst, _gaca)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Connection and its children
func (_edaf *CT_Connection) Validate() error {
	return _edaf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e")
}

type CT_TextFont struct {
	TypefaceAttr    string
	PanoseAttr      *string
	PitchFamilyAttr ST_PitchFamily
	CharsetAttr     *int8
}
type CT_NoFillProperties struct{}

func (_gfbad *CT_ThemeableLineStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cgace:
	for {
		_gaafc, _ecefegg := d.Token()
		if _ecefegg != nil {
			return _ecefegg
		}
		switch _gffada := _gaafc.(type) {
		case _d.StartElement:
			switch _gffada.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_gfbad.Ln = NewCT_LineProperties()
				if _dbcccb := d.DecodeElement(_gfbad.Ln, &_gffada); _dbcccb != nil {
					return _dbcccb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}:
				_gfbad.LnRef = NewCT_StyleMatrixReference()
				if _bbegba := d.DecodeElement(_gfbad.LnRef, &_gffada); _bbegba != nil {
					return _bbegba
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u004c\u0069\u006e\u0065\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _gffada.Name)
				if _fffaec := d.Skip(); _fffaec != nil {
					return _fffaec
				}
			}
		case _d.EndElement:
			break _cgace
		case _d.CharData:
		}
	}
	return nil
}
func (_fadegd ST_PresetPatternVal) ValidateWithPath(path string) error {
	switch _fadegd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fadegd))
	}
	return nil
}

type CT_AnimationGraphicalObjectBuildProperties struct {
	BldDgm   *CT_AnimationDgmBuildProperties
	BldChart *CT_AnimationChartBuildProperties
}

const (
	ST_TextWrappingTypeUnset  ST_TextWrappingType = 0
	ST_TextWrappingTypeNone   ST_TextWrappingType = 1
	ST_TextWrappingTypeSquare ST_TextWrappingType = 2
)

// ValidateWithPath validates the CT_TextBulletTypefaceFollowText and its children, prefixing error messages with path
func (_abccg *CT_TextBulletTypefaceFollowText) ValidateWithPath(path string) error { return nil }
func (_degdacd ST_AnimationBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_degdacd.String(), start)
}

const (
	ST_BlackWhiteModeUnset      ST_BlackWhiteMode = 0
	ST_BlackWhiteModeClr        ST_BlackWhiteMode = 1
	ST_BlackWhiteModeAuto       ST_BlackWhiteMode = 2
	ST_BlackWhiteModeGray       ST_BlackWhiteMode = 3
	ST_BlackWhiteModeLtGray     ST_BlackWhiteMode = 4
	ST_BlackWhiteModeInvGray    ST_BlackWhiteMode = 5
	ST_BlackWhiteModeGrayWhite  ST_BlackWhiteMode = 6
	ST_BlackWhiteModeBlackGray  ST_BlackWhiteMode = 7
	ST_BlackWhiteModeBlackWhite ST_BlackWhiteMode = 8
	ST_BlackWhiteModeBlack      ST_BlackWhiteMode = 9
	ST_BlackWhiteModeWhite      ST_BlackWhiteMode = 10
	ST_BlackWhiteModeHidden     ST_BlackWhiteMode = 11
)

type CT_NonVisualGraphicFrameProperties struct {
	GraphicFrameLocks *CT_GraphicalObjectFrameLocking
	ExtLst            *CT_OfficeArtExtensionList
}

func (_fdcgf *ST_AdjCoordinate) Validate() error { return _fdcgf.ValidateWithPath("") }

// ValidateWithPath validates the CT_AlphaCeilingEffect and its children, prefixing error messages with path
func (_dgg *CT_AlphaCeilingEffect) ValidateWithPath(path string) error { return nil }
func (_facdfc ST_TextAutonumberScheme) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fbeda := _d.Attr{}
	_fbeda.Name = name
	switch _facdfc {
	case ST_TextAutonumberSchemeUnset:
		_fbeda.Value = ""
	case ST_TextAutonumberSchemeAlphaLcParenBoth:
		_fbeda.Value = "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeAlphaUcParenBoth:
		_fbeda.Value = "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeAlphaLcParenR:
		_fbeda.Value = "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeAlphaUcParenR:
		_fbeda.Value = "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeAlphaLcPeriod:
		_fbeda.Value = "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeAlphaUcPeriod:
		_fbeda.Value = "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicParenBoth:
		_fbeda.Value = "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeArabicParenR:
		_fbeda.Value = "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeArabicPeriod:
		_fbeda.Value = "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicPlain:
		_fbeda.Value = "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeRomanLcParenBoth:
		_fbeda.Value = "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeRomanUcParenBoth:
		_fbeda.Value = "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeRomanLcParenR:
		_fbeda.Value = "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeRomanUcParenR:
		_fbeda.Value = "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeRomanLcPeriod:
		_fbeda.Value = "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeRomanUcPeriod:
		_fbeda.Value = "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeCircleNumDbPlain:
		_fbeda.Value = "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeCircleNumWdBlackPlain:
		_fbeda.Value = "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeCircleNumWdWhitePlain:
		_fbeda.Value = "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeArabicDbPeriod:
		_fbeda.Value = "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicDbPlain:
		_fbeda.Value = "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1ChsPeriod:
		_fbeda.Value = "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1ChsPlain:
		_fbeda.Value = "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1ChtPeriod:
		_fbeda.Value = "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1ChtPlain:
		_fbeda.Value = "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1JpnChsDbPeriod:
		_fbeda.Value = "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1JpnKorPlain:
		_fbeda.Value = "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1JpnKorPeriod:
		_fbeda.Value = "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabic1Minus:
		_fbeda.Value = "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeArabic2Minus:
		_fbeda.Value = "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeHebrew2Minus:
		_fbeda.Value = "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeThaiAlphaPeriod:
		_fbeda.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeThaiAlphaParenR:
		_fbeda.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeThaiAlphaParenBoth:
		_fbeda.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeThaiNumPeriod:
		_fbeda.Value = "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeThaiNumParenR:
		_fbeda.Value = "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeThaiNumParenBoth:
		_fbeda.Value = "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeHindiAlphaPeriod:
		_fbeda.Value = "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeHindiNumPeriod:
		_fbeda.Value = "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeHindiNumParenR:
		_fbeda.Value = "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeHindiAlpha1Period:
		_fbeda.Value = "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064"
	}
	return _fbeda, nil
}
func NewCT_NonVisualPictureProperties() *CT_NonVisualPictureProperties {
	_ggdce := &CT_NonVisualPictureProperties{}
	return _ggdce
}

type ST_BlipCompression byte

func (_afaae *ST_TextStrikeType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_afaae = 0
	case "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065":
		*_afaae = 1
	case "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be":
		*_afaae = 2
	case "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be":
		*_afaae = 3
	}
	return nil
}
func ParseUnionST_AdjCoordinate(s string) (ST_AdjCoordinate, error) {
	_bebdb := ST_AdjCoordinate{}
	if _fe.ST_UniversalMeasurePatternRe.MatchString(s) {
		_bebdb.ST_Coordinate = &ST_Coordinate{}
		_bebdb.ST_Coordinate.ST_UniversalMeasure = &s
	} else {
		_gbadde, _gcgdd := _c.ParseInt(s, 10, 64)
		if _gcgdd != nil {
			_bebdb.ST_GeomGuideName = &s
		} else {
			_bebdb.ST_Coordinate = &ST_Coordinate{}
			_bebdb.ST_Coordinate.ST_CoordinateUnqualified = &_gbadde
		}
	}
	return _bebdb, nil
}
func (_caadd ST_FontCollectionIndex) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bcdcc := _d.Attr{}
	_bcdcc.Name = name
	switch _caadd {
	case ST_FontCollectionIndexUnset:
		_bcdcc.Value = ""
	case ST_FontCollectionIndexMajor:
		_bcdcc.Value = "\u006d\u0061\u006ao\u0072"
	case ST_FontCollectionIndexMinor:
		_bcdcc.Value = "\u006d\u0069\u006eo\u0072"
	case ST_FontCollectionIndexNone:
		_bcdcc.Value = "\u006e\u006f\u006e\u0065"
	}
	return _bcdcc, nil
}

type CT_Point2D struct {
	XAttr ST_Coordinate
	YAttr ST_Coordinate
}
type CT_SoftEdgesEffect struct{ RadAttr int64 }

func (_gebdf *CT_GvmlGraphicalObjectFrame) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ccfg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_gebdf.NvGraphicFramePr, _ccfg)
	_fdgc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	_fdgc.Attr = append(_fdgc.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	e.EncodeElement(_gebdf.Graphic, _fdgc)
	_feac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_gebdf.Xfrm, _feac)
	if _gebdf.ExtLst != nil {
		_gbbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gebdf.ExtLst, _gbbg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_RectAlignmentUnset ST_RectAlignment = 0
	ST_RectAlignmentTl    ST_RectAlignment = 1
	ST_RectAlignmentT     ST_RectAlignment = 2
	ST_RectAlignmentTr    ST_RectAlignment = 3
	ST_RectAlignmentL     ST_RectAlignment = 4
	ST_RectAlignmentCtr   ST_RectAlignment = 5
	ST_RectAlignmentR     ST_RectAlignment = 6
	ST_RectAlignmentBl    ST_RectAlignment = 7
	ST_RectAlignmentB     ST_RectAlignment = 8
	ST_RectAlignmentBr    ST_RectAlignment = 9
)

type CT_AlphaModulateFixedEffect struct{ AmtAttr *ST_PositivePercentage }

func (_cba *CT_AdjustHandleList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fge:
	for {
		_eed, _dcd := d.Token()
		if _dcd != nil {
			return _dcd
		}
		switch _gcff := _eed.(type) {
		case _d.StartElement:
			switch _gcff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u0058\u0059"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u0058\u0059"}:
				_bagd := NewCT_XYAdjustHandle()
				if _eeee := d.DecodeElement(_bagd, &_gcff); _eeee != nil {
					return _eeee
				}
				_cba.AhXY = append(_cba.AhXY, _bagd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061h\u0050\u006f\u006c\u0061\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061h\u0050\u006f\u006c\u0061\u0072"}:
				_aaa := NewCT_PolarAdjustHandle()
				if _gfc := d.DecodeElement(_aaa, &_gcff); _gfc != nil {
					return _gfc
				}
				_cba.AhPolar = append(_cba.AhPolar, _aaa)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0041\u0064\u006a\u0075\u0073\u0074\u0048an\u0064\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _gcff.Name)
				if _ac := d.Skip(); _ac != nil {
					return _ac
				}
			}
		case _d.EndElement:
			break _fge
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GvmlConnector and its children
func (_ffbge *CT_GvmlConnector) Validate() error {
	return _ffbge.ValidateWithPath("\u0043\u0054_\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}

// ValidateWithPath validates the CT_TextBulletSizePoint and its children, prefixing error messages with path
func (_aefgb *CT_TextBulletSizePoint) ValidateWithPath(path string) error {
	if _aefgb.ValAttr < 100 {
		return _dg.Errorf("\u0025\u0073/\u006d\u002e\u0056\u0061l\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003e\u003d\u0020\u0031\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _aefgb.ValAttr)
	}
	if _aefgb.ValAttr > 400000 {
		return _dg.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, _aefgb.ValAttr)
	}
	return nil
}
func (_cadfb ST_ChartBuildStep) ValidateWithPath(path string) error {
	switch _cadfb {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _dg.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cadfb))
	}
	return nil
}
func (_badb *CT_Ratio) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e"}, Value: _dg.Sprintf("\u0025\u0076", _badb.NAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064"}, Value: _dg.Sprintf("\u0025\u0076", _badb.DAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ScRgbColor and its children, prefixing error messages with path
func (_agfc *CT_ScRgbColor) ValidateWithPath(path string) error {
	if _bbbed := _agfc.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _bbbed != nil {
		return _bbbed
	}
	if _fdegbg := _agfc.GAttr.ValidateWithPath(path + "\u002f\u0047\u0041\u0074\u0074\u0072"); _fdegbg != nil {
		return _fdegbg
	}
	if _ebagb := _agfc.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _ebagb != nil {
		return _ebagb
	}
	for _gebga, _edgfe := range _agfc.EG_ColorTransform {
		if _bccd := _edgfe.ValidateWithPath(_dg.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _gebga)); _bccd != nil {
			return _bccd
		}
	}
	return nil
}
func (_gebbe *CT_Path2DList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gebbe.Path != nil {
		_gbcfb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		for _, _afgf := range _gebbe.Path {
			e.EncodeElement(_afgf, _gbcfb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextSpacingPercent and its children, prefixing error messages with path
func (_gffade *CT_TextSpacingPercent) ValidateWithPath(path string) error {
	if _cbdaa := _gffade.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cbdaa != nil {
		return _cbdaa
	}
	return nil
}
func (_ddedf *EG_TextUnderlineLine) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ddedf.ULnTx != nil {
		_bedggb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0075\u004c\u006e\u0054\u0078"}}
		e.EncodeElement(_ddedf.ULnTx, _bedggb)
	}
	if _ddedf.ULn != nil {
		_egcc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0075L\u006e"}}
		e.EncodeElement(_ddedf.ULn, _egcc)
	}
	return nil
}

const (
	ST_PresetCameraTypeUnset                               ST_PresetCameraType = 0
	ST_PresetCameraTypeLegacyObliqueTopLeft                ST_PresetCameraType = 1
	ST_PresetCameraTypeLegacyObliqueTop                    ST_PresetCameraType = 2
	ST_PresetCameraTypeLegacyObliqueTopRight               ST_PresetCameraType = 3
	ST_PresetCameraTypeLegacyObliqueLeft                   ST_PresetCameraType = 4
	ST_PresetCameraTypeLegacyObliqueFront                  ST_PresetCameraType = 5
	ST_PresetCameraTypeLegacyObliqueRight                  ST_PresetCameraType = 6
	ST_PresetCameraTypeLegacyObliqueBottomLeft             ST_PresetCameraType = 7
	ST_PresetCameraTypeLegacyObliqueBottom                 ST_PresetCameraType = 8
	ST_PresetCameraTypeLegacyObliqueBottomRight            ST_PresetCameraType = 9
	ST_PresetCameraTypeLegacyPerspectiveTopLeft            ST_PresetCameraType = 10
	ST_PresetCameraTypeLegacyPerspectiveTop                ST_PresetCameraType = 11
	ST_PresetCameraTypeLegacyPerspectiveTopRight           ST_PresetCameraType = 12
	ST_PresetCameraTypeLegacyPerspectiveLeft               ST_PresetCameraType = 13
	ST_PresetCameraTypeLegacyPerspectiveFront              ST_PresetCameraType = 14
	ST_PresetCameraTypeLegacyPerspectiveRight              ST_PresetCameraType = 15
	ST_PresetCameraTypeLegacyPerspectiveBottomLeft         ST_PresetCameraType = 16
	ST_PresetCameraTypeLegacyPerspectiveBottom             ST_PresetCameraType = 17
	ST_PresetCameraTypeLegacyPerspectiveBottomRight        ST_PresetCameraType = 18
	ST_PresetCameraTypeOrthographicFront                   ST_PresetCameraType = 19
	ST_PresetCameraTypeIsometricTopUp                      ST_PresetCameraType = 20
	ST_PresetCameraTypeIsometricTopDown                    ST_PresetCameraType = 21
	ST_PresetCameraTypeIsometricBottomUp                   ST_PresetCameraType = 22
	ST_PresetCameraTypeIsometricBottomDown                 ST_PresetCameraType = 23
	ST_PresetCameraTypeIsometricLeftUp                     ST_PresetCameraType = 24
	ST_PresetCameraTypeIsometricLeftDown                   ST_PresetCameraType = 25
	ST_PresetCameraTypeIsometricRightUp                    ST_PresetCameraType = 26
	ST_PresetCameraTypeIsometricRightDown                  ST_PresetCameraType = 27
	ST_PresetCameraTypeIsometricOffAxis1Left               ST_PresetCameraType = 28
	ST_PresetCameraTypeIsometricOffAxis1Right              ST_PresetCameraType = 29
	ST_PresetCameraTypeIsometricOffAxis1Top                ST_PresetCameraType = 30
	ST_PresetCameraTypeIsometricOffAxis2Left               ST_PresetCameraType = 31
	ST_PresetCameraTypeIsometricOffAxis2Right              ST_PresetCameraType = 32
	ST_PresetCameraTypeIsometricOffAxis2Top                ST_PresetCameraType = 33
	ST_PresetCameraTypeIsometricOffAxis3Left               ST_PresetCameraType = 34
	ST_PresetCameraTypeIsometricOffAxis3Right              ST_PresetCameraType = 35
	ST_PresetCameraTypeIsometricOffAxis3Bottom             ST_PresetCameraType = 36
	ST_PresetCameraTypeIsometricOffAxis4Left               ST_PresetCameraType = 37
	ST_PresetCameraTypeIsometricOffAxis4Right              ST_PresetCameraType = 38
	ST_PresetCameraTypeIsometricOffAxis4Bottom             ST_PresetCameraType = 39
	ST_PresetCameraTypeObliqueTopLeft                      ST_PresetCameraType = 40
	ST_PresetCameraTypeObliqueTop                          ST_PresetCameraType = 41
	ST_PresetCameraTypeObliqueTopRight                     ST_PresetCameraType = 42
	ST_PresetCameraTypeObliqueLeft                         ST_PresetCameraType = 43
	ST_PresetCameraTypeObliqueRight                        ST_PresetCameraType = 44
	ST_PresetCameraTypeObliqueBottomLeft                   ST_PresetCameraType = 45
	ST_PresetCameraTypeObliqueBottom                       ST_PresetCameraType = 46
	ST_PresetCameraTypeObliqueBottomRight                  ST_PresetCameraType = 47
	ST_PresetCameraTypePerspectiveFront                    ST_PresetCameraType = 48
	ST_PresetCameraTypePerspectiveLeft                     ST_PresetCameraType = 49
	ST_PresetCameraTypePerspectiveRight                    ST_PresetCameraType = 50
	ST_PresetCameraTypePerspectiveAbove                    ST_PresetCameraType = 51
	ST_PresetCameraTypePerspectiveBelow                    ST_PresetCameraType = 52
	ST_PresetCameraTypePerspectiveAboveLeftFacing          ST_PresetCameraType = 53
	ST_PresetCameraTypePerspectiveAboveRightFacing         ST_PresetCameraType = 54
	ST_PresetCameraTypePerspectiveContrastingLeftFacing    ST_PresetCameraType = 55
	ST_PresetCameraTypePerspectiveContrastingRightFacing   ST_PresetCameraType = 56
	ST_PresetCameraTypePerspectiveHeroicLeftFacing         ST_PresetCameraType = 57
	ST_PresetCameraTypePerspectiveHeroicRightFacing        ST_PresetCameraType = 58
	ST_PresetCameraTypePerspectiveHeroicExtremeLeftFacing  ST_PresetCameraType = 59
	ST_PresetCameraTypePerspectiveHeroicExtremeRightFacing ST_PresetCameraType = 60
	ST_PresetCameraTypePerspectiveRelaxed                  ST_PresetCameraType = 61
	ST_PresetCameraTypePerspectiveRelaxedModerately        ST_PresetCameraType = 62
)

type CT_PresetGeometry2D struct {
	PrstAttr ST_ShapeType
	AvLst    *CT_GeomGuideList
}

func (_bgfaca *CT_TextBodyProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bgfaca.RotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074"}, Value: _dg.Sprintf("\u0025\u0076", *_bgfaca.RotAttr)})
	}
	if _bgfaca.SpcFirstLastParaAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070c\u0046\u0069\u0072s\u0074\u004c\u0061\u0073\u0074\u0050\u0061\u0072\u0061"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_bgfaca.SpcFirstLastParaAttr))})
	}
	if _bgfaca.VertOverflowAttr != ST_TextVertOverflowTypeUnset {
		_dddged, _fedcc := _bgfaca.VertOverflowAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0065\u0072t\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _fedcc != nil {
			return _fedcc
		}
		start.Attr = append(start.Attr, _dddged)
	}
	if _bgfaca.HorzOverflowAttr != ST_TextHorzOverflowTypeUnset {
		_aafafg, _debd := _bgfaca.HorzOverflowAttr.MarshalXMLAttr(_d.Name{Local: "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _debd != nil {
			return _debd
		}
		start.Attr = append(start.Attr, _aafafg)
	}
	if _bgfaca.VertAttr != ST_TextVerticalTypeUnset {
		_fbcbe, _dffac := _bgfaca.VertAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0065\u0072\u0074"})
		if _dffac != nil {
			return _dffac
		}
		start.Attr = append(start.Attr, _fbcbe)
	}
	if _bgfaca.WrapAttr != ST_TextWrappingTypeUnset {
		_afcdbg, _dfadba := _bgfaca.WrapAttr.MarshalXMLAttr(_d.Name{Local: "\u0077\u0072\u0061\u0070"})
		if _dfadba != nil {
			return _dfadba
		}
		start.Attr = append(start.Attr, _afcdbg)
	}
	if _bgfaca.LInsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0049\u006e\u0073"}, Value: _dg.Sprintf("\u0025\u0076", *_bgfaca.LInsAttr)})
	}
	if _bgfaca.TInsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0049\u006e\u0073"}, Value: _dg.Sprintf("\u0025\u0076", *_bgfaca.TInsAttr)})
	}
	if _bgfaca.RInsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0049\u006e\u0073"}, Value: _dg.Sprintf("\u0025\u0076", *_bgfaca.RInsAttr)})
	}
	if _bgfaca.BInsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0049\u006e\u0073"}, Value: _dg.Sprintf("\u0025\u0076", *_bgfaca.BInsAttr)})
	}
	if _bgfaca.NumColAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0075\u006d\u0043\u006f\u006c"}, Value: _dg.Sprintf("\u0025\u0076", *_bgfaca.NumColAttr)})
	}
	if _bgfaca.SpcColAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0063\u0043\u006f\u006c"}, Value: _dg.Sprintf("\u0025\u0076", *_bgfaca.SpcColAttr)})
	}
	if _bgfaca.RtlColAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0074\u006c\u0043\u006f\u006c"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_bgfaca.RtlColAttr))})
	}
	if _bgfaca.FromWordArtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "f\u0072\u006f\u006d\u0057\u006f\u0072\u0064\u0041\u0072\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_bgfaca.FromWordArtAttr))})
	}
	if _bgfaca.AnchorAttr != ST_TextAnchoringTypeUnset {
		_deaae, _gfdbcf := _bgfaca.AnchorAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006e\u0063\u0068\u006f\u0072"})
		if _gfdbcf != nil {
			return _gfdbcf
		}
		start.Attr = append(start.Attr, _deaae)
	}
	if _bgfaca.AnchorCtrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_bgfaca.AnchorCtrAttr))})
	}
	if _bgfaca.ForceAAAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066o\u0072\u0063\u0065\u0041\u0041"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_bgfaca.ForceAAAttr))})
	}
	if _bgfaca.UprightAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075p\u0072\u0069\u0067\u0068\u0074"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_bgfaca.UprightAttr))})
	}
	if _bgfaca.CompatLnSpcAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "c\u006f\u006d\u0070\u0061\u0074\u004c\u006e\u0053\u0070\u0063"}, Value: _dg.Sprintf("\u0025\u0064", _dadfe(*_bgfaca.CompatLnSpcAttr))})
	}
	e.EncodeToken(start)
	if _bgfaca.PrstTxWarp != nil {
		_gaacda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070r\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}}
		e.EncodeElement(_bgfaca.PrstTxWarp, _gaacda)
	}
	if _bgfaca.NoAutofit != nil {
		_ffcde := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_bgfaca.NoAutofit, _ffcde)
	}
	if _bgfaca.NormAutofit != nil {
		_adbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_bgfaca.NormAutofit, _adbg)
	}
	if _bgfaca.SpAutoFit != nil {
		_dedcge := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"}}
		e.EncodeElement(_bgfaca.SpAutoFit, _dedcge)
	}
	if _bgfaca.Scene3d != nil {
		_ccdfbg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_bgfaca.Scene3d, _ccdfbg)
	}
	if _bgfaca.Sp3d != nil {
		_cggec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_bgfaca.Sp3d, _cggec)
	}
	if _bgfaca.FlatTx != nil {
		_bgfef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u006c\u0061\u0074\u0054\u0078"}}
		e.EncodeElement(_bgfaca.FlatTx, _bgfef)
	}
	if _bgfaca.ExtLst != nil {
		_feda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bgfaca.ExtLst, _feda)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_accaa *CT_TextParagraph) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bgbcb:
	for {
		_egfeb, _gfbdf := d.Token()
		if _gfbdf != nil {
			return _gfbdf
		}
		switch _defge := _egfeb.(type) {
		case _d.StartElement:
			switch _defge.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}:
				_accaa.PPr = NewCT_TextParagraphProperties()
				if _gaecee := d.DecodeElement(_accaa.PPr, &_defge); _gaecee != nil {
					return _gaecee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_aebca := NewEG_TextRun()
				_aebca.R = NewCT_RegularTextRun()
				if _gcggf := d.DecodeElement(_aebca.R, &_defge); _gcggf != nil {
					return _gcggf
				}
				_accaa.EG_TextRun = append(_accaa.EG_TextRun, _aebca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}:
				_bcfcg := NewEG_TextRun()
				_bcfcg.Br = NewCT_TextLineBreak()
				if _dfeaa := d.DecodeElement(_bcfcg.Br, &_defge); _dfeaa != nil {
					return _dfeaa
				}
				_accaa.EG_TextRun = append(_accaa.EG_TextRun, _bcfcg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}:
				_gcdc := NewEG_TextRun()
				_gcdc.Fld = NewCT_TextField()
				if _gdebg := d.DecodeElement(_gcdc.Fld, &_defge); _gdebg != nil {
					return _gdebg
				}
				_accaa.EG_TextRun = append(_accaa.EG_TextRun, _gcdc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}:
				_accaa.EndParaRPr = NewCT_TextCharacterProperties()
				if _febfe := d.DecodeElement(_accaa.EndParaRPr, &_defge); _febfe != nil {
					return _febfe
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0020\u0025v", _defge.Name)
				if _gdcfb := d.Skip(); _gdcfb != nil {
					return _gdcfb
				}
			}
		case _d.EndElement:
			break _bgbcb
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_PositiveFixedPercentage() *CT_PositiveFixedPercentage {
	_cgdge := &CT_PositiveFixedPercentage{}
	return _cgdge
}
func NewAG_Locking() *AG_Locking { _gba := &AG_Locking{}; return _gba }
func (_abbbb *EG_FillModeProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_beddc:
	for {
		_cagbd, _feecd := d.Token()
		if _feecd != nil {
			return _feecd
		}
		switch _eacg := _cagbd.(type) {
		case _d.StartElement:
			switch _eacg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}:
				_abbbb.Tile = NewCT_TileInfoProperties()
				if _gfecd := d.DecodeElement(_abbbb.Tile, &_eacg); _gfecd != nil {
					return _gfecd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}:
				_abbbb.Stretch = NewCT_StretchInfoProperties()
				if _geaac := d.DecodeElement(_abbbb.Stretch, &_eacg); _geaac != nil {
					return _geaac
				}
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0046\u0069\u006c\u006c\u004d\u006f\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _eacg.Name)
				if _ddegd := d.Skip(); _ddegd != nil {
					return _ddegd
				}
			}
		case _d.EndElement:
			break _beddc
		case _d.CharData:
		}
	}
	return nil
}
func (_fffcf *CT_ScRgbColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gcfdg := range start.Attr {
		if _gcfdg.Name.Local == "\u0072" {
			_ceaeg, _gecf := ParseUnionST_Percentage(_gcfdg.Value)
			if _gecf != nil {
				return _gecf
			}
			_fffcf.RAttr = _ceaeg
			continue
		}
		if _gcfdg.Name.Local == "\u0067" {
			_cgaac, _bdcf := ParseUnionST_Percentage(_gcfdg.Value)
			if _bdcf != nil {
				return _bdcf
			}
			_fffcf.GAttr = _cgaac
			continue
		}
		if _gcfdg.Name.Local == "\u0062" {
			_eadcgb, _cagb := ParseUnionST_Percentage(_gcfdg.Value)
			if _cagb != nil {
				return _cagb
			}
			_fffcf.BAttr = _eadcgb
			continue
		}
	}
_gfdff:
	for {
		_ggbb, _ecgcge := d.Token()
		if _ecgcge != nil {
			return _ecgcge
		}
		switch _fabb := _ggbb.(type) {
		case _d.StartElement:
			switch _fabb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_gebcb := NewEG_ColorTransform()
				_gebcb.Tint = NewCT_PositiveFixedPercentage()
				if _acdfg := d.DecodeElement(_gebcb.Tint, &_fabb); _acdfg != nil {
					return _acdfg
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _gebcb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_abffd := NewEG_ColorTransform()
				_abffd.Shade = NewCT_PositiveFixedPercentage()
				if _gcede := d.DecodeElement(_abffd.Shade, &_fabb); _gcede != nil {
					return _gcede
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _abffd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_gebdd := NewEG_ColorTransform()
				_gebdd.Comp = NewCT_ComplementTransform()
				if _gbead := d.DecodeElement(_gebdd.Comp, &_fabb); _gbead != nil {
					return _gbead
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _gebdd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_egcf := NewEG_ColorTransform()
				_egcf.Inv = NewCT_InverseTransform()
				if _cagbg := d.DecodeElement(_egcf.Inv, &_fabb); _cagbg != nil {
					return _cagbg
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _egcf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_afdee := NewEG_ColorTransform()
				_afdee.Gray = NewCT_GrayscaleTransform()
				if _aggae := d.DecodeElement(_afdee.Gray, &_fabb); _aggae != nil {
					return _aggae
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _afdee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_dfcgc := NewEG_ColorTransform()
				_dfcgc.Alpha = NewCT_PositiveFixedPercentage()
				if _acedg := d.DecodeElement(_dfcgc.Alpha, &_fabb); _acedg != nil {
					return _acedg
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _dfcgc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_cegd := NewEG_ColorTransform()
				_cegd.AlphaOff = NewCT_FixedPercentage()
				if _gbbeef := d.DecodeElement(_cegd.AlphaOff, &_fabb); _gbbeef != nil {
					return _gbbeef
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _cegd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_gbggf := NewEG_ColorTransform()
				_gbggf.AlphaMod = NewCT_PositivePercentage()
				if _eagg := d.DecodeElement(_gbggf.AlphaMod, &_fabb); _eagg != nil {
					return _eagg
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _gbggf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_bfgb := NewEG_ColorTransform()
				_bfgb.Hue = NewCT_PositiveFixedAngle()
				if _cbfca := d.DecodeElement(_bfgb.Hue, &_fabb); _cbfca != nil {
					return _cbfca
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _bfgb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_bedfg := NewEG_ColorTransform()
				_bedfg.HueOff = NewCT_Angle()
				if _adace := d.DecodeElement(_bedfg.HueOff, &_fabb); _adace != nil {
					return _adace
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _bedfg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_cdbg := NewEG_ColorTransform()
				_cdbg.HueMod = NewCT_PositivePercentage()
				if _cccd := d.DecodeElement(_cdbg.HueMod, &_fabb); _cccd != nil {
					return _cccd
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _cdbg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_fddbag := NewEG_ColorTransform()
				_fddbag.Sat = NewCT_Percentage()
				if _gbaac := d.DecodeElement(_fddbag.Sat, &_fabb); _gbaac != nil {
					return _gbaac
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _fddbag)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_dgaa := NewEG_ColorTransform()
				_dgaa.SatOff = NewCT_Percentage()
				if _efgg := d.DecodeElement(_dgaa.SatOff, &_fabb); _efgg != nil {
					return _efgg
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _dgaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_babd := NewEG_ColorTransform()
				_babd.SatMod = NewCT_Percentage()
				if _fgbe := d.DecodeElement(_babd.SatMod, &_fabb); _fgbe != nil {
					return _fgbe
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _babd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_feeae := NewEG_ColorTransform()
				_feeae.Lum = NewCT_Percentage()
				if _gggba := d.DecodeElement(_feeae.Lum, &_fabb); _gggba != nil {
					return _gggba
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _feeae)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_bddbg := NewEG_ColorTransform()
				_bddbg.LumOff = NewCT_Percentage()
				if _cbgdb := d.DecodeElement(_bddbg.LumOff, &_fabb); _cbgdb != nil {
					return _cbgdb
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _bddbg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_cbdg := NewEG_ColorTransform()
				_cbdg.LumMod = NewCT_Percentage()
				if _bcgaf := d.DecodeElement(_cbdg.LumMod, &_fabb); _bcgaf != nil {
					return _bcgaf
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _cbdg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_gfgbc := NewEG_ColorTransform()
				_gfgbc.Red = NewCT_Percentage()
				if _gacaff := d.DecodeElement(_gfgbc.Red, &_fabb); _gacaff != nil {
					return _gacaff
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _gfgbc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_fbcgd := NewEG_ColorTransform()
				_fbcgd.RedOff = NewCT_Percentage()
				if _begad := d.DecodeElement(_fbcgd.RedOff, &_fabb); _begad != nil {
					return _begad
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _fbcgd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_dgbaf := NewEG_ColorTransform()
				_dgbaf.RedMod = NewCT_Percentage()
				if _acfba := d.DecodeElement(_dgbaf.RedMod, &_fabb); _acfba != nil {
					return _acfba
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _dgbaf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_ggfa := NewEG_ColorTransform()
				_ggfa.Green = NewCT_Percentage()
				if _fabgc := d.DecodeElement(_ggfa.Green, &_fabb); _fabgc != nil {
					return _fabgc
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _ggfa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_gefdb := NewEG_ColorTransform()
				_gefdb.GreenOff = NewCT_Percentage()
				if _ffdd := d.DecodeElement(_gefdb.GreenOff, &_fabb); _ffdd != nil {
					return _ffdd
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _gefdb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_ggcag := NewEG_ColorTransform()
				_ggcag.GreenMod = NewCT_Percentage()
				if _degag := d.DecodeElement(_ggcag.GreenMod, &_fabb); _degag != nil {
					return _degag
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _ggcag)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_dfeedg := NewEG_ColorTransform()
				_dfeedg.Blue = NewCT_Percentage()
				if _agfgda := d.DecodeElement(_dfeedg.Blue, &_fabb); _agfgda != nil {
					return _agfgda
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _dfeedg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_cffcg := NewEG_ColorTransform()
				_cffcg.BlueOff = NewCT_Percentage()
				if _egdfe := d.DecodeElement(_cffcg.BlueOff, &_fabb); _egdfe != nil {
					return _egdfe
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _cffcg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_gcgdff := NewEG_ColorTransform()
				_gcgdff.BlueMod = NewCT_Percentage()
				if _faea := d.DecodeElement(_gcgdff.BlueMod, &_fabb); _faea != nil {
					return _faea
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _gcgdff)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_edff := NewEG_ColorTransform()
				_edff.Gamma = NewCT_GammaTransform()
				if _aafed := d.DecodeElement(_edff.Gamma, &_fabb); _aafed != nil {
					return _aafed
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _edff)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_ffbe := NewEG_ColorTransform()
				_ffbe.InvGamma = NewCT_InverseGammaTransform()
				if _dggd := d.DecodeElement(_ffbe.InvGamma, &_fabb); _dggd != nil {
					return _dggd
				}
				_fffcf.EG_ColorTransform = append(_fffcf.EG_ColorTransform, _ffbe)
			default:
				_cd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053c\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072 \u0025\u0076", _fabb.Name)
				if _aceb := d.Skip(); _aceb != nil {
					return _aceb
				}
			}
		case _d.EndElement:
			break _gfdff
		case _d.CharData:
		}
	}
	return nil
}

type CT_PolarAdjustHandle struct {
	GdRefRAttr   *string
	MinRAttr     *ST_AdjCoordinate
	MaxRAttr     *ST_AdjCoordinate
	GdRefAngAttr *string
	MinAngAttr   *ST_AdjAngle
	MaxAngAttr   *ST_AdjAngle
	Pos          *CT_AdjPoint2D
}

func NewCT_FillProperties() *CT_FillProperties { _baebd := &CT_FillProperties{}; return _baebd }
func init() {
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065", NewCT_AudioFile)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fV\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065", NewCT_VideoFile)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0051\u0075\u0069c\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065", NewCT_QuickTimeFile)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043D\u0054\u0069\u006d\u0065", NewCT_AudioCDTime)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043\u0044", NewCT_AudioCD)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065", NewCT_ColorScheme)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072", NewCT_CustomColor)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053up\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074", NewCT_SupplementalFont)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dC\u006f\u006co\u0072\u004c\u0069\u0073\u0074", NewCT_CustomColorList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065c\u0074\u0069\u006f\u006e", NewCT_FontCollection)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u0049\u0074\u0065\u006d", NewCT_EffectStyleItem)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065", NewCT_FontScheme)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_FillStyleList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_LineStyleList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u004c\u0069\u0073\u0074", NewCT_EffectStyleList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075n\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065L\u0069\u0073\u0074", NewCT_BackgroundFillStyleList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004da\u0074\u0072\u0069\u0078", NewCT_StyleMatrix)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_BaseStyles)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u0066fi\u0063e\u0041\u0072\u0074\u0045\u0078t\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_OfficeArtExtension)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0067\u006c\u0065", NewCT_Angle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0046\u0069\u0078e\u0064\u0041\u006e\u0067\u006c\u0065", NewCT_PositiveFixedAngle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_Percentage)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_PositivePercentage)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065", NewCT_FixedPercentage)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065", NewCT_PositiveFixedPercentage)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0061\u0074\u0069\u006f", NewCT_Ratio)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044", NewCT_Point2D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053i\u007a\u0065\u0032\u0044", NewCT_PositiveSize2D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043om\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d", NewCT_ComplementTransform)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049nv\u0065\u0072\u0073\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_InverseTransform)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0072ay\u0073c\u0061\u006c\u0065\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_GrayscaleTransform)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d", NewCT_GammaTransform)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0047\u0061\u006dm\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_InverseGammaTransform)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_ScRgbColor)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_SRgbColor)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072", NewCT_HslColor)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006dC\u006f\u006c\u006f\u0072", NewCT_SystemColor)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065C\u006f\u006c\u006f\u0072", NewCT_SchemeColor)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074C\u006f\u006c\u006f\u0072", NewCT_PresetColor)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t", NewCT_OfficeArtExtensionList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0061\u006c\u0065\u0032\u0044", NewCT_Scale2D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d\u0032\u0044", NewCT_Transform2D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0032\u0044", NewCT_GroupTransform2D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044", NewCT_Point3D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044", NewCT_Vector3D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0070\u0068\u0065\u0072\u0065\u0043\u006f\u006f\u0072\u0064\u0073", NewCT_SphereCoords)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0052\u0065\u0063\u0074", NewCT_RelativeRect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072", NewCT_Color)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055", NewCT_ColorMRU)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEm\u0062\u0065\u0064\u0064\u0065\u0064\u0057\u0041\u0056\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065", NewCT_EmbeddedWAVAudioFile)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b", NewCT_Hyperlink)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043on\u006e\u0065\u0063\u0074\u006f\u0072\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ConnectorLocking)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0061\u0070\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ShapeLocking)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006fc\u006b\u0069\u006e\u0067", NewCT_PictureLocking)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u006f\u0075\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_GroupLocking)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063a\u006c\u004f\u0062\u006a\u0065\u0063\u0074F\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_GraphicalObjectFrameLocking)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnt\u0065n\u0074\u0050\u0061\u0072\u0074L\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ContentPartLocking)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044r\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006f\u0070\u0073", NewCT_NonVisualDrawingProps)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050ro\u0070\u0073", NewCT_NonVisualDrawingShapeProps)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fN\u006f\u006e\u0056\u0069s\u0075\u0061\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u006f\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NonVisualConnectorProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072ti\u0065\u0073", NewCT_NonVisualPictureProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072o\u0075p\u0044r\u0061w\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073", NewCT_NonVisualGroupDrawingShapeProps)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072a\u0070h\u0069c\u0046r\u0061\u006d\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NonVisualGraphicFrameProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u006eV\u0069\u0073\u0075\u0061\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050a\u0072\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_NonVisualContentPartProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ra\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0061t\u0061", NewCT_GraphicalObjectData)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069c\u0061\u006cO\u0062\u006a\u0065\u0063\u0074", NewCT_GraphicalObject)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041ni\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_AnimationDgmElement)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043h\u0061\u0072\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_AnimationChartElement)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0041\u006e\u0069m\u0061\u0074\u0069\u006f\u006eE\u006ce\u006de\u006e\u0074\u0043\u0068\u006f\u0069\u0063e", NewCT_AnimationElementChoice)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0044\u0067\u006d\u0042\u0075\u0069l\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationDgmBuildProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061r\u0074B\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationChartBuildProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fA\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationGraphicalObjectBuildProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_BackgroundFormatting)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u0068ol\u0065E\u0032\u006f\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_WholeE2oFormatting)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0076\u006d\u006c\u0055\u0073\u0065\u0053\u0068\u0061p\u0065\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065", NewCT_GvmlUseShapeRectangle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0076\u006dl\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065", NewCT_GvmlTextShape)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0076ml\u0053h\u0061\u0070\u0065\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GvmlShapeNonVisual)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fG\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065", NewCT_GvmlShape)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065c\u0074o\u0072N\u006f\u006e\u0056\u0069\u0073\u0075\u0061l", NewCT_GvmlConnectorNonVisual)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_GvmlConnector)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fGv\u006d\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GvmlPictureNonVisual)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069c\u0074\u0075\u0072\u0065", NewCT_GvmlPicture)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047v\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046r\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c", NewCT_GvmlGraphicFrameNonVisual)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0076\u006d\u006cG\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063t\u0046r\u0061\u006d\u0065", NewCT_GvmlGraphicalObjectFrame)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c", NewCT_GvmlGroupShapeNonVisual)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065", NewCT_GvmlGroupShape)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0061\u006d\u0065\u0072a", NewCT_Camera)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067", NewCT_LightRig)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0065\u0033\u0044", NewCT_Scene3D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070", NewCT_Backdrop)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0065\u0076\u0065\u006c", NewCT_Bevel)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0033\u0044", NewCT_Shape3D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074", NewCT_FlatText)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061B\u0069\u004c\u0065\u0076\u0065l\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaBiLevelEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061C\u0065\u0069\u006c\u0069\u006eg\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaCeilingEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041lp\u0068\u0061\u0046\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaFloorEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061I\u006e\u0076\u0065\u0072\u0073e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaInverseEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0046i\u0078\u0065\u0064E\u0066f\u0065\u0063\u0074", NewCT_AlphaModulateFixedEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0041\u006c\u0070\u0068\u0061\u004f\u0075\u0074s\u0065\u0074\u0045\u0066fe\u0063\u0074", NewCT_AlphaOutsetEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaReplaceEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0042\u0069\u004ce\u0076\u0065\u006c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_BiLevelEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006c\u0075\u0072\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_BlurEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061n\u0067\u0065\u0045\u0066fe\u0063\u0074", NewCT_ColorChangeEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006flo\u0072R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_ColorReplaceEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0075\u006ft\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_DuotoneEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u006c\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_GlowEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0079\u0073\u0063a\u006c\u0065E\u0066\u0066\u0065\u0063\u0074", NewCT_GrayscaleEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0053\u004c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_HSLEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074", NewCT_InnerShadowEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fL\u0075\u006d\u0069\u006e\u0061n\u0063\u0065E\u0066\u0066\u0065\u0063\u0074", NewCT_LuminanceEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074", NewCT_OuterShadowEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0072es\u0065t\u0053\u0068\u0061\u0064\u006fw\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_PresetShadowEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ef\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_ReflectionEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fRe\u006c\u0061\u0074\u0069\u0076\u0065\u004f\u0066\u0066\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_RelativeOffsetEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u006f\u0066\u0074\u0045\u0064g\u0065\u0073E\u0066\u0066\u0065\u0063\u0074", NewCT_SoftEdgesEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0069\u006e\u0074\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_TintEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0072\u0061\u006e\u0073\u0066o\u0072\u006dE\u0066\u0066\u0065\u0063\u0074", NewCT_TransformEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004eoF\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NoFillProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0053\u006f\u006c\u0069d\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006cP\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073", NewCT_SolidColorFillProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004c\u0069\u006e\u0065\u0061\u0072\u0053\u0068\u0061\u0064e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_LinearShadeProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050at\u0068\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_PathShadeProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070", NewCT_GradientStop)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ra\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074", NewCT_GradientStopList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046i\u006cl\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s", NewCT_GradientFillProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0069le\u0049n\u0066\u006f\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_TileInfoProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066o\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_StretchInfoProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0042\u006c\u0069\u0070", NewCT_Blip)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006cip\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_BlipFillProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_PatternFillProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_GroupFillProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_FillProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_FillEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072l\u0061\u0079\u0045\u0066fe\u0063\u0074", NewCT_FillOverlayEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065", NewCT_EffectReference)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074C\u006f\u006et\u0061\u0069\u006e\u0065\u0072", NewCT_EffectContainer)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041lp\u0068\u0061\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065c\u0074", NewCT_AlphaModulateEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045f\u0066\u0065\u0063\u0074", NewCT_BlendEffect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074", NewCT_EffectList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_EffectProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fG\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065", NewCT_GeomGuide)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_GeomGuideList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0064\u006a\u0050\u006f\u0069\u006e\u0074\u0032\u0044", NewCT_AdjPoint2D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074", NewCT_GeomRect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048a\u006e\u0064\u006c\u0065", NewCT_XYAdjustHandle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006au\u0073\u0074\u0048\u0061nd\u006c\u0065", NewCT_PolarAdjustHandle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u0053\u0069\u0074\u0065", NewCT_ConnectionSite)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041dj\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_AdjustHandleList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u0069\u006f\u006e\u0053i\u0074\u0065\u004c\u0069\u0073\u0074", NewCT_ConnectionSiteList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Connection)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f", NewCT_Path2DMoveTo)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f", NewCT_Path2DLineTo)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044A\u0072\u0063\u0054\u006f", NewCT_Path2DArcTo)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0061th\u0032D\u0051\u0075\u0061\u0064\u0042e\u007a\u0069\u0065\u0072\u0054\u006f", NewCT_Path2DQuadBezierTo)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050at\u0068\u0032\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072T\u006f", NewCT_Path2DCubicBezierTo)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044C\u006c\u006f\u0073\u0065", NewCT_Path2DClose)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u0074\u0068\u0032D", NewCT_Path2D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074", NewCT_Path2DList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050re\u0073\u0065\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044", NewCT_PresetGeometry2D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u0065\u0073\u0065\u0074T\u0065\u0078t\u0053\u0068\u0061\u0070\u0065", NewCT_PresetTextShape)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044", NewCT_CustomGeometry2D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u004c\u0069\u006e\u0065\u0045\u006e\u0064\u0050r\u006f\u0070\u0065\u0072ti\u0065\u0073", NewCT_LineEndProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0042\u0065\u0076\u0065\u006c", NewCT_LineJoinBevel)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0052\u006f\u0075\u006e\u0064", NewCT_LineJoinRound)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006eM\u0069\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_LineJoinMiterProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0072\u0065\u0073e\u0074\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068P\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073", NewCT_PresetLineDashProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070", NewCT_DashStop)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074", NewCT_DashStopList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_LineProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0061\u0070\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_ShapeProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fGr\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_GroupShapeProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fSt\u0079\u006c\u0065\u004d\u0061\u0074\u0072\u0069\u0078\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_StyleMatrixReference)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u006f\u006et\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_FontReference)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_ShapeStyle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0065\u0066a\u0075\u006c\u0074\u0053\u0068a\u0070e\u0044e\u0066\u0069\u006e\u0069\u0074\u0069\u006fn", NewCT_DefaultShapeDefinition)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004fbj\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006ct\u0073", NewCT_ObjectStyleDefaults)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u006d\u0070\u0074\u0079\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_EmptyElement)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067", NewCT_ColorMapping)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCo\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065", NewCT_ColorMappingOverride)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006de\u0041\u006e\u0064\u004d\u0061\u0070\u0070\u0069\u006e\u0067", NewCT_ColorSchemeAndMapping)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u006f\u006c\u006f\u0072\u0053c\u0068\u0065m\u0065\u004c\u0069\u0073\u0074", NewCT_ColorSchemeList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004fff\u0069\u0063\u0065\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074", NewCT_OfficeStyleSheet)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u0061se\u0053t\u0079\u006c\u0065\u0073\u004fv\u0065\u0072\u0072\u0069\u0064\u0065", NewCT_BaseStylesOverride)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043li\u0070\u0062\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065e\u0074", NewCT_ClipboardStyleSheet)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_TableCellProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0065\u0061\u0064\u0065\u0072\u0073", NewCT_Headers)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c", NewCT_TableCol)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0047\u0072\u0069\u0064", NewCT_TableGrid)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006c", NewCT_TableCell)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077", NewCT_TableRow)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_TableProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065", NewCT_Table)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0065\u006c\u006c\u0033D", NewCT_Cell3D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u004c\u0069n\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_ThemeableLineStyle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079l\u0065", NewCT_TableStyleTextStyle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTa\u0062\u006c\u0065\u0043\u0065\u006c\u006c\u0042\u006f\u0072\u0064\u0065\u0072\u0053\u0074\u0079\u006c\u0065", NewCT_TableCellBorderStyle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTa\u0062\u006c\u0065\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0053\u0074\u0079\u006c\u0065", NewCT_TableBackgroundStyle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079l\u0065", NewCT_TableStyleCellStyle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074S\u0074\u0079\u006c\u0065", NewCT_TablePartStyle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_TableStyle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u004c\u0069\u0073\u0074", NewCT_TableStyleList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068", NewCT_TextParagraph)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065", NewCT_TextListStyle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0054\u0065\u0078\u0074\u004e\u006f\u0072\u006da\u006c\u0041\u0075\u0074of\u0069\u0074", NewCT_TextNormalAutofit)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0053\u0068\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074", NewCT_TextShapeAutofit)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074", NewCT_TextNoAutofit)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065xt\u0042o\u0064\u0079\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_TextBodyProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079", NewCT_TextBody)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0043\u006fl\u006fr\u0046\u006f\u006c\u006c\u006f\u0077\u0054e\u0078\u0074", NewCT_TextBulletColorFollowText)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074B\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065F\u006f\u006c\u006co\u0077T\u0065\u0078\u0074", NewCT_TextBulletSizeFollowText)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074", NewCT_TextBulletSizePercent)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0050\u006f\u0069n\u0074", NewCT_TextBulletSizePoint)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070e\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextBulletTypefaceFollowText)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTe\u0078\u0074\u0041\u0075\u0074\u006f\u006e\u0075\u006d\u0062\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074", NewCT_TextAutonumberBullet)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042u\u006c\u006c\u0065\u0074", NewCT_TextCharBullet)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042u\u006c\u006c\u0065\u0074", NewCT_TextBlipBullet)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0065\u0078\u0074\u004e\u006f\u0042\u0075\u006c\u006c\u0065\u0074", NewCT_TextNoBullet)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074", NewCT_TextFont)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u004c\u0069n\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextUnderlineLineFollowText)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u0046\u0069l\u006c\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextUnderlineFillFollowText)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0046i\u006c\u006c\u0047\u0072\u006f\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065\u0072", NewCT_TextUnderlineFillGroupWrapper)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_TextCharacterProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e", NewCT_Boolean)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074", NewCT_TextSpacingPercent)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0053\u0070\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074", NewCT_TextSpacingPoint)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070", NewCT_TextTabStop)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0065\u0078\u0074\u0054\u0061b\u0053\u0074o\u0070\u004c\u0069\u0073\u0074", NewCT_TextTabStopList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b", NewCT_TextLineBreak)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070a\u0063\u0069\u006e\u0067", NewCT_TextSpacing)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061g\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_TextParagraphProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_TextField)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065x\u0074\u0052\u0075\u006e", NewCT_RegularTextRun)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce", NewVideoFile)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0067r\u0061\u0070\u0068\u0069\u0063", NewGraphic)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0062\u006c\u0069\u0070", NewBlip)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065m\u0065", NewTheme)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065", NewThemeOverride)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065m\u0065\u004d\u0061\u006e\u0061\u0067\u0065\u0072", NewThemeManager)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0062\u006c", NewTbl)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "t\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074", NewTblStyleLst)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061", NewEG_Media)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d", NewEG_ColorTransform)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t", NewEG_OfficeArtExtensionList)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043h\u006f\u0069\u0063\u0065", NewEG_ColorChoice)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u0054\u0065\u0078\u0074\u0033D", NewEG_Text3D)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fS\u0068\u0061\u0064\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewEG_ShadeProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0046\u0069ll\u004do\u0064\u0065\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_FillModeProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewEG_FillProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u0045\u0066\u0066\u0065\u0063t", NewEG_Effect)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_EffectProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079", NewEG_Geometry)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fT\u0065\u0078\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079", NewEG_TextGeometry)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineFillProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineJoinProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u0044a\u0073\u0068\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineDashProperties)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065", NewEG_ThemeableFillStyle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005fTh\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065", NewEG_ThemeableEffectStyle)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054he\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006ce\u0073", NewEG_ThemeableFontStyles)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075t\u006f\u0066\u0069\u0074", NewEG_TextAutofit)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fT\u0065\u0078\u0074\u0042\u0075l\u006c\u0065t\u0043\u006f\u006c\u006f\u0072", NewEG_TextBulletColor)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065", NewEG_TextBulletSize)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0054\u0065xt\u0042u\u006c\u006c\u0065\u0074\u0054y\u0070\u0065\u0066\u0061\u0063\u0065", NewEG_TextBulletTypeface)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074", NewEG_TextBullet)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Li\u006e\u0065", NewEG_TextUnderlineLine)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Fi\u006c\u006c", NewEG_TextUnderlineFill)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075\u006e", NewEG_TextRun)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041G\u005f\u0042\u006c\u006f\u0062", NewAG_Blob)
	_cb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewAG_Locking)
}
