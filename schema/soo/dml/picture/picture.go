//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package picture

import (
	_d "encoding/xml"
	_fg "github.com/sanhuanshisanshao/unioffice"
	_e "github.com/sanhuanshisanshao/unioffice/common/logger"
	_g "github.com/sanhuanshisanshao/unioffice/schema/soo/dml"
)

type Pic struct{ CT_Picture }

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_bcgb *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _cb := _bcgb.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _cb != nil {
		return _cb
	}
	if _db := _bcgb.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _db != nil {
		return _db
	}
	return nil
}

// Validate validates the CT_Picture and its children
func (_ad *CT_Picture) Validate() error {
	return _ad.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}
func NewCT_Picture() *CT_Picture {
	_a := &CT_Picture{}
	_a.NvPicPr = NewCT_PictureNonVisual()
	_a.BlipFill = _g.NewCT_BlipFillProperties()
	_a.SpPr = _g.NewCT_ShapeProperties()
	return _a
}
func (_bce *Pic) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070\u0069c"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070i\u0063\u003a\u0070\u0069\u0063"
	return _bce.CT_Picture.MarshalXML(e, start)
}

// Validate validates the Pic and its children
func (_dga *Pic) Validate() error { return _dga.ValidateWithPath("\u0050\u0069\u0063") }

type CT_Picture struct {
	NvPicPr  *CT_PictureNonVisual
	BlipFill *_g.CT_BlipFillProperties
	SpPr     *_g.CT_ShapeProperties
}

func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_eg := &CT_PictureNonVisual{}
	_eg.CNvPr = _g.NewCT_NonVisualDrawingProps()
	_eg.CNvPicPr = _g.NewCT_NonVisualPictureProperties()
	return _eg
}
func (_eb *CT_Picture) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eb.NvPicPr = NewCT_PictureNonVisual()
	_eb.BlipFill = _g.NewCT_BlipFillProperties()
	_eb.SpPr = _g.NewCT_ShapeProperties()
_ac:
	for {
		_ba, _dg := d.Token()
		if _dg != nil {
			return _dg
		}
		switch _fd := _ba.(type) {
		case _d.StartElement:
			switch _fd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _d.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _c := d.DecodeElement(_eb.NvPicPr, &_fd); _c != nil {
					return _c
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _ab := d.DecodeElement(_eb.BlipFill, &_fd); _ab != nil {
					return _ab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u0073\u0070\u0050\u0072"}:
				if _ff := d.DecodeElement(_eb.SpPr, &_fd); _ff != nil {
					return _ff
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _fd.Name)
				if _da := d.Skip(); _da != nil {
					return _da
				}
			}
		case _d.EndElement:
			break _ac
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PictureNonVisual and its children
func (_af *CT_PictureNonVisual) Validate() error {
	return _af.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

type CT_PictureNonVisual struct {
	CNvPr    *_g.CT_NonVisualDrawingProps
	CNvPicPr *_g.CT_NonVisualPictureProperties
}

func NewPic() *Pic { _ga := &Pic{}; _ga.CT_Picture = *NewCT_Picture(); return _ga }

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_cc *CT_Picture) ValidateWithPath(path string) error {
	if _fff := _cc.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _fff != nil {
		return _fff
	}
	if _bc := _cc.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _bc != nil {
		return _bc
	}
	if _bad := _cc.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _bad != nil {
		return _bad
	}
	return nil
}
func (_dc *CT_Picture) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_b := _d.StartElement{Name: _d.Name{Local: "p\u0069\u0063\u003a\u006e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_dc.NvPicPr, _b)
	_fc := _d.StartElement{Name: _d.Name{Local: "\u0070\u0069\u0063:\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_dc.BlipFill, _fc)
	_df := _d.StartElement{Name: _d.Name{Local: "\u0070\u0069\u0063\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_dc.SpPr, _df)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_abe *CT_PictureNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_bb := _d.StartElement{Name: _d.Name{Local: "\u0070i\u0063\u003a\u0063\u004e\u0076\u0050r"}}
	e.EncodeElement(_abe.CNvPr, _bb)
	_bcg := _d.StartElement{Name: _d.Name{Local: "\u0070\u0069\u0063:\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_abe.CNvPicPr, _bcg)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dbb *Pic) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbb.CT_Picture = *NewCT_Picture()
_adg:
	for {
		_ef, _fb := d.Token()
		if _fb != nil {
			return _fb
		}
		switch _dbe := _ef.(type) {
		case _d.StartElement:
			switch _dbe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _d.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _gd := d.DecodeElement(_dbb.NvPicPr, &_dbe); _gd != nil {
					return _gd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _dfg := d.DecodeElement(_dbb.BlipFill, &_dbe); _dfg != nil {
					return _dfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u0073\u0070\u0050\u0072"}:
				if _ege := d.DecodeElement(_dbb.SpPr, &_dbe); _ege != nil {
					return _ege
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0050i\u0063\u0020\u0025\u0076", _dbe.Name)
				if _dgf := d.Skip(); _dgf != nil {
					return _dgf
				}
			}
		case _d.EndElement:
			break _adg
		case _d.CharData:
		}
	}
	return nil
}
func (_bbe *CT_PictureNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bbe.CNvPr = _g.NewCT_NonVisualDrawingProps()
	_bbe.CNvPicPr = _g.NewCT_NonVisualPictureProperties()
_bbea:
	for {
		_ge, _dfd := d.Token()
		if _dfd != nil {
			return _dfd
		}
		switch _ec := _ge.(type) {
		case _d.StartElement:
			switch _ec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gc := d.DecodeElement(_bbe.CNvPr, &_ec); _gc != nil {
					return _gc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _d.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _ee := d.DecodeElement(_bbe.CNvPicPr, &_ec); _ee != nil {
					return _ee
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _ec.Name)
				if _bcf := d.Skip(); _bcf != nil {
					return _bcf
				}
			}
		case _d.EndElement:
			break _bbea
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the Pic and its children, prefixing error messages with path
func (_cg *Pic) ValidateWithPath(path string) error {
	if _acb := _cg.CT_Picture.ValidateWithPath(path); _acb != nil {
		return _acb
	}
	return nil
}
func init() {
	_fg.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_fg.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_fg.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", "\u0070\u0069\u0063", NewPic)
}
