//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package core_properties

import (
	_g "encoding/xml"
	_gd "fmt"
	_a "github.com/sanhuanshisanshao/unioffice"
	_cf "github.com/sanhuanshisanshao/unioffice/common/logger"
	_c "time"
)

func (_ebg *CT_CoreProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dcd:
	for {
		_fab, _ce := d.Token()
		if _ce != nil {
			return _ce
		}
		switch _fd := _fab.(type) {
		case _g.StartElement:
			switch _fd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"}:
				_ebg.Category = new(string)
				if _ea := d.DecodeElement(_ebg.Category, &_fd); _ea != nil {
					return _ea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0053\u0074\u0061\u0074\u0075\u0073"}:
				_ebg.ContentStatus = new(string)
				if _ga := d.DecodeElement(_ebg.ContentStatus, &_fd); _ga != nil {
					return _ga
				}
			case _g.Name{Space: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/", Local: "\u0063r\u0065\u0061\u0074\u0065\u0064"}:
				_ebg.Created = new(_a.XSDAny)
				if _cd := d.DecodeElement(_ebg.Created, &_fd); _cd != nil {
					return _cd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0063r\u0065\u0061\u0074\u006f\u0072"}:
				_ebg.Creator = new(_a.XSDAny)
				if _ca := d.DecodeElement(_ebg.Creator, &_fd); _ca != nil {
					return _ca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}:
				_ebg.Description = new(_a.XSDAny)
				if _ee := d.DecodeElement(_ebg.Description, &_fd); _ee != nil {
					return _ee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0069\u0064\u0065\u006e\u0074\u0069\u0066\u0069\u0065\u0072"}:
				_ebg.Identifier = new(_a.XSDAny)
				if _bb := d.DecodeElement(_ebg.Identifier, &_fd); _bb != nil {
					return _bb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u006b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"}:
				_ebg.Keywords = NewCT_Keywords()
				if _feg := d.DecodeElement(_ebg.Keywords, &_fd); _feg != nil {
					return _feg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065"}:
				_ebg.Language = new(_a.XSDAny)
				if _df := d.DecodeElement(_ebg.Language, &_fd); _df != nil {
					return _df
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u006c\u0061\u0073\u0074\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0042\u0079"}:
				_ebg.LastModifiedBy = new(string)
				if _af := d.DecodeElement(_ebg.LastModifiedBy, &_fd); _af != nil {
					return _af
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "l\u0061\u0073\u0074\u0050\u0072\u0069\u006e\u0074\u0065\u0064"}:
				_ebg.LastPrinted = new(_c.Time)
				if _ff := d.DecodeElement(_ebg.LastPrinted, &_fd); _ff != nil {
					return _ff
				}
			case _g.Name{Space: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/", Local: "\u006d\u006f\u0064\u0069\u0066\u0069\u0065\u0064"}:
				_ebg.Modified = new(_a.XSDAny)
				if _bbe := d.DecodeElement(_ebg.Modified, &_fd); _bbe != nil {
					return _bbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}:
				_ebg.Revision = new(string)
				if _dfe := d.DecodeElement(_ebg.Revision, &_fd); _dfe != nil {
					return _dfe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0073u\u0062\u006a\u0065\u0063\u0074"}:
				_ebg.Subject = new(_a.XSDAny)
				if _cac := d.DecodeElement(_ebg.Subject, &_fd); _cac != nil {
					return _cac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0074\u0069\u0074l\u0065"}:
				_ebg.Title = new(_a.XSDAny)
				if _ba := d.DecodeElement(_ebg.Title, &_fd); _ba != nil {
					return _ba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0076e\u0072\u0073\u0069\u006f\u006e"}:
				_ebg.Version = new(string)
				if _fc := d.DecodeElement(_ebg.Version, &_fd); _fc != nil {
					return _fc
				}
			default:
				_cf.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fd.Name)
				if _dg := d.Skip(); _dg != nil {
					return _dg
				}
			}
		case _g.EndElement:
			break _dcd
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CoreProperties and its children, prefixing error messages with path
func (_abe *CoreProperties) ValidateWithPath(path string) error {
	if _adg := _abe.CT_CoreProperties.ValidateWithPath(path); _adg != nil {
		return _adg
	}
	return nil
}
func NewCoreProperties() *CoreProperties {
	_ad := &CoreProperties{}
	_ad.CT_CoreProperties = *NewCT_CoreProperties()
	return _ad
}
func NewCT_Keyword() *CT_Keyword { _dga := &CT_Keyword{}; return _dga }

type CoreProperties struct{ CT_CoreProperties }

// Validate validates the CoreProperties and its children
func (_edd *CoreProperties) Validate() error {
	return _edd.ValidateWithPath("\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}
func (_ef *CoreProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0063\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0064\u0063"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0064\u0063\u0074\u0065\u0072\u006d\u0073"}, Value: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0063\u0070\u003a\u0063\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"
	return _ef.CT_CoreProperties.MarshalXML(e, start)
}
func (_dd *CT_Keyword) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dd.LangAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u003a\u006c\u0061\u006e\u0067"}, Value: _gd.Sprintf("\u0025\u0076", *_dd.LangAttr)})
	}
	e.EncodeElement(_dd.Content, start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}
func (_gdc *CT_CoreProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gdc.Category != nil {
		_d := _g.StartElement{Name: _g.Name{Local: "c\u0070\u003a\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"}}
		_a.AddPreserveSpaceAttr(&_d, *_gdc.Category)
		e.EncodeElement(_gdc.Category, _d)
	}
	if _gdc.ContentStatus != nil {
		_de := _g.StartElement{Name: _g.Name{Local: "\u0063\u0070:\u0063\u006f\u006et\u0065\u006e\u0074\u0053\u0074\u0061\u0074\u0075\u0073"}}
		_a.AddPreserveSpaceAttr(&_de, *_gdc.ContentStatus)
		e.EncodeElement(_gdc.ContentStatus, _de)
	}
	if _gdc.Created != nil {
		_fa := _g.StartElement{Name: _g.Name{Local: "\u0064c\u0074e\u0072\u006d\u0073\u003a\u0063\u0072\u0065\u0061\u0074\u0065\u0064"}}
		e.EncodeElement(_gdc.Created, _fa)
	}
	if _gdc.Creator != nil {
		_e := _g.StartElement{Name: _g.Name{Local: "\u0064\u0063\u003a\u0063\u0072\u0065\u0061\u0074\u006f\u0072"}}
		e.EncodeElement(_gdc.Creator, _e)
	}
	if _gdc.Description != nil {
		_fad := _g.StartElement{Name: _g.Name{Local: "\u0064\u0063\u003a\u0064\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gdc.Description, _fad)
	}
	if _gdc.Identifier != nil {
		_ac := _g.StartElement{Name: _g.Name{Local: "\u0064\u0063\u003a\u0069\u0064\u0065\u006e\u0074\u0069\u0066\u0069\u0065\u0072"}}
		e.EncodeElement(_gdc.Identifier, _ac)
	}
	if _gdc.Keywords != nil {
		_gf := _g.StartElement{Name: _g.Name{Local: "c\u0070\u003a\u006b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"}}
		e.EncodeElement(_gdc.Keywords, _gf)
	}
	if _gdc.Language != nil {
		_fe := _g.StartElement{Name: _g.Name{Local: "d\u0063\u003a\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065"}}
		e.EncodeElement(_gdc.Language, _fe)
	}
	if _gdc.LastModifiedBy != nil {
		_gdg := _g.StartElement{Name: _g.Name{Local: "\u0063\u0070\u003a\u006c\u0061\u0073\u0074\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0042\u0079"}}
		_a.AddPreserveSpaceAttr(&_gdg, *_gdc.LastModifiedBy)
		e.EncodeElement(_gdc.LastModifiedBy, _gdg)
	}
	if _gdc.LastPrinted != nil {
		_dc := _g.StartElement{Name: _g.Name{Local: "\u0063\u0070\u003a\u006c\u0061\u0073\u0074\u0050\u0072i\u006e\u0074\u0065\u0064"}}
		e.EncodeElement(_gdc.LastPrinted, _dc)
	}
	if _gdc.Modified != nil {
		_acc := _g.StartElement{Name: _g.Name{Local: "\u0064\u0063t\u0065\u0072\u006ds\u003a\u006d\u006f\u0064\u0069\u0066\u0069\u0065\u0064"}}
		e.EncodeElement(_gdc.Modified, _acc)
	}
	if _gdc.Revision != nil {
		_ec := _g.StartElement{Name: _g.Name{Local: "c\u0070\u003a\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}}
		_a.AddPreserveSpaceAttr(&_ec, *_gdc.Revision)
		e.EncodeElement(_gdc.Revision, _ec)
	}
	if _gdc.Subject != nil {
		_gc := _g.StartElement{Name: _g.Name{Local: "\u0064\u0063\u003a\u0073\u0075\u0062\u006a\u0065\u0063\u0074"}}
		e.EncodeElement(_gdc.Subject, _gc)
	}
	if _gdc.Title != nil {
		_eb := _g.StartElement{Name: _g.Name{Local: "\u0064\u0063\u003a\u0074\u0069\u0074\u006c\u0065"}}
		e.EncodeElement(_gdc.Title, _eb)
	}
	if _gdc.Version != nil {
		_aa := _g.StartElement{Name: _g.Name{Local: "\u0063\u0070\u003a\u0076\u0065\u0072\u0073\u0069\u006f\u006e"}}
		_a.AddPreserveSpaceAttr(&_aa, *_gdc.Version)
		e.EncodeElement(_gdc.Version, _aa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}
func (_cag *CT_Keywords) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cee := range start.Attr {
		if _cee.Name.Space == "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065" && _cee.Name.Local == "\u006c\u0061\u006e\u0067" {
			_aac, _ebd := _cee.Value, error(nil)
			if _ebd != nil {
				return _ebd
			}
			_cag.LangAttr = &_aac
			continue
		}
	}
_dea:
	for {
		_aag, _ffa := d.Token()
		if _ffa != nil {
			return _ffa
		}
		switch _dbd := _aag.(type) {
		case _g.StartElement:
			switch _dbd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0076\u0061\u006cu\u0065"}:
				_dge := NewCT_Keyword()
				if _fcab := d.DecodeElement(_dge, &_dbd); _fcab != nil {
					return _fcab
				}
				_cag.Value = append(_cag.Value, _dge)
			default:
				_cf.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _dbd.Name)
				if _dfb := d.Skip(); _dfb != nil {
					return _dfb
				}
			}
		case _g.EndElement:
			break _dea
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CoreProperties and its children
func (_ab *CT_CoreProperties) Validate() error {
	return _ab.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

type CT_Keywords struct {
	LangAttr *string
	Value    []*CT_Keyword
}

// ValidateWithPath validates the CT_Keywords and its children, prefixing error messages with path
func (_dcf *CT_Keywords) ValidateWithPath(path string) error {
	for _agb, _eac := range _dcf.Value {
		if _bfd := _eac.ValidateWithPath(_gd.Sprintf("\u0025\u0073\u002fV\u0061\u006c\u0075\u0065\u005b\u0025\u0064\u005d", path, _agb)); _bfd != nil {
			return _bfd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Keyword and its children, prefixing error messages with path
func (_bbb *CT_Keyword) ValidateWithPath(path string) error { return nil }

type CT_Keyword struct {
	LangAttr *string
	Content  string
}

func NewCT_CoreProperties() *CT_CoreProperties { _f := &CT_CoreProperties{}; return _f }

type CT_CoreProperties struct {
	Category       *string
	ContentStatus  *string
	Created        *_a.XSDAny
	Creator        *_a.XSDAny
	Description    *_a.XSDAny
	Identifier     *_a.XSDAny
	Keywords       *CT_Keywords
	Language       *_a.XSDAny
	LastModifiedBy *string
	LastPrinted    *_c.Time
	Modified       *_a.XSDAny
	Revision       *string
	Subject        *_a.XSDAny
	Title          *_a.XSDAny
	Version        *string
}

func NewCT_Keywords() *CT_Keywords { _aae := &CT_Keywords{}; return _aae }
func (_age *CT_Keywords) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _age.LangAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u003a\u006c\u0061\u006e\u0067"}, Value: _gd.Sprintf("\u0025\u0076", *_age.LangAttr)})
	}
	e.EncodeToken(start)
	if _age.Value != nil {
		_bf := _g.StartElement{Name: _g.Name{Local: "\u0063\u0070\u003a\u0076\u0061\u006c\u0075\u0065"}}
		for _, _ge := range _age.Value {
			e.EncodeElement(_ge, _bf)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CoreProperties and its children, prefixing error messages with path
func (_fdg *CT_CoreProperties) ValidateWithPath(path string) error {
	if _fdg.Keywords != nil {
		if _fg := _fdg.Keywords.ValidateWithPath(path + "\u002fK\u0065\u0079\u0077\u006f\u0072\u0064s"); _fg != nil {
			return _fg
		}
	}
	return nil
}

// Validate validates the CT_Keywords and its children
func (_ae *CT_Keywords) Validate() error {
	return _ae.ValidateWithPath("C\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073")
}
func (_gcb *CoreProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gcb.CT_CoreProperties = *NewCT_CoreProperties()
_gfg:
	for {
		_bcb, _fb := d.Token()
		if _fb != nil {
			return _fb
		}
		switch _cfa := _bcb.(type) {
		case _g.StartElement:
			switch _cfa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"}:
				_gcb.Category = new(string)
				if _fff := d.DecodeElement(_gcb.Category, &_cfa); _fff != nil {
					return _fff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0053\u0074\u0061\u0074\u0075\u0073"}:
				_gcb.ContentStatus = new(string)
				if _fdgc := d.DecodeElement(_gcb.ContentStatus, &_cfa); _fdgc != nil {
					return _fdgc
				}
			case _g.Name{Space: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/", Local: "\u0063r\u0065\u0061\u0074\u0065\u0064"}:
				_gcb.Created = new(_a.XSDAny)
				if _eg := d.DecodeElement(_gcb.Created, &_cfa); _eg != nil {
					return _eg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0063r\u0065\u0061\u0074\u006f\u0072"}:
				_gcb.Creator = new(_a.XSDAny)
				if _dee := d.DecodeElement(_gcb.Creator, &_cfa); _dee != nil {
					return _dee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}:
				_gcb.Description = new(_a.XSDAny)
				if _gb := d.DecodeElement(_gcb.Description, &_cfa); _gb != nil {
					return _gb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0069\u0064\u0065\u006e\u0074\u0069\u0066\u0069\u0065\u0072"}:
				_gcb.Identifier = new(_a.XSDAny)
				if _fea := d.DecodeElement(_gcb.Identifier, &_cfa); _fea != nil {
					return _fea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u006b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"}:
				_gcb.Keywords = NewCT_Keywords()
				if _aab := d.DecodeElement(_gcb.Keywords, &_cfa); _aab != nil {
					return _aab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065"}:
				_gcb.Language = new(_a.XSDAny)
				if _gda := d.DecodeElement(_gcb.Language, &_cfa); _gda != nil {
					return _gda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u006c\u0061\u0073\u0074\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0042\u0079"}:
				_gcb.LastModifiedBy = new(string)
				if _bag := d.DecodeElement(_gcb.LastModifiedBy, &_cfa); _bag != nil {
					return _bag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "l\u0061\u0073\u0074\u0050\u0072\u0069\u006e\u0074\u0065\u0064"}:
				_gcb.LastPrinted = new(_c.Time)
				if _ffd := d.DecodeElement(_gcb.LastPrinted, &_cfa); _ffd != nil {
					return _ffd
				}
			case _g.Name{Space: "\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/", Local: "\u006d\u006f\u0064\u0069\u0066\u0069\u0065\u0064"}:
				_gcb.Modified = new(_a.XSDAny)
				if _eed := d.DecodeElement(_gcb.Modified, &_cfa); _eed != nil {
					return _eed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}:
				_gcb.Revision = new(string)
				if _fbd := d.DecodeElement(_gcb.Revision, &_cfa); _fbd != nil {
					return _fbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0073u\u0062\u006a\u0065\u0063\u0074"}:
				_gcb.Subject = new(_a.XSDAny)
				if _cdf := d.DecodeElement(_gcb.Subject, &_cfa); _cdf != nil {
					return _cdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f", Local: "\u0074\u0069\u0074l\u0065"}:
				_gcb.Title = new(_a.XSDAny)
				if _dgc := d.DecodeElement(_gcb.Title, &_cfa); _dgc != nil {
					return _dgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", Local: "\u0076e\u0072\u0073\u0069\u006f\u006e"}:
				_gcb.Version = new(string)
				if _bfa := d.DecodeElement(_gcb.Version, &_cfa); _bfa != nil {
					return _bfa
				}
			default:
				_cf.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072t\u0069e\u0073\u0020\u0025\u0076", _cfa.Name)
				if _ebf := d.Skip(); _ebf != nil {
					return _ebf
				}
			}
		case _g.EndElement:
			break _gfg
		case _g.CharData:
		}
	}
	return nil
}
func (_ded *CT_Keyword) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cec := range start.Attr {
		if _cec.Name.Space == "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065" && _cec.Name.Local == "\u006c\u0061\u006e\u0067" {
			_fca, _dff := _cec.Value, error(nil)
			if _dff != nil {
				return _dff
			}
			_ded.LangAttr = &_fca
			continue
		}
	}
	for {
		_db, _ecg := d.Token()
		if _ecg != nil {
			return _gd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u003a\u0020%\u0073", _ecg)
		}
		if _ed, _bc := _db.(_g.CharData); _bc {
			_ded.Content = string(_ed)
		}
		if _cb, _ffb := _db.(_g.EndElement); _ffb && _cb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Keyword and its children
func (_eaa *CT_Keyword) Validate() error {
	return _eaa.ValidateWithPath("\u0043\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064")
}
func init() {
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", "\u0043\u0054\u005f\u0043\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_CoreProperties)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", "C\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073", NewCT_Keywords)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", "\u0043\u0054\u005f\u004b\u0065\u0079\u0077\u006f\u0072\u0064", NewCT_Keyword)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063h\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0070\u0061c\u006b\u0061g\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0065\u0074\u0061\u0064\u0061ta\u002f\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", "\u0063\u006f\u0072\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCoreProperties)
}
