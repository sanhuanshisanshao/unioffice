//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package pml

import (
	_d "encoding/xml"
	_b "fmt"
	_ff "github.com/sanhuanshisanshao/unioffice"
	_be "github.com/sanhuanshisanshao/unioffice/common/logger"
	_c "github.com/sanhuanshisanshao/unioffice/schema/soo/dml"
	_g "github.com/sanhuanshisanshao/unioffice/schema/soo/ofc/sharedTypes"
	_ag "strconv"
	_f "time"
)

type CT_TLCommonTimeNodeData struct {

	// ID
	IdAttr *uint32

	// Preset ID
	PresetIDAttr *int32

	// Preset Types
	PresetClassAttr ST_TLTimeNodePresetClassType

	// Preset SubType
	PresetSubtypeAttr *int32

	// Duration
	DurAttr *ST_TLTime

	// Repeat Count
	RepeatCountAttr *ST_TLTime

	// Repeat Duration
	RepeatDurAttr *ST_TLTime

	// Speed
	SpdAttr *_c.ST_Percentage

	// Acceleration
	AccelAttr *_c.ST_PositiveFixedPercentage

	// Deceleration
	DecelAttr *_c.ST_PositiveFixedPercentage

	// Auto Reverse
	AutoRevAttr *bool

	// Restart
	RestartAttr ST_TLTimeNodeRestartType

	// Fill
	FillAttr ST_TLTimeNodeFillType

	// Synchronization Behavior
	SyncBehaviorAttr ST_TLTimeNodeSyncType

	// Time Filter
	TmFilterAttr *string

	// Event Filter
	EvtFilterAttr *string

	// Display
	DisplayAttr *bool

	// Master Relation
	MasterRelAttr ST_TLTimeNodeMasterRelation

	// Build level
	BldLvlAttr *int32

	// Group ID
	GrpIdAttr *uint32

	// After Effect
	AfterEffectAttr *bool

	// Node Type
	NodeTypeAttr ST_TLTimeNodeType

	// Node Placeholder
	NodePhAttr *bool

	// Start Conditions List
	StCondLst *CT_TLTimeConditionList

	// End Conditions List
	EndCondLst *CT_TLTimeConditionList

	// EndSync
	EndSync *CT_TLTimeCondition

	// Iterate
	Iterate *CT_TLIterateData

	// Children Time Node List
	ChildTnLst *CT_TimeNodeList

	// Sub-TimeNodes List
	SubTnLst *CT_TimeNodeList
}

func NewCT_Picture() *CT_Picture {
	_cdda := &CT_Picture{}
	_cdda.NvPicPr = NewCT_PictureNonVisual()
	_cdda.BlipFill = _c.NewCT_BlipFillProperties()
	_cdda.SpPr = _c.NewCT_ShapeProperties()
	return _cdda
}
func (_feddg *CT_Shape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _feddg.UseBgFillAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075s\u0065\u0042\u0067\u0046\u0069\u006cl"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_feddg.UseBgFillAttr))})
	}
	e.EncodeToken(start)
	_decce := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_feddg.NvSpPr, _decce)
	_befg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_feddg.SpPr, _befg)
	if _feddg.Style != nil {
		_daab := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_feddg.Style, _daab)
	}
	if _feddg.TxBody != nil {
		_aagd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_feddg.TxBody, _aagd)
	}
	if _feddg.ExtLst != nil {
		_febfe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_feddg.ExtLst, _febfe)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_HeaderFooter and its children
func (_bcbc *CT_HeaderFooter) Validate() error {
	return _bcbc.ValidateWithPath("\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072")
}
func (_dfdc ST_TLTimeNodeRestartType) String() string {
	switch _dfdc {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	case 2:
		return "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065"
	case 3:
		return "\u006e\u0065\u0076e\u0072"
	}
	return ""
}

type CT_Comment struct {

	// Comment Author ID
	AuthorIdAttr uint32

	// Comment Date/Time
	DtAttr *_f.Time

	// Comment Index
	IdxAttr uint32

	// Comment Position
	Pos *_c.CT_Point2D

	// Comment's Text Content
	Text   string
	ExtLst *CT_ExtensionListModify
}

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_gfeae *CT_Picture) ValidateWithPath(path string) error {
	if _bade := _gfeae.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _bade != nil {
		return _bade
	}
	if _deccf := _gfeae.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _deccf != nil {
		return _deccf
	}
	if _facc := _gfeae.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _facc != nil {
		return _facc
	}
	if _gfeae.Style != nil {
		if _bfge := _gfeae.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _bfge != nil {
			return _bfge
		}
	}
	if _gfeae.ExtLst != nil {
		if _fabg := _gfeae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fabg != nil {
			return _fabg
		}
	}
	return nil
}
func (_aeffa ST_TLDiagramBuildType) String() string {
	switch _aeffa {
	case 0:
		return ""
	case 1:
		return "\u0077\u0068\u006fl\u0065"
	case 2:
		return "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case 3:
		return "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068"
	case 4:
		return "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case 5:
		return "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c"
	case 6:
		return "\u0063\u0077"
	case 7:
		return "\u0063\u0077\u0049\u006e"
	case 8:
		return "\u0063\u0077\u004fu\u0074"
	case 9:
		return "\u0063\u0063\u0077"
	case 10:
		return "\u0063\u0063\u0077I\u006e"
	case 11:
		return "\u0063\u0063\u0077\u004f\u0075\u0074"
	case 12:
		return "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067"
	case 13:
		return "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg"
	case 14:
		return "\u0075\u0070"
	case 15:
		return "\u0064\u006f\u0077\u006e"
	case 16:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 17:
		return "\u0063\u0075\u0073\u0074"
	}
	return ""
}

// Validate validates the CT_HtmlPublishProperties and its children
func (_dcgb *CT_HtmlPublishProperties) Validate() error {
	return _dcgb.ValidateWithPath("\u0043T\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073h\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_fbbf *CT_TLTemplate) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbbf.LvlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0076\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_fbbf.LvlAttr)})
	}
	e.EncodeToken(start)
	_bfdde := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u006e\u004c\u0073\u0074"}}
	e.EncodeElement(_fbbf.TnLst, _bfdde)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CommonViewProperties and its children
func (_cebga *CT_CommonViewProperties) Validate() error {
	return _cebga.ValidateWithPath("\u0043\u0054\u005fCo\u006d\u006d\u006f\u006e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_SmartTags struct{ IdAttr string }

func (_cdbgd ST_TLBehaviorAdditiveType) String() string {
	switch _cdbgd {
	case 0:
		return ""
	case 1:
		return "\u0062\u0061\u0073\u0065"
	case 2:
		return "\u0073\u0075\u006d"
	case 3:
		return "\u0072\u0065\u0070\u006c"
	case 4:
		return "\u006d\u0075\u006c\u0074"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_bdfg *CT_SlideMasterIdList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bdfg.SldMasterId != nil {
		_bcaege := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}}
		for _, _gefe := range _bdfg.SldMasterId {
			e.EncodeElement(_gefe, _bcaege)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_EmbeddedFontList and its children, prefixing error messages with path
func (_gafa *CT_EmbeddedFontList) ValidateWithPath(path string) error {
	for _ddag, _gceb := range _gafa.EmbeddedFont {
		if _fgf := _gceb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _ddag)); _fgf != nil {
			return _fgf
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ExtensionList and its children, prefixing error messages with path
func (_afgda *EG_ExtensionList) ValidateWithPath(path string) error {
	for _bggda, _fdfaa := range _afgda.Ext {
		if _daeca := _fdfaa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _bggda)); _daeca != nil {
			return _daeca
		}
	}
	return nil
}
func NewCT_GroupShapeChoice() *CT_GroupShapeChoice { _daag := &CT_GroupShapeChoice{}; return _daag }
func (_daea *CT_TLBuildDiagram) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _daea.BldAttr != ST_TLDiagramBuildTypeUnset {
		_bbcg, _ecafc := _daea.BldAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u006c\u0064"})
		if _ecafc != nil {
			return _ecafc
		}
		start.Attr = append(start.Attr, _bbcg)
	}
	if _daea.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_daea.SpidAttr)})
	}
	if _daea.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_daea.GrpIdAttr)})
	}
	if _daea.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_daea.UiExpandAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLCommonMediaNodeData and its children, prefixing error messages with path
func (_egfgg *CT_TLCommonMediaNodeData) ValidateWithPath(path string) error {
	if _egfgg.VolAttr != nil {
		if _fadff := _egfgg.VolAttr.ValidateWithPath(path + "\u002f\u0056\u006f\u006c\u0041\u0074\u0074\u0072"); _fadff != nil {
			return _fadff
		}
	}
	if _cfba := _egfgg.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _cfba != nil {
		return _cfba
	}
	if _gcbf := _egfgg.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _gcbf != nil {
		return _gcbf
	}
	return nil
}
func (_cfcbg ST_TLTimeNodeType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_acgabf := _d.Attr{}
	_acgabf.Name = name
	switch _cfcbg {
	case ST_TLTimeNodeTypeUnset:
		_acgabf.Value = ""
	case ST_TLTimeNodeTypeClickEffect:
		_acgabf.Value = "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeWithEffect:
		_acgabf.Value = "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeAfterEffect:
		_acgabf.Value = "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeMainSeq:
		_acgabf.Value = "\u006da\u0069\u006e\u0053\u0065\u0071"
	case ST_TLTimeNodeTypeInteractiveSeq:
		_acgabf.Value = "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071"
	case ST_TLTimeNodeTypeClickPar:
		_acgabf.Value = "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072"
	case ST_TLTimeNodeTypeWithGroup:
		_acgabf.Value = "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p"
	case ST_TLTimeNodeTypeAfterGroup:
		_acgabf.Value = "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	case ST_TLTimeNodeTypeTmRoot:
		_acgabf.Value = "\u0074\u006d\u0052\u006f\u006f\u0074"
	}
	return _acgabf, nil
}
func (_ebgdc *ST_Direction) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ebgdc = 0
	case "\u0068\u006f\u0072\u007a":
		*_ebgdc = 1
	case "\u0076\u0065\u0072\u0074":
		*_ebgdc = 2
	}
	return nil
}

// ValidateWithPath validates the CT_ControlList and its children, prefixing error messages with path
func (_aag *CT_ControlList) ValidateWithPath(path string) error {
	for _fcbc, _cea := range _aag.Control {
		if _agdc := _cea.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u0074\u0072\u006fl\u005b\u0025\u0064\u005d", path, _fcbc)); _agdc != nil {
			return _agdc
		}
	}
	return nil
}
func NewCT_EightDirectionTransition() *CT_EightDirectionTransition {
	_edce := &CT_EightDirectionTransition{}
	return _edce
}
func (_fbeaa ST_TLAnimateMotionPathEditMode) String() string {
	switch _fbeaa {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"
	case 2:
		return "\u0066\u0069\u0078e\u0064"
	}
	return ""
}

type CT_CustomShowList struct {

	// Custom Show
	CustShow []*CT_CustomShow
}

// ValidateWithPath validates the CT_TLTemplateList and its children, prefixing error messages with path
func (_dgad *CT_TLTemplateList) ValidateWithPath(path string) error {
	for _gdaeb, _dbda := range _dgad.Tmpl {
		if _bgdec := _dbda.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0054\u006d\u0070\u006c\u005b\u0025\u0064\u005d", path, _gdaeb)); _bgdec != nil {
			return _bgdec
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomerDataList and its children, prefixing error messages with path
func (_bace *CT_CustomerDataList) ValidateWithPath(path string) error {
	for _gbbg, _cfff := range _bace.CustData {
		if _eaca := _cfff.ValidateWithPath(_b.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u005b\u0025\u0064\u005d", path, _gbbg)); _eaca != nil {
			return _eaca
		}
	}
	if _bace.Tags != nil {
		if _cae := _bace.Tags.ValidateWithPath(path + "\u002f\u0054\u0061g\u0073"); _cae != nil {
			return _cae
		}
	}
	return nil
}
func (_defff *CT_TLBuildDiagram) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ffafc := range start.Attr {
		if _ffafc.Name.Local == "\u0062\u006c\u0064" {
			_defff.BldAttr.UnmarshalXMLAttr(_ffafc)
			continue
		}
		if _ffafc.Name.Local == "\u0073\u0070\u0069\u0064" {
			_egfdg, _bcab := _ag.ParseUint(_ffafc.Value, 10, 32)
			if _bcab != nil {
				return _bcab
			}
			_cdfac := uint32(_egfdg)
			_defff.SpidAttr = &_cdfac
			continue
		}
		if _ffafc.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_dfad, _cagb := _ag.ParseUint(_ffafc.Value, 10, 32)
			if _cagb != nil {
				return _cagb
			}
			_bdaa := uint32(_dfad)
			_defff.GrpIdAttr = &_bdaa
			continue
		}
		if _ffafc.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_ddgg, _cafac := _ag.ParseBool(_ffafc.Value)
			if _cafac != nil {
				return _cafac
			}
			_defff.UiExpandAttr = &_ddgg
			continue
		}
	}
	for {
		_gfcec, _aagfa := d.Token()
		if _aagfa != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069\u0061\u0067\u0072\u0061\u006d: \u0025\u0073", _aagfa)
		}
		if _bage, _eage := _gfcec.(_d.EndElement); _eage && _bage.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cdef *CT_HandoutMasterIdList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cdef.HandoutMasterId != nil {
		_ccff := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0068\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073t\u0065\u0072\u0049\u0064"}}
		e.EncodeElement(_cdef.HandoutMasterId, _ccff)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_GraphicalObjectFrame struct {
	BwModeAttr _c.ST_BlackWhiteMode

	// Non-Visual Properties for a Graphic Frame
	NvGraphicFramePr *CT_GraphicalObjectFrameNonVisual

	// 2D Transform for Graphic Frame
	Xfrm    *_c.CT_Transform2D
	Graphic *_c.Graphic

	// Extension List with Modification Flag
	ExtLst *CT_ExtensionListModify
}

func NewCT_Slide() *CT_Slide {
	_fadcb := &CT_Slide{}
	_fadcb.CSld = NewCT_CommonSlideData()
	return _fadcb
}

type CT_SlideViewProperties struct {
	CSldViewPr *CT_CommonSlideViewProperties
	ExtLst     *CT_ExtensionList
}

func (_afbgbg *ST_TLTimeNodeSyncType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_afbgbg = 0
	case "\u0063a\u006e\u0053\u006c\u0069\u0070":
		*_afbgbg = 1
	case "\u006c\u006f\u0063\u006b\u0065\u0064":
		*_afbgbg = 2
	}
	return nil
}

type AG_ChildSlide struct {
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func (_fcd *CT_CustomShowList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fcd.CustShow != nil {
		_bfbf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		for _, _agdb := range _fcd.CustShow {
			e.EncodeElement(_agdb, _bfbf)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_faac *CT_Extension) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cfef := range start.Attr {
		if _cfef.Name.Local == "\u0075\u0072\u0069" {
			_gfea, _ecdg := _cfef.Value, error(nil)
			if _ecdg != nil {
				return _ecdg
			}
			_faac.UriAttr = _gfea
			continue
		}
	}
_egag:
	for {
		_egad, _bfbg := d.Token()
		if _bfbg != nil {
			return _bfbg
		}
		switch _ggb := _egad.(type) {
		case _d.StartElement:
			switch _ggb.Name {
			default:
				if _bbef, _deda := _ff.CreateElement(_ggb); _deda != nil {
					return _deda
				} else {
					if _fcab := d.DecodeElement(_bbef, &_ggb); _fcab != nil {
						return _fcab
					}
					_faac.Any = append(_faac.Any, _bbef)
				}
			}
		case _d.EndElement:
			break _egag
		case _d.CharData:
		}
	}
	return nil
}
func (_dfecd *CT_SlideViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gdaed := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063S\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}}
	e.EncodeElement(_dfecd.CSldViewPr, _gdaed)
	if _dfecd.ExtLst != nil {
		_fddc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfecd.ExtLst, _fddc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_CommonSlideViewProperties struct {

	// Snap Objects to Grid
	SnapToGridAttr *bool

	// Snap Objects to Objects
	SnapToObjectsAttr *bool

	// Show Guides in View
	ShowGuidesAttr *bool

	// Base properties for Slide View
	CViewPr *CT_CommonViewProperties

	// List of Guides
	GuideLst *CT_GuideList
}

func (_fabe *CT_CustomerData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _efeb := range start.Attr {
		if _efeb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _efeb.Name.Local == "\u0069\u0064" || _efeb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _efeb.Name.Local == "\u0069\u0064" {
			_dedf, _bfc := _efeb.Value, error(nil)
			if _bfc != nil {
				return _bfc
			}
			_fabe.IdAttr = _dedf
			continue
		}
	}
	for {
		_dcecc, _dcc := d.Token()
		if _dcc != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006de\u0072\u0044\u0061t\u0061:\u0020\u0025\u0073", _dcc)
		}
		if _gfee, _bcag := _dcecc.(_d.EndElement); _bcag && _gfee.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_HeaderFooter() *CT_HeaderFooter     { _degac := &CT_HeaderFooter{}; return _degac }
func NewCT_CustomShowList() *CT_CustomShowList { _gbf := &CT_CustomShowList{}; return _gbf }

type ST_PlaceholderType byte

const (
	ST_TLTimeIndefiniteUnset      ST_TLTimeIndefinite = 0
	ST_TLTimeIndefiniteIndefinite ST_TLTimeIndefinite = 1
)

func (_eegdcc ST_TLAnimateColorSpace) Validate() error { return _eegdcc.ValidateWithPath("") }
func (_gdf *CT_CommonViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gdf.VarScaleAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u0072\u0053\u0063\u0061\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gdf.VarScaleAttr))})
	}
	e.EncodeToken(start)
	_gfeb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0063\u0061\u006c\u0065"}}
	e.EncodeElement(_gdf.Scale, _gfeb)
	_acbe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006f\u0072\u0069\u0067\u0069\u006e"}}
	e.EncodeElement(_gdf.Origin, _acbe)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bbdbde *ST_TLTimeNodeMasterRelation) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bcgce, _cfdfa := d.Token()
	if _cfdfa != nil {
		return _cfdfa
	}
	if _bdeae, _adada := _bcgce.(_d.EndElement); _adada && _bdeae.Name == start.Name {
		*_bbdbde = 1
		return nil
	}
	if _fdgaa, _dfbeg := _bcgce.(_d.CharData); !_dfbeg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcgce)
	} else {
		switch string(_fdgaa) {
		case "":
			*_bbdbde = 0
		case "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k":
			*_bbdbde = 1
		case "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k":
			*_bbdbde = 2
		case "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k":
			*_bbdbde = 3
		}
	}
	_bcgce, _cfdfa = d.Token()
	if _cfdfa != nil {
		return _cfdfa
	}
	if _agaec, _fgcea := _bcgce.(_d.EndElement); _fgcea && _agaec.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcgce)
}
func (_dcdb ST_TLNextActionType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dcdb.String(), start)
}

type CT_EightDirectionTransition struct {

	// Direction
	DirAttr *ST_TransitionEightDirectionType
}

func (_bdbbb *CT_SlideMasterIdList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dgedf:
	for {
		_aafg, _dacgb := d.Token()
		if _dacgb != nil {
			return _dacgb
		}
		switch _bfdad := _aafg.(type) {
		case _d.StartElement:
			switch _bfdad.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_dedd := NewCT_SlideMasterIdListEntry()
				if _gcdd := d.DecodeElement(_dedd, &_bfdad); _gcdd != nil {
					return _gcdd
				}
				_bdbbb.SldMasterId = append(_bdbbb.SldMasterId, _dedd)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bfdad.Name)
				if _bbdf := d.Skip(); _bbdf != nil {
					return _bbdf
				}
			}
		case _d.EndElement:
			break _dgedf
		case _d.CharData:
		}
	}
	return nil
}
func (_gbaf ST_TLAnimateColorSpace) String() string {
	switch _gbaf {
	case 0:
		return ""
	case 1:
		return "\u0072\u0067\u0062"
	case 2:
		return "\u0068\u0073\u006c"
	}
	return ""
}
func (_debeg *TagLst) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0074\u0061\u0067\u004c\u0073\u0074"
	return _debeg.CT_TagList.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_TLOleBuildChart and its children, prefixing error messages with path
func (_aeefg *CT_TLOleBuildChart) ValidateWithPath(path string) error {
	if _afcb := _aeefg.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _afcb != nil {
		return _afcb
	}
	return nil
}
func (_daec *CT_OleObjectLink) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fabed := range start.Attr {
		if _fabed.Name.Local == "\u0075p\u0064a\u0074\u0065\u0041\u0075\u0074\u006f\u006d\u0061\u0074\u0069\u0063" {
			_dged, _fdad := _ag.ParseBool(_fabed.Value)
			if _fdad != nil {
				return _fdad
			}
			_daec.UpdateAutomaticAttr = &_dged
			continue
		}
	}
_eebe:
	for {
		_bcade, _ebcf := d.Token()
		if _ebcf != nil {
			return _ebcf
		}
		switch _gadde := _bcade.(type) {
		case _d.StartElement:
			switch _gadde.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_daec.ExtLst = NewCT_ExtensionList()
				if _gggf := d.DecodeElement(_daec.ExtLst, &_gadde); _gggf != nil {
					return _gggf
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b\u0020\u0025v", _gadde.Name)
				if _affa := d.Skip(); _affa != nil {
					return _affa
				}
			}
		case _d.EndElement:
			break _eebe
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NotesTextViewProperties and its children, prefixing error messages with path
func (_bbab *CT_NotesTextViewProperties) ValidateWithPath(path string) error {
	if _afbf := _bbab.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _afbf != nil {
		return _afbf
	}
	if _bbab.ExtLst != nil {
		if _daaa := _bbab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _daaa != nil {
			return _daaa
		}
	}
	return nil
}

// Validate validates the CT_CommentList and its children
func (_dbee *CT_CommentList) Validate() error {
	return _dbee.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074")
}
func (_bdcb *CT_OutlineViewSlideEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _aded := range start.Attr {
		if _aded.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _aded.Name.Local == "\u0069\u0064" || _aded.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _aded.Name.Local == "\u0069\u0064" {
			_dgdg, _ggdg := _aded.Value, error(nil)
			if _ggdg != nil {
				return _ggdg
			}
			_bdcb.IdAttr = _dgdg
			continue
		}
		if _aded.Name.Local == "\u0063\u006f\u006c\u006c\u0061\u0070\u0073\u0065" {
			_ddac, _bffe := _ag.ParseBool(_aded.Value)
			if _bffe != nil {
				return _bffe
			}
			_bdcb.CollapseAttr = &_ddac
			continue
		}
	}
	for {
		_bacc, _cdee := d.Token()
		if _cdee != nil {
			return _b.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004futl\u0069ne\u0056\u0069\u0065\u0077\u0053\u006c\u0069de\u0045\u006e\u0074\u0072\u0079\u003a\u0020%\u0073", _cdee)
		}
		if _fdbg, _bcacb := _bacc.(_d.EndElement); _bcacb && _fdbg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dfbgc *CT_SlideLayoutIdList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dfbgc.SldLayoutId != nil {
		_egfe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}}
		for _, _cfdge := range _dfbgc.SldLayoutId {
			e.EncodeElement(_cfdge, _egfe)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cfafd ST_PrintColorMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bbbef := _d.Attr{}
	_bbbef.Name = name
	switch _cfafd {
	case ST_PrintColorModeUnset:
		_bbbef.Value = ""
	case ST_PrintColorModeBw:
		_bbbef.Value = "\u0062\u0077"
	case ST_PrintColorModeGray:
		_bbbef.Value = "\u0067\u0072\u0061\u0079"
	case ST_PrintColorModeClr:
		_bbbef.Value = "\u0063\u006c\u0072"
	}
	return _bbbef, nil
}
func (_cedge *ST_TLBehaviorAdditiveType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cedge = 0
	case "\u0062\u0061\u0073\u0065":
		*_cedge = 1
	case "\u0073\u0075\u006d":
		*_cedge = 2
	case "\u0072\u0065\u0070\u006c":
		*_cedge = 3
	case "\u006d\u0075\u006c\u0074":
		*_cedge = 4
	case "\u006e\u006f\u006e\u0065":
		*_cedge = 5
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimVariantFloatVal and its children, prefixing error messages with path
func (_eaac *CT_TLAnimVariantFloatVal) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Control and its children
func (_daa *CT_Control) Validate() error {
	return _daa.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c")
}

type CT_EmbeddedFontList struct {

	// Embedded Font
	EmbeddedFont []*CT_EmbeddedFontListEntry
}

// Validate validates the CT_TLTimeTargetElement and its children
func (_cdcda *CT_TLTimeTargetElement) Validate() error {
	return _cdcda.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074")
}
func NewCT_Shape() *CT_Shape {
	_afdf := &CT_Shape{}
	_afdf.NvSpPr = NewCT_ShapeNonVisual()
	_afdf.SpPr = _c.NewCT_ShapeProperties()
	return _afdf
}
func NewCT_InOutTransition() *CT_InOutTransition { _ceac := &CT_InOutTransition{}; return _ceac }
func (_eebd *SldLayout) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074"
	return _eebd.CT_SlideLayout.MarshalXML(e, start)
}
func (_cfbcd *CT_TLAnimateRotationBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cfbcd.ByAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_cfbcd.ByAttr)})
	}
	if _cfbcd.FromAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_cfbcd.FromAttr)})
	}
	if _cfbcd.ToAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_cfbcd.ToAttr)})
	}
	e.EncodeToken(start)
	_eeffe := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_cfbcd.CBhvr, _eeffe)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dagd *CT_TransitionSoundAction) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fffae:
	for {
		_dgfae, _bafd := d.Token()
		if _bafd != nil {
			return _bafd
		}
		switch _gagdbe := _dgfae.(type) {
		case _d.StartElement:
			switch _gagdbe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}:
				_dagd.StSnd = NewCT_TransitionStartSoundAction()
				if _eacgb := d.DecodeElement(_dagd.StSnd, &_gagdbe); _eacgb != nil {
					return _eacgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}:
				_dagd.EndSnd = NewCT_Empty()
				if _fcce := d.DecodeElement(_dagd.EndSnd, &_gagdbe); _fcce != nil {
					return _fcce
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u006f\u0075\u006e\u0064\u0041c\u0074\u0069\u006f\u006e\u0020%\u0076", _gagdbe.Name)
				if _fbcbe := d.Skip(); _fbcbe != nil {
					return _fbcbe
				}
			}
		case _d.EndElement:
			break _fffae
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLCommandBehavior and its children
func (_fdgf *CT_TLCommandBehavior) Validate() error {
	return _fdgf.ValidateWithPath("C\u0054_\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006ed\u0042\u0065\u0068\u0061vi\u006f\u0072")
}
func (_gbab *CT_SlideViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gbab.CSldViewPr = NewCT_CommonSlideViewProperties()
_dccf:
	for {
		_ffbd, _ggdcg := d.Token()
		if _ggdcg != nil {
			return _ggdcg
		}
		switch _dadc := _ffbd.(type) {
		case _d.StartElement:
			switch _dadc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}:
				if _dgbebc := d.DecodeElement(_gbab.CSldViewPr, &_dadc); _dgbebc != nil {
					return _dgbebc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbab.ExtLst = NewCT_ExtensionList()
				if _feebd := d.DecodeElement(_gbab.ExtLst, &_dadc); _feebd != nil {
					return _feebd
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u006c\u0069\u0064e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dadc.Name)
				if _aadce := d.Skip(); _aadce != nil {
					return _aadce
				}
			}
		case _d.EndElement:
			break _dccf
		case _d.CharData:
		}
	}
	return nil
}
func (_fged *ST_TransitionEightDirectionType) ValidateWithPath(path string) error {
	_ffegd := []string{}
	if _fged.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		_ffegd = append(_ffegd, "\u0053\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e\u0053\u0069\u0064\u0065\u0044i\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065")
	}
	if _fged.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		_ffegd = append(_ffegd, "\u0053\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043\u006fr\u006ee\u0072\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065")
	}
	if len(_ffegd) > 1 {
		return _b.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ffegd)
	}
	return nil
}
func (_fbfcd ST_TransitionCornerDirectionType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cagcc := _d.Attr{}
	_cagcc.Name = name
	switch _fbfcd {
	case ST_TransitionCornerDirectionTypeUnset:
		_cagcc.Value = ""
	case ST_TransitionCornerDirectionTypeLu:
		_cagcc.Value = "\u006c\u0075"
	case ST_TransitionCornerDirectionTypeRu:
		_cagcc.Value = "\u0072\u0075"
	case ST_TransitionCornerDirectionTypeLd:
		_cagcc.Value = "\u006c\u0064"
	case ST_TransitionCornerDirectionTypeRd:
		_cagcc.Value = "\u0072\u0064"
	}
	return _cagcc, nil
}

// ValidateWithPath validates the EG_SlideListChoice and its children, prefixing error messages with path
func (_agce *EG_SlideListChoice) ValidateWithPath(path string) error {
	if _agce.SldAll != nil {
		if _fffbaa := _agce.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _fffbaa != nil {
			return _fffbaa
		}
	}
	if _agce.SldRg != nil {
		if _bebg := _agce.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _bebg != nil {
			return _bebg
		}
	}
	if _agce.CustShow != nil {
		if _aebdg := _agce.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _aebdg != nil {
			return _aebdg
		}
	}
	return nil
}
func NewCT_NormalViewProperties() *CT_NormalViewProperties {
	_fcbef := &CT_NormalViewProperties{}
	_fcbef.RestoredLeft = NewCT_NormalViewPortion()
	_fcbef.RestoredTop = NewCT_NormalViewPortion()
	return _fcbef
}
func NewCT_TLAnimateEffectBehavior() *CT_TLAnimateEffectBehavior {
	_efea := &CT_TLAnimateEffectBehavior{}
	_efea.CBhvr = NewCT_TLCommonBehaviorData()
	return _efea
}

type ST_TLPreviousActionType byte

func (_bdcgc ST_OleObjectFollowColorScheme) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_deeca := _d.Attr{}
	_deeca.Name = name
	switch _bdcgc {
	case ST_OleObjectFollowColorSchemeUnset:
		_deeca.Value = ""
	case ST_OleObjectFollowColorSchemeNone:
		_deeca.Value = "\u006e\u006f\u006e\u0065"
	case ST_OleObjectFollowColorSchemeFull:
		_deeca.Value = "\u0066\u0075\u006c\u006c"
	case ST_OleObjectFollowColorSchemeTextAndBackground:
		_deeca.Value = "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064"
	}
	return _deeca, nil
}
func NewCT_SlideRelationshipList() *CT_SlideRelationshipList {
	_cggg := &CT_SlideRelationshipList{}
	return _cggg
}

type ST_TransitionInOutDirectionType byte

// ValidateWithPath validates the CT_GuideList and its children, prefixing error messages with path
func (_beed *CT_GuideList) ValidateWithPath(path string) error {
	for _cfgc, _dbfdd := range _beed.Guide {
		if _eec := _dbfdd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fG\u0075\u0069\u0064\u0065\u005b\u0025\u0064\u005d", path, _cfgc)); _eec != nil {
			return _eec
		}
	}
	return nil
}
func (_accg *ST_TransitionSpeed) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_accg = 0
	case "\u0073\u006c\u006f\u0077":
		*_accg = 1
	case "\u006d\u0065\u0064":
		*_accg = 2
	case "\u0066\u0061\u0073\u0074":
		*_accg = 3
	}
	return nil
}

type CT_TLTimeNodeParallel struct {

	// Parallel TimeNode
	CTn *CT_TLCommonTimeNodeData
}
type CT_EmbeddedFontDataId struct{ IdAttr string }

func (_dbg *CT_EmbeddedFontDataId) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _dbg.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TransitionSideDirectionTypeUnset ST_TransitionSideDirectionType = 0
	ST_TransitionSideDirectionTypeL     ST_TransitionSideDirectionType = 1
	ST_TransitionSideDirectionTypeU     ST_TransitionSideDirectionType = 2
	ST_TransitionSideDirectionTypeR     ST_TransitionSideDirectionType = 3
	ST_TransitionSideDirectionTypeD     ST_TransitionSideDirectionType = 4
)

// ValidateWithPath validates the CT_ApplicationNonVisualDrawingProps and its children, prefixing error messages with path
func (_abg *CT_ApplicationNonVisualDrawingProps) ValidateWithPath(path string) error {
	if _abg.Ph != nil {
		if _ffca := _abg.Ph.ValidateWithPath(path + "\u002f\u0050\u0068"); _ffca != nil {
			return _ffca
		}
	}
	if _abg.AudioCd != nil {
		if _ebg := _abg.AudioCd.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0043\u0064"); _ebg != nil {
			return _ebg
		}
	}
	if _abg.WavAudioFile != nil {
		if _dgb := _abg.WavAudioFile.ValidateWithPath(path + "\u002f\u0057\u0061\u0076\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _dgb != nil {
			return _dgb
		}
	}
	if _abg.AudioFile != nil {
		if _dbd := _abg.AudioFile.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _dbd != nil {
			return _dbd
		}
	}
	if _abg.VideoFile != nil {
		if _dde := _abg.VideoFile.ValidateWithPath(path + "\u002f\u0056\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"); _dde != nil {
			return _dde
		}
	}
	if _abg.QuickTimeFile != nil {
		if _cbb := _abg.QuickTimeFile.ValidateWithPath(path + "\u002f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006de\u0046\u0069\u006c\u0065"); _cbb != nil {
			return _cbb
		}
	}
	if _abg.CustDataLst != nil {
		if _caf := _abg.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _caf != nil {
			return _caf
		}
	}
	if _abg.ExtLst != nil {
		if _eg := _abg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eg != nil {
			return _eg
		}
	}
	return nil
}
func (_ggba *CT_PrintProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ggba.PrnWhatAttr != ST_PrintWhatUnset {
		_bggdc, _eebee := _ggba.PrnWhatAttr.MarshalXMLAttr(_d.Name{Local: "\u0070r\u006e\u0057\u0068\u0061\u0074"})
		if _eebee != nil {
			return _eebee
		}
		start.Attr = append(start.Attr, _bggdc)
	}
	if _ggba.ClrModeAttr != ST_PrintColorModeUnset {
		_deeb, _febce := _ggba.ClrModeAttr.MarshalXMLAttr(_d.Name{Local: "\u0063l\u0072\u004d\u006f\u0064\u0065"})
		if _febce != nil {
			return _febce
		}
		start.Attr = append(start.Attr, _deeb)
	}
	if _ggba.HiddenSlidesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0053\u006c\u0069\u0064\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ggba.HiddenSlidesAttr))})
	}
	if _ggba.ScaleToFitPaperAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073c\u0061l\u0065\u0054\u006f\u0046\u0069\u0074\u0050\u0061\u0070\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ggba.ScaleToFitPaperAttr))})
	}
	if _ggba.FrameSlidesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "f\u0072\u0061\u006d\u0065\u0053\u006c\u0069\u0064\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ggba.FrameSlidesAttr))})
	}
	e.EncodeToken(start)
	if _ggba.ExtLst != nil {
		_aafb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggba.ExtLst, _aafb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLMediaNodeVideo() *CT_TLMediaNodeVideo {
	_fcaba := &CT_TLMediaNodeVideo{}
	_fcaba.CMediaNode = NewCT_TLCommonMediaNodeData()
	return _fcaba
}
func (_gdfb *CT_ConnectorNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_edg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_gdfb.CNvPr, _edg)
	_aaeg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063N\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_gdfb.CNvCxnSpPr, _aaeg)
	_ggf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_gdfb.NvPr, _ggf)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLTextTargetElement and its children
func (_gcec *CT_TLTextTargetElement) Validate() error {
	return _gcec.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074")
}
func (_ccefa ST_TLAnimateColorDirection) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ccefa.String(), start)
}
func NewCT_TLCommonMediaNodeData() *CT_TLCommonMediaNodeData {
	_ddfc := &CT_TLCommonMediaNodeData{}
	_ddfc.CTn = NewCT_TLCommonTimeNodeData()
	_ddfc.TgtEl = NewCT_TLTimeTargetElement()
	return _ddfc
}

// Validate validates the CT_Empty and its children
func (_ffgdfg *CT_Empty) Validate() error {
	return _ffgdfg.ValidateWithPath("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079")
}
func NewCT_SlideSorterViewProperties() *CT_SlideSorterViewProperties {
	_fcff := &CT_SlideSorterViewProperties{}
	_fcff.CViewPr = NewCT_CommonViewProperties()
	return _fcff
}
func (_eaaegg ST_TransitionSpeed) String() string {
	switch _eaaegg {
	case 0:
		return ""
	case 1:
		return "\u0073\u006c\u006f\u0077"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u0066\u0061\u0073\u0074"
	}
	return ""
}
func (_dedc *CT_ControlList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dedc.Control != nil {
		_gaef := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u006f\u006e\u0074\u0072\u006fl"}}
		for _, _eea := range _dedc.Control {
			e.EncodeElement(_eea, _gaef)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NotesMaster and its children
func (_efaa *CT_NotesMaster) Validate() error {
	return _efaa.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004da\u0073\u0074\u0065\u0072")
}
func ParseUnionST_Percentage(s string) (_c.ST_Percentage, error) {
	return _c.ParseUnionST_Percentage(s)
}

type ST_WebColorType byte

// Validate validates the Notes and its children
func (_debe *Notes) Validate() error { return _debe.ValidateWithPath("\u004e\u006f\u0074e\u0073") }
func (_eacg *CT_ShowInfoKiosk) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _edfc := range start.Attr {
		if _edfc.Name.Local == "\u0072e\u0073\u0074\u0061\u0072\u0074" {
			_aggad, _efbf := _ag.ParseUint(_edfc.Value, 10, 32)
			if _efbf != nil {
				return _efbf
			}
			_ffbb := uint32(_aggad)
			_eacg.RestartAttr = &_ffbb
			continue
		}
	}
	for {
		_bdbcd, _afff := d.Token()
		if _afff != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077I\u006ef\u006f\u004b\u0069\u006f\u0073\u006b\u003a \u0025\u0073", _afff)
		}
		if _adca, _ggecc := _bdbcd.(_d.EndElement); _ggecc && _adca.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_SlideMaster() *CT_SlideMaster {
	_bege := &CT_SlideMaster{}
	_bege.CSld = NewCT_CommonSlideData()
	_bege.ClrMap = _c.NewCT_ColorMapping()
	return _bege
}
func (_dagdc ST_TLParaBuildType) String() string {
	switch _dagdc {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 2:
		return "\u0070"
	case 3:
		return "\u0063\u0075\u0073\u0074"
	case 4:
		return "\u0077\u0068\u006fl\u0065"
	}
	return ""
}

// Validate validates the CT_CommonSlideViewProperties and its children
func (_gfd *CT_CommonSlideViewProperties) Validate() error {
	return _gfd.ValidateWithPath("\u0043\u0054\u005f\u0043o\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073")
}
func (_ebcgd *ST_TLTriggerEvent) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ebcgd = 0
	case "\u006fn\u0042\u0065\u0067\u0069\u006e":
		*_ebcgd = 1
	case "\u006f\u006e\u0045n\u0064":
		*_ebcgd = 2
	case "\u0062\u0065\u0067i\u006e":
		*_ebcgd = 3
	case "\u0065\u006e\u0064":
		*_ebcgd = 4
	case "\u006fn\u0043\u006c\u0069\u0063\u006b":
		*_ebcgd = 5
	case "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b":
		*_ebcgd = 6
	case "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072":
		*_ebcgd = 7
	case "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074":
		*_ebcgd = 8
	case "\u006f\u006e\u004e\u0065\u0078\u0074":
		*_ebcgd = 9
	case "\u006f\u006e\u0050\u0072\u0065\u0076":
		*_ebcgd = 10
	case "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f":
		*_ebcgd = 11
	}
	return nil
}

// Validate validates the CT_TLBehaviorAttributeNameList and its children
func (_dfacf *CT_TLBehaviorAttributeNameList) Validate() error {
	return _dfacf.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076i\u006f\u0072\u0041\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u004e\u0061\u006d\u0065\u004c\u0069\u0073\u0074")
}

type ST_TLNextActionType byte

func (_agfd *CT_TLTimeAnimateValueList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _agfd.Tav != nil {
		_fgbeg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074a\u0076"}}
		for _, _fgbgb := range _agfd.Tav {
			e.EncodeElement(_fgbgb, _fgbeg)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_CommentList struct {

	// Comment
	Cm []*CT_Comment
}

// ValidateWithPath validates the CT_CustomShow and its children, prefixing error messages with path
func (_ecdc *CT_CustomShow) ValidateWithPath(path string) error {
	if _bgc := _ecdc.SldLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u004c\u0073\u0074"); _bgc != nil {
		return _bgc
	}
	if _ecdc.ExtLst != nil {
		if _aga := _ecdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aga != nil {
			return _aga
		}
	}
	return nil
}
func NewCT_GuideList() *CT_GuideList { _edfa := &CT_GuideList{}; return _edfa }

type CT_GraphicalObjectFrameNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_c.CT_NonVisualDrawingProps

	// Non-Visual Graphic Frame Drawing Properties
	CNvGraphicFramePr *_c.CT_NonVisualGraphicFrameProperties

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_cgbge *CT_TLAnimVariantIntegerVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ggdcd := range start.Attr {
		if _ggdcd.Name.Local == "\u0076\u0061\u006c" {
			_fceg, _agfca := _ag.ParseInt(_ggdcd.Value, 10, 32)
			if _agfca != nil {
				return _agfca
			}
			_cgbge.ValAttr = int32(_fceg)
			continue
		}
	}
	for {
		_cefc, _bebcd := d.Token()
		if _bebcd != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074I\u006e\u0074\u0065\u0067\u0065r\u0056\u0061l\u003a\u0020\u0025\u0073", _bebcd)
		}
		if _eebc, _cdfc := _cefc.(_d.EndElement); _cdfc && _eebc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bcfb *CT_ShowInfoKiosk) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bcfb.RestartAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072e\u0073\u0074\u0061\u0072\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bcfb.RestartAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dcag ST_TLNextActionType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_aaee := _d.Attr{}
	_aaee.Name = name
	switch _dcag {
	case ST_TLNextActionTypeUnset:
		_aaee.Value = ""
	case ST_TLNextActionTypeNone:
		_aaee.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLNextActionTypeSeek:
		_aaee.Value = "\u0073\u0065\u0065\u006b"
	}
	return _aaee, nil
}
func (_ddcc ST_TransitionSideDirectionType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_geedgc := _d.Attr{}
	_geedgc.Name = name
	switch _ddcc {
	case ST_TransitionSideDirectionTypeUnset:
		_geedgc.Value = ""
	case ST_TransitionSideDirectionTypeL:
		_geedgc.Value = "\u006c"
	case ST_TransitionSideDirectionTypeU:
		_geedgc.Value = "\u0075"
	case ST_TransitionSideDirectionTypeR:
		_geedgc.Value = "\u0072"
	case ST_TransitionSideDirectionTypeD:
		_geedgc.Value = "\u0064"
	}
	return _geedgc, nil
}
func NewCT_ControlList() *CT_ControlList { _ddc := &CT_ControlList{}; return _ddc }
func NewCT_OptionalBlackTransition() *CT_OptionalBlackTransition {
	_fdba := &CT_OptionalBlackTransition{}
	return _fdba
}
func NewCT_Guide() *CT_Guide { _fcea := &CT_Guide{}; return _fcea }
func (_fecb *CT_OleObjectEmbed) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fbgf := range start.Attr {
		if _fbgf.Name.Local == "\u0066\u006f\u006c\u006c\u006f\u0077\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065" {
			_fecb.FollowColorSchemeAttr.UnmarshalXMLAttr(_fbgf)
			continue
		}
	}
_fafcf:
	for {
		_cagc, _eaefd := d.Token()
		if _eaefd != nil {
			return _eaefd
		}
		switch _fded := _cagc.(type) {
		case _d.StartElement:
			switch _fded.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fecb.ExtLst = NewCT_ExtensionList()
				if _faee := d.DecodeElement(_fecb.ExtLst, &_fded); _faee != nil {
					return _faee
				}
			default:
				_be.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0045\u006d\u0062\u0065\u0064\u0020\u0025\u0076", _fded.Name)
				if _gfeec := d.Skip(); _gfeec != nil {
					return _gfeec
				}
			}
		case _d.EndElement:
			break _fafcf
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLTimeCondition and its children
func (_cgdab *CT_TLTimeCondition) Validate() error {
	return _cgdab.ValidateWithPath("\u0043T\u005fT\u004c\u0054\u0069\u006d\u0065C\u006f\u006ed\u0069\u0074\u0069\u006f\u006e")
}
func (_gddee *Sld) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0073l\u0064"
	return _gddee.CT_Slide.MarshalXML(e, start)
}
func NewCT_TLTimeTargetElement() *CT_TLTimeTargetElement {
	_cecab := &CT_TLTimeTargetElement{}
	return _cecab
}
func (_gfcd *CT_ShowInfoBrowse) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gfcd.ShowScrollbarAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0063\u0072\u006f\u006c\u006c\u0062\u0061\u0072"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gfcd.ShowScrollbarAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OutlineViewSlideList and its children
func (_eaefg *CT_OutlineViewSlideList) Validate() error {
	return _eaefg.ValidateWithPath("\u0043\u0054\u005fOu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0053\u006c\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}

type CT_OleObject struct {

	// Embedded Object ProgID
	ProgIdAttr     *string
	Choice         *CT_OleObjectChoice
	Pic            *CT_Picture
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

// Validate validates the CT_TLAnimVariantFloatVal and its children
func (_caegf *CT_TLAnimVariantFloatVal) Validate() error {
	return _caegf.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c")
}
func (_daca *CT_Kinsoku) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bgdf := range start.Attr {
		if _bgdf.Name.Local == "\u006c\u0061\u006e\u0067" {
			_fgbd, _efga := _bgdf.Value, error(nil)
			if _efga != nil {
				return _efga
			}
			_daca.LangAttr = &_fgbd
			continue
		}
		if _bgdf.Name.Local == "\u0069\u006e\u0076a\u006c\u0053\u0074\u0043\u0068\u0061\u0072\u0073" {
			_ecga, _fgabe := _bgdf.Value, error(nil)
			if _fgabe != nil {
				return _fgabe
			}
			_daca.InvalStCharsAttr = _ecga
			continue
		}
		if _bgdf.Name.Local == "\u0069\u006e\u0076\u0061\u006c\u0045\u006e\u0064\u0043\u0068\u0061\u0072\u0073" {
			_eedbc, _ccce := _bgdf.Value, error(nil)
			if _ccce != nil {
				return _ccce
			}
			_daca.InvalEndCharsAttr = _eedbc
			continue
		}
	}
	for {
		_cbgg, _aafa := d.Token()
		if _aafa != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075\u003a\u0020%\u0073", _aafa)
		}
		if _dgga, _bdggf := _cbgg.(_d.EndElement); _bdggf && _dgga.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gdde *CT_CommonSlideViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gdde.SnapToGridAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u006e\u0061\u0070\u0054\u006f\u0047\u0072\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gdde.SnapToGridAttr))})
	}
	if _gdde.SnapToObjectsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u006e\u0061\u0070\u0054\u006f\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gdde.SnapToObjectsAttr))})
	}
	if _gdde.ShowGuidesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0075\u0069\u0064\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gdde.ShowGuidesAttr))})
	}
	e.EncodeToken(start)
	_fdcb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_gdde.CViewPr, _fdcb)
	if _gdde.GuideLst != nil {
		_dfd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_gdde.GuideLst, _dfd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gade *CT_GroupShapeNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gade.CNvPr = _c.NewCT_NonVisualDrawingProps()
	_gade.CNvGrpSpPr = _c.NewCT_NonVisualGroupDrawingShapeProps()
	_gade.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_dcaa:
	for {
		_fdde, _bded := d.Token()
		if _bded != nil {
			return _bded
		}
		switch _dfdf := _fdde.(type) {
		case _d.StartElement:
			switch _dfdf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _bdc := d.DecodeElement(_gade.CNvPr, &_dfdf); _bdc != nil {
					return _bdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _fcaf := d.DecodeElement(_gade.CNvGrpSpPr, &_dfdf); _fcaf != nil {
					return _fcaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _gbbe := d.DecodeElement(_gade.NvPr, &_dfdf); _gbbe != nil {
					return _gbbe
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _dfdf.Name)
				if _fdec := d.Skip(); _fdec != nil {
					return _fdec
				}
			}
		case _d.EndElement:
			break _dcaa
		case _d.CharData:
		}
	}
	return nil
}
func (_ffdfg *CT_TLMediaNodeAudio) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ffdfg.CMediaNode = NewCT_TLCommonMediaNodeData()
	for _, _abggf := range start.Attr {
		if _abggf.Name.Local == "i\u0073\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e" {
			_bebca, _aega := _ag.ParseBool(_abggf.Value)
			if _aega != nil {
				return _aega
			}
			_ffdfg.IsNarrationAttr = &_bebca
			continue
		}
	}
_ggfgb:
	for {
		_fgbec, _bbcb := d.Token()
		if _bbcb != nil {
			return _bbcb
		}
		switch _fgfgb := _fgbec.(type) {
		case _d.StartElement:
			switch _fgfgb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}:
				if _bgfcd := d.DecodeElement(_ffdfg.CMediaNode, &_fgfgb); _bgfcd != nil {
					return _bgfcd
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u004d\u0065\u0064\u0069\u0061No\u0064\u0065\u0041\u0075\u0064\u0069\u006f\u0020\u0025\u0076", _fgfgb.Name)
				if _dggbe := d.Skip(); _dggbe != nil {
					return _dggbe
				}
			}
		case _d.EndElement:
			break _ggfgb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLGraphicalObjectBuild and its children, prefixing error messages with path
func (_dafdb *CT_TLGraphicalObjectBuild) ValidateWithPath(path string) error {
	if _dafdb.BldAsOne != nil {
		if _fadcg := _dafdb.BldAsOne.ValidateWithPath(path + "\u002fB\u006c\u0064\u0041\u0073\u004f\u006ee"); _fadcg != nil {
			return _fadcg
		}
	}
	if _dafdb.BldSub != nil {
		if _fefa := _dafdb.BldSub.ValidateWithPath(path + "\u002fB\u006c\u0064\u0053\u0075\u0062"); _fefa != nil {
			return _fefa
		}
	}
	return nil
}
func (_bgfae ST_SlideSizeType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bgfbbb := _d.Attr{}
	_bgfbbb.Name = name
	switch _bgfae {
	case ST_SlideSizeTypeUnset:
		_bgfbbb.Value = ""
	case ST_SlideSizeTypeScreen4x3:
		_bgfbbb.Value = "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783"
	case ST_SlideSizeTypeLetter:
		_bgfbbb.Value = "\u006c\u0065\u0074\u0074\u0065\u0072"
	case ST_SlideSizeTypeA4:
		_bgfbbb.Value = "\u0041\u0034"
	case ST_SlideSizeType35mm:
		_bgfbbb.Value = "\u0033\u0035\u006d\u006d"
	case ST_SlideSizeTypeOverhead:
		_bgfbbb.Value = "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064"
	case ST_SlideSizeTypeBanner:
		_bgfbbb.Value = "\u0062\u0061\u006e\u006e\u0065\u0072"
	case ST_SlideSizeTypeCustom:
		_bgfbbb.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	case ST_SlideSizeTypeLedger:
		_bgfbbb.Value = "\u006c\u0065\u0064\u0067\u0065\u0072"
	case ST_SlideSizeTypeA3:
		_bgfbbb.Value = "\u0041\u0033"
	case ST_SlideSizeTypeB4ISO:
		_bgfbbb.Value = "\u0042\u0034\u0049S\u004f"
	case ST_SlideSizeTypeB5ISO:
		_bgfbbb.Value = "\u0042\u0035\u0049S\u004f"
	case ST_SlideSizeTypeB4JIS:
		_bgfbbb.Value = "\u0042\u0034\u004aI\u0053"
	case ST_SlideSizeTypeB5JIS:
		_bgfbbb.Value = "\u0042\u0035\u004aI\u0053"
	case ST_SlideSizeTypeHagakiCard:
		_bgfbbb.Value = "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064"
	case ST_SlideSizeTypeScreen16x9:
		_bgfbbb.Value = "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039"
	case ST_SlideSizeTypeScreen16x10:
		_bgfbbb.Value = "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030"
	}
	return _bgfbbb, nil
}
func (_ga *AG_ChildSlide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ga.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ga.ShowMasterSpAttr))})
	}
	if _ga.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ga.ShowMasterPhAnimAttr))})
	}
	return nil
}

// ValidateWithPath validates the AG_TLBuild and its children, prefixing error messages with path
func (_de *AG_TLBuild) ValidateWithPath(path string) error { return nil }
func (_fcgag ST_TLParaBuildType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_aadedc := _d.Attr{}
	_aadedc.Name = name
	switch _fcgag {
	case ST_TLParaBuildTypeUnset:
		_aadedc.Value = ""
	case ST_TLParaBuildTypeAllAtOnce:
		_aadedc.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLParaBuildTypeP:
		_aadedc.Value = "\u0070"
	case ST_TLParaBuildTypeCust:
		_aadedc.Value = "\u0063\u0075\u0073\u0074"
	case ST_TLParaBuildTypeWhole:
		_aadedc.Value = "\u0077\u0068\u006fl\u0065"
	}
	return _aadedc, nil
}
func (_ecgdf *CT_TLCommonTimeNodeData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ecgdf.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.IdAttr)})
	}
	if _ecgdf.PresetIDAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0074\u0049\u0044"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.PresetIDAttr)})
	}
	if _ecgdf.PresetClassAttr != ST_TLTimeNodePresetClassTypeUnset {
		_fadce, _fcdbf := _ecgdf.PresetClassAttr.MarshalXMLAttr(_d.Name{Local: "p\u0072\u0065\u0073\u0065\u0074\u0043\u006c\u0061\u0073\u0073"})
		if _fcdbf != nil {
			return _fcdbf
		}
		start.Attr = append(start.Attr, _fadce)
	}
	if _ecgdf.PresetSubtypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0074\u0053\u0075\u0062\u0074\u0079\u0070\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.PresetSubtypeAttr)})
	}
	if _ecgdf.DurAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0075\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.DurAttr)})
	}
	if _ecgdf.RepeatCountAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "r\u0065\u0070\u0065\u0061\u0074\u0043\u006f\u0075\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.RepeatCountAttr)})
	}
	if _ecgdf.RepeatDurAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072e\u0070\u0065\u0061\u0074\u0044\u0075r"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.RepeatDurAttr)})
	}
	if _ecgdf.SpdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.SpdAttr)})
	}
	if _ecgdf.AccelAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0063\u0063e\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.AccelAttr)})
	}
	if _ecgdf.DecelAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0065\u0063e\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.DecelAttr)})
	}
	if _ecgdf.AutoRevAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061u\u0074\u006f\u0052\u0065\u0076"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ecgdf.AutoRevAttr))})
	}
	if _ecgdf.RestartAttr != ST_TLTimeNodeRestartTypeUnset {
		_ddbcd, _gcfde := _ecgdf.RestartAttr.MarshalXMLAttr(_d.Name{Local: "\u0072e\u0073\u0074\u0061\u0072\u0074"})
		if _gcfde != nil {
			return _gcfde
		}
		start.Attr = append(start.Attr, _ddbcd)
	}
	if _ecgdf.FillAttr != ST_TLTimeNodeFillTypeUnset {
		_ddeca, _gadb := _ecgdf.FillAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u0069\u006c\u006c"})
		if _gadb != nil {
			return _gadb
		}
		start.Attr = append(start.Attr, _ddeca)
	}
	if _ecgdf.SyncBehaviorAttr != ST_TLTimeNodeSyncTypeUnset {
		_faeed, _aefdf := _ecgdf.SyncBehaviorAttr.MarshalXMLAttr(_d.Name{Local: "\u0073\u0079\u006ec\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072"})
		if _aefdf != nil {
			return _aefdf
		}
		start.Attr = append(start.Attr, _faeed)
	}
	if _ecgdf.TmFilterAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.TmFilterAttr)})
	}
	if _ecgdf.EvtFilterAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065v\u0074\u0046\u0069\u006c\u0074\u0065r"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.EvtFilterAttr)})
	}
	if _ecgdf.DisplayAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064i\u0073\u0070\u006c\u0061\u0079"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ecgdf.DisplayAttr))})
	}
	if _ecgdf.MasterRelAttr != ST_TLTimeNodeMasterRelationUnset {
		_fcbeg, _dbacf := _ecgdf.MasterRelAttr.MarshalXMLAttr(_d.Name{Local: "\u006da\u0073\u0074\u0065\u0072\u0052\u0065l"})
		if _dbacf != nil {
			return _dbacf
		}
		start.Attr = append(start.Attr, _fcbeg)
	}
	if _ecgdf.BldLvlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u006c\u0064\u004c\u0076\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.BldLvlAttr)})
	}
	if _ecgdf.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdf.GrpIdAttr)})
	}
	if _ecgdf.AfterEffectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ecgdf.AfterEffectAttr))})
	}
	if _ecgdf.NodeTypeAttr != ST_TLTimeNodeTypeUnset {
		_ffcae, _bfef := _ecgdf.NodeTypeAttr.MarshalXMLAttr(_d.Name{Local: "\u006e\u006f\u0064\u0065\u0054\u0079\u0070\u0065"})
		if _bfef != nil {
			return _bfef
		}
		start.Attr = append(start.Attr, _ffcae)
	}
	if _ecgdf.NodePhAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0064\u0065\u0050\u0068"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ecgdf.NodePhAttr))})
	}
	e.EncodeToken(start)
	if _ecgdf.StCondLst != nil {
		_bdad := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0073\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_ecgdf.StCondLst, _bdad)
	}
	if _ecgdf.EndCondLst != nil {
		_fdebf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065n\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_ecgdf.EndCondLst, _fdebf)
	}
	if _ecgdf.EndSync != nil {
		_bbabe := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0065\u006e\u0064\u0053\u0079\u006ec"}}
		e.EncodeElement(_ecgdf.EndSync, _bbabe)
	}
	if _ecgdf.Iterate != nil {
		_fdbfc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0069\u0074\u0065\u0072\u0061\u0074e"}}
		e.EncodeElement(_ecgdf.Iterate, _fdbfc)
	}
	if _ecgdf.ChildTnLst != nil {
		_bcfa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063h\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_ecgdf.ChildTnLst, _bcfa)
	}
	if _ecgdf.SubTnLst != nil {
		_aada := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_ecgdf.SubTnLst, _aada)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_agfg *CT_CommonSlideData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_agfg.SpTree = NewCT_GroupShape()
	for _, _cfda := range start.Attr {
		if _cfda.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fge, _gbdg := _cfda.Value, error(nil)
			if _gbdg != nil {
				return _gbdg
			}
			_agfg.NameAttr = &_fge
			continue
		}
	}
_cde:
	for {
		_dfefe, _bbg := d.Token()
		if _bbg != nil {
			return _bbg
		}
		switch _dacd := _dfefe.(type) {
		case _d.StartElement:
			switch _dacd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
				_agfg.Bg = NewCT_Background()
				if _caadb := d.DecodeElement(_agfg.Bg, &_dacd); _caadb != nil {
					return _caadb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054\u0072\u0065\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054\u0072\u0065\u0065"}:
				if _ebfg := d.DecodeElement(_agfg.SpTree, &_dacd); _ebfg != nil {
					return _ebfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_agfg.CustDataLst = NewCT_CustomerDataList()
				if _faaa := d.DecodeElement(_agfg.CustDataLst, &_dacd); _faaa != nil {
					return _faaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_agfg.Controls = NewCT_ControlList()
				if _ebbc := d.DecodeElement(_agfg.Controls, &_dacd); _ebbc != nil {
					return _ebbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agfg.ExtLst = NewCT_ExtensionList()
				if _befed := d.DecodeElement(_agfg.ExtLst, &_dacd); _befed != nil {
					return _befed
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006eS\u006c\u0069\u0064\u0065\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _dacd.Name)
				if _cdf := d.Skip(); _cdf != nil {
					return _cdf
				}
			}
		case _d.EndElement:
			break _cde
		case _d.CharData:
		}
	}
	return nil
}
func (_agegf *CT_SlideTiming) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bdgd:
	for {
		_ddebf, _gacfd := d.Token()
		if _gacfd != nil {
			return _gacfd
		}
		switch _acff := _ddebf.(type) {
		case _d.StartElement:
			switch _acff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}:
				_agegf.TnLst = NewCT_TimeNodeList()
				if _bgae := d.DecodeElement(_agegf.TnLst, &_acff); _bgae != nil {
					return _bgae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u004c\u0073\u0074"}:
				_agegf.BldLst = NewCT_BuildList()
				if _gabe := d.DecodeElement(_agegf.BldLst, &_acff); _gabe != nil {
					return _gabe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agegf.ExtLst = NewCT_ExtensionListModify()
				if _faafg := d.DecodeElement(_agegf.ExtLst, &_acff); _faafg != nil {
					return _faafg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0069m\u0069n\u0067\u0020\u0025\u0076", _acff.Name)
				if _egbb := d.Skip(); _egbb != nil {
					return _egbb
				}
			}
		case _d.EndElement:
			break _bdgd
		case _d.CharData:
		}
	}
	return nil
}

type ST_PrintColorMode byte

// Validate validates the CT_OrientationTransition and its children
func (_bagg *CT_OrientationTransition) Validate() error {
	return _bagg.ValidateWithPath("\u0043T\u005f\u004f\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_NormalViewProperties and its children
func (_bgcga *CT_NormalViewProperties) Validate() error {
	return _bgcga.ValidateWithPath("\u0043\u0054\u005fNo\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

const (
	ST_SlideLayoutTypeUnset                   ST_SlideLayoutType = 0
	ST_SlideLayoutTypeTitle                   ST_SlideLayoutType = 1
	ST_SlideLayoutTypeTx                      ST_SlideLayoutType = 2
	ST_SlideLayoutTypeTwoColTx                ST_SlideLayoutType = 3
	ST_SlideLayoutTypeTbl                     ST_SlideLayoutType = 4
	ST_SlideLayoutTypeTxAndChart              ST_SlideLayoutType = 5
	ST_SlideLayoutTypeChartAndTx              ST_SlideLayoutType = 6
	ST_SlideLayoutTypeDgm                     ST_SlideLayoutType = 7
	ST_SlideLayoutTypeChart                   ST_SlideLayoutType = 8
	ST_SlideLayoutTypeTxAndClipArt            ST_SlideLayoutType = 9
	ST_SlideLayoutTypeClipArtAndTx            ST_SlideLayoutType = 10
	ST_SlideLayoutTypeTitleOnly               ST_SlideLayoutType = 11
	ST_SlideLayoutTypeBlank                   ST_SlideLayoutType = 12
	ST_SlideLayoutTypeTxAndObj                ST_SlideLayoutType = 13
	ST_SlideLayoutTypeObjAndTx                ST_SlideLayoutType = 14
	ST_SlideLayoutTypeObjOnly                 ST_SlideLayoutType = 15
	ST_SlideLayoutTypeObj                     ST_SlideLayoutType = 16
	ST_SlideLayoutTypeTxAndMedia              ST_SlideLayoutType = 17
	ST_SlideLayoutTypeMediaAndTx              ST_SlideLayoutType = 18
	ST_SlideLayoutTypeObjOverTx               ST_SlideLayoutType = 19
	ST_SlideLayoutTypeTxOverObj               ST_SlideLayoutType = 20
	ST_SlideLayoutTypeTxAndTwoObj             ST_SlideLayoutType = 21
	ST_SlideLayoutTypeTwoObjAndTx             ST_SlideLayoutType = 22
	ST_SlideLayoutTypeTwoObjOverTx            ST_SlideLayoutType = 23
	ST_SlideLayoutTypeFourObj                 ST_SlideLayoutType = 24
	ST_SlideLayoutTypeVertTx                  ST_SlideLayoutType = 25
	ST_SlideLayoutTypeClipArtAndVertTx        ST_SlideLayoutType = 26
	ST_SlideLayoutTypeVertTitleAndTx          ST_SlideLayoutType = 27
	ST_SlideLayoutTypeVertTitleAndTxOverChart ST_SlideLayoutType = 28
	ST_SlideLayoutTypeTwoObj                  ST_SlideLayoutType = 29
	ST_SlideLayoutTypeObjAndTwoObj            ST_SlideLayoutType = 30
	ST_SlideLayoutTypeTwoObjAndObj            ST_SlideLayoutType = 31
	ST_SlideLayoutTypeCust                    ST_SlideLayoutType = 32
	ST_SlideLayoutTypeSecHead                 ST_SlideLayoutType = 33
	ST_SlideLayoutTypeTwoTxTwoObj             ST_SlideLayoutType = 34
	ST_SlideLayoutTypeObjTx                   ST_SlideLayoutType = 35
	ST_SlideLayoutTypePicTx                   ST_SlideLayoutType = 36
)

// Validate validates the CT_CustomerData and its children
func (_daba *CT_CustomerData) Validate() error {
	return _daba.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061")
}
func (_fdbae *CT_SmartTags) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ebbf := range start.Attr {
		if _ebbf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ebbf.Name.Local == "\u0069\u0064" || _ebbf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ebbf.Name.Local == "\u0069\u0064" {
			_ggcf, _aebcf := _ebbf.Value, error(nil)
			if _aebcf != nil {
				return _aebcf
			}
			_fdbae.IdAttr = _ggcf
			continue
		}
	}
	for {
		_dfbgb, _bdgfe := d.Token()
		if _bdgfe != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006da\u0072\u0074\u0054\u0061\u0067\u0073\u003a\u0020\u0025\u0073", _bdgfe)
		}
		if _fdada, _daeb := _dfbgb.(_d.EndElement); _daeb && _fdada.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TLAnimateScaleBehavior struct {

	// Zoom Content
	ZoomContentsAttr *bool
	CBhvr            *CT_TLCommonBehaviorData

	// By
	By   *CT_TLPoint
	From *CT_TLPoint

	// To
	To *CT_TLPoint
}
type TagLst struct{ CT_TagList }

func (_gfbaf *EG_SlideListChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gfbaf.SldAll != nil {
		_feccf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_gfbaf.SldAll, _feccf)
	}
	if _gfbaf.SldRg != nil {
		_gdbb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_gfbaf.SldRg, _gdbb)
	}
	if _gfbaf.CustShow != nil {
		_abcga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_gfbaf.CustShow, _abcga)
	}
	return nil
}
func NewEG_TopLevelSlide() *EG_TopLevelSlide {
	_bbgga := &EG_TopLevelSlide{}
	_bbgga.ClrMap = _c.NewCT_ColorMapping()
	return _bbgga
}

// ValidateWithPath validates the CT_ModifyVerifier and its children, prefixing error messages with path
func (_begd *CT_ModifyVerifier) ValidateWithPath(path string) error {
	if _fefe := _begd.CryptProviderTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0072\u0079pt\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u0054\u0079\u0070\u0065\u0041\u0074t\u0072"); _fefe != nil {
		return _fefe
	}
	if _eaef := _begd.CryptAlgorithmClassAttr.ValidateWithPath(path + "\u002fC\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0043\u006c\u0061\u0073\u0073\u0041\u0074\u0074\u0072"); _eaef != nil {
		return _eaef
	}
	if _gaafg := _begd.CryptAlgorithmTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0072yp\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _gaafg != nil {
		return _gaafg
	}
	return nil
}

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_geef *CT_Extension) ValidateWithPath(path string) error { return nil }
func (_abdff ST_TLAnimateMotionPathEditMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_abfb := _d.Attr{}
	_abfb.Name = name
	switch _abdff {
	case ST_TLAnimateMotionPathEditModeUnset:
		_abfb.Value = ""
	case ST_TLAnimateMotionPathEditModeRelative:
		_abfb.Value = "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"
	case ST_TLAnimateMotionPathEditModeFixed:
		_abfb.Value = "\u0066\u0069\u0078e\u0064"
	}
	return _abfb, nil
}

// Validate validates the CT_InOutTransition and its children
func (_addb *CT_InOutTransition) Validate() error {
	return _addb.ValidateWithPath("\u0043T\u005fI\u006e\u004f\u0075\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_TLAnimVariantIntegerVal and its children
func (_fdge *CT_TLAnimVariantIntegerVal) Validate() error {
	return _fdge.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0049\u006e\u0074\u0065\u0067\u0065r\u0056\u0061\u006c")
}
func (_ffe *CT_Picture) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ffe.NvPicPr = NewCT_PictureNonVisual()
	_ffe.BlipFill = _c.NewCT_BlipFillProperties()
	_ffe.SpPr = _c.NewCT_ShapeProperties()
_cged:
	for {
		_cgdbb, _dafdag := d.Token()
		if _dafdag != nil {
			return _dafdag
		}
		switch _eaaf := _cgdbb.(type) {
		case _d.StartElement:
			switch _eaaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _abdgd := d.DecodeElement(_ffe.NvPicPr, &_eaaf); _abdgd != nil {
					return _abdgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _ffcfc := d.DecodeElement(_ffe.BlipFill, &_eaaf); _ffcfc != nil {
					return _ffcfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _adbe := d.DecodeElement(_ffe.SpPr, &_eaaf); _adbe != nil {
					return _adbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_ffe.Style = _c.NewCT_ShapeStyle()
				if _dgcf := d.DecodeElement(_ffe.Style, &_eaaf); _dgcf != nil {
					return _dgcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffe.ExtLst = NewCT_ExtensionListModify()
				if _cbac := d.DecodeElement(_ffe.ExtLst, &_eaaf); _cbac != nil {
					return _cbac
				}
			default:
				_be.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _eaaf.Name)
				if _ebfc := d.Skip(); _ebfc != nil {
					return _ebfc
				}
			}
		case _d.EndElement:
			break _cged
		case _d.CharData:
		}
	}
	return nil
}
func (_dacaa ST_PlaceholderType) String() string {
	switch _dacaa {
	case 0:
		return ""
	case 1:
		return "\u0074\u0069\u0074l\u0065"
	case 2:
		return "\u0062\u006f\u0064\u0079"
	case 3:
		return "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065"
	case 4:
		return "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065"
	case 5:
		return "\u0064\u0074"
	case 6:
		return "\u0073\u006c\u0064\u004e\u0075\u006d"
	case 7:
		return "\u0066\u0074\u0072"
	case 8:
		return "\u0068\u0064\u0072"
	case 9:
		return "\u006f\u0062\u006a"
	case 10:
		return "\u0063\u0068\u0061r\u0074"
	case 11:
		return "\u0074\u0062\u006c"
	case 12:
		return "\u0063l\u0069\u0070\u0041\u0072\u0074"
	case 13:
		return "\u0064\u0067\u006d"
	case 14:
		return "\u006d\u0065\u0064i\u0061"
	case 15:
		return "\u0073\u006c\u0064\u0049\u006d\u0067"
	case 16:
		return "\u0070\u0069\u0063"
	}
	return ""
}

// ValidateWithPath validates the CT_TLAnimVariant and its children, prefixing error messages with path
func (_gfbdg *CT_TLAnimVariant) ValidateWithPath(path string) error {
	if _gfbdg.BoolVal != nil {
		if _babaa := _gfbdg.BoolVal.ValidateWithPath(path + "\u002f\u0042\u006f\u006f\u006c\u0056\u0061\u006c"); _babaa != nil {
			return _babaa
		}
	}
	if _gfbdg.IntVal != nil {
		if _ddeg := _gfbdg.IntVal.ValidateWithPath(path + "\u002fI\u006e\u0074\u0056\u0061\u006c"); _ddeg != nil {
			return _ddeg
		}
	}
	if _gfbdg.FltVal != nil {
		if _bacgf := _gfbdg.FltVal.ValidateWithPath(path + "\u002fF\u006c\u0074\u0056\u0061\u006c"); _bacgf != nil {
			return _bacgf
		}
	}
	if _gfbdg.StrVal != nil {
		if _fcabd := _gfbdg.StrVal.ValidateWithPath(path + "\u002fS\u0074\u0072\u0056\u0061\u006c"); _fcabd != nil {
			return _fcabd
		}
	}
	if _gfbdg.ClrVal != nil {
		if _ggfab := _gfbdg.ClrVal.ValidateWithPath(path + "\u002fC\u006c\u0072\u0056\u0061\u006c"); _ggfab != nil {
			return _ggfab
		}
	}
	return nil
}

// ValidateWithPath validates the AG_Ole and its children, prefixing error messages with path
func (_cce *AG_Ole) ValidateWithPath(path string) error {
	if _cce.ImgWAttr != nil {
		if *_cce.ImgWAttr < 0 {
			return _b.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cce.ImgWAttr)
		}
	}
	if _cce.ImgHAttr != nil {
		if *_cce.ImgHAttr < 0 {
			return _b.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cce.ImgHAttr)
		}
	}
	return nil
}

// Validate validates the CT_TLOleBuildChart and its children
func (_bccc *CT_TLOleBuildChart) Validate() error {
	return _bccc.ValidateWithPath("\u0043T\u005fT\u004c\u004f\u006c\u0065\u0042u\u0069\u006cd\u0043\u0068\u0061\u0072\u0074")
}

type CT_GroupShape struct {

	// Non-Visual Properties for a Group Shape
	NvGrpSpPr *CT_GroupShapeNonVisual

	// Group Shape Properties
	GrpSpPr *_c.CT_GroupShapeProperties
	Choice  []*CT_GroupShapeChoice
	ExtLst  *CT_ExtensionListModify
}

// ValidateWithPath validates the CT_NormalViewProperties and its children, prefixing error messages with path
func (_ecge *CT_NormalViewProperties) ValidateWithPath(path string) error {
	if _dafda := _ecge.VertBarStateAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0042\u0061\u0072\u0053\u0074\u0061\u0074e\u0041\u0074\u0074\u0072"); _dafda != nil {
		return _dafda
	}
	if _egff := _ecge.HorzBarStateAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u0042\u0061\u0072\u0053\u0074\u0061\u0074e\u0041\u0074\u0074\u0072"); _egff != nil {
		return _egff
	}
	if _gdcfb := _ecge.RestoredLeft.ValidateWithPath(path + "\u002f\u0052\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"); _gdcfb != nil {
		return _gdcfb
	}
	if _edde := _ecge.RestoredTop.ValidateWithPath(path + "\u002f\u0052\u0065s\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"); _edde != nil {
		return _edde
	}
	if _ecge.ExtLst != nil {
		if _gcgcf := _ecge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gcgcf != nil {
			return _gcgcf
		}
	}
	return nil
}
func (_decga *CT_TLTimeNodeSequence) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _decga.ConcurrentAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006e\u0074"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_decga.ConcurrentAttr))})
	}
	if _decga.PrevAcAttr != ST_TLPreviousActionTypeUnset {
		_eaedg, _cggf := _decga.PrevAcAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0065\u0076\u0041\u0063"})
		if _cggf != nil {
			return _cggf
		}
		start.Attr = append(start.Attr, _eaedg)
	}
	if _decga.NextAcAttr != ST_TLNextActionTypeUnset {
		_gfbad, _fegbe := _decga.NextAcAttr.MarshalXMLAttr(_d.Name{Local: "\u006e\u0065\u0078\u0074\u0041\u0063"})
		if _fegbe != nil {
			return _fegbe
		}
		start.Attr = append(start.Attr, _gfbad)
	}
	e.EncodeToken(start)
	_adcgad := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_decga.CTn, _adcgad)
	if _decga.PrevCondLst != nil {
		_adcd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_decga.PrevCondLst, _adcd)
	}
	if _decga.NextCondLst != nil {
		_ddcga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_decga.NextCondLst, _ddcga)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_ApplicationNonVisualDrawingProps() *CT_ApplicationNonVisualDrawingProps {
	_baf := &CT_ApplicationNonVisualDrawingProps{}
	return _baf
}

// ValidateWithPath validates the CT_PrintProperties and its children, prefixing error messages with path
func (_dbgc *CT_PrintProperties) ValidateWithPath(path string) error {
	if _edab := _dbgc.PrnWhatAttr.ValidateWithPath(path + "\u002f\u0050\u0072n\u0057\u0068\u0061\u0074\u0041\u0074\u0074\u0072"); _edab != nil {
		return _edab
	}
	if _cfgb := _dbgc.ClrModeAttr.ValidateWithPath(path + "\u002f\u0043\u006cr\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _cfgb != nil {
		return _cfgb
	}
	if _dbgc.ExtLst != nil {
		if _ababc := _dbgc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ababc != nil {
			return _ababc
		}
	}
	return nil
}

type CT_PresentationProperties struct {

	// HTML Publishing Properties
	HtmlPubPr *CT_HtmlPublishProperties

	// Web Properties
	WebPr *CT_WebProperties

	// Printing Properties
	PrnPr *CT_PrintProperties

	// Presentation-wide Show Properties
	ShowPr *CT_ShowProperties

	// Color MRU
	ClrMru *_c.CT_ColorMRU
	ExtLst *CT_ExtensionList
}

const (
	ST_TransitionSpeedUnset ST_TransitionSpeed = 0
	ST_TransitionSpeedSlow  ST_TransitionSpeed = 1
	ST_TransitionSpeedMed   ST_TransitionSpeed = 2
	ST_TransitionSpeedFast  ST_TransitionSpeed = 3
)

func (_agcgc ST_TLAnimateMotionBehaviorOrigin) Validate() error { return _agcgc.ValidateWithPath("") }

// Validate validates the CT_TLAnimateMotionBehavior and its children
func (_fgecbf *CT_TLAnimateMotionBehavior) Validate() error {
	return _fgecbf.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061v\u0069\u006f\u0072")
}

// Validate validates the CT_NotesViewProperties and its children
func (_cccc *CT_NotesViewProperties) Validate() error {
	return _cccc.ValidateWithPath("\u0043\u0054\u005f\u004eot\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// ValidateWithPath validates the CT_SlideIdListEntry and its children, prefixing error messages with path
func (_dcca *CT_SlideIdListEntry) ValidateWithPath(path string) error {
	if _dcca.IdAttr < 256 {
		return _b.Errorf("\u0025\u0073/m\u002e\u0049\u0064A\u0074\u0074\u0072\u0020mus\u0074 b\u0065\u0020\u003e\u003d\u0020\u0032\u00356 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dcca.IdAttr)
	}
	if _dcca.IdAttr >= 2147483648 {
		return _b.Errorf("\u0025\u0073\u002fm\u002e\u0049\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dcca.IdAttr)
	}
	if _dcca.ExtLst != nil {
		if _fedfg := _dcca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fedfg != nil {
			return _fedfg
		}
	}
	return nil
}
func (_cffdf ST_PrintColorMode) ValidateWithPath(path string) error {
	switch _cffdf {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cffdf))
	}
	return nil
}
func (_eafd *CT_SlideMasterIdListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eafd.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_eafd.IdAttr)})
	}
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _eafd.RIdAttr)})
	e.EncodeToken(start)
	if _eafd.ExtLst != nil {
		_gdcfd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eafd.ExtLst, _gdcfd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_OrientationTransition struct {

	// Transition Direction
	DirAttr ST_Direction
}

func _cdcbd(_cecf bool) uint8 {
	if _cecf {
		return 1
	}
	return 0
}
func NewCT_SlideSize() *CT_SlideSize {
	_faadb := &CT_SlideSize{}
	_faadb.CxAttr = 914400
	_faadb.CyAttr = 914400
	return _faadb
}
func (_ggfe *CT_StringTag) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _ggfe.NameAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _ggfe.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SlideLayoutIdListEntry and its children
func (_eafag *CT_SlideLayoutIdListEntry) Validate() error {
	return _eafag.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069d\u0065\u004c\u0061\u0079\u006fu\u0074I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}

// ValidateWithPath validates the CT_Guide and its children, prefixing error messages with path
func (_adebc *CT_Guide) ValidateWithPath(path string) error {
	if _aeg := _adebc.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _aeg != nil {
		return _aeg
	}
	if _adebc.PosAttr != nil {
		if _gcba := _adebc.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _gcba != nil {
			return _gcba
		}
	}
	return nil
}
func NewCT_CornerDirectionTransition() *CT_CornerDirectionTransition {
	_cgbb := &CT_CornerDirectionTransition{}
	return _cgbb
}
func (_cefff ST_OleObjectFollowColorScheme) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cefff.String(), start)
}
func (_eebg *CT_TLCommonTimeNodeData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eegdd := range start.Attr {
		if _eegdd.Name.Local == "\u0074\u006d\u0046\u0069\u006c\u0074\u0065\u0072" {
			_gecb, _fegb := _eegdd.Value, error(nil)
			if _fegb != nil {
				return _fegb
			}
			_eebg.TmFilterAttr = &_gecb
			continue
		}
		if _eegdd.Name.Local == "\u0065v\u0074\u0046\u0069\u006c\u0074\u0065r" {
			_gdbd, _ffdda := _eegdd.Value, error(nil)
			if _ffdda != nil {
				return _ffdda
			}
			_eebg.EvtFilterAttr = &_gdbd
			continue
		}
		if _eegdd.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0074\u0049\u0044" {
			_aeffb, _fgbf := _ag.ParseInt(_eegdd.Value, 10, 32)
			if _fgbf != nil {
				return _fgbf
			}
			_bggfd := int32(_aeffb)
			_eebg.PresetIDAttr = &_bggfd
			continue
		}
		if _eegdd.Name.Local == "\u0064i\u0073\u0070\u006c\u0061\u0079" {
			_acccd, _dbfe := _ag.ParseBool(_eegdd.Value)
			if _dbfe != nil {
				return _dbfe
			}
			_eebg.DisplayAttr = &_acccd
			continue
		}
		if _eegdd.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0074\u0053\u0075\u0062\u0074\u0079\u0070\u0065" {
			_beefbe, _aeged := _ag.ParseInt(_eegdd.Value, 10, 32)
			if _aeged != nil {
				return _aeged
			}
			_dedcc := int32(_beefbe)
			_eebg.PresetSubtypeAttr = &_dedcc
			continue
		}
		if _eegdd.Name.Local == "\u006da\u0073\u0074\u0065\u0072\u0052\u0065l" {
			_eebg.MasterRelAttr.UnmarshalXMLAttr(_eegdd)
			continue
		}
		if _eegdd.Name.Local == "r\u0065\u0070\u0065\u0061\u0074\u0043\u006f\u0075\u006e\u0074" {
			_ebgee, _ebaee := ParseUnionST_TLTime(_eegdd.Value)
			if _ebaee != nil {
				return _ebaee
			}
			_eebg.RepeatCountAttr = &_ebgee
			continue
		}
		if _eegdd.Name.Local == "\u0062\u006c\u0064\u004c\u0076\u006c" {
			_ccbe, _dcfdb := _ag.ParseInt(_eegdd.Value, 10, 32)
			if _dcfdb != nil {
				return _dcfdb
			}
			_bcca := int32(_ccbe)
			_eebg.BldLvlAttr = &_bcca
			continue
		}
		if _eegdd.Name.Local == "\u0073\u0070\u0064" {
			_aggfd, _acba := ParseUnionST_Percentage(_eegdd.Value)
			if _acba != nil {
				return _acba
			}
			_eebg.SpdAttr = &_aggfd
			continue
		}
		if _eegdd.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_caaeb, _cbag := _ag.ParseUint(_eegdd.Value, 10, 32)
			if _cbag != nil {
				return _cbag
			}
			_cead := uint32(_caaeb)
			_eebg.GrpIdAttr = &_cead
			continue
		}
		if _eegdd.Name.Local == "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074" {
			_adfbe, _dcfed := _ag.ParseBool(_eegdd.Value)
			if _dcfed != nil {
				return _dcfed
			}
			_eebg.AfterEffectAttr = &_adfbe
			continue
		}
		if _eegdd.Name.Local == "\u0069\u0064" {
			_ebfd, _adcfc := _ag.ParseUint(_eegdd.Value, 10, 32)
			if _adcfc != nil {
				return _adcfc
			}
			_bbbfa := uint32(_ebfd)
			_eebg.IdAttr = &_bbbfa
			continue
		}
		if _eegdd.Name.Local == "\u006e\u006f\u0064\u0065\u0050\u0068" {
			_cdacd, _fffad := _ag.ParseBool(_eegdd.Value)
			if _fffad != nil {
				return _fffad
			}
			_eebg.NodePhAttr = &_cdacd
			continue
		}
		if _eegdd.Name.Local == "\u0061\u0063\u0063e\u006c" {
			_efeba, _gddbg := ParseUnionST_PositiveFixedPercentage(_eegdd.Value)
			if _gddbg != nil {
				return _gddbg
			}
			_eebg.AccelAttr = &_efeba
			continue
		}
		if _eegdd.Name.Local == "\u0064\u0065\u0063e\u006c" {
			_dbgae, _adcfd := ParseUnionST_PositiveFixedPercentage(_eegdd.Value)
			if _adcfd != nil {
				return _adcfd
			}
			_eebg.DecelAttr = &_dbgae
			continue
		}
		if _eegdd.Name.Local == "\u0072e\u0073\u0074\u0061\u0072\u0074" {
			_eebg.RestartAttr.UnmarshalXMLAttr(_eegdd)
			continue
		}
		if _eegdd.Name.Local == "\u006e\u006f\u0064\u0065\u0054\u0079\u0070\u0065" {
			_eebg.NodeTypeAttr.UnmarshalXMLAttr(_eegdd)
			continue
		}
		if _eegdd.Name.Local == "p\u0072\u0065\u0073\u0065\u0074\u0043\u006c\u0061\u0073\u0073" {
			_eebg.PresetClassAttr.UnmarshalXMLAttr(_eegdd)
			continue
		}
		if _eegdd.Name.Local == "\u0072e\u0070\u0065\u0061\u0074\u0044\u0075r" {
			_feaf, _gedf := ParseUnionST_TLTime(_eegdd.Value)
			if _gedf != nil {
				return _gedf
			}
			_eebg.RepeatDurAttr = &_feaf
			continue
		}
		if _eegdd.Name.Local == "\u0073\u0079\u006ec\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072" {
			_eebg.SyncBehaviorAttr.UnmarshalXMLAttr(_eegdd)
			continue
		}
		if _eegdd.Name.Local == "\u0061u\u0074\u006f\u0052\u0065\u0076" {
			_aagfad, _daffd := _ag.ParseBool(_eegdd.Value)
			if _daffd != nil {
				return _daffd
			}
			_eebg.AutoRevAttr = &_aagfad
			continue
		}
		if _eegdd.Name.Local == "\u0066\u0069\u006c\u006c" {
			_eebg.FillAttr.UnmarshalXMLAttr(_eegdd)
			continue
		}
		if _eegdd.Name.Local == "\u0064\u0075\u0072" {
			_ggcee, _edbcd := ParseUnionST_TLTime(_eegdd.Value)
			if _edbcd != nil {
				return _edbcd
			}
			_eebg.DurAttr = &_ggcee
			continue
		}
	}
_dedaf:
	for {
		_cbaee, _ffee := d.Token()
		if _ffee != nil {
			return _ffee
		}
		switch _dcfg := _cbaee.(type) {
		case _d.StartElement:
			switch _dcfg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073t\u0043\u006f\u006e\u0064\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0043\u006f\u006e\u0064\u004c\u0073t"}:
				_eebg.StCondLst = NewCT_TLTimeConditionList()
				if _bdaf := d.DecodeElement(_eebg.StCondLst, &_dcfg); _bdaf != nil {
					return _bdaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_eebg.EndCondLst = NewCT_TLTimeConditionList()
				if _fcgdb := d.DecodeElement(_eebg.EndCondLst, &_dcfg); _fcgdb != nil {
					return _fcgdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065n\u0064\u0053\u0079\u006e\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0064\u0053\u0079\u006e\u0063"}:
				_eebg.EndSync = NewCT_TLTimeCondition()
				if _efgdgd := d.DecodeElement(_eebg.EndSync, &_dcfg); _efgdgd != nil {
					return _efgdgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}:
				_eebg.Iterate = NewCT_TLIterateData()
				if _gbdbd := d.DecodeElement(_eebg.Iterate, &_dcfg); _gbdbd != nil {
					return _gbdbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}:
				_eebg.ChildTnLst = NewCT_TimeNodeList()
				if _gcddc := d.DecodeElement(_eebg.ChildTnLst, &_dcfg); _gcddc != nil {
					return _gcddc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}:
				_eebg.SubTnLst = NewCT_TimeNodeList()
				if _gefgb := d.DecodeElement(_eebg.SubTnLst, &_dcfg); _gefgb != nil {
					return _gefgb
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u0054i\u006d\u0065\u004e\u006f\u0064\u0065D\u0061\u0074\u0061 \u0025\u0076", _dcfg.Name)
				if _fcae := d.Skip(); _fcae != nil {
					return _fcae
				}
			}
		case _d.EndElement:
			break _dedaf
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_SlideIdListEntry() *CT_SlideIdListEntry {
	_agdff := &CT_SlideIdListEntry{}
	_agdff.IdAttr = 256
	return _agdff
}
func (_cfeb ST_ViewType) ValidateWithPath(path string) error {
	switch _cfeb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfeb))
	}
	return nil
}

// ValidateWithPath validates the CT_BackgroundProperties and its children, prefixing error messages with path
func (_gdea *CT_BackgroundProperties) ValidateWithPath(path string) error {
	if _gdea.NoFill != nil {
		if _fcc := _gdea.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _fcc != nil {
			return _fcc
		}
	}
	if _gdea.SolidFill != nil {
		if _adc := _gdea.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _adc != nil {
			return _adc
		}
	}
	if _gdea.GradFill != nil {
		if _faec := _gdea.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _faec != nil {
			return _faec
		}
	}
	if _gdea.BlipFill != nil {
		if _eba := _gdea.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _eba != nil {
			return _eba
		}
	}
	if _gdea.PattFill != nil {
		if _aef := _gdea.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _aef != nil {
			return _aef
		}
	}
	if _gdea.GrpFill != nil {
		if _fgb := _gdea.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _fgb != nil {
			return _fgb
		}
	}
	if _gdea.EffectLst != nil {
		if _gaeg := _gdea.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _gaeg != nil {
			return _gaeg
		}
	}
	if _gdea.EffectDag != nil {
		if _cccb := _gdea.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _cccb != nil {
			return _cccb
		}
	}
	if _gdea.ExtLst != nil {
		if _fga := _gdea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fga != nil {
			return _fga
		}
	}
	return nil
}

// Validate validates the TagLst and its children
func (_ccdeb *TagLst) Validate() error {
	return _ccdeb.ValidateWithPath("\u0054\u0061\u0067\u004c\u0073\u0074")
}
func (_fcfbc ST_TLTimeNodeMasterRelation) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fcfbc.String(), start)
}

// Validate validates the CT_CustomShow and its children
func (_bcb *CT_CustomShow) Validate() error {
	return _bcb.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077")
}

// Validate validates the CT_SlideSize and its children
func (_cfgcg *CT_SlideSize) Validate() error {
	return _cfgcg.ValidateWithPath("\u0043\u0054\u005fS\u006c\u0069\u0064\u0065\u0053\u0069\u007a\u0065")
}
func (_fbbff *ST_TLTimeNodeRestartType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fbbff = 0
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_fbbff = 1
	case "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065":
		*_fbbff = 2
	case "\u006e\u0065\u0076e\u0072":
		*_fbbff = 3
	}
	return nil
}

type CT_TLPoint struct {

	// X coordinate
	XAttr _c.ST_Percentage

	// Y coordinate
	YAttr _c.ST_Percentage
}

// Validate validates the EG_ExtensionList and its children
func (_egfdf *EG_ExtensionList) Validate() error {
	return _egfdf.ValidateWithPath("\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}
func (_dabdc *ST_TLPreviousActionType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dabdc = 0
	case "\u006e\u006f\u006e\u0065":
		*_dabdc = 1
	case "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d":
		*_dabdc = 2
	}
	return nil
}

type ST_TLBehaviorAdditiveType byte

func (_fadgb *ST_ViewType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fadgb = 0
	case "\u0073l\u0064\u0056\u0069\u0065\u0077":
		*_fadgb = 1
	case "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_fadgb = 2
	case "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w":
		*_fadgb = 3
	case "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077":
		*_fadgb = 4
	case "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_fadgb = 5
	case "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077":
		*_fadgb = 6
	case "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_fadgb = 7
	case "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077":
		*_fadgb = 8
	}
	return nil
}
func (_aaecc ST_Direction) Validate() error { return _aaecc.ValidateWithPath("") }
func (_fdafc *CT_PresentationProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fdafc.HtmlPubPr != nil {
		_cbbbf := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0068\u0074\u006d\u006c\u0050\u0075\u0062\u0050\u0072"}}
		e.EncodeElement(_fdafc.HtmlPubPr, _cbbbf)
	}
	if _fdafc.WebPr != nil {
		_cgdbbd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0077\u0065\u0062\u0050\u0072"}}
		e.EncodeElement(_fdafc.WebPr, _cgdbbd)
	}
	if _fdafc.PrnPr != nil {
		_edeg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0070\u0072\u006e\u0050\u0072"}}
		e.EncodeElement(_fdafc.PrnPr, _edeg)
	}
	if _fdafc.ShowPr != nil {
		_efcg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0068\u006f\u0077\u0050\u0072"}}
		e.EncodeElement(_fdafc.ShowPr, _efcg)
	}
	if _fdafc.ClrMru != nil {
		_fbcg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0072\u0075"}}
		e.EncodeElement(_fdafc.ClrMru, _fbcg)
	}
	if _fdafc.ExtLst != nil {
		_ebbcd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdafc.ExtLst, _ebbcd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bbaed *CT_HandoutMasterIdList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_efbeb:
	for {
		_cgaa, _ebbb := d.Token()
		if _ebbb != nil {
			return _ebbb
		}
		switch _fcgd := _cgaa.(type) {
		case _d.StartElement:
			switch _fcgd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_bbaed.HandoutMasterId = NewCT_HandoutMasterIdListEntry()
				if _acdg := d.DecodeElement(_bbaed.HandoutMasterId, &_fcgd); _acdg != nil {
					return _acdg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fcgd.Name)
				if _daef := d.Skip(); _daef != nil {
					return _daef
				}
			}
		case _d.EndElement:
			break _efbeb
		case _d.CharData:
		}
	}
	return nil
}

type ST_WebScreenSize byte

func NewCT_HandoutMaster() *CT_HandoutMaster {
	_fgcb := &CT_HandoutMaster{}
	_fgcb.CSld = NewCT_CommonSlideData()
	_fgcb.ClrMap = _c.NewCT_ColorMapping()
	return _fgcb
}
func (_degef ST_TLDiagramBuildType) Validate() error { return _degef.ValidateWithPath("") }
func (_ecadc ST_SplitterBarState) Validate() error   { return _ecadc.ValidateWithPath("") }

type CT_SlideRelationshipListEntry struct{ IdAttr string }

func (_adeea *ST_TLTimeNodeSyncType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ecbef, _cbacc := d.Token()
	if _cbacc != nil {
		return _cbacc
	}
	if _edcd, _ccbc := _ecbef.(_d.EndElement); _ccbc && _edcd.Name == start.Name {
		*_adeea = 1
		return nil
	}
	if _fggbb, _fefgf := _ecbef.(_d.CharData); !_fefgf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ecbef)
	} else {
		switch string(_fggbb) {
		case "":
			*_adeea = 0
		case "\u0063a\u006e\u0053\u006c\u0069\u0070":
			*_adeea = 1
		case "\u006c\u006f\u0063\u006b\u0065\u0064":
			*_adeea = 2
		}
	}
	_ecbef, _cbacc = d.Token()
	if _cbacc != nil {
		return _cbacc
	}
	if _cdbbb, _eegea := _ecbef.(_d.EndElement); _eegea && _cdbbb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ecbef)
}
func (_bdeac *CT_TLTemplate) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bdeac.TnLst = NewCT_TimeNodeList()
	for _, _cabec := range start.Attr {
		if _cabec.Name.Local == "\u006c\u0076\u006c" {
			_eega, _degag := _ag.ParseUint(_cabec.Value, 10, 32)
			if _degag != nil {
				return _degag
			}
			_fbdc := uint32(_eega)
			_bdeac.LvlAttr = &_fbdc
			continue
		}
	}
_eedba:
	for {
		_bfcbc, _fdfeb := d.Token()
		if _fdfeb != nil {
			return _fdfeb
		}
		switch _ceae := _bfcbc.(type) {
		case _d.StartElement:
			switch _ceae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}:
				if _cdfg := d.DecodeElement(_bdeac.TnLst, &_ceae); _cdfg != nil {
					return _cdfg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054L\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065 \u0025\u0076", _ceae.Name)
				if _eaaca := d.Skip(); _eaaca != nil {
					return _eaaca
				}
			}
		case _d.EndElement:
			break _eedba
		case _d.CharData:
		}
	}
	return nil
}
func (_ffgce ST_WebScreenSize) ValidateWithPath(path string) error {
	switch _ffgce {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffgce))
	}
	return nil
}
func NewAG_Ole() *AG_Ole { _agbg := &AG_Ole{}; return _agbg }

// Validate validates the CT_EightDirectionTransition and its children
func (_dggb *CT_EightDirectionTransition) Validate() error {
	return _dggb.ValidateWithPath("C\u0054\u005f\u0045\u0069\u0067\u0068t\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006es\u0069t\u0069\u006f\u006e")
}
func (_cfcd *CT_TLByAnimateColorTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cfcd.Rgb != nil {
		_bacge := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0072g\u0062"}}
		e.EncodeElement(_cfcd.Rgb, _bacge)
	}
	if _cfcd.Hsl != nil {
		_cbbcg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0068s\u006c"}}
		e.EncodeElement(_cfcd.Hsl, _cbbcg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_faag *CT_OleObjectLink) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _faag.UpdateAutomaticAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075p\u0064a\u0074\u0065\u0041\u0075\u0074\u006f\u006d\u0061\u0074\u0069\u0063"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_faag.UpdateAutomaticAttr))})
	}
	e.EncodeToken(start)
	if _faag.ExtLst != nil {
		_acgg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_faag.ExtLst, _acgg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_OleObjectEmbed struct {

	// Color Scheme Properties for Embedded object
	FollowColorSchemeAttr ST_OleObjectFollowColorScheme
	ExtLst                *CT_ExtensionList
}

func NewCT_ModifyVerifier() *CT_ModifyVerifier { _bfbgc := &CT_ModifyVerifier{}; return _bfbgc }

type CT_TLTimeConditionList struct {

	// Condition
	Cond []*CT_TLTimeCondition
}

func (_gf *CT_Background) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ege := range start.Attr {
		if _ege.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_gf.BwModeAttr.UnmarshalXMLAttr(_ege)
			continue
		}
	}
_cdc:
	for {
		_efb, _gbd := d.Token()
		if _gbd != nil {
			return _gbd
		}
		switch _bedb := _efb.(type) {
		case _d.StartElement:
			switch _bedb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
				_gf.BgPr = NewCT_BackgroundProperties()
				if _dcd := d.DecodeElement(_gf.BgPr, &_bedb); _dcd != nil {
					return _dcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
				_gf.BgRef = _c.NewCT_StyleMatrixReference()
				if _dcg := d.DecodeElement(_gf.BgRef, &_bedb); _dcg != nil {
					return _dcg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042a\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064 \u0025\u0076", _bedb.Name)
				if _ebc := d.Skip(); _ebc != nil {
					return _ebc
				}
			}
		case _d.EndElement:
			break _cdc
		case _d.CharData:
		}
	}
	return nil
}

type CT_HandoutMaster struct {

	// Common slide data for handout master
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_c.CT_ColorMapping

	// Header/Footer information for a handout master
	Hf     *CT_HeaderFooter
	ExtLst *CT_ExtensionListModify
}

func (_faab *CT_Slide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _faab.ShowAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_faab.ShowAttr))})
	}
	if _faab.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_faab.ShowMasterSpAttr))})
	}
	if _faab.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_faab.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_agfbe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_faab.CSld, _agfbe)
	if _faab.ClrMapOvr != nil {
		_bgffd := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_faab.ClrMapOvr, _bgffd)
	}
	if _faab.Transition != nil {
		_fdeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_faab.Transition, _fdeb)
	}
	if _faab.Timing != nil {
		_ddcd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_faab.Timing, _ddcd)
	}
	if _faab.ExtLst != nil {
		_bgeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_faab.ExtLst, _bgeb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TransitionStartSoundAction and its children
func (_adgf *CT_TransitionStartSoundAction) Validate() error {
	return _adgf.ValidateWithPath("\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074\u0061\u0072\u0074\u0053\u006f\u0075\u006e\u0064\u0041\u0063ti\u006f\u006e")
}

// ValidateWithPath validates the CT_TLBuildParagraph and its children, prefixing error messages with path
func (_fdceg *CT_TLBuildParagraph) ValidateWithPath(path string) error {
	if _deggc := _fdceg.BuildAttr.ValidateWithPath(path + "\u002f\u0042\u0075\u0069\u006c\u0064\u0041\u0074\u0074\u0072"); _deggc != nil {
		return _deggc
	}
	if _fdceg.AdvAutoAttr != nil {
		if _fcbg := _fdceg.AdvAutoAttr.ValidateWithPath(path + "\u002f\u0041\u0064v\u0041\u0075\u0074\u006f\u0041\u0074\u0074\u0072"); _fcbg != nil {
			return _fcbg
		}
	}
	if _fdceg.TmplLst != nil {
		if _ecbcb := _fdceg.TmplLst.ValidateWithPath(path + "\u002f\u0054\u006d\u0070\u006c\u004c\u0073\u0074"); _ecbcb != nil {
			return _ecbcb
		}
	}
	return nil
}
func (_bdbcc ST_IterateType) ValidateWithPath(path string) error {
	switch _bdbcc {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdbcc))
	}
	return nil
}
func (_cade *CT_TLPoint) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bcgca := range start.Attr {
		if _bcgca.Name.Local == "\u0078" {
			_decgf, _faacg := ParseUnionST_Percentage(_bcgca.Value)
			if _faacg != nil {
				return _faacg
			}
			_cade.XAttr = _decgf
			continue
		}
		if _bcgca.Name.Local == "\u0079" {
			_eecae, _egfce := ParseUnionST_Percentage(_bcgca.Value)
			if _egfce != nil {
				return _egfce
			}
			_cade.YAttr = _eecae
			continue
		}
	}
	for {
		_bgec, _acgeg := d.Token()
		if _acgeg != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074\u003a\u0020%\u0073", _acgeg)
		}
		if _abdcd, _dgacd := _bgec.(_d.EndElement); _dgacd && _abdcd.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_SlideLayoutIdListEntry() *CT_SlideLayoutIdListEntry {
	_ggea := &CT_SlideLayoutIdListEntry{}
	return _ggea
}
func (_aaac *CT_TLAnimVariantStringVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abbef := range start.Attr {
		if _abbef.Name.Local == "\u0076\u0061\u006c" {
			_effgc, _efefb := _abbef.Value, error(nil)
			if _efefb != nil {
				return _efefb
			}
			_aaac.ValAttr = _effgc
			continue
		}
	}
	for {
		_feaa, _befcc := d.Token()
		if _befcc != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0053\u0074\u0072\u0069\u006e\u0067\u0056\u0061l\u003a\u0020\u0025\u0073", _befcc)
		}
		if _ecgad, _egbddb := _feaa.(_d.EndElement); _egbddb && _ecgad.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eccedf *ST_TLAnimateColorDirection) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_eccedf = 0
	case "\u0063\u0077":
		*_eccedf = 1
	case "\u0063\u0063\u0077":
		*_eccedf = 2
	}
	return nil
}
func (_bacea ST_TLBehaviorTransformType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_abga := _d.Attr{}
	_abga.Name = name
	switch _bacea {
	case ST_TLBehaviorTransformTypeUnset:
		_abga.Value = ""
	case ST_TLBehaviorTransformTypePt:
		_abga.Value = "\u0070\u0074"
	case ST_TLBehaviorTransformTypeImg:
		_abga.Value = "\u0069\u006d\u0067"
	}
	return _abga, nil
}
func (_edfg ST_PrintWhat) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gaeb := _d.Attr{}
	_gaeb.Name = name
	switch _edfg {
	case ST_PrintWhatUnset:
		_gaeb.Value = ""
	case ST_PrintWhatSlides:
		_gaeb.Value = "\u0073\u006c\u0069\u0064\u0065\u0073"
	case ST_PrintWhatHandouts1:
		_gaeb.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731"
	case ST_PrintWhatHandouts2:
		_gaeb.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732"
	case ST_PrintWhatHandouts3:
		_gaeb.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733"
	case ST_PrintWhatHandouts4:
		_gaeb.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734"
	case ST_PrintWhatHandouts6:
		_gaeb.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736"
	case ST_PrintWhatHandouts9:
		_gaeb.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739"
	case ST_PrintWhatNotes:
		_gaeb.Value = "\u006e\u006f\u0074e\u0073"
	case ST_PrintWhatOutline:
		_gaeb.Value = "\u006fu\u0074\u006c\u0069\u006e\u0065"
	}
	return _gaeb, nil
}

// ValidateWithPath validates the CT_SlideTransition and its children, prefixing error messages with path
func (_cgdbf *CT_SlideTransition) ValidateWithPath(path string) error {
	if _befec := _cgdbf.SpdAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0064\u0041\u0074\u0074\u0072"); _befec != nil {
		return _befec
	}
	if _cgdbf.Choice != nil {
		if _bbec := _cgdbf.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _bbec != nil {
			return _bbec
		}
	}
	if _cgdbf.SndAc != nil {
		if _aeagb := _cgdbf.SndAc.ValidateWithPath(path + "\u002f\u0053\u006e\u0064\u0041\u0063"); _aeagb != nil {
			return _aeagb
		}
	}
	if _cgdbf.ExtLst != nil {
		if _agcd := _cgdbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agcd != nil {
			return _agcd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLIterateIntervalTime and its children, prefixing error messages with path
func (_fgcac *CT_TLIterateIntervalTime) ValidateWithPath(path string) error {
	if _egae := _fgcac.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _egae != nil {
		return _egae
	}
	return nil
}
func NewCT_BackgroundProperties() *CT_BackgroundProperties {
	_bdd := &CT_BackgroundProperties{}
	return _bdd
}

// ValidateWithPath validates the CT_TLAnimateRotationBehavior and its children, prefixing error messages with path
func (_dbfa *CT_TLAnimateRotationBehavior) ValidateWithPath(path string) error {
	if _abgge := _dbfa.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _abgge != nil {
		return _abgge
	}
	return nil
}
func (_efbce *ST_TLTimeAnimateValueTime) ValidateWithPath(path string) error {
	_bbebd := []string{}
	if _efbce.ST_PositiveFixedPercentage != nil {
		if _cadcg := _efbce.ST_PositiveFixedPercentage.ValidateWithPath(path + "/\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063e\u006et\u0061\u0067\u0065"); _cadcg != nil {
			return _cadcg
		}
		_bbebd = append(_bbebd, "\u0053\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
	}
	if _efbce.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		_bbebd = append(_bbebd, "\u0053\u0054\u005f\u0054LT\u0069\u006d\u0065\u0049\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065")
	}
	if len(_bbebd) > 1 {
		return _b.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _bbebd)
	}
	return nil
}
func (_cfdab *CT_ModifyVerifier) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fcdd := range start.Attr {
		if _fcdd.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_faaf, _ddd := _ag.ParseUint(_fcdd.Value, 10, 32)
			if _ddd != nil {
				return _ddd
			}
			_defbd := uint32(_faaf)
			_cfdab.SpinCountAttr = &_defbd
			continue
		}
		if _fcdd.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_cedf, _aefc := _fcdd.Value, error(nil)
			if _aefc != nil {
				return _aefc
			}
			_cfdab.AlgorithmNameAttr = &_cedf
			continue
		}
		if _fcdd.Name.Local == "\u0073\u0061\u006c\u0074\u0044\u0061\u0074\u0061" {
			_gdca, _ecee := _fcdd.Value, error(nil)
			if _ecee != nil {
				return _ecee
			}
			_cfdab.SaltDataAttr = &_gdca
			continue
		}
		if _fcdd.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_ffb, _cbef := _fcdd.Value, error(nil)
			if _cbef != nil {
				return _cbef
			}
			_cfdab.SaltValueAttr = &_ffb
			continue
		}
		if _fcdd.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065r\u0054\u0079\u0070\u0065" {
			_cfdab.CryptProviderTypeAttr.UnmarshalXMLAttr(_fcdd)
			continue
		}
		if _fcdd.Name.Local == "\u0063\u0072\u0079\u0070tA\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0043\u006c\u0061\u0073\u0073" {
			_cfdab.CryptAlgorithmClassAttr.UnmarshalXMLAttr(_fcdd)
			continue
		}
		if _fcdd.Name.Local == "\u0063r\u0079p\u0074\u0041\u006c\u0067\u006fr\u0069\u0074h\u006d\u0054\u0079\u0070\u0065" {
			_cfdab.CryptAlgorithmTypeAttr.UnmarshalXMLAttr(_fcdd)
			continue
		}
		if _fcdd.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0053\u0069\u0064" {
			_cdfd, _adbg := _ag.ParseUint(_fcdd.Value, 10, 32)
			if _adbg != nil {
				return _adbg
			}
			_cbdf := uint32(_cdfd)
			_cfdab.CryptAlgorithmSidAttr = &_cbdf
			continue
		}
		if _fcdd.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_egdg, _bfgc := _fcdd.Value, error(nil)
			if _bfgc != nil {
				return _bfgc
			}
			_cfdab.HashValueAttr = &_egdg
			continue
		}
		if _fcdd.Name.Local == "\u0073p\u0069\u006e\u0056\u0061\u006c\u0075e" {
			_fcgc, _aeff := _ag.ParseUint(_fcdd.Value, 10, 32)
			if _aeff != nil {
				return _aeff
			}
			_abafd := uint32(_fcgc)
			_cfdab.SpinValueAttr = &_abafd
			continue
		}
		if _fcdd.Name.Local == "\u0068\u0061\u0073\u0068\u0044\u0061\u0074\u0061" {
			_efgc, _ffbe := _fcdd.Value, error(nil)
			if _ffbe != nil {
				return _ffbe
			}
			_cfdab.HashDataAttr = &_efgc
			continue
		}
		if _fcdd.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072" {
			_ggbdd, _dabaa := _fcdd.Value, error(nil)
			if _dabaa != nil {
				return _dabaa
			}
			_cfdab.CryptProviderAttr = &_ggbdd
			continue
		}
		if _fcdd.Name.Local == "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074" {
			_cgd, _bgcc := _ag.ParseUint(_fcdd.Value, 10, 32)
			if _bgcc != nil {
				return _bgcc
			}
			_cedb := uint32(_cgd)
			_cfdab.AlgIdExtAttr = &_cedb
			continue
		}
		if _fcdd.Name.Local == "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074\u0053o\u0075\u0072\u0063\u0065" {
			_dcff, _aeace := _fcdd.Value, error(nil)
			if _aeace != nil {
				return _aeace
			}
			_cfdab.AlgIdExtSourceAttr = &_dcff
			continue
		}
		if _fcdd.Name.Local == "c\u0072y\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070eE\u0078\u0074" {
			_bdbd, _aeacd := _ag.ParseUint(_fcdd.Value, 10, 32)
			if _aeacd != nil {
				return _aeacd
			}
			_gbac := uint32(_bdbd)
			_cfdab.CryptProviderTypeExtAttr = &_gbac
			continue
		}
		if _fcdd.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070\u0065\u0045\u0078\u0074\u0053\u006fu\u0072\u0063\u0065" {
			_cbce, _eeac := _fcdd.Value, error(nil)
			if _eeac != nil {
				return _eeac
			}
			_cfdab.CryptProviderTypeExtSourceAttr = &_cbce
			continue
		}
	}
	for {
		_eeaa, _dacg := d.Token()
		if _dacg != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072: \u0025\u0073", _dacg)
		}
		if _ggbc, _gcgc := _eeaa.(_d.EndElement); _gcgc && _ggbc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fbcf *CT_GraphicalObjectFrame) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fbcf.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_fbcf.Xfrm = _c.NewCT_Transform2D()
	_fbcf.Graphic = _c.NewGraphic()
	for _, _ecgbc := range start.Attr {
		if _ecgbc.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_fbcf.BwModeAttr.UnmarshalXMLAttr(_ecgbc)
			continue
		}
	}
_egbd:
	for {
		_adcb, _bffc := d.Token()
		if _bffc != nil {
			return _bffc
		}
		switch _bgbb := _adcb.(type) {
		case _d.StartElement:
			switch _bgbb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _adee := d.DecodeElement(_fbcf.NvGraphicFramePr, &_bgbb); _adee != nil {
					return _adee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				if _dggc := d.DecodeElement(_fbcf.Xfrm, &_bgbb); _dggc != nil {
					return _dggc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _eae := d.DecodeElement(_fbcf.Graphic, &_bgbb); _eae != nil {
					return _eae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbcf.ExtLst = NewCT_ExtensionListModify()
				if _fcf := d.DecodeElement(_fbcf.ExtLst, &_bgbb); _fcf != nil {
					return _fcf
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006cO\u0062\u006a\u0065\u0063\u0074\u0046r\u0061\u006d\u0065 \u0025\u0076", _bgbb.Name)
				if _abab := d.Skip(); _abab != nil {
					return _abab
				}
			}
		case _d.EndElement:
			break _egbd
		case _d.CharData:
		}
	}
	return nil
}

type CT_HeaderFooter struct {

	// Slide Number Placeholder
	SldNumAttr *bool

	// Header Placeholder
	HdrAttr *bool

	// Footer Placeholder
	FtrAttr *bool

	// Date/Time Placeholder
	DtAttr *bool
	ExtLst *CT_ExtensionListModify
}

func (_fff *CT_CornerDirectionTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gece := range start.Attr {
		if _gece.Name.Local == "\u0064\u0069\u0072" {
			_fff.DirAttr.UnmarshalXMLAttr(_gece)
			continue
		}
	}
	for {
		_abd, _cadg := d.Token()
		if _cadg != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u006f\u0072\u006e\u0065\u0072\u0044\u0069r\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006esi\u0074\u0069\u006fn\u003a \u0025\u0073", _cadg)
		}
		if _bfa, _fdf := _abd.(_d.EndElement); _fdf && _bfa.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CommonViewProperties and its children, prefixing error messages with path
func (_bae *CT_CommonViewProperties) ValidateWithPath(path string) error {
	if _bba := _bae.Scale.ValidateWithPath(path + "\u002f\u0053\u0063\u0061\u006c\u0065"); _bba != nil {
		return _bba
	}
	if _cdb := _bae.Origin.ValidateWithPath(path + "\u002fO\u0072\u0069\u0067\u0069\u006e"); _cdb != nil {
		return _cdb
	}
	return nil
}

type CT_OleObjectLink struct {

	// Update Linked Embedded Objects Automatically
	UpdateAutomaticAttr *bool
	ExtLst              *CT_ExtensionList
}

func (_bdeb *CT_TLIterateIntervalPercentage) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bebbb := range start.Attr {
		if _bebbb.Name.Local == "\u0076\u0061\u006c" {
			_gfgeg, _gfba := ParseUnionST_PositivePercentage(_bebbb.Value)
			if _gfba != nil {
				return _gfba
			}
			_bdeb.ValAttr = _gfgeg
			continue
		}
	}
	for {
		_aeaac, _gacdd := d.Token()
		if _gacdd != nil {
			return _b.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c\u0050\u0065\u0072\u0063\u0065n\u0074\u0061\u0067\u0065\u003a\u0020\u0025\u0073", _gacdd)
		}
		if _faeee, _fggec := _aeaac.(_d.EndElement); _fggec && _faeee.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_HandoutMasterIdListEntry struct {
	IdAttr string
	ExtLst *CT_ExtensionList
}

func (_fca *CT_CommonSlideViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fca.CViewPr = NewCT_CommonViewProperties()
	for _, _dbdb := range start.Attr {
		if _dbdb.Name.Local == "\u0073\u006e\u0061\u0070\u0054\u006f\u0047\u0072\u0069\u0064" {
			_dcfd, _gdba := _ag.ParseBool(_dbdb.Value)
			if _gdba != nil {
				return _gdba
			}
			_fca.SnapToGridAttr = &_dcfd
			continue
		}
		if _dbdb.Name.Local == "\u0073\u006e\u0061\u0070\u0054\u006f\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_gce, _cafa := _ag.ParseBool(_dbdb.Value)
			if _cafa != nil {
				return _cafa
			}
			_fca.SnapToObjectsAttr = &_gce
			continue
		}
		if _dbdb.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0075\u0069\u0064\u0065\u0073" {
			_gdgg, _gfe := _ag.ParseBool(_dbdb.Value)
			if _gfe != nil {
				return _gfe
			}
			_fca.ShowGuidesAttr = &_gdgg
			continue
		}
	}
_caada:
	for {
		_edd, _bag := d.Token()
		if _bag != nil {
			return _bag
		}
		switch _gea := _edd.(type) {
		case _d.StartElement:
			switch _gea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _eefa := d.DecodeElement(_fca.CViewPr, &_gea); _eefa != nil {
					return _eefa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}:
				_fca.GuideLst = NewCT_GuideList()
				if _faeb := d.DecodeElement(_fca.GuideLst, &_gea); _faeb != nil {
					return _faeb
				}
			default:
				_be.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056\u0069\u0065w\u0050\u0072op\u0065\u0072\u0074i\u0065\u0073\u0020\u0025\u0076", _gea.Name)
				if _acgc := d.Skip(); _acgc != nil {
					return _acgc
				}
			}
		case _d.EndElement:
			break _caada
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLTimeTargetElement struct {

	// Slide Target
	SldTgt *CT_Empty

	// Sound Target
	SndTgt *_c.CT_EmbeddedWAVAudioFile

	// Shape Target
	SpTgt *CT_TLShapeTargetElement

	// Ink Target
	InkTgt *CT_TLSubShapeId
}

// Validate validates the CT_Placeholder and its children
func (_afdgd *CT_Placeholder) Validate() error {
	return _afdgd.ValidateWithPath("\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068o\u006c\u0064\u0065\u0072")
}
func (_agdd *CT_TLSetBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_agdd.CBhvr = NewCT_TLCommonBehaviorData()
_afeee:
	for {
		_edfbf, _fadfd := d.Token()
		if _fadfd != nil {
			return _fadfd
		}
		switch _addbf := _edfbf.(type) {
		case _d.StartElement:
			switch _addbf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _dede := d.DecodeElement(_agdd.CBhvr, &_addbf); _dede != nil {
					return _dede
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_agdd.To = NewCT_TLAnimVariant()
				if _edgc := d.DecodeElement(_agdd.To, &_addbf); _edgc != nil {
					return _edgc
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0065\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025v", _addbf.Name)
				if _eefb := d.Skip(); _eefb != nil {
					return _eefb
				}
			}
		case _d.EndElement:
			break _afeee
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BuildList and its children, prefixing error messages with path
func (_gaa *CT_BuildList) ValidateWithPath(path string) error {
	for _eeg, _bee := range _gaa.BldP {
		if _fbf := _bee.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0042\u006c\u0064\u0050\u005b\u0025\u0064\u005d", path, _eeg)); _fbf != nil {
			return _fbf
		}
	}
	for _eda, _ccca := range _gaa.BldDgm {
		if _gaff := _ccca.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0042\u006c\u0064\u0044\u0067\u006d\u005b\u0025\u0064\u005d", path, _eda)); _gaff != nil {
			return _gaff
		}
	}
	for _ece, _bff := range _gaa.BldOleChart {
		if _dbfc := _bff.ValidateWithPath(_b.Sprintf("\u0025s\u002fB\u006c\u0064\u004f\u006c\u0065C\u0068\u0061r\u0074\u005b\u0025\u0064\u005d", path, _ece)); _dbfc != nil {
			return _dbfc
		}
	}
	for _ced, _adb := range _gaa.BldGraphic {
		if _cegd := _adb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0042\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069c\u005b\u0025\u0064\u005d", path, _ced)); _cegd != nil {
			return _cegd
		}
	}
	return nil
}
func (_degg *CT_HeaderFooter) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _degg.SldNumAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u006c\u0064\u004e\u0075\u006d"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_degg.SldNumAttr))})
	}
	if _degg.HdrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0064\u0072"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_degg.HdrAttr))})
	}
	if _degg.FtrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0074\u0072"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_degg.FtrAttr))})
	}
	if _degg.DtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0074"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_degg.DtAttr))})
	}
	e.EncodeToken(start)
	if _degg.ExtLst != nil {
		_geeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_degg.ExtLst, _geeb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aaegg *PresentationPr) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003ap\u0072\u0065\u0073e\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u0050\u0072"
	return _aaegg.CT_PresentationProperties.MarshalXML(e, start)
}

type CT_TLByAnimateColorTransform struct {

	// RGB
	Rgb *CT_TLByRgbColorTransform

	// HSL
	Hsl *CT_TLByHslColorTransform
}

func (_agcge *ST_OleObjectFollowColorScheme) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_agcge = 0
	case "\u006e\u006f\u006e\u0065":
		*_agcge = 1
	case "\u0066\u0075\u006c\u006c":
		*_agcge = 2
	case "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064":
		*_agcge = 3
	}
	return nil
}

type EG_SlideListChoice struct {

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId
}

func (_bceec *CT_TLAnimateColorBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bceec.ClrSpcAttr != ST_TLAnimateColorSpaceUnset {
		_ddfdc, _gcdda := _bceec.ClrSpcAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u006c\u0072\u0053\u0070\u0063"})
		if _gcdda != nil {
			return _gcdda
		}
		start.Attr = append(start.Attr, _ddfdc)
	}
	if _bceec.DirAttr != ST_TLAnimateColorDirectionUnset {
		_adagd, _ffefd := _bceec.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
		if _ffefd != nil {
			return _ffefd
		}
		start.Attr = append(start.Attr, _adagd)
	}
	e.EncodeToken(start)
	_agfbg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_bceec.CBhvr, _agfbg)
	if _bceec.By != nil {
		_gdgb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_bceec.By, _gdgb)
	}
	if _bceec.From != nil {
		_fegf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_bceec.From, _fegf)
	}
	if _bceec.To != nil {
		_cdeeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_bceec.To, _cdeeb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GraphicalObjectFrame and its children
func (_feb *CT_GraphicalObjectFrame) Validate() error {
	return _feb.ValidateWithPath("\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065")
}

// ValidateWithPath validates the CT_PhotoAlbum and its children, prefixing error messages with path
func (_dafb *CT_PhotoAlbum) ValidateWithPath(path string) error {
	if _gebf := _dafb.LayoutAttr.ValidateWithPath(path + "/\u004c\u0061\u0079\u006f\u0075\u0074\u0041\u0074\u0074\u0072"); _gebf != nil {
		return _gebf
	}
	if _egbf := _dafb.FrameAttr.ValidateWithPath(path + "\u002f\u0046\u0072\u0061\u006d\u0065\u0041\u0074\u0074\u0072"); _egbf != nil {
		return _egbf
	}
	if _dafb.ExtLst != nil {
		if _ecgea := _dafb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecgea != nil {
			return _ecgea
		}
	}
	return nil
}
func NewCT_HandoutMasterIdListEntry() *CT_HandoutMasterIdListEntry {
	_caff := &CT_HandoutMasterIdListEntry{}
	return _caff
}
func (_ggfeg *SldSyncPr) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u0053\u0079\u006e\u0063\u0050\u0072"
	return _ggfeg.CT_SlideSyncProperties.MarshalXML(e, start)
}
func (_fcfaa *CT_TLTextTargetElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fcfaa.CharRg != nil {
		_deggf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0068\u0061\u0072\u0052\u0067"}}
		e.EncodeElement(_fcfaa.CharRg, _deggf)
	}
	if _fcfaa.PRg != nil {
		_fbbad := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070R\u0067"}}
		e.EncodeElement(_fcfaa.PRg, _fbbad)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_InOutTransition and its children, prefixing error messages with path
func (_bgdd *CT_InOutTransition) ValidateWithPath(path string) error {
	if _eafc := _bgdd.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _eafc != nil {
		return _eafc
	}
	return nil
}

// ValidateWithPath validates the CT_OutlineViewProperties and its children, prefixing error messages with path
func (_gaacf *CT_OutlineViewProperties) ValidateWithPath(path string) error {
	if _bdaba := _gaacf.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _bdaba != nil {
		return _bdaba
	}
	if _gaacf.SldLst != nil {
		if _bfaf := _gaacf.SldLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u004c\u0073\u0074"); _bfaf != nil {
			return _bfaf
		}
	}
	if _gaacf.ExtLst != nil {
		if _abce := _gaacf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abce != nil {
			return _abce
		}
	}
	return nil
}

type HandoutMaster struct{ CT_HandoutMaster }

// Validate validates the CT_Extension and its children
func (_dbfg *CT_Extension) Validate() error {
	return _dbfg.ValidateWithPath("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e")
}

type CT_TLBuildParagraph struct {

	// Build Types
	BuildAttr ST_TLParaBuildType

	// Build Level
	BldLvlAttr *uint32

	// Animate Background
	AnimBgAttr *bool

	// Auto Update Animation Background
	AutoUpdateAnimBgAttr *bool

	// Reverse
	RevAttr *bool

	// Auto Advance Time
	AdvAutoAttr *ST_TLTime

	// Template effects
	TmplLst      *CT_TLTemplateList
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

func (_gfbc ST_TLAnimateColorDirection) Validate() error { return _gfbc.ValidateWithPath("") }
func (_bfbc *EG_SlideListChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bdcgb:
	for {
		_dfgbg, _dagba := d.Token()
		if _dagba != nil {
			return _dagba
		}
		switch _gfgdd := _dfgbg.(type) {
		case _d.StartElement:
			switch _gfgdd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_bfbc.SldAll = NewCT_Empty()
				if _cfabcc := d.DecodeElement(_bfbc.SldAll, &_gfgdd); _cfabcc != nil {
					return _cfabcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_bfbc.SldRg = NewCT_IndexRange()
				if _eegag := d.DecodeElement(_bfbc.SldRg, &_gfgdd); _eegag != nil {
					return _eegag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_bfbc.CustShow = NewCT_CustomShowId()
				if _ecggdf := d.DecodeElement(_bfbc.CustShow, &_gfgdd); _ecggdf != nil {
					return _ecggdf
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u006c\u0069\u0064\u0065\u004ci\u0073\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _gfgdd.Name)
				if _fbdf := d.Skip(); _fbdf != nil {
					return _fbdf
				}
			}
		case _d.EndElement:
			break _bdcgb
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_PhotoAlbumFrameShapeUnset       ST_PhotoAlbumFrameShape = 0
	ST_PhotoAlbumFrameShapeFrameStyle1 ST_PhotoAlbumFrameShape = 1
	ST_PhotoAlbumFrameShapeFrameStyle2 ST_PhotoAlbumFrameShape = 2
	ST_PhotoAlbumFrameShapeFrameStyle3 ST_PhotoAlbumFrameShape = 3
	ST_PhotoAlbumFrameShapeFrameStyle4 ST_PhotoAlbumFrameShape = 4
	ST_PhotoAlbumFrameShapeFrameStyle5 ST_PhotoAlbumFrameShape = 5
	ST_PhotoAlbumFrameShapeFrameStyle6 ST_PhotoAlbumFrameShape = 6
	ST_PhotoAlbumFrameShapeFrameStyle7 ST_PhotoAlbumFrameShape = 7
)

func (_feefc *Presentation) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0070\u0072\u0065\u0073\u0065\u006e\u0074a\u0074\u0069\u006f\u006e"
	return _feefc.CT_Presentation.MarshalXML(e, start)
}

// Validate validates the PresentationPr and its children
func (_gafcc *PresentationPr) Validate() error {
	return _gafcc.ValidateWithPath("\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u0050\u0072")
}

// ValidateWithPath validates the CT_SlideLayoutIdListEntry and its children, prefixing error messages with path
func (_faae *CT_SlideLayoutIdListEntry) ValidateWithPath(path string) error {
	if _faae.IdAttr != nil {
		if *_faae.IdAttr < 2147483648 {
			return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0049\u0064A\u0074\u0074\u0072 \u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_faae.IdAttr)
		}
	}
	if _faae.ExtLst != nil {
		if _gbfb := _faae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbfb != nil {
			return _gbfb
		}
	}
	return nil
}

// Validate validates the OleObj and its children
func (_caaf *OleObj) Validate() error {
	return _caaf.ValidateWithPath("\u004f\u006c\u0065\u004f\u0062\u006a")
}
func NewCT_TagsData() *CT_TagsData { _fccdc := &CT_TagsData{}; return _fccdc }
func (_gefada *CT_TLCommandBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gefada.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _acaga := range start.Attr {
		if _acaga.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gefada.TypeAttr.UnmarshalXMLAttr(_acaga)
			continue
		}
		if _acaga.Name.Local == "\u0063\u006d\u0064" {
			_ddbbfb, _dcae := _acaga.Value, error(nil)
			if _dcae != nil {
				return _dcae
			}
			_gefada.CmdAttr = &_ddbbfb
			continue
		}
	}
_caffc:
	for {
		_befgg, _dedg := d.Token()
		if _dedg != nil {
			return _dedg
		}
		switch _beag := _befgg.(type) {
		case _d.StartElement:
			switch _beag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _cdfbf := d.DecodeElement(_gefada.CBhvr, &_beag); _cdfbf != nil {
					return _cdfbf
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006e\u0064\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _beag.Name)
				if _agdga := d.Skip(); _agdga != nil {
					return _agdga
				}
			}
		case _d.EndElement:
			break _caffc
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SideDirectionTransition and its children, prefixing error messages with path
func (_abca *CT_SideDirectionTransition) ValidateWithPath(path string) error {
	if _bcga := _abca.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _bcga != nil {
		return _bcga
	}
	return nil
}

// Validate validates the CT_OutlineViewProperties and its children
func (_affb *CT_OutlineViewProperties) Validate() error {
	return _affb.ValidateWithPath("\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_ecgd *CT_GroupShape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_fffa := _d.StartElement{Name: _d.Name{Local: "p\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ecgd.NvGrpSpPr, _fffa)
	_ddaf := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0067\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_ecgd.GrpSpPr, _ddaf)
	if _ecgd.Choice != nil {
		for _, _cabc := range _ecgd.Choice {
			_cabc.MarshalXML(e, _d.StartElement{})
		}
	}
	if _ecgd.ExtLst != nil {
		_gbcdc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecgd.ExtLst, _gbcdc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ShowProperties and its children
func (_agab *CT_ShowProperties) Validate() error {
	return _agab.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}
func (_dbgg *CT_SlideSorterViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbgg.CViewPr = NewCT_CommonViewProperties()
	for _, _bgdeb := range start.Attr {
		if _bgdeb.Name.Local == "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_badbb, _ecfc := _ag.ParseBool(_bgdeb.Value)
			if _ecfc != nil {
				return _ecfc
			}
			_dbgg.ShowFormattingAttr = &_badbb
			continue
		}
	}
_gdafb:
	for {
		_eccc, _befd := d.Token()
		if _befd != nil {
			return _befd
		}
		switch _geeccf := _eccc.(type) {
		case _d.StartElement:
			switch _geeccf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _dcaff := d.DecodeElement(_dbgg.CViewPr, &_geeccf); _dcaff != nil {
					return _dcaff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbgg.ExtLst = NewCT_ExtensionList()
				if _becb := d.DecodeElement(_dbgg.ExtLst, &_geeccf); _becb != nil {
					return _becb
				}
			default:
				_be.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065w\u0050\u0072op\u0065\u0072\u0074i\u0065\u0073\u0020\u0025\u0076", _geeccf.Name)
				if _dgdf := d.Skip(); _dgdf != nil {
					return _dgdf
				}
			}
		case _d.EndElement:
			break _gdafb
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLAnimVariant and its children
func (_ebbeg *CT_TLAnimVariant) Validate() error {
	return _ebbeg.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074")
}

type ST_ViewType byte

// Validate validates the CT_TLAnimateScaleBehavior and its children
func (_bgfg *CT_TLAnimateScaleBehavior) Validate() error {
	return _bgfg.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065S\u0063a\u006ce\u0042\u0065\u0068\u0061\u0076\u0069\u006fr")
}
func (_fdcc *CT_TLAnimateScaleBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fdcc.ZoomContentsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u007a\u006f\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_fdcc.ZoomContentsAttr))})
	}
	e.EncodeToken(start)
	_cbdc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_fdcc.CBhvr, _cbdc)
	if _fdcc.By != nil {
		_decgc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_fdcc.By, _decgc)
	}
	if _fdcc.From != nil {
		_bfbbg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_fdcc.From, _bfbbg)
	}
	if _fdcc.To != nil {
		_bgef := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_fdcc.To, _bgef)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SlideSyncProperties and its children, prefixing error messages with path
func (_bgadb *CT_SlideSyncProperties) ValidateWithPath(path string) error {
	if _bgadb.ExtLst != nil {
		if _cecb := _bgadb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cecb != nil {
			return _cecb
		}
	}
	return nil
}
func (_deab *CT_TLByHslColorTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bfgca := range start.Attr {
		if _bfgca.Name.Local == "\u0068" {
			_gbge, _aadfd := _ag.ParseInt(_bfgca.Value, 10, 32)
			if _aadfd != nil {
				return _aadfd
			}
			_deab.HAttr = int32(_gbge)
			continue
		}
		if _bfgca.Name.Local == "\u0073" {
			_fgaf, _gdedb := ParseUnionST_FixedPercentage(_bfgca.Value)
			if _gdedb != nil {
				return _gdedb
			}
			_deab.SAttr = _fgaf
			continue
		}
		if _bfgca.Name.Local == "\u006c" {
			_gabab, _dage := ParseUnionST_FixedPercentage(_bfgca.Value)
			if _dage != nil {
				return _dage
			}
			_deab.LAttr = _gabab
			continue
		}
	}
	for {
		_dade, _abbdg := d.Token()
		if _abbdg != nil {
			return _b.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LBy\u0048sl\u0043\u006f\u006c\u006f\u0072\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _abbdg)
		}
		if _dbce, _cgbd := _dade.(_d.EndElement); _cgbd && _dbce.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ceff *ST_TLAnimateMotionPathEditMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fdeec, _agdgf := d.Token()
	if _agdgf != nil {
		return _agdgf
	}
	if _gddda, _dgdec := _fdeec.(_d.EndElement); _dgdec && _gddda.Name == start.Name {
		*_ceff = 1
		return nil
	}
	if _gbfc, _bdadc := _fdeec.(_d.CharData); !_bdadc {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdeec)
	} else {
		switch string(_gbfc) {
		case "":
			*_ceff = 0
		case "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":
			*_ceff = 1
		case "\u0066\u0069\u0078e\u0064":
			*_ceff = 2
		}
	}
	_fdeec, _agdgf = d.Token()
	if _agdgf != nil {
		return _agdgf
	}
	if _cfaff, _cbbbbc := _fdeec.(_d.EndElement); _cbbbbc && _cfaff.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdeec)
}
func NewCT_ViewProperties() *CT_ViewProperties { _bfgf := &CT_ViewProperties{}; return _bfgf }
func (_eaega ST_TLAnimateBehaviorCalcMode) String() string {
	switch _eaega {
	case 0:
		return ""
	case 1:
		return "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065"
	case 2:
		return "\u006c\u0069\u006e"
	case 3:
		return "\u0066\u006d\u006c\u0061"
	}
	return ""
}

// Validate validates the CT_SlideTransitionChoice and its children
func (_fbcda *CT_SlideTransitionChoice) Validate() error {
	return _fbcda.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0072\u0061\u006e\u0073i\u0074\u0069\u006f\u006e\u0043\u0068\u006f\u0069\u0063\u0065")
}

type CT_OutlineViewSlideList struct {

	// Presentation Slide
	Sld []*CT_OutlineViewSlideEntry
}

func NewCT_CustomerData() *CT_CustomerData { _dbc := &CT_CustomerData{}; return _dbc }

type CT_OutlineViewProperties struct {

	// Common View Properties
	CViewPr *CT_CommonViewProperties

	// List of Presentation Slides
	SldLst *CT_OutlineViewSlideList
	ExtLst *CT_ExtensionList
}

func (_fbaag *ST_PhotoAlbumLayout) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fbaag = 0
	case "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065":
		*_fbaag = 1
	case "\u0031\u0070\u0069\u0063":
		*_fbaag = 2
	case "\u0032\u0070\u0069\u0063":
		*_fbaag = 3
	case "\u0034\u0070\u0069\u0063":
		*_fbaag = 4
	case "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_fbaag = 5
	case "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_fbaag = 6
	case "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_fbaag = 7
	}
	return nil
}
func NewCT_Extension() *CT_Extension { _ggec := &CT_Extension{}; return _ggec }

type CT_TLTriggerTimeNodeID struct {

	// Value
	ValAttr uint32
}

func (_agdfd *CT_ShowInfoBrowse) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _geca := range start.Attr {
		if _geca.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0063\u0072\u006f\u006c\u006c\u0062\u0061\u0072" {
			_edeeg, _gbfed := _ag.ParseBool(_geca.Value)
			if _gbfed != nil {
				return _gbfed
			}
			_agdfd.ShowScrollbarAttr = &_edeeg
			continue
		}
	}
	for {
		_dfacb, _ebcb := d.Token()
		if _ebcb != nil {
			return _b.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042\u0072\u006f\u0077\u0073\u0065: \u0025\u0073", _ebcb)
		}
		if _fdfdc, _egbga := _dfacb.(_d.EndElement); _egbga && _fdfdc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLMediaNodeVideo and its children, prefixing error messages with path
func (_cfbaf *CT_TLMediaNodeVideo) ValidateWithPath(path string) error {
	if _ebbac := _cfbaf.CMediaNode.ValidateWithPath(path + "/\u0043\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"); _ebbac != nil {
		return _ebbac
	}
	return nil
}
func (_cfeg *CT_HtmlPublishProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _geecg := range start.Attr {
		if _geecg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _geecg.Name.Local == "\u0069\u0064" || _geecg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _geecg.Name.Local == "\u0069\u0064" {
			_gadd, _aabba := _geecg.Value, error(nil)
			if _aabba != nil {
				return _aabba
			}
			_cfeg.IdAttr = _gadd
			continue
		}
		if _geecg.Name.Local == "\u0073\u0068o\u0077\u0053\u0070e\u0061\u006b\u0065\u0072\u004e\u006f\u0074\u0065\u0073" {
			_gabc, _dbbb := _ag.ParseBool(_geecg.Value)
			if _dbbb != nil {
				return _dbbb
			}
			_cfeg.ShowSpeakerNotesAttr = &_gabc
			continue
		}
		if _geecg.Name.Local == "\u0074\u0061\u0072\u0067\u0065\u0074" {
			_bdea, _fdcf := _geecg.Value, error(nil)
			if _fdcf != nil {
				return _fdcf
			}
			_cfeg.TargetAttr = &_bdea
			continue
		}
		if _geecg.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_acae, _edgd := _geecg.Value, error(nil)
			if _edgd != nil {
				return _edgd
			}
			_cfeg.TitleAttr = &_acae
			continue
		}
	}
_bfce:
	for {
		_ggfdb, _cadgb := d.Token()
		if _cadgb != nil {
			return _cadgb
		}
		switch _fedf := _ggfdb.(type) {
		case _d.StartElement:
			switch _fedf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_cfeg.SldAll = NewCT_Empty()
				if _daed := d.DecodeElement(_cfeg.SldAll, &_fedf); _daed != nil {
					return _daed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_cfeg.SldRg = NewCT_IndexRange()
				if _ebbce := d.DecodeElement(_cfeg.SldRg, &_fedf); _ebbce != nil {
					return _ebbce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_cfeg.CustShow = NewCT_CustomShowId()
				if _caga := d.DecodeElement(_cfeg.CustShow, &_fedf); _caga != nil {
					return _caga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfeg.ExtLst = NewCT_ExtensionList()
				if _cbfg := d.DecodeElement(_cfeg.ExtLst, &_fedf); _cbfg != nil {
					return _cbfg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _fedf.Name)
				if _aaded := d.Skip(); _aaded != nil {
					return _aaded
				}
			}
		case _d.EndElement:
			break _bfce
		case _d.CharData:
		}
	}
	return nil
}
func (_gggfef ST_TLTime) String() string {
	if _gggfef.Uint32 != nil {
		return _b.Sprintf("\u0025\u0076", *_gggfef.Uint32)
	}
	if _gggfef.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		return _gggfef.ST_TLTimeIndefinite.String()
	}
	return ""
}
func NewCT_TLIterateIntervalPercentage() *CT_TLIterateIntervalPercentage {
	_cdfce := &CT_TLIterateIntervalPercentage{}
	return _cdfce
}

type CT_TLBehaviorAttributeNameList struct {

	// Attribute Name
	AttrName []string
}
type CT_PrintProperties struct {

	// Print Output
	PrnWhatAttr ST_PrintWhat

	// Print Color Mode
	ClrModeAttr ST_PrintColorMode

	// Print Hidden Slides
	HiddenSlidesAttr *bool

	// Scale to Fit Paper when printing
	ScaleToFitPaperAttr *bool

	// Frame slides when printing
	FrameSlidesAttr *bool
	ExtLst          *CT_ExtensionList
}

func (_aafdca *CT_TLTimeNodeSequence) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aafdca.CTn = NewCT_TLCommonTimeNodeData()
	for _, _dcebc := range start.Attr {
		if _dcebc.Name.Local == "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006e\u0074" {
			_ddaff, _dddgf := _ag.ParseBool(_dcebc.Value)
			if _dddgf != nil {
				return _dddgf
			}
			_aafdca.ConcurrentAttr = &_ddaff
			continue
		}
		if _dcebc.Name.Local == "\u0070\u0072\u0065\u0076\u0041\u0063" {
			_aafdca.PrevAcAttr.UnmarshalXMLAttr(_dcebc)
			continue
		}
		if _dcebc.Name.Local == "\u006e\u0065\u0078\u0074\u0041\u0063" {
			_aafdca.NextAcAttr.UnmarshalXMLAttr(_dcebc)
			continue
		}
	}
_fccgd:
	for {
		_gcgda, _bacbf := d.Token()
		if _bacbf != nil {
			return _bacbf
		}
		switch _afbfc := _gcgda.(type) {
		case _d.StartElement:
			switch _afbfc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _fcfe := d.DecodeElement(_aafdca.CTn, &_afbfc); _fcfe != nil {
					return _fcfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "p\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_aafdca.PrevCondLst = NewCT_TLTimeConditionList()
				if _abdgc := d.DecodeElement(_aafdca.PrevCondLst, &_afbfc); _abdgc != nil {
					return _abdgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_aafdca.NextCondLst = NewCT_TLTimeConditionList()
				if _fbfea := d.DecodeElement(_aafdca.NextCondLst, &_afbfc); _fbfea != nil {
					return _fbfea
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0053\u0065\u0071\u0075\u0065\u006e\u0063\u0065\u0020\u0025\u0076", _afbfc.Name)
				if _afeda := d.Skip(); _afeda != nil {
					return _afeda
				}
			}
		case _d.EndElement:
			break _fccgd
		case _d.CharData:
		}
	}
	return nil
}
func (_egdaf *ST_TransitionInOutDirectionType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cdcgd, _dbage := d.Token()
	if _dbage != nil {
		return _dbage
	}
	if _gabce, _eadce := _cdcgd.(_d.EndElement); _eadce && _gabce.Name == start.Name {
		*_egdaf = 1
		return nil
	}
	if _aadag, _bdcba := _cdcgd.(_d.CharData); !_bdcba {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdcgd)
	} else {
		switch string(_aadag) {
		case "":
			*_egdaf = 0
		case "\u006f\u0075\u0074":
			*_egdaf = 1
		case "\u0069\u006e":
			*_egdaf = 2
		}
	}
	_cdcgd, _dbage = d.Token()
	if _dbage != nil {
		return _dbage
	}
	if _bcffg, _aaacd := _cdcgd.(_d.EndElement); _aaacd && _bcffg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdcgd)
}

// ValidateWithPath validates the CT_ShowProperties and its children, prefixing error messages with path
func (_efgee *CT_ShowProperties) ValidateWithPath(path string) error {
	if _efgee.Present != nil {
		if _ccdfd := _efgee.Present.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0073\u0065\u006e\u0074"); _ccdfd != nil {
			return _ccdfd
		}
	}
	if _efgee.Browse != nil {
		if _aeag := _efgee.Browse.ValidateWithPath(path + "\u002fB\u0072\u006f\u0077\u0073\u0065"); _aeag != nil {
			return _aeag
		}
	}
	if _efgee.Kiosk != nil {
		if _eecg := _efgee.Kiosk.ValidateWithPath(path + "\u002f\u004b\u0069\u006f\u0073\u006b"); _eecg != nil {
			return _eecg
		}
	}
	if _efgee.SldAll != nil {
		if _cdeg := _efgee.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _cdeg != nil {
			return _cdeg
		}
	}
	if _efgee.SldRg != nil {
		if _acgbc := _efgee.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _acgbc != nil {
			return _acgbc
		}
	}
	if _efgee.CustShow != nil {
		if _cbab := _efgee.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _cbab != nil {
			return _cbab
		}
	}
	if _efgee.PenClr != nil {
		if _fcgbg := _efgee.PenClr.ValidateWithPath(path + "\u002fP\u0065\u006e\u0043\u006c\u0072"); _fcgbg != nil {
			return _fcgbg
		}
	}
	if _efgee.ExtLst != nil {
		if _gbca := _efgee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbca != nil {
			return _gbca
		}
	}
	return nil
}

type CT_SlideTiming struct {
	TnLst *CT_TimeNodeList

	// Build List
	BldLst *CT_BuildList
	ExtLst *CT_ExtensionListModify
}

func (_bada *CT_HtmlPublishProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bada.ShowSpeakerNotesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068o\u0077\u0053\u0070e\u0061\u006b\u0065\u0072\u004e\u006f\u0074\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_bada.ShowSpeakerNotesAttr))})
	}
	if _bada.TargetAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0061\u0072\u0067\u0065\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bada.TargetAttr)})
	}
	if _bada.TitleAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_bada.TitleAttr)})
	}
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bada.IdAttr)})
	e.EncodeToken(start)
	if _bada.SldAll != nil {
		_cfgf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_bada.SldAll, _cfgf)
	}
	if _bada.SldRg != nil {
		_fbfg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_bada.SldRg, _fbfg)
	}
	if _bada.CustShow != nil {
		_bgba := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_bada.CustShow, _bgba)
	}
	if _bada.ExtLst != nil {
		_bcg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bada.ExtLst, _bcg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_EmbeddedFontListEntry and its children, prefixing error messages with path
func (_ebaa *CT_EmbeddedFontListEntry) ValidateWithPath(path string) error {
	if _gdbf := _ebaa.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _gdbf != nil {
		return _gdbf
	}
	if _ebaa.Regular != nil {
		if _geac := _ebaa.Regular.ValidateWithPath(path + "\u002f\u0052\u0065\u0067\u0075\u006c\u0061\u0072"); _geac != nil {
			return _geac
		}
	}
	if _ebaa.Bold != nil {
		if _cgac := _ebaa.Bold.ValidateWithPath(path + "\u002f\u0042\u006fl\u0064"); _cgac != nil {
			return _cgac
		}
	}
	if _ebaa.Italic != nil {
		if _ebba := _ebaa.Italic.ValidateWithPath(path + "\u002fI\u0074\u0061\u006c\u0069\u0063"); _ebba != nil {
			return _ebba
		}
	}
	if _ebaa.BoldItalic != nil {
		if _aade := _ebaa.BoldItalic.ValidateWithPath(path + "/\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"); _aade != nil {
			return _aade
		}
	}
	return nil
}

// Validate validates the CT_TLBuildParagraph and its children
func (_dcdc *CT_TLBuildParagraph) Validate() error {
	return _dcdc.ValidateWithPath("\u0043\u0054\u005f\u0054LB\u0075\u0069\u006c\u0064\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068")
}
func (_cbeec *CT_NotesTextViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cbeec.CViewPr = NewCT_CommonViewProperties()
_bcaff:
	for {
		_dbae, _cbec := d.Token()
		if _cbec != nil {
			return _cbec
		}
		switch _gafd := _dbae.(type) {
		case _d.StartElement:
			switch _gafd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _edee := d.DecodeElement(_cbeec.CViewPr, &_gafd); _edee != nil {
					return _edee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbeec.ExtLst = NewCT_ExtensionList()
				if _dafe := d.DecodeElement(_cbeec.ExtLst, &_gafd); _dafe != nil {
					return _dafe
				}
			default:
				_be.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u004e\u006ft\u0065\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gafd.Name)
				if _gdcff := d.Skip(); _gdcff != nil {
					return _gdcff
				}
			}
		case _d.EndElement:
			break _bcaff
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SmartTags and its children, prefixing error messages with path
func (_ffddf *CT_SmartTags) ValidateWithPath(path string) error { return nil }
func (_dcfeaa *CT_TLTextTargetElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_efgaf:
	for {
		_adcae, _gfbff := d.Token()
		if _gfbff != nil {
			return _gfbff
		}
		switch _fffdb := _adcae.(type) {
		case _d.StartElement:
			switch _fffdb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}:
				_dcfeaa.CharRg = NewCT_IndexRange()
				if _bgabe := d.DecodeElement(_dcfeaa.CharRg, &_fffdb); _bgabe != nil {
					return _bgabe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0052\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0052\u0067"}:
				_dcfeaa.PRg = NewCT_IndexRange()
				if _gbfbe := d.DecodeElement(_dcfeaa.PRg, &_fffdb); _gbfbe != nil {
					return _gbfbe
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0065x\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _fffdb.Name)
				if _faffc := d.Skip(); _faffc != nil {
					return _faffc
				}
			}
		case _d.EndElement:
			break _efgaf
		case _d.CharData:
		}
	}
	return nil
}

type CT_CornerDirectionTransition struct {

	// Direction
	DirAttr ST_TransitionCornerDirectionType
}

// ValidateWithPath validates the CT_TLByHslColorTransform and its children, prefixing error messages with path
func (_gegad *CT_TLByHslColorTransform) ValidateWithPath(path string) error {
	if _ggbb := _gegad.SAttr.ValidateWithPath(path + "\u002f\u0053\u0041\u0074\u0074\u0072"); _ggbb != nil {
		return _ggbb
	}
	if _cbefg := _gegad.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _cbefg != nil {
		return _cbefg
	}
	return nil
}
func (_adab *ST_TLTimeIndefinite) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_adab = 0
	case "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065":
		*_adab = 1
	}
	return nil
}
func (_eefedd ST_TLTimeAnimateValueTime) String() string {
	if _eefedd.ST_PositiveFixedPercentage != nil {
		return _eefedd.ST_PositiveFixedPercentage.String()
	}
	if _eefedd.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		return _eefedd.ST_TLTimeIndefinite.String()
	}
	return ""
}

// ValidateWithPath validates the CT_TagsData and its children, prefixing error messages with path
func (_aecgf *CT_TagsData) ValidateWithPath(path string) error { return nil }

type CT_CommentAuthor struct {

	// Comment Author ID
	IdAttr uint32

	// Comment Author Name
	NameAttr string

	// Comment Author Initials
	InitialsAttr string

	// Index of Comment Author's last comment
	LastIdxAttr uint32

	// Comment Author Color Index
	ClrIdxAttr uint32
	ExtLst     *CT_ExtensionList
}

func (_abbb *ST_TLTriggerRuntimeNode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_abbb = 0
	case "\u0066\u0069\u0072s\u0074":
		*_abbb = 1
	case "\u006c\u0061\u0073\u0074":
		*_abbb = 2
	case "\u0061\u006c\u006c":
		*_abbb = 3
	}
	return nil
}

// Validate validates the CT_PictureNonVisual and its children
func (_ffdd *CT_PictureNonVisual) Validate() error {
	return _ffdd.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}
func (_dedad *EG_ChildSlide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gcedf:
	for {
		_eabeb, _eaead := d.Token()
		if _eaead != nil {
			return _eaead
		}
		switch _fcgfb := _eabeb.(type) {
		case _d.StartElement:
			switch _fcgfb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_dedad.ClrMapOvr = _c.NewCT_ColorMappingOverride()
				if _fgce := d.DecodeElement(_dedad.ClrMapOvr, &_fcgfb); _fgce != nil {
					return _fgce
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043h\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065 \u0025\u0076", _fcgfb.Name)
				if _cgbfg := d.Skip(); _cgbfg != nil {
					return _cgbfg
				}
			}
		case _d.EndElement:
			break _gcedf
		case _d.CharData:
		}
	}
	return nil
}
func (_bbeb *CT_TagList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_feagb:
	for {
		_bddff, _cfcae := d.Token()
		if _cfcae != nil {
			return _cfcae
		}
		switch _cbaa := _bddff.(type) {
		case _d.StartElement:
			switch _cbaa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067"}:
				_eafbd := NewCT_StringTag()
				if _geeg := d.DecodeElement(_eafbd, &_cbaa); _geeg != nil {
					return _geeg
				}
				_bbeb.Tag = append(_bbeb.Tag, _eafbd)
			default:
				_be.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fT\u0061\u0067\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cbaa.Name)
				if _eedef := d.Skip(); _eedef != nil {
					return _eedef
				}
			}
		case _d.EndElement:
			break _feagb
		case _d.CharData:
		}
	}
	return nil
}
func (_cccdd *SldMaster) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072"
	return _cccdd.CT_SlideMaster.MarshalXML(e, start)
}
func (_ccaf *CT_ShowProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ccaf.LoopAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u006f\u006f\u0070"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ccaf.LoopAttr))})
	}
	if _ccaf.ShowNarrationAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ccaf.ShowNarrationAttr))})
	}
	if _ccaf.ShowAnimationAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ccaf.ShowAnimationAttr))})
	}
	if _ccaf.UseTimingsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0073\u0065\u0054\u0069\u006d\u0069\u006e\u0067\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ccaf.UseTimingsAttr))})
	}
	e.EncodeToken(start)
	if _ccaf.Present != nil {
		_fbeb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0070\u0072\u0065\u0073\u0065\u006et"}}
		e.EncodeElement(_ccaf.Present, _fbeb)
	}
	if _ccaf.Browse != nil {
		_acaeg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0072\u006f\u0077\u0073\u0065"}}
		e.EncodeElement(_ccaf.Browse, _acaeg)
	}
	if _ccaf.Kiosk != nil {
		_dbeg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006b\u0069\u006f\u0073\u006b"}}
		e.EncodeElement(_ccaf.Kiosk, _dbeg)
	}
	if _ccaf.SldAll != nil {
		_ccgbb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_ccaf.SldAll, _ccgbb)
	}
	if _ccaf.SldRg != nil {
		_dbaag := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_ccaf.SldRg, _dbaag)
	}
	if _ccaf.CustShow != nil {
		_ageg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_ccaf.CustShow, _ageg)
	}
	if _ccaf.PenClr != nil {
		_dbdgf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0065\u006e\u0043\u006c\u0072"}}
		e.EncodeElement(_ccaf.PenClr, _dbdgf)
	}
	if _ccaf.ExtLst != nil {
		_ddae := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccaf.ExtLst, _ddae)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type AG_Ole struct {
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

func (_deabf *CT_TLTimeTargetElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_agccb:
	for {
		_bbdca, _agfa := d.Token()
		if _agfa != nil {
			return _agfa
		}
		switch _cdbg := _bbdca.(type) {
		case _d.StartElement:
			switch _cdbg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}:
				_deabf.SldTgt = NewCT_Empty()
				if _cabf := d.DecodeElement(_deabf.SldTgt, &_cdbg); _cabf != nil {
					return _cabf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}:
				_deabf.SndTgt = _c.NewCT_EmbeddedWAVAudioFile()
				if _bdfadg := d.DecodeElement(_deabf.SndTgt, &_cdbg); _bdfadg != nil {
					return _bdfadg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}:
				_deabf.SpTgt = NewCT_TLShapeTargetElement()
				if _ccccc := d.DecodeElement(_deabf.SpTgt, &_cdbg); _ccccc != nil {
					return _ccccc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}:
				_deabf.InkTgt = NewCT_TLSubShapeId()
				if _acfb := d.DecodeElement(_deabf.InkTgt, &_cdbg); _acfb != nil {
					return _acfb
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _cdbg.Name)
				if _aabcf := d.Skip(); _aabcf != nil {
					return _aabcf
				}
			}
		case _d.EndElement:
			break _agccb
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLTemplateList struct {

	// Template Effects
	Tmpl []*CT_TLTemplate
}

func (_ggfad *EG_ChildSlide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ggfad.ClrMapOvr != nil {
		_ggebg := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_ggfad.ClrMapOvr, _ggebg)
	}
	return nil
}

// ValidateWithPath validates the CT_SlideLayoutIdList and its children, prefixing error messages with path
func (_aebb *CT_SlideLayoutIdList) ValidateWithPath(path string) error {
	for _dgede, _daabd := range _aebb.SldLayoutId {
		if _beaad := _daabd.ValidateWithPath(_b.Sprintf("\u0025s\u002fS\u006c\u0064\u004c\u0061\u0079o\u0075\u0074I\u0064\u005b\u0025\u0064\u005d", path, _dgede)); _beaad != nil {
			return _beaad
		}
	}
	return nil
}
func (_fffbd ST_TransitionCornerDirectionType) String() string {
	switch _fffbd {
	case 0:
		return ""
	case 1:
		return "\u006c\u0075"
	case 2:
		return "\u0072\u0075"
	case 3:
		return "\u006c\u0064"
	case 4:
		return "\u0072\u0064"
	}
	return ""
}
func (_ccf *CT_Connector) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ccf.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_ccf.SpPr = _c.NewCT_ShapeProperties()
_egba:
	for {
		_decc, _ecfa := d.Token()
		if _ecfa != nil {
			return _ecfa
		}
		switch _eee := _decc.(type) {
		case _d.StartElement:
			switch _eee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _bce := d.DecodeElement(_ccf.NvCxnSpPr, &_eee); _bce != nil {
					return _bce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _fddf := d.DecodeElement(_ccf.SpPr, &_eee); _fddf != nil {
					return _fddf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_ccf.Style = _c.NewCT_ShapeStyle()
				if _cad := d.DecodeElement(_ccf.Style, &_eee); _cad != nil {
					return _cad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccf.ExtLst = NewCT_ExtensionListModify()
				if _gbcd := d.DecodeElement(_ccf.ExtLst, &_eee); _gbcd != nil {
					return _gbcd
				}
			default:
				_be.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006en\u0065\u0063\u0074\u006f\u0072\u0020\u0025\u0076", _eee.Name)
				if _fccg := d.Skip(); _fccg != nil {
					return _fccg
				}
			}
		case _d.EndElement:
			break _egba
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLAnimVariantBooleanVal and its children
func (_bcgae *CT_TLAnimVariantBooleanVal) Validate() error {
	return _bcgae.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0042\u006f\u006f\u006c\u0065\u0061n\u0056\u0061\u006c")
}

// ValidateWithPath validates the EG_TopLevelSlide and its children, prefixing error messages with path
func (_cgded *EG_TopLevelSlide) ValidateWithPath(path string) error {
	if _bddfa := _cgded.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _bddfa != nil {
		return _bddfa
	}
	return nil
}
func NewCT_OutlineViewProperties() *CT_OutlineViewProperties {
	_caab := &CT_OutlineViewProperties{}
	_caab.CViewPr = NewCT_CommonViewProperties()
	return _caab
}
func (_aaag *CT_ViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _aaag.LastViewAttr != ST_ViewTypeUnset {
		_cdbe, _efbca := _aaag.LastViewAttr.MarshalXMLAttr(_d.Name{Local: "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077"})
		if _efbca != nil {
			return _efbca
		}
		start.Attr = append(start.Attr, _cdbe)
	}
	if _aaag.ShowCommentsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_aaag.ShowCommentsAttr))})
	}
	e.EncodeToken(start)
	if _aaag.NormalViewPr != nil {
		_cgebf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u006f\u0072\u006d\u0061\u006c\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_aaag.NormalViewPr, _cgebf)
	}
	if _aaag.SlideViewPr != nil {
		_bdbga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_aaag.SlideViewPr, _bdbga)
	}
	if _aaag.OutlineViewPr != nil {
		_dgdef := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006fu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_aaag.OutlineViewPr, _dgdef)
	}
	if _aaag.NotesTextViewPr != nil {
		_ffdde := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u0054\u0065\u0078\u0074\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_aaag.NotesTextViewPr, _ffdde)
	}
	if _aaag.SorterViewPr != nil {
		_dfbb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006f\u0072\u0074\u0065\u0072\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_aaag.SorterViewPr, _dfbb)
	}
	if _aaag.NotesViewPr != nil {
		_ddadg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_aaag.NotesViewPr, _ddadg)
	}
	if _aaag.GridSpacing != nil {
		_accebf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}}
		e.EncodeElement(_aaag.GridSpacing, _accebf)
	}
	if _aaag.ExtLst != nil {
		_accace := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aaag.ExtLst, _accace)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_addcf ST_TransitionSpeed) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_addcf.String(), start)
}
func NewCT_CommonViewProperties() *CT_CommonViewProperties {
	_gcbg := &CT_CommonViewProperties{}
	_gcbg.Scale = _c.NewCT_Scale2D()
	_gcbg.Origin = _c.NewCT_Point2D()
	return _gcbg
}

// Validate validates the CT_CustomerDataList and its children
func (_ceef *CT_CustomerDataList) Validate() error {
	return _ceef.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061\u004c\u0069\u0073\u0074")
}
func (_cbafa *Sld) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cbafa.CT_Slide = *NewCT_Slide()
	for _, _faaef := range start.Attr {
		if _faaef.Name.Local == "\u0073\u0068\u006f\u0077" {
			_cgbfc, _geda := _ag.ParseBool(_faaef.Value)
			if _geda != nil {
				return _geda
			}
			_cbafa.ShowAttr = &_cgbfc
			continue
		}
		if _faaef.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_bcccd, _badgd := _ag.ParseBool(_faaef.Value)
			if _badgd != nil {
				return _badgd
			}
			_cbafa.ShowMasterSpAttr = &_bcccd
			continue
		}
		if _faaef.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_efdcb, _dddde := _ag.ParseBool(_faaef.Value)
			if _dddde != nil {
				return _dddde
			}
			_cbafa.ShowMasterPhAnimAttr = &_efdcb
			continue
		}
	}
_ebggf:
	for {
		_gdfgb, _ebbcc := d.Token()
		if _ebbcc != nil {
			return _ebbcc
		}
		switch _gebd := _gdfgb.(type) {
		case _d.StartElement:
			switch _gebd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _fcbda := d.DecodeElement(_cbafa.CSld, &_gebd); _fcbda != nil {
					return _fcbda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_cbafa.ClrMapOvr = _c.NewCT_ColorMappingOverride()
				if _bdbda := d.DecodeElement(_cbafa.ClrMapOvr, &_gebd); _bdbda != nil {
					return _bdbda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_cbafa.Transition = NewCT_SlideTransition()
				if _ececc := d.DecodeElement(_cbafa.Transition, &_gebd); _ececc != nil {
					return _ececc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_cbafa.Timing = NewCT_SlideTiming()
				if _feab := d.DecodeElement(_cbafa.Timing, &_gebd); _feab != nil {
					return _feab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbafa.ExtLst = NewCT_ExtensionListModify()
				if _agfcb := d.DecodeElement(_cbafa.ExtLst, &_gebd); _agfcb != nil {
					return _agfcb
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0053l\u0064\u0020\u0025\u0076", _gebd.Name)
				if _cdcb := d.Skip(); _cdcb != nil {
					return _cdcb
				}
			}
		case _d.EndElement:
			break _ebggf
		case _d.CharData:
		}
	}
	return nil
}
func (_feaec ST_TLBehaviorOverrideType) ValidateWithPath(path string) error {
	switch _feaec {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_feaec))
	}
	return nil
}
func (_bbaeg *CT_Guide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ffff := range start.Attr {
		if _ffff.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_bbaeg.OrientAttr.UnmarshalXMLAttr(_ffff)
			continue
		}
		if _ffff.Name.Local == "\u0070\u006f\u0073" {
			_egdca, _feef := ParseUnionST_Coordinate32(_ffff.Value)
			if _feef != nil {
				return _feef
			}
			_bbaeg.PosAttr = &_egdca
			continue
		}
	}
	for {
		_fgge, _bbgd := d.Token()
		if _bbgd != nil {
			return _b.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fG\u0075\u0069\u0064\u0065: \u0025\u0073", _bbgd)
		}
		if _ffdc, _cbbbb := _fgge.(_d.EndElement); _cbbbb && _ffdc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ShowInfoBrowse and its children
func (_bdfad *CT_ShowInfoBrowse) Validate() error {
	return _bdfad.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042r\u006f\u0077\u0073\u0065")
}

type CT_TLTemplate struct {

	// Level
	LvlAttr *uint32

	// Time Node List
	TnLst *CT_TimeNodeList
}
type ST_TLAnimateBehaviorCalcMode byte

func (_bcc *CT_BackgroundProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bcc.ShadeToTitleAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u0061d\u0065\u0054\u006f\u0054\u0069\u0074\u006c\u0065"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_bcc.ShadeToTitleAttr))})
	}
	e.EncodeToken(start)
	if _bcc.NoFill != nil {
		_gcdbe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcc.NoFill, _gcdbe)
	}
	if _bcc.SolidFill != nil {
		_cac := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcc.SolidFill, _cac)
	}
	if _bcc.GradFill != nil {
		_fdb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcc.GradFill, _fdb)
	}
	if _bcc.BlipFill != nil {
		_bgf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcc.BlipFill, _bgf)
	}
	if _bcc.PattFill != nil {
		_efe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcc.PattFill, _efe)
	}
	if _bcc.GrpFill != nil {
		_dfg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_bcc.GrpFill, _dfg)
	}
	if _bcc.EffectLst != nil {
		_cacg := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bcc.EffectLst, _cacg)
	}
	if _bcc.EffectDag != nil {
		_dce := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_bcc.EffectDag, _dce)
	}
	if _bcc.ExtLst != nil {
		_fb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bcc.ExtLst, _fb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cdgbg ST_TLTimeIndefinite) String() string {
	switch _cdgbg {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065"
	}
	return ""
}
func (_ddcff *ST_TLBehaviorOverrideType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eeedg, _adef := d.Token()
	if _adef != nil {
		return _adef
	}
	if _gcgcc, _caggg := _eeedg.(_d.EndElement); _caggg && _gcgcc.Name == start.Name {
		*_ddcff = 1
		return nil
	}
	if _agea, _dcddc := _eeedg.(_d.CharData); !_dcddc {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eeedg)
	} else {
		switch string(_agea) {
		case "":
			*_ddcff = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_ddcff = 1
		case "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
			*_ddcff = 2
		}
	}
	_eeedg, _adef = d.Token()
	if _adef != nil {
		return _adef
	}
	if _fdfgc, _abfgfe := _eeedg.(_d.EndElement); _abfgfe && _fdfgc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eeedg)
}

// ValidateWithPath validates the CT_TLPoint and its children, prefixing error messages with path
func (_baea *CT_TLPoint) ValidateWithPath(path string) error {
	if _dgge := _baea.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _dgge != nil {
		return _dgge
	}
	if _egde := _baea.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _egde != nil {
		return _egde
	}
	return nil
}
func ParseUnionST_PositivePercentage(s string) (_c.ST_PositivePercentage, error) {
	return _c.ParseUnionST_PositivePercentage(s)
}

// Validate validates the CT_CommonSlideData and its children
func (_cfab *CT_CommonSlideData) Validate() error {
	return _cfab.ValidateWithPath("\u0043T\u005fC\u006f\u006d\u006d\u006f\u006eS\u006c\u0069d\u0065\u0044\u0061\u0074\u0061")
}

// Validate validates the CT_SlideLayoutIdList and its children
func (_bfbfa *CT_SlideLayoutIdList) Validate() error {
	return _bfbfa.ValidateWithPath("C\u0054_\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075\u0074\u0049\u0064Li\u0073\u0074")
}

// Validate validates the Presentation and its children
func (_ceee *Presentation) Validate() error {
	return _ceee.ValidateWithPath("\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e")
}
func (_fcdad ST_TLBehaviorAdditiveType) Validate() error { return _fcdad.ValidateWithPath("") }
func (_ebed *CT_TLTimeConditionList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fefee:
	for {
		_fcdcc, _gdaa := d.Token()
		if _gdaa != nil {
			return _gdaa
		}
		switch _edeea := _fcdcc.(type) {
		case _d.StartElement:
			switch _edeea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064"}:
				_dagec := NewCT_TLTimeCondition()
				if _bdfdd := d.DecodeElement(_dagec, &_edeea); _bdfdd != nil {
					return _bdfdd
				}
				_ebed.Cond = append(_ebed.Cond, _dagec)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _edeea.Name)
				if _afeagc := d.Skip(); _afeagc != nil {
					return _afeagc
				}
			}
		case _d.EndElement:
			break _fefee
		case _d.CharData:
		}
	}
	return nil
}

type CT_GroupShapeChoice struct {
	Sp           []*CT_Shape
	GrpSp        []*CT_GroupShape
	GraphicFrame []*CT_GraphicalObjectFrame
	CxnSp        []*CT_Connector
	Pic          []*CT_Picture
	ContentPart  []*CT_Rel
}

func (_dgce *NotesMaster) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dgce.CT_NotesMaster = *NewCT_NotesMaster()
_caeeg:
	for {
		_acbf, _acggdf := d.Token()
		if _acggdf != nil {
			return _acggdf
		}
		switch _gcbag := _acbf.(type) {
		case _d.StartElement:
			switch _gcbag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ecddec := d.DecodeElement(_dgce.CSld, &_gcbag); _ecddec != nil {
					return _ecddec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _becce := d.DecodeElement(_dgce.ClrMap, &_gcbag); _becce != nil {
					return _becce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_dgce.Hf = NewCT_HeaderFooter()
				if _gecdf := d.DecodeElement(_dgce.Hf, &_gcbag); _gecdf != nil {
					return _gecdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}:
				_dgce.NotesStyle = _c.NewCT_TextListStyle()
				if _gegeb := d.DecodeElement(_dgce.NotesStyle, &_gcbag); _gegeb != nil {
					return _gegeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgce.ExtLst = NewCT_ExtensionListModify()
				if _cgee := d.DecodeElement(_dgce.ExtLst, &_gcbag); _cgee != nil {
					return _cgee
				}
			default:
				_be.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0020\u0025\u0076", _gcbag.Name)
				if _cabg := d.Skip(); _cabg != nil {
					return _cabg
				}
			}
		case _d.EndElement:
			break _caeeg
		case _d.CharData:
		}
	}
	return nil
}

type CT_WebProperties struct {

	// Show animation in HTML output
	ShowAnimationAttr *bool

	// Resize graphics in HTML output
	ResizeGraphicsAttr *bool

	// Allow PNG in HTML output
	AllowPngAttr *bool

	// Rely on VML for HTML output
	RelyOnVmlAttr *bool

	// Organize HTML output in folders
	OrganizeInFoldersAttr *bool

	// Use long file names in HTML output
	UseLongFilenamesAttr *bool

	// Image size for HTML output
	ImgSzAttr ST_WebScreenSize

	// Encoding for HTML output
	EncodingAttr *string

	// Slide Navigation Colors for HTML output
	ClrAttr ST_WebColorType
	ExtLst  *CT_ExtensionList
}

const (
	ST_TLAnimateEffectTransitionUnset ST_TLAnimateEffectTransition = 0
	ST_TLAnimateEffectTransitionIn    ST_TLAnimateEffectTransition = 1
	ST_TLAnimateEffectTransitionOut   ST_TLAnimateEffectTransition = 2
	ST_TLAnimateEffectTransitionNone  ST_TLAnimateEffectTransition = 3
)

// Validate validates the AG_ChildSlide and its children
func (_ad *AG_ChildSlide) Validate() error {
	return _ad.ValidateWithPath("\u0041\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065")
}
func (_aaeba *ST_TLTimeNodeType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gegbf, _aaea := d.Token()
	if _aaea != nil {
		return _aaea
	}
	if _ffebf, _eafe := _gegbf.(_d.EndElement); _eafe && _ffebf.Name == start.Name {
		*_aaeba = 1
		return nil
	}
	if _babg, _aadfe := _gegbf.(_d.CharData); !_aadfe {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gegbf)
	} else {
		switch string(_babg) {
		case "":
			*_aaeba = 0
		case "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074":
			*_aaeba = 1
		case "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074":
			*_aaeba = 2
		case "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074":
			*_aaeba = 3
		case "\u006da\u0069\u006e\u0053\u0065\u0071":
			*_aaeba = 4
		case "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071":
			*_aaeba = 5
		case "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072":
			*_aaeba = 6
		case "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p":
			*_aaeba = 7
		case "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
			*_aaeba = 8
		case "\u0074\u006d\u0052\u006f\u006f\u0074":
			*_aaeba = 9
		}
	}
	_gegbf, _aaea = d.Token()
	if _aaea != nil {
		return _aaea
	}
	if _ffdaf, _cbgfe := _gegbf.(_d.EndElement); _cbgfe && _ffdaf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gegbf)
}

// ValidateWithPath validates the CT_TLTimeNodeParallel and its children, prefixing error messages with path
func (_cebdc *CT_TLTimeNodeParallel) ValidateWithPath(path string) error {
	if _cgfeg := _cebdc.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _cgfeg != nil {
		return _cgfeg
	}
	return nil
}
func NewCT_ExtensionList() *CT_ExtensionList { _ccge := &CT_ExtensionList{}; return _ccge }
func (_edbb ST_TLTriggerRuntimeNode) ValidateWithPath(path string) error {
	switch _edbb {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_edbb))
	}
	return nil
}
func NewCT_TLCommandBehavior() *CT_TLCommandBehavior {
	_feaaf := &CT_TLCommandBehavior{}
	_feaaf.CBhvr = NewCT_TLCommonBehaviorData()
	return _feaaf
}

type CT_TLAnimVariantIntegerVal struct {

	// Value
	ValAttr int32
}

func (_geecge *ST_SlideSizeType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_geecge = 0
	case "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783":
		*_geecge = 1
	case "\u006c\u0065\u0074\u0074\u0065\u0072":
		*_geecge = 2
	case "\u0041\u0034":
		*_geecge = 3
	case "\u0033\u0035\u006d\u006d":
		*_geecge = 4
	case "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064":
		*_geecge = 5
	case "\u0062\u0061\u006e\u006e\u0065\u0072":
		*_geecge = 6
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_geecge = 7
	case "\u006c\u0065\u0064\u0067\u0065\u0072":
		*_geecge = 8
	case "\u0041\u0033":
		*_geecge = 9
	case "\u0042\u0034\u0049S\u004f":
		*_geecge = 10
	case "\u0042\u0035\u0049S\u004f":
		*_geecge = 11
	case "\u0042\u0034\u004aI\u0053":
		*_geecge = 12
	case "\u0042\u0035\u004aI\u0053":
		*_geecge = 13
	case "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064":
		*_geecge = 14
	case "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039":
		*_geecge = 15
	case "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030":
		*_geecge = 16
	}
	return nil
}

// ValidateWithPath validates the NotesMaster and its children, prefixing error messages with path
func (_cdgb *NotesMaster) ValidateWithPath(path string) error {
	if _cffgb := _cdgb.CT_NotesMaster.ValidateWithPath(path); _cffgb != nil {
		return _cffgb
	}
	return nil
}
func (_dbaff *CT_SplitTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abeea := range start.Attr {
		if _abeea.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_dbaff.OrientAttr.UnmarshalXMLAttr(_abeea)
			continue
		}
		if _abeea.Name.Local == "\u0064\u0069\u0072" {
			_dbaff.DirAttr.UnmarshalXMLAttr(_abeea)
			continue
		}
	}
	for {
		_faaac, _aedf := d.Token()
		if _aedf != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u0070\u006c\u0069\u0074\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _aedf)
		}
		if _cfefg, _dcaaf := _faaac.(_d.EndElement); _dcaaf && _cfefg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCmAuthorLst() *CmAuthorLst {
	_gfbde := &CmAuthorLst{}
	_gfbde.CT_CommentAuthorList = *NewCT_CommentAuthorList()
	return _gfbde
}

// Validate validates the CT_SlideIdList and its children
func (_bfdf *CT_SlideIdList) Validate() error {
	return _bfdf.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049d\u004c\u0069\u0073\u0074")
}
func NewCT_TLBehaviorAttributeNameList() *CT_TLBehaviorAttributeNameList {
	_fbdgd := &CT_TLBehaviorAttributeNameList{}
	return _fbdgd
}
func (_gdff *CT_NotesMaster) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gdff.CSld = NewCT_CommonSlideData()
	_gdff.ClrMap = _c.NewCT_ColorMapping()
_febd:
	for {
		_bbge, _aedd := d.Token()
		if _aedd != nil {
			return _aedd
		}
		switch _bgedf := _bbge.(type) {
		case _d.StartElement:
			switch _bgedf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _geceg := d.DecodeElement(_gdff.CSld, &_bgedf); _geceg != nil {
					return _geceg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _gefc := d.DecodeElement(_gdff.ClrMap, &_bgedf); _gefc != nil {
					return _gefc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_gdff.Hf = NewCT_HeaderFooter()
				if _bcafd := d.DecodeElement(_gdff.Hf, &_bgedf); _bcafd != nil {
					return _bcafd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}:
				_gdff.NotesStyle = _c.NewCT_TextListStyle()
				if _baff := d.DecodeElement(_gdff.NotesStyle, &_bgedf); _baff != nil {
					return _baff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdff.ExtLst = NewCT_ExtensionListModify()
				if _dbga := d.DecodeElement(_gdff.ExtLst, &_bgedf); _dbga != nil {
					return _dbga
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061s\u0074e\u0072\u0020\u0025\u0076", _bgedf.Name)
				if _edaac := d.Skip(); _edaac != nil {
					return _edaac
				}
			}
		case _d.EndElement:
			break _febd
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideRelationshipList and its children
func (_fgeed *CT_SlideRelationshipList) Validate() error {
	return _fgeed.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074")
}

// Validate validates the EG_Background and its children
func (_dfdaf *EG_Background) Validate() error {
	return _dfdaf.ValidateWithPath("\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064")
}
func (_agee ST_TLTime) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _agee.Uint32 != nil {
		e.EncodeToken(_d.CharData(_b.Sprintf("\u0025\u0064", *_agee.Uint32)))
	}
	if _agee.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		e.EncodeToken(_d.CharData(_agee.ST_TLTimeIndefinite.String()))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

// Validate validates the AG_TLBuild and its children
func (_bdg *AG_TLBuild) Validate() error {
	return _bdg.ValidateWithPath("\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064")
}
func NewCT_TLCommonTimeNodeData() *CT_TLCommonTimeNodeData {
	_dbbeg := &CT_TLCommonTimeNodeData{}
	return _dbbeg
}
func NewCT_CommonSlideViewProperties() *CT_CommonSlideViewProperties {
	_eadg := &CT_CommonSlideViewProperties{}
	_eadg.CViewPr = NewCT_CommonViewProperties()
	return _eadg
}
func (_dccc *CT_TLCommonBehaviorData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dccc.CTn = NewCT_TLCommonTimeNodeData()
	_dccc.TgtEl = NewCT_TLTimeTargetElement()
	for _, _cfcbf := range start.Attr {
		if _cfcbf.Name.Local == "\u0061\u0064\u0064\u0069\u0074\u0069\u0076\u0065" {
			_dccc.AdditiveAttr.UnmarshalXMLAttr(_cfcbf)
			continue
		}
		if _cfcbf.Name.Local == "\u0061\u0063\u0063\u0075\u006d\u0075\u006c\u0061\u0074\u0065" {
			_dccc.AccumulateAttr.UnmarshalXMLAttr(_cfcbf)
			continue
		}
		if _cfcbf.Name.Local == "\u0078\u0066\u0072\u006d\u0054\u0079\u0070\u0065" {
			_dccc.XfrmTypeAttr.UnmarshalXMLAttr(_cfcbf)
			continue
		}
		if _cfcbf.Name.Local == "\u0066\u0072\u006f\u006d" {
			_dbadc, _baaf := _cfcbf.Value, error(nil)
			if _baaf != nil {
				return _baaf
			}
			_dccc.FromAttr = &_dbadc
			continue
		}
		if _cfcbf.Name.Local == "\u0074\u006f" {
			_afbb, _babab := _cfcbf.Value, error(nil)
			if _babab != nil {
				return _babab
			}
			_dccc.ToAttr = &_afbb
			continue
		}
		if _cfcbf.Name.Local == "\u0062\u0079" {
			_eacge, _adfgf := _cfcbf.Value, error(nil)
			if _adfgf != nil {
				return _adfgf
			}
			_dccc.ByAttr = &_eacge
			continue
		}
		if _cfcbf.Name.Local == "\u0072\u0063\u0074\u0078" {
			_cgfe, _acgea := _cfcbf.Value, error(nil)
			if _acgea != nil {
				return _acgea
			}
			_dccc.RctxAttr = &_cgfe
			continue
		}
		if _cfcbf.Name.Local == "\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0065" {
			_dccc.OverrideAttr.UnmarshalXMLAttr(_cfcbf)
			continue
		}
	}
_bbgcf:
	for {
		_aggdg, _cdcfg := d.Token()
		if _cdcfg != nil {
			return _cdcfg
		}
		switch _dgbg := _aggdg.(type) {
		case _d.StartElement:
			switch _dgbg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _abebg := d.DecodeElement(_dccc.CTn, &_dgbg); _abebg != nil {
					return _abebg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				if _acec := d.DecodeElement(_dccc.TgtEl, &_dgbg); _acec != nil {
					return _acec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "a\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}:
				_dccc.AttrNameLst = NewCT_TLBehaviorAttributeNameList()
				if _bcadg := d.DecodeElement(_dccc.AttrNameLst, &_dgbg); _bcadg != nil {
					return _bcadg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u0042e\u0068\u0061\u0076\u0069\u006f\u0072D\u0061\u0074\u0061 \u0025\u0076", _dgbg.Name)
				if _fbdeg := d.Skip(); _fbdeg != nil {
					return _fbdeg
				}
			}
		case _d.EndElement:
			break _bbgcf
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_SlideIdList() *CT_SlideIdList { _caef := &CT_SlideIdList{}; return _caef }
func (_geced *ST_TLAnimateMotionBehaviorOrigin) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cebfc, _cfae := d.Token()
	if _cfae != nil {
		return _cfae
	}
	if _dadf, _bfgaf := _cebfc.(_d.EndElement); _bfgaf && _dadf.Name == start.Name {
		*_geced = 1
		return nil
	}
	if _affag, _afdfa := _cebfc.(_d.CharData); !_afdfa {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cebfc)
	} else {
		switch string(_affag) {
		case "":
			*_geced = 0
		case "\u0070\u0061\u0072\u0065\u006e\u0074":
			*_geced = 1
		case "\u006c\u0061\u0079\u006f\u0075\u0074":
			*_geced = 2
		}
	}
	_cebfc, _cfae = d.Token()
	if _cfae != nil {
		return _cfae
	}
	if _fdbag, _adga := _cebfc.(_d.EndElement); _adga && _fdbag.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cebfc)
}
func ParseStdlibTime(s string) (_f.Time, error) { return _c.ParseStdlibTime(s) }

// Validate validates the CT_TLAnimVariantStringVal and its children
func (_eafga *CT_TLAnimVariantStringVal) Validate() error {
	return _eafga.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072i\u0061n\u0074S\u0074\u0072\u0069\u006e\u0067\u0056\u0061l")
}
func (_agfgcc *CT_TLCommandBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _agfgcc.TypeAttr != ST_TLCommandTypeUnset {
		_efgcb, _eaddc := _agfgcc.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _eaddc != nil {
			return _eaddc
		}
		start.Attr = append(start.Attr, _efgcb)
	}
	if _agfgcc.CmdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006d\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_agfgcc.CmdAttr)})
	}
	e.EncodeToken(start)
	_ccgfa := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_agfgcc.CBhvr, _ccgfa)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLTimeConditionList() *CT_TLTimeConditionList {
	_dccae := &CT_TLTimeConditionList{}
	return _dccae
}
func (_cafg *CT_Placeholder) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cafg.TypeAttr != ST_PlaceholderTypeUnset {
		_ffce, _aedb := _cafg.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _aedb != nil {
			return _aedb
		}
		start.Attr = append(start.Attr, _ffce)
	}
	if _cafg.OrientAttr != ST_DirectionUnset {
		_ddda, _fbaa := _cafg.OrientAttr.MarshalXMLAttr(_d.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _fbaa != nil {
			return _fbaa
		}
		start.Attr = append(start.Attr, _ddda)
	}
	if _cafg.SzAttr != ST_PlaceholderSizeUnset {
		_bedg, _cfgfc := _cafg.SzAttr.MarshalXMLAttr(_d.Name{Local: "\u0073\u007a"})
		if _cfgfc != nil {
			return _cfgfc
		}
		start.Attr = append(start.Attr, _bedg)
	}
	if _cafg.IdxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064\u0078"}, Value: _b.Sprintf("\u0025\u0076", *_cafg.IdxAttr)})
	}
	if _cafg.HasCustomPromptAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068a\u0073C\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u006d\u0070\u0074"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_cafg.HasCustomPromptAttr))})
	}
	e.EncodeToken(start)
	if _cafg.ExtLst != nil {
		_caeg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cafg.ExtLst, _caeg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dagff *HandoutMaster) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dagff.CT_HandoutMaster = *NewCT_HandoutMaster()
_fcdge:
	for {
		_dddag, _bdgc := d.Token()
		if _bdgc != nil {
			return _bdgc
		}
		switch _adfc := _dddag.(type) {
		case _d.StartElement:
			switch _adfc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ccbf := d.DecodeElement(_dagff.CSld, &_adfc); _ccbf != nil {
					return _ccbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _cdfe := d.DecodeElement(_dagff.ClrMap, &_adfc); _cdfe != nil {
					return _cdfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_dagff.Hf = NewCT_HeaderFooter()
				if _cdagf := d.DecodeElement(_dagff.Hf, &_adfc); _cdagf != nil {
					return _cdagf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dagff.ExtLst = NewCT_ExtensionListModify()
				if _dbgaeg := d.DecodeElement(_dagff.ExtLst, &_adfc); _dbgaeg != nil {
					return _dbgaeg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072 \u0025\u0076", _adfc.Name)
				if _dgbad := d.Skip(); _dgbad != nil {
					return _dgbad
				}
			}
		case _d.EndElement:
			break _fcdge
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLAnimateColorBehavior and its children
func (_cdddc *CT_TLAnimateColorBehavior) Validate() error {
	return _cdddc.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0042\u0065\u0068\u0061\u0076\u0069\u006fr")
}

type CT_TLOleBuildChart struct {

	// Build
	BldAttr ST_TLOleChartBuildType

	// Animate Background
	AnimBgAttr   *bool
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

func NewCT_OutlineViewSlideList() *CT_OutlineViewSlideList {
	_ffab := &CT_OutlineViewSlideList{}
	return _ffab
}
func NewPresentation() *Presentation {
	_bcge := &Presentation{}
	_bcge.CT_Presentation = *NewCT_Presentation()
	return _bcge
}
func (_gacdge *ST_TLBehaviorAccumulateType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ffbbd, _efbb := d.Token()
	if _efbb != nil {
		return _efbb
	}
	if _bgced, _abaec := _ffbbd.(_d.EndElement); _abaec && _bgced.Name == start.Name {
		*_gacdge = 1
		return nil
	}
	if _fdcg, _ceeaa := _ffbbd.(_d.CharData); !_ceeaa {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffbbd)
	} else {
		switch string(_fdcg) {
		case "":
			*_gacdge = 0
		case "\u006e\u006f\u006e\u0065":
			*_gacdge = 1
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_gacdge = 2
		}
	}
	_ffbbd, _efbb = d.Token()
	if _efbb != nil {
		return _efbb
	}
	if _gbbff, _bcced := _ffbbd.(_d.EndElement); _bcced && _gbbff.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffbbd)
}

// Validate validates the CT_TLCommonMediaNodeData and its children
func (_ebbef *CT_TLCommonMediaNodeData) Validate() error {
	return _ebbef.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065d\u0069\u0061\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061")
}
func NewCT_SlideLayout() *CT_SlideLayout {
	_faabc := &CT_SlideLayout{}
	_faabc.CSld = NewCT_CommonSlideData()
	return _faabc
}

type SldSyncPr struct{ CT_SlideSyncProperties }
type CT_CustomShow struct {

	// Custom Show Name
	NameAttr string

	// Custom Show ID
	IdAttr uint32

	// List of Presentation Slides
	SldLst *CT_SlideRelationshipList
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_TagList and its children
func (_cgcag *CT_TagList) Validate() error {
	return _cgcag.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0067\u004c\u0069\u0073\u0074")
}

type CT_TLAnimateEffectBehavior struct {

	// Transition
	TransitionAttr ST_TLAnimateEffectTransition

	// Filter
	FilterAttr *string

	// Property List
	PrLstAttr *string
	CBhvr     *CT_TLCommonBehaviorData

	// Progress
	Progress *CT_TLAnimVariant
}
type CT_InOutTransition struct {

	// Direction
	DirAttr ST_TransitionInOutDirectionType
}

// ValidateWithPath validates the CT_SlideTiming and its children, prefixing error messages with path
func (_gcbga *CT_SlideTiming) ValidateWithPath(path string) error {
	if _gcbga.TnLst != nil {
		if _cbcea := _gcbga.TnLst.ValidateWithPath(path + "\u002f\u0054\u006e\u004c\u0073\u0074"); _cbcea != nil {
			return _cbcea
		}
	}
	if _gcbga.BldLst != nil {
		if _decd := _gcbga.BldLst.ValidateWithPath(path + "\u002fB\u006c\u0064\u004c\u0073\u0074"); _decd != nil {
			return _decd
		}
	}
	if _gcbga.ExtLst != nil {
		if _egbde := _gcbga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egbde != nil {
			return _egbde
		}
	}
	return nil
}
func (_acgcd *CT_TLMediaNodeAudio) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _acgcd.IsNarrationAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "i\u0073\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_acgcd.IsNarrationAttr))})
	}
	e.EncodeToken(start)
	_adgef := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063M\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}}
	e.EncodeElement(_acgcd.CMediaNode, _adgef)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OrientationTransition and its children, prefixing error messages with path
func (_bcbeb *CT_OrientationTransition) ValidateWithPath(path string) error {
	if _fad := _bcbeb.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _fad != nil {
		return _fad
	}
	return nil
}

// ValidateWithPath validates the CT_CommentAuthor and its children, prefixing error messages with path
func (_cebab *CT_CommentAuthor) ValidateWithPath(path string) error {
	if _cebab.ExtLst != nil {
		if _cdgd := _cebab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cdgd != nil {
			return _cdgd
		}
	}
	return nil
}
func (_bafca *CmAuthorLst) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bafca.CT_CommentAuthorList = *NewCT_CommentAuthorList()
_cdbgc:
	for {
		_feecc, _dcfc := d.Token()
		if _dcfc != nil {
			return _dcfc
		}
		switch _gffgb := _feecc.(type) {
		case _d.StartElement:
			switch _gffgb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}:
				_gbace := NewCT_CommentAuthor()
				if _abede := d.DecodeElement(_gbace, &_gffgb); _abede != nil {
					return _abede
				}
				_bafca.CmAuthor = append(_bafca.CmAuthor, _gbace)
			default:
				_be.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074\u0020\u0025\u0076", _gffgb.Name)
				if _gfbgb := d.Skip(); _gfbgb != nil {
					return _gfbgb
				}
			}
		case _d.EndElement:
			break _cdbgc
		case _d.CharData:
		}
	}
	return nil
}

type CT_HandoutMasterIdList struct {

	// Handout Master ID
	HandoutMasterId *CT_HandoutMasterIdListEntry
}

// Validate validates the CT_WebProperties and its children
func (_agac *CT_WebProperties) Validate() error {
	return _agac.ValidateWithPath("\u0043\u0054_\u0057\u0065\u0062P\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the Notes and its children, prefixing error messages with path
func (_bdedd *Notes) ValidateWithPath(path string) error {
	if _afcfa := _bdedd.CT_NotesSlide.ValidateWithPath(path); _afcfa != nil {
		return _afcfa
	}
	return nil
}
func NewNotesMaster() *NotesMaster {
	_ggeccg := &NotesMaster{}
	_ggeccg.CT_NotesMaster = *NewCT_NotesMaster()
	return _ggeccg
}
func (_ecfca ST_TransitionSpeed) Validate() error { return _ecfca.ValidateWithPath("") }
func (_deba *CT_Slide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_deba.CSld = NewCT_CommonSlideData()
	for _, _aaefe := range start.Attr {
		if _aaefe.Name.Local == "\u0073\u0068\u006f\u0077" {
			_caffb, _gfbb := _ag.ParseBool(_aaefe.Value)
			if _gfbb != nil {
				return _gfbb
			}
			_deba.ShowAttr = &_caffb
			continue
		}
		if _aaefe.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_dfbcg, _dcef := _ag.ParseBool(_aaefe.Value)
			if _dcef != nil {
				return _dcef
			}
			_deba.ShowMasterSpAttr = &_dfbcg
			continue
		}
		if _aaefe.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_dcebb, _eeca := _ag.ParseBool(_aaefe.Value)
			if _eeca != nil {
				return _eeca
			}
			_deba.ShowMasterPhAnimAttr = &_dcebb
			continue
		}
	}
_ebad:
	for {
		_abadg, _cffda := d.Token()
		if _cffda != nil {
			return _cffda
		}
		switch _cffb := _abadg.(type) {
		case _d.StartElement:
			switch _cffb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _cdcd := d.DecodeElement(_deba.CSld, &_cffb); _cdcd != nil {
					return _cdcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_deba.ClrMapOvr = _c.NewCT_ColorMappingOverride()
				if _ddcg := d.DecodeElement(_deba.ClrMapOvr, &_cffb); _ddcg != nil {
					return _ddcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_deba.Transition = NewCT_SlideTransition()
				if _eced := d.DecodeElement(_deba.Transition, &_cffb); _eced != nil {
					return _eced
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_deba.Timing = NewCT_SlideTiming()
				if _fbfcc := d.DecodeElement(_deba.Timing, &_cffb); _fbfcc != nil {
					return _fbfcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_deba.ExtLst = NewCT_ExtensionListModify()
				if _aecc := d.DecodeElement(_deba.ExtLst, &_cffb); _aecc != nil {
					return _aecc
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0020\u0025\u0076", _cffb.Name)
				if _cbea := d.Skip(); _cbea != nil {
					return _cbea
				}
			}
		case _d.EndElement:
			break _ebad
		case _d.CharData:
		}
	}
	return nil
}

type CT_SlideMasterIdListEntry struct {

	// Slide Master Identifier
	IdAttr  *uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}
type ST_TLBehaviorTransformType byte

func (_cgec *ST_TLAnimateBehaviorValueType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cgec = 0
	case "\u0073\u0074\u0072":
		*_cgec = 1
	case "\u006e\u0075\u006d":
		*_cgec = 2
	case "\u0063\u006c\u0072":
		*_cgec = 3
	}
	return nil
}
func (_gfdga *CmAuthorLst) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074"
	return _gfdga.CT_CommentAuthorList.MarshalXML(e, start)
}
func NewCT_TLTimeNodeParallel() *CT_TLTimeNodeParallel {
	_dbcgg := &CT_TLTimeNodeParallel{}
	_dbcgg.CTn = NewCT_TLCommonTimeNodeData()
	return _dbcgg
}

// Validate validates the CT_TLByRgbColorTransform and its children
func (_fffe *CT_TLByRgbColorTransform) Validate() error {
	return _fffe.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0042\u0079\u0052\u0067\u0062\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}
func (_fgca *CT_HeaderFooter) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _geba := range start.Attr {
		if _geba.Name.Local == "\u0073\u006c\u0064\u004e\u0075\u006d" {
			_cefb, _egdcc := _ag.ParseBool(_geba.Value)
			if _egdcc != nil {
				return _egdcc
			}
			_fgca.SldNumAttr = &_cefb
			continue
		}
		if _geba.Name.Local == "\u0068\u0064\u0072" {
			_dcfea, _degaa := _ag.ParseBool(_geba.Value)
			if _degaa != nil {
				return _degaa
			}
			_fgca.HdrAttr = &_dcfea
			continue
		}
		if _geba.Name.Local == "\u0066\u0074\u0072" {
			_gdebd, _gebc := _ag.ParseBool(_geba.Value)
			if _gebc != nil {
				return _gebc
			}
			_fgca.FtrAttr = &_gdebd
			continue
		}
		if _geba.Name.Local == "\u0064\u0074" {
			_gfde, _eabf := _ag.ParseBool(_geba.Value)
			if _eabf != nil {
				return _eabf
			}
			_fgca.DtAttr = &_gfde
			continue
		}
	}
_gaege:
	for {
		_abfgf, _eebb := d.Token()
		if _eebb != nil {
			return _eebb
		}
		switch _fggeb := _abfgf.(type) {
		case _d.StartElement:
			switch _fggeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgca.ExtLst = NewCT_ExtensionListModify()
				if _baed := d.DecodeElement(_fgca.ExtLst, &_fggeb); _baed != nil {
					return _baed
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072\u0020\u0025\u0076", _fggeb.Name)
				if _cccf := d.Skip(); _cccf != nil {
					return _cccf
				}
			}
		case _d.EndElement:
			break _gaege
		case _d.CharData:
		}
	}
	return nil
}
func (_dbgaf ST_TLAnimateMotionBehaviorOrigin) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dbgaf.String(), start)
}
func (_ecadg ST_TLAnimateEffectTransition) Validate() error { return _ecadg.ValidateWithPath("") }
func (_ecdefg ST_TLBehaviorOverrideType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dfaef := _d.Attr{}
	_dfaef.Name = name
	switch _ecdefg {
	case ST_TLBehaviorOverrideTypeUnset:
		_dfaef.Value = ""
	case ST_TLBehaviorOverrideTypeNormal:
		_dfaef.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_TLBehaviorOverrideTypeChildStyle:
		_dfaef.Value = "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return _dfaef, nil
}
func (_aeeg ST_SlideLayoutType) ValidateWithPath(path string) error {
	switch _aeeg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aeeg))
	}
	return nil
}

// ValidateWithPath validates the CT_ShowInfoKiosk and its children, prefixing error messages with path
func (_ecaec *CT_ShowInfoKiosk) ValidateWithPath(path string) error { return nil }
func (_ebfe *CT_CommentList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ebfe.Cm != nil {
		_bdb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006d"}}
		for _, _gbae := range _ebfe.Cm {
			e.EncodeElement(_gbae, _bdb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type SldMaster struct{ CT_SlideMaster }

// ValidateWithPath validates the CT_TLTriggerRuntimeNode and its children, prefixing error messages with path
func (_cbdbee *CT_TLTriggerRuntimeNode) ValidateWithPath(path string) error {
	if _cbdbee.ValAttr == ST_TLTriggerRuntimeNodeUnset {
		return _b.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cfabd := _cbdbee.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cfabd != nil {
		return _cfabd
	}
	return nil
}
func (_befbe ST_IterateType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fdaae := _d.Attr{}
	_fdaae.Name = name
	switch _befbe {
	case ST_IterateTypeUnset:
		_fdaae.Value = ""
	case ST_IterateTypeEl:
		_fdaae.Value = "\u0065\u006c"
	case ST_IterateTypeWd:
		_fdaae.Value = "\u0077\u0064"
	case ST_IterateTypeLt:
		_fdaae.Value = "\u006c\u0074"
	}
	return _fdaae, nil
}
func (_bbda *CT_SlideTiming) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bbda.TnLst != nil {
		_bdcfg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_bbda.TnLst, _bdcfg)
	}
	if _bbda.BldLst != nil {
		_dagf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_bbda.BldLst, _dagf)
	}
	if _bbda.ExtLst != nil {
		_dbdd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bbda.ExtLst, _dbdd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fgcfc *CT_TLPoint) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078"}, Value: _b.Sprintf("\u0025\u0076", _fgcfc.XAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0079"}, Value: _b.Sprintf("\u0025\u0076", _fgcfc.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_ShowType and its children, prefixing error messages with path
func (_eegbd *EG_ShowType) ValidateWithPath(path string) error {
	if _eegbd.Present != nil {
		if _cebbd := _eegbd.Present.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0073\u0065\u006e\u0074"); _cebbd != nil {
			return _cebbd
		}
	}
	if _eegbd.Browse != nil {
		if _acbef := _eegbd.Browse.ValidateWithPath(path + "\u002fB\u0072\u006f\u0077\u0073\u0065"); _acbef != nil {
			return _acbef
		}
	}
	if _eegbd.Kiosk != nil {
		if _caffcb := _eegbd.Kiosk.ValidateWithPath(path + "\u002f\u004b\u0069\u006f\u0073\u006b"); _caffcb != nil {
			return _caffcb
		}
	}
	return nil
}
func (_ecfdgb ST_TLBehaviorAccumulateType) ValidateWithPath(path string) error {
	switch _ecfdgb {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecfdgb))
	}
	return nil
}

type CT_TLCommonMediaNodeData struct {

	// Volume
	VolAttr *_c.ST_PositiveFixedPercentage

	// Mute
	MuteAttr *bool

	// Number of Slides
	NumSldAttr *uint32

	// Show When Stopped
	ShowWhenStoppedAttr *bool

	// Common Time Node Properties
	CTn   *CT_TLCommonTimeNodeData
	TgtEl *CT_TLTimeTargetElement
}

// Validate validates the CT_CustomShowId and its children
func (_dbbg *CT_CustomShowId) Validate() error {
	return _dbbg.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u0049\u0064")
}
func (_bgbdg ST_SlideSizeType) ValidateWithPath(path string) error {
	switch _bgbdg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgbdg))
	}
	return nil
}
func NewCT_Background() *CT_Background { _gca := &CT_Background{}; return _gca }

// Validate validates the CT_TLCommonTimeNodeData and its children
func (_fgcdgf *CT_TLCommonTimeNodeData) Validate() error {
	return _fgcdgf.ValidateWithPath("\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061")
}

type ST_TLParaBuildType byte
type CT_SlideLayout struct {

	// Matching Name
	MatchingNameAttr *string

	// Slide Layout Type
	TypeAttr ST_SlideLayoutType

	// Preserve Slide Layout
	PreserveAttr *bool

	// Is User Drawn
	UserDrawnAttr *bool

	// Common slide data for slide layouts
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr *_c.CT_ColorMappingOverride

	// Slide Transition for a Slide Layout
	Transition *CT_SlideTransition

	// Slide Timing Information for a Slide Layout
	Timing *CT_SlideTiming

	// Header/Footer information for a slide layout
	Hf                   *CT_HeaderFooter
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}
type CT_ShowInfoBrowse struct {

	// Show Scroll Bar in Window
	ShowScrollbarAttr *bool
}

// ValidateWithPath validates the SldMaster and its children, prefixing error messages with path
func (_ggagb *SldMaster) ValidateWithPath(path string) error {
	if _cdddd := _ggagb.CT_SlideMaster.ValidateWithPath(path); _cdddd != nil {
		return _cdddd
	}
	return nil
}
func (_aggcdd *ST_TLTimeNodePresetClassType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fabaf, _eeeg := d.Token()
	if _eeeg != nil {
		return _eeeg
	}
	if _gabg, _bece := _fabaf.(_d.EndElement); _bece && _gabg.Name == start.Name {
		*_aggcdd = 1
		return nil
	}
	if _efbga, _agbfg := _fabaf.(_d.CharData); !_agbfg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fabaf)
	} else {
		switch string(_efbga) {
		case "":
			*_aggcdd = 0
		case "\u0065\u006e\u0074\u0072":
			*_aggcdd = 1
		case "\u0065\u0078\u0069\u0074":
			*_aggcdd = 2
		case "\u0065\u006d\u0070\u0068":
			*_aggcdd = 3
		case "\u0070\u0061\u0074\u0068":
			*_aggcdd = 4
		case "\u0076\u0065\u0072\u0062":
			*_aggcdd = 5
		case "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl":
			*_aggcdd = 6
		}
	}
	_fabaf, _eeeg = d.Token()
	if _eeeg != nil {
		return _eeeg
	}
	if _eacad, _gbgf := _fabaf.(_d.EndElement); _gbgf && _eacad.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fabaf)
}
func (_faeca *CT_TransitionStartSoundAction) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_faeca.Snd = _c.NewCT_EmbeddedWAVAudioFile()
	for _, _degc := range start.Attr {
		if _degc.Name.Local == "\u006c\u006f\u006f\u0070" {
			_ebbfd, _fbff := _ag.ParseBool(_degc.Value)
			if _fbff != nil {
				return _fbff
			}
			_faeca.LoopAttr = &_ebbfd
			continue
		}
	}
_bgacgc:
	for {
		_efdf, _cdfcb := d.Token()
		if _cdfcb != nil {
			return _cdfcb
		}
		switch _bfeb := _efdf.(type) {
		case _d.StartElement:
			switch _bfeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}:
				if _acgbf := d.DecodeElement(_faeca.Snd, &_bfeb); _acgbf != nil {
					return _acgbf
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074a\u0072\u0074\u0053\u006f\u0075\u006ed\u0041\u0063t\u0069\u006fn\u0020%\u0076", _bfeb.Name)
				if _agede := d.Skip(); _agede != nil {
					return _agede
				}
			}
		case _d.EndElement:
			break _bgacgc
		case _d.CharData:
		}
	}
	return nil
}

type CT_TransitionSoundAction struct {

	// Start Sound Action
	StSnd *CT_TransitionStartSoundAction

	// Stop Sound Action
	EndSnd *CT_Empty
}

func (_bgaaf ST_TLCommandType) ValidateWithPath(path string) error {
	switch _bgaaf {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgaaf))
	}
	return nil
}

type CT_TLByRgbColorTransform struct {

	// Red
	RAttr _c.ST_FixedPercentage

	// Green
	GAttr _c.ST_FixedPercentage

	// Blue
	BAttr _c.ST_FixedPercentage
}
type EG_Background struct {

	// Background Properties
	BgPr *CT_BackgroundProperties

	// Background Style Reference
	BgRef *_c.CT_StyleMatrixReference
}
type CT_SideDirectionTransition struct {

	// Direction
	DirAttr ST_TransitionSideDirectionType
}

func (_efaca *CT_OleObjectChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _efaca.Embed != nil {
		_edcc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0065\u006d\u0062\u0065\u0064"}}
		e.EncodeElement(_efaca.Embed, _edcc)
	}
	if _efaca.Link != nil {
		_ccdf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006c\u0069\u006e\u006b"}}
		e.EncodeElement(_efaca.Link, _ccdf)
	}
	return nil
}
func (_gbba ST_TLDiagramBuildType) ValidateWithPath(path string) error {
	switch _gbba {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbba))
	}
	return nil
}
func (_ffac *ST_IterateType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ffac = 0
	case "\u0065\u006c":
		*_ffac = 1
	case "\u0077\u0064":
		*_ffac = 2
	case "\u006c\u0074":
		*_ffac = 3
	}
	return nil
}
func (_ggbde ST_TLTriggerRuntimeNode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ggbde.String(), start)
}

const (
	ST_TransitionInOutDirectionTypeUnset ST_TransitionInOutDirectionType = 0
	ST_TransitionInOutDirectionTypeOut   ST_TransitionInOutDirectionType = 1
	ST_TransitionInOutDirectionTypeIn    ST_TransitionInOutDirectionType = 2
)

// ValidateWithPath validates the CT_OleObjectEmbed and its children, prefixing error messages with path
func (_dbaf *CT_OleObjectEmbed) ValidateWithPath(path string) error {
	if _dbef := _dbaf.FollowColorSchemeAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006clo\u0077\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u0041\u0074t\u0072"); _dbef != nil {
		return _dbef
	}
	if _dbaf.ExtLst != nil {
		if _cgef := _dbaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgef != nil {
			return _cgef
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CornerDirectionTransition and its children, prefixing error messages with path
func (_fbcb *CT_CornerDirectionTransition) ValidateWithPath(path string) error {
	if _ddga := _fbcb.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _ddga != nil {
		return _ddga
	}
	return nil
}
func (_cbcba *CT_Presentation) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cbcba.NotesSz = _c.NewCT_PositiveSize2D()
	for _, _caffa := range start.Attr {
		if _caffa.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d" {
			_ceca, _fgecf := _ag.ParseInt(_caffa.Value, 10, 32)
			if _fgecf != nil {
				return _fgecf
			}
			_dgea := int32(_ceca)
			_cbcba.FirstSlideNumAttr = &_dgea
			continue
		}
		if _caffa.Name.Local == "\u0072\u0074\u006c" {
			_eeff, _abfc := _ag.ParseBool(_caffa.Value)
			if _abfc != nil {
				return _abfc
			}
			_cbcba.RtlAttr = &_eeff
			continue
		}
		if _caffa.Name.Local == "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065" {
			_baeee, _dfgba := _ag.ParseBool(_caffa.Value)
			if _dfgba != nil {
				return _dfgba
			}
			_cbcba.CompatModeAttr = &_baeee
			continue
		}
		if _caffa.Name.Local == "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073" {
			_edbg, _bbde := _ag.ParseBool(_caffa.Value)
			if _bbde != nil {
				return _bbde
			}
			_cbcba.EmbedTrueTypeFontsAttr = &_edbg
			continue
		}
		if _caffa.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_degb, _dbgad := _ag.ParseBool(_caffa.Value)
			if _dbgad != nil {
				return _dbgad
			}
			_cbcba.AutoCompressPicturesAttr = &_degb
			continue
		}
		if _caffa.Name.Local == "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064" {
			_gcfd, _cbbfe := _ag.ParseBool(_caffa.Value)
			if _cbbfe != nil {
				return _cbbfe
			}
			_cbcba.ShowSpecialPlsOnTitleSldAttr = &_gcfd
			continue
		}
		if _caffa.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d" {
			_edgb, _agdee := ParseUnionST_Percentage(_caffa.Value)
			if _agdee != nil {
				return _agdee
			}
			_cbcba.ServerZoomAttr = &_edgb
			continue
		}
		if _caffa.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_cbcba.ConformanceAttr.UnmarshalXMLAttr(_caffa)
			continue
		}
		if _caffa.Name.Local == "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065" {
			_dbbaa, _bcda := _ag.ParseBool(_caffa.Value)
			if _bcda != nil {
				return _bcda
			}
			_cbcba.RemovePersonalInfoOnSaveAttr = &_dbbaa
			continue
		}
		if _caffa.Name.Local == "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073" {
			_bggag, _dbbad := _ag.ParseBool(_caffa.Value)
			if _dbbad != nil {
				return _dbbad
			}
			_cbcba.SaveSubsetFontsAttr = &_bggag
			continue
		}
		if _caffa.Name.Local == "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064" {
			_ecggd, _eefaa := _ag.ParseUint(_caffa.Value, 10, 32)
			if _eefaa != nil {
				return _eefaa
			}
			_cdde := uint32(_ecggd)
			_cbcba.BookmarkIdSeedAttr = &_cdde
			continue
		}
		if _caffa.Name.Local == "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073" {
			_cbde, _baccb := _ag.ParseBool(_caffa.Value)
			if _baccb != nil {
				return _baccb
			}
			_cbcba.StrictFirstAndLastCharsAttr = &_cbde
			continue
		}
	}
_bdgf:
	for {
		_fbde, _eeebc := d.Token()
		if _eeebc != nil {
			return _eeebc
		}
		switch _feac := _fbde.(type) {
		case _d.StartElement:
			switch _feac.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}:
				_cbcba.SldMasterIdLst = NewCT_SlideMasterIdList()
				if _bfeaa := d.DecodeElement(_cbcba.SldMasterIdLst, &_feac); _bfeaa != nil {
					return _bfeaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}:
				_cbcba.NotesMasterIdLst = NewCT_NotesMasterIdList()
				if _adgg := d.DecodeElement(_cbcba.NotesMasterIdLst, &_feac); _adgg != nil {
					return _adgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}:
				_cbcba.HandoutMasterIdLst = NewCT_HandoutMasterIdList()
				if _bedaa := d.DecodeElement(_cbcba.HandoutMasterIdLst, &_feac); _bedaa != nil {
					return _bedaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}:
				_cbcba.SldIdLst = NewCT_SlideIdList()
				if _bceg := d.DecodeElement(_cbcba.SldIdLst, &_feac); _bceg != nil {
					return _bceg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}:
				_cbcba.SldSz = NewCT_SlideSize()
				if _agfee := d.DecodeElement(_cbcba.SldSz, &_feac); _agfee != nil {
					return _agfee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}:
				if _cgf := d.DecodeElement(_cbcba.NotesSz, &_feac); _cgf != nil {
					return _cgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_cbcba.SmartTags = NewCT_SmartTags()
				if _adfg := d.DecodeElement(_cbcba.SmartTags, &_feac); _adfg != nil {
					return _adfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}:
				_cbcba.EmbeddedFontLst = NewCT_EmbeddedFontList()
				if _dfee := d.DecodeElement(_cbcba.EmbeddedFontLst, &_feac); _dfee != nil {
					return _dfee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}:
				_cbcba.CustShowLst = NewCT_CustomShowList()
				if _cbba := d.DecodeElement(_cbcba.CustShowLst, &_feac); _cbba != nil {
					return _cbba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}:
				_cbcba.PhotoAlbum = NewCT_PhotoAlbum()
				if _fadg := d.DecodeElement(_cbcba.PhotoAlbum, &_feac); _fadg != nil {
					return _fadg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_cbcba.CustDataLst = NewCT_CustomerDataList()
				if _deecg := d.DecodeElement(_cbcba.CustDataLst, &_feac); _deecg != nil {
					return _deecg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}:
				_cbcba.Kinsoku = NewCT_Kinsoku()
				if _bcega := d.DecodeElement(_cbcba.Kinsoku, &_feac); _bcega != nil {
					return _bcega
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_cbcba.DefaultTextStyle = _c.NewCT_TextListStyle()
				if _ccgec := d.DecodeElement(_cbcba.DefaultTextStyle, &_feac); _ccgec != nil {
					return _ccgec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}:
				_cbcba.ModifyVerifier = NewCT_ModifyVerifier()
				if _cecc := d.DecodeElement(_cbcba.ModifyVerifier, &_feac); _cecc != nil {
					return _cecc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbcba.ExtLst = NewCT_ExtensionList()
				if _dgca := d.DecodeElement(_cbcba.ExtLst, &_feac); _dgca != nil {
					return _dgca
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _feac.Name)
				if _gacg := d.Skip(); _gacg != nil {
					return _gacg
				}
			}
		case _d.EndElement:
			break _bdgf
		case _d.CharData:
		}
	}
	return nil
}
func (_dfca *CT_CustomerDataList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aaf:
	for {
		_abbe, _gfcc := d.Token()
		if _gfcc != nil {
			return _gfcc
		}
		switch _gdge := _abbe.(type) {
		case _d.StartElement:
			switch _gdge.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}:
				_gcbb := NewCT_CustomerData()
				if _cbe := d.DecodeElement(_gcbb, &_gdge); _cbe != nil {
					return _cbe
				}
				_dfca.CustData = append(_dfca.CustData, _gcbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067\u0073"}:
				_dfca.Tags = NewCT_TagsData()
				if _gfda := d.DecodeElement(_dfca.Tags, &_gdge); _gfda != nil {
					return _gfda
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0065rD\u0061\u0074\u0061\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _gdge.Name)
				if _decf := d.Skip(); _decf != nil {
					return _decf
				}
			}
		case _d.EndElement:
			break _aaf
		case _d.CharData:
		}
	}
	return nil
}

type AG_TLBuild struct {
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}
type CT_TLTimeNodeExclusive struct {

	// Common TimeNode Properties
	CTn *CT_TLCommonTimeNodeData
}

// Validate validates the CT_ShapeNonVisual and its children
func (_baced *CT_ShapeNonVisual) Validate() error {
	return _baced.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c")
}

// ValidateWithPath validates the CT_NotesMaster and its children, prefixing error messages with path
func (_acee *CT_NotesMaster) ValidateWithPath(path string) error {
	if _edcee := _acee.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _edcee != nil {
		return _edcee
	}
	if _deed := _acee.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _deed != nil {
		return _deed
	}
	if _acee.Hf != nil {
		if _fddg := _acee.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _fddg != nil {
			return _fddg
		}
	}
	if _acee.NotesStyle != nil {
		if _ddgfa := _acee.NotesStyle.ValidateWithPath(path + "/\u004e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"); _ddgfa != nil {
			return _ddgfa
		}
	}
	if _acee.ExtLst != nil {
		if _caea := _acee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _caea != nil {
			return _caea
		}
	}
	return nil
}
func (_bcfbg *CT_SlideSyncProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bcfbg.ServerSldIdAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _bcfbg.ServerSldModifiedTimeAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _bcfbg.ClientInsertedTimeAttr)})
	e.EncodeToken(start)
	if _bcfbg.ExtLst != nil {
		_bfdac := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bcfbg.ExtLst, _bfdac)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eecaa *CT_TagsData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _eecaa.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cbcbg *CT_SlideIdList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bgac:
	for {
		_ggfg, _gege := d.Token()
		if _gege != nil {
			return _gege
		}
		switch _afed := _ggfg.(type) {
		case _d.StartElement:
			switch _afed.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064I\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064I\u0064"}:
				_egac := NewCT_SlideIdListEntry()
				if _eaecg := d.DecodeElement(_egac, &_afed); _eaecg != nil {
					return _eaecg
				}
				_cbcbg.SldId = append(_cbcbg.SldId, _egac)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049\u0064L\u0069s\u0074\u0020\u0025\u0076", _afed.Name)
				if _agffe := d.Skip(); _agffe != nil {
					return _agffe
				}
			}
		case _d.EndElement:
			break _bgac
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TLTimeNodeSequence() *CT_TLTimeNodeSequence {
	_cgdc := &CT_TLTimeNodeSequence{}
	_cgdc.CTn = NewCT_TLCommonTimeNodeData()
	return _cgdc
}
func (_febef *CT_TLAnimateEffectBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _febef.TransitionAttr != ST_TLAnimateEffectTransitionUnset {
		_gcee, _defga := _febef.TransitionAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"})
		if _defga != nil {
			return _defga
		}
		start.Attr = append(start.Attr, _gcee)
	}
	if _febef.FilterAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_febef.FilterAttr)})
	}
	if _febef.PrLstAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072\u004cs\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_febef.PrLstAttr)})
	}
	e.EncodeToken(start)
	_gfdfa := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_febef.CBhvr, _gfdfa)
	if _febef.Progress != nil {
		_dggba := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}}
		e.EncodeElement(_febef.Progress, _dggba)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLBehaviorAttributeNameList and its children, prefixing error messages with path
func (_bbbc *CT_TLBehaviorAttributeNameList) ValidateWithPath(path string) error { return nil }
func (_gafda *CT_TLIterateIntervalTime) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _gafda.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Connector and its children
func (_aadg *CT_Connector) Validate() error {
	return _aadg.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}
func (_ageeb *ST_PrintColorMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ggeee, _daebb := d.Token()
	if _daebb != nil {
		return _daebb
	}
	if _efag, _dbggf := _ggeee.(_d.EndElement); _dbggf && _efag.Name == start.Name {
		*_ageeb = 1
		return nil
	}
	if _edea, _bcdfg := _ggeee.(_d.CharData); !_bcdfg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggeee)
	} else {
		switch string(_edea) {
		case "":
			*_ageeb = 0
		case "\u0062\u0077":
			*_ageeb = 1
		case "\u0067\u0072\u0061\u0079":
			*_ageeb = 2
		case "\u0063\u006c\u0072":
			*_ageeb = 3
		}
	}
	_ggeee, _daebb = d.Token()
	if _daebb != nil {
		return _daebb
	}
	if _dgdce, _bccfa := _ggeee.(_d.EndElement); _bccfa && _dgdce.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggeee)
}
func NewAG_ChildSlide() *AG_ChildSlide { _gc := &AG_ChildSlide{}; return _gc }
func (_ebcg *CT_NotesSlide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ebcg.CSld = NewCT_CommonSlideData()
	for _, _cgde := range start.Attr {
		if _cgde.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_dfcgc, _abbf := _ag.ParseBool(_cgde.Value)
			if _abbf != nil {
				return _abbf
			}
			_ebcg.ShowMasterSpAttr = &_dfcgc
			continue
		}
		if _cgde.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_fcde, _bceda := _ag.ParseBool(_cgde.Value)
			if _bceda != nil {
				return _bceda
			}
			_ebcg.ShowMasterPhAnimAttr = &_fcde
			continue
		}
	}
_fcfd:
	for {
		_eafa, _edcec := d.Token()
		if _edcec != nil {
			return _edcec
		}
		switch _bddeb := _eafa.(type) {
		case _d.StartElement:
			switch _bddeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _cfcb := d.DecodeElement(_ebcg.CSld, &_bddeb); _cfcb != nil {
					return _cfcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_ebcg.ClrMapOvr = _c.NewCT_ColorMappingOverride()
				if _egdge := d.DecodeElement(_ebcg.ClrMapOvr, &_bddeb); _egdge != nil {
					return _egdge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebcg.ExtLst = NewCT_ExtensionListModify()
				if _feec := d.DecodeElement(_ebcg.ExtLst, &_bddeb); _feec != nil {
					return _feec
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004eo\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065 \u0025\u0076", _bddeb.Name)
				if _ebeg := d.Skip(); _ebeg != nil {
					return _ebeg
				}
			}
		case _d.EndElement:
			break _fcfd
		case _d.CharData:
		}
	}
	return nil
}
func (_feeb *CT_HandoutMasterIdListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _beee := range start.Attr {
		if _beee.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _beee.Name.Local == "\u0069\u0064" || _beee.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _beee.Name.Local == "\u0069\u0064" {
			_bfff, _adba := _beee.Value, error(nil)
			if _adba != nil {
				return _adba
			}
			_feeb.IdAttr = _bfff
			continue
		}
	}
_cbed:
	for {
		_gfaf, _fdbf := d.Token()
		if _fdbf != nil {
			return _fdbf
		}
		switch _fede := _gfaf.(type) {
		case _d.StartElement:
			switch _fede.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_feeb.ExtLst = NewCT_ExtensionList()
				if _ccddg := d.DecodeElement(_feeb.ExtLst, &_fede); _ccddg != nil {
					return _ccddg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074\u0045\u006e\u0074\u0072\u0079\u0020\u0025\u0076", _fede.Name)
				if _agge := d.Skip(); _agge != nil {
					return _agge
				}
			}
		case _d.EndElement:
			break _cbed
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CommentList and its children, prefixing error messages with path
func (_gge *CT_CommentList) ValidateWithPath(path string) error {
	for _cfg, _fgab := range _gge.Cm {
		if _abb := _fgab.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0043\u006d\u005b\u0025\u0064]", path, _cfg)); _abb != nil {
			return _abb
		}
	}
	return nil
}

type ST_TLChartSubelementType byte

func (_bffb *CT_NormalViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bffb.ShowOutlineIconsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068o\u0077\u004f\u0075t\u006c\u0069\u006e\u0065\u0049\u0063\u006f\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_bffb.ShowOutlineIconsAttr))})
	}
	if _bffb.SnapVertSplitterAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u006ea\u0070\u0056\u0065r\u0074\u0053\u0070\u006c\u0069\u0074\u0074\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_bffb.SnapVertSplitterAttr))})
	}
	if _bffb.VertBarStateAttr != ST_SplitterBarStateUnset {
		_dfbe, _eedbg := _bffb.VertBarStateAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0065\u0072t\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065"})
		if _eedbg != nil {
			return _eedbg
		}
		start.Attr = append(start.Attr, _dfbe)
	}
	if _bffb.HorzBarStateAttr != ST_SplitterBarStateUnset {
		_faadd, _ggdc := _bffb.HorzBarStateAttr.MarshalXMLAttr(_d.Name{Local: "\u0068\u006f\u0072z\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065"})
		if _ggdc != nil {
			return _ggdc
		}
		start.Attr = append(start.Attr, _faadd)
	}
	if _bffb.PreferSingleViewAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072e\u0066\u0065\u0072S\u0069\u006e\u0067\u006c\u0065\u0056\u0069\u0065\u0077"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_bffb.PreferSingleViewAttr))})
	}
	e.EncodeToken(start)
	_gbgb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0072\u0065\u0073\u0074\u006f\u0072\u0065d\u004c\u0065\u0066\u0074"}}
	e.EncodeElement(_bffb.RestoredLeft, _gbgb)
	_gfca := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}}
	e.EncodeElement(_bffb.RestoredTop, _gfca)
	if _bffb.ExtLst != nil {
		_aecdf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bffb.ExtLst, _aecdf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bdgfb ST_TLNextActionType) String() string {
	switch _bdgfb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0065\u0065\u006b"
	}
	return ""
}

type CT_TLTimeNodeSequence struct {

	// Concurrent
	ConcurrentAttr *bool

	// Previous Action
	PrevAcAttr ST_TLPreviousActionType

	// Next Action
	NextAcAttr ST_TLNextActionType

	// Common TimeNode Properties
	CTn *CT_TLCommonTimeNodeData

	// Previous Conditions List
	PrevCondLst *CT_TLTimeConditionList

	// Next Conditions List
	NextCondLst *CT_TLTimeConditionList
}

func (_bggde *CT_PictureNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bggde.CNvPr = _c.NewCT_NonVisualDrawingProps()
	_bggde.CNvPicPr = _c.NewCT_NonVisualPictureProperties()
	_bggde.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_gfgce:
	for {
		_gfeee, _aebe := d.Token()
		if _aebe != nil {
			return _aebe
		}
		switch _bdfaf := _gfeee.(type) {
		case _d.StartElement:
			switch _bdfaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _dacb := d.DecodeElement(_bggde.CNvPr, &_bdfaf); _dacb != nil {
					return _dacb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _efcf := d.DecodeElement(_bggde.CNvPicPr, &_bdfaf); _efcf != nil {
					return _efcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _fcfdd := d.DecodeElement(_bggde.NvPr, &_bdfaf); _fcfdd != nil {
					return _fcfdd
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _bdfaf.Name)
				if _ecac := d.Skip(); _ecac != nil {
					return _ecac
				}
			}
		case _d.EndElement:
			break _gfgce
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLCommonBehaviorData struct {

	// Additive
	AdditiveAttr ST_TLBehaviorAdditiveType

	// Accumulate
	AccumulateAttr ST_TLBehaviorAccumulateType

	// Transform Type
	XfrmTypeAttr ST_TLBehaviorTransformType

	// From
	FromAttr *string

	// To
	ToAttr *string

	// By
	ByAttr *string

	// Runtime Context
	RctxAttr *string

	// Override
	OverrideAttr ST_TLBehaviorOverrideType
	CTn          *CT_TLCommonTimeNodeData

	// Target Element
	TgtEl *CT_TLTimeTargetElement

	// Attribute Name List
	AttrNameLst *CT_TLBehaviorAttributeNameList
}

// ValidateWithPath validates the TagLst and its children, prefixing error messages with path
func (_ggecdf *TagLst) ValidateWithPath(path string) error {
	if _abba := _ggecdf.CT_TagList.ValidateWithPath(path); _abba != nil {
		return _abba
	}
	return nil
}
func NewCT_TLAnimateBehavior() *CT_TLAnimateBehavior {
	_ffbcd := &CT_TLAnimateBehavior{}
	_ffbcd.CBhvr = NewCT_TLCommonBehaviorData()
	return _ffbcd
}

type CT_CustomShowId struct {

	// Custom Show Identifier
	IdAttr uint32
}

func (_eadag *ST_TLDiagramBuildType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_defag, _fceaf := d.Token()
	if _fceaf != nil {
		return _fceaf
	}
	if _adfd, _fdgea := _defag.(_d.EndElement); _fdgea && _adfd.Name == start.Name {
		*_eadag = 1
		return nil
	}
	if _degd, _aeee := _defag.(_d.CharData); !_aeee {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _defag)
	} else {
		switch string(_degd) {
		case "":
			*_eadag = 0
		case "\u0077\u0068\u006fl\u0065":
			*_eadag = 1
		case "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
			*_eadag = 2
		case "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068":
			*_eadag = 3
		case "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
			*_eadag = 4
		case "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c":
			*_eadag = 5
		case "\u0063\u0077":
			*_eadag = 6
		case "\u0063\u0077\u0049\u006e":
			*_eadag = 7
		case "\u0063\u0077\u004fu\u0074":
			*_eadag = 8
		case "\u0063\u0063\u0077":
			*_eadag = 9
		case "\u0063\u0063\u0077I\u006e":
			*_eadag = 10
		case "\u0063\u0063\u0077\u004f\u0075\u0074":
			*_eadag = 11
		case "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067":
			*_eadag = 12
		case "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg":
			*_eadag = 13
		case "\u0075\u0070":
			*_eadag = 14
		case "\u0064\u006f\u0077\u006e":
			*_eadag = 15
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_eadag = 16
		case "\u0063\u0075\u0073\u0074":
			*_eadag = 17
		}
	}
	_defag, _fceaf = d.Token()
	if _fceaf != nil {
		return _fceaf
	}
	if _cdfee, _bbece := _defag.(_d.EndElement); _bbece && _cdfee.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _defag)
}

// Validate validates the CT_Background and its children
func (_ge *CT_Background) Validate() error {
	return _ge.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064")
}
func NewCT_SlideTiming() *CT_SlideTiming { _ecfdg := &CT_SlideTiming{}; return _ecfdg }
func NewCT_TLOleChartTargetElement() *CT_TLOleChartTargetElement {
	_dgee := &CT_TLOleChartTargetElement{}
	_dgee.TypeAttr = ST_TLChartSubelementType(1)
	return _dgee
}
func NewNotes() *Notes { _ceecd := &Notes{}; _ceecd.CT_NotesSlide = *NewCT_NotesSlide(); return _ceecd }

// ST_TLTime is a union type
type ST_TLTime struct {
	Uint32              *uint32
	ST_TLTimeIndefinite ST_TLTimeIndefinite
}
type CT_TLTimeAnimateValue struct {

	// Time
	TmAttr *ST_TLTimeAnimateValueTime

	// Formula
	FmlaAttr *string

	// Value
	Val *CT_TLAnimVariant
}

// Validate validates the CmAuthorLst and its children
func (_ecgec *CmAuthorLst) Validate() error {
	return _ecgec.ValidateWithPath("C\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074")
}

type CT_ShowInfoKiosk struct {

	// Restart Show
	RestartAttr *uint32
}

func (_eggd *ST_TransitionSideDirectionType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_eggd = 0
	case "\u006c":
		*_eggd = 1
	case "\u0075":
		*_eggd = 2
	case "\u0072":
		*_eggd = 3
	case "\u0064":
		*_eggd = 4
	}
	return nil
}
func (_ceeg *CT_TLAnimVariantFloatVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bffgg := range start.Attr {
		if _bffgg.Name.Local == "\u0076\u0061\u006c" {
			_acccb, _dgdfc := _ag.ParseFloat(_bffgg.Value, 64)
			if _dgdfc != nil {
				return _dgdfc
			}
			_ceeg.ValAttr = float32(_acccb)
			continue
		}
	}
	for {
		_dafac, _ggeac := d.Token()
		if _ggeac != nil {
			return _b.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LAn\u0069mV\u0061\u0072\u0069\u0061\u006e\u0074\u0046lo\u0061\u0074\u0056\u0061\u006c\u003a\u0020%\u0073", _ggeac)
		}
		if _ddgb, _afge := _dafac.(_d.EndElement); _afge && _ddgb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewEG_ChildSlide() *EG_ChildSlide    { _ccdc := &EG_ChildSlide{}; return _ccdc }
func (_dgfgd *ST_TLTime) Validate() error { return _dgfgd.ValidateWithPath("") }

// ValidateWithPath validates the CT_TLAnimVariantIntegerVal and its children, prefixing error messages with path
func (_efcb *CT_TLAnimVariantIntegerVal) ValidateWithPath(path string) error { return nil }
func (_bddag ST_TLTimeNodeFillType) String() string {
	switch _bddag {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006d\u006f\u0076\u0065"
	case 2:
		return "\u0066\u0072\u0065\u0065\u007a\u0065"
	case 3:
		return "\u0068\u006f\u006c\u0064"
	case 4:
		return "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"
	}
	return ""
}
func NewCT_TransitionStartSoundAction() *CT_TransitionStartSoundAction {
	_eedgf := &CT_TransitionStartSoundAction{}
	_eedgf.Snd = _c.NewCT_EmbeddedWAVAudioFile()
	return _eedgf
}
func (_bbabda *CT_TLAnimateEffectBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bbabda.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _bcgfe := range start.Attr {
		if _bcgfe.Name.Local == "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e" {
			_bbabda.TransitionAttr.UnmarshalXMLAttr(_bcgfe)
			continue
		}
		if _bcgfe.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072" {
			_dcga, _baedcc := _bcgfe.Value, error(nil)
			if _baedcc != nil {
				return _baedcc
			}
			_bbabda.FilterAttr = &_dcga
			continue
		}
		if _bcgfe.Name.Local == "\u0070\u0072\u004cs\u0074" {
			_fbebg, _gfeeee := _bcgfe.Value, error(nil)
			if _gfeeee != nil {
				return _gfeeee
			}
			_bbabda.PrLstAttr = &_fbebg
			continue
		}
	}
_dadb:
	for {
		_efde, _edfaa := d.Token()
		if _edfaa != nil {
			return _edfaa
		}
		switch _aabd := _efde.(type) {
		case _d.StartElement:
			switch _aabd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _baccc := d.DecodeElement(_bbabda.CBhvr, &_aabd); _baccc != nil {
					return _baccc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}:
				_bbabda.Progress = NewCT_TLAnimVariant()
				if _bcgaa := d.DecodeElement(_bbabda.Progress, &_aabd); _bcgaa != nil {
					return _bcgaa
				}
			default:
				_be.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u004cA\u006e\u0069\u006d\u0061\u0074\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _aabd.Name)
				if _beefbf := d.Skip(); _beefbf != nil {
					return _beefbf
				}
			}
		case _d.EndElement:
			break _dadb
		case _d.CharData:
		}
	}
	return nil
}
func (_bggded *ST_SlideLayoutType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bggded = 0
	case "\u0074\u0069\u0074l\u0065":
		*_bggded = 1
	case "\u0074\u0078":
		*_bggded = 2
	case "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078":
		*_bggded = 3
	case "\u0074\u0062\u006c":
		*_bggded = 4
	case "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074":
		*_bggded = 5
	case "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
		*_bggded = 6
	case "\u0064\u0067\u006d":
		*_bggded = 7
	case "\u0063\u0068\u0061r\u0074":
		*_bggded = 8
	case "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074":
		*_bggded = 9
	case "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
		*_bggded = 10
	case "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy":
		*_bggded = 11
	case "\u0062\u006c\u0061n\u006b":
		*_bggded = 12
	case "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a":
		*_bggded = 13
	case "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
		*_bggded = 14
	case "\u006fb\u006a\u004f\u006e\u006c\u0079":
		*_bggded = 15
	case "\u006f\u0062\u006a":
		*_bggded = 16
	case "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061":
		*_bggded = 17
	case "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078":
		*_bggded = 18
	case "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x":
		*_bggded = 19
	case "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j":
		*_bggded = 20
	case "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
		*_bggded = 21
	case "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
		*_bggded = 22
	case "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078":
		*_bggded = 23
	case "\u0066o\u0075\u0072\u004f\u0062\u006a":
		*_bggded = 24
	case "\u0076\u0065\u0072\u0074\u0054\u0078":
		*_bggded = 25
	case "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078":
		*_bggded = 26
	case "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078":
		*_bggded = 27
	case "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074":
		*_bggded = 28
	case "\u0074\u0077\u006f\u004f\u0062\u006a":
		*_bggded = 29
	case "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
		*_bggded = 30
	case "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a":
		*_bggded = 31
	case "\u0063\u0075\u0073\u0074":
		*_bggded = 32
	case "\u0073e\u0063\u0048\u0065\u0061\u0064":
		*_bggded = 33
	case "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a":
		*_bggded = 34
	case "\u006f\u0062\u006aT\u0078":
		*_bggded = 35
	case "\u0070\u0069\u0063T\u0078":
		*_bggded = 36
	}
	return nil
}
func NewCT_Comment() *CT_Comment { _geg := &CT_Comment{}; _geg.Pos = _c.NewCT_Point2D(); return _geg }

// Validate validates the CT_NotesMasterIdListEntry and its children
func (_aaga *CT_NotesMasterIdListEntry) Validate() error {
	return _aaga.ValidateWithPath("\u0043T\u005f\u004e\u006f\u0074e\u0073\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}
func (_gdcb *CT_TLIterateData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gdcb.TypeAttr != ST_IterateTypeUnset {
		_cecae, _ddcdb := _gdcb.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ddcdb != nil {
			return _ddcdb
		}
		start.Attr = append(start.Attr, _cecae)
	}
	if _gdcb.BackwardsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062a\u0063\u006b\u0077\u0061\u0072\u0064s"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gdcb.BackwardsAttr))})
	}
	e.EncodeToken(start)
	if _gdcb.TmAbs != nil {
		_fffeb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u006d\u0041\u0062\u0073"}}
		e.EncodeElement(_gdcb.TmAbs, _fffeb)
	}
	if _gdcb.TmPct != nil {
		_ddfgb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u006d\u0050\u0063\u0074"}}
		e.EncodeElement(_gdcb.TmPct, _ddfgb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SlideMasterTextStyles and its children
func (_gaegb *CT_SlideMasterTextStyles) Validate() error {
	return _gaegb.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065r\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0073")
}
func (_gbdbc ST_PhotoAlbumLayout) String() string {
	switch _gbdbc {
	case 0:
		return ""
	case 1:
		return "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065"
	case 2:
		return "\u0031\u0070\u0069\u0063"
	case 3:
		return "\u0032\u0070\u0069\u0063"
	case 4:
		return "\u0034\u0070\u0069\u0063"
	case 5:
		return "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case 6:
		return "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case 7:
		return "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce"
	}
	return ""
}

// Validate validates the CT_ModifyVerifier and its children
func (_fecc *CT_ModifyVerifier) Validate() error {
	return _fecc.ValidateWithPath("\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072")
}

const (
	ST_PlaceholderTypeUnset    ST_PlaceholderType = 0
	ST_PlaceholderTypeTitle    ST_PlaceholderType = 1
	ST_PlaceholderTypeBody     ST_PlaceholderType = 2
	ST_PlaceholderTypeCtrTitle ST_PlaceholderType = 3
	ST_PlaceholderTypeSubTitle ST_PlaceholderType = 4
	ST_PlaceholderTypeDt       ST_PlaceholderType = 5
	ST_PlaceholderTypeSldNum   ST_PlaceholderType = 6
	ST_PlaceholderTypeFtr      ST_PlaceholderType = 7
	ST_PlaceholderTypeHdr      ST_PlaceholderType = 8
	ST_PlaceholderTypeObj      ST_PlaceholderType = 9
	ST_PlaceholderTypeChart    ST_PlaceholderType = 10
	ST_PlaceholderTypeTbl      ST_PlaceholderType = 11
	ST_PlaceholderTypeClipArt  ST_PlaceholderType = 12
	ST_PlaceholderTypeDgm      ST_PlaceholderType = 13
	ST_PlaceholderTypeMedia    ST_PlaceholderType = 14
	ST_PlaceholderTypeSldImg   ST_PlaceholderType = 15
	ST_PlaceholderTypePic      ST_PlaceholderType = 16
)

// Validate validates the CT_ShowInfoKiosk and its children
func (_dafa *CT_ShowInfoKiosk) Validate() error {
	return _dafa.ValidateWithPath("\u0043\u0054_\u0053\u0068\u006fw\u0049\u006e\u0066\u006f\u004b\u0069\u006f\u0073\u006b")
}
func (_eefgf ST_WebColorType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_eefgf.String(), start)
}
func (_gbff *ST_TLChartSubelementType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bbcba, _dgagca := d.Token()
	if _dgagca != nil {
		return _dgagca
	}
	if _cfabg, _caed := _bbcba.(_d.EndElement); _caed && _cfabg.Name == start.Name {
		*_gbff = 1
		return nil
	}
	if _cbfbb, _dgbb := _bbcba.(_d.CharData); !_dgbb {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbcba)
	} else {
		switch string(_cbfbb) {
		case "":
			*_gbff = 0
		case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
			*_gbff = 1
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_gbff = 2
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_gbff = 3
		case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
			*_gbff = 4
		case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_gbff = 5
		}
	}
	_bbcba, _dgagca = d.Token()
	if _dgagca != nil {
		return _dgagca
	}
	if _gbabg, _cbcfe := _bbcba.(_d.EndElement); _cbcfe && _gbabg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbcba)
}

// ValidateWithPath validates the Presentation and its children, prefixing error messages with path
func (_bgaee *Presentation) ValidateWithPath(path string) error {
	if _ceaee := _bgaee.CT_Presentation.ValidateWithPath(path); _ceaee != nil {
		return _ceaee
	}
	return nil
}

// ValidateWithPath validates the CT_TLTriggerTimeNodeID and its children, prefixing error messages with path
func (_eabce *CT_TLTriggerTimeNodeID) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TLGraphicalObjectBuild and its children
func (_cfegbb *CT_TLGraphicalObjectBuild) Validate() error {
	return _cfegbb.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0047r\u0061\u0070\u0068\u0069\u0063a\u006cO\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006cd")
}
func (_afdc *ST_TransitionCornerDirectionType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_afdc = 0
	case "\u006c\u0075":
		*_afdc = 1
	case "\u0072\u0075":
		*_afdc = 2
	case "\u006c\u0064":
		*_afdc = 3
	case "\u0072\u0064":
		*_afdc = 4
	}
	return nil
}

type CT_CommonViewProperties struct {

	// Variable Scale
	VarScaleAttr *bool

	// View Scale
	Scale *_c.CT_Scale2D

	// View Origin
	Origin *_c.CT_Point2D
}

func (_gcfdef ST_WebScreenSize) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_aefbd := _d.Attr{}
	_aefbd.Name = name
	switch _gcfdef {
	case ST_WebScreenSizeUnset:
		_aefbd.Value = ""
	case ST_WebScreenSize544x376:
		_aefbd.Value = "\u00354\u0034\u0078\u0033\u0037\u0036"
	case ST_WebScreenSize640x480:
		_aefbd.Value = "\u00364\u0030\u0078\u0034\u0038\u0030"
	case ST_WebScreenSize720x512:
		_aefbd.Value = "\u00372\u0030\u0078\u0035\u0031\u0032"
	case ST_WebScreenSize800x600:
		_aefbd.Value = "\u00380\u0030\u0078\u0036\u0030\u0030"
	case ST_WebScreenSize1024x768:
		_aefbd.Value = "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case ST_WebScreenSize1152x882:
		_aefbd.Value = "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case ST_WebScreenSize1152x900:
		_aefbd.Value = "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case ST_WebScreenSize1280x1024:
		_aefbd.Value = "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case ST_WebScreenSize1600x1200:
		_aefbd.Value = "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case ST_WebScreenSize1800x1400:
		_aefbd.Value = "\u00318\u0030\u0030\u0078\u0031\u0034\u00300"
	case ST_WebScreenSize1920x1200:
		_aefbd.Value = "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return _aefbd, nil
}
func (_adafe *ST_TLNextActionType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_adafe = 0
	case "\u006e\u006f\u006e\u0065":
		*_adafe = 1
	case "\u0073\u0065\u0065\u006b":
		*_adafe = 2
	}
	return nil
}
func (_fbafb ST_TransitionSpeed) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dbff := _d.Attr{}
	_dbff.Name = name
	switch _fbafb {
	case ST_TransitionSpeedUnset:
		_dbff.Value = ""
	case ST_TransitionSpeedSlow:
		_dbff.Value = "\u0073\u006c\u006f\u0077"
	case ST_TransitionSpeedMed:
		_dbff.Value = "\u006d\u0065\u0064"
	case ST_TransitionSpeedFast:
		_dbff.Value = "\u0066\u0061\u0073\u0074"
	}
	return _dbff, nil
}

// Validate validates the CT_TLAnimateRotationBehavior and its children
func (_bdgaf *CT_TLAnimateRotationBehavior) Validate() error {
	return _bdgaf.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074a\u0074i\u006f\u006e\u0042\u0065\u0068\u0061\u0076i\u006f\u0072")
}

// ValidateWithPath validates the CT_HandoutMaster and its children, prefixing error messages with path
func (_bagf *CT_HandoutMaster) ValidateWithPath(path string) error {
	if _becc := _bagf.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _becc != nil {
		return _becc
	}
	if _eefe := _bagf.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _eefe != nil {
		return _eefe
	}
	if _bagf.Hf != nil {
		if _aecd := _bagf.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _aecd != nil {
			return _aecd
		}
	}
	if _bagf.ExtLst != nil {
		if _edcf := _bagf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edcf != nil {
			return _edcf
		}
	}
	return nil
}
func (_acaa *CT_SlideLayoutIdList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eedc:
	for {
		_caecb, _gdeaa := d.Token()
		if _gdeaa != nil {
			return _gdeaa
		}
		switch _badad := _caecb.(type) {
		case _d.StartElement:
			switch _badad.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}:
				_fcbb := NewCT_SlideLayoutIdListEntry()
				if _gaae := d.DecodeElement(_fcbb, &_badad); _gaae != nil {
					return _gaae
				}
				_acaa.SldLayoutId = append(_acaa.SldLayoutId, _fcbb)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _badad.Name)
				if _fcaa := d.Skip(); _fcaa != nil {
					return _fcaa
				}
			}
		case _d.EndElement:
			break _eedc
		case _d.CharData:
		}
	}
	return nil
}
func NewCmLst() *CmLst {
	_eaaga := &CmLst{}
	_eaaga.CT_CommentList = *NewCT_CommentList()
	return _eaaga
}

type CT_SlideSorterViewProperties struct {

	// Show Formatting
	ShowFormattingAttr *bool

	// Base properties for Slide Sorter View
	CViewPr *CT_CommonViewProperties
	ExtLst  *CT_ExtensionList
}

// Validate validates the SldSyncPr and its children
func (_fcadb *SldSyncPr) Validate() error {
	return _fcadb.ValidateWithPath("\u0053l\u0064\u0053\u0079\u006e\u0063\u0050r")
}
func (_gcgce *CT_NotesMasterIdList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gcgce.NotesMasterId != nil {
		_babd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006eo\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}}
		e.EncodeElement(_gcgce.NotesMasterId, _babd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_StringTag and its children, prefixing error messages with path
func (_dbbe *CT_StringTag) ValidateWithPath(path string) error { return nil }
func (_ggfbe *CT_TimeNodeList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fggd:
	for {
		_cdefa, _dgacg := d.Token()
		if _dgacg != nil {
			return _dgacg
		}
		switch _feba := _cdefa.(type) {
		case _d.StartElement:
			switch _feba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0061\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072"}:
				_fcaed := NewCT_TLTimeNodeParallel()
				if _cgaga := d.DecodeElement(_fcaed, &_feba); _cgaga != nil {
					return _cgaga
				}
				_ggfbe.Par = append(_ggfbe.Par, _fcaed)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0071"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0071"}:
				_dbfdg := NewCT_TLTimeNodeSequence()
				if _ecffb := d.DecodeElement(_dbfdg, &_feba); _ecffb != nil {
					return _ecffb
				}
				_ggfbe.Seq = append(_ggfbe.Seq, _dbfdg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}:
				_gccf := NewCT_TLTimeNodeExclusive()
				if _bdcbc := d.DecodeElement(_gccf, &_feba); _bdcbc != nil {
					return _bdcbc
				}
				_ggfbe.Excl = append(_ggfbe.Excl, _gccf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}:
				_fbfgg := NewCT_TLAnimateBehavior()
				if _gdgd := d.DecodeElement(_fbfgg, &_feba); _gdgd != nil {
					return _gdgd
				}
				_ggfbe.Anim = append(_ggfbe.Anim, _fbfgg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}:
				_bfca := NewCT_TLAnimateColorBehavior()
				if _ccfcb := d.DecodeElement(_bfca, &_feba); _ccfcb != nil {
					return _ccfcb
				}
				_ggfbe.AnimClr = append(_ggfbe.AnimClr, _bfca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}:
				_dbeag := NewCT_TLAnimateEffectBehavior()
				if _bgecb := d.DecodeElement(_dbeag, &_feba); _bgecb != nil {
					return _bgecb
				}
				_ggfbe.AnimEffect = append(_ggfbe.AnimEffect, _dbeag)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}:
				_febg := NewCT_TLAnimateMotionBehavior()
				if _gfggf := d.DecodeElement(_febg, &_feba); _gfggf != nil {
					return _gfggf
				}
				_ggfbe.AnimMotion = append(_ggfbe.AnimMotion, _febg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}:
				_addda := NewCT_TLAnimateRotationBehavior()
				if _gbcde := d.DecodeElement(_addda, &_feba); _gbcde != nil {
					return _gbcde
				}
				_ggfbe.AnimRot = append(_ggfbe.AnimRot, _addda)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}:
				_facff := NewCT_TLAnimateScaleBehavior()
				if _ggeba := d.DecodeElement(_facff, &_feba); _ggeba != nil {
					return _ggeba
				}
				_ggfbe.AnimScale = append(_ggfbe.AnimScale, _facff)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0064"}:
				_ggee := NewCT_TLCommandBehavior()
				if _deefb := d.DecodeElement(_ggee, &_feba); _deefb != nil {
					return _deefb
				}
				_ggfbe.Cmd = append(_ggfbe.Cmd, _ggee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
				_bdgba := NewCT_TLSetBehavior()
				if _bfgge := d.DecodeElement(_bdgba, &_feba); _bfgge != nil {
					return _bfgge
				}
				_ggfbe.Set = append(_ggfbe.Set, _bdgba)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}:
				_abcef := NewCT_TLMediaNodeAudio()
				if _gbea := d.DecodeElement(_abcef, &_feba); _gbea != nil {
					return _gbea
				}
				_ggfbe.Audio = append(_ggfbe.Audio, _abcef)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}:
				_bbabcg := NewCT_TLMediaNodeVideo()
				if _ccabe := d.DecodeElement(_bbabcg, &_feba); _ccabe != nil {
					return _ccabe
				}
				_ggfbe.Video = append(_ggfbe.Video, _bbabcg)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0069\u006de\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _feba.Name)
				if _dcdgc := d.Skip(); _dcdgc != nil {
					return _dcdgc
				}
			}
		case _d.EndElement:
			break _fggd
		case _d.CharData:
		}
	}
	return nil
}

type CmLst struct{ CT_CommentList }

func (_ggfabf ST_PlaceholderSize) String() string {
	switch _ggfabf {
	case 0:
		return ""
	case 1:
		return "\u0066\u0075\u006c\u006c"
	case 2:
		return "\u0068\u0061\u006c\u0066"
	case 3:
		return "\u0071u\u0061\u0072\u0074\u0065\u0072"
	}
	return ""
}
func (_eccdda ST_PlaceholderSize) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_eccdda.String(), start)
}

// Validate validates the CmLst and its children
func (_aead *CmLst) Validate() error { return _aead.ValidateWithPath("\u0043\u006d\u004cs\u0074") }

type CT_Slide struct {

	// Show Slide in Slide Show
	ShowAttr *bool

	// Common slide data for slides
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr *_c.CT_ColorMappingOverride

	// Slide Transition
	Transition *CT_SlideTransition

	// Slide Timing Information for a Slide
	Timing               *CT_SlideTiming
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}
type ST_TLAnimateMotionPathEditMode byte

func NewCT_OrientationTransition() *CT_OrientationTransition {
	_egfad := &CT_OrientationTransition{}
	return _egfad
}
func (_deega ST_SlideSizeType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_deega.String(), start)
}

type CT_ShapeNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_c.CT_NonVisualDrawingProps

	// Non-Visual Drawing Properties for a Shape
	CNvSpPr *_c.CT_NonVisualDrawingShapeProps

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_afcgd *CT_SideDirectionTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eafgd := range start.Attr {
		if _eafgd.Name.Local == "\u0064\u0069\u0072" {
			_afcgd.DirAttr.UnmarshalXMLAttr(_eafgd)
			continue
		}
	}
	for {
		_feddb, _dcbg := d.Token()
		if _dcbg != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006e\u0073\u0069t\u0069\u006fn\u003a\u0020\u0025\u0073", _dcbg)
		}
		if _cdbc, _bead := _feddb.(_d.EndElement); _bead && _cdbc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_debb *CT_SlideTransitionChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _debb.Blinds != nil {
		_gaede := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u006e\u0064\u0073"}}
		e.EncodeElement(_debb.Blinds, _gaede)
	}
	if _debb.Checker != nil {
		_ceeab := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0068\u0065\u0063\u006b\u0065r"}}
		e.EncodeElement(_debb.Checker, _ceeab)
	}
	if _debb.Circle != nil {
		_ggcd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0069\u0072\u0063\u006c\u0065"}}
		e.EncodeElement(_debb.Circle, _ggcd)
	}
	if _debb.Dissolve != nil {
		_ffcgf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}}
		e.EncodeElement(_debb.Dissolve, _ffcgf)
	}
	if _debb.Comb != nil {
		_cadb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006f\u006d\u0062"}}
		e.EncodeElement(_debb.Comb, _cadb)
	}
	if _debb.Cover != nil {
		_edae := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u006f\u0076\u0065\u0072"}}
		e.EncodeElement(_debb.Cover, _edae)
	}
	if _debb.Cut != nil {
		_bbaf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063u\u0074"}}
		e.EncodeElement(_debb.Cut, _bbaf)
	}
	if _debb.Diamond != nil {
		_cbcbd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0064\u0069\u0061\u006d\u006f\u006ed"}}
		e.EncodeElement(_debb.Diamond, _cbcbd)
	}
	if _debb.Fade != nil {
		_edfed := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0066\u0061\u0064\u0065"}}
		e.EncodeElement(_debb.Fade, _edfed)
	}
	if _debb.Newsflash != nil {
		_fafcd := _d.StartElement{Name: _d.Name{Local: "p\u003a\u006e\u0065\u0077\u0073\u0066\u006c\u0061\u0073\u0068"}}
		e.EncodeElement(_debb.Newsflash, _fafcd)
	}
	if _debb.Plus != nil {
		_gfaa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u006c\u0075\u0073"}}
		e.EncodeElement(_debb.Plus, _gfaa)
	}
	if _debb.Pull != nil {
		_aeaf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0075\u006c\u006c"}}
		e.EncodeElement(_debb.Pull, _aeaf)
	}
	if _debb.Push != nil {
		_dbec := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0075\u0073\u0068"}}
		e.EncodeElement(_debb.Push, _dbec)
	}
	if _debb.Random != nil {
		_efec := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0072\u0061\u006e\u0064\u006f\u006d"}}
		e.EncodeElement(_debb.Random, _efec)
	}
	if _debb.RandomBar != nil {
		_bfcgb := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0072\u0061\u006e\u0064\u006f\u006d\u0042\u0061\u0072"}}
		e.EncodeElement(_debb.RandomBar, _bfcgb)
	}
	if _debb.Split != nil {
		_dad := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0070\u006c\u0069\u0074"}}
		e.EncodeElement(_debb.Split, _dad)
	}
	if _debb.Strips != nil {
		_cgbga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0074\u0072\u0069\u0070\u0073"}}
		e.EncodeElement(_debb.Strips, _cgbga)
	}
	if _debb.Wedge != nil {
		_cdaf := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0077\u0065\u0064\u0067\u0065"}}
		e.EncodeElement(_debb.Wedge, _cdaf)
	}
	if _debb.Wheel != nil {
		_eabdde := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0077\u0068\u0065\u0065\u006c"}}
		e.EncodeElement(_debb.Wheel, _eabdde)
	}
	if _debb.Wipe != nil {
		_gdbef := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0077\u0069\u0070\u0065"}}
		e.EncodeElement(_debb.Wipe, _gdbef)
	}
	if _debb.Zoom != nil {
		_cfed := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u007a\u006f\u006f\u006d"}}
		e.EncodeElement(_debb.Zoom, _cfed)
	}
	return nil
}
func (_dfeg ST_TLTimeNodeType) String() string {
	switch _dfeg {
	case 0:
		return ""
	case 1:
		return "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074"
	case 2:
		return "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074"
	case 3:
		return "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"
	case 4:
		return "\u006da\u0069\u006e\u0053\u0065\u0071"
	case 5:
		return "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071"
	case 6:
		return "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072"
	case 7:
		return "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p"
	case 8:
		return "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	case 9:
		return "\u0074\u006d\u0052\u006f\u006f\u0074"
	}
	return ""
}
func (_gabdc ST_PlaceholderType) Validate() error { return _gabdc.ValidateWithPath("") }
func (_cgdf *ST_TLAnimateEffectTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dddfg, _bccbd := d.Token()
	if _bccbd != nil {
		return _bccbd
	}
	if _gadee, _adedc := _dddfg.(_d.EndElement); _adedc && _gadee.Name == start.Name {
		*_cgdf = 1
		return nil
	}
	if _faeec, _cdagg := _dddfg.(_d.CharData); !_cdagg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dddfg)
	} else {
		switch string(_faeec) {
		case "":
			*_cgdf = 0
		case "\u0069\u006e":
			*_cgdf = 1
		case "\u006f\u0075\u0074":
			*_cgdf = 2
		case "\u006e\u006f\u006e\u0065":
			*_cgdf = 3
		}
	}
	_dddfg, _bccbd = d.Token()
	if _bccbd != nil {
		return _bccbd
	}
	if _agcac, _addef := _dddfg.(_d.EndElement); _addef && _agcac.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dddfg)
}
func (_aacf ST_PhotoAlbumFrameShape) ValidateWithPath(path string) error {
	switch _aacf {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aacf))
	}
	return nil
}
func (_ebcgg *CT_PhotoAlbum) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gdeag := range start.Attr {
		if _gdeag.Name.Local == "\u0062\u0077" {
			_cggb, _adda := _ag.ParseBool(_gdeag.Value)
			if _adda != nil {
				return _adda
			}
			_ebcgg.BwAttr = &_cggb
			continue
		}
		if _gdeag.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0073" {
			_agae, _dbabe := _ag.ParseBool(_gdeag.Value)
			if _dbabe != nil {
				return _dbabe
			}
			_ebcgg.ShowCaptionsAttr = &_agae
			continue
		}
		if _gdeag.Name.Local == "\u006c\u0061\u0079\u006f\u0075\u0074" {
			_ebcgg.LayoutAttr.UnmarshalXMLAttr(_gdeag)
			continue
		}
		if _gdeag.Name.Local == "\u0066\u0072\u0061m\u0065" {
			_ebcgg.FrameAttr.UnmarshalXMLAttr(_gdeag)
			continue
		}
	}
_bbac:
	for {
		_gace, _gecee := d.Token()
		if _gecee != nil {
			return _gecee
		}
		switch _abda := _gace.(type) {
		case _d.StartElement:
			switch _abda.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebcgg.ExtLst = NewCT_ExtensionList()
				if _geddd := d.DecodeElement(_ebcgg.ExtLst, &_abda); _geddd != nil {
					return _geddd
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050h\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d \u0025\u0076", _abda.Name)
				if _cdaa := d.Skip(); _cdaa != nil {
					return _cdaa
				}
			}
		case _d.EndElement:
			break _bbac
		case _d.CharData:
		}
	}
	return nil
}
func (_bbb *CT_Empty) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gab *AG_TLBuild) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gab.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_gab.SpidAttr)})
	}
	if _gab.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_gab.GrpIdAttr)})
	}
	if _gab.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gab.UiExpandAttr))})
	}
	return nil
}
func NewCT_TLBuildDiagram() *CT_TLBuildDiagram       { _deeda := &CT_TLBuildDiagram{}; return _deeda }
func (_caecf ST_TLTimeNodeFillType) Validate() error { return _caecf.ValidateWithPath("") }
func (_ccgb *CT_CustomShowId) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _ccgb.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PlaceholderSizeUnset   ST_PlaceholderSize = 0
	ST_PlaceholderSizeFull    ST_PlaceholderSize = 1
	ST_PlaceholderSizeHalf    ST_PlaceholderSize = 2
	ST_PlaceholderSizeQuarter ST_PlaceholderSize = 3
)

// Validate validates the CT_NotesMasterIdList and its children
func (_fafc *CT_NotesMasterIdList) Validate() error {
	return _fafc.ValidateWithPath("C\u0054_\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074")
}
func (_efc *CT_ApplicationNonVisualDrawingProps) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fg := range start.Attr {
		if _fg.Name.Local == "\u0069s\u0050\u0068\u006f\u0074\u006f" {
			_bf, _ecf := _ag.ParseBool(_fg.Value)
			if _ecf != nil {
				return _ecf
			}
			_efc.IsPhotoAttr = &_bf
			continue
		}
		if _fg.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_ded, _eab := _ag.ParseBool(_fg.Value)
			if _eab != nil {
				return _eab
			}
			_efc.UserDrawnAttr = &_ded
			continue
		}
	}
_cb:
	for {
		_gdd, _eff := d.Token()
		if _eff != nil {
			return _eff
		}
		switch _fae := _gdd.(type) {
		case _d.StartElement:
			switch _fae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068"}:
				_efc.Ph = NewCT_Placeholder()
				if _gcb := d.DecodeElement(_efc.Ph, &_fae); _gcb != nil {
					return _gcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}:
				_efc.AudioCd = _c.NewCT_AudioCD()
				if _agf := d.DecodeElement(_efc.AudioCd, &_fae); _agf != nil {
					return _agf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}:
				_efc.WavAudioFile = _c.NewCT_EmbeddedWAVAudioFile()
				if _ead := d.DecodeElement(_efc.WavAudioFile, &_fae); _ead != nil {
					return _ead
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}:
				_efc.AudioFile = _c.NewCT_AudioFile()
				if _db := d.DecodeElement(_efc.AudioFile, &_fae); _db != nil {
					return _db
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}:
				_efc.VideoFile = _c.NewCT_VideoFile()
				if _dfe := d.DecodeElement(_efc.VideoFile, &_fae); _dfe != nil {
					return _dfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}:
				_efc.QuickTimeFile = _c.NewCT_QuickTimeFile()
				if _efg := d.DecodeElement(_efc.QuickTimeFile, &_fae); _efg != nil {
					return _efg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_efc.CustDataLst = NewCT_CustomerDataList()
				if _gde := d.DecodeElement(_efc.CustDataLst, &_fae); _gde != nil {
					return _gde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efc.ExtLst = NewCT_ExtensionList()
				if _fdc := d.DecodeElement(_efc.ExtLst, &_fae); _fdc != nil {
					return _fdc
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041p\u0070\u006c\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006eg\u0050\u0072\u006f\u0070\u0073 \u0025\u0076", _fae.Name)
				if _cff := d.Skip(); _cff != nil {
					return _cff
				}
			}
		case _d.EndElement:
			break _cb
		case _d.CharData:
		}
	}
	return nil
}
func (_daf *CT_Control) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ggfa := range start.Attr {
		if _ggfa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ggfa.Name.Local == "\u0069\u0064" {
			_bbdc, _cgg := _ggfa.Value, error(nil)
			if _cgg != nil {
				return _cgg
			}
			_daf.IdAttr = &_bbdc
			continue
		}
		if _ggfa.Name.Local == "\u0073\u0070\u0069\u0064" {
			_eade, _ggg := _ggfa.Value, error(nil)
			if _ggg != nil {
				return _ggg
			}
			_daf.SpidAttr = &_eade
			continue
		}
		if _ggfa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gdce, _bde := _ggfa.Value, error(nil)
			if _bde != nil {
				return _bde
			}
			_daf.NameAttr = &_gdce
			continue
		}
		if _ggfa.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_dbeec, _gdbg := _ag.ParseBool(_ggfa.Value)
			if _gdbg != nil {
				return _gdbg
			}
			_daf.ShowAsIconAttr = &_dbeec
			continue
		}
		if _ggfa.Name.Local == "\u0069\u006d\u0067\u0057" {
			_bbgc, _fege := _ag.ParseInt(_ggfa.Value, 10, 32)
			if _fege != nil {
				return _fege
			}
			_eddf := int32(_bbgc)
			_daf.ImgWAttr = &_eddf
			continue
		}
		if _ggfa.Name.Local == "\u0069\u006d\u0067\u0048" {
			_fgbe, _gfgf := _ag.ParseInt(_ggfa.Value, 10, 32)
			if _gfgf != nil {
				return _gfgf
			}
			_beec := int32(_fgbe)
			_daf.ImgHAttr = &_beec
			continue
		}
	}
_aaed:
	for {
		_gddb, _eccb := d.Token()
		if _eccb != nil {
			return _eccb
		}
		switch _deef := _gddb.(type) {
		case _d.StartElement:
			switch _deef.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_daf.ExtLst = NewCT_ExtensionList()
				if _gec := d.DecodeElement(_daf.ExtLst, &_deef); _gec != nil {
					return _gec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_daf.Pic = NewCT_Picture()
				if _gdcf := d.DecodeElement(_daf.Pic, &_deef); _gdcf != nil {
					return _gdcf
				}
			default:
				_be.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0020\u0025\u0076", _deef.Name)
				if _ccdb := d.Skip(); _ccdb != nil {
					return _ccdb
				}
			}
		case _d.EndElement:
			break _aaed
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLTimeCondition struct {

	// Trigger Event
	EvtAttr ST_TLTriggerEvent

	// Trigger Delay
	DelayAttr *ST_TLTime

	// Target Element Trigger Choice
	TgtEl *CT_TLTimeTargetElement

	// Time Node
	Tn *CT_TLTriggerTimeNodeID

	// Runtime Node Trigger Choice
	Rtn *CT_TLTriggerRuntimeNode
}

func (_ffcd *CT_SlideLayoutIdListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dcece := range start.Attr {
		if _dcece.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dcece.Name.Local == "\u0069\u0064" || _dcece.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dcece.Name.Local == "\u0069\u0064" {
			_dggag, _gbcdg := _dcece.Value, error(nil)
			if _gbcdg != nil {
				return _gbcdg
			}
			_ffcd.RIdAttr = _dggag
			continue
		}
		if _dcece.Name.Local == "\u0069\u0064" {
			_eabdd, _ffbfc := _ag.ParseUint(_dcece.Value, 10, 32)
			if _ffbfc != nil {
				return _ffbfc
			}
			_dbaef := uint32(_eabdd)
			_ffcd.IdAttr = &_dbaef
			continue
		}
	}
_afdgc:
	for {
		_aggc, _dbdf := d.Token()
		if _dbdf != nil {
			return _dbdf
		}
		switch _cfaab := _aggc.(type) {
		case _d.StartElement:
			switch _cfaab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffcd.ExtLst = NewCT_ExtensionList()
				if _edccg := d.DecodeElement(_ffcd.ExtLst, &_cfaab); _edccg != nil {
					return _edccg
				}
			default:
				_be.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075t\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _cfaab.Name)
				if _dgde := d.Skip(); _dgde != nil {
					return _dgde
				}
			}
		case _d.EndElement:
			break _afdgc
		case _d.CharData:
		}
	}
	return nil
}
func (_aegc *CT_TLTriggerRuntimeNode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_gbfa, _bedbc := _aegc.ValAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0061\u006c"})
	if _bedbc != nil {
		return _bedbc
	}
	start.Attr = append(start.Attr, _gbfa)
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ecebd *CT_TLCommonBehaviorData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ecebd.AdditiveAttr != ST_TLBehaviorAdditiveTypeUnset {
		_babb, _gceff := _ecebd.AdditiveAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u0064\u0064\u0069\u0074\u0069\u0076\u0065"})
		if _gceff != nil {
			return _gceff
		}
		start.Attr = append(start.Attr, _babb)
	}
	if _ecebd.AccumulateAttr != ST_TLBehaviorAccumulateTypeUnset {
		_dbgcd, _agba := _ecebd.AccumulateAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u0063\u0063\u0075\u006d\u0075\u006c\u0061\u0074\u0065"})
		if _agba != nil {
			return _agba
		}
		start.Attr = append(start.Attr, _dbgcd)
	}
	if _ecebd.XfrmTypeAttr != ST_TLBehaviorTransformTypeUnset {
		_ccab, _aefca := _ecebd.XfrmTypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0078\u0066\u0072\u006d\u0054\u0079\u0070\u0065"})
		if _aefca != nil {
			return _aefca
		}
		start.Attr = append(start.Attr, _ccab)
	}
	if _ecebd.FromAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_ecebd.FromAttr)})
	}
	if _ecebd.ToAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_ecebd.ToAttr)})
	}
	if _ecebd.ByAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_ecebd.ByAttr)})
	}
	if _ecebd.RctxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0063\u0074\u0078"}, Value: _b.Sprintf("\u0025\u0076", *_ecebd.RctxAttr)})
	}
	if _ecebd.OverrideAttr != ST_TLBehaviorOverrideTypeUnset {
		_eadc, _fabedf := _ecebd.OverrideAttr.MarshalXMLAttr(_d.Name{Local: "\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"})
		if _fabedf != nil {
			return _fabedf
		}
		start.Attr = append(start.Attr, _eadc)
	}
	e.EncodeToken(start)
	_abdgg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_ecebd.CTn, _abdgg)
	_acgce := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
	e.EncodeElement(_ecebd.TgtEl, _acgce)
	if _ecebd.AttrNameLst != nil {
		_baddf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_ecebd.AttrNameLst, _baddf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bfbcf *ST_PrintWhat) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bfbcf = 0
	case "\u0073\u006c\u0069\u0064\u0065\u0073":
		*_bfbcf = 1
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731":
		*_bfbcf = 2
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732":
		*_bfbcf = 3
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733":
		*_bfbcf = 4
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734":
		*_bfbcf = 5
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736":
		*_bfbcf = 6
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739":
		*_bfbcf = 7
	case "\u006e\u006f\u0074e\u0073":
		*_bfbcf = 8
	case "\u006fu\u0074\u006c\u0069\u006e\u0065":
		*_bfbcf = 9
	}
	return nil
}
func NewCT_SlideMasterIdListEntry() *CT_SlideMasterIdListEntry {
	_aebc := &CT_SlideMasterIdListEntry{}
	return _aebc
}
func (_eeabd *ST_TLBehaviorOverrideType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_eeabd = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_eeabd = 1
	case "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
		*_eeabd = 2
	}
	return nil
}

// ValidateWithPath validates the CT_CommonSlideViewProperties and its children, prefixing error messages with path
func (_bggd *CT_CommonSlideViewProperties) ValidateWithPath(path string) error {
	if _fgea := _bggd.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _fgea != nil {
		return _fgea
	}
	if _bggd.GuideLst != nil {
		if _bdde := _bggd.GuideLst.ValidateWithPath(path + "\u002fG\u0075\u0069\u0064\u0065\u004c\u0073t"); _bdde != nil {
			return _bdde
		}
	}
	return nil
}
func (_ageed *ST_PhotoAlbumFrameShape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cbdca, _dcafe := d.Token()
	if _dcafe != nil {
		return _dcafe
	}
	if _eadad, _ddfce := _cbdca.(_d.EndElement); _ddfce && _eadad.Name == start.Name {
		*_ageed = 1
		return nil
	}
	if _fdgcd, _bfab := _cbdca.(_d.CharData); !_bfab {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbdca)
	} else {
		switch string(_fdgcd) {
		case "":
			*_ageed = 0
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031":
			*_ageed = 1
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032":
			*_ageed = 2
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033":
			*_ageed = 3
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034":
			*_ageed = 4
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035":
			*_ageed = 5
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036":
			*_ageed = 6
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037":
			*_ageed = 7
		}
	}
	_cbdca, _dcafe = d.Token()
	if _dcafe != nil {
		return _dcafe
	}
	if _dcdda, _ggde := _cbdca.(_d.EndElement); _ggde && _dcdda.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbdca)
}
func (_afcbc *CT_TransitionSoundAction) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _afcbc.StSnd != nil {
		_bdcec := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0074\u0053\u006e\u0064"}}
		e.EncodeElement(_afcbc.StSnd, _bdcec)
	}
	if _afcbc.EndSnd != nil {
		_daaef := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u006e\u0064\u0053\u006e\u0064"}}
		e.EncodeElement(_afcbc.EndSnd, _daaef)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLMediaNodeAudio and its children
func (_feggd *CT_TLMediaNodeAudio) Validate() error {
	return _feggd.ValidateWithPath("\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0041\u0075\u0064\u0069\u006f")
}
func (_dbbbd ST_TLTimeNodePresetClassType) Validate() error { return _dbbbd.ValidateWithPath("") }
func NewCT_PresentationProperties() *CT_PresentationProperties {
	_cfdb := &CT_PresentationProperties{}
	return _cfdb
}
func (_dedbf *CmLst) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dedbf.CT_CommentList = *NewCT_CommentList()
_gebge:
	for {
		_dfgdf, _gaacfa := d.Token()
		if _gaacfa != nil {
			return _gaacfa
		}
		switch _dadd := _dfgdf.(type) {
		case _d.StartElement:
			switch _dadd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d"}:
				_dbfee := NewCT_Comment()
				if _abgc := d.DecodeElement(_dbfee, &_dadd); _abgc != nil {
					return _abgc
				}
				_dedbf.Cm = append(_dedbf.Cm, _dbfee)
			default:
				_be.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u006d\u004cs\u0074 \u0025\u0076", _dadd.Name)
				if _bceedd := d.Skip(); _bceedd != nil {
					return _bceedd
				}
			}
		case _d.EndElement:
			break _gebge
		case _d.CharData:
		}
	}
	return nil
}
func (_gddbc *PresentationPr) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gddbc.CT_PresentationProperties = *NewCT_PresentationProperties()
_egggd:
	for {
		_cfbbe, _ccbbd := d.Token()
		if _ccbbd != nil {
			return _ccbbd
		}
		switch _agfdg := _cfbbe.(type) {
		case _d.StartElement:
			switch _agfdg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}:
				_gddbc.HtmlPubPr = NewCT_HtmlPublishProperties()
				if _fefgb := d.DecodeElement(_gddbc.HtmlPubPr, &_agfdg); _fefgb != nil {
					return _fefgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_gddbc.WebPr = NewCT_WebProperties()
				if _debd := d.DecodeElement(_gddbc.WebPr, &_agfdg); _debd != nil {
					return _debd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}:
				_gddbc.PrnPr = NewCT_PrintProperties()
				if _efdg := d.DecodeElement(_gddbc.PrnPr, &_agfdg); _efdg != nil {
					return _efdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}:
				_gddbc.ShowPr = NewCT_ShowProperties()
				if _ddaca := d.DecodeElement(_gddbc.ShowPr, &_agfdg); _ddaca != nil {
					return _ddaca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}:
				_gddbc.ClrMru = _c.NewCT_ColorMRU()
				if _cgcde := d.DecodeElement(_gddbc.ClrMru, &_agfdg); _cgcde != nil {
					return _cgcde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gddbc.ExtLst = NewCT_ExtensionList()
				if _dfcagg := d.DecodeElement(_gddbc.ExtLst, &_agfdg); _dfcagg != nil {
					return _dfcagg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006eP\u0072\u0020\u0025\u0076", _agfdg.Name)
				if _fcga := d.Skip(); _fcga != nil {
					return _fcga
				}
			}
		case _d.EndElement:
			break _egggd
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TLTimeNodeTypeUnset          ST_TLTimeNodeType = 0
	ST_TLTimeNodeTypeClickEffect    ST_TLTimeNodeType = 1
	ST_TLTimeNodeTypeWithEffect     ST_TLTimeNodeType = 2
	ST_TLTimeNodeTypeAfterEffect    ST_TLTimeNodeType = 3
	ST_TLTimeNodeTypeMainSeq        ST_TLTimeNodeType = 4
	ST_TLTimeNodeTypeInteractiveSeq ST_TLTimeNodeType = 5
	ST_TLTimeNodeTypeClickPar       ST_TLTimeNodeType = 6
	ST_TLTimeNodeTypeWithGroup      ST_TLTimeNodeType = 7
	ST_TLTimeNodeTypeAfterGroup     ST_TLTimeNodeType = 8
	ST_TLTimeNodeTypeTmRoot         ST_TLTimeNodeType = 9
)

func (_ceffff ST_ViewType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ceffff.String(), start)
}
func (_ccdff *ST_TLTimeNodeRestartType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dcceb, _adbab := d.Token()
	if _adbab != nil {
		return _adbab
	}
	if _gbegf, _ddab := _dcceb.(_d.EndElement); _ddab && _gbegf.Name == start.Name {
		*_ccdff = 1
		return nil
	}
	if _abgca, _ggdd := _dcceb.(_d.CharData); !_ggdd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcceb)
	} else {
		switch string(_abgca) {
		case "":
			*_ccdff = 0
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_ccdff = 1
		case "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065":
			*_ccdff = 2
		case "\u006e\u0065\u0076e\u0072":
			*_ccdff = 3
		}
	}
	_dcceb, _adbab = d.Token()
	if _adbab != nil {
		return _adbab
	}
	if _bgcf, _afagg := _dcceb.(_d.EndElement); _afagg && _bgcf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcceb)
}

// ValidateWithPath validates the CT_TLSetBehavior and its children, prefixing error messages with path
func (_bfdc *CT_TLSetBehavior) ValidateWithPath(path string) error {
	if _cdgdae := _bfdc.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _cdgdae != nil {
		return _cdgdae
	}
	if _bfdc.To != nil {
		if _fbggc := _bfdc.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _fbggc != nil {
			return _fbggc
		}
	}
	return nil
}
func (_badd *CT_InOutTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _badd.DirAttr != ST_TransitionInOutDirectionTypeUnset {
		_acca, _adaf := _badd.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
		if _adaf != nil {
			return _adaf
		}
		start.Attr = append(start.Attr, _acca)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_afabe *CT_TLAnimVariant) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _afabe.BoolVal != nil {
		_fcebf := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0062\u006f\u006f\u006c\u0056\u0061l"}}
		e.EncodeElement(_afabe.BoolVal, _fcebf)
	}
	if _afabe.IntVal != nil {
		_fdbd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0069\u006e\u0074\u0056\u0061\u006c"}}
		e.EncodeElement(_afabe.IntVal, _fdbd)
	}
	if _afabe.FltVal != nil {
		_fgegf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0066\u006c\u0074\u0056\u0061\u006c"}}
		e.EncodeElement(_afabe.FltVal, _fgegf)
	}
	if _afabe.StrVal != nil {
		_adgc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0074\u0072\u0056\u0061\u006c"}}
		e.EncodeElement(_afabe.StrVal, _adgc)
	}
	if _afabe.ClrVal != nil {
		_bccg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u0056\u0061\u006c"}}
		e.EncodeElement(_afabe.ClrVal, _bccg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLParaBuildTypeUnset     ST_TLParaBuildType = 0
	ST_TLParaBuildTypeAllAtOnce ST_TLParaBuildType = 1
	ST_TLParaBuildTypeP         ST_TLParaBuildType = 2
	ST_TLParaBuildTypeCust      ST_TLParaBuildType = 3
	ST_TLParaBuildTypeWhole     ST_TLParaBuildType = 4
)

func NewCT_OleObjectEmbed() *CT_OleObjectEmbed { _aegb := &CT_OleObjectEmbed{}; return _aegb }

// ValidateWithPath validates the CT_TLTimeNodeSequence and its children, prefixing error messages with path
func (_dcda *CT_TLTimeNodeSequence) ValidateWithPath(path string) error {
	if _adcba := _dcda.PrevAcAttr.ValidateWithPath(path + "/\u0050\u0072\u0065\u0076\u0041\u0063\u0041\u0074\u0074\u0072"); _adcba != nil {
		return _adcba
	}
	if _cefcec := _dcda.NextAcAttr.ValidateWithPath(path + "/\u004e\u0065\u0078\u0074\u0041\u0063\u0041\u0074\u0074\u0072"); _cefcec != nil {
		return _cefcec
	}
	if _bceead := _dcda.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _bceead != nil {
		return _bceead
	}
	if _dcda.PrevCondLst != nil {
		if _bbfdcg := _dcda.PrevCondLst.ValidateWithPath(path + "\u002f\u0050\u0072e\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _bbfdcg != nil {
			return _bbfdcg
		}
	}
	if _dcda.NextCondLst != nil {
		if _gcfe := _dcda.NextCondLst.ValidateWithPath(path + "\u002f\u004e\u0065x\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _gcfe != nil {
			return _gcfe
		}
	}
	return nil
}
func (_bceeae *CT_TLTemplateList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aecb:
	for {
		_agdfc, _eageg := d.Token()
		if _eageg != nil {
			return _eageg
		}
		switch _cccff := _agdfc.(type) {
		case _d.StartElement:
			switch _cccff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0070\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0070\u006c"}:
				_caaebb := NewCT_TLTemplate()
				if _aeabc := d.DecodeElement(_caaebb, &_cccff); _aeabc != nil {
					return _aeabc
				}
				_bceeae.Tmpl = append(_bceeae.Tmpl, _caaebb)
			default:
				_be.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cccff.Name)
				if _gcbdb := d.Skip(); _gcbdb != nil {
					return _gcbdb
				}
			}
		case _d.EndElement:
			break _aecb
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLTextTargetElement struct {

	// Character Range
	CharRg *CT_IndexRange

	// Paragraph Text Range
	PRg *CT_IndexRange
}
type ST_PrintWhat byte

func NewCT_SplitTransition() *CT_SplitTransition { _acceb := &CT_SplitTransition{}; return _acceb }

type CT_TLAnimateMotionBehavior struct {

	// Origin
	OriginAttr ST_TLAnimateMotionBehaviorOrigin

	// Path
	PathAttr *string

	// Path Edit Mode
	PathEditModeAttr ST_TLAnimateMotionPathEditMode

	// Relative Angle
	RAngAttr *int32

	// Points Types
	PtsTypesAttr *string
	CBhvr        *CT_TLCommonBehaviorData
	By           *CT_TLPoint

	// From
	From *CT_TLPoint
	To   *CT_TLPoint

	// Rotation Center
	RCtr *CT_TLPoint
}

func NewCT_ShowProperties() *CT_ShowProperties { _ebda := &CT_ShowProperties{}; return _ebda }

type ST_SplitterBarState byte

const (
	ST_PrintWhatUnset     ST_PrintWhat = 0
	ST_PrintWhatSlides    ST_PrintWhat = 1
	ST_PrintWhatHandouts1 ST_PrintWhat = 2
	ST_PrintWhatHandouts2 ST_PrintWhat = 3
	ST_PrintWhatHandouts3 ST_PrintWhat = 4
	ST_PrintWhatHandouts4 ST_PrintWhat = 5
	ST_PrintWhatHandouts6 ST_PrintWhat = 6
	ST_PrintWhatHandouts9 ST_PrintWhat = 7
	ST_PrintWhatNotes     ST_PrintWhat = 8
	ST_PrintWhatOutline   ST_PrintWhat = 9
)

func NewCT_ShowInfoBrowse() *CT_ShowInfoBrowse { _bgde := &CT_ShowInfoBrowse{}; return _bgde }

// Validate validates the CT_OptionalBlackTransition and its children
func (_eddc *CT_OptionalBlackTransition) Validate() error {
	return _eddc.ValidateWithPath("\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006cB\u006c\u0061\u0063\u006b\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e")
}
func (_caee *CT_NormalViewPortion) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u007a"}, Value: _b.Sprintf("\u0025\u0076", _caee.SzAttr)})
	if _caee.AutoAdjustAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0075\u0074\u006f\u0041\u0064\u006a\u0075\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_caee.AutoAdjustAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLByAnimateColorTransform() *CT_TLByAnimateColorTransform {
	_ggabg := &CT_TLByAnimateColorTransform{}
	return _ggabg
}

// ValidateWithPath validates the CT_Background and its children, prefixing error messages with path
func (_gfc *CT_Background) ValidateWithPath(path string) error {
	if _eedg := _gfc.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _eedg != nil {
		return _eedg
	}
	if _gfc.BgPr != nil {
		if _bcac := _gfc.BgPr.ValidateWithPath(path + "\u002f\u0042\u0067P\u0072"); _bcac != nil {
			return _bcac
		}
	}
	if _gfc.BgRef != nil {
		if _gcdb := _gfc.BgRef.ValidateWithPath(path + "\u002f\u0042\u0067\u0052\u0065\u0066"); _gcdb != nil {
			return _gcdb
		}
	}
	return nil
}
func (_eadfae ST_TLTimeNodeSyncType) Validate() error { return _eadfae.ValidateWithPath("") }

// ValidateWithPath validates the CT_CustomShowId and its children, prefixing error messages with path
func (_gcgd *CT_CustomShowId) ValidateWithPath(path string) error { return nil }

type CT_TLGraphicalObjectBuild struct {

	// Build As One
	BldAsOne *CT_Empty

	// Build Sub Elements
	BldSub       *_c.CT_AnimationGraphicalObjectBuildProperties
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

func (_abgbe *ST_TransitionEightDirectionType) Validate() error { return _abgbe.ValidateWithPath("") }
func (_egga ST_ViewType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bccfe := _d.Attr{}
	_bccfe.Name = name
	switch _egga {
	case ST_ViewTypeUnset:
		_bccfe.Value = ""
	case ST_ViewTypeSldView:
		_bccfe.Value = "\u0073l\u0064\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldMasterView:
		_bccfe.Value = "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeNotesView:
		_bccfe.Value = "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w"
	case ST_ViewTypeHandoutView:
		_bccfe.Value = "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077"
	case ST_ViewTypeNotesMasterView:
		_bccfe.Value = "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeOutlineView:
		_bccfe.Value = "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldSorterView:
		_bccfe.Value = "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldThumbnailView:
		_bccfe.Value = "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077"
	}
	return _bccfe, nil
}

// Validate validates the CT_TLOleChartTargetElement and its children
func (_gced *CT_TLOleChartTargetElement) Validate() error {
	return _gced.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061r\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074")
}

type CT_GroupShapeNonVisual struct {

	// Non-visual Drawing Properties
	CNvPr *_c.CT_NonVisualDrawingProps

	// Non-Visual Group Shape Drawing Properties
	CNvGrpSpPr *_c.CT_NonVisualGroupDrawingShapeProps

	// Non-Visual Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_efbcg *CT_TLAnimateColorBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_efbcg.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _acfe := range start.Attr {
		if _acfe.Name.Local == "\u0063\u006c\u0072\u0053\u0070\u0063" {
			_efbcg.ClrSpcAttr.UnmarshalXMLAttr(_acfe)
			continue
		}
		if _acfe.Name.Local == "\u0064\u0069\u0072" {
			_efbcg.DirAttr.UnmarshalXMLAttr(_acfe)
			continue
		}
	}
_eeaf:
	for {
		_ffaf, _fafce := d.Token()
		if _fafce != nil {
			return _fafce
		}
		switch _daaga := _ffaf.(type) {
		case _d.StartElement:
			switch _daaga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _fdfe := d.DecodeElement(_efbcg.CBhvr, &_daaga); _fdfe != nil {
					return _fdfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_efbcg.By = NewCT_TLByAnimateColorTransform()
				if _agbe := d.DecodeElement(_efbcg.By, &_daaga); _agbe != nil {
					return _agbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_efbcg.From = _c.NewCT_Color()
				if _dabd := d.DecodeElement(_efbcg.From, &_daaga); _dabd != nil {
					return _dabd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_efbcg.To = _c.NewCT_Color()
				if _ebee := d.DecodeElement(_efbcg.To, &_daaga); _ebee != nil {
					return _ebee
				}
			default:
				_be.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0043o\u006c\u006f\u0072\u0042\u0065\u0068\u0061\u0076i\u006fr\u0020\u0025v", _daaga.Name)
				if _ceagg := d.Skip(); _ceagg != nil {
					return _ceagg
				}
			}
		case _d.EndElement:
			break _eeaf
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GraphicalObjectFrameNonVisual and its children
func (_daee *CT_GraphicalObjectFrameNonVisual) Validate() error {
	return _daee.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

type CT_SlideMaster struct {

	// Preserve Slide Master
	PreserveAttr *bool

	// Common slide data for slide masters
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_c.CT_ColorMapping

	// List of Slide Layouts
	SldLayoutIdLst *CT_SlideLayoutIdList

	// Slide Transition for a Slide Master
	Transition *CT_SlideTransition

	// Slide Timing Information for Slide Masters
	Timing *CT_SlideTiming

	// Header/Footer information for a slide master
	Hf *CT_HeaderFooter

	// Slide Master Text Styles
	TxStyles *CT_SlideMasterTextStyles
	ExtLst   *CT_ExtensionListModify
}

func (_aafdc *CT_TLAnimVariant) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bcfe:
	for {
		_dcce, _afae := d.Token()
		if _afae != nil {
			return _afae
		}
		switch _fcebb := _dcce.(type) {
		case _d.StartElement:
			switch _fcebb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}:
				_aafdc.BoolVal = NewCT_TLAnimVariantBooleanVal()
				if _ddfd := d.DecodeElement(_aafdc.BoolVal, &_fcebb); _ddfd != nil {
					return _ddfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}:
				_aafdc.IntVal = NewCT_TLAnimVariantIntegerVal()
				if _dcfbb := d.DecodeElement(_aafdc.IntVal, &_fcebb); _dcfbb != nil {
					return _dcfbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}:
				_aafdc.FltVal = NewCT_TLAnimVariantFloatVal()
				if _efaad := d.DecodeElement(_aafdc.FltVal, &_fcebb); _efaad != nil {
					return _efaad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}:
				_aafdc.StrVal = NewCT_TLAnimVariantStringVal()
				if _cfgde := d.DecodeElement(_aafdc.StrVal, &_fcebb); _cfgde != nil {
					return _cfgde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}:
				_aafdc.ClrVal = _c.NewCT_Color()
				if _fceeg := d.DecodeElement(_aafdc.ClrVal, &_fcebb); _fceeg != nil {
					return _fceeg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074\u0020\u0025v", _fcebb.Name)
				if _dedb := d.Skip(); _dedb != nil {
					return _dedb
				}
			}
		case _d.EndElement:
			break _bcfe
		case _d.CharData:
		}
	}
	return nil
}
func (_ebggb ST_TLAnimateColorDirection) String() string {
	switch _ebggb {
	case 0:
		return ""
	case 1:
		return "\u0063\u0077"
	case 2:
		return "\u0063\u0063\u0077"
	}
	return ""
}

// ValidateWithPath validates the CT_Kinsoku and its children, prefixing error messages with path
func (_adg *CT_Kinsoku) ValidateWithPath(path string) error { return nil }
func (_bggdb *CT_TLAnimVariantBooleanVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _afeag := range start.Attr {
		if _afeag.Name.Local == "\u0076\u0061\u006c" {
			_gccgc, _bcgb := _ag.ParseBool(_afeag.Value)
			if _bcgb != nil {
				return _bcgb
			}
			_bggdb.ValAttr = _gccgc
			continue
		}
	}
	for {
		_ffcfg, _egeb := d.Token()
		if _egeb != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074B\u006f\u006f\u006c\u0065\u0061n\u0056\u0061l\u003a\u0020\u0025\u0073", _egeb)
		}
		if _egbdd, _acge := _ffcfg.(_d.EndElement); _acge && _egbdd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SlideIdList struct {

	// Slide ID
	SldId []*CT_SlideIdListEntry
}

// Validate validates the CT_IndexRange and its children
func (_addf *CT_IndexRange) Validate() error {
	return _addf.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0052\u0061\u006e\u0067\u0065")
}
func (_cdge *ST_WebScreenSize) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cdge = 0
	case "\u00354\u0034\u0078\u0033\u0037\u0036":
		*_cdge = 1
	case "\u00364\u0030\u0078\u0034\u0038\u0030":
		*_cdge = 2
	case "\u00372\u0030\u0078\u0035\u0031\u0032":
		*_cdge = 3
	case "\u00380\u0030\u0078\u0036\u0030\u0030":
		*_cdge = 4
	case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
		*_cdge = 5
	case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
		*_cdge = 6
	case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
		*_cdge = 7
	case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
		*_cdge = 8
	case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
		*_cdge = 9
	case "\u00318\u0030\u0030\u0078\u0031\u0034\u00300":
		*_cdge = 10
	case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
		*_cdge = 11
	}
	return nil
}

type CT_TLMediaNodeVideo struct {

	// Full Screen
	FullScrnAttr *bool

	// Common Media Node Properties
	CMediaNode *CT_TLCommonMediaNodeData
}

func (_eead ST_SlideLayoutType) String() string {
	switch _eead {
	case 0:
		return ""
	case 1:
		return "\u0074\u0069\u0074l\u0065"
	case 2:
		return "\u0074\u0078"
	case 3:
		return "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078"
	case 4:
		return "\u0074\u0062\u006c"
	case 5:
		return "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074"
	case 6:
		return "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case 7:
		return "\u0064\u0067\u006d"
	case 8:
		return "\u0063\u0068\u0061r\u0074"
	case 9:
		return "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074"
	case 10:
		return "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case 11:
		return "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy"
	case 12:
		return "\u0062\u006c\u0061n\u006b"
	case 13:
		return "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a"
	case 14:
		return "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case 15:
		return "\u006fb\u006a\u004f\u006e\u006c\u0079"
	case 16:
		return "\u006f\u0062\u006a"
	case 17:
		return "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061"
	case 18:
		return "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078"
	case 19:
		return "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x"
	case 20:
		return "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j"
	case 21:
		return "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case 22:
		return "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case 23:
		return "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078"
	case 24:
		return "\u0066o\u0075\u0072\u004f\u0062\u006a"
	case 25:
		return "\u0076\u0065\u0072\u0074\u0054\u0078"
	case 26:
		return "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078"
	case 27:
		return "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078"
	case 28:
		return "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074"
	case 29:
		return "\u0074\u0077\u006f\u004f\u0062\u006a"
	case 30:
		return "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case 31:
		return "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a"
	case 32:
		return "\u0063\u0075\u0073\u0074"
	case 33:
		return "\u0073e\u0063\u0048\u0065\u0061\u0064"
	case 34:
		return "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a"
	case 35:
		return "\u006f\u0062\u006aT\u0078"
	case 36:
		return "\u0070\u0069\u0063T\u0078"
	}
	return ""
}

type CT_TLAnimVariantStringVal struct {

	// Value
	ValAttr string
}

func (_gggga ST_PhotoAlbumFrameShape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gggga.String(), start)
}

type CT_TransitionStartSoundAction struct {

	// Loop Sound
	LoopAttr *bool

	// Sound
	Snd *_c.CT_EmbeddedWAVAudioFile
}
type CT_Picture struct {

	// Non-Visual Properties for a Picture
	NvPicPr *CT_PictureNonVisual

	// Picture Fill
	BlipFill *_c.CT_BlipFillProperties
	SpPr     *_c.CT_ShapeProperties
	Style    *_c.CT_ShapeStyle
	ExtLst   *CT_ExtensionListModify
}

func (_fgbg *CT_Picture) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_aeabg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006e\u0076\u0050\u0069\u0063\u0050r"}}
	e.EncodeElement(_fgbg.NvPicPr, _aeabg)
	_efgd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_fgbg.BlipFill, _efgd)
	_cefd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_fgbg.SpPr, _cefd)
	if _fgbg.Style != nil {
		_gbadb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fgbg.Style, _gbadb)
	}
	if _fgbg.ExtLst != nil {
		_fcfa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgbg.ExtLst, _fcfa)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PresentationProperties and its children
func (_ffgb *CT_PresentationProperties) Validate() error {
	return _ffgb.ValidateWithPath("\u0043T\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074i\u006fn\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s")
}
func (_cgebe *ST_ViewType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_egfbd, _dbbbfe := d.Token()
	if _dbbbfe != nil {
		return _dbbbfe
	}
	if _aabe, _efgb := _egfbd.(_d.EndElement); _efgb && _aabe.Name == start.Name {
		*_cgebe = 1
		return nil
	}
	if _cbfce, _becfb := _egfbd.(_d.CharData); !_becfb {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egfbd)
	} else {
		switch string(_cbfce) {
		case "":
			*_cgebe = 0
		case "\u0073l\u0064\u0056\u0069\u0065\u0077":
			*_cgebe = 1
		case "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_cgebe = 2
		case "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w":
			*_cgebe = 3
		case "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077":
			*_cgebe = 4
		case "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_cgebe = 5
		case "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077":
			*_cgebe = 6
		case "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_cgebe = 7
		case "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077":
			*_cgebe = 8
		}
	}
	_egfbd, _dbbbfe = d.Token()
	if _dbbbfe != nil {
		return _dbbbfe
	}
	if _dgfgf, _gadef := _egfbd.(_d.EndElement); _gadef && _dgfgf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egfbd)
}
func (_fbadg ST_TLAnimateBehaviorCalcMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_aafbd := _d.Attr{}
	_aafbd.Name = name
	switch _fbadg {
	case ST_TLAnimateBehaviorCalcModeUnset:
		_aafbd.Value = ""
	case ST_TLAnimateBehaviorCalcModeDiscrete:
		_aafbd.Value = "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065"
	case ST_TLAnimateBehaviorCalcModeLin:
		_aafbd.Value = "\u006c\u0069\u006e"
	case ST_TLAnimateBehaviorCalcModeFmla:
		_aafbd.Value = "\u0066\u006d\u006c\u0061"
	}
	return _aafbd, nil
}

// ValidateWithPath validates the CT_GroupShapeChoice and its children, prefixing error messages with path
func (_cbcb *CT_GroupShapeChoice) ValidateWithPath(path string) error {
	for _ebae, _edgg := range _cbcb.Sp {
		if _cbca := _edgg.ValidateWithPath(_b.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _ebae)); _cbca != nil {
			return _cbca
		}
	}
	for _ffcf, _dcab := range _cbcb.GrpSp {
		if _aeac := _dcab.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _ffcf)); _aeac != nil {
			return _aeac
		}
	}
	for _defb, _ddbc := range _cbcb.GraphicFrame {
		if _aabb := _ddbc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _defb)); _aabb != nil {
			return _aabb
		}
	}
	for _dbea, _cffag := range _cbcb.CxnSp {
		if _eedb := _cffag.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _dbea)); _eedb != nil {
			return _eedb
		}
	}
	for _bbga, _eggb := range _cbcb.Pic {
		if _fced := _eggb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _bbga)); _fced != nil {
			return _fced
		}
	}
	for _dced, _gabb := range _cbcb.ContentPart {
		if _eafb := _gabb.ValidateWithPath(_b.Sprintf("\u0025s\u002fC\u006f\u006e\u0074\u0065\u006et\u0050\u0061r\u0074\u005b\u0025\u0064\u005d", path, _dced)); _eafb != nil {
			return _eafb
		}
	}
	return nil
}
func (_dbdgd *CT_SlideSyncProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cggc := range start.Attr {
		if _cggc.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064" {
			_dfgea, _dbcg := _cggc.Value, error(nil)
			if _dbcg != nil {
				return _dbcg
			}
			_dbdgd.ServerSldIdAttr = _dfgea
			continue
		}
		if _cggc.Name.Local == "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065" {
			_addd, _ccfge := ParseStdlibTime(_cggc.Value)
			if _ccfge != nil {
				return _ccfge
			}
			_dbdgd.ServerSldModifiedTimeAttr = _addd
			continue
		}
		if _cggc.Name.Local == "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065" {
			_eaefde, _bffa := ParseStdlibTime(_cggc.Value)
			if _bffa != nil {
				return _bffa
			}
			_dbdgd.ClientInsertedTimeAttr = _eaefde
			continue
		}
	}
_cgdg:
	for {
		_fgac, _ccdba := d.Token()
		if _ccdba != nil {
			return _ccdba
		}
		switch _cbbc := _fgac.(type) {
		case _d.StartElement:
			switch _cbbc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbdgd.ExtLst = NewCT_ExtensionList()
				if _fbdg := d.DecodeElement(_dbdgd.ExtLst, &_cbbc); _fbdg != nil {
					return _fbdg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u006c\u0069\u0064e\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cbbc.Name)
				if _cbdde := d.Skip(); _cbdde != nil {
					return _cbdde
				}
			}
		case _d.EndElement:
			break _cgdg
		case _d.CharData:
		}
	}
	return nil
}
func (_cfbfg ST_PlaceholderType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_babga := _d.Attr{}
	_babga.Name = name
	switch _cfbfg {
	case ST_PlaceholderTypeUnset:
		_babga.Value = ""
	case ST_PlaceholderTypeTitle:
		_babga.Value = "\u0074\u0069\u0074l\u0065"
	case ST_PlaceholderTypeBody:
		_babga.Value = "\u0062\u006f\u0064\u0079"
	case ST_PlaceholderTypeCtrTitle:
		_babga.Value = "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065"
	case ST_PlaceholderTypeSubTitle:
		_babga.Value = "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065"
	case ST_PlaceholderTypeDt:
		_babga.Value = "\u0064\u0074"
	case ST_PlaceholderTypeSldNum:
		_babga.Value = "\u0073\u006c\u0064\u004e\u0075\u006d"
	case ST_PlaceholderTypeFtr:
		_babga.Value = "\u0066\u0074\u0072"
	case ST_PlaceholderTypeHdr:
		_babga.Value = "\u0068\u0064\u0072"
	case ST_PlaceholderTypeObj:
		_babga.Value = "\u006f\u0062\u006a"
	case ST_PlaceholderTypeChart:
		_babga.Value = "\u0063\u0068\u0061r\u0074"
	case ST_PlaceholderTypeTbl:
		_babga.Value = "\u0074\u0062\u006c"
	case ST_PlaceholderTypeClipArt:
		_babga.Value = "\u0063l\u0069\u0070\u0041\u0072\u0074"
	case ST_PlaceholderTypeDgm:
		_babga.Value = "\u0064\u0067\u006d"
	case ST_PlaceholderTypeMedia:
		_babga.Value = "\u006d\u0065\u0064i\u0061"
	case ST_PlaceholderTypeSldImg:
		_babga.Value = "\u0073\u006c\u0064\u0049\u006d\u0067"
	case ST_PlaceholderTypePic:
		_babga.Value = "\u0070\u0069\u0063"
	}
	return _babga, nil
}

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_bacce *CT_Rel) ValidateWithPath(path string) error { return nil }
func (_efbgc *ST_PlaceholderSize) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_efbgc = 0
	case "\u0066\u0075\u006c\u006c":
		*_efbgc = 1
	case "\u0068\u0061\u006c\u0066":
		*_efbgc = 2
	case "\u0071u\u0061\u0072\u0074\u0065\u0072":
		*_efbgc = 3
	}
	return nil
}

type CT_TLMediaNodeAudio struct {

	// Is Narration
	IsNarrationAttr *bool

	// Common Media Node Properties
	CMediaNode *CT_TLCommonMediaNodeData
}

func NewCT_GraphicalObjectFrameNonVisual() *CT_GraphicalObjectFrameNonVisual {
	_deb := &CT_GraphicalObjectFrameNonVisual{}
	_deb.CNvPr = _c.NewCT_NonVisualDrawingProps()
	_deb.CNvGraphicFramePr = _c.NewCT_NonVisualGraphicFrameProperties()
	_deb.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _deb
}

// Validate validates the EG_ChildSlide and its children
func (_fgeeb *EG_ChildSlide) Validate() error {
	return _fgeeb.ValidateWithPath("\u0045\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065")
}

// ValidateWithPath validates the CT_TLAnimateColorBehavior and its children, prefixing error messages with path
func (_gaddd *CT_TLAnimateColorBehavior) ValidateWithPath(path string) error {
	if _fdgeg := _gaddd.ClrSpcAttr.ValidateWithPath(path + "/\u0043\u006c\u0072\u0053\u0070\u0063\u0041\u0074\u0074\u0072"); _fdgeg != nil {
		return _fdgeg
	}
	if _cdfa := _gaddd.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _cdfa != nil {
		return _cdfa
	}
	if _cgefe := _gaddd.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _cgefe != nil {
		return _cgefe
	}
	if _gaddd.By != nil {
		if _abbfa := _gaddd.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _abbfa != nil {
			return _abbfa
		}
	}
	if _gaddd.From != nil {
		if _abeb := _gaddd.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _abeb != nil {
			return _abeb
		}
	}
	if _gaddd.To != nil {
		if _accca := _gaddd.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _accca != nil {
			return _accca
		}
	}
	return nil
}
func (_acgab *SldSyncPr) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_acgab.CT_SlideSyncProperties = *NewCT_SlideSyncProperties()
	for _, _ecfde := range start.Attr {
		if _ecfde.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064" {
			_dccaa, _efdb := _ecfde.Value, error(nil)
			if _efdb != nil {
				return _efdb
			}
			_acgab.ServerSldIdAttr = _dccaa
			continue
		}
		if _ecfde.Name.Local == "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065" {
			_fgeda, _bddbd := ParseStdlibTime(_ecfde.Value)
			if _bddbd != nil {
				return _bddbd
			}
			_acgab.ServerSldModifiedTimeAttr = _fgeda
			continue
		}
		if _ecfde.Name.Local == "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065" {
			_dfabg, _ddcaf := ParseStdlibTime(_ecfde.Value)
			if _ddcaf != nil {
				return _ddcaf
			}
			_acgab.ClientInsertedTimeAttr = _dfabg
			continue
		}
	}
_bfcd:
	for {
		_dgdag, _edbef := d.Token()
		if _edbef != nil {
			return _edbef
		}
		switch _daffg := _dgdag.(type) {
		case _d.StartElement:
			switch _daffg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_acgab.ExtLst = NewCT_ExtensionList()
				if _bbfg := d.DecodeElement(_acgab.ExtLst, &_daffg); _bbfg != nil {
					return _bbfg
				}
			default:
				_be.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u0053\u0079\u006ec\u0050\u0072 \u0025\u0076", _daffg.Name)
				if _bfaa := d.Skip(); _bfaa != nil {
					return _bfaa
				}
			}
		case _d.EndElement:
			break _bfcd
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLTriggerTimeNodeID and its children
func (_beccd *CT_TLTriggerTimeNodeID) Validate() error {
	return _beccd.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0072\u0069\u0067\u0067\u0065\u0072\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065I\u0044")
}
func (_dea *CT_Rel) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _dea.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_Connector() *CT_Connector {
	_cgb := &CT_Connector{}
	_cgb.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_cgb.SpPr = _c.NewCT_ShapeProperties()
	return _cgb
}
func NewCT_CustomShow() *CT_CustomShow {
	_bfb := &CT_CustomShow{}
	_bfb.SldLst = NewCT_SlideRelationshipList()
	return _bfb
}
func (_bffad *CT_SlideTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bffad.SpdAttr != ST_TransitionSpeedUnset {
		_bgdfa, _eaea := _bffad.SpdAttr.MarshalXMLAttr(_d.Name{Local: "\u0073\u0070\u0064"})
		if _eaea != nil {
			return _eaea
		}
		start.Attr = append(start.Attr, _bgdfa)
	}
	if _bffad.AdvClickAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0064\u0076\u0043\u006c\u0069\u0063\u006b"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_bffad.AdvClickAttr))})
	}
	if _bffad.AdvTmAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0064\u0076T\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_bffad.AdvTmAttr)})
	}
	e.EncodeToken(start)
	if _bffad.Choice != nil {
		_bffad.Choice.MarshalXML(e, _d.StartElement{})
	}
	if _bffad.SndAc != nil {
		_efff := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u006e\u0064\u0041\u0063"}}
		e.EncodeElement(_bffad.SndAc, _efff)
	}
	if _bffad.ExtLst != nil {
		_baecb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bffad.ExtLst, _baecb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ceega ST_TransitionSideDirectionType) ValidateWithPath(path string) error {
	switch _ceega {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ceega))
	}
	return nil
}

type Presentation struct{ CT_Presentation }
type ST_TLDiagramBuildType byte

func NewCT_CommentAuthorList() *CT_CommentAuthorList { _cbc := &CT_CommentAuthorList{}; return _cbc }
func (_fcec ST_Direction) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ccda := _d.Attr{}
	_ccda.Name = name
	switch _fcec {
	case ST_DirectionUnset:
		_ccda.Value = ""
	case ST_DirectionHorz:
		_ccda.Value = "\u0068\u006f\u0072\u007a"
	case ST_DirectionVert:
		_ccda.Value = "\u0076\u0065\u0072\u0074"
	}
	return _ccda, nil
}
func (_ecgbg *CT_TLAnimateScaleBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ecgbg.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _cdec := range start.Attr {
		if _cdec.Name.Local == "\u007a\u006f\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073" {
			_gaacfe, _acefd := _ag.ParseBool(_cdec.Value)
			if _acefd != nil {
				return _acefd
			}
			_ecgbg.ZoomContentsAttr = &_gaacfe
			continue
		}
	}
_cgfb:
	for {
		_cfggd, _bdeaa := d.Token()
		if _bdeaa != nil {
			return _bdeaa
		}
		switch _bcdbe := _cfggd.(type) {
		case _d.StartElement:
			switch _bcdbe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _debgf := d.DecodeElement(_ecgbg.CBhvr, &_bcdbe); _debgf != nil {
					return _debgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_ecgbg.By = NewCT_TLPoint()
				if _bgce := d.DecodeElement(_ecgbg.By, &_bcdbe); _bgce != nil {
					return _bgce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_ecgbg.From = NewCT_TLPoint()
				if _effgd := d.DecodeElement(_ecgbg.From, &_bcdbe); _effgd != nil {
					return _effgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_ecgbg.To = NewCT_TLPoint()
				if _dbaaga := d.DecodeElement(_ecgbg.To, &_bcdbe); _dbaaga != nil {
					return _dbaaga
				}
			default:
				_be.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0053c\u0061\u006c\u0065\u0042\u0065\u0068\u0061\u0076i\u006fr\u0020\u0025v", _bcdbe.Name)
				if _abcgg := d.Skip(); _abcgg != nil {
					return _abcgg
				}
			}
		case _d.EndElement:
			break _cgfb
		case _d.CharData:
		}
	}
	return nil
}
func (_feaef *CT_SlideIdList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _feaef.SldId != nil {
		_feccb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u006c\u0064\u0049\u0064"}}
		for _, _agbc := range _feaef.SldId {
			e.EncodeElement(_agbc, _feccb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_TLAnimateColorSpace byte

// ValidateWithPath validates the CT_NotesViewProperties and its children, prefixing error messages with path
func (_fcfc *CT_NotesViewProperties) ValidateWithPath(path string) error {
	if _aege := _fcfc.CSldViewPr.ValidateWithPath(path + "/\u0043\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"); _aege != nil {
		return _aege
	}
	if _fcfc.ExtLst != nil {
		if _dgda := _fcfc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgda != nil {
			return _dgda
		}
	}
	return nil
}
func NewEG_ShowType() *EG_ShowType { _baaag := &EG_ShowType{}; return _baaag }

type CT_TLAnimateColorBehavior struct {

	// Color Space
	ClrSpcAttr ST_TLAnimateColorSpace

	// Direction
	DirAttr ST_TLAnimateColorDirection
	CBhvr   *CT_TLCommonBehaviorData

	// By
	By *CT_TLByAnimateColorTransform

	// From
	From *_c.CT_Color

	// To
	To *_c.CT_Color
}

func (_ddbbf *CT_SlideSorterViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ddbbf.ShowFormattingAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ddbbf.ShowFormattingAttr))})
	}
	e.EncodeToken(start)
	_gbfec := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_ddbbf.CViewPr, _gbfec)
	if _ddbbf.ExtLst != nil {
		_cbcfa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ddbbf.ExtLst, _cbcfa)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ExtensionListModify and its children, prefixing error messages with path
func (_bggc *CT_ExtensionListModify) ValidateWithPath(path string) error {
	for _dfac, _cecg := range _bggc.Ext {
		if _ggfb := _cecg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _dfac)); _ggfb != nil {
			return _ggfb
		}
	}
	return nil
}
func (_feaba ST_TLBehaviorTransformType) Validate() error { return _feaba.ValidateWithPath("") }

type CT_ApplicationNonVisualDrawingProps struct {

	// Is a Photo Album
	IsPhotoAttr *bool

	// Is User Drawn
	UserDrawnAttr *bool

	// Placeholder Shape
	Ph            *CT_Placeholder
	AudioCd       *_c.CT_AudioCD
	WavAudioFile  *_c.CT_EmbeddedWAVAudioFile
	AudioFile     *_c.CT_AudioFile
	VideoFile     *_c.CT_VideoFile
	QuickTimeFile *_c.CT_QuickTimeFile

	// Customer Data List
	CustDataLst *CT_CustomerDataList
	ExtLst      *CT_ExtensionList
}
type ST_PhotoAlbumFrameShape byte
type ST_TransitionSideDirectionType byte

// Validate validates the CT_BackgroundProperties and its children
func (_caa *CT_BackgroundProperties) Validate() error {
	return _caa.ValidateWithPath("\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_Kinsoku and its children
func (_fcbe *CT_Kinsoku) Validate() error {
	return _fcbe.ValidateWithPath("\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075")
}

// Validate validates the CT_TransitionSoundAction and its children
func (_feacf *CT_TransitionSoundAction) Validate() error {
	return _feacf.ValidateWithPath("\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006eS\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e")
}
func (_ffecc ST_TLTriggerEvent) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ffecc.String(), start)
}

// ValidateWithPath validates the CT_WheelTransition and its children, prefixing error messages with path
func (_fbgcc *CT_WheelTransition) ValidateWithPath(path string) error { return nil }
func (_bcacbf ST_TLPreviousActionType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bcacbf.String(), start)
}

// ST_TransitionEightDirectionType is a union type
type ST_TransitionEightDirectionType struct {
	ST_TransitionSideDirectionType   ST_TransitionSideDirectionType
	ST_TransitionCornerDirectionType ST_TransitionCornerDirectionType
}

func (_dgddg ST_TLTimeNodeType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dgddg.String(), start)
}
func (_aggg *CT_CommonSlideData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _aggg.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_aggg.NameAttr)})
	}
	e.EncodeToken(start)
	if _aggg.Bg != nil {
		_cgcd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0067"}}
		e.EncodeElement(_aggg.Bg, _cgcd)
	}
	_afcgg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0070\u0054\u0072\u0065\u0065"}}
	e.EncodeElement(_aggg.SpTree, _afcgg)
	if _aggg.CustDataLst != nil {
		_agbf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_aggg.CustDataLst, _agbf)
	}
	if _aggg.Controls != nil {
		_bebc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_aggg.Controls, _bebc)
	}
	if _aggg.ExtLst != nil {
		_fab := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aggg.ExtLst, _fab)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ggbbd *EG_ShowType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ggbbd.Present != nil {
		_cgebd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0070\u0072\u0065\u0073\u0065\u006et"}}
		e.EncodeElement(_ggbbd.Present, _cgebd)
	}
	if _ggbbd.Browse != nil {
		_egagg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0072\u006f\u0077\u0073\u0065"}}
		e.EncodeElement(_ggbbd.Browse, _egagg)
	}
	if _ggbbd.Kiosk != nil {
		_ggfagc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006b\u0069\u006f\u0073\u006b"}}
		e.EncodeElement(_ggbbd.Kiosk, _ggfagc)
	}
	return nil
}
func ParseUnionST_FixedPercentage(s string) (_c.ST_FixedPercentage, error) {
	return _c.ParseUnionST_FixedPercentage(s)
}
func (_efbgf ST_TLTimeNodeRestartType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bfbef := _d.Attr{}
	_bfbef.Name = name
	switch _efbgf {
	case ST_TLTimeNodeRestartTypeUnset:
		_bfbef.Value = ""
	case ST_TLTimeNodeRestartTypeAlways:
		_bfbef.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	case ST_TLTimeNodeRestartTypeWhenNotActive:
		_bfbef.Value = "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065"
	case ST_TLTimeNodeRestartTypeNever:
		_bfbef.Value = "\u006e\u0065\u0076e\u0072"
	}
	return _bfbef, nil
}

type SldLayout struct{ CT_SlideLayout }

func (_aaba *CT_TLTimeCondition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fgeb := range start.Attr {
		if _fgeb.Name.Local == "\u0065\u0076\u0074" {
			_aaba.EvtAttr.UnmarshalXMLAttr(_fgeb)
			continue
		}
		if _fgeb.Name.Local == "\u0064\u0065\u006ca\u0079" {
			_cbeg, _cece := ParseUnionST_TLTime(_fgeb.Value)
			if _cece != nil {
				return _cece
			}
			_aaba.DelayAttr = &_cbeg
			continue
		}
	}
_caca:
	for {
		_abefd, _ebcfc := d.Token()
		if _ebcfc != nil {
			return _ebcfc
		}
		switch _dgaf := _abefd.(type) {
		case _d.StartElement:
			switch _dgaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				_aaba.TgtEl = NewCT_TLTimeTargetElement()
				if _cddeg := d.DecodeElement(_aaba.TgtEl, &_dgaf); _cddeg != nil {
					return _cddeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e"}:
				_aaba.Tn = NewCT_TLTriggerTimeNodeID()
				if _bbdg := d.DecodeElement(_aaba.Tn, &_dgaf); _bbdg != nil {
					return _bbdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0074\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006e"}:
				_aaba.Rtn = NewCT_TLTriggerRuntimeNode()
				if _addbb := d.DecodeElement(_aaba.Rtn, &_dgaf); _addbb != nil {
					return _addbb
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065C\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _dgaf.Name)
				if _gfbeb := d.Skip(); _gfbeb != nil {
					return _gfbeb
				}
			}
		case _d.EndElement:
			break _caca
		case _d.CharData:
		}
	}
	return nil
}
func (_addge ST_TransitionSideDirectionType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_addge.String(), start)
}
func (_gdcc *CT_WheelTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gdcc.SpokesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u006f\u006b\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0076", *_gdcc.SpokesAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ebeea *CT_TLTimeNodeExclusive) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ebeea.CTn = NewCT_TLCommonTimeNodeData()
_bgda:
	for {
		_ccgef, _gcdc := d.Token()
		if _gcdc != nil {
			return _gcdc
		}
		switch _bfddg := _ccgef.(type) {
		case _d.StartElement:
			switch _bfddg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _bcgfac := d.DecodeElement(_ebeea.CTn, &_bfddg); _bcgfac != nil {
					return _bcgfac
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069\u0076\u0065\u0020\u0025\u0076", _bfddg.Name)
				if _eeee := d.Skip(); _eeee != nil {
					return _eeee
				}
			}
		case _d.EndElement:
			break _bgda
		case _d.CharData:
		}
	}
	return nil
}
func (_cbffc ST_TransitionSpeed) ValidateWithPath(path string) error {
	switch _cbffc {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbffc))
	}
	return nil
}
func (_gbcc ST_TLTriggerEvent) ValidateWithPath(path string) error {
	switch _gbcc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbcc))
	}
	return nil
}

type PresentationPr struct{ CT_PresentationProperties }
type NotesMaster struct{ CT_NotesMaster }

func NewCT_OutlineViewSlideEntry() *CT_OutlineViewSlideEntry {
	_dgfb := &CT_OutlineViewSlideEntry{}
	return _dgfb
}

type CT_TLAnimateBehavior struct {

	// By
	ByAttr *string

	// From
	FromAttr *string

	// To
	ToAttr *string

	// Calculation Mode
	CalcmodeAttr ST_TLAnimateBehaviorCalcMode

	// Value Type
	ValueTypeAttr ST_TLAnimateBehaviorValueType
	CBhvr         *CT_TLCommonBehaviorData

	// Time Animated Value List
	TavLst *CT_TLTimeAnimateValueList
}
type CT_ViewProperties struct {

	// Last View
	LastViewAttr ST_ViewType

	// Show Comments
	ShowCommentsAttr *bool

	// Normal View Properties
	NormalViewPr *CT_NormalViewProperties

	// Slide View Properties
	SlideViewPr *CT_SlideViewProperties

	// Outline View Properties
	OutlineViewPr *CT_OutlineViewProperties

	// Notes Text View Properties
	NotesTextViewPr *CT_NotesTextViewProperties

	// Slide Sorter View Properties
	SorterViewPr *CT_SlideSorterViewProperties

	// Notes View Properties
	NotesViewPr *CT_NotesViewProperties

	// Grid Spacing
	GridSpacing *_c.CT_PositiveSize2D
	ExtLst      *CT_ExtensionList
}

func (_ddgff ST_TLAnimateBehaviorValueType) Validate() error { return _ddgff.ValidateWithPath("") }
func (_dff *CT_CommonViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dff.Scale = _c.NewCT_Scale2D()
	_dff.Origin = _c.NewCT_Point2D()
	for _, _fbe := range start.Attr {
		if _fbe.Name.Local == "\u0076\u0061\u0072\u0053\u0063\u0061\u006c\u0065" {
			_ede, _ffgdf := _ag.ParseBool(_fbe.Value)
			if _ffgdf != nil {
				return _ffgdf
			}
			_dff.VarScaleAttr = &_ede
			continue
		}
	}
_geec:
	for {
		_eaf, _dfc := d.Token()
		if _dfc != nil {
			return _dfc
		}
		switch _fee := _eaf.(type) {
		case _d.StartElement:
			switch _fee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0063\u0061l\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0061l\u0065"}:
				if _abfe := d.DecodeElement(_dff.Scale, &_fee); _abfe != nil {
					return _abfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0072\u0069\u0067\u0069\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0072\u0069\u0067\u0069\u006e"}:
				if _agd := d.DecodeElement(_dff.Origin, &_fee); _agd != nil {
					return _agd
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006e\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _fee.Name)
				if _aeab := d.Skip(); _aeab != nil {
					return _aeab
				}
			}
		case _d.EndElement:
			break _geec
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideMasterIdList and its children
func (_gffa *CT_SlideMasterIdList) Validate() error {
	return _gffa.ValidateWithPath("C\u0054_\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074")
}
func (_cbgb *CT_Placeholder) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gbbgb := range start.Attr {
		if _gbbgb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cbgb.TypeAttr.UnmarshalXMLAttr(_gbbgb)
			continue
		}
		if _gbbgb.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_cbgb.OrientAttr.UnmarshalXMLAttr(_gbbgb)
			continue
		}
		if _gbbgb.Name.Local == "\u0073\u007a" {
			_cbgb.SzAttr.UnmarshalXMLAttr(_gbbgb)
			continue
		}
		if _gbbgb.Name.Local == "\u0069\u0064\u0078" {
			_geee, _gabd := _ag.ParseUint(_gbbgb.Value, 10, 32)
			if _gabd != nil {
				return _gabd
			}
			_ddee := uint32(_geee)
			_cbgb.IdxAttr = &_ddee
			continue
		}
		if _gbbgb.Name.Local == "\u0068a\u0073C\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u006d\u0070\u0074" {
			_decg, _afab := _ag.ParseBool(_gbbgb.Value)
			if _afab != nil {
				return _afab
			}
			_cbgb.HasCustomPromptAttr = &_decg
			continue
		}
	}
_eefee:
	for {
		_fbd, _gbdf := d.Token()
		if _gbdf != nil {
			return _gbdf
		}
		switch _fgfd := _fbd.(type) {
		case _d.StartElement:
			switch _fgfd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbgb.ExtLst = NewCT_ExtensionListModify()
				if _deff := d.DecodeElement(_cbgb.ExtLst, &_fgfd); _deff != nil {
					return _deff
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068\u006fl\u0064e\u0072\u0020\u0025\u0076", _fgfd.Name)
				if _dfdd := d.Skip(); _dfdd != nil {
					return _dfdd
				}
			}
		case _d.EndElement:
			break _eefee
		case _d.CharData:
		}
	}
	return nil
}
func (_cdade ST_SlideLayoutType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dgbgd := _d.Attr{}
	_dgbgd.Name = name
	switch _cdade {
	case ST_SlideLayoutTypeUnset:
		_dgbgd.Value = ""
	case ST_SlideLayoutTypeTitle:
		_dgbgd.Value = "\u0074\u0069\u0074l\u0065"
	case ST_SlideLayoutTypeTx:
		_dgbgd.Value = "\u0074\u0078"
	case ST_SlideLayoutTypeTwoColTx:
		_dgbgd.Value = "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078"
	case ST_SlideLayoutTypeTbl:
		_dgbgd.Value = "\u0074\u0062\u006c"
	case ST_SlideLayoutTypeTxAndChart:
		_dgbgd.Value = "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074"
	case ST_SlideLayoutTypeChartAndTx:
		_dgbgd.Value = "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeDgm:
		_dgbgd.Value = "\u0064\u0067\u006d"
	case ST_SlideLayoutTypeChart:
		_dgbgd.Value = "\u0063\u0068\u0061r\u0074"
	case ST_SlideLayoutTypeTxAndClipArt:
		_dgbgd.Value = "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074"
	case ST_SlideLayoutTypeClipArtAndTx:
		_dgbgd.Value = "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeTitleOnly:
		_dgbgd.Value = "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy"
	case ST_SlideLayoutTypeBlank:
		_dgbgd.Value = "\u0062\u006c\u0061n\u006b"
	case ST_SlideLayoutTypeTxAndObj:
		_dgbgd.Value = "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjAndTx:
		_dgbgd.Value = "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeObjOnly:
		_dgbgd.Value = "\u006fb\u006a\u004f\u006e\u006c\u0079"
	case ST_SlideLayoutTypeObj:
		_dgbgd.Value = "\u006f\u0062\u006a"
	case ST_SlideLayoutTypeTxAndMedia:
		_dgbgd.Value = "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061"
	case ST_SlideLayoutTypeMediaAndTx:
		_dgbgd.Value = "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeObjOverTx:
		_dgbgd.Value = "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x"
	case ST_SlideLayoutTypeTxOverObj:
		_dgbgd.Value = "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j"
	case ST_SlideLayoutTypeTxAndTwoObj:
		_dgbgd.Value = "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeTwoObjAndTx:
		_dgbgd.Value = "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeTwoObjOverTx:
		_dgbgd.Value = "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078"
	case ST_SlideLayoutTypeFourObj:
		_dgbgd.Value = "\u0066o\u0075\u0072\u004f\u0062\u006a"
	case ST_SlideLayoutTypeVertTx:
		_dgbgd.Value = "\u0076\u0065\u0072\u0074\u0054\u0078"
	case ST_SlideLayoutTypeClipArtAndVertTx:
		_dgbgd.Value = "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078"
	case ST_SlideLayoutTypeVertTitleAndTx:
		_dgbgd.Value = "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeVertTitleAndTxOverChart:
		_dgbgd.Value = "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074"
	case ST_SlideLayoutTypeTwoObj:
		_dgbgd.Value = "\u0074\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjAndTwoObj:
		_dgbgd.Value = "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeTwoObjAndObj:
		_dgbgd.Value = "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a"
	case ST_SlideLayoutTypeCust:
		_dgbgd.Value = "\u0063\u0075\u0073\u0074"
	case ST_SlideLayoutTypeSecHead:
		_dgbgd.Value = "\u0073e\u0063\u0048\u0065\u0061\u0064"
	case ST_SlideLayoutTypeTwoTxTwoObj:
		_dgbgd.Value = "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjTx:
		_dgbgd.Value = "\u006f\u0062\u006aT\u0078"
	case ST_SlideLayoutTypePicTx:
		_dgbgd.Value = "\u0070\u0069\u0063T\u0078"
	}
	return _dgbgd, nil
}
func (_gbdac ST_TransitionInOutDirectionType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gbdac.String(), start)
}

type CT_TLTriggerRuntimeNode struct {

	// Value
	ValAttr ST_TLTriggerRuntimeNode
}

func (_cccd *CT_TLOleChartTargetElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cccd.TypeAttr = ST_TLChartSubelementType(1)
	for _, _ffeg := range start.Attr {
		if _ffeg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cccd.TypeAttr.UnmarshalXMLAttr(_ffeg)
			continue
		}
		if _ffeg.Name.Local == "\u006c\u0076\u006c" {
			_bcfec, _fcbed := _ag.ParseUint(_ffeg.Value, 10, 32)
			if _fcbed != nil {
				return _fcbed
			}
			_dgba := uint32(_bcfec)
			_cccd.LvlAttr = &_dgba
			continue
		}
	}
	for {
		_eaba, _efeef := d.Token()
		if _efeef != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0054\u0061\u0072g\u0065\u0074\u0045\u006c\u0065m\u0065\u006et\u003a\u0020\u0025\u0073", _efeef)
		}
		if _beagc, _deagc := _eaba.(_d.EndElement); _deagc && _beagc.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_OleObjectLink() *CT_OleObjectLink { _bfcef := &CT_OleObjectLink{}; return _bfcef }

type ST_PlaceholderSize byte

func ParseUnionST_Coordinate32(s string) (_c.ST_Coordinate32, error) {
	return _c.ParseUnionST_Coordinate32(s)
}
func (_febf *CT_InOutTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ffa := range start.Attr {
		if _ffa.Name.Local == "\u0064\u0069\u0072" {
			_febf.DirAttr.UnmarshalXMLAttr(_ffa)
			continue
		}
	}
	for {
		_ecce, _gcag := d.Token()
		if _gcag != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0049\u006e\u004f\u0075\u0074\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _gcag)
		}
		if _dcac, _eaeg := _ecce.(_d.EndElement); _eaeg && _dcac.Name == start.Name {
			break
		}
	}
	return nil
}
func (_abae *CT_Empty) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_cbbb, _bdf := d.Token()
		if _bdf != nil {
			return _b.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073", _bdf)
		}
		if _cbf, _bfe := _cbbb.(_d.EndElement); _bfe && _cbf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TLSubShapeId and its children
func (_bdbf *CT_TLSubShapeId) Validate() error {
	return _bdbf.ValidateWithPath("\u0043T\u005fT\u004c\u0053\u0075\u0062\u0053\u0068\u0061\u0070\u0065\u0049\u0064")
}

type CT_GuideList struct {

	// A Guide
	Guide []*CT_Guide
}
type ST_TransitionCornerDirectionType byte

func (_cadfa *ST_TLParaBuildType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cadfa = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_cadfa = 1
	case "\u0070":
		*_cadfa = 2
	case "\u0063\u0075\u0073\u0074":
		*_cadfa = 3
	case "\u0077\u0068\u006fl\u0065":
		*_cadfa = 4
	}
	return nil
}

// ValidateWithPath validates the CT_SlideMaster and its children, prefixing error messages with path
func (_cfcg *CT_SlideMaster) ValidateWithPath(path string) error {
	if _gbcdcg := _cfcg.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _gbcdcg != nil {
		return _gbcdcg
	}
	if _fagf := _cfcg.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _fagf != nil {
		return _fagf
	}
	if _cfcg.SldLayoutIdLst != nil {
		if _afag := _cfcg.SldLayoutIdLst.ValidateWithPath(path + "\u002fS\u006cd\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0073\u0074"); _afag != nil {
			return _afag
		}
	}
	if _cfcg.Transition != nil {
		if _defcb := _cfcg.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _defcb != nil {
			return _defcb
		}
	}
	if _cfcg.Timing != nil {
		if _fegga := _cfcg.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _fegga != nil {
			return _fegga
		}
	}
	if _cfcg.Hf != nil {
		if _ffbed := _cfcg.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _ffbed != nil {
			return _ffbed
		}
	}
	if _cfcg.TxStyles != nil {
		if _dfge := _cfcg.TxStyles.ValidateWithPath(path + "\u002fT\u0078\u0053\u0074\u0079\u006c\u0065s"); _dfge != nil {
			return _dfge
		}
	}
	if _cfcg.ExtLst != nil {
		if _cgbc := _cfcg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgbc != nil {
			return _cgbc
		}
	}
	return nil
}

type CT_ExtensionListModify struct {

	// Modify
	ModAttr *bool

	// Extension
	Ext []*CT_Extension
}
type CT_Extension struct {

	// Uniform Resource Identifier
	UriAttr string
	Any     []_ff.Any
}

func (_cgdea ST_SplitterBarState) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cgdea.String(), start)
}

type ST_TLBehaviorOverrideType byte

func NewCT_TLIterateData() *CT_TLIterateData { _eabc := &CT_TLIterateData{}; return _eabc }

// ValidateWithPath validates the CT_TLTimeTargetElement and its children, prefixing error messages with path
func (_bcccg *CT_TLTimeTargetElement) ValidateWithPath(path string) error {
	if _bcccg.SldTgt != nil {
		if _bbgdf := _bcccg.SldTgt.ValidateWithPath(path + "\u002fS\u006c\u0064\u0054\u0067\u0074"); _bbgdf != nil {
			return _bbgdf
		}
	}
	if _bcccg.SndTgt != nil {
		if _gffg := _bcccg.SndTgt.ValidateWithPath(path + "\u002fS\u006e\u0064\u0054\u0067\u0074"); _gffg != nil {
			return _gffg
		}
	}
	if _bcccg.SpTgt != nil {
		if _gdgeb := _bcccg.SpTgt.ValidateWithPath(path + "\u002f\u0053\u0070\u0054\u0067\u0074"); _gdgeb != nil {
			return _gdgeb
		}
	}
	if _bcccg.InkTgt != nil {
		if _aeaace := _bcccg.InkTgt.ValidateWithPath(path + "\u002fI\u006e\u006b\u0054\u0067\u0074"); _aeaace != nil {
			return _aeaace
		}
	}
	return nil
}
func (_ceda ST_TLAnimateBehaviorValueType) ValidateWithPath(path string) error {
	switch _ceda {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ceda))
	}
	return nil
}
func (_gcgbd *CT_OptionalBlackTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _aefcg := range start.Attr {
		if _aefcg.Name.Local == "\u0074h\u0072\u0075\u0042\u006c\u006b" {
			_afbcc, _adag := _ag.ParseBool(_aefcg.Value)
			if _adag != nil {
				return _adag
			}
			_gcgbd.ThruBlkAttr = &_afbcc
			continue
		}
	}
	for {
		_bgcad, _agdcb := d.Token()
		if _agdcb != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006c\u0042\u006c\u0061\u0063\u006bT\u0072\u0061\u006e\u0073\u0069t\u0069\u006fn\u003a\u0020\u0025\u0073", _agdcb)
		}
		if _bga, _fecf := _bgcad.(_d.EndElement); _fecf && _bga.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bcce *CT_TLTimeAnimateValue) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ffgg := range start.Attr {
		if _ffgg.Name.Local == "\u0074\u006d" {
			_fceee, _fdbfe := ParseUnionST_TLTimeAnimateValueTime(_ffgg.Value)
			if _fdbfe != nil {
				return _fdbfe
			}
			_bcce.TmAttr = &_fceee
			continue
		}
		if _ffgg.Name.Local == "\u0066\u006d\u006c\u0061" {
			_bbff, _dbcad := _ffgg.Value, error(nil)
			if _dbcad != nil {
				return _dbcad
			}
			_bcce.FmlaAttr = &_bbff
			continue
		}
	}
_fffba:
	for {
		_aaae, _fgag := d.Token()
		if _fgag != nil {
			return _fgag
		}
		switch _cddc := _aaae.(type) {
		case _d.StartElement:
			switch _cddc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0061\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}:
				_bcce.Val = NewCT_TLAnimVariant()
				if _agdfe := d.DecodeElement(_bcce.Val, &_cddc); _agdfe != nil {
					return _agdfe
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0020\u0025\u0076", _cddc.Name)
				if _dacf := d.Skip(); _dacf != nil {
					return _dacf
				}
			}
		case _d.EndElement:
			break _fffba
		case _d.CharData:
		}
	}
	return nil
}
func (_eadfa *CT_ConnectorNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eadfa.CNvPr = _c.NewCT_NonVisualDrawingProps()
	_eadfa.CNvCxnSpPr = _c.NewCT_NonVisualConnectorProperties()
	_eadfa.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_afdg:
	for {
		_feg, _adeb := d.Token()
		if _adeb != nil {
			return _adeb
		}
		switch _fbb := _feg.(type) {
		case _d.StartElement:
			switch _fbb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _egfd := d.DecodeElement(_eadfa.CNvPr, &_fbb); _egfd != nil {
					return _egfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _fba := d.DecodeElement(_eadfa.CNvCxnSpPr, &_fbb); _fba != nil {
					return _fba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _egbg := d.DecodeElement(_eadfa.NvPr, &_fbb); _egbg != nil {
					return _egbg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _fbb.Name)
				if _egc := d.Skip(); _egc != nil {
					return _egc
				}
			}
		case _d.EndElement:
			break _afdg
		case _d.CharData:
		}
	}
	return nil
}
func (_dgae *CT_SlideRelationshipList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dgae.Sld != nil {
		_cffg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073l\u0064"}}
		for _, _cffaa := range _dgae.Sld {
			e.EncodeElement(_cffaa, _cffg)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_adbgg *CT_ShapeNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_adbgg.CNvPr = _c.NewCT_NonVisualDrawingProps()
	_adbgg.CNvSpPr = _c.NewCT_NonVisualDrawingShapeProps()
	_adbgg.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_bbfd:
	for {
		_dfda, _bbacb := d.Token()
		if _bbacb != nil {
			return _bbacb
		}
		switch _bbeaa := _dfda.(type) {
		case _d.StartElement:
			switch _bbeaa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gcbeg := d.DecodeElement(_adbgg.CNvPr, &_bbeaa); _gcbeg != nil {
					return _gcbeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _cafffe := d.DecodeElement(_adbgg.CNvSpPr, &_bbeaa); _cafffe != nil {
					return _cafffe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _bccb := d.DecodeElement(_adbgg.NvPr, &_bbeaa); _bccb != nil {
					return _bccb
				}
			default:
				_be.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _bbeaa.Name)
				if _eefed := d.Skip(); _eefed != nil {
					return _eefed
				}
			}
		case _d.EndElement:
			break _bbfd
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TLAnimVariantBooleanVal() *CT_TLAnimVariantBooleanVal {
	_badaa := &CT_TLAnimVariantBooleanVal{}
	return _badaa
}
func (_dbgcf *CT_TLByRgbColorTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072"}, Value: _b.Sprintf("\u0025\u0076", _dbgcf.RAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067"}, Value: _b.Sprintf("\u0025\u0076", _dbgcf.GAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062"}, Value: _b.Sprintf("\u0025\u0076", _dbgcf.BAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_SlideLayoutType byte

// ValidateWithPath validates the CT_SplitTransition and its children, prefixing error messages with path
func (_gbbc *CT_SplitTransition) ValidateWithPath(path string) error {
	if _gaba := _gbbc.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _gaba != nil {
		return _gaba
	}
	if _bccfd := _gbbc.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _bccfd != nil {
		return _bccfd
	}
	return nil
}
func (_ecgdc *CT_OleObject) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ecgdc.ProgIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdc.ProgIdAttr)})
	}
	if _ecgdc.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdc.SpidAttr)})
	}
	if _ecgdc.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdc.NameAttr)})
	}
	if _ecgdc.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ecgdc.ShowAsIconAttr))})
	}
	if _ecgdc.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdc.IdAttr)})
	}
	if _ecgdc.ImgWAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdc.ImgWAttr)})
	}
	if _ecgdc.ImgHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _b.Sprintf("\u0025\u0076", *_ecgdc.ImgHAttr)})
	}
	e.EncodeToken(start)
	_ecgdc.Choice.MarshalXML(e, _d.StartElement{})
	if _ecgdc.Pic != nil {
		_dcde := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_ecgdc.Pic, _dcde)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLTimeNodeFillTypeUnset      ST_TLTimeNodeFillType = 0
	ST_TLTimeNodeFillTypeRemove     ST_TLTimeNodeFillType = 1
	ST_TLTimeNodeFillTypeFreeze     ST_TLTimeNodeFillType = 2
	ST_TLTimeNodeFillTypeHold       ST_TLTimeNodeFillType = 3
	ST_TLTimeNodeFillTypeTransition ST_TLTimeNodeFillType = 4
)

func (_dcace ST_OleObjectFollowColorScheme) Validate() error { return _dcace.ValidateWithPath("") }
func (_ccfb *CT_TLTriggerTimeNodeID) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dgeae := range start.Attr {
		if _dgeae.Name.Local == "\u0076\u0061\u006c" {
			_dfdb, _fbgbd := _ag.ParseUint(_dgeae.Value, 10, 32)
			if _fbgbd != nil {
				return _fbgbd
			}
			_ccfb.ValAttr = uint32(_dfdb)
			continue
		}
	}
	for {
		_eaae, _fagfg := d.Token()
		if _fagfg != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0054r\u0069g\u0067e\u0072T\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0049\u0044\u003a\u0020\u0025\u0073", _fagfg)
		}
		if _eaffc, _aabfb := _eaae.(_d.EndElement); _aabfb && _eaffc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gbdfa ST_TLBehaviorAccumulateType) Validate() error { return _gbdfa.ValidateWithPath("") }

// ValidateWithPath validates the CT_SlideSorterViewProperties and its children, prefixing error messages with path
func (_egeff *CT_SlideSorterViewProperties) ValidateWithPath(path string) error {
	if _abbd := _egeff.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _abbd != nil {
		return _abbd
	}
	if _egeff.ExtLst != nil {
		if _afeb := _egeff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afeb != nil {
			return _afeb
		}
	}
	return nil
}

// ValidateWithPath validates the SldSyncPr and its children, prefixing error messages with path
func (_eafad *SldSyncPr) ValidateWithPath(path string) error {
	if _gceaga := _eafad.CT_SlideSyncProperties.ValidateWithPath(path); _gceaga != nil {
		return _gceaga
	}
	return nil
}
func (_fdcee *CT_TLIterateData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dgcb := range start.Attr {
		if _dgcb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fdcee.TypeAttr.UnmarshalXMLAttr(_dgcb)
			continue
		}
		if _dgcb.Name.Local == "\u0062a\u0063\u006b\u0077\u0061\u0072\u0064s" {
			_cgfbb, _cceec := _ag.ParseBool(_dgcb.Value)
			if _cceec != nil {
				return _cceec
			}
			_fdcee.BackwardsAttr = &_cgfbb
			continue
		}
	}
_eeagb:
	for {
		_cgefa, _ggagg := d.Token()
		if _ggagg != nil {
			return _ggagg
		}
		switch _begeg := _cgefa.(type) {
		case _d.StartElement:
			switch _begeg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}:
				_fdcee.TmAbs = NewCT_TLIterateIntervalTime()
				if _dbed := d.DecodeElement(_fdcee.TmAbs, &_begeg); _dbed != nil {
					return _dbed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}:
				_fdcee.TmPct = NewCT_TLIterateIntervalPercentage()
				if _edbcde := d.DecodeElement(_fdcee.TmPct, &_begeg); _edbcde != nil {
					return _edbcde
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061\u0020\u0025v", _begeg.Name)
				if _bcfee := d.Skip(); _bcfee != nil {
					return _bcfee
				}
			}
		case _d.EndElement:
			break _eeagb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLBuildDiagram and its children, prefixing error messages with path
func (_egbcg *CT_TLBuildDiagram) ValidateWithPath(path string) error {
	if _dgac := _egbcg.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _dgac != nil {
		return _dgac
	}
	return nil
}
func NewCT_TLTimeNodeExclusive() *CT_TLTimeNodeExclusive {
	_cbge := &CT_TLTimeNodeExclusive{}
	_cbge.CTn = NewCT_TLCommonTimeNodeData()
	return _cbge
}

// Validate validates the CT_CommentAuthorList and its children
func (_feae *CT_CommentAuthorList) Validate() error {
	return _feae.ValidateWithPath("C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041u\u0074\u0068\u006f\u0072Li\u0073\u0074")
}

type CT_TLIterateData struct {

	// Iterate Type
	TypeAttr ST_IterateType

	// Backwards
	BackwardsAttr *bool

	// Time Absolute
	TmAbs *CT_TLIterateIntervalTime

	// Time Percentage
	TmPct *CT_TLIterateIntervalPercentage
}

// ValidateWithPath validates the CmAuthorLst and its children, prefixing error messages with path
func (_cfcbd *CmAuthorLst) ValidateWithPath(path string) error {
	if _ccfgg := _cfcbd.CT_CommentAuthorList.ValidateWithPath(path); _ccfgg != nil {
		return _ccfgg
	}
	return nil
}
func (_fbcag *CT_WebProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbcag.ShowAnimationAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_fbcag.ShowAnimationAttr))})
	}
	if _fbcag.ResizeGraphicsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0065\u0073\u0069\u007a\u0065\u0047\u0072\u0061p\u0068\u0069\u0063\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_fbcag.ResizeGraphicsAttr))})
	}
	if _fbcag.AllowPngAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_fbcag.AllowPngAttr))})
	}
	if _fbcag.RelyOnVmlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072e\u006c\u0079\u004f\u006e\u0056\u006dl"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_fbcag.RelyOnVmlAttr))})
	}
	if _fbcag.OrganizeInFoldersAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0065\u0049\u006e\u0046\u006fl\u0064\u0065\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_fbcag.OrganizeInFoldersAttr))})
	}
	if _fbcag.UseLongFilenamesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0073e\u004c\u006f\u006eg\u0046\u0069\u006c\u0065\u006e\u0061\u006d\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_fbcag.UseLongFilenamesAttr))})
	}
	if _fbcag.ImgSzAttr != ST_WebScreenSizeUnset {
		_dcgde, _fcgee := _fbcag.ImgSzAttr.MarshalXMLAttr(_d.Name{Local: "\u0069\u006d\u0067S\u007a"})
		if _fcgee != nil {
			return _fcgee
		}
		start.Attr = append(start.Attr, _dcgde)
	}
	if _fbcag.EncodingAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0076", *_fbcag.EncodingAttr)})
	}
	if _fbcag.ClrAttr != ST_WebColorTypeUnset {
		_dggbc, _dgebg := _fbcag.ClrAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u006c\u0072"})
		if _dgebg != nil {
			return _dgebg
		}
		start.Attr = append(start.Attr, _dggbc)
	}
	e.EncodeToken(start)
	if _fbcag.ExtLst != nil {
		_aadab := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbcag.ExtLst, _aadab)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_HandoutMasterIdListEntry and its children, prefixing error messages with path
func (_bfee *CT_HandoutMasterIdListEntry) ValidateWithPath(path string) error {
	if _bfee.ExtLst != nil {
		if _fefg := _bfee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fefg != nil {
			return _fefg
		}
	}
	return nil
}
func (_fafg ST_PlaceholderType) ValidateWithPath(path string) error {
	switch _fafg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fafg))
	}
	return nil
}

type CT_NotesTextViewProperties struct {

	// Base properties for Notes View
	CViewPr *CT_CommonViewProperties
	ExtLst  *CT_ExtensionList
}

// Validate validates the CT_TLShapeTargetElement and its children
func (_fdafe *CT_TLShapeTargetElement) Validate() error {
	return _fdafe.ValidateWithPath("\u0043\u0054\u005fTL\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}
func (_abff ST_TLTriggerRuntimeNode) String() string {
	switch _abff {
	case 0:
		return ""
	case 1:
		return "\u0066\u0069\u0072s\u0074"
	case 2:
		return "\u006c\u0061\u0073\u0074"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}
func (_gfgeb *Notes) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u006e\u006f\u0074\u0065\u0073"
	return _gfgeb.CT_NotesSlide.MarshalXML(e, start)
}
func (_bddfaa *ST_TLTimeAnimateValueTime) Validate() error { return _bddfaa.ValidateWithPath("") }
func (_bfddb ST_TLAnimateMotionPathEditMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bfddb.String(), start)
}
func (_fcddg *CT_TagList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fcddg.Tag != nil {
		_cffe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074a\u0067"}}
		for _, _gecc := range _fcddg.Tag {
			e.EncodeElement(_gecc, _cffe)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_ChildSlide struct {

	// Color Scheme Map Override
	ClrMapOvr *_c.CT_ColorMappingOverride
}

func (_bcdf *CT_SlideLayoutIdListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bcdf.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bcdf.IdAttr)})
	}
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bcdf.RIdAttr)})
	e.EncodeToken(start)
	if _bcdf.ExtLst != nil {
		_egcgc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bcdf.ExtLst, _egcgc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gdbgg ST_TLTimeNodeSyncType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_caacf := _d.Attr{}
	_caacf.Name = name
	switch _gdbgg {
	case ST_TLTimeNodeSyncTypeUnset:
		_caacf.Value = ""
	case ST_TLTimeNodeSyncTypeCanSlip:
		_caacf.Value = "\u0063a\u006e\u0053\u006c\u0069\u0070"
	case ST_TLTimeNodeSyncTypeLocked:
		_caacf.Value = "\u006c\u006f\u0063\u006b\u0065\u0064"
	}
	return _caacf, nil
}
func (_bdac *ST_PrintColorMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bdac = 0
	case "\u0062\u0077":
		*_bdac = 1
	case "\u0067\u0072\u0061\u0079":
		*_bdac = 2
	case "\u0063\u006c\u0072":
		*_bdac = 3
	}
	return nil
}

// Validate validates the CT_TLTimeNodeParallel and its children
func (_cfcbfd *CT_TLTimeNodeParallel) Validate() error {
	return _cfcbfd.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0050a\u0072\u0061\u006c\u006c\u0065\u006c")
}

// Validate validates the CT_Slide and its children
func (_gfac *CT_Slide) Validate() error {
	return _gfac.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065")
}

// Validate validates the CT_CustomShowList and its children
func (_edb *CT_CustomShowList) Validate() error {
	return _edb.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006fw\u004c\u0069\u0073\u0074")
}

type CT_Guide struct {

	// Guide Orientation
	OrientAttr ST_Direction

	// Guide Position
	PosAttr *_c.ST_Coordinate32
}

func (_dcgdb *CT_TLTimeAnimateValueList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_babacb:
	for {
		_gbfba, _bcgd := d.Token()
		if _bcgd != nil {
			return _bcgd
		}
		switch _afbcb := _gbfba.(type) {
		case _d.StartElement:
			switch _afbcb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0076"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0076"}:
				_dfadd := NewCT_TLTimeAnimateValue()
				if _ebgfg := d.DecodeElement(_dfadd, &_afbcb); _ebgfg != nil {
					return _ebgfg
				}
				_dcgdb.Tav = append(_dcgdb.Tav, _dfadd)
			default:
				_be.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0041\u006ei\u006da\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u004ci\u0073t\u0020\u0025v", _afbcb.Name)
				if _aaec := d.Skip(); _aaec != nil {
					return _aaec
				}
			}
		case _d.EndElement:
			break _babacb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Slide and its children, prefixing error messages with path
func (_bedac *CT_Slide) ValidateWithPath(path string) error {
	if _eaff := _bedac.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _eaff != nil {
		return _eaff
	}
	if _bedac.ClrMapOvr != nil {
		if _beeb := _bedac.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _beeb != nil {
			return _beeb
		}
	}
	if _bedac.Transition != nil {
		if _aabg := _bedac.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _aabg != nil {
			return _aabg
		}
	}
	if _bedac.Timing != nil {
		if _aabbb := _bedac.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _aabbb != nil {
			return _aabbb
		}
	}
	if _bedac.ExtLst != nil {
		if _febe := _bedac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _febe != nil {
			return _febe
		}
	}
	return nil
}
func (_cbfdf ST_TLTriggerEvent) String() string {
	switch _cbfdf {
	case 0:
		return ""
	case 1:
		return "\u006fn\u0042\u0065\u0067\u0069\u006e"
	case 2:
		return "\u006f\u006e\u0045n\u0064"
	case 3:
		return "\u0062\u0065\u0067i\u006e"
	case 4:
		return "\u0065\u006e\u0064"
	case 5:
		return "\u006fn\u0043\u006c\u0069\u0063\u006b"
	case 6:
		return "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b"
	case 7:
		return "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"
	case 8:
		return "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074"
	case 9:
		return "\u006f\u006e\u004e\u0065\u0078\u0074"
	case 10:
		return "\u006f\u006e\u0050\u0072\u0065\u0076"
	case 11:
		return "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f"
	}
	return ""
}

// Validate validates the CT_SlideTransition and its children
func (_eggbf *CT_SlideTransition) Validate() error {
	return _eggbf.ValidateWithPath("\u0043T\u005fS\u006c\u0069\u0064\u0065\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

// Validate validates the ViewPr and its children
func (_baga *ViewPr) Validate() error {
	return _baga.ValidateWithPath("\u0056\u0069\u0065\u0077\u0050\u0072")
}
func (_baeg *CT_PictureNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_accd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_baeg.CNvPr, _accd)
	_cgeg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_baeg.CNvPicPr, _cgeg)
	_dcedb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_baeg.NvPr, _dcedb)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ebdad *CT_TLSubShapeId) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _ebdad.SpidAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CommentAuthorList and its children, prefixing error messages with path
func (_gdaf *CT_CommentAuthorList) ValidateWithPath(path string) error {
	for _dee, _bfgg := range _gdaf.CmAuthor {
		if _bbee := _bfgg.ValidateWithPath(_b.Sprintf("\u0025s\u002fC\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u005b\u0025\u0064\u005d", path, _dee)); _bbee != nil {
			return _bbee
		}
	}
	return nil
}
func NewCT_OleObject() *CT_OleObject {
	_dgfe := &CT_OleObject{}
	_dgfe.Choice = NewCT_OleObjectChoice()
	return _dgfe
}

type CT_SlideTransitionChoice struct {
	Blinds    *CT_OrientationTransition
	Checker   *CT_OrientationTransition
	Circle    *CT_Empty
	Dissolve  *CT_Empty
	Comb      *CT_OrientationTransition
	Cover     *CT_EightDirectionTransition
	Cut       *CT_OptionalBlackTransition
	Diamond   *CT_Empty
	Fade      *CT_OptionalBlackTransition
	Newsflash *CT_Empty
	Plus      *CT_Empty
	Pull      *CT_EightDirectionTransition
	Push      *CT_SideDirectionTransition
	Random    *CT_Empty
	RandomBar *CT_OrientationTransition
	Split     *CT_SplitTransition
	Strips    *CT_CornerDirectionTransition
	Wedge     *CT_Empty
	Wheel     *CT_WheelTransition
	Wipe      *CT_SideDirectionTransition
	Zoom      *CT_InOutTransition
}

// ValidateWithPath validates the CT_SlideRelationshipListEntry and its children, prefixing error messages with path
func (_adfga *CT_SlideRelationshipListEntry) ValidateWithPath(path string) error { return nil }
func (_ccefe *CT_PresentationProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gcdacc:
	for {
		_adcbe, _gbbdg := d.Token()
		if _gbbdg != nil {
			return _gbbdg
		}
		switch _bdbc := _adcbe.(type) {
		case _d.StartElement:
			switch _bdbc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}:
				_ccefe.HtmlPubPr = NewCT_HtmlPublishProperties()
				if _baege := d.DecodeElement(_ccefe.HtmlPubPr, &_bdbc); _baege != nil {
					return _baege
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_ccefe.WebPr = NewCT_WebProperties()
				if _bfcf := d.DecodeElement(_ccefe.WebPr, &_bdbc); _bfcf != nil {
					return _bfcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}:
				_ccefe.PrnPr = NewCT_PrintProperties()
				if _fgecb := d.DecodeElement(_ccefe.PrnPr, &_bdbc); _fgecb != nil {
					return _fgecb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}:
				_ccefe.ShowPr = NewCT_ShowProperties()
				if _gfga := d.DecodeElement(_ccefe.ShowPr, &_bdbc); _gfga != nil {
					return _gfga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}:
				_ccefe.ClrMru = _c.NewCT_ColorMRU()
				if _bccf := d.DecodeElement(_ccefe.ClrMru, &_bdbc); _bccf != nil {
					return _bccf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccefe.ExtLst = NewCT_ExtensionList()
				if _fdgc := d.DecodeElement(_ccefe.ExtLst, &_bdbc); _fdgc != nil {
					return _fdgc
				}
			default:
				_be.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061t\u0069o\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065s\u0020\u0025v", _bdbc.Name)
				if _ffdf := d.Skip(); _ffdf != nil {
					return _ffdf
				}
			}
		case _d.EndElement:
			break _gcdacc
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the Sld and its children, prefixing error messages with path
func (_eacdb *Sld) ValidateWithPath(path string) error {
	if _fcdeb := _eacdb.CT_Slide.ValidateWithPath(path); _fcdeb != nil {
		return _fcdeb
	}
	return nil
}

type CT_NotesMasterIdListEntry struct {
	IdAttr string
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_TLMediaNodeVideo and its children
func (_bfba *CT_TLMediaNodeVideo) Validate() error {
	return _bfba.ValidateWithPath("\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0056\u0069\u0064\u0065\u006f")
}

// ValidateWithPath validates the CT_SlideSize and its children, prefixing error messages with path
func (_baeb *CT_SlideSize) ValidateWithPath(path string) error {
	if _baeb.CxAttr < 914400 {
		return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0039\u0031\u0034\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _baeb.CxAttr)
	}
	if _baeb.CxAttr > 51206400 {
		return _b.Errorf("\u0025\u0073\u002f\u006d\u002eC\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _baeb.CxAttr)
	}
	if _baeb.CxAttr < 0 {
		return _b.Errorf("\u0025\u0073\u002fm.\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _baeb.CxAttr)
	}
	if _baeb.CyAttr < 914400 {
		return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0039\u0031\u0034\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _baeb.CyAttr)
	}
	if _baeb.CyAttr > 51206400 {
		return _b.Errorf("\u0025\u0073\u002f\u006d\u002eC\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _baeb.CyAttr)
	}
	if _baeb.CyAttr < 0 {
		return _b.Errorf("\u0025\u0073\u002fm.\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _baeb.CyAttr)
	}
	if _efgeef := _baeb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _efgeef != nil {
		return _efgeef
	}
	return nil
}

// ValidateWithPath validates the CT_TagList and its children, prefixing error messages with path
func (_ebfce *CT_TagList) ValidateWithPath(path string) error {
	for _cceeb, _addc := range _ebfce.Tag {
		if _cceg := _addc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0067\u005b\u0025\u0064\u005d", path, _cceeb)); _cceg != nil {
			return _cceg
		}
	}
	return nil
}
func (_dafg ST_TLBehaviorTransformType) String() string {
	switch _dafg {
	case 0:
		return ""
	case 1:
		return "\u0070\u0074"
	case 2:
		return "\u0069\u006d\u0067"
	}
	return ""
}

// ValidateWithPath validates the CT_CommonSlideData and its children, prefixing error messages with path
func (_afd *CT_CommonSlideData) ValidateWithPath(path string) error {
	if _afd.Bg != nil {
		if _agggg := _afd.Bg.ValidateWithPath(path + "\u002f\u0042\u0067"); _agggg != nil {
			return _agggg
		}
	}
	if _abbc := _afd.SpTree.ValidateWithPath(path + "\u002fS\u0070\u0054\u0072\u0065\u0065"); _abbc != nil {
		return _abbc
	}
	if _afd.CustDataLst != nil {
		if _bged := _afd.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _bged != nil {
			return _bged
		}
	}
	if _afd.Controls != nil {
		if _efef := _afd.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _efef != nil {
			return _efef
		}
	}
	if _afd.ExtLst != nil {
		if _gdg := _afd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdg != nil {
			return _gdg
		}
	}
	return nil
}
func (_ecae *CT_OrientationTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gaac := range start.Attr {
		if _gaac.Name.Local == "\u0064\u0069\u0072" {
			_ecae.DirAttr.UnmarshalXMLAttr(_gaac)
			continue
		}
	}
	for {
		_gabfd, _cfca := d.Token()
		if _cfca != nil {
			return _b.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004frie\u006eta\u0074\u0069\u006f\u006e\u0054\u0072\u0061ns\u0069\u0074\u0069\u006f\u006e\u003a\u0020%\u0073", _cfca)
		}
		if _bbabcb, _bcgc := _gabfd.(_d.EndElement); _bcgc && _bbabcb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dcbec *CT_TLByHslColorTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068"}, Value: _b.Sprintf("\u0025\u0076", _dcbec.HAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073"}, Value: _b.Sprintf("\u0025\u0076", _dcbec.SAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c"}, Value: _b.Sprintf("\u0025\u0076", _dcbec.LAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OleObjectEmbed and its children
func (_ebec *CT_OleObjectEmbed) Validate() error {
	return _ebec.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074E\u006d\u0062\u0065\u0064")
}
func (_gcafc ST_PlaceholderSize) Validate() error { return _gcafc.ValidateWithPath("") }
func (_bacdc *CT_TimeNodeList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bacdc.Par != nil {
		_aafed := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070a\u0072"}}
		for _, _ddca := range _bacdc.Par {
			e.EncodeElement(_ddca, _aafed)
		}
	}
	if _bacdc.Seq != nil {
		_fdbbgb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073e\u0071"}}
		for _, _fbac := range _bacdc.Seq {
			e.EncodeElement(_fbac, _fdbbgb)
		}
	}
	if _bacdc.Excl != nil {
		_gcdeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0063\u006c"}}
		for _, _gdfc := range _bacdc.Excl {
			e.EncodeElement(_gdfc, _gcdeb)
		}
	}
	if _bacdc.Anim != nil {
		_gbgg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0061\u006e\u0069\u006d"}}
		for _, _abgb := range _bacdc.Anim {
			e.EncodeElement(_abgb, _gbgg)
		}
	}
	if _bacdc.AnimClr != nil {
		_gfefc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0061\u006e\u0069\u006d\u0043\u006cr"}}
		for _, _egfb := range _bacdc.AnimClr {
			e.EncodeElement(_egfb, _gfefc)
		}
	}
	if _bacdc.AnimEffect != nil {
		_bdecd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0061n\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}}
		for _, _gagf := range _bacdc.AnimEffect {
			e.EncodeElement(_gagf, _bdecd)
		}
	}
	if _bacdc.AnimMotion != nil {
		_gcff := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0061n\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}}
		for _, _aefb := range _bacdc.AnimMotion {
			e.EncodeElement(_aefb, _gcff)
		}
	}
	if _bacdc.AnimRot != nil {
		_bceb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0061\u006e\u0069\u006d\u0052\u006ft"}}
		for _, _gbggf := range _bacdc.AnimRot {
			e.EncodeElement(_gbggf, _bceb)
		}
	}
	if _bacdc.AnimScale != nil {
		_egfae := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0061\u006e\u0069\u006d\u0053\u0063\u0061\u006c\u0065"}}
		for _, _efecb := range _bacdc.AnimScale {
			e.EncodeElement(_efecb, _egfae)
		}
	}
	if _bacdc.Cmd != nil {
		_dcaca := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063m\u0064"}}
		for _, _fdea := range _bacdc.Cmd {
			e.EncodeElement(_fdea, _dcaca)
		}
	}
	if _bacdc.Set != nil {
		_gabfb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073e\u0074"}}
		for _, _cfece := range _bacdc.Set {
			e.EncodeElement(_cfece, _gabfb)
		}
	}
	if _bacdc.Audio != nil {
		_dfgbd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0061\u0075\u0064\u0069\u006f"}}
		for _, _ddba := range _bacdc.Audio {
			e.EncodeElement(_ddba, _dfgbd)
		}
	}
	if _bacdc.Video != nil {
		_fddb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0076\u0069\u0064\u0065\u006f"}}
		for _, _ecdde := range _bacdc.Video {
			e.EncodeElement(_ecdde, _fddb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLTimeCondition() *CT_TLTimeCondition { _cacf := &CT_TLTimeCondition{}; return _cacf }
func (_fbbcg ST_Direction) String() string {
	switch _fbbcg {
	case 0:
		return ""
	case 1:
		return "\u0068\u006f\u0072\u007a"
	case 2:
		return "\u0076\u0065\u0072\u0074"
	}
	return ""
}
func (_eegga ST_TLAnimateColorDirection) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gaabb := _d.Attr{}
	_gaabb.Name = name
	switch _eegga {
	case ST_TLAnimateColorDirectionUnset:
		_gaabb.Value = ""
	case ST_TLAnimateColorDirectionCw:
		_gaabb.Value = "\u0063\u0077"
	case ST_TLAnimateColorDirectionCcw:
		_gaabb.Value = "\u0063\u0063\u0077"
	}
	return _gaabb, nil
}

type ST_TLTimeNodeRestartType byte

func (_edc *CT_CommentAuthorList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _edc.CmAuthor != nil {
		_cfd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}}
		for _, _gded := range _edc.CmAuthor {
			e.EncodeElement(_gded, _cfd)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_Rel() *CT_Rel { _aagf := &CT_Rel{}; return _aagf }

// Validate validates the CT_PhotoAlbum and its children
func (_eaa *CT_PhotoAlbum) Validate() error {
	return _eaa.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d")
}
func (_cadd *CT_TagsData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dgcc := range start.Attr {
		if _dgcc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dgcc.Name.Local == "\u0069\u0064" || _dgcc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dgcc.Name.Local == "\u0069\u0064" {
			_effgb, _ededg := _dgcc.Value, error(nil)
			if _ededg != nil {
				return _ededg
			}
			_cadd.IdAttr = _effgb
			continue
		}
	}
	for {
		_cbedaf, _ebace := d.Token()
		if _ebace != nil {
			return _b.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061\u003a\u0020\u0025\u0073", _ebace)
		}
		if _faecc, _dddfa := _cbedaf.(_d.EndElement); _dddfa && _faecc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdec *CT_Kinsoku) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bdec.LangAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0061\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0076", *_bdec.LangAttr)})
	}
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006e\u0076a\u006c\u0053\u0074\u0043\u0068\u0061\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0076", _bdec.InvalStCharsAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006e\u0076\u0061\u006c\u0045\u006e\u0064\u0043\u0068\u0061\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0076", _bdec.InvalEndCharsAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLCommandTypeUnset ST_TLCommandType = 0
	ST_TLCommandTypeEvt   ST_TLCommandType = 1
	ST_TLCommandTypeCall  ST_TLCommandType = 2
	ST_TLCommandTypeVerb  ST_TLCommandType = 3
)

func (_bdda *CT_Comment) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064"}, Value: _b.Sprintf("\u0025\u0076", _bdda.AuthorIdAttr)})
	if _bdda.DtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_bdda.DtAttr)})
	}
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064\u0078"}, Value: _b.Sprintf("\u0025\u0076", _bdda.IdxAttr)})
	e.EncodeToken(start)
	_gcda := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070o\u0073"}}
	e.EncodeElement(_bdda.Pos, _gcda)
	_age := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0065\u0078\u0074"}}
	_ff.AddPreserveSpaceAttr(&_age, _bdda.Text)
	e.EncodeElement(_bdda.Text, _age)
	if _bdda.ExtLst != nil {
		_aaef := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bdda.ExtLst, _aaef)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewEG_ExtensionList() *EG_ExtensionList { _eccdac := &EG_ExtensionList{}; return _eccdac }
func (_dga *CT_CommentAuthorList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bac:
	for {
		_dag, _bgg := d.Token()
		if _bgg != nil {
			return _bgg
		}
		switch _deg := _dag.(type) {
		case _d.StartElement:
			switch _deg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}:
				_cdcf := NewCT_CommentAuthor()
				if _dgeb := d.DecodeElement(_cdcf, &_deg); _dgeb != nil {
					return _dgeb
				}
				_dga.CmAuthor = append(_dga.CmAuthor, _cdcf)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _deg.Name)
				if _bafe := d.Skip(); _bafe != nil {
					return _bafe
				}
			}
		case _d.EndElement:
			break _bac
		case _d.CharData:
		}
	}
	return nil
}
func (_fdbeb ST_TLCommandType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ebggfa := _d.Attr{}
	_ebggfa.Name = name
	switch _fdbeb {
	case ST_TLCommandTypeUnset:
		_ebggfa.Value = ""
	case ST_TLCommandTypeEvt:
		_ebggfa.Value = "\u0065\u0076\u0074"
	case ST_TLCommandTypeCall:
		_ebggfa.Value = "\u0063\u0061\u006c\u006c"
	case ST_TLCommandTypeVerb:
		_ebggfa.Value = "\u0076\u0065\u0072\u0062"
	}
	return _ebggfa, nil
}

// ValidateWithPath validates the CT_ViewProperties and its children, prefixing error messages with path
func (_bgaab *CT_ViewProperties) ValidateWithPath(path string) error {
	if _edeec := _bgaab.LastViewAttr.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0056\u0069\u0065\u0077\u0041\u0074\u0074\u0072"); _edeec != nil {
		return _edeec
	}
	if _bgaab.NormalViewPr != nil {
		if _dbbbfg := _bgaab.NormalViewPr.ValidateWithPath(path + "\u002f\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"); _dbbbfg != nil {
			return _dbbbfg
		}
	}
	if _bgaab.SlideViewPr != nil {
		if _aafge := _bgaab.SlideViewPr.ValidateWithPath(path + "\u002f\u0053\u006ci\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"); _aafge != nil {
			return _aafge
		}
	}
	if _bgaab.OutlineViewPr != nil {
		if _ecbd := _bgaab.OutlineViewPr.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056i\u0065\u0077\u0050\u0072"); _ecbd != nil {
			return _ecbd
		}
	}
	if _bgaab.NotesTextViewPr != nil {
		if _fcdg := _bgaab.NotesTextViewPr.ValidateWithPath(path + "\u002f\u004eo\u0074\u0065\u0073T\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"); _fcdg != nil {
			return _fcdg
		}
	}
	if _bgaab.SorterViewPr != nil {
		if _gbdee := _bgaab.SorterViewPr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"); _gbdee != nil {
			return _gbdee
		}
	}
	if _bgaab.NotesViewPr != nil {
		if _dgdcc := _bgaab.NotesViewPr.ValidateWithPath(path + "\u002f\u004e\u006ft\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"); _dgdcc != nil {
			return _dgdcc
		}
	}
	if _bgaab.GridSpacing != nil {
		if _afcae := _bgaab.GridSpacing.ValidateWithPath(path + "\u002f\u0047\u0072i\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"); _afcae != nil {
			return _afcae
		}
	}
	if _bgaab.ExtLst != nil {
		if _gfdfg := _bgaab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfdfg != nil {
			return _gfdfg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideLayout and its children, prefixing error messages with path
func (_ebfcb *CT_SlideLayout) ValidateWithPath(path string) error {
	if _ebdd := _ebfcb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ebdd != nil {
		return _ebdd
	}
	if _afda := _ebfcb.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _afda != nil {
		return _afda
	}
	if _ebfcb.ClrMapOvr != nil {
		if _agca := _ebfcb.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _agca != nil {
			return _agca
		}
	}
	if _ebfcb.Transition != nil {
		if _adae := _ebfcb.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _adae != nil {
			return _adae
		}
	}
	if _ebfcb.Timing != nil {
		if _fbef := _ebfcb.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _fbef != nil {
			return _fbef
		}
	}
	if _ebfcb.Hf != nil {
		if _aefcf := _ebfcb.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _aefcf != nil {
			return _aefcf
		}
	}
	if _ebfcb.ExtLst != nil {
		if _efcfb := _ebfcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efcfb != nil {
			return _efcfb
		}
	}
	return nil
}
func (_agad *CT_GroupShapeChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _agad.Sp != nil {
		_cgbf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0070"}}
		for _, _ggbe := range _agad.Sp {
			e.EncodeElement(_ggbe, _cgbf)
		}
	}
	if _agad.GrpSp != nil {
		_fegg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0067\u0072\u0070\u0053\u0070"}}
		for _, _gddeg := range _agad.GrpSp {
			e.EncodeElement(_gddeg, _fegg)
		}
	}
	if _agad.GraphicFrame != nil {
		_fgc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065"}}
		for _, _beeg := range _agad.GraphicFrame {
			e.EncodeElement(_beeg, _fgc)
		}
	}
	if _agad.CxnSp != nil {
		_aabf := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0078\u006e\u0053\u0070"}}
		for _, _def := range _agad.CxnSp {
			e.EncodeElement(_def, _aabf)
		}
	}
	if _agad.Pic != nil {
		_egdc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		for _, _caac := range _agad.Pic {
			e.EncodeElement(_caac, _egdc)
		}
	}
	if _agad.ContentPart != nil {
		_gffb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}}
		for _, _fbfc := range _agad.ContentPart {
			e.EncodeElement(_fbfc, _gffb)
		}
	}
	return nil
}
func NewCT_TLSubShapeId() *CT_TLSubShapeId { _bbefa := &CT_TLSubShapeId{}; return _bbefa }
func NewSld() *Sld                         { _geecd := &Sld{}; _geecd.CT_Slide = *NewCT_Slide(); return _geecd }

const (
	ST_TLAnimateMotionBehaviorOriginUnset  ST_TLAnimateMotionBehaviorOrigin = 0
	ST_TLAnimateMotionBehaviorOriginParent ST_TLAnimateMotionBehaviorOrigin = 1
	ST_TLAnimateMotionBehaviorOriginLayout ST_TLAnimateMotionBehaviorOrigin = 2
)

type ST_TLAnimateMotionBehaviorOrigin byte

func (_ecdcc *ST_TLBehaviorAccumulateType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ecdcc = 0
	case "\u006e\u006f\u006e\u0065":
		*_ecdcc = 1
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_ecdcc = 2
	}
	return nil
}

// ValidateWithPath validates the CT_TLIterateData and its children, prefixing error messages with path
func (_bdefd *CT_TLIterateData) ValidateWithPath(path string) error {
	if _ecfad := _bdefd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ecfad != nil {
		return _ecfad
	}
	if _bdefd.TmAbs != nil {
		if _fgbb := _bdefd.TmAbs.ValidateWithPath(path + "\u002f\u0054\u006d\u0041\u0062\u0073"); _fgbb != nil {
			return _fgbb
		}
	}
	if _bdefd.TmPct != nil {
		if _eeged := _bdefd.TmPct.ValidateWithPath(path + "\u002f\u0054\u006d\u0050\u0063\u0074"); _eeged != nil {
			return _eeged
		}
	}
	return nil
}

const (
	ST_PrintColorModeUnset ST_PrintColorMode = 0
	ST_PrintColorModeBw    ST_PrintColorMode = 1
	ST_PrintColorModeGray  ST_PrintColorMode = 2
	ST_PrintColorModeClr   ST_PrintColorMode = 3
)

// Validate validates the CT_TLTimeAnimateValue and its children
func (_faccd *CT_TLTimeAnimateValue) Validate() error {
	return _faccd.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u0041\u006e\u0069\u006d\u0061t\u0065\u0056\u0061\u006c\u0075\u0065")
}

const (
	ST_IterateTypeUnset ST_IterateType = 0
	ST_IterateTypeEl    ST_IterateType = 1
	ST_IterateTypeWd    ST_IterateType = 2
	ST_IterateTypeLt    ST_IterateType = 3
)

type CT_SlideLayoutIdListEntry struct {

	// ID Tag
	IdAttr  *uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

// ValidateWithPath validates the CT_GraphicalObjectFrame and its children, prefixing error messages with path
func (_cddd *CT_GraphicalObjectFrame) ValidateWithPath(path string) error {
	if _agde := _cddd.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _agde != nil {
		return _agde
	}
	if _dfae := _cddd.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _dfae != nil {
		return _dfae
	}
	if _bgcd := _cddd.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _bgcd != nil {
		return _bgcd
	}
	if _caaa := _cddd.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _caaa != nil {
		return _caaa
	}
	if _cddd.ExtLst != nil {
		if _abfg := _cddd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abfg != nil {
			return _abfg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLByRgbColorTransform and its children, prefixing error messages with path
func (_cfeff *CT_TLByRgbColorTransform) ValidateWithPath(path string) error {
	if _bbfdc := _cfeff.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _bbfdc != nil {
		return _bbfdc
	}
	if _aabc := _cfeff.GAttr.ValidateWithPath(path + "\u002f\u0047\u0041\u0074\u0074\u0072"); _aabc != nil {
		return _aabc
	}
	if _fgdg := _cfeff.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _fgdg != nil {
		return _fgdg
	}
	return nil
}
func (_aebd *CT_SideDirectionTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _aebd.DirAttr != ST_TransitionSideDirectionTypeUnset {
		_eceb, _fcdc := _aebd.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
		if _fcdc != nil {
			return _fcdc
		}
		start.Attr = append(start.Attr, _eceb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bbgbc ST_TLTimeNodeRestartType) ValidateWithPath(path string) error {
	switch _bbgbc {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbgbc))
	}
	return nil
}
func (_bcbff *ST_PrintWhat) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ccbff, _baace := d.Token()
	if _baace != nil {
		return _baace
	}
	if _bgbg, _caadf := _ccbff.(_d.EndElement); _caadf && _bgbg.Name == start.Name {
		*_bcbff = 1
		return nil
	}
	if _fbcab, _aecab := _ccbff.(_d.CharData); !_aecab {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccbff)
	} else {
		switch string(_fbcab) {
		case "":
			*_bcbff = 0
		case "\u0073\u006c\u0069\u0064\u0065\u0073":
			*_bcbff = 1
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731":
			*_bcbff = 2
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732":
			*_bcbff = 3
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733":
			*_bcbff = 4
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734":
			*_bcbff = 5
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736":
			*_bcbff = 6
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739":
			*_bcbff = 7
		case "\u006e\u006f\u0074e\u0073":
			*_bcbff = 8
		case "\u006fu\u0074\u006c\u0069\u006e\u0065":
			*_bcbff = 9
		}
	}
	_ccbff, _baace = d.Token()
	if _baace != nil {
		return _baace
	}
	if _fddad, _cfgcc := _ccbff.(_d.EndElement); _cfgcc && _fddad.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccbff)
}
func (_dcdd ST_IterateType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dcdd.String(), start)
}
func (_cfdcf ST_WebScreenSize) Validate() error { return _cfdcf.ValidateWithPath("") }

// ValidateWithPath validates the CT_TLShapeTargetElement and its children, prefixing error messages with path
func (_fcded *CT_TLShapeTargetElement) ValidateWithPath(path string) error {
	if _fcded.Bg != nil {
		if _cfbgg := _fcded.Bg.ValidateWithPath(path + "\u002f\u0042\u0067"); _cfbgg != nil {
			return _cfbgg
		}
	}
	if _fcded.SubSp != nil {
		if _ceec := _fcded.SubSp.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0053\u0070"); _ceec != nil {
			return _ceec
		}
	}
	if _fcded.OleChartEl != nil {
		if _dagc := _fcded.OleChartEl.ValidateWithPath(path + "/\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"); _dagc != nil {
			return _dagc
		}
	}
	if _fcded.TxEl != nil {
		if _gacdg := _fcded.TxEl.ValidateWithPath(path + "\u002f\u0054\u0078E\u006c"); _gacdg != nil {
			return _gacdg
		}
	}
	if _fcded.GraphicEl != nil {
		if _gaaeb := _fcded.GraphicEl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0045\u006c"); _gaaeb != nil {
			return _gaaeb
		}
	}
	return nil
}

type CT_BackgroundProperties struct {

	// Shade to Title
	ShadeToTitleAttr *bool
	NoFill           *_c.CT_NoFillProperties
	SolidFill        *_c.CT_SolidColorFillProperties
	GradFill         *_c.CT_GradientFillProperties
	BlipFill         *_c.CT_BlipFillProperties
	PattFill         *_c.CT_PatternFillProperties
	GrpFill          *_c.CT_GroupFillProperties
	EffectLst        *_c.CT_EffectList
	EffectDag        *_c.CT_EffectContainer
	ExtLst           *CT_ExtensionList
}

const (
	ST_TLNextActionTypeUnset ST_TLNextActionType = 0
	ST_TLNextActionTypeNone  ST_TLNextActionType = 1
	ST_TLNextActionTypeSeek  ST_TLNextActionType = 2
)

// Validate validates the CT_StringTag and its children
func (_cfcc *CT_StringTag) Validate() error {
	return _cfcc.ValidateWithPath("\u0043\u0054\u005fS\u0074\u0072\u0069\u006e\u0067\u0054\u0061\u0067")
}
func (_gaead ST_TLTimeIndefinite) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gaead.String(), start)
}

// Validate validates the CT_TLByHslColorTransform and its children
func (_gccd *CT_TLByHslColorTransform) Validate() error {
	return _gccd.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0042\u0079\u0048\u0073\u006c\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}
func (_fdaf *CT_OutlineViewSlideList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ddbe:
	for {
		_feefa, _bggf := d.Token()
		if _bggf != nil {
			return _bggf
		}
		switch _ccffa := _feefa.(type) {
		case _d.StartElement:
			switch _ccffa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064"}:
				_fadc := NewCT_OutlineViewSlideEntry()
				if _bbea := d.DecodeElement(_fadc, &_ccffa); _bbea != nil {
					return _bbea
				}
				_fdaf.Sld = append(_fdaf.Sld, _fadc)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069e\u0077\u0053\u006c\u0069\u0064\u0065L\u0069\u0073\u0074 \u0025\u0076", _ccffa.Name)
				if _bcgf := d.Skip(); _bcgf != nil {
					return _bcgf
				}
			}
		case _d.EndElement:
			break _ddbe
		case _d.CharData:
		}
	}
	return nil
}
func (_befcg ST_TLAnimateMotionBehaviorOrigin) String() string {
	switch _befcg {
	case 0:
		return ""
	case 1:
		return "\u0070\u0061\u0072\u0065\u006e\u0074"
	case 2:
		return "\u006c\u0061\u0079\u006f\u0075\u0074"
	}
	return ""
}
func (_ebefa ST_Direction) ValidateWithPath(path string) error {
	switch _ebefa {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebefa))
	}
	return nil
}

// Validate validates the CT_Rel and its children
func (_ddffc *CT_Rel) Validate() error {
	return _ddffc.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u006c")
}
func (_edad ST_PhotoAlbumLayout) Validate() error { return _edad.ValidateWithPath("") }
func NewCT_CustomShowId() *CT_CustomShowId        { _ddfa := &CT_CustomShowId{}; return _ddfa }
func (_cbbfbd ST_PrintWhat) String() string {
	switch _cbbfbd {
	case 0:
		return ""
	case 1:
		return "\u0073\u006c\u0069\u0064\u0065\u0073"
	case 2:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731"
	case 3:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732"
	case 4:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733"
	case 5:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734"
	case 6:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736"
	case 7:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739"
	case 8:
		return "\u006e\u006f\u0074e\u0073"
	case 9:
		return "\u006fu\u0074\u006c\u0069\u006e\u0065"
	}
	return ""
}

// Validate validates the Sld and its children
func (_gfbbd *Sld) Validate() error { return _gfbbd.ValidateWithPath("\u0053\u006c\u0064") }

// Validate validates the CT_ExtensionListModify and its children
func (_adec *CT_ExtensionListModify) Validate() error {
	return _adec.ValidateWithPath("\u0043\u0054\u005f\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069f\u0079")
}
func (_gfgc *CT_NormalViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gfgc.RestoredLeft = NewCT_NormalViewPortion()
	_gfgc.RestoredTop = NewCT_NormalViewPortion()
	for _, _eabe := range start.Attr {
		if _eabe.Name.Local == "\u0073\u0068o\u0077\u004f\u0075t\u006c\u0069\u006e\u0065\u0049\u0063\u006f\u006e\u0073" {
			_dfec, _fccd := _ag.ParseBool(_eabe.Value)
			if _fccd != nil {
				return _fccd
			}
			_gfgc.ShowOutlineIconsAttr = &_dfec
			continue
		}
		if _eabe.Name.Local == "\u0073\u006ea\u0070\u0056\u0065r\u0074\u0053\u0070\u006c\u0069\u0074\u0074\u0065\u0072" {
			_ecef, _gagd := _ag.ParseBool(_eabe.Value)
			if _gagd != nil {
				return _gagd
			}
			_gfgc.SnapVertSplitterAttr = &_ecef
			continue
		}
		if _eabe.Name.Local == "\u0076\u0065\u0072t\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065" {
			_gfgc.VertBarStateAttr.UnmarshalXMLAttr(_eabe)
			continue
		}
		if _eabe.Name.Local == "\u0068\u006f\u0072z\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065" {
			_gfgc.HorzBarStateAttr.UnmarshalXMLAttr(_eabe)
			continue
		}
		if _eabe.Name.Local == "\u0070\u0072e\u0066\u0065\u0072S\u0069\u006e\u0067\u006c\u0065\u0056\u0069\u0065\u0077" {
			_cge, _cfec := _ag.ParseBool(_eabe.Value)
			if _cfec != nil {
				return _cfec
			}
			_gfgc.PreferSingleViewAttr = &_cge
			continue
		}
	}
_faef:
	for {
		_gfgg, _fefef := d.Token()
		if _fefef != nil {
			return _fefef
		}
		switch _abdf := _gfgg.(type) {
		case _d.StartElement:
			switch _abdf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0065\u0073t\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0073t\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"}:
				if _fbea := d.DecodeElement(_gfgc.RestoredLeft, &_abdf); _fbea != nil {
					return _fbea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "r\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "r\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}:
				if _fgba := d.DecodeElement(_gfgc.RestoredTop, &_abdf); _fgba != nil {
					return _fgba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfgc.ExtLst = NewCT_ExtensionList()
				if _agdf := d.DecodeElement(_gfgc.ExtLst, &_abdf); _agdf != nil {
					return _agdf
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _abdf.Name)
				if _gacb := d.Skip(); _gacb != nil {
					return _gacb
				}
			}
		case _d.EndElement:
			break _faef
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_EmbeddedFontDataId and its children, prefixing error messages with path
func (_ggd *CT_EmbeddedFontDataId) ValidateWithPath(path string) error { return nil }

type CT_Empty struct{}

// ValidateWithPath validates the OleObj and its children, prefixing error messages with path
func (_ccccf *OleObj) ValidateWithPath(path string) error {
	if _gegec := _ccccf.CT_OleObject.ValidateWithPath(path); _gegec != nil {
		return _gegec
	}
	return nil
}
func (_agfeb ST_PrintWhat) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_agfeb.String(), start)
}

// Validate validates the CT_TLTimeAnimateValueList and its children
func (_dcfgc *CT_TLTimeAnimateValueList) Validate() error {
	return _dcfgc.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0054i\u006d\u0065\u0041\u006e\u0069m\u0061t\u0065V\u0061\u006c\u0075\u0065\u004c\u0069\u0073t")
}
func (_gadbg ST_WebScreenSize) String() string {
	switch _gadbg {
	case 0:
		return ""
	case 1:
		return "\u00354\u0034\u0078\u0033\u0037\u0036"
	case 2:
		return "\u00364\u0030\u0078\u0034\u0038\u0030"
	case 3:
		return "\u00372\u0030\u0078\u0035\u0031\u0032"
	case 4:
		return "\u00380\u0030\u0078\u0036\u0030\u0030"
	case 5:
		return "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case 6:
		return "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case 7:
		return "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case 8:
		return "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case 9:
		return "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case 10:
		return "\u00318\u0030\u0030\u0078\u0031\u0034\u00300"
	case 11:
		return "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return ""
}
func (_dafec ST_TLTimeIndefinite) ValidateWithPath(path string) error {
	switch _dafec {
	case 0, 1:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dafec))
	}
	return nil
}

const (
	ST_TLAnimateMotionPathEditModeUnset    ST_TLAnimateMotionPathEditMode = 0
	ST_TLAnimateMotionPathEditModeRelative ST_TLAnimateMotionPathEditMode = 1
	ST_TLAnimateMotionPathEditModeFixed    ST_TLAnimateMotionPathEditMode = 2
)

func (_fdcbg ST_PhotoAlbumFrameShape) Validate() error { return _fdcbg.ValidateWithPath("") }

// ValidateWithPath validates the CT_TLAnimateEffectBehavior and its children, prefixing error messages with path
func (_abbce *CT_TLAnimateEffectBehavior) ValidateWithPath(path string) error {
	if _eccd := _abbce.TransitionAttr.ValidateWithPath(path + "\u002fT\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _eccd != nil {
		return _eccd
	}
	if _gdffb := _abbce.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _gdffb != nil {
		return _gdffb
	}
	if _abbce.Progress != nil {
		if _gaadb := _abbce.Progress.ValidateWithPath(path + "\u002fP\u0072\u006f\u0067\u0072\u0065\u0073s"); _gaadb != nil {
			return _gaadb
		}
	}
	return nil
}
func (_gdfag *OleObj) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gdfag.CT_OleObject = *NewCT_OleObject()
	for _, _ccbbc := range start.Attr {
		if _ccbbc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ccbbc.Name.Local == "\u0069\u0064" {
			_ecgbcd, _bbcdc := _ccbbc.Value, error(nil)
			if _bbcdc != nil {
				return _bbcdc
			}
			_gdfag.IdAttr = &_ecgbcd
			continue
		}
		if _ccbbc.Name.Local == "\u0073\u0070\u0069\u0064" {
			_affdb, _cdfgc := _ccbbc.Value, error(nil)
			if _cdfgc != nil {
				return _cdfgc
			}
			_gdfag.SpidAttr = &_affdb
			continue
		}
		if _ccbbc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eegg, _egfcc := _ccbbc.Value, error(nil)
			if _egfcc != nil {
				return _egfcc
			}
			_gdfag.NameAttr = &_eegg
			continue
		}
		if _ccbbc.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_agfeg, _ecefc := _ag.ParseBool(_ccbbc.Value)
			if _ecefc != nil {
				return _ecefc
			}
			_gdfag.ShowAsIconAttr = &_agfeg
			continue
		}
		if _ccbbc.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_cdce, _afedg := _ccbbc.Value, error(nil)
			if _afedg != nil {
				return _afedg
			}
			_gdfag.ProgIdAttr = &_cdce
			continue
		}
		if _ccbbc.Name.Local == "\u0069\u006d\u0067\u0057" {
			_fagfd, _ebafbe := _ag.ParseInt(_ccbbc.Value, 10, 32)
			if _ebafbe != nil {
				return _ebafbe
			}
			_febcd := int32(_fagfd)
			_gdfag.ImgWAttr = &_febcd
			continue
		}
		if _ccbbc.Name.Local == "\u0069\u006d\u0067\u0048" {
			_bdeaf, _degga := _ag.ParseInt(_ccbbc.Value, 10, 32)
			if _degga != nil {
				return _degga
			}
			_bgcca := int32(_bdeaf)
			_gdfag.ImgHAttr = &_bgcca
			continue
		}
	}
_cbddcf:
	for {
		_acbgb, _gdebc := d.Token()
		if _gdebc != nil {
			return _gdebc
		}
		switch _cagaf := _acbgb.(type) {
		case _d.StartElement:
			switch _cagaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_gdfag.Choice = NewCT_OleObjectChoice()
				if _ddge := d.DecodeElement(&_gdfag.Choice.Embed, &_cagaf); _ddge != nil {
					return _ddge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_gdfag.Choice = NewCT_OleObjectChoice()
				if _ggccf := d.DecodeElement(&_gdfag.Choice.Link, &_cagaf); _ggccf != nil {
					return _ggccf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_gdfag.Pic = NewCT_Picture()
				if _fcfda := d.DecodeElement(_gdfag.Pic, &_cagaf); _fcfda != nil {
					return _fcfda
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004f\u006c\u0065\u004f\u0062\u006a\u0020\u0025\u0076", _cagaf.Name)
				if _fcged := d.Skip(); _fcged != nil {
					return _fcged
				}
			}
		case _d.EndElement:
			break _cbddcf
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TLTriggerRuntimeNodeUnset ST_TLTriggerRuntimeNode = 0
	ST_TLTriggerRuntimeNodeFirst ST_TLTriggerRuntimeNode = 1
	ST_TLTriggerRuntimeNodeLast  ST_TLTriggerRuntimeNode = 2
	ST_TLTriggerRuntimeNodeAll   ST_TLTriggerRuntimeNode = 3
)

func (_gdcfg ST_TLNextActionType) Validate() error { return _gdcfg.ValidateWithPath("") }

// Validate validates the CT_SlideTiming and its children
func (_ecaecc *CT_SlideTiming) Validate() error {
	return _ecaecc.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054i\u006d\u0069\u006e\u0067")
}
func (_fcca ST_OleObjectFollowColorScheme) ValidateWithPath(path string) error {
	switch _fcca {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcca))
	}
	return nil
}

// Validate validates the CT_HandoutMaster and its children
func (_bdfa *CT_HandoutMaster) Validate() error {
	return _bdfa.ValidateWithPath("\u0043\u0054_\u0048\u0061\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072")
}

// ValidateWithPath validates the CT_GraphicalObjectFrameNonVisual and its children, prefixing error messages with path
func (_bgfe *CT_GraphicalObjectFrameNonVisual) ValidateWithPath(path string) error {
	if _effec := _bgfe.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _effec != nil {
		return _effec
	}
	if _ddb := _bgfe.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _ddb != nil {
		return _ddb
	}
	if _eeeag := _bgfe.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _eeeag != nil {
		return _eeeag
	}
	return nil
}

const (
	ST_TransitionCornerDirectionTypeUnset ST_TransitionCornerDirectionType = 0
	ST_TransitionCornerDirectionTypeLu    ST_TransitionCornerDirectionType = 1
	ST_TransitionCornerDirectionTypeRu    ST_TransitionCornerDirectionType = 2
	ST_TransitionCornerDirectionTypeLd    ST_TransitionCornerDirectionType = 3
	ST_TransitionCornerDirectionTypeRd    ST_TransitionCornerDirectionType = 4
)

type ST_TLTimeNodePresetClassType byte

func (_cccad ST_TLBehaviorTransformType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cccad.String(), start)
}
func (_dgdad ST_ViewType) String() string {
	switch _dgdad {
	case 0:
		return ""
	case 1:
		return "\u0073l\u0064\u0056\u0069\u0065\u0077"
	case 2:
		return "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 3:
		return "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w"
	case 4:
		return "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077"
	case 5:
		return "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 6:
		return "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077"
	case 7:
		return "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 8:
		return "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077"
	}
	return ""
}

// ValidateWithPath validates the CT_SlideTransitionChoice and its children, prefixing error messages with path
func (_ebgg *CT_SlideTransitionChoice) ValidateWithPath(path string) error {
	if _ebgg.Blinds != nil {
		if _aebcb := _ebgg.Blinds.ValidateWithPath(path + "\u002fB\u006c\u0069\u006e\u0064\u0073"); _aebcb != nil {
			return _aebcb
		}
	}
	if _ebgg.Checker != nil {
		if _gfdg := _ebgg.Checker.ValidateWithPath(path + "\u002f\u0043\u0068\u0065\u0063\u006b\u0065\u0072"); _gfdg != nil {
			return _gfdg
		}
	}
	if _ebgg.Circle != nil {
		if _afeg := _ebgg.Circle.ValidateWithPath(path + "\u002fC\u0069\u0072\u0063\u006c\u0065"); _afeg != nil {
			return _afeg
		}
	}
	if _ebgg.Dissolve != nil {
		if _bbbaf := _ebgg.Dissolve.ValidateWithPath(path + "\u002fD\u0069\u0073\u0073\u006f\u006c\u0076e"); _bbbaf != nil {
			return _bbbaf
		}
	}
	if _ebgg.Comb != nil {
		if _gaefg := _ebgg.Comb.ValidateWithPath(path + "\u002f\u0043\u006fm\u0062"); _gaefg != nil {
			return _gaefg
		}
	}
	if _ebgg.Cover != nil {
		if _cbgbg := _ebgg.Cover.ValidateWithPath(path + "\u002f\u0043\u006f\u0076\u0065\u0072"); _cbgbg != nil {
			return _cbgbg
		}
	}
	if _ebgg.Cut != nil {
		if _gfce := _ebgg.Cut.ValidateWithPath(path + "\u002f\u0043\u0075\u0074"); _gfce != nil {
			return _gfce
		}
	}
	if _ebgg.Diamond != nil {
		if _gefg := _ebgg.Diamond.ValidateWithPath(path + "\u002f\u0044\u0069\u0061\u006d\u006f\u006e\u0064"); _gefg != nil {
			return _gefg
		}
	}
	if _ebgg.Fade != nil {
		if _abcfc := _ebgg.Fade.ValidateWithPath(path + "\u002f\u0046\u0061d\u0065"); _abcfc != nil {
			return _abcfc
		}
	}
	if _ebgg.Newsflash != nil {
		if _fefd := _ebgg.Newsflash.ValidateWithPath(path + "\u002f\u004e\u0065\u0077\u0073\u0066\u006c\u0061\u0073\u0068"); _fefd != nil {
			return _fefd
		}
	}
	if _ebgg.Plus != nil {
		if _cfaba := _ebgg.Plus.ValidateWithPath(path + "\u002f\u0050\u006cu\u0073"); _cfaba != nil {
			return _cfaba
		}
	}
	if _ebgg.Pull != nil {
		if _ffef := _ebgg.Pull.ValidateWithPath(path + "\u002f\u0050\u0075l\u006c"); _ffef != nil {
			return _ffef
		}
	}
	if _ebgg.Push != nil {
		if _dacc := _ebgg.Push.ValidateWithPath(path + "\u002f\u0050\u0075s\u0068"); _dacc != nil {
			return _dacc
		}
	}
	if _ebgg.Random != nil {
		if _ccfc := _ebgg.Random.ValidateWithPath(path + "\u002fR\u0061\u006e\u0064\u006f\u006d"); _ccfc != nil {
			return _ccfc
		}
	}
	if _ebgg.RandomBar != nil {
		if _daede := _ebgg.RandomBar.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0064\u006f\u006d\u0042\u0061\u0072"); _daede != nil {
			return _daede
		}
	}
	if _ebgg.Split != nil {
		if _fbdd := _ebgg.Split.ValidateWithPath(path + "\u002f\u0053\u0070\u006c\u0069\u0074"); _fbdd != nil {
			return _fbdd
		}
	}
	if _ebgg.Strips != nil {
		if _eacc := _ebgg.Strips.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u0070\u0073"); _eacc != nil {
			return _eacc
		}
	}
	if _ebgg.Wedge != nil {
		if _edbc := _ebgg.Wedge.ValidateWithPath(path + "\u002f\u0057\u0065\u0064\u0067\u0065"); _edbc != nil {
			return _edbc
		}
	}
	if _ebgg.Wheel != nil {
		if _adece := _ebgg.Wheel.ValidateWithPath(path + "\u002f\u0057\u0068\u0065\u0065\u006c"); _adece != nil {
			return _adece
		}
	}
	if _ebgg.Wipe != nil {
		if _ebaad := _ebgg.Wipe.ValidateWithPath(path + "\u002f\u0057\u0069p\u0065"); _ebaad != nil {
			return _ebaad
		}
	}
	if _ebgg.Zoom != nil {
		if _gcbda := _ebgg.Zoom.ValidateWithPath(path + "\u002f\u005a\u006fo\u006d"); _gcbda != nil {
			return _gcbda
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTimeAnimateValue and its children, prefixing error messages with path
func (_fdbbe *CT_TLTimeAnimateValue) ValidateWithPath(path string) error {
	if _fdbbe.TmAttr != nil {
		if _baffg := _fdbbe.TmAttr.ValidateWithPath(path + "\u002fT\u006d\u0041\u0074\u0074\u0072"); _baffg != nil {
			return _baffg
		}
	}
	if _fdbbe.Val != nil {
		if _cfgbf := _fdbbe.Val.ValidateWithPath(path + "\u002f\u0056\u0061\u006c"); _cfgbf != nil {
			return _cfgbf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimVariantStringVal and its children, prefixing error messages with path
func (_fdce *CT_TLAnimVariantStringVal) ValidateWithPath(path string) error { return nil }
func NewCT_TLByRgbColorTransform() *CT_TLByRgbColorTransform {
	_ddcf := &CT_TLByRgbColorTransform{}
	return _ddcf
}
func (_fdff ST_TLChartSubelementType) String() string {
	switch _fdff {
	case 0:
		return ""
	case 1:
		return "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	case 2:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 3:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 4:
		return "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case 5:
		return "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	}
	return ""
}

// Validate validates the CT_TLTemplate and its children
func (_ecba *CT_TLTemplate) Validate() error {
	return _ecba.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065")
}
func (_fgdc ST_TransitionEightDirectionType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fgdc.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		e.EncodeToken(_d.CharData(_fgdc.ST_TransitionSideDirectionType.String()))
	}
	if _fgdc.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		e.EncodeToken(_d.CharData(_fgdc.ST_TransitionCornerDirectionType.String()))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

type ST_TransitionSpeed byte

// ValidateWithPath validates the ViewPr and its children, prefixing error messages with path
func (_ffbgc *ViewPr) ValidateWithPath(path string) error {
	if _deaba := _ffbgc.CT_ViewProperties.ValidateWithPath(path); _deaba != nil {
		return _deaba
	}
	return nil
}
func NewCT_Presentation() *CT_Presentation {
	_eegbf := &CT_Presentation{}
	_eegbf.NotesSz = _c.NewCT_PositiveSize2D()
	return _eegbf
}

// ValidateWithPath validates the CT_SlideMasterIdList and its children, prefixing error messages with path
func (_cbgc *CT_SlideMasterIdList) ValidateWithPath(path string) error {
	for _eafbc, _dgbc := range _cbgc.SldMasterId {
		if _egfc := _dgbc.ValidateWithPath(_b.Sprintf("\u0025s\u002fS\u006c\u0064\u004d\u0061\u0073t\u0065\u0072I\u0064\u005b\u0025\u0064\u005d", path, _eafbc)); _egfc != nil {
			return _egfc
		}
	}
	return nil
}
func (_gdcaac ST_TLChartSubelementType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gdcaac.String(), start)
}
func (_geedg *Presentation) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_geedg.CT_Presentation = *NewCT_Presentation()
	for _, _dacde := range start.Attr {
		if _dacde.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d" {
			_ccfbc, _abdda := _ag.ParseInt(_dacde.Value, 10, 32)
			if _abdda != nil {
				return _abdda
			}
			_geeea := int32(_ccfbc)
			_geedg.FirstSlideNumAttr = &_geeea
			continue
		}
		if _dacde.Name.Local == "\u0072\u0074\u006c" {
			_bdade, _dcacd := _ag.ParseBool(_dacde.Value)
			if _dcacd != nil {
				return _dcacd
			}
			_geedg.RtlAttr = &_bdade
			continue
		}
		if _dacde.Name.Local == "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065" {
			_bcaffd, _ebbbe := _ag.ParseBool(_dacde.Value)
			if _ebbbe != nil {
				return _ebbbe
			}
			_geedg.CompatModeAttr = &_bcaffd
			continue
		}
		if _dacde.Name.Local == "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073" {
			_agcf, _fgcce := _ag.ParseBool(_dacde.Value)
			if _fgcce != nil {
				return _fgcce
			}
			_geedg.EmbedTrueTypeFontsAttr = &_agcf
			continue
		}
		if _dacde.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_eefac, _gffab := _ag.ParseBool(_dacde.Value)
			if _gffab != nil {
				return _gffab
			}
			_geedg.AutoCompressPicturesAttr = &_eefac
			continue
		}
		if _dacde.Name.Local == "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064" {
			_eaaed, _dgged := _ag.ParseBool(_dacde.Value)
			if _dgged != nil {
				return _dgged
			}
			_geedg.ShowSpecialPlsOnTitleSldAttr = &_eaaed
			continue
		}
		if _dacde.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d" {
			_acfbb, _egda := ParseUnionST_Percentage(_dacde.Value)
			if _egda != nil {
				return _egda
			}
			_geedg.ServerZoomAttr = &_acfbb
			continue
		}
		if _dacde.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_geedg.ConformanceAttr.UnmarshalXMLAttr(_dacde)
			continue
		}
		if _dacde.Name.Local == "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065" {
			_edccfa, _cefdd := _ag.ParseBool(_dacde.Value)
			if _cefdd != nil {
				return _cefdd
			}
			_geedg.RemovePersonalInfoOnSaveAttr = &_edccfa
			continue
		}
		if _dacde.Name.Local == "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073" {
			_gegc, _cagf := _ag.ParseBool(_dacde.Value)
			if _cagf != nil {
				return _cagf
			}
			_geedg.SaveSubsetFontsAttr = &_gegc
			continue
		}
		if _dacde.Name.Local == "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064" {
			_cabee, _ecfdgd := _ag.ParseUint(_dacde.Value, 10, 32)
			if _ecfdgd != nil {
				return _ecfdgd
			}
			_baggd := uint32(_cabee)
			_geedg.BookmarkIdSeedAttr = &_baggd
			continue
		}
		if _dacde.Name.Local == "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073" {
			_cbabc, _bebcg := _ag.ParseBool(_dacde.Value)
			if _bebcg != nil {
				return _bebcg
			}
			_geedg.StrictFirstAndLastCharsAttr = &_cbabc
			continue
		}
	}
_aaeff:
	for {
		_ddagg, _dfgec := d.Token()
		if _dfgec != nil {
			return _dfgec
		}
		switch _dddcb := _ddagg.(type) {
		case _d.StartElement:
			switch _dddcb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}:
				_geedg.SldMasterIdLst = NewCT_SlideMasterIdList()
				if _cacaf := d.DecodeElement(_geedg.SldMasterIdLst, &_dddcb); _cacaf != nil {
					return _cacaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}:
				_geedg.NotesMasterIdLst = NewCT_NotesMasterIdList()
				if _fffefg := d.DecodeElement(_geedg.NotesMasterIdLst, &_dddcb); _fffefg != nil {
					return _fffefg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}:
				_geedg.HandoutMasterIdLst = NewCT_HandoutMasterIdList()
				if _dfadda := d.DecodeElement(_geedg.HandoutMasterIdLst, &_dddcb); _dfadda != nil {
					return _dfadda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}:
				_geedg.SldIdLst = NewCT_SlideIdList()
				if _abfa := d.DecodeElement(_geedg.SldIdLst, &_dddcb); _abfa != nil {
					return _abfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}:
				_geedg.SldSz = NewCT_SlideSize()
				if _fffebe := d.DecodeElement(_geedg.SldSz, &_dddcb); _fffebe != nil {
					return _fffebe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}:
				if _bfggef := d.DecodeElement(_geedg.NotesSz, &_dddcb); _bfggef != nil {
					return _bfggef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_geedg.SmartTags = NewCT_SmartTags()
				if _fcbbb := d.DecodeElement(_geedg.SmartTags, &_dddcb); _fcbbb != nil {
					return _fcbbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}:
				_geedg.EmbeddedFontLst = NewCT_EmbeddedFontList()
				if _aede := d.DecodeElement(_geedg.EmbeddedFontLst, &_dddcb); _aede != nil {
					return _aede
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}:
				_geedg.CustShowLst = NewCT_CustomShowList()
				if _dbede := d.DecodeElement(_geedg.CustShowLst, &_dddcb); _dbede != nil {
					return _dbede
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}:
				_geedg.PhotoAlbum = NewCT_PhotoAlbum()
				if _effc := d.DecodeElement(_geedg.PhotoAlbum, &_dddcb); _effc != nil {
					return _effc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_geedg.CustDataLst = NewCT_CustomerDataList()
				if _cfcea := d.DecodeElement(_geedg.CustDataLst, &_dddcb); _cfcea != nil {
					return _cfcea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}:
				_geedg.Kinsoku = NewCT_Kinsoku()
				if _egfggd := d.DecodeElement(_geedg.Kinsoku, &_dddcb); _egfggd != nil {
					return _egfggd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_geedg.DefaultTextStyle = _c.NewCT_TextListStyle()
				if _cfgca := d.DecodeElement(_geedg.DefaultTextStyle, &_dddcb); _cfgca != nil {
					return _cfgca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}:
				_geedg.ModifyVerifier = NewCT_ModifyVerifier()
				if _adfba := d.DecodeElement(_geedg.ModifyVerifier, &_dddcb); _adfba != nil {
					return _adfba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_geedg.ExtLst = NewCT_ExtensionList()
				if _daded := d.DecodeElement(_geedg.ExtLst, &_dddcb); _daded != nil {
					return _daded
				}
			default:
				_be.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0072es\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _dddcb.Name)
				if _agccg := d.Skip(); _agccg != nil {
					return _agccg
				}
			}
		case _d.EndElement:
			break _aaeff
		case _d.CharData:
		}
	}
	return nil
}
func (_facbg ST_TLPreviousActionType) String() string {
	switch _facbg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d"
	}
	return ""
}
func (_abad *CT_ModifyVerifier) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _abad.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_abad.AlgorithmNameAttr)})
	}
	if _abad.HashValueAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0076", *_abad.HashValueAttr)})
	}
	if _abad.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0076", *_abad.SaltValueAttr)})
	}
	if _abad.SpinValueAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073p\u0069\u006e\u0056\u0061\u006c\u0075e"}, Value: _b.Sprintf("\u0025\u0076", *_abad.SpinValueAttr)})
	}
	if _abad.CryptProviderTypeAttr != _g.ST_CryptProvUnset {
		_bfdg, _cfdd := _abad.CryptProviderTypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065r\u0054\u0079\u0070\u0065"})
		if _cfdd != nil {
			return _cfdd
		}
		start.Attr = append(start.Attr, _bfdg)
	}
	if _abad.CryptAlgorithmClassAttr != _g.ST_AlgClassUnset {
		_cgbfa, _feefb := _abad.CryptAlgorithmClassAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u0072\u0079\u0070tA\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0043\u006c\u0061\u0073\u0073"})
		if _feefb != nil {
			return _feefb
		}
		start.Attr = append(start.Attr, _cgbfa)
	}
	if _abad.CryptAlgorithmTypeAttr != _g.ST_AlgTypeUnset {
		_bbdd, _adeeb := _abad.CryptAlgorithmTypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0063r\u0079p\u0074\u0041\u006c\u0067\u006fr\u0069\u0074h\u006d\u0054\u0079\u0070\u0065"})
		if _adeeb != nil {
			return _adeeb
		}
		start.Attr = append(start.Attr, _bbdd)
	}
	if _abad.CryptAlgorithmSidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0053\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_abad.CryptAlgorithmSidAttr)})
	}
	if _abad.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _b.Sprintf("\u0025\u0076", *_abad.SpinCountAttr)})
	}
	if _abad.SaltDataAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0061\u006c\u0074\u0044\u0061\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0076", *_abad.SaltDataAttr)})
	}
	if _abad.HashDataAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0061\u0073\u0068\u0044\u0061\u0074\u0061"}, Value: _b.Sprintf("\u0025\u0076", *_abad.HashDataAttr)})
	}
	if _abad.CryptProviderAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_abad.CryptProviderAttr)})
	}
	if _abad.AlgIdExtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_abad.AlgIdExtAttr)})
	}
	if _abad.AlgIdExtSourceAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074\u0053o\u0075\u0072\u0063\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_abad.AlgIdExtSourceAttr)})
	}
	if _abad.CryptProviderTypeExtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "c\u0072y\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070eE\u0078\u0074"}, Value: _b.Sprintf("\u0025\u0076", *_abad.CryptProviderTypeExtAttr)})
	}
	if _abad.CryptProviderTypeExtSourceAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070\u0065\u0045\u0078\u0074\u0053\u006fu\u0072\u0063\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_abad.CryptProviderTypeExtSourceAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fadcd ST_TLAnimateEffectTransition) String() string {
	switch _fadcd {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e"
	case 2:
		return "\u006f\u0075\u0074"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_ebfgg ST_TLDiagramBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ebfgg.String(), start)
}

type CT_TagList struct {

	// Programmable Extensibility Tag
	Tag []*CT_StringTag
}

func (_afbeb ST_TLTriggerRuntimeNode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cdecg := _d.Attr{}
	_cdecg.Name = name
	switch _afbeb {
	case ST_TLTriggerRuntimeNodeUnset:
		_cdecg.Value = ""
	case ST_TLTriggerRuntimeNodeFirst:
		_cdecg.Value = "\u0066\u0069\u0072s\u0074"
	case ST_TLTriggerRuntimeNodeLast:
		_cdecg.Value = "\u006c\u0061\u0073\u0074"
	case ST_TLTriggerRuntimeNodeAll:
		_cdecg.Value = "\u0061\u006c\u006c"
	}
	return _cdecg, nil
}
func (_aecdg ST_PrintColorMode) Validate() error { return _aecdg.ValidateWithPath("") }
func (_gcfg ST_TLTimeNodePresetClassType) String() string {
	switch _gcfg {
	case 0:
		return ""
	case 1:
		return "\u0065\u006e\u0074\u0072"
	case 2:
		return "\u0065\u0078\u0069\u0074"
	case 3:
		return "\u0065\u006d\u0070\u0068"
	case 4:
		return "\u0070\u0061\u0074\u0068"
	case 5:
		return "\u0076\u0065\u0072\u0062"
	case 6:
		return "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl"
	}
	return ""
}

type CT_SlideIdListEntry struct {

	// Slide Identifier
	IdAttr  uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}
type ST_Direction byte

func (_dfagd ST_PhotoAlbumFrameShape) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bdfcf := _d.Attr{}
	_bdfcf.Name = name
	switch _dfagd {
	case ST_PhotoAlbumFrameShapeUnset:
		_bdfcf.Value = ""
	case ST_PhotoAlbumFrameShapeFrameStyle1:
		_bdfcf.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031"
	case ST_PhotoAlbumFrameShapeFrameStyle2:
		_bdfcf.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032"
	case ST_PhotoAlbumFrameShapeFrameStyle3:
		_bdfcf.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033"
	case ST_PhotoAlbumFrameShapeFrameStyle4:
		_bdfcf.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034"
	case ST_PhotoAlbumFrameShapeFrameStyle5:
		_bdfcf.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035"
	case ST_PhotoAlbumFrameShapeFrameStyle6:
		_bdfcf.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036"
	case ST_PhotoAlbumFrameShapeFrameStyle7:
		_bdfcf.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037"
	}
	return _bdfcf, nil
}

type EG_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

const (
	ST_TLAnimateBehaviorCalcModeUnset    ST_TLAnimateBehaviorCalcMode = 0
	ST_TLAnimateBehaviorCalcModeDiscrete ST_TLAnimateBehaviorCalcMode = 1
	ST_TLAnimateBehaviorCalcModeLin      ST_TLAnimateBehaviorCalcMode = 2
	ST_TLAnimateBehaviorCalcModeFmla     ST_TLAnimateBehaviorCalcMode = 3
)

func (_dcgc *CT_OutlineViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dcgc.CViewPr = NewCT_CommonViewProperties()
_gged:
	for {
		_fffc, _ccde := d.Token()
		if _ccde != nil {
			return _ccde
		}
		switch _bgff := _fffc.(type) {
		case _d.StartElement:
			switch _bgff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _dbba := d.DecodeElement(_dcgc.CViewPr, &_bgff); _dbba != nil {
					return _dbba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}:
				_dcgc.SldLst = NewCT_OutlineViewSlideList()
				if _acag := d.DecodeElement(_dcgc.SldLst, &_bgff); _acag != nil {
					return _acag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcgc.ExtLst = NewCT_ExtensionList()
				if _efbebe := d.DecodeElement(_dcgc.ExtLst, &_bgff); _efbebe != nil {
					return _efbebe
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _bgff.Name)
				if _begba := d.Skip(); _begba != nil {
					return _begba
				}
			}
		case _d.EndElement:
			break _gged
		case _d.CharData:
		}
	}
	return nil
}
func (_acbc ST_TLAnimateColorSpace) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_acbc.String(), start)
}
func NewCT_HandoutMasterIdList() *CT_HandoutMasterIdList {
	_aacc := &CT_HandoutMasterIdList{}
	return _aacc
}
func (_aggca *ST_TransitionSideDirectionType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aeecfc, _gfbgd := d.Token()
	if _gfbgd != nil {
		return _gfbgd
	}
	if _adeg, _addga := _aeecfc.(_d.EndElement); _addga && _adeg.Name == start.Name {
		*_aggca = 1
		return nil
	}
	if _cdced, _cbfbf := _aeecfc.(_d.CharData); !_cbfbf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aeecfc)
	} else {
		switch string(_cdced) {
		case "":
			*_aggca = 0
		case "\u006c":
			*_aggca = 1
		case "\u0075":
			*_aggca = 2
		case "\u0072":
			*_aggca = 3
		case "\u0064":
			*_aggca = 4
		}
	}
	_aeecfc, _gfbgd = d.Token()
	if _gfbgd != nil {
		return _gfbgd
	}
	if _bagdg, _gbgbf := _aeecfc.(_d.EndElement); _gbgbf && _bagdg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aeecfc)
}
func (_deaf ST_TLOleChartBuildType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cfeca := _d.Attr{}
	_cfeca.Name = name
	switch _deaf {
	case ST_TLOleChartBuildTypeUnset:
		_cfeca.Value = ""
	case ST_TLOleChartBuildTypeAllAtOnce:
		_cfeca.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLOleChartBuildTypeSeries:
		_cfeca.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_TLOleChartBuildTypeCategory:
		_cfeca.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_TLOleChartBuildTypeSeriesEl:
		_cfeca.Value = "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case ST_TLOleChartBuildTypeCategoryEl:
		_cfeca.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return _cfeca, nil
}
func (_fecd *CT_CustomShow) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fecd.SldLst = NewCT_SlideRelationshipList()
	for _, _abee := range start.Attr {
		if _abee.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gac, _afbgb := _abee.Value, error(nil)
			if _afbgb != nil {
				return _afbgb
			}
			_fecd.NameAttr = _gac
			continue
		}
		if _abee.Name.Local == "\u0069\u0064" {
			_fgga, _aaa := _ag.ParseUint(_abee.Value, 10, 32)
			if _aaa != nil {
				return _aaa
			}
			_fecd.IdAttr = uint32(_fgga)
			continue
		}
	}
_dfga:
	for {
		_feag, _beef := d.Token()
		if _beef != nil {
			return _beef
		}
		switch _eeea := _feag.(type) {
		case _d.StartElement:
			switch _eeea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}:
				if _beda := d.DecodeElement(_fecd.SldLst, &_eeea); _beda != nil {
					return _beda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fecd.ExtLst = NewCT_ExtensionList()
				if _dabe := d.DecodeElement(_fecd.ExtLst, &_eeea); _dabe != nil {
					return _dabe
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043u\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077 \u0025\u0076", _eeea.Name)
				if _gdcg := d.Skip(); _gdcg != nil {
					return _gdcg
				}
			}
		case _d.EndElement:
			break _dfga
		case _d.CharData:
		}
	}
	return nil
}
func (_fdgdf *EG_TopLevelSlide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_gfdee := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_fdgdf.ClrMap, _gfdee)
	return nil
}
func (_bacdb ST_TLTimeNodeType) Validate() error { return _bacdb.ValidateWithPath("") }
func (_ddafa *ST_TransitionCornerDirectionType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcba, _gffed := d.Token()
	if _gffed != nil {
		return _gffed
	}
	if _eedgfc, _bgfce := _fcba.(_d.EndElement); _bgfce && _eedgfc.Name == start.Name {
		*_ddafa = 1
		return nil
	}
	if _dcbge, _geabb := _fcba.(_d.CharData); !_geabb {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcba)
	} else {
		switch string(_dcbge) {
		case "":
			*_ddafa = 0
		case "\u006c\u0075":
			*_ddafa = 1
		case "\u0072\u0075":
			*_ddafa = 2
		case "\u006c\u0064":
			*_ddafa = 3
		case "\u0072\u0064":
			*_ddafa = 4
		}
	}
	_fcba, _gffed = d.Token()
	if _gffed != nil {
		return _gffed
	}
	if _bbgda, _bdeg := _fcba.(_d.EndElement); _bdeg && _bbgda.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcba)
}

// ValidateWithPath validates the CT_ShapeNonVisual and its children, prefixing error messages with path
func (_gaee *CT_ShapeNonVisual) ValidateWithPath(path string) error {
	if _feda := _gaee.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _feda != nil {
		return _feda
	}
	if _dddd := _gaee.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _dddd != nil {
		return _dddd
	}
	if _gcdg := _gaee.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _gcdg != nil {
		return _gcdg
	}
	return nil
}

type CT_NormalViewProperties struct {

	// Show Outline Icons in Normal View
	ShowOutlineIconsAttr *bool

	// Snap Vertical Splitter
	SnapVertSplitterAttr *bool

	// State of the Vertical Splitter Bar
	VertBarStateAttr ST_SplitterBarState

	// State of the Horizontal Splitter Bar
	HorzBarStateAttr ST_SplitterBarState

	// Prefer Single View
	PreferSingleViewAttr *bool

	// Normal View Restored Left Properties
	RestoredLeft *CT_NormalViewPortion

	// Normal View Restored Top Properties
	RestoredTop *CT_NormalViewPortion
	ExtLst      *CT_ExtensionList
}

func (_fdbe *ST_TLTimeNodePresetClassType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fdbe = 0
	case "\u0065\u006e\u0074\u0072":
		*_fdbe = 1
	case "\u0065\u0078\u0069\u0074":
		*_fdbe = 2
	case "\u0065\u006d\u0070\u0068":
		*_fdbe = 3
	case "\u0070\u0061\u0074\u0068":
		*_fdbe = 4
	case "\u0076\u0065\u0072\u0062":
		*_fdbe = 5
	case "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl":
		*_fdbe = 6
	}
	return nil
}

// Validate validates the CT_TLTimeConditionList and its children
func (_dfcag *CT_TLTimeConditionList) Validate() error {
	return _dfcag.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069s\u0074")
}

// Validate validates the CT_TLPoint and its children
func (_gaca *CT_TLPoint) Validate() error {
	return _gaca.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074")
}

// ValidateWithPath validates the CT_NotesSlide and its children, prefixing error messages with path
func (_adcc *CT_NotesSlide) ValidateWithPath(path string) error {
	if _baffd := _adcc.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _baffd != nil {
		return _baffd
	}
	if _adcc.ClrMapOvr != nil {
		if _ddeb := _adcc.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _ddeb != nil {
			return _ddeb
		}
	}
	if _adcc.ExtLst != nil {
		if _bfeac := _adcc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfeac != nil {
			return _bfeac
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Presentation and its children, prefixing error messages with path
func (_cbeeg *CT_Presentation) ValidateWithPath(path string) error {
	if _cbeeg.ServerZoomAttr != nil {
		if _eeagcd := _cbeeg.ServerZoomAttr.ValidateWithPath(path + "\u002fS\u0065r\u0076\u0065\u0072\u005a\u006f\u006f\u006d\u0041\u0074\u0074\u0072"); _eeagcd != nil {
			return _eeagcd
		}
	}
	if _cbeeg.BookmarkIdSeedAttr != nil {
		if *_cbeeg.BookmarkIdSeedAttr < 1 {
			return _b.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049\u0064\u0053\u0065\u0065\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cbeeg.BookmarkIdSeedAttr)
		}
		if *_cbeeg.BookmarkIdSeedAttr >= 2147483648 {
			return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049\u0064S\u0065\u0065\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u003648\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cbeeg.BookmarkIdSeedAttr)
		}
	}
	if _fegd := _cbeeg.ConformanceAttr.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006fr\u006d\u0061\u006e\u0063\u0065\u0041\u0074\u0074\u0072"); _fegd != nil {
		return _fegd
	}
	if _cbeeg.SldMasterIdLst != nil {
		if _agdg := _cbeeg.SldMasterIdLst.ValidateWithPath(path + "\u002fS\u006cd\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"); _agdg != nil {
			return _agdg
		}
	}
	if _cbeeg.NotesMasterIdLst != nil {
		if _eebbg := _cbeeg.NotesMasterIdLst.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"); _eebbg != nil {
			return _eebbg
		}
	}
	if _cbeeg.HandoutMasterIdLst != nil {
		if _defc := _cbeeg.HandoutMasterIdLst.ValidateWithPath(path + "\u002f\u0048\u0061\u006edo\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"); _defc != nil {
			return _defc
		}
	}
	if _cbeeg.SldIdLst != nil {
		if _dcfb := _cbeeg.SldIdLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u0049\u0064\u004c\u0073t"); _dcfb != nil {
			return _dcfb
		}
	}
	if _cbeeg.SldSz != nil {
		if _gbda := _cbeeg.SldSz.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0053\u007a"); _gbda != nil {
			return _gbda
		}
	}
	if _gdecc := _cbeeg.NotesSz.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u0053\u007a"); _gdecc != nil {
		return _gdecc
	}
	if _cbeeg.SmartTags != nil {
		if _fceb := _cbeeg.SmartTags.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"); _fceb != nil {
			return _fceb
		}
	}
	if _cbeeg.EmbeddedFontLst != nil {
		if _bgab := _cbeeg.EmbeddedFontLst.ValidateWithPath(path + "\u002f\u0045m\u0062\u0065\u0064d\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"); _bgab != nil {
			return _bgab
		}
	}
	if _cbeeg.CustShowLst != nil {
		if _aaaa := _cbeeg.CustShowLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"); _aaaa != nil {
			return _aaaa
		}
	}
	if _cbeeg.PhotoAlbum != nil {
		if _abdd := _cbeeg.PhotoAlbum.ValidateWithPath(path + "/\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"); _abdd != nil {
			return _abdd
		}
	}
	if _cbeeg.CustDataLst != nil {
		if _aeef := _cbeeg.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _aeef != nil {
			return _aeef
		}
	}
	if _cbeeg.Kinsoku != nil {
		if _beff := _cbeeg.Kinsoku.ValidateWithPath(path + "\u002f\u004b\u0069\u006e\u0073\u006f\u006b\u0075"); _beff != nil {
			return _beff
		}
	}
	if _cbeeg.DefaultTextStyle != nil {
		if _cagd := _cbeeg.DefaultTextStyle.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0065\u0078\u0074S\u0074\u0079\u006c\u0065"); _cagd != nil {
			return _cagd
		}
	}
	if _cbeeg.ModifyVerifier != nil {
		if _cddac := _cbeeg.ModifyVerifier.ValidateWithPath(path + "\u002fM\u006fd\u0069\u0066\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072"); _cddac != nil {
			return _cddac
		}
	}
	if _cbeeg.ExtLst != nil {
		if _ccac := _cbeeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccac != nil {
			return _ccac
		}
	}
	return nil
}
func (_cgbfge ST_TLCommandType) String() string {
	switch _cgbfge {
	case 0:
		return ""
	case 1:
		return "\u0065\u0076\u0074"
	case 2:
		return "\u0063\u0061\u006c\u006c"
	case 3:
		return "\u0076\u0065\u0072\u0062"
	}
	return ""
}
func (_cdad *EG_TopLevelSlide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cdad.ClrMap = _c.NewCT_ColorMapping()
_bdfgg:
	for {
		_cefa, _ffea := d.Token()
		if _ffea != nil {
			return _ffea
		}
		switch _fafd := _cefa.(type) {
		case _d.StartElement:
			switch _fafd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _eaab := d.DecodeElement(_cdad.ClrMap, &_fafd); _eaab != nil {
					return _eaab
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u006f\u0070\u004c\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065\u0020\u0025v", _fafd.Name)
				if _dfafc := d.Skip(); _dfafc != nil {
					return _dfafc
				}
			}
		case _d.EndElement:
			break _bdfgg
		case _d.CharData:
		}
	}
	return nil
}
func (_dafab *CT_SlideMaster) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dafab.CSld = NewCT_CommonSlideData()
	_dafab.ClrMap = _c.NewCT_ColorMapping()
	for _, _fecdd := range start.Attr {
		if _fecdd.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_gfdf, _dbde := _ag.ParseBool(_fecdd.Value)
			if _dbde != nil {
				return _dbde
			}
			_dafab.PreserveAttr = &_gfdf
			continue
		}
	}
_fcbee:
	for {
		_befgc, _bdee := d.Token()
		if _bdee != nil {
			return _bdee
		}
		switch _gedb := _befgc.(type) {
		case _d.StartElement:
			switch _gedb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _gddaf := d.DecodeElement(_dafab.CSld, &_gedb); _gddaf != nil {
					return _gddaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _gdadb := d.DecodeElement(_dafab.ClrMap, &_gedb); _gdadb != nil {
					return _gdadb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}:
				_dafab.SldLayoutIdLst = NewCT_SlideLayoutIdList()
				if _begeb := d.DecodeElement(_dafab.SldLayoutIdLst, &_gedb); _begeb != nil {
					return _begeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_dafab.Transition = NewCT_SlideTransition()
				if _agda := d.DecodeElement(_dafab.Transition, &_gedb); _agda != nil {
					return _agda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_dafab.Timing = NewCT_SlideTiming()
				if _abafc := d.DecodeElement(_dafab.Timing, &_gedb); _abafc != nil {
					return _abafc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_dafab.Hf = NewCT_HeaderFooter()
				if _fbgc := d.DecodeElement(_dafab.Hf, &_gedb); _fbgc != nil {
					return _fbgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_dafab.TxStyles = NewCT_SlideMasterTextStyles()
				if _bbbf := d.DecodeElement(_dafab.TxStyles, &_gedb); _bbbf != nil {
					return _bbbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dafab.ExtLst = NewCT_ExtensionListModify()
				if _gadg := d.DecodeElement(_dafab.ExtLst, &_gedb); _gadg != nil {
					return _gadg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061s\u0074e\u0072\u0020\u0025\u0076", _gedb.Name)
				if _dabb := d.Skip(); _dabb != nil {
					return _dabb
				}
			}
		case _d.EndElement:
			break _fcbee
		case _d.CharData:
		}
	}
	return nil
}
func (_gfeag *CT_TLByAnimateColorTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gabfe:
	for {
		_face, _ecdef := d.Token()
		if _ecdef != nil {
			return _ecdef
		}
		switch _efba := _face.(type) {
		case _d.StartElement:
			switch _efba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0067\u0062"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062"}:
				_gfeag.Rgb = NewCT_TLByRgbColorTransform()
				if _faaed := d.DecodeElement(_gfeag.Rgb, &_efba); _faaed != nil {
					return _faaed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0073\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_gfeag.Hsl = NewCT_TLByHslColorTransform()
				if _fgccg := d.DecodeElement(_gfeag.Hsl, &_efba); _fgccg != nil {
					return _fgccg
				}
			default:
				_be.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043\u006f\u006co\u0072\u0054ra\u006e\u0073\u0066o\u0072\u006d\u0020\u0025\u0076", _efba.Name)
				if _baggf := d.Skip(); _baggf != nil {
					return _baggf
				}
			}
		case _d.EndElement:
			break _gabfe
		case _d.CharData:
		}
	}
	return nil
}

type ST_TLTimeNodeType byte

func (_cdadd ST_TLBehaviorAccumulateType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cdadd.String(), start)
}

// ValidateWithPath validates the CmLst and its children, prefixing error messages with path
func (_bfffa *CmLst) ValidateWithPath(path string) error {
	if _bffee := _bfffa.CT_CommentList.ValidateWithPath(path); _bffee != nil {
		return _bffee
	}
	return nil
}

// ValidateWithPath validates the CT_TLTextTargetElement and its children, prefixing error messages with path
func (_becf *CT_TLTextTargetElement) ValidateWithPath(path string) error {
	if _becf.CharRg != nil {
		if _dabdg := _becf.CharRg.ValidateWithPath(path + "\u002fC\u0068\u0061\u0072\u0052\u0067"); _dabdg != nil {
			return _dabdg
		}
	}
	if _becf.PRg != nil {
		if _abbeg := _becf.PRg.ValidateWithPath(path + "\u002f\u0050\u0052\u0067"); _abbeg != nil {
			return _abbeg
		}
	}
	return nil
}

// ST_TLTimeAnimateValueTime is a union type
type ST_TLTimeAnimateValueTime struct {
	ST_PositiveFixedPercentage *_c.ST_PositiveFixedPercentage
	ST_TLTimeIndefinite        ST_TLTimeIndefinite
}

func (_gecd *CT_NotesMasterIdListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _gecd.IdAttr)})
	e.EncodeToken(start)
	if _gecd.ExtLst != nil {
		_aefa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gecd.ExtLst, _aefa)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_CommentAuthor() *CT_CommentAuthor { _gcaa := &CT_CommentAuthor{}; return _gcaa }

type CT_StringTag struct {

	// Name
	NameAttr string

	// Value
	ValAttr string
}

func NewCT_Empty() *CT_Empty { _cddb := &CT_Empty{}; return _cddb }
func (_dagfc ST_TLBehaviorAdditiveType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dgcef := _d.Attr{}
	_dgcef.Name = name
	switch _dagfc {
	case ST_TLBehaviorAdditiveTypeUnset:
		_dgcef.Value = ""
	case ST_TLBehaviorAdditiveTypeBase:
		_dgcef.Value = "\u0062\u0061\u0073\u0065"
	case ST_TLBehaviorAdditiveTypeSum:
		_dgcef.Value = "\u0073\u0075\u006d"
	case ST_TLBehaviorAdditiveTypeRepl:
		_dgcef.Value = "\u0072\u0065\u0070\u006c"
	case ST_TLBehaviorAdditiveTypeMult:
		_dgcef.Value = "\u006d\u0075\u006c\u0074"
	case ST_TLBehaviorAdditiveTypeNone:
		_dgcef.Value = "\u006e\u006f\u006e\u0065"
	}
	return _dgcef, nil
}
func (_baae *ST_TLAnimateBehaviorValueType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_feabg, _bdcfc := d.Token()
	if _bdcfc != nil {
		return _bdcfc
	}
	if _edbd, _eaabg := _feabg.(_d.EndElement); _eaabg && _edbd.Name == start.Name {
		*_baae = 1
		return nil
	}
	if _gfccd, _adecf := _feabg.(_d.CharData); !_adecf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _feabg)
	} else {
		switch string(_gfccd) {
		case "":
			*_baae = 0
		case "\u0073\u0074\u0072":
			*_baae = 1
		case "\u006e\u0075\u006d":
			*_baae = 2
		case "\u0063\u006c\u0072":
			*_baae = 3
		}
	}
	_feabg, _bdcfc = d.Token()
	if _bdcfc != nil {
		return _bdcfc
	}
	if _bdabe, _aeea := _feabg.(_d.EndElement); _aeea && _bdabe.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _feabg)
}
func (_abbcb *CT_SlideSize) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0078"}, Value: _b.Sprintf("\u0025\u0076", _abbcb.CxAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0079"}, Value: _b.Sprintf("\u0025\u0076", _abbcb.CyAttr)})
	if _abbcb.TypeAttr != ST_SlideSizeTypeUnset {
		_cfgdb, _abcc := _abbcb.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _abcc != nil {
			return _abcc
		}
		start.Attr = append(start.Attr, _cfgdb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bcaca *ST_WebColorType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bcaca = 0
	case "\u006e\u006f\u006e\u0065":
		*_bcaca = 1
	case "\u0062r\u006f\u0077\u0073\u0065\u0072":
		*_bcaca = 2
	case "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_bcaca = 3
	case "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074":
		*_bcaca = 4
	case "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b":
		*_bcaca = 5
	case "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065":
		*_bcaca = 6
	}
	return nil
}
func (_dafaa ST_TLTimeNodePresetClassType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dafaa.String(), start)
}
func NewCT_SlideRelationshipListEntry() *CT_SlideRelationshipListEntry {
	_cefg := &CT_SlideRelationshipListEntry{}
	return _cefg
}
func (_geeda ST_TLAnimateBehaviorCalcMode) Validate() error { return _geeda.ValidateWithPath("") }

// Validate validates the CT_ExtensionList and its children
func (_daeg *CT_ExtensionList) Validate() error {
	return _daeg.ValidateWithPath("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}
func (_bfdaf *CT_SplitTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bfdaf.OrientAttr != ST_DirectionUnset {
		_fbdb, _dfeff := _bfdaf.OrientAttr.MarshalXMLAttr(_d.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _dfeff != nil {
			return _dfeff
		}
		start.Attr = append(start.Attr, _fbdb)
	}
	if _bfdaf.DirAttr != ST_TransitionInOutDirectionTypeUnset {
		_fgacb, _cddec := _bfdaf.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
		if _cddec != nil {
			return _cddec
		}
		start.Attr = append(start.Attr, _fgacb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ShowInfoBrowse and its children, prefixing error messages with path
func (_daecg *CT_ShowInfoBrowse) ValidateWithPath(path string) error { return nil }
func (_ebbd *CT_Control) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ebbd.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ebbd.SpidAttr)})
	}
	if _ebbd.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ebbd.NameAttr)})
	}
	if _ebbd.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ebbd.ShowAsIconAttr))})
	}
	if _ebbd.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ebbd.IdAttr)})
	}
	if _ebbd.ImgWAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _b.Sprintf("\u0025\u0076", *_ebbd.ImgWAttr)})
	}
	if _ebbd.ImgHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _b.Sprintf("\u0025\u0076", *_ebbd.ImgHAttr)})
	}
	e.EncodeToken(start)
	if _ebbd.ExtLst != nil {
		_fac := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ebbd.ExtLst, _fac)
	}
	if _ebbd.Pic != nil {
		_dceebb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_ebbd.Pic, _dceebb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gbdca ST_TransitionInOutDirectionType) String() string {
	switch _gbdca {
	case 0:
		return ""
	case 1:
		return "\u006f\u0075\u0074"
	case 2:
		return "\u0069\u006e"
	}
	return ""
}

const (
	ST_WebColorTypeUnset              ST_WebColorType = 0
	ST_WebColorTypeNone               ST_WebColorType = 1
	ST_WebColorTypeBrowser            ST_WebColorType = 2
	ST_WebColorTypePresentationText   ST_WebColorType = 3
	ST_WebColorTypePresentationAccent ST_WebColorType = 4
	ST_WebColorTypeWhiteTextOnBlack   ST_WebColorType = 5
	ST_WebColorTypeBlackTextOnWhite   ST_WebColorType = 6
)

func (_gbdc *CT_Extension) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0072\u0069"}, Value: _b.Sprintf("\u0025\u0076", _gbdc.UriAttr)})
	e.EncodeToken(start)
	if _gbdc.Any != nil {
		for _, _gdeb := range _gbdc.Any {
			_gdeb.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_IndexRange struct {

	// Start
	StAttr uint32

	// End
	EndAttr uint32
}

func NewCT_TLCommonBehaviorData() *CT_TLCommonBehaviorData {
	_afabc := &CT_TLCommonBehaviorData{}
	_afabc.CTn = NewCT_TLCommonTimeNodeData()
	_afabc.TgtEl = NewCT_TLTimeTargetElement()
	return _afabc
}
func (_bagee *CT_TLTimeTargetElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bagee.SldTgt != nil {
		_bcbgg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0054\u0067\u0074"}}
		e.EncodeElement(_bagee.SldTgt, _bcbgg)
	}
	if _bagee.SndTgt != nil {
		_fbcdg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006e\u0064\u0054\u0067\u0074"}}
		e.EncodeElement(_bagee.SndTgt, _fbcdg)
	}
	if _bagee.SpTgt != nil {
		_cedc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0070\u0054\u0067\u0074"}}
		e.EncodeElement(_bagee.SpTgt, _cedc)
	}
	if _bagee.InkTgt != nil {
		_acggd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0069\u006e\u006b\u0054\u0067\u0074"}}
		e.EncodeElement(_bagee.InkTgt, _acggd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_ExtensionListModify() *CT_ExtensionListModify {
	_egef := &CT_ExtensionListModify{}
	return _egef
}

const (
	ST_TLChartSubelementTypeUnset        ST_TLChartSubelementType = 0
	ST_TLChartSubelementTypeGridLegend   ST_TLChartSubelementType = 1
	ST_TLChartSubelementTypeSeries       ST_TLChartSubelementType = 2
	ST_TLChartSubelementTypeCategory     ST_TLChartSubelementType = 3
	ST_TLChartSubelementTypePtInSeries   ST_TLChartSubelementType = 4
	ST_TLChartSubelementTypePtInCategory ST_TLChartSubelementType = 5
)

func (_edba ST_SplitterBarState) ValidateWithPath(path string) error {
	switch _edba {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_edba))
	}
	return nil
}
func (_egcf *CT_ShowProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bacfc := range start.Attr {
		if _bacfc.Name.Local == "\u006c\u006f\u006f\u0070" {
			_abcg, _baegd := _ag.ParseBool(_bacfc.Value)
			if _baegd != nil {
				return _baegd
			}
			_egcf.LoopAttr = &_abcg
			continue
		}
		if _bacfc.Name.Local == "\u0073\u0068\u006f\u0077\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e" {
			_cedbg, _bdbe := _ag.ParseBool(_bacfc.Value)
			if _bdbe != nil {
				return _bdbe
			}
			_egcf.ShowNarrationAttr = &_cedbg
			continue
		}
		if _bacfc.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e" {
			_edec, _bdgb := _ag.ParseBool(_bacfc.Value)
			if _bdgb != nil {
				return _bdgb
			}
			_egcf.ShowAnimationAttr = &_edec
			continue
		}
		if _bacfc.Name.Local == "\u0075\u0073\u0065\u0054\u0069\u006d\u0069\u006e\u0067\u0073" {
			_caeb, _gaab := _ag.ParseBool(_bacfc.Value)
			if _gaab != nil {
				return _gaab
			}
			_egcf.UseTimingsAttr = &_caeb
			continue
		}
	}
_bedaf:
	for {
		_bfgcg, _gcagg := d.Token()
		if _gcagg != nil {
			return _gcagg
		}
		switch _bgad := _bfgcg.(type) {
		case _d.StartElement:
			switch _bgad.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
				_egcf.Present = NewCT_Empty()
				if _cddg := d.DecodeElement(_egcf.Present, &_bgad); _cddg != nil {
					return _cddg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
				_egcf.Browse = NewCT_ShowInfoBrowse()
				if _agec := d.DecodeElement(_egcf.Browse, &_bgad); _agec != nil {
					return _agec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
				_egcf.Kiosk = NewCT_ShowInfoKiosk()
				if _gecdc := d.DecodeElement(_egcf.Kiosk, &_bgad); _gecdc != nil {
					return _gecdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_egcf.SldAll = NewCT_Empty()
				if _cfaf := d.DecodeElement(_egcf.SldAll, &_bgad); _cfaf != nil {
					return _cfaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_egcf.SldRg = NewCT_IndexRange()
				if _aeed := d.DecodeElement(_egcf.SldRg, &_bgad); _aeed != nil {
					return _aeed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_egcf.CustShow = NewCT_CustomShowId()
				if _dgfc := d.DecodeElement(_egcf.CustShow, &_bgad); _dgfc != nil {
					return _dgfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0065\u006e\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0065\u006e\u0043\u006c\u0072"}:
				_egcf.PenClr = _c.NewCT_Color()
				if _bbca := d.DecodeElement(_egcf.PenClr, &_bgad); _bbca != nil {
					return _bbca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egcf.ExtLst = NewCT_ExtensionList()
				if _cfgbc := d.DecodeElement(_egcf.ExtLst, &_bgad); _cfgbc != nil {
					return _cfgbc
				}
			default:
				_be.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bgad.Name)
				if _gebcb := d.Skip(); _gebcb != nil {
					return _gebcb
				}
			}
		case _d.EndElement:
			break _bedaf
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_PhotoAlbum() *CT_PhotoAlbum                     { _dfab := &CT_PhotoAlbum{}; return _dfab }
func (_cgega ST_TLTimeNodeMasterRelation) Validate() error { return _cgega.ValidateWithPath("") }
func NewEG_SlideListChoice() *EG_SlideListChoice           { _ccffe := &EG_SlideListChoice{}; return _ccffe }

type CT_NotesViewProperties struct {

	// Common Slide View Properties
	CSldViewPr *CT_CommonSlideViewProperties
	ExtLst     *CT_ExtensionList
}

func (_accf ST_SplitterBarState) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_eecde := _d.Attr{}
	_eecde.Name = name
	switch _accf {
	case ST_SplitterBarStateUnset:
		_eecde.Value = ""
	case ST_SplitterBarStateMinimized:
		_eecde.Value = "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"
	case ST_SplitterBarStateRestored:
		_eecde.Value = "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064"
	case ST_SplitterBarStateMaximized:
		_eecde.Value = "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"
	}
	return _eecde, nil
}

// Validate validates the CT_HandoutMasterIdListEntry and its children
func (_fbgd *CT_HandoutMasterIdListEntry) Validate() error {
	return _fbgd.ValidateWithPath("C\u0054\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049d\u004c\u0069\u0073t\u0045n\u0074\u0072\u0079")
}
func NewCT_ShapeNonVisual() *CT_ShapeNonVisual {
	_abdgba := &CT_ShapeNonVisual{}
	_abdgba.CNvPr = _c.NewCT_NonVisualDrawingProps()
	_abdgba.CNvSpPr = _c.NewCT_NonVisualDrawingShapeProps()
	_abdgba.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _abdgba
}
func (_fdaea ST_Direction) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fdaea.String(), start)
}

// ValidateWithPath validates the CT_TLByAnimateColorTransform and its children, prefixing error messages with path
func (_fbfdg *CT_TLByAnimateColorTransform) ValidateWithPath(path string) error {
	if _fbfdg.Rgb != nil {
		if _bdfd := _fbfdg.Rgb.ValidateWithPath(path + "\u002f\u0052\u0067\u0062"); _bdfd != nil {
			return _bdfd
		}
	}
	if _fbfdg.Hsl != nil {
		if _adede := _fbfdg.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _adede != nil {
			return _adede
		}
	}
	return nil
}

type ST_TLTriggerRuntimeNode byte

func NewCT_EmbeddedFontDataId() *CT_EmbeddedFontDataId {
	_cdgda := &CT_EmbeddedFontDataId{}
	return _cdgda
}
func (_fdbc *CT_Rel) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dcge := range start.Attr {
		if _dcge.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dcge.Name.Local == "\u0069\u0064" || _dcge.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dcge.Name.Local == "\u0069\u0064" {
			_aaddd, _dafed := _dcge.Value, error(nil)
			if _dafed != nil {
				return _dafed
			}
			_fdbc.IdAttr = _aaddd
			continue
		}
	}
	for {
		_ceag, _abfgb := d.Token()
		if _abfgb != nil {
			return _b.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073", _abfgb)
		}
		if _faccb, _cbbfb := _ceag.(_d.EndElement); _cbbfb && _faccb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_PrintProperties and its children
func (_caaca *CT_PrintProperties) Validate() error {
	return _caaca.ValidateWithPath("\u0043T\u005fP\u0072\u0069\u006e\u0074\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

type CT_NotesMasterIdList struct {

	// Notes Master ID
	NotesMasterId *CT_NotesMasterIdListEntry
}

func (_fedeb *SldLayout) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fedeb.CT_SlideLayout = *NewCT_SlideLayout()
	for _, _edgde := range start.Attr {
		if _edgde.Name.Local == "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_ecacc, _daga := _edgde.Value, error(nil)
			if _daga != nil {
				return _daga
			}
			_fedeb.MatchingNameAttr = &_ecacc
			continue
		}
		if _edgde.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fedeb.TypeAttr.UnmarshalXMLAttr(_edgde)
			continue
		}
		if _edgde.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_aebba, _bbbad := _ag.ParseBool(_edgde.Value)
			if _bbbad != nil {
				return _bbbad
			}
			_fedeb.PreserveAttr = &_aebba
			continue
		}
		if _edgde.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_ccacd, _fggef := _ag.ParseBool(_edgde.Value)
			if _fggef != nil {
				return _fggef
			}
			_fedeb.UserDrawnAttr = &_ccacd
			continue
		}
		if _edgde.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_bbad, _caebd := _ag.ParseBool(_edgde.Value)
			if _caebd != nil {
				return _caebd
			}
			_fedeb.ShowMasterSpAttr = &_bbad
			continue
		}
		if _edgde.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_agaba, _cdae := _ag.ParseBool(_edgde.Value)
			if _cdae != nil {
				return _cdae
			}
			_fedeb.ShowMasterPhAnimAttr = &_agaba
			continue
		}
	}
_fgda:
	for {
		_bggg, _cbfd := d.Token()
		if _cbfd != nil {
			return _cbfd
		}
		switch _fbgeg := _bggg.(type) {
		case _d.StartElement:
			switch _fbgeg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _fgcbb := d.DecodeElement(_fedeb.CSld, &_fbgeg); _fgcbb != nil {
					return _fgcbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_fedeb.ClrMapOvr = _c.NewCT_ColorMappingOverride()
				if _eafac := d.DecodeElement(_fedeb.ClrMapOvr, &_fbgeg); _eafac != nil {
					return _eafac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_fedeb.Transition = NewCT_SlideTransition()
				if _fcfeg := d.DecodeElement(_fedeb.Transition, &_fbgeg); _fcfeg != nil {
					return _fcfeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_fedeb.Timing = NewCT_SlideTiming()
				if _acbb := d.DecodeElement(_fedeb.Timing, &_fbgeg); _acbb != nil {
					return _acbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_fedeb.Hf = NewCT_HeaderFooter()
				if _beacc := d.DecodeElement(_fedeb.Hf, &_fbgeg); _beacc != nil {
					return _beacc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fedeb.ExtLst = NewCT_ExtensionListModify()
				if _cgaag := d.DecodeElement(_fedeb.ExtLst, &_fbgeg); _cgaag != nil {
					return _cgaag
				}
			default:
				_be.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u004c\u0061\u0079o\u0075\u0074 \u0025\u0076", _fbgeg.Name)
				if _cebcb := d.Skip(); _cebcb != nil {
					return _cebcb
				}
			}
		case _d.EndElement:
			break _fgda
		case _d.CharData:
		}
	}
	return nil
}
func (_af *CT_Background) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _af.BwModeAttr != _c.ST_BlackWhiteModeUnset {
		_ade, _bef := _af.BwModeAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u003a\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _bef != nil {
			return _bef
		}
		start.Attr = append(start.Attr, _ade)
	}
	e.EncodeToken(start)
	if _af.BgPr != nil {
		_dbdc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0067\u0050\u0072"}}
		e.EncodeElement(_af.BgPr, _dbdc)
	}
	if _af.BgRef != nil {
		_agff := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0062\u0067\u0052\u0065\u0066"}}
		e.EncodeElement(_af.BgRef, _agff)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_NormalViewPortion struct {

	// Normal View Dimension Size
	SzAttr _c.ST_PositiveFixedPercentage

	// Auto Adjust Normal View
	AutoAdjustAttr *bool
}

// Validate validates the CT_TLTimeNodeExclusive and its children
func (_ccbed *CT_TLTimeNodeExclusive) Validate() error {
	return _ccbed.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069v\u0065")
}
func (_abadc *CT_NotesMasterIdList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_egcg:
	for {
		_fgegb, _gega := d.Token()
		if _gega != nil {
			return _gega
		}
		switch _bfdgc := _fgegb.(type) {
		case _d.StartElement:
			switch _bfdgc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_abadc.NotesMasterId = NewCT_NotesMasterIdListEntry()
				if _aaede := d.DecodeElement(_abadc.NotesMasterId, &_bfdgc); _aaede != nil {
					return _aaede
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bfdgc.Name)
				if _bdbb := d.Skip(); _bdbb != nil {
					return _bdbb
				}
			}
		case _d.EndElement:
			break _egcg
		case _d.CharData:
		}
	}
	return nil
}

type CT_TimeNodeList struct {

	// Parallel Time Node
	Par []*CT_TLTimeNodeParallel

	// Sequence Time Node
	Seq []*CT_TLTimeNodeSequence

	// Exclusive
	Excl []*CT_TLTimeNodeExclusive

	// Animate
	Anim []*CT_TLAnimateBehavior

	// Animate Color Behavior
	AnimClr []*CT_TLAnimateColorBehavior

	// Animate Effect
	AnimEffect []*CT_TLAnimateEffectBehavior

	// Animate Motion
	AnimMotion []*CT_TLAnimateMotionBehavior

	// Animate Rotation
	AnimRot []*CT_TLAnimateRotationBehavior

	// Animate Scale
	AnimScale []*CT_TLAnimateScaleBehavior

	// Command
	Cmd []*CT_TLCommandBehavior

	// Set Time Node Behavior
	Set []*CT_TLSetBehavior

	// Audio
	Audio []*CT_TLMediaNodeAudio

	// Video
	Video []*CT_TLMediaNodeVideo
}

func NewCT_TLGraphicalObjectBuild() *CT_TLGraphicalObjectBuild {
	_feff := &CT_TLGraphicalObjectBuild{}
	return _feff
}
func (_gegd *CT_TLAnimateBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gegd.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _debc := range start.Attr {
		if _debc.Name.Local == "\u0062\u0079" {
			_dcecef, _gbcba := _debc.Value, error(nil)
			if _gbcba != nil {
				return _gbcba
			}
			_gegd.ByAttr = &_dcecef
			continue
		}
		if _debc.Name.Local == "\u0066\u0072\u006f\u006d" {
			_bgbd, _gfbe := _debc.Value, error(nil)
			if _gfbe != nil {
				return _gfbe
			}
			_gegd.FromAttr = &_bgbd
			continue
		}
		if _debc.Name.Local == "\u0074\u006f" {
			_ebaf, _cfea := _debc.Value, error(nil)
			if _cfea != nil {
				return _cfea
			}
			_gegd.ToAttr = &_ebaf
			continue
		}
		if _debc.Name.Local == "\u0063\u0061\u006c\u0063\u006d\u006f\u0064\u0065" {
			_gegd.CalcmodeAttr.UnmarshalXMLAttr(_debc)
			continue
		}
		if _debc.Name.Local == "\u0076a\u006c\u0075\u0065\u0054\u0079\u0070e" {
			_gegd.ValueTypeAttr.UnmarshalXMLAttr(_debc)
			continue
		}
	}
_agagb:
	for {
		_dcbcc, _edbe := d.Token()
		if _edbe != nil {
			return _edbe
		}
		switch _gabfa := _dcbcc.(type) {
		case _d.StartElement:
			switch _gabfa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _deee := d.DecodeElement(_gegd.CBhvr, &_gabfa); _deee != nil {
					return _deee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0076\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0076\u004c\u0073\u0074"}:
				_gegd.TavLst = NewCT_TLTimeAnimateValueList()
				if _dfabc := d.DecodeElement(_gegd.TavLst, &_gabfa); _dfabc != nil {
					return _dfabc
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _gabfa.Name)
				if _eceg := d.Skip(); _eceg != nil {
					return _eceg
				}
			}
		case _d.EndElement:
			break _agagb
		case _d.CharData:
		}
	}
	return nil
}
func (_ggga ST_TLTimeIndefinite) Validate() error { return _ggga.ValidateWithPath("") }
func (_ecega ST_PlaceholderSize) ValidateWithPath(path string) error {
	switch _ecega {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecega))
	}
	return nil
}

const (
	ST_TLBehaviorAccumulateTypeUnset  ST_TLBehaviorAccumulateType = 0
	ST_TLBehaviorAccumulateTypeNone   ST_TLBehaviorAccumulateType = 1
	ST_TLBehaviorAccumulateTypeAlways ST_TLBehaviorAccumulateType = 2
)

func (_dace *CT_TLTimeConditionList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_agdbb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0064"}}
	for _, _aecg := range _dace.Cond {
		e.EncodeElement(_aecg, _agdbb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_Placeholder() *CT_Placeholder { _eabd := &CT_Placeholder{}; return _eabd }
func (_cgadf ST_TransitionInOutDirectionType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gdga := _d.Attr{}
	_gdga.Name = name
	switch _cgadf {
	case ST_TransitionInOutDirectionTypeUnset:
		_gdga.Value = ""
	case ST_TransitionInOutDirectionTypeOut:
		_gdga.Value = "\u006f\u0075\u0074"
	case ST_TransitionInOutDirectionTypeIn:
		_gdga.Value = "\u0069\u006e"
	}
	return _gdga, nil
}
func (_cedda *ST_TLDiagramBuildType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cedda = 0
	case "\u0077\u0068\u006fl\u0065":
		*_cedda = 1
	case "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
		*_cedda = 2
	case "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068":
		*_cedda = 3
	case "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
		*_cedda = 4
	case "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c":
		*_cedda = 5
	case "\u0063\u0077":
		*_cedda = 6
	case "\u0063\u0077\u0049\u006e":
		*_cedda = 7
	case "\u0063\u0077\u004fu\u0074":
		*_cedda = 8
	case "\u0063\u0063\u0077":
		*_cedda = 9
	case "\u0063\u0063\u0077I\u006e":
		*_cedda = 10
	case "\u0063\u0063\u0077\u004f\u0075\u0074":
		*_cedda = 11
	case "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067":
		*_cedda = 12
	case "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg":
		*_cedda = 13
	case "\u0075\u0070":
		*_cedda = 14
	case "\u0064\u006f\u0077\u006e":
		*_cedda = 15
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_cedda = 16
	case "\u0063\u0075\u0073\u0074":
		*_cedda = 17
	}
	return nil
}
func (_befe *CT_BuildList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _befe.BldP != nil {
		_egb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0050"}}
		for _, _gfg := range _befe.BldP {
			e.EncodeElement(_gfg, _egb)
		}
	}
	if _befe.BldDgm != nil {
		_bddf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0044\u0067\u006d"}}
		for _, _gbdd := range _befe.BldDgm {
			e.EncodeElement(_gbdd, _bddf)
		}
	}
	if _befe.BldOleChart != nil {
		_ecc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}}
		for _, _bddd := range _befe.BldOleChart {
			e.EncodeElement(_bddd, _ecc)
		}
	}
	if _befe.BldGraphic != nil {
		_caad := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062l\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}}
		for _, _ffcg := range _befe.BldGraphic {
			e.EncodeElement(_ffcg, _caad)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLAnimVariantIntegerVal() *CT_TLAnimVariantIntegerVal {
	_aagda := &CT_TLAnimVariantIntegerVal{}
	return _aagda
}
func (_fdac ST_TLAnimateMotionBehaviorOrigin) ValidateWithPath(path string) error {
	switch _fdac {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdac))
	}
	return nil
}
func (_ec *AG_TLBuild) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _acg := range start.Attr {
		if _acg.Name.Local == "\u0073\u0070\u0069\u0064" {
			_dab, _ceb := _ag.ParseUint(_acg.Value, 10, 32)
			if _ceb != nil {
				return _ceb
			}
			_gae := uint32(_dab)
			_ec.SpidAttr = &_gae
			continue
		}
		if _acg.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_ef, _ceg := _ag.ParseUint(_acg.Value, 10, 32)
			if _ceg != nil {
				return _ceg
			}
			_dd := uint32(_ef)
			_ec.GrpIdAttr = &_dd
			continue
		}
		if _acg.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_ed, _dcb := _ag.ParseBool(_acg.Value)
			if _dcb != nil {
				return _dcb
			}
			_ec.UiExpandAttr = &_ed
			continue
		}
	}
	for {
		_gbc, _bed := d.Token()
		if _bed != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u003a\u0020%\u0073", _bed)
		}
		if _bd, _ea := _gbc.(_d.EndElement); _ea && _bd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gefef ST_TLTimeNodePresetClassType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cgfc := _d.Attr{}
	_cgfc.Name = name
	switch _gefef {
	case ST_TLTimeNodePresetClassTypeUnset:
		_cgfc.Value = ""
	case ST_TLTimeNodePresetClassTypeEntr:
		_cgfc.Value = "\u0065\u006e\u0074\u0072"
	case ST_TLTimeNodePresetClassTypeExit:
		_cgfc.Value = "\u0065\u0078\u0069\u0074"
	case ST_TLTimeNodePresetClassTypeEmph:
		_cgfc.Value = "\u0065\u006d\u0070\u0068"
	case ST_TLTimeNodePresetClassTypePath:
		_cgfc.Value = "\u0070\u0061\u0074\u0068"
	case ST_TLTimeNodePresetClassTypeVerb:
		_cgfc.Value = "\u0076\u0065\u0072\u0062"
	case ST_TLTimeNodePresetClassTypeMediacall:
		_cgfc.Value = "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl"
	}
	return _cgfc, nil
}
func (_efca *CT_OleObjectChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cgdeb:
	for {
		_gbdb, _bbc := d.Token()
		if _bbc != nil {
			return _bbc
		}
		switch _aeec := _gbdb.(type) {
		case _d.StartElement:
			switch _aeec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_efca.Embed = NewCT_OleObjectEmbed()
				if _eedea := d.DecodeElement(_efca.Embed, &_aeec); _eedea != nil {
					return _eedea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_efca.Link = NewCT_OleObjectLink()
				if _gebg := d.DecodeElement(_efca.Link, &_aeec); _gebg != nil {
					return _gebg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _aeec.Name)
				if _efafb := d.Skip(); _efafb != nil {
					return _efafb
				}
			}
		case _d.EndElement:
			break _cgdeb
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLSubShapeId struct {

	// Shape ID
	SpidAttr string
}

func NewCT_SlideLayoutIdList() *CT_SlideLayoutIdList { _fbga := &CT_SlideLayoutIdList{}; return _fbga }
func (_gbdaa *ST_OleObjectFollowColorScheme) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbecc, _bbfgc := d.Token()
	if _bbfgc != nil {
		return _bbfgc
	}
	if _edbfd, _afcd := _dbecc.(_d.EndElement); _afcd && _edbfd.Name == start.Name {
		*_gbdaa = 1
		return nil
	}
	if _abebe, _bafcad := _dbecc.(_d.CharData); !_bafcad {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbecc)
	} else {
		switch string(_abebe) {
		case "":
			*_gbdaa = 0
		case "\u006e\u006f\u006e\u0065":
			*_gbdaa = 1
		case "\u0066\u0075\u006c\u006c":
			*_gbdaa = 2
		case "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064":
			*_gbdaa = 3
		}
	}
	_dbecc, _bbfgc = d.Token()
	if _bbfgc != nil {
		return _bbfgc
	}
	if _bdcbd, _bbffd := _dbecc.(_d.EndElement); _bbffd && _bdcbd.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbecc)
}
func NewCT_TLAnimVariantStringVal() *CT_TLAnimVariantStringVal {
	_fade := &CT_TLAnimVariantStringVal{}
	return _fade
}
func (_ddcgc *TagLst) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ddcgc.CT_TagList = *NewCT_TagList()
_aaedb:
	for {
		_afbe, _eddd := d.Token()
		if _eddd != nil {
			return _eddd
		}
		switch _bgdea := _afbe.(type) {
		case _d.StartElement:
			switch _bgdea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067"}:
				_cddcc := NewCT_StringTag()
				if _dddga := d.DecodeElement(_cddcc, &_bgdea); _dddga != nil {
					return _dddga
				}
				_ddcgc.Tag = append(_ddcgc.Tag, _cddcc)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0061\u0067\u004c\u0073\u0074\u0020\u0025\u0076", _bgdea.Name)
				if _acaae := d.Skip(); _acaae != nil {
					return _acaae
				}
			}
		case _d.EndElement:
			break _aaedb
		case _d.CharData:
		}
	}
	return nil
}
func (_bcead ST_TLTimeNodeMasterRelation) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_acgcda := _d.Attr{}
	_acgcda.Name = name
	switch _bcead {
	case ST_TLTimeNodeMasterRelationUnset:
		_acgcda.Value = ""
	case ST_TLTimeNodeMasterRelationSameClick:
		_acgcda.Value = "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k"
	case ST_TLTimeNodeMasterRelationLastClick:
		_acgcda.Value = "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k"
	case ST_TLTimeNodeMasterRelationNextClick:
		_acgcda.Value = "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k"
	}
	return _acgcda, nil
}
func (_gecbg *ST_TLAnimateColorSpace) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gecbg = 0
	case "\u0072\u0067\u0062":
		*_gecbg = 1
	case "\u0068\u0073\u006c":
		*_gecbg = 2
	}
	return nil
}
func (_bddfg *EG_Background) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gcfef:
	for {
		_gcbae, _ededa := d.Token()
		if _ededa != nil {
			return _ededa
		}
		switch _efede := _gcbae.(type) {
		case _d.StartElement:
			switch _efede.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
				_bddfg.BgPr = NewCT_BackgroundProperties()
				if _dcfde := d.DecodeElement(_bddfg.BgPr, &_efede); _dcfde != nil {
					return _dcfde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
				_bddfg.BgRef = _c.NewCT_StyleMatrixReference()
				if _bbfda := d.DecodeElement(_bddfg.BgRef, &_efede); _bbfda != nil {
					return _bbfda
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0042a\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064 \u0025\u0076", _efede.Name)
				if _geada := d.Skip(); _geada != nil {
					return _geada
				}
			}
		case _d.EndElement:
			break _gcfef
		case _d.CharData:
		}
	}
	return nil
}
func (_bbeeg *ST_TLChartSubelementType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bbeeg = 0
	case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
		*_bbeeg = 1
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_bbeeg = 2
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_bbeeg = 3
	case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
		*_bbeeg = 4
	case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_bbeeg = 5
	}
	return nil
}
func (_fgbab *ST_WebColorType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fgfb, _adbag := d.Token()
	if _adbag != nil {
		return _adbag
	}
	if _gfegc, _becd := _fgfb.(_d.EndElement); _becd && _gfegc.Name == start.Name {
		*_fgbab = 1
		return nil
	}
	if _ffga, _abgff := _fgfb.(_d.CharData); !_abgff {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgfb)
	} else {
		switch string(_ffga) {
		case "":
			*_fgbab = 0
		case "\u006e\u006f\u006e\u0065":
			*_fgbab = 1
		case "\u0062r\u006f\u0077\u0073\u0065\u0072":
			*_fgbab = 2
		case "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_fgbab = 3
		case "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074":
			*_fgbab = 4
		case "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b":
			*_fgbab = 5
		case "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065":
			*_fgbab = 6
		}
	}
	_fgfb, _adbag = d.Token()
	if _adbag != nil {
		return _adbag
	}
	if _ddecf, _gcgdae := _fgfb.(_d.EndElement); _gcgdae && _ddecf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgfb)
}
func (_bdcd *CT_TLTimeNodeParallel) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bdcd.CTn = NewCT_TLCommonTimeNodeData()
_dbegdf:
	for {
		_dceed, _aaecb := d.Token()
		if _aaecb != nil {
			return _aaecb
		}
		switch _dgfgc := _dceed.(type) {
		case _d.StartElement:
			switch _dgfgc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _eaag := d.DecodeElement(_bdcd.CTn, &_dgfgc); _eaag != nil {
					return _eaag
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0050\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u0020\u0025\u0076", _dgfgc.Name)
				if _beege := d.Skip(); _beege != nil {
					return _beege
				}
			}
		case _d.EndElement:
			break _dbegdf
		case _d.CharData:
		}
	}
	return nil
}

type CT_Connector struct {

	// Non-Visual Properties for a Connection Shape
	NvCxnSpPr *CT_ConnectorNonVisual

	// Shape Properties
	SpPr *_c.CT_ShapeProperties

	// Connector Shape Style
	Style  *_c.CT_ShapeStyle
	ExtLst *CT_ExtensionListModify
}
type CT_Shape struct {

	// Use Background Fill
	UseBgFillAttr *bool

	// Non-Visual Properties for a Shape
	NvSpPr *CT_ShapeNonVisual
	SpPr   *_c.CT_ShapeProperties

	// Shape Style
	Style *_c.CT_ShapeStyle

	// Shape Text Body
	TxBody *_c.CT_TextBody
	ExtLst *CT_ExtensionListModify
}

func (_cbfb *CT_ExtensionList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cgaf:
	for {
		_deca, _dgag := d.Token()
		if _dgag != nil {
			return _dgag
		}
		switch _dgc := _deca.(type) {
		case _d.StartElement:
			switch _dgc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_acab := NewCT_Extension()
				if _ebe := d.DecodeElement(_acab, &_dgc); _ebe != nil {
					return _ebe
				}
				_cbfb.Ext = append(_cbfb.Ext, _acab)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _dgc.Name)
				if _gfeaf := d.Skip(); _gfeaf != nil {
					return _gfeaf
				}
			}
		case _d.EndElement:
			break _cgaf
		case _d.CharData:
		}
	}
	return nil
}
func (_faffa ST_TLTimeNodeSyncType) ValidateWithPath(path string) error {
	switch _faffa {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_faffa))
	}
	return nil
}
func (_dddab *ST_TransitionInOutDirectionType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dddab = 0
	case "\u006f\u0075\u0074":
		*_dddab = 1
	case "\u0069\u006e":
		*_dddab = 2
	}
	return nil
}
func (_badga *CT_TLSetBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_fdbbg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_badga.CBhvr, _fdbbg)
	if _badga.To != nil {
		_bgdc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_badga.To, _bgdc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cbgaa ST_TLOleChartBuildType) String() string {
	switch _cbgaa {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 2:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 3:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 4:
		return "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case 5:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return ""
}

// Validate validates the CT_TLTemplateList and its children
func (_cebb *CT_TLTemplateList) Validate() error {
	return _cebb.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u004c\u0069\u0073\u0074")
}
func (_daege ST_TransitionCornerDirectionType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_daege.String(), start)
}
func (_gcdaf *CT_Connector) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_fbce := _d.StartElement{Name: _d.Name{Local: "p\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_gcdaf.NvCxnSpPr, _fbce)
	_egbc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_gcdaf.SpPr, _egbc)
	if _gcdaf.Style != nil {
		_dbb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_gcdaf.Style, _dbb)
	}
	if _gcdaf.ExtLst != nil {
		_gaaf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gcdaf.ExtLst, _gaaf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_becfe ST_IterateType) Validate() error { return _becfe.ValidateWithPath("") }

type CT_SlideSize struct {

	// Extent Length
	CxAttr int32

	// Extent Width
	CyAttr int32

	// Type of Size
	TypeAttr ST_SlideSizeType
}

func (_ecede *ST_TLBehaviorAdditiveType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_deggb, _cfffd := d.Token()
	if _cfffd != nil {
		return _cfffd
	}
	if _ddddc, _abafb := _deggb.(_d.EndElement); _abafb && _ddddc.Name == start.Name {
		*_ecede = 1
		return nil
	}
	if _bcbgcc, _efda := _deggb.(_d.CharData); !_efda {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _deggb)
	} else {
		switch string(_bcbgcc) {
		case "":
			*_ecede = 0
		case "\u0062\u0061\u0073\u0065":
			*_ecede = 1
		case "\u0073\u0075\u006d":
			*_ecede = 2
		case "\u0072\u0065\u0070\u006c":
			*_ecede = 3
		case "\u006d\u0075\u006c\u0074":
			*_ecede = 4
		case "\u006e\u006f\u006e\u0065":
			*_ecede = 5
		}
	}
	_deggb, _cfffd = d.Token()
	if _cfffd != nil {
		return _cfffd
	}
	if _ecbfg, _gggg := _deggb.(_d.EndElement); _gggg && _ecbfg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _deggb)
}

type CT_TLByHslColorTransform struct {

	// Hue
	HAttr int32

	// Saturation
	SAttr _c.ST_FixedPercentage

	// Lightness
	LAttr _c.ST_FixedPercentage
}

func (_dafd *CT_GraphicalObjectFrame) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dafd.BwModeAttr != _c.ST_BlackWhiteModeUnset {
		_bbaa, _dbdg := _dafd.BwModeAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u003a\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _dbdg != nil {
			return _dbdg
		}
		start.Attr = append(start.Attr, _bbaa)
	}
	e.EncodeToken(start)
	_gbcb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_dafd.NvGraphicFramePr, _gbcb)
	_fce := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_dafd.Xfrm, _fce)
	_egg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	_egg.Attr = append(_egg.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	e.EncodeElement(_dafd.Graphic, _egg)
	if _dafd.ExtLst != nil {
		_bcaec := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dafd.ExtLst, _bcaec)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_CustomerData struct{ IdAttr string }
type CT_TLTimeAnimateValueList struct {

	// Time Animate Value
	Tav []*CT_TLTimeAnimateValue
}
type CT_PictureNonVisual struct {
	CNvPr *_c.CT_NonVisualDrawingProps

	// Non-Visual Picture Drawing Properties
	CNvPicPr *_c.CT_NonVisualPictureProperties
	NvPr     *CT_ApplicationNonVisualDrawingProps
}

func (_gceaa *ST_TLNextActionType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bgeda, _ccfbd := d.Token()
	if _ccfbd != nil {
		return _ccfbd
	}
	if _cgfbf, _bbggf := _bgeda.(_d.EndElement); _bbggf && _cgfbf.Name == start.Name {
		*_gceaa = 1
		return nil
	}
	if _bgbe, _gfgfcb := _bgeda.(_d.CharData); !_gfgfcb {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgeda)
	} else {
		switch string(_bgbe) {
		case "":
			*_gceaa = 0
		case "\u006e\u006f\u006e\u0065":
			*_gceaa = 1
		case "\u0073\u0065\u0065\u006b":
			*_gceaa = 2
		}
	}
	_bgeda, _ccfbd = d.Token()
	if _ccfbd != nil {
		return _ccfbd
	}
	if _bcbaa, _bgfbb := _bgeda.(_d.EndElement); _bgfbb && _bcbaa.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgeda)
}
func (_abfca ST_TLTimeNodeRestartType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_abfca.String(), start)
}
func ParseUnionST_PositiveFixedPercentage(s string) (_c.ST_PositiveFixedPercentage, error) {
	return _c.ParseUnionST_PositiveFixedPercentage(s)
}
func (_dafdg *CT_SlideRelationshipListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cdcga := range start.Attr {
		if _cdcga.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cdcga.Name.Local == "\u0069\u0064" || _cdcga.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cdcga.Name.Local == "\u0069\u0064" {
			_dafc, _gbcg := _cdcga.Value, error(nil)
			if _gbcg != nil {
				return _gbcg
			}
			_dafdg.IdAttr = _dafc
			continue
		}
	}
	for {
		_egfee, _fggfaa := d.Token()
		if _fggfaa != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079\u003a\u0020\u0025\u0073", _fggfaa)
		}
		if _edgbb, _bgdg := _egfee.(_d.EndElement); _bgdg && _edgbb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fbgge *ST_WebScreenSize) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gadba, _fgfde := d.Token()
	if _fgfde != nil {
		return _fgfde
	}
	if _aafbe, _bbgae := _gadba.(_d.EndElement); _bbgae && _aafbe.Name == start.Name {
		*_fbgge = 1
		return nil
	}
	if _fedabe, _aeccd := _gadba.(_d.CharData); !_aeccd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gadba)
	} else {
		switch string(_fedabe) {
		case "":
			*_fbgge = 0
		case "\u00354\u0034\u0078\u0033\u0037\u0036":
			*_fbgge = 1
		case "\u00364\u0030\u0078\u0034\u0038\u0030":
			*_fbgge = 2
		case "\u00372\u0030\u0078\u0035\u0031\u0032":
			*_fbgge = 3
		case "\u00380\u0030\u0078\u0036\u0030\u0030":
			*_fbgge = 4
		case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
			*_fbgge = 5
		case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
			*_fbgge = 6
		case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
			*_fbgge = 7
		case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
			*_fbgge = 8
		case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
			*_fbgge = 9
		case "\u00318\u0030\u0030\u0078\u0031\u0034\u00300":
			*_fbgge = 10
		case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
			*_fbgge = 11
		}
	}
	_gadba, _fgfde = d.Token()
	if _fgfde != nil {
		return _fgfde
	}
	if _dgbag, _abfad := _gadba.(_d.EndElement); _abfad && _dgbag.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gadba)
}
func (_cgcg *ST_TLAnimateBehaviorCalcMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ffcc, _febdf := d.Token()
	if _febdf != nil {
		return _febdf
	}
	if _bdggb, _bbbfad := _ffcc.(_d.EndElement); _bbbfad && _bdggb.Name == start.Name {
		*_cgcg = 1
		return nil
	}
	if _gdebgb, _bbbfc := _ffcc.(_d.CharData); !_bbbfc {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffcc)
	} else {
		switch string(_gdebgb) {
		case "":
			*_cgcg = 0
		case "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065":
			*_cgcg = 1
		case "\u006c\u0069\u006e":
			*_cgcg = 2
		case "\u0066\u006d\u006c\u0061":
			*_cgcg = 3
		}
	}
	_ffcc, _febdf = d.Token()
	if _febdf != nil {
		return _febdf
	}
	if _aafeb, _bgfbc := _ffcc.(_d.EndElement); _bgfbc && _aafeb.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffcc)
}
func (_becg *CT_SlideMasterTextStyles) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _becg.TitleStyle != nil {
		_cbfc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074i\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_becg.TitleStyle, _cbfc)
	}
	if _becg.BodyStyle != nil {
		_fgbef := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0062\u006f\u0064\u0079\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_becg.BodyStyle, _fgbef)
	}
	if _becg.OtherStyle != nil {
		_aadf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006ft\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_becg.OtherStyle, _aadf)
	}
	if _becg.ExtLst != nil {
		_cfgfe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_becg.ExtLst, _cfgfe)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLOleChartTargetElement and its children, prefixing error messages with path
func (_cdbb *CT_TLOleChartTargetElement) ValidateWithPath(path string) error {
	if _cdbb.TypeAttr == ST_TLChartSubelementTypeUnset {
		return _b.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dcbfb := _cdbb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _dcbfb != nil {
		return _dcbfb
	}
	return nil
}

type CT_Presentation struct {

	// Server Zoom
	ServerZoomAttr *_c.ST_Percentage

	// First Slide Number
	FirstSlideNumAttr *int32

	// Show Header and Footer Placeholders on Titles
	ShowSpecialPlsOnTitleSldAttr *bool

	// Right-To-Left Views
	RtlAttr *bool

	// Remove Personal Information on Save
	RemovePersonalInfoOnSaveAttr *bool

	// Compatibility Mode
	CompatModeAttr *bool

	// Strict First and Last Characters
	StrictFirstAndLastCharsAttr *bool

	// Embed True Type Fonts
	EmbedTrueTypeFontsAttr *bool

	// Save Subset Fonts
	SaveSubsetFontsAttr *bool

	// Automatically Compress Pictures
	AutoCompressPicturesAttr *bool

	// Bookmark ID Seed
	BookmarkIdSeedAttr *uint32

	// Document Conformance Class
	ConformanceAttr _g.ST_ConformanceClass

	// List of Slide Master IDs
	SldMasterIdLst *CT_SlideMasterIdList

	// List of Notes Master IDs
	NotesMasterIdLst *CT_NotesMasterIdList

	// List of Handout Master IDs
	HandoutMasterIdLst *CT_HandoutMasterIdList

	// List of Slide IDs
	SldIdLst *CT_SlideIdList

	// Presentation Slide Size
	SldSz *CT_SlideSize

	// Notes Slide Size
	NotesSz *_c.CT_PositiveSize2D

	// Smart Tags
	SmartTags *CT_SmartTags

	// Embedded Font List
	EmbeddedFontLst *CT_EmbeddedFontList

	// List of Custom Shows
	CustShowLst *CT_CustomShowList

	// Photo Album Information
	PhotoAlbum *CT_PhotoAlbum

	// List of Customer Data Buckets
	CustDataLst *CT_CustomerDataList

	// Kinsoku Settings
	Kinsoku *CT_Kinsoku

	// Presentation Default Text Style
	DefaultTextStyle *_c.CT_TextListStyle

	// Modification Verifier
	ModifyVerifier *CT_ModifyVerifier

	// Extension List
	ExtLst *CT_ExtensionList
}

func (_cega *CT_OutlineViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_cabe := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_cega.CViewPr, _cabe)
	if _cega.SldLst != nil {
		_feebg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_cega.SldLst, _feebg)
	}
	if _cega.ExtLst != nil {
		_gfbg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cega.ExtLst, _gfbg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gfege *HandoutMaster) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u0068a\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072"
	return _gfege.CT_HandoutMaster.MarshalXML(e, start)
}
func (_gbfd ST_TLAnimateMotionPathEditMode) ValidateWithPath(path string) error {
	switch _gbfd {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbfd))
	}
	return nil
}
func (_bbddd *CT_TLTemplateList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bbddd.Tmpl != nil {
		_geaf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u006d\u0070\u006c"}}
		for _, _gdfd := range _bbddd.Tmpl {
			e.EncodeElement(_gdfd, _geaf)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_geafc *ST_TLAnimateEffectTransition) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_geafc = 0
	case "\u0069\u006e":
		*_geafc = 1
	case "\u006f\u0075\u0074":
		*_geafc = 2
	case "\u006e\u006f\u006e\u0065":
		*_geafc = 3
	}
	return nil
}
func (_bgada *CT_TLAnimateRotationBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bgada.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _acdff := range start.Attr {
		if _acdff.Name.Local == "\u0062\u0079" {
			_bfeag, _fccff := _ag.ParseInt(_acdff.Value, 10, 32)
			if _fccff != nil {
				return _fccff
			}
			_aggf := int32(_bfeag)
			_bgada.ByAttr = &_aggf
			continue
		}
		if _acdff.Name.Local == "\u0066\u0072\u006f\u006d" {
			_ccgae, _facge := _ag.ParseInt(_acdff.Value, 10, 32)
			if _facge != nil {
				return _facge
			}
			_cdfb := int32(_ccgae)
			_bgada.FromAttr = &_cdfb
			continue
		}
		if _acdff.Name.Local == "\u0074\u006f" {
			_gbee, _fdbdc := _ag.ParseInt(_acdff.Value, 10, 32)
			if _fdbdc != nil {
				return _fdbdc
			}
			_ecffe := int32(_gbee)
			_bgada.ToAttr = &_ecffe
			continue
		}
	}
_efgdg:
	for {
		_abddg, _cbdfg := d.Token()
		if _cbdfg != nil {
			return _cbdfg
		}
		switch _gfdc := _abddg.(type) {
		case _d.StartElement:
			switch _gfdc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _abcea := d.DecodeElement(_bgada.CBhvr, &_gfdc); _abcea != nil {
					return _abcea
				}
			default:
				_be.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074\u0061\u0074i\u006f\u006eBe\u0068\u0061\u0076i\u006f\u0072\u0020\u0025\u0076", _gfdc.Name)
				if _acga := d.Skip(); _acga != nil {
					return _acga
				}
			}
		case _d.EndElement:
			break _efgdg
		case _d.CharData:
		}
	}
	return nil
}
func (_abef *CT_TLBehaviorAttributeNameList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ddead := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}}
	for _, _fafe := range _abef.AttrName {
		e.EncodeElement(_fafe, _ddead)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_begc ST_TransitionSideDirectionType) String() string {
	switch _begc {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0075"
	case 3:
		return "\u0072"
	case 4:
		return "\u0064"
	}
	return ""
}
func NewCT_TimeNodeList() *CT_TimeNodeList { _eabea := &CT_TimeNodeList{}; return _eabea }
func (_bdce *CT_NotesViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_afea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063S\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}}
	e.EncodeElement(_bdce.CSldViewPr, _afea)
	if _bdce.ExtLst != nil {
		_fgad := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bdce.ExtLst, _fgad)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gafc *CT_GroupShapeChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gaad:
	for {
		_dcbf, _babf := d.Token()
		if _babf != nil {
			return _babf
		}
		switch _fcda := _dcbf.(type) {
		case _d.StartElement:
			switch _fcda.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_cda := NewCT_Shape()
				if _eccf := d.DecodeElement(_cda, &_fcda); _eccf != nil {
					return _eccf
				}
				_gafc.Sp = append(_gafc.Sp, _cda)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_fbec := NewCT_GroupShape()
				if _agaf := d.DecodeElement(_fbec, &_fcda); _agaf != nil {
					return _agaf
				}
				_gafc.GrpSp = append(_gafc.GrpSp, _fbec)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_dcgd := NewCT_GraphicalObjectFrame()
				if _beba := d.DecodeElement(_dcgd, &_fcda); _beba != nil {
					return _beba
				}
				_gafc.GraphicFrame = append(_gafc.GraphicFrame, _dcgd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_aaab := NewCT_Connector()
				if _ecfd := d.DecodeElement(_aaab, &_fcda); _ecfd != nil {
					return _ecfd
				}
				_gafc.CxnSp = append(_gafc.CxnSp, _aaab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_bgfa := NewCT_Picture()
				if _bcd := d.DecodeElement(_bgfa, &_fcda); _bcd != nil {
					return _bcd
				}
				_gafc.Pic = append(_gafc.Pic, _bgfa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_agfc := NewCT_Rel()
				if _bfdae := d.DecodeElement(_agfc, &_fcda); _bfdae != nil {
					return _bfdae
				}
				_gafc.ContentPart = append(_gafc.ContentPart, _agfc)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068ap\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _fcda.Name)
				if _dfaf := d.Skip(); _dfaf != nil {
					return _dfaf
				}
			}
		case _d.EndElement:
			break _gaad
		case _d.CharData:
		}
	}
	return nil
}
func (_agag *CT_TLAnimVariantFloatVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _agag.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fcfegd ST_TLTriggerEvent) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_adcaeg := _d.Attr{}
	_adcaeg.Name = name
	switch _fcfegd {
	case ST_TLTriggerEventUnset:
		_adcaeg.Value = ""
	case ST_TLTriggerEventOnBegin:
		_adcaeg.Value = "\u006fn\u0042\u0065\u0067\u0069\u006e"
	case ST_TLTriggerEventOnEnd:
		_adcaeg.Value = "\u006f\u006e\u0045n\u0064"
	case ST_TLTriggerEventBegin:
		_adcaeg.Value = "\u0062\u0065\u0067i\u006e"
	case ST_TLTriggerEventEnd:
		_adcaeg.Value = "\u0065\u006e\u0064"
	case ST_TLTriggerEventOnClick:
		_adcaeg.Value = "\u006fn\u0043\u006c\u0069\u0063\u006b"
	case ST_TLTriggerEventOnDblClick:
		_adcaeg.Value = "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b"
	case ST_TLTriggerEventOnMouseOver:
		_adcaeg.Value = "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"
	case ST_TLTriggerEventOnMouseOut:
		_adcaeg.Value = "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074"
	case ST_TLTriggerEventOnNext:
		_adcaeg.Value = "\u006f\u006e\u004e\u0065\u0078\u0074"
	case ST_TLTriggerEventOnPrev:
		_adcaeg.Value = "\u006f\u006e\u0050\u0072\u0065\u0076"
	case ST_TLTriggerEventOnStopAudio:
		_adcaeg.Value = "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f"
	}
	return _adcaeg, nil
}

const (
	ST_TLTimeNodePresetClassTypeUnset     ST_TLTimeNodePresetClassType = 0
	ST_TLTimeNodePresetClassTypeEntr      ST_TLTimeNodePresetClassType = 1
	ST_TLTimeNodePresetClassTypeExit      ST_TLTimeNodePresetClassType = 2
	ST_TLTimeNodePresetClassTypeEmph      ST_TLTimeNodePresetClassType = 3
	ST_TLTimeNodePresetClassTypePath      ST_TLTimeNodePresetClassType = 4
	ST_TLTimeNodePresetClassTypeVerb      ST_TLTimeNodePresetClassType = 5
	ST_TLTimeNodePresetClassTypeMediacall ST_TLTimeNodePresetClassType = 6
)

type ST_TLOleChartBuildType byte

func (_eccfg ST_TLAnimateColorDirection) ValidateWithPath(path string) error {
	switch _eccfg {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eccfg))
	}
	return nil
}

// ValidateWithPath validates the CT_OutlineViewSlideList and its children, prefixing error messages with path
func (_bffbg *CT_OutlineViewSlideList) ValidateWithPath(path string) error {
	for _gccg, _gebad := range _bffbg.Sld {
		if _cbddc := _gebad.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u006c\u0064\u005b\u0025\u0064\u005d", path, _gccg)); _cbddc != nil {
			return _cbddc
		}
	}
	return nil
}

type CT_NotesSlide struct {

	// Common slide data for notes slides
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr            *_c.CT_ColorMappingOverride
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func (_dfcf ST_WebColorType) ValidateWithPath(path string) error {
	switch _dfcf {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfcf))
	}
	return nil
}
func (_abfeb ST_TLPreviousActionType) ValidateWithPath(path string) error {
	switch _abfeb {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abfeb))
	}
	return nil
}
func (_abecb ST_OleObjectFollowColorScheme) String() string {
	switch _abecb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0066\u0075\u006c\u006c"
	case 3:
		return "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064"
	}
	return ""
}
func NewSldSyncPr() *SldSyncPr {
	_cbafbc := &SldSyncPr{}
	_cbafbc.CT_SlideSyncProperties = *NewCT_SlideSyncProperties()
	return _cbafbc
}
func (_eedeg ST_TLTimeNodeSyncType) String() string {
	switch _eedeg {
	case 0:
		return ""
	case 1:
		return "\u0063a\u006e\u0053\u006c\u0069\u0070"
	case 2:
		return "\u006c\u006f\u0063\u006b\u0065\u0064"
	}
	return ""
}

// Validate validates the CT_GuideList and its children
func (_ccef *CT_GuideList) Validate() error {
	return _ccef.ValidateWithPath("\u0043\u0054\u005fG\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}
func NewCT_TLAnimateScaleBehavior() *CT_TLAnimateScaleBehavior {
	_daecc := &CT_TLAnimateScaleBehavior{}
	_daecc.CBhvr = NewCT_TLCommonBehaviorData()
	return _daecc
}

// ValidateWithPath validates the SldLayout and its children, prefixing error messages with path
func (_dedfg *SldLayout) ValidateWithPath(path string) error {
	if _efgaa := _dedfg.CT_SlideLayout.ValidateWithPath(path); _efgaa != nil {
		return _efgaa
	}
	return nil
}
func (_fgec *CT_EmbeddedFontList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fgec.EmbeddedFont != nil {
		_dbfd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u006d\u0062\u0065\u0064\u0064\u0065d\u0046\u006f\u006e\u0074"}}
		for _, _ecfg := range _fgec.EmbeddedFont {
			e.EncodeElement(_ecfg, _dbfd)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gegcb ST_TLAnimateBehaviorValueType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gcfb := _d.Attr{}
	_gcfb.Name = name
	switch _gegcb {
	case ST_TLAnimateBehaviorValueTypeUnset:
		_gcfb.Value = ""
	case ST_TLAnimateBehaviorValueTypeStr:
		_gcfb.Value = "\u0073\u0074\u0072"
	case ST_TLAnimateBehaviorValueTypeNum:
		_gcfb.Value = "\u006e\u0075\u006d"
	case ST_TLAnimateBehaviorValueTypeClr:
		_gcfb.Value = "\u0063\u006c\u0072"
	}
	return _gcfb, nil
}
func NewCT_TLAnimateRotationBehavior() *CT_TLAnimateRotationBehavior {
	_afec := &CT_TLAnimateRotationBehavior{}
	_afec.CBhvr = NewCT_TLCommonBehaviorData()
	return _afec
}
func (_facbe ST_PrintWhat) Validate() error                  { return _facbe.ValidateWithPath("") }
func (_bbcc ST_TransitionSideDirectionType) Validate() error { return _bbcc.ValidateWithPath("") }
func (_begb *CT_GroupShapeNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_afa := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_begb.CNvPr, _afa)
	_bgga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063N\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_begb.CNvGrpSpPr, _bgga)
	_febc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_begb.NvPr, _febc)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ecgc ST_TLTimeNodeFillType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ecgc.String(), start)
}

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_gdeg *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _aebf := _gdeg.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _aebf != nil {
		return _aebf
	}
	if _bfga := _gdeg.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _bfga != nil {
		return _bfga
	}
	if _debg := _gdeg.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _debg != nil {
		return _debg
	}
	return nil
}

type CT_SlideRelationshipList struct {

	// Presentation Slide
	Sld []*CT_SlideRelationshipListEntry
}

func (_gcbe *CT_Shape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gcbe.NvSpPr = NewCT_ShapeNonVisual()
	_gcbe.SpPr = _c.NewCT_ShapeProperties()
	for _, _cagg := range start.Attr {
		if _cagg.Name.Local == "\u0075s\u0065\u0042\u0067\u0046\u0069\u006cl" {
			_abgg, _aafd := _ag.ParseBool(_cagg.Value)
			if _aafd != nil {
				return _aafd
			}
			_gcbe.UseBgFillAttr = &_abgg
			continue
		}
	}
_gbgc:
	for {
		_fbgfe, _agccd := d.Token()
		if _agccd != nil {
			return _agccd
		}
		switch _fdfd := _fbgfe.(type) {
		case _d.StartElement:
			switch _fdfd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _accc := d.DecodeElement(_gcbe.NvSpPr, &_fdfd); _accc != nil {
					return _accc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _ddbb := d.DecodeElement(_gcbe.SpPr, &_fdfd); _ddbb != nil {
					return _ddbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_gcbe.Style = _c.NewCT_ShapeStyle()
				if _agfb := d.DecodeElement(_gcbe.Style, &_fdfd); _agfb != nil {
					return _agfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_gcbe.TxBody = _c.NewCT_TextBody()
				if _ecdd := d.DecodeElement(_gcbe.TxBody, &_fdfd); _ecdd != nil {
					return _ecdd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcbe.ExtLst = NewCT_ExtensionListModify()
				if _dbfga := d.DecodeElement(_gcbe.ExtLst, &_fdfd); _dbfga != nil {
					return _dbfga
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _fdfd.Name)
				if _bddb := d.Skip(); _bddb != nil {
					return _bddb
				}
			}
		case _d.EndElement:
			break _gbgc
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CommentAuthor and its children
func (_ceba *CT_CommentAuthor) Validate() error {
	return _ceba.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006dm\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072")
}
func (_edggd ST_TLAnimateEffectTransition) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_edbcdc := _d.Attr{}
	_edbcdc.Name = name
	switch _edggd {
	case ST_TLAnimateEffectTransitionUnset:
		_edbcdc.Value = ""
	case ST_TLAnimateEffectTransitionIn:
		_edbcdc.Value = "\u0069\u006e"
	case ST_TLAnimateEffectTransitionOut:
		_edbcdc.Value = "\u006f\u0075\u0074"
	case ST_TLAnimateEffectTransitionNone:
		_edbcdc.Value = "\u006e\u006f\u006e\u0065"
	}
	return _edbcdc, nil
}

const (
	ST_TLDiagramBuildTypeUnset         ST_TLDiagramBuildType = 0
	ST_TLDiagramBuildTypeWhole         ST_TLDiagramBuildType = 1
	ST_TLDiagramBuildTypeDepthByNode   ST_TLDiagramBuildType = 2
	ST_TLDiagramBuildTypeDepthByBranch ST_TLDiagramBuildType = 3
	ST_TLDiagramBuildTypeBreadthByNode ST_TLDiagramBuildType = 4
	ST_TLDiagramBuildTypeBreadthByLvl  ST_TLDiagramBuildType = 5
	ST_TLDiagramBuildTypeCw            ST_TLDiagramBuildType = 6
	ST_TLDiagramBuildTypeCwIn          ST_TLDiagramBuildType = 7
	ST_TLDiagramBuildTypeCwOut         ST_TLDiagramBuildType = 8
	ST_TLDiagramBuildTypeCcw           ST_TLDiagramBuildType = 9
	ST_TLDiagramBuildTypeCcwIn         ST_TLDiagramBuildType = 10
	ST_TLDiagramBuildTypeCcwOut        ST_TLDiagramBuildType = 11
	ST_TLDiagramBuildTypeInByRing      ST_TLDiagramBuildType = 12
	ST_TLDiagramBuildTypeOutByRing     ST_TLDiagramBuildType = 13
	ST_TLDiagramBuildTypeUp            ST_TLDiagramBuildType = 14
	ST_TLDiagramBuildTypeDown          ST_TLDiagramBuildType = 15
	ST_TLDiagramBuildTypeAllAtOnce     ST_TLDiagramBuildType = 16
	ST_TLDiagramBuildTypeCust          ST_TLDiagramBuildType = 17
)

type CT_Rel struct{ IdAttr string }

const (
	ST_TLBehaviorOverrideTypeUnset      ST_TLBehaviorOverrideType = 0
	ST_TLBehaviorOverrideTypeNormal     ST_TLBehaviorOverrideType = 1
	ST_TLBehaviorOverrideTypeChildStyle ST_TLBehaviorOverrideType = 2
)

func NewViewPr() *ViewPr {
	_ebgd := &ViewPr{}
	_ebgd.CT_ViewProperties = *NewCT_ViewProperties()
	return _ebgd
}

type CT_CommentAuthorList struct {

	// Comment Author
	CmAuthor []*CT_CommentAuthor
}

func (_ebef *OleObj) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u006f\u006c\u0065\u004f\u0062\u006a"
	return _ebef.CT_OleObject.MarshalXML(e, start)
}

// Validate validates the CT_SlideSorterViewProperties and its children
func (_fcbcc *CT_SlideSorterViewProperties) Validate() error {
	return _fcbcc.ValidateWithPath("\u0043\u0054\u005f\u0053l\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073")
}
func (_fcaad *ST_TLAnimateBehaviorCalcMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fcaad = 0
	case "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065":
		*_fcaad = 1
	case "\u006c\u0069\u006e":
		*_fcaad = 2
	case "\u0066\u006d\u006c\u0061":
		*_fcaad = 3
	}
	return nil
}

// ValidateWithPath validates the CT_Placeholder and its children, prefixing error messages with path
func (_afba *CT_Placeholder) ValidateWithPath(path string) error {
	if _abaff := _afba.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _abaff != nil {
		return _abaff
	}
	if _gffe := _afba.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _gffe != nil {
		return _gffe
	}
	if _cfaa := _afba.SzAttr.ValidateWithPath(path + "\u002fS\u007a\u0041\u0074\u0074\u0072"); _cfaa != nil {
		return _cfaa
	}
	if _afba.ExtLst != nil {
		if _ggae := _afba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggae != nil {
			return _ggae
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OleObjectChoice and its children, prefixing error messages with path
func (_abcd *CT_OleObjectChoice) ValidateWithPath(path string) error {
	if _abcd.Embed != nil {
		if _dfea := _abcd.Embed.ValidateWithPath(path + "\u002f\u0045\u006d\u0062\u0065\u0064"); _dfea != nil {
			return _dfea
		}
	}
	if _abcd.Link != nil {
		if _ggda := _abcd.Link.ValidateWithPath(path + "\u002f\u004c\u0069n\u006b"); _ggda != nil {
			return _ggda
		}
	}
	return nil
}
func (_edbga *CT_SlideIdListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_edbga.IdAttr = 256
	for _, _eeaaf := range start.Attr {
		if _eeaaf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eeaaf.Name.Local == "\u0069\u0064" || _eeaaf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _eeaaf.Name.Local == "\u0069\u0064" {
			_fecgd, _gfae := _eeaaf.Value, error(nil)
			if _gfae != nil {
				return _gfae
			}
			_edbga.RIdAttr = _fecgd
			continue
		}
		if _eeaaf.Name.Local == "\u0069\u0064" {
			_abac, _bgaa := _ag.ParseUint(_eeaaf.Value, 10, 32)
			if _bgaa != nil {
				return _bgaa
			}
			_edbga.IdAttr = uint32(_abac)
			continue
		}
	}
_cegce:
	for {
		_fabeb, _cebfa := d.Token()
		if _cebfa != nil {
			return _cebfa
		}
		switch _fccb := _fabeb.(type) {
		case _d.StartElement:
			switch _fccb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edbga.ExtLst = NewCT_ExtensionList()
				if _dggaf := d.DecodeElement(_edbga.ExtLst, &_fccb); _dggaf != nil {
					return _dggaf
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049\u0064Li\u0073\u0074\u0045\u006e\u0074\u0072\u0079\u0020\u0025\u0076", _fccb.Name)
				if _babdf := d.Skip(); _babdf != nil {
					return _babdf
				}
			}
		case _d.EndElement:
			break _cegce
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLAnimVariantFloatVal struct {

	// Value
	ValAttr float32
}

func (_egegg ST_TLCommandType) Validate() error { return _egegg.ValidateWithPath("") }
func (_cffbe ST_TLAnimateMotionBehaviorOrigin) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fefda := _d.Attr{}
	_fefda.Name = name
	switch _cffbe {
	case ST_TLAnimateMotionBehaviorOriginUnset:
		_fefda.Value = ""
	case ST_TLAnimateMotionBehaviorOriginParent:
		_fefda.Value = "\u0070\u0061\u0072\u0065\u006e\u0074"
	case ST_TLAnimateMotionBehaviorOriginLayout:
		_fefda.Value = "\u006c\u0061\u0079\u006f\u0075\u0074"
	}
	return _fefda, nil
}
func NewCT_SlideMasterIdList() *CT_SlideMasterIdList {
	_gcgbe := &CT_SlideMasterIdList{}
	return _gcgbe
}
func NewCT_TLAnimateMotionBehavior() *CT_TLAnimateMotionBehavior {
	_dgdd := &CT_TLAnimateMotionBehavior{}
	_dgdd.CBhvr = NewCT_TLCommonBehaviorData()
	return _dgdd
}
func (_efafc *CT_SlideRelationshipListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _efafc.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SlideMaster and its children
func (_cfac *CT_SlideMaster) Validate() error {
	return _cfac.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004da\u0073\u0074\u0065\u0072")
}
func (_baa *CT_ControlList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fcg:
	for {
		_fgg, _bfdag := d.Token()
		if _bfdag != nil {
			return _bfdag
		}
		switch _eca := _fgg.(type) {
		case _d.StartElement:
			switch _eca.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}:
				_gbad := NewCT_Control()
				if _gcea := d.DecodeElement(_gbad, &_eca); _gcea != nil {
					return _gcea
				}
				_baa.Control = append(_baa.Control, _gbad)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006cL\u0069s\u0074\u0020\u0025\u0076", _eca.Name)
				if _gfbd := d.Skip(); _gfbd != nil {
					return _gfbd
				}
			}
		case _d.EndElement:
			break _fcg
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_SplitterBarStateUnset     ST_SplitterBarState = 0
	ST_SplitterBarStateMinimized ST_SplitterBarState = 1
	ST_SplitterBarStateRestored  ST_SplitterBarState = 2
	ST_SplitterBarStateMaximized ST_SplitterBarState = 3
)

func NewCT_TLTextTargetElement() *CT_TLTextTargetElement {
	_afde := &CT_TLTextTargetElement{}
	return _afde
}

// Validate validates the CT_SmartTags and its children
func (_dedae *CT_SmartTags) Validate() error {
	return _dedae.ValidateWithPath("\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

// ValidateWithPath validates the CT_OptionalBlackTransition and its children, prefixing error messages with path
func (_bcbf *CT_OptionalBlackTransition) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_SlideMasterIdListEntry and its children
func (_ffbg *CT_SlideMasterIdListEntry) Validate() error {
	return _ffbg.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069d\u0065\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}

// Validate validates the EG_ShowType and its children
func (_acgd *EG_ShowType) Validate() error {
	return _acgd.ValidateWithPath("E\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065")
}
func (_bdeaec ST_TLNextActionType) ValidateWithPath(path string) error {
	switch _bdeaec {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdeaec))
	}
	return nil
}
func (_fcedbg ST_TLParaBuildType) ValidateWithPath(path string) error {
	switch _fcedbg {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcedbg))
	}
	return nil
}
func (_cdcff *CT_SlideLayout) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cdcff.CSld = NewCT_CommonSlideData()
	for _, _edfe := range start.Attr {
		if _edfe.Name.Local == "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_eebea, _aged := _edfe.Value, error(nil)
			if _aged != nil {
				return _aged
			}
			_cdcff.MatchingNameAttr = &_eebea
			continue
		}
		if _edfe.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cdcff.TypeAttr.UnmarshalXMLAttr(_edfe)
			continue
		}
		if _edfe.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_cbcf, _acagd := _ag.ParseBool(_edfe.Value)
			if _acagd != nil {
				return _acagd
			}
			_cdcff.PreserveAttr = &_cbcf
			continue
		}
		if _edfe.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_dgcg, _gbde := _ag.ParseBool(_edfe.Value)
			if _gbde != nil {
				return _gbde
			}
			_cdcff.UserDrawnAttr = &_dgcg
			continue
		}
		if _edfe.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_bbgee, _bfcg := _ag.ParseBool(_edfe.Value)
			if _bfcg != nil {
				return _bfcg
			}
			_cdcff.ShowMasterSpAttr = &_bbgee
			continue
		}
		if _edfe.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_fagc, _cfdc := _ag.ParseBool(_edfe.Value)
			if _cfdc != nil {
				return _cfdc
			}
			_cdcff.ShowMasterPhAnimAttr = &_fagc
			continue
		}
	}
_dbcd:
	for {
		_bgcb, _gbbfa := d.Token()
		if _gbbfa != nil {
			return _gbbfa
		}
		switch _gcgg := _bgcb.(type) {
		case _d.StartElement:
			switch _gcgg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _eege := d.DecodeElement(_cdcff.CSld, &_gcgg); _eege != nil {
					return _eege
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_cdcff.ClrMapOvr = _c.NewCT_ColorMappingOverride()
				if _accaa := d.DecodeElement(_cdcff.ClrMapOvr, &_gcgg); _accaa != nil {
					return _accaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_cdcff.Transition = NewCT_SlideTransition()
				if _gfeg := d.DecodeElement(_cdcff.Transition, &_gcgg); _gfeg != nil {
					return _gfeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_cdcff.Timing = NewCT_SlideTiming()
				if _abcaf := d.DecodeElement(_cdcff.Timing, &_gcgg); _abcaf != nil {
					return _abcaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_cdcff.Hf = NewCT_HeaderFooter()
				if _bbabd := d.DecodeElement(_cdcff.Hf, &_gcgg); _bbabd != nil {
					return _bbabd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdcff.ExtLst = NewCT_ExtensionListModify()
				if _fcdea := d.DecodeElement(_cdcff.ExtLst, &_gcgg); _fcdea != nil {
					return _fcdea
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061y\u006fu\u0074\u0020\u0025\u0076", _gcgg.Name)
				if _eacf := d.Skip(); _eacf != nil {
					return _eacf
				}
			}
		case _d.EndElement:
			break _dbcd
		case _d.CharData:
		}
	}
	return nil
}
func (_cdcgde ST_PrintColorMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cdcgde.String(), start)
}

// ValidateWithPath validates the CT_GroupShapeNonVisual and its children, prefixing error messages with path
func (_abdgb *CT_GroupShapeNonVisual) ValidateWithPath(path string) error {
	if _adbcd := _abdgb.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _adbcd != nil {
		return _adbcd
	}
	if _cfb := _abdgb.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _cfb != nil {
		return _cfb
	}
	if _eaed := _abdgb.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _eaed != nil {
		return _eaed
	}
	return nil
}
func (_fbcc *CT_GuideList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fbcc.Guide != nil {
		_aceb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0067\u0075\u0069\u0064\u0065"}}
		for _, _defa := range _fbcc.Guide {
			e.EncodeElement(_defa, _aceb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the AG_Ole and its children
func (_df *AG_Ole) Validate() error {
	return _df.ValidateWithPath("\u0041\u0047\u005f\u004f\u006c\u0065")
}

type CT_Background struct {

	// Black and White Mode
	BwModeAttr _c.ST_BlackWhiteMode

	// Background Properties
	BgPr *CT_BackgroundProperties

	// Background Style Reference
	BgRef *_c.CT_StyleMatrixReference
}

func (_ddgf *CT_CustomShowId) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _adde := range start.Attr {
		if _adde.Name.Local == "\u0069\u0064" {
			_ddfg, _gcg := _ag.ParseUint(_adde.Value, 10, 32)
			if _gcg != nil {
				return _gcg
			}
			_ddgf.IdAttr = uint32(_ddfg)
			continue
		}
	}
	for {
		_agc, _cfgaf := d.Token()
		if _cfgaf != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dS\u0068\u006f\u0077I\u0064:\u0020\u0025\u0073", _cfgaf)
		}
		if _bacd, _ggc := _agc.(_d.EndElement); _ggc && _bacd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cfgd *CT_NotesSlide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cfgd.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_cfgd.ShowMasterSpAttr))})
	}
	if _cfgd.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_cfgd.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_gga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_cfgd.CSld, _gga)
	if _cfgd.ClrMapOvr != nil {
		_cbee := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_cfgd.ClrMapOvr, _cbee)
	}
	if _cfgd.ExtLst != nil {
		_egfa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cfgd.ExtLst, _egfa)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SlideLayout and its children
func (_adad *CT_SlideLayout) Validate() error {
	return _adad.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004ca\u0079\u006f\u0075\u0074")
}
func (_edaeb *EG_ExtensionList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _edaeb.Ext != nil {
		_ddbcf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _bbebf := range _edaeb.Ext {
			e.EncodeElement(_bbebf, _ddbcf)
		}
	}
	return nil
}

const (
	ST_SlideSizeTypeUnset       ST_SlideSizeType = 0
	ST_SlideSizeTypeScreen4x3   ST_SlideSizeType = 1
	ST_SlideSizeTypeLetter      ST_SlideSizeType = 2
	ST_SlideSizeTypeA4          ST_SlideSizeType = 3
	ST_SlideSizeType35mm        ST_SlideSizeType = 4
	ST_SlideSizeTypeOverhead    ST_SlideSizeType = 5
	ST_SlideSizeTypeBanner      ST_SlideSizeType = 6
	ST_SlideSizeTypeCustom      ST_SlideSizeType = 7
	ST_SlideSizeTypeLedger      ST_SlideSizeType = 8
	ST_SlideSizeTypeA3          ST_SlideSizeType = 9
	ST_SlideSizeTypeB4ISO       ST_SlideSizeType = 10
	ST_SlideSizeTypeB5ISO       ST_SlideSizeType = 11
	ST_SlideSizeTypeB4JIS       ST_SlideSizeType = 12
	ST_SlideSizeTypeB5JIS       ST_SlideSizeType = 13
	ST_SlideSizeTypeHagakiCard  ST_SlideSizeType = 14
	ST_SlideSizeTypeScreen16x9  ST_SlideSizeType = 15
	ST_SlideSizeTypeScreen16x10 ST_SlideSizeType = 16
)

func (_ebfdd ST_PhotoAlbumFrameShape) String() string {
	switch _ebfdd {
	case 0:
		return ""
	case 1:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031"
	case 2:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032"
	case 3:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033"
	case 4:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034"
	case 5:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035"
	case 6:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036"
	case 7:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037"
	}
	return ""
}

type CT_TagsData struct{ IdAttr string }

func NewCT_GraphicalObjectFrame() *CT_GraphicalObjectFrame {
	_eeag := &CT_GraphicalObjectFrame{}
	_eeag.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_eeag.Xfrm = _c.NewCT_Transform2D()
	_eeag.Graphic = _c.NewGraphic()
	return _eeag
}
func (_dbab *CT_PhotoAlbum) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dbab.BwAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0077"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_dbab.BwAttr))})
	}
	if _dbab.ShowCaptionsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006fw\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_dbab.ShowCaptionsAttr))})
	}
	if _dbab.LayoutAttr != ST_PhotoAlbumLayoutUnset {
		_ccb, _agcg := _dbab.LayoutAttr.MarshalXMLAttr(_d.Name{Local: "\u006c\u0061\u0079\u006f\u0075\u0074"})
		if _agcg != nil {
			return _agcg
		}
		start.Attr = append(start.Attr, _ccb)
	}
	if _dbab.FrameAttr != ST_PhotoAlbumFrameShapeUnset {
		_gddc, _adce := _dbab.FrameAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u0072\u0061m\u0065"})
		if _adce != nil {
			return _adce
		}
		start.Attr = append(start.Attr, _gddc)
	}
	e.EncodeToken(start)
	if _dbab.ExtLst != nil {
		_fabc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dbab.ExtLst, _fabc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fdfdf ST_TransitionCornerDirectionType) ValidateWithPath(path string) error {
	switch _fdfdf {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdfdf))
	}
	return nil
}

const (
	ST_TLBehaviorAdditiveTypeUnset ST_TLBehaviorAdditiveType = 0
	ST_TLBehaviorAdditiveTypeBase  ST_TLBehaviorAdditiveType = 1
	ST_TLBehaviorAdditiveTypeSum   ST_TLBehaviorAdditiveType = 2
	ST_TLBehaviorAdditiveTypeRepl  ST_TLBehaviorAdditiveType = 3
	ST_TLBehaviorAdditiveTypeMult  ST_TLBehaviorAdditiveType = 4
	ST_TLBehaviorAdditiveTypeNone  ST_TLBehaviorAdditiveType = 5
)

// ValidateWithPath validates the CT_SlideMasterTextStyles and its children, prefixing error messages with path
func (_befb *CT_SlideMasterTextStyles) ValidateWithPath(path string) error {
	if _befb.TitleStyle != nil {
		if _affg := _befb.TitleStyle.ValidateWithPath(path + "/\u0054\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"); _affg != nil {
			return _affg
		}
	}
	if _befb.BodyStyle != nil {
		if _gdddc := _befb.BodyStyle.ValidateWithPath(path + "\u002f\u0042\u006f\u0064\u0079\u0053\u0074\u0079\u006c\u0065"); _gdddc != nil {
			return _gdddc
		}
	}
	if _befb.OtherStyle != nil {
		if _efefd := _befb.OtherStyle.ValidateWithPath(path + "/\u004f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"); _efefd != nil {
			return _efefd
		}
	}
	if _befb.ExtLst != nil {
		if _bacg := _befb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bacg != nil {
			return _bacg
		}
	}
	return nil
}
func (_agfgc *CT_EmbeddedFontDataId) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dfefeg := range start.Attr {
		if _dfefeg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dfefeg.Name.Local == "\u0069\u0064" || _dfefeg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dfefeg.Name.Local == "\u0069\u0064" {
			_efge, _cba := _dfefeg.Value, error(nil)
			if _cba != nil {
				return _cba
			}
			_agfgc.IdAttr = _efge
			continue
		}
	}
	for {
		_cdcc, _beac := d.Token()
		if _beac != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046o\u006e\u0074\u0044\u0061\u0074\u0061\u0049d\u003a\u0020\u0025\u0073", _beac)
		}
		if _ebac, _eafg := _cdcc.(_d.EndElement); _eafg && _ebac.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eeegc ST_TLAnimateEffectTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_eeegc.String(), start)
}
func (_eggca *CT_TLAnimVariantIntegerVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _eggca.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewOleObj() *OleObj { _feca := &OleObj{}; _feca.CT_OleObject = *NewCT_OleObject(); return _feca }
func (_fegfd *CT_WheelTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fdee := range start.Attr {
		if _fdee.Name.Local == "\u0073\u0070\u006f\u006b\u0065\u0073" {
			_ababf, _deade := _ag.ParseUint(_fdee.Value, 10, 32)
			if _deade != nil {
				return _deade
			}
			_bbaab := uint32(_ababf)
			_fegfd.SpokesAttr = &_bbaab
			continue
		}
	}
	for {
		_aaagf, _eeedd := d.Token()
		if _eeedd != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0057\u0068\u0065\u0065\u006c\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _eeedd)
		}
		if _aebg, _faeg := _aaagf.(_d.EndElement); _faeg && _aebg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dcdga ST_TLChartSubelementType) ValidateWithPath(path string) error {
	switch _dcdga {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcdga))
	}
	return nil
}

const (
	ST_TLTimeNodeMasterRelationUnset     ST_TLTimeNodeMasterRelation = 0
	ST_TLTimeNodeMasterRelationSameClick ST_TLTimeNodeMasterRelation = 1
	ST_TLTimeNodeMasterRelationLastClick ST_TLTimeNodeMasterRelation = 2
	ST_TLTimeNodeMasterRelationNextClick ST_TLTimeNodeMasterRelation = 3
)

type CT_ShowProperties struct {

	// Loop Slide Show
	LoopAttr *bool

	// Show Narration in Slide Show
	ShowNarrationAttr *bool

	// Show Animation in Slide Show
	ShowAnimationAttr *bool

	// Use Timings in Slide Show
	UseTimingsAttr *bool

	// Presenter Slide Show Mode
	Present *CT_Empty

	// Browse Slide Show Mode
	Browse *CT_ShowInfoBrowse

	// Kiosk Slide Show Mode
	Kiosk *CT_ShowInfoKiosk

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId

	// Pen Color for Slide Show
	PenClr *_c.CT_Color
	ExtLst *CT_ExtensionList
}
type CT_CommonSlideData struct {

	// Name
	NameAttr *string

	// Slide Background
	Bg *CT_Background

	// Shape Tree
	SpTree *CT_GroupShape

	// Customer Data List
	CustDataLst *CT_CustomerDataList

	// List of controls
	Controls *CT_ControlList
	ExtLst   *CT_ExtensionList
}

func (_eaaa ST_TLTimeNodePresetClassType) ValidateWithPath(path string) error {
	switch _eaaa {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eaaa))
	}
	return nil
}

// Validate validates the EG_SlideListChoice and its children
func (_gfcea *EG_SlideListChoice) Validate() error {
	return _gfcea.ValidateWithPath("\u0045G\u005fS\u006c\u0069\u0064\u0065\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065")
}

// Validate validates the CT_TLCommonBehaviorData and its children
func (_dadg *CT_TLCommonBehaviorData) Validate() error {
	return _dadg.ValidateWithPath("\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0044\u0061\u0074\u0061")
}
func (_e *AG_ChildSlide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _aa := range start.Attr {
		if _aa.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_agb, _ac := _ag.ParseBool(_aa.Value)
			if _ac != nil {
				return _ac
			}
			_e.ShowMasterSpAttr = &_agb
			continue
		}
		if _aa.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_ee, _cf := _ag.ParseBool(_aa.Value)
			if _cf != nil {
				return _cf
			}
			_e.ShowMasterPhAnimAttr = &_ee
			continue
		}
	}
	for {
		_aae, _ae := d.Token()
		if _ae != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0041\u0047\u005f\u0043h\u0069l\u0064S\u006c\u0069\u0064\u0065\u003a\u0020\u0025s", _ae)
		}
		if _gb, _eed := _aae.(_d.EndElement); _eed && _gb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cdgf *CT_TLOleChartTargetElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_ebbfe, _fgcba := _cdgf.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _fgcba != nil {
		return _fgcba
	}
	start.Attr = append(start.Attr, _ebbfe)
	if _cdgf.LvlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0076\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_cdgf.LvlAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_efgcd *CT_TLIterateIntervalPercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _efgcd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLMediaNodeAudio() *CT_TLMediaNodeAudio {
	_cdfbd := &CT_TLMediaNodeAudio{}
	_cdfbd.CMediaNode = NewCT_TLCommonMediaNodeData()
	return _cdfbd
}
func (_bfec *ST_SlideSizeType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cgafd, _bbfa := d.Token()
	if _bbfa != nil {
		return _bbfa
	}
	if _ccgg, _gbdbb := _cgafd.(_d.EndElement); _gbdbb && _ccgg.Name == start.Name {
		*_bfec = 1
		return nil
	}
	if _aecea, _cgege := _cgafd.(_d.CharData); !_cgege {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgafd)
	} else {
		switch string(_aecea) {
		case "":
			*_bfec = 0
		case "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783":
			*_bfec = 1
		case "\u006c\u0065\u0074\u0074\u0065\u0072":
			*_bfec = 2
		case "\u0041\u0034":
			*_bfec = 3
		case "\u0033\u0035\u006d\u006d":
			*_bfec = 4
		case "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064":
			*_bfec = 5
		case "\u0062\u0061\u006e\u006e\u0065\u0072":
			*_bfec = 6
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_bfec = 7
		case "\u006c\u0065\u0064\u0067\u0065\u0072":
			*_bfec = 8
		case "\u0041\u0033":
			*_bfec = 9
		case "\u0042\u0034\u0049S\u004f":
			*_bfec = 10
		case "\u0042\u0035\u0049S\u004f":
			*_bfec = 11
		case "\u0042\u0034\u004aI\u0053":
			*_bfec = 12
		case "\u0042\u0035\u004aI\u0053":
			*_bfec = 13
		case "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064":
			*_bfec = 14
		case "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039":
			*_bfec = 15
		case "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030":
			*_bfec = 16
		}
	}
	_cgafd, _bbfa = d.Token()
	if _bbfa != nil {
		return _bbfa
	}
	if _fadfe, _bbgde := _cgafd.(_d.EndElement); _bbgde && _fadfe.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgafd)
}

type ST_PhotoAlbumLayout byte

func NewCT_HtmlPublishProperties() *CT_HtmlPublishProperties {
	_fag := &CT_HtmlPublishProperties{}
	return _fag
}
func NewCT_NotesViewProperties() *CT_NotesViewProperties {
	_gafac := &CT_NotesViewProperties{}
	_gafac.CSldViewPr = NewCT_CommonSlideViewProperties()
	return _gafac
}
func (_edac *CmLst) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u0063\u006d\u004c\u0073\u0074"
	return _edac.CT_CommentList.MarshalXML(e, start)
}
func (_dae *CT_CornerDirectionTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dae.DirAttr != ST_TransitionCornerDirectionTypeUnset {
		_daae, _ddg := _dae.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
		if _ddg != nil {
			return _ddg
		}
		start.Attr = append(start.Attr, _daae)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gcae *CT_SlideMasterIdListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fgde := range start.Attr {
		if _fgde.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fgde.Name.Local == "\u0069\u0064" || _fgde.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fgde.Name.Local == "\u0069\u0064" {
			_edfb, _bdcef := _fgde.Value, error(nil)
			if _bdcef != nil {
				return _bdcef
			}
			_gcae.RIdAttr = _edfb
			continue
		}
		if _fgde.Name.Local == "\u0069\u0064" {
			_facf, _fceda := _ag.ParseUint(_fgde.Value, 10, 32)
			if _fceda != nil {
				return _fceda
			}
			_febcc := uint32(_facf)
			_gcae.IdAttr = &_febcc
			continue
		}
	}
_cbfe:
	for {
		_effg, _bgfb := d.Token()
		if _bgfb != nil {
			return _bgfb
		}
		switch _cfbf := _effg.(type) {
		case _d.StartElement:
			switch _cfbf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcae.ExtLst = NewCT_ExtensionList()
				if _gdcaa := d.DecodeElement(_gcae.ExtLst, &_cfbf); _gdcaa != nil {
					return _gdcaa
				}
			default:
				_be.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065r\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _cfbf.Name)
				if _fdcd := d.Skip(); _fdcd != nil {
					return _fdcd
				}
			}
		case _d.EndElement:
			break _cbfe
		case _d.CharData:
		}
	}
	return nil
}
func (_dfefg *CT_ExtensionList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dfefg.Ext != nil {
		_eacb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _cef := range _dfefg.Ext {
			e.EncodeElement(_cef, _eacb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dgfgcc *ST_TLPreviousActionType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cabgb, _bdbca := d.Token()
	if _bdbca != nil {
		return _bdbca
	}
	if _fcgbe, _bdbcf := _cabgb.(_d.EndElement); _bdbcf && _fcgbe.Name == start.Name {
		*_dgfgcc = 1
		return nil
	}
	if _afecc, _aacdc := _cabgb.(_d.CharData); !_aacdc {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cabgb)
	} else {
		switch string(_afecc) {
		case "":
			*_dgfgcc = 0
		case "\u006e\u006f\u006e\u0065":
			*_dgfgcc = 1
		case "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d":
			*_dgfgcc = 2
		}
	}
	_cabgb, _bdbca = d.Token()
	if _bdbca != nil {
		return _bdbca
	}
	if _abccf, _beab := _cabgb.(_d.EndElement); _beab && _abccf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cabgb)
}
func NewCT_SlideTransitionChoice() *CT_SlideTransitionChoice {
	_gdffe := &CT_SlideTransitionChoice{}
	return _gdffe
}
func (_aaegd ST_TLTimeNodeMasterRelation) ValidateWithPath(path string) error {
	switch _aaegd {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aaegd))
	}
	return nil
}
func NewCT_Kinsoku() *CT_Kinsoku { _gdec := &CT_Kinsoku{}; return _gdec }
func NewCT_EmbeddedFontListEntry() *CT_EmbeddedFontListEntry {
	_bbae := &CT_EmbeddedFontListEntry{}
	_bbae.Font = _c.NewCT_TextFont()
	return _bbae
}

// Validate validates the CT_ControlList and its children
func (_aca *CT_ControlList) Validate() error {
	return _aca.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006fl\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_GroupShape and its children
func (_cffa *CT_GroupShape) Validate() error {
	return _cffa.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065")
}
func (_gbbeb *ViewPr) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0076\u0069\u0065\u0077\u0050\u0072"
	return _gbbeb.CT_ViewProperties.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_TLCommonTimeNodeData and its children, prefixing error messages with path
func (_fece *CT_TLCommonTimeNodeData) ValidateWithPath(path string) error {
	if _ffgbg := _fece.PresetClassAttr.ValidateWithPath(path + "\u002f\u0050r\u0065\u0073\u0065t\u0043\u006c\u0061\u0073\u0073\u0041\u0074\u0074\u0072"); _ffgbg != nil {
		return _ffgbg
	}
	if _fece.DurAttr != nil {
		if _cbad := _fece.DurAttr.ValidateWithPath(path + "\u002f\u0044\u0075\u0072\u0041\u0074\u0074\u0072"); _cbad != nil {
			return _cbad
		}
	}
	if _fece.RepeatCountAttr != nil {
		if _cabd := _fece.RepeatCountAttr.ValidateWithPath(path + "\u002f\u0052e\u0070\u0065\u0061t\u0043\u006f\u0075\u006e\u0074\u0041\u0074\u0074\u0072"); _cabd != nil {
			return _cabd
		}
	}
	if _fece.RepeatDurAttr != nil {
		if _dfdag := _fece.RepeatDurAttr.ValidateWithPath(path + "\u002f\u0052\u0065\u0070\u0065\u0061\u0074\u0044\u0075r\u0041\u0074\u0074\u0072"); _dfdag != nil {
			return _dfdag
		}
	}
	if _fece.SpdAttr != nil {
		if _ffbba := _fece.SpdAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0064\u0041\u0074\u0074\u0072"); _ffbba != nil {
			return _ffbba
		}
	}
	if _fece.AccelAttr != nil {
		if _dfdda := _fece.AccelAttr.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006c\u0041\u0074\u0074\u0072"); _dfdda != nil {
			return _dfdda
		}
	}
	if _fece.DecelAttr != nil {
		if _ddddg := _fece.DecelAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u0063\u0065\u006c\u0041\u0074\u0074\u0072"); _ddddg != nil {
			return _ddddg
		}
	}
	if _ddfgg := _fece.RestartAttr.ValidateWithPath(path + "\u002f\u0052\u0065s\u0074\u0061\u0072\u0074\u0041\u0074\u0074\u0072"); _ddfgg != nil {
		return _ddfgg
	}
	if _bbgaa := _fece.FillAttr.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0041\u0074\u0074r"); _bbgaa != nil {
		return _bbgaa
	}
	if _ebafb := _fece.SyncBehaviorAttr.ValidateWithPath(path + "\u002f\u0053\u0079\u006e\u0063\u0042\u0065\u0068\u0061\u0076\u0069\u006fr\u0041\u0074\u0074\u0072"); _ebafb != nil {
		return _ebafb
	}
	if _cfbg := _fece.MasterRelAttr.ValidateWithPath(path + "\u002f\u004d\u0061\u0073\u0074\u0065\u0072\u0052\u0065l\u0041\u0074\u0074\u0072"); _cfbg != nil {
		return _cfbg
	}
	if _aafe := _fece.NodeTypeAttr.ValidateWithPath(path + "\u002f\u004e\u006f\u0064\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _aafe != nil {
		return _aafe
	}
	if _fece.StCondLst != nil {
		if _eafff := _fece.StCondLst.ValidateWithPath(path + "\u002f\u0053\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _eafff != nil {
			return _eafff
		}
	}
	if _fece.EndCondLst != nil {
		if _cbdee := _fece.EndCondLst.ValidateWithPath(path + "/\u0045\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _cbdee != nil {
			return _cbdee
		}
	}
	if _fece.EndSync != nil {
		if _gbddc := _fece.EndSync.ValidateWithPath(path + "\u002f\u0045\u006e\u0064\u0053\u0079\u006e\u0063"); _gbddc != nil {
			return _gbddc
		}
	}
	if _fece.Iterate != nil {
		if _abaab := _fece.Iterate.ValidateWithPath(path + "\u002f\u0049\u0074\u0065\u0072\u0061\u0074\u0065"); _abaab != nil {
			return _abaab
		}
	}
	if _fece.ChildTnLst != nil {
		if _efdcac := _fece.ChildTnLst.ValidateWithPath(path + "/\u0043\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"); _efdcac != nil {
			return _efdcac
		}
	}
	if _fece.SubTnLst != nil {
		if _fdecd := _fece.SubTnLst.ValidateWithPath(path + "\u002fS\u0075\u0062\u0054\u006e\u004c\u0073t"); _fdecd != nil {
			return _fdecd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NotesMasterIdList and its children, prefixing error messages with path
func (_bfbb *CT_NotesMasterIdList) ValidateWithPath(path string) error {
	if _bfbb.NotesMasterId != nil {
		if _ffbf := _bfbb.NotesMasterId.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064"); _ffbf != nil {
			return _ffbf
		}
	}
	return nil
}
func (_cdag *EG_Background) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cdag.BgPr != nil {
		_ggfbc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0067\u0050\u0072"}}
		e.EncodeElement(_cdag.BgPr, _ggfbc)
	}
	if _cdag.BgRef != nil {
		_fafa := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0062\u0067\u0052\u0065\u0066"}}
		e.EncodeElement(_cdag.BgRef, _fafa)
	}
	return nil
}

// ValidateWithPath validates the CT_TLTimeAnimateValueList and its children, prefixing error messages with path
func (_facd *CT_TLTimeAnimateValueList) ValidateWithPath(path string) error {
	for _dbaea, _fgbag := range _facd.Tav {
		if _adagde := _fgbag.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0076\u005b\u0025\u0064\u005d", path, _dbaea)); _adagde != nil {
			return _adagde
		}
	}
	return nil
}
func NewCT_TLOleBuildChart() *CT_TLOleBuildChart { _dfgfd := &CT_TLOleBuildChart{}; return _dfgfd }
func NewCT_TLTimeAnimateValue() *CT_TLTimeAnimateValue {
	_cbbg := &CT_TLTimeAnimateValue{}
	return _cbbg
}
func (_faba *CT_IndexRange) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _efae := range start.Attr {
		if _efae.Name.Local == "\u0073\u0074" {
			_baba, _cacd := _ag.ParseUint(_efae.Value, 10, 32)
			if _cacd != nil {
				return _cacd
			}
			_faba.StAttr = uint32(_baba)
			continue
		}
		if _efae.Name.Local == "\u0065\u006e\u0064" {
			_fccfc, _dbac := _ag.ParseUint(_efae.Value, 10, 32)
			if _dbac != nil {
				return _dbac
			}
			_faba.EndAttr = uint32(_fccfc)
			continue
		}
	}
	for {
		_gcc, _geab := d.Token()
		if _geab != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0064e\u0078R\u0061\u006e\u0067\u0065\u003a\u0020\u0025s", _geab)
		}
		if _ffae, _gdae := _gcc.(_d.EndElement); _gdae && _ffae.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ggbf *CT_Presentation) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ggbf.ServerZoomAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_ggbf.ServerZoomAttr)})
	}
	if _ggbf.FirstSlideNumAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_ggbf.FirstSlideNumAttr)})
	}
	if _ggbf.ShowSpecialPlsOnTitleSldAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ggbf.ShowSpecialPlsOnTitleSldAttr))})
	}
	if _ggbf.RtlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0074\u006c"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ggbf.RtlAttr))})
	}
	if _ggbf.RemovePersonalInfoOnSaveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ggbf.RemovePersonalInfoOnSaveAttr))})
	}
	if _ggbf.CompatModeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ggbf.CompatModeAttr))})
	}
	if _ggbf.StrictFirstAndLastCharsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ggbf.StrictFirstAndLastCharsAttr))})
	}
	if _ggbf.EmbedTrueTypeFontsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ggbf.EmbedTrueTypeFontsAttr))})
	}
	if _ggbf.SaveSubsetFontsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ggbf.SaveSubsetFontsAttr))})
	}
	if _ggbf.AutoCompressPicturesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ggbf.AutoCompressPicturesAttr))})
	}
	if _ggbf.BookmarkIdSeedAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_ggbf.BookmarkIdSeedAttr)})
	}
	if _ggbf.ConformanceAttr != _g.ST_ConformanceClassUnset {
		_gaga, _gdebg := _ggbf.ConformanceAttr.MarshalXMLAttr(_d.Name{Local: "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065"})
		if _gdebg != nil {
			return _gdebg
		}
		start.Attr = append(start.Attr, _gaga)
	}
	e.EncodeToken(start)
	if _ggbf.SldMasterIdLst != nil {
		_dccb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003as\u006c\u0064\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_ggbf.SldMasterIdLst, _dccb)
	}
	if _ggbf.NotesMasterIdLst != nil {
		_fcbd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006eo\u0074\u0065\u0073\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_ggbf.NotesMasterIdLst, _fcbd)
	}
	if _ggbf.HandoutMasterIdLst != nil {
		_edbf := _d.StartElement{Name: _d.Name{Local: "p\u003ah\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061s\u0074\u0065\u0072\u0049dL\u0073\u0074"}}
		e.EncodeElement(_ggbf.HandoutMasterIdLst, _edbf)
	}
	if _ggbf.SldIdLst != nil {
		_cca := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_ggbf.SldIdLst, _cca)
	}
	if _ggbf.SldSz != nil {
		_dbca := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u006c\u0064\u0053\u007a"}}
		e.EncodeElement(_ggbf.SldSz, _dbca)
	}
	_cbeda := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006e\u006f\u0074\u0065\u0073\u0053z"}}
	e.EncodeElement(_ggbf.NotesSz, _cbeda)
	if _ggbf.SmartTags != nil {
		_bceeaa := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
		e.EncodeElement(_ggbf.SmartTags, _bceeaa)
	}
	if _ggbf.EmbeddedFontLst != nil {
		_dfgf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggbf.EmbeddedFontLst, _dfgf)
	}
	if _ggbf.CustShowLst != nil {
		_ggce := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}}
		e.EncodeElement(_ggbf.CustShowLst, _ggce)
	}
	if _ggbf.PhotoAlbum != nil {
		_efcd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070h\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}}
		e.EncodeElement(_ggbf.PhotoAlbum, _efcd)
	}
	if _ggbf.CustDataLst != nil {
		_eedfe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_ggbf.CustDataLst, _eedfe)
	}
	if _ggbf.Kinsoku != nil {
		_bgfeeg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006b\u0069\u006e\u0073\u006f\u006bu"}}
		e.EncodeElement(_ggbf.Kinsoku, _bgfeeg)
	}
	if _ggbf.DefaultTextStyle != nil {
		_aeca := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0064e\u0066\u0061\u0075\u006c\u0074T\u0065\u0078t\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_ggbf.DefaultTextStyle, _aeca)
	}
	if _ggbf.ModifyVerifier != nil {
		_eaec := _d.StartElement{Name: _d.Name{Local: "\u0070\u003am\u006f\u0064\u0069f\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072"}}
		e.EncodeElement(_ggbf.ModifyVerifier, _eaec)
	}
	if _ggbf.ExtLst != nil {
		_ebecd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggbf.ExtLst, _ebecd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SideDirectionTransition and its children
func (_efcda *CT_SideDirectionTransition) Validate() error {
	return _efcda.ValidateWithPath("\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_EightDirectionTransition and its children, prefixing error messages with path
func (_egd *CT_EightDirectionTransition) ValidateWithPath(path string) error {
	if _egd.DirAttr != nil {
		if _cbdb := _egd.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _cbdb != nil {
			return _cbdb
		}
	}
	return nil
}
func (_bfdab ST_TLBehaviorOverrideType) String() string {
	switch _bfdab {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return ""
}

type CT_TLShapeTargetElement struct {

	// Shape ID
	SpidAttr uint32

	// Background
	Bg *CT_Empty

	// Subshape
	SubSp *CT_TLSubShapeId

	// Embedded Chart Element
	OleChartEl *CT_TLOleChartTargetElement

	// Text Element
	TxEl *CT_TLTextTargetElement

	// Graphic Element
	GraphicEl *_c.CT_AnimationElementChoice
}

func (_gafe *ST_PhotoAlbumFrameShape) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gafe = 0
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031":
		*_gafe = 1
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032":
		*_gafe = 2
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033":
		*_gafe = 3
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034":
		*_gafe = 4
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035":
		*_gafe = 5
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036":
		*_gafe = 6
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037":
		*_gafe = 7
	}
	return nil
}
func (_egdgc *ST_SplitterBarState) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fbaaf, _agcga := d.Token()
	if _agcga != nil {
		return _agcga
	}
	if _dcdcd, _dcbdd := _fbaaf.(_d.EndElement); _dcbdd && _dcdcd.Name == start.Name {
		*_egdgc = 1
		return nil
	}
	if _ggcb, _abfcf := _fbaaf.(_d.CharData); !_abfcf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbaaf)
	} else {
		switch string(_ggcb) {
		case "":
			*_egdgc = 0
		case "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d":
			*_egdgc = 1
		case "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064":
			*_egdgc = 2
		case "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d":
			*_egdgc = 3
		}
	}
	_fbaaf, _agcga = d.Token()
	if _agcga != nil {
		return _agcga
	}
	if _gdagc, _cadcf := _fbaaf.(_d.EndElement); _cadcf && _gdagc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbaaf)
}

type CT_TLIterateIntervalPercentage struct {

	// Value
	ValAttr _c.ST_PositivePercentage
}
type ST_TLTimeIndefinite byte

// ValidateWithPath validates the CT_TLTimeConditionList and its children, prefixing error messages with path
func (_aefed *CT_TLTimeConditionList) ValidateWithPath(path string) error {
	for _dbbfd, _cgad := range _aefed.Cond {
		if _bcdd := _cgad.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0043\u006f\u006e\u0064\u005b\u0025\u0064\u005d", path, _dbbfd)); _bcdd != nil {
			return _bcdd
		}
	}
	return nil
}
func (_dcbc *CT_CustomShow) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _dcbc.NameAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _dcbc.IdAttr)})
	e.EncodeToken(start)
	_fggc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0073\u0074"}}
	e.EncodeElement(_dcbc.SldLst, _fggc)
	if _dcbc.ExtLst != nil {
		_fec := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dcbc.ExtLst, _fec)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fadec ST_PlaceholderSize) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ebggd := _d.Attr{}
	_ebggd.Name = name
	switch _fadec {
	case ST_PlaceholderSizeUnset:
		_ebggd.Value = ""
	case ST_PlaceholderSizeFull:
		_ebggd.Value = "\u0066\u0075\u006c\u006c"
	case ST_PlaceholderSizeHalf:
		_ebggd.Value = "\u0068\u0061\u006c\u0066"
	case ST_PlaceholderSizeQuarter:
		_ebggd.Value = "\u0071u\u0061\u0072\u0074\u0065\u0072"
	}
	return _ebggd, nil
}
func (_fbag ST_TLTriggerRuntimeNode) Validate() error { return _fbag.ValidateWithPath("") }
func (_bbbce *ST_Direction) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fffcg, _ccgea := d.Token()
	if _ccgea != nil {
		return _ccgea
	}
	if _cbffa, _agdcac := _fffcg.(_d.EndElement); _agdcac && _cbffa.Name == start.Name {
		*_bbbce = 1
		return nil
	}
	if _cbcdc, _degfe := _fffcg.(_d.CharData); !_degfe {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fffcg)
	} else {
		switch string(_cbcdc) {
		case "":
			*_bbbce = 0
		case "\u0068\u006f\u0072\u007a":
			*_bbbce = 1
		case "\u0076\u0065\u0072\u0074":
			*_bbbce = 2
		}
	}
	_fffcg, _ccgea = d.Token()
	if _ccgea != nil {
		return _ccgea
	}
	if _aeaag, _bbace := _fffcg.(_d.EndElement); _bbace && _aeaag.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fffcg)
}

const (
	ST_TLTriggerEventUnset       ST_TLTriggerEvent = 0
	ST_TLTriggerEventOnBegin     ST_TLTriggerEvent = 1
	ST_TLTriggerEventOnEnd       ST_TLTriggerEvent = 2
	ST_TLTriggerEventBegin       ST_TLTriggerEvent = 3
	ST_TLTriggerEventEnd         ST_TLTriggerEvent = 4
	ST_TLTriggerEventOnClick     ST_TLTriggerEvent = 5
	ST_TLTriggerEventOnDblClick  ST_TLTriggerEvent = 6
	ST_TLTriggerEventOnMouseOver ST_TLTriggerEvent = 7
	ST_TLTriggerEventOnMouseOut  ST_TLTriggerEvent = 8
	ST_TLTriggerEventOnNext      ST_TLTriggerEvent = 9
	ST_TLTriggerEventOnPrev      ST_TLTriggerEvent = 10
	ST_TLTriggerEventOnStopAudio ST_TLTriggerEvent = 11
)

func (_ebfcf *ST_TLBehaviorTransformType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcgae, _dfaccd := d.Token()
	if _dfaccd != nil {
		return _dfaccd
	}
	if _bfddgd, _fgbaf := _fcgae.(_d.EndElement); _fgbaf && _bfddgd.Name == start.Name {
		*_ebfcf = 1
		return nil
	}
	if _decfa, _ggdb := _fcgae.(_d.CharData); !_ggdb {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcgae)
	} else {
		switch string(_decfa) {
		case "":
			*_ebfcf = 0
		case "\u0070\u0074":
			*_ebfcf = 1
		case "\u0069\u006d\u0067":
			*_ebfcf = 2
		}
	}
	_fcgae, _dfaccd = d.Token()
	if _dfaccd != nil {
		return _dfaccd
	}
	if _cbbfg, _dbdgdg := _fcgae.(_d.EndElement); _dbdgdg && _cbbfg.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcgae)
}

// ValidateWithPath validates the CT_SlideViewProperties and its children, prefixing error messages with path
func (_ffffe *CT_SlideViewProperties) ValidateWithPath(path string) error {
	if _fead := _ffffe.CSldViewPr.ValidateWithPath(path + "/\u0043\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"); _fead != nil {
		return _fead
	}
	if _ffffe.ExtLst != nil {
		if _gdag := _ffffe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdag != nil {
			return _gdag
		}
	}
	return nil
}
func (_fcbf ST_TLCommandType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fcbf.String(), start)
}
func (_dbecd ST_TLTimeAnimateValueTime) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dbecd.ST_PositiveFixedPercentage != nil {
		e.Encode(_dbecd.ST_PositiveFixedPercentage)
	}
	if _dbecd.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		e.EncodeToken(_d.CharData(_dbecd.ST_TLTimeIndefinite.String()))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

// Validate validates the CT_TimeNodeList and its children
func (_decdf *CT_TimeNodeList) Validate() error {
	return _decdf.ValidateWithPath("\u0043T\u005fT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074")
}
func (_cedg *CT_CommentAuthor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gfa := range start.Attr {
		if _gfa.Name.Local == "\u0069\u0064" {
			_acbg, _cga := _ag.ParseUint(_gfa.Value, 10, 32)
			if _cga != nil {
				return _cga
			}
			_cedg.IdAttr = uint32(_acbg)
			continue
		}
		if _gfa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dcfe, _ddea := _gfa.Value, error(nil)
			if _ddea != nil {
				return _ddea
			}
			_cedg.NameAttr = _dcfe
			continue
		}
		if _gfa.Name.Local == "\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0073" {
			_afcg, _faad := _gfa.Value, error(nil)
			if _faad != nil {
				return _faad
			}
			_cedg.InitialsAttr = _afcg
			continue
		}
		if _gfa.Name.Local == "\u006ca\u0073\u0074\u0049\u0064\u0078" {
			_bbe, _eadf := _ag.ParseUint(_gfa.Value, 10, 32)
			if _eadf != nil {
				return _eadf
			}
			_cedg.LastIdxAttr = uint32(_bbe)
			continue
		}
		if _gfa.Name.Local == "\u0063\u006c\u0072\u0049\u0064\u0078" {
			_gbag, _dgef := _ag.ParseUint(_gfa.Value, 10, 32)
			if _dgef != nil {
				return _dgef
			}
			_cedg.ClrIdxAttr = uint32(_gbag)
			continue
		}
	}
_eef:
	for {
		_dec, _eedf := d.Token()
		if _eedf != nil {
			return _eedf
		}
		switch _eegb := _dec.(type) {
		case _d.StartElement:
			switch _eegb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cedg.ExtLst = NewCT_ExtensionList()
				if _fedd := d.DecodeElement(_cedg.ExtLst, &_eegb); _fedd != nil {
					return _fedd
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072\u0020\u0025v", _eegb.Name)
				if _ccg := d.Skip(); _ccg != nil {
					return _ccg
				}
			}
		case _d.EndElement:
			break _eef
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_Background and its children, prefixing error messages with path
func (_geedf *EG_Background) ValidateWithPath(path string) error {
	if _geedf.BgPr != nil {
		if _bdca := _geedf.BgPr.ValidateWithPath(path + "\u002f\u0042\u0067P\u0072"); _bdca != nil {
			return _bdca
		}
	}
	if _geedf.BgRef != nil {
		if _acdfa := _geedf.BgRef.ValidateWithPath(path + "\u002f\u0042\u0067\u0052\u0065\u0066"); _acdfa != nil {
			return _acdfa
		}
	}
	return nil
}
func (_bfcdc *ST_TransitionSpeed) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eecd, _gcgf := d.Token()
	if _gcgf != nil {
		return _gcgf
	}
	if _feeec, _bceba := _eecd.(_d.EndElement); _bceba && _feeec.Name == start.Name {
		*_bfcdc = 1
		return nil
	}
	if _bgag, _dege := _eecd.(_d.CharData); !_dege {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eecd)
	} else {
		switch string(_bgag) {
		case "":
			*_bfcdc = 0
		case "\u0073\u006c\u006f\u0077":
			*_bfcdc = 1
		case "\u006d\u0065\u0064":
			*_bfcdc = 2
		case "\u0066\u0061\u0073\u0074":
			*_bfcdc = 3
		}
	}
	_eecd, _gcgf = d.Token()
	if _gcgf != nil {
		return _gcgf
	}
	if _bgccaf, _fgbba := _eecd.(_d.EndElement); _fgbba && _bgccaf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eecd)
}

// Validate validates the HandoutMaster and its children
func (_abggc *HandoutMaster) Validate() error {
	return _abggc.ValidateWithPath("\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072")
}

type CT_PhotoAlbum struct {

	// Black and White
	BwAttr *bool

	// Show/Hide Captions
	ShowCaptionsAttr *bool

	// Photo Album Layout
	LayoutAttr ST_PhotoAlbumLayout

	// Frame Type
	FrameAttr ST_PhotoAlbumFrameShape
	ExtLst    *CT_ExtensionList
}

// Validate validates the CT_ApplicationNonVisualDrawingProps and its children
func (_gdc *CT_ApplicationNonVisualDrawingProps) Validate() error {
	return _gdc.ValidateWithPath("C\u0054\u005f\u0041\u0070\u0070\u006ci\u0063\u0061\u0074\u0069\u006f\u006eN\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006fp\u0073")
}

// Validate validates the CT_NotesSlide and its children
func (_fggfa *CT_NotesSlide) Validate() error {
	return _fggfa.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065")
}
func (_cegf *CT_CustomerData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _cegf.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OutlineViewSlideEntry and its children
func (_bcgcd *CT_OutlineViewSlideEntry) Validate() error {
	return _bcgcd.ValidateWithPath("\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0053\u006c\u0069\u0064\u0065\u0045\u006e\u0074\u0072\u0079")
}
func NewCT_TagList() *CT_TagList { _bccga := &CT_TagList{}; return _bccga }
func (_bfdfc *ST_TLTimeNodeFillType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bfdfc = 0
	case "\u0072\u0065\u006d\u006f\u0076\u0065":
		*_bfdfc = 1
	case "\u0066\u0072\u0065\u0065\u007a\u0065":
		*_bfdfc = 2
	case "\u0068\u006f\u006c\u0064":
		*_bfdfc = 3
	case "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e":
		*_bfdfc = 4
	}
	return nil
}

type CT_EmbeddedFontListEntry struct {

	// Embedded Font Name
	Font *_c.CT_TextFont

	// Regular Embedded Font
	Regular *CT_EmbeddedFontDataId

	// Bold Embedded Font
	Bold *CT_EmbeddedFontDataId

	// Italic Embedded Font
	Italic *CT_EmbeddedFontDataId

	// Bold Italic Embedded Font
	BoldItalic *CT_EmbeddedFontDataId
}

const (
	ST_DirectionUnset ST_Direction = 0
	ST_DirectionHorz  ST_Direction = 1
	ST_DirectionVert  ST_Direction = 2
)

func NewCT_TLTriggerRuntimeNode() *CT_TLTriggerRuntimeNode {
	_ggac := &CT_TLTriggerRuntimeNode{}
	_ggac.ValAttr = ST_TLTriggerRuntimeNode(1)
	return _ggac
}
func (_fbeae *ST_TLTimeNodeMasterRelation) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fbeae = 0
	case "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k":
		*_fbeae = 1
	case "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k":
		*_fbeae = 2
	case "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k":
		*_fbeae = 3
	}
	return nil
}
func (_fgee *CT_SlideIdListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fgee.IdAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _fgee.RIdAttr)})
	e.EncodeToken(start)
	if _fgee.ExtLst != nil {
		_ceea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgee.ExtLst, _ceea)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_afee *CT_SlideMaster) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afee.PreserveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_afee.PreserveAttr))})
	}
	e.EncodeToken(start)
	_aabbbe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_afee.CSld, _aabbbe)
	_agffd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_afee.ClrMap, _agffd)
	if _afee.SldLayoutIdLst != nil {
		_bcgfa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003as\u006c\u0064\u004ca\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_afee.SldLayoutIdLst, _bcgfa)
	}
	if _afee.Transition != nil {
		_badb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_afee.Transition, _badb)
	}
	if _afee.Timing != nil {
		_cgefc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_afee.Timing, _cgefc)
	}
	if _afee.Hf != nil {
		_cedfc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_afee.Hf, _cedfc)
	}
	if _afee.TxStyles != nil {
		_dgefe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_afee.TxStyles, _dgefe)
	}
	if _afee.ExtLst != nil {
		_debf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_afee.ExtLst, _debf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cbeb *CT_TLGraphicalObjectBuild) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bbgcd := range start.Attr {
		if _bbgcd.Name.Local == "\u0073\u0070\u0069\u0064" {
			_agggb, _gggfe := _ag.ParseUint(_bbgcd.Value, 10, 32)
			if _gggfe != nil {
				return _gggfe
			}
			_ffcda := uint32(_agggb)
			_cbeb.SpidAttr = &_ffcda
			continue
		}
		if _bbgcd.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_babc, _ddaee := _ag.ParseUint(_bbgcd.Value, 10, 32)
			if _ddaee != nil {
				return _ddaee
			}
			_aggeb := uint32(_babc)
			_cbeb.GrpIdAttr = &_aggeb
			continue
		}
		if _bbgcd.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_cfce, _bcea := _ag.ParseBool(_bbgcd.Value)
			if _bcea != nil {
				return _bcea
			}
			_cbeb.UiExpandAttr = &_cfce
			continue
		}
	}
_deeeb:
	for {
		_fcbdb, _afbbd := d.Token()
		if _afbbd != nil {
			return _afbbd
		}
		switch _dagb := _fcbdb.(type) {
		case _d.StartElement:
			switch _dagb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}:
				_cbeb.BldAsOne = NewCT_Empty()
				if _ddaag := d.DecodeElement(_cbeb.BldAsOne, &_dagb); _ddaag != nil {
					return _ddaag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}:
				_cbeb.BldSub = _c.NewCT_AnimationGraphicalObjectBuildProperties()
				if _aafbf := d.DecodeElement(_cbeb.BldSub, &_dagb); _aafbf != nil {
					return _aafbf
				}
			default:
				_be.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0047\u0072\u0061\u0070\u0068\u0069c\u0061l\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075i\u006cd\u0020\u0025v", _dagb.Name)
				if _efgf := d.Skip(); _efgf != nil {
					return _efgf
				}
			}
		case _d.EndElement:
			break _deeeb
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TLShapeTargetElement() *CT_TLShapeTargetElement {
	_cefde := &CT_TLShapeTargetElement{}
	return _cefde
}
func (_afcgc *CT_TransitionStartSoundAction) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afcgc.LoopAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u006f\u006f\u0070"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_afcgc.LoopAttr))})
	}
	e.EncodeToken(start)
	_gabad := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073n\u0064"}}
	e.EncodeElement(_afcgc.Snd, _gabad)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gabac ST_PhotoAlbumLayout) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dabef := _d.Attr{}
	_dabef.Name = name
	switch _gabac {
	case ST_PhotoAlbumLayoutUnset:
		_dabef.Value = ""
	case ST_PhotoAlbumLayoutFitToSlide:
		_dabef.Value = "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065"
	case ST_PhotoAlbumLayout1pic:
		_dabef.Value = "\u0031\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout2pic:
		_dabef.Value = "\u0032\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout4pic:
		_dabef.Value = "\u0034\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout1picTitle:
		_dabef.Value = "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case ST_PhotoAlbumLayout2picTitle:
		_dabef.Value = "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case ST_PhotoAlbumLayout4picTitle:
		_dabef.Value = "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce"
	}
	return _dabef, nil
}

type CT_TLIterateIntervalTime struct {

	// Time
	ValAttr ST_TLTime
}

// Validate validates the SldMaster and its children
func (_dbeeg *SldMaster) Validate() error {
	return _dbeeg.ValidateWithPath("\u0053l\u0064\u004d\u0061\u0073\u0074\u0065r")
}
func (_afbd *CT_NotesMaster) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_bfac := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_afbd.CSld, _bfac)
	_dgd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_afbd.ClrMap, _dgd)
	if _afbd.Hf != nil {
		_dfcg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_afbd.Hf, _dfcg)
	}
	if _afbd.NotesStyle != nil {
		_baac := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006eo\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_afbd.NotesStyle, _baac)
	}
	if _afbd.ExtLst != nil {
		_ged := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_afbd.ExtLst, _ged)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dded *CT_Comment) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dded.Pos = _c.NewCT_Point2D()
	for _, _dfa := range start.Attr {
		if _dfa.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064" {
			_dge, _aba := _ag.ParseUint(_dfa.Value, 10, 32)
			if _aba != nil {
				return _aba
			}
			_dded.AuthorIdAttr = uint32(_dge)
			continue
		}
		if _dfa.Name.Local == "\u0064\u0074" {
			_faa, _adcg := ParseStdlibTime(_dfa.Value)
			if _adcg != nil {
				return _adcg
			}
			_dded.DtAttr = &_faa
			continue
		}
		if _dfa.Name.Local == "\u0069\u0064\u0078" {
			_ecbc, _ega := _ag.ParseUint(_dfa.Value, 10, 32)
			if _ega != nil {
				return _ega
			}
			_dded.IdxAttr = uint32(_ecbc)
			continue
		}
	}
_fea:
	for {
		_gg, _adbc := d.Token()
		if _adbc != nil {
			return _adbc
		}
		switch _gddd := _gg.(type) {
		case _d.StartElement:
			switch _gddd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006f\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _ffgd := d.DecodeElement(_dded.Pos, &_gddd); _ffgd != nil {
					return _ffgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}:
				if _adbb := d.DecodeElement(&_dded.Text, &_gddd); _adbb != nil {
					return _adbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dded.ExtLst = NewCT_ExtensionListModify()
				if _gbaa := d.DecodeElement(_dded.ExtLst, &_gddd); _gbaa != nil {
					return _gbaa
				}
			default:
				_be.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _gddd.Name)
				if _dcee := d.Skip(); _dcee != nil {
					return _dcee
				}
			}
		case _d.EndElement:
			break _fea
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_SmartTags() *CT_SmartTags { _eefca := &CT_SmartTags{}; return _eefca }
func (_bbdfd ST_TLOleChartBuildType) ValidateWithPath(path string) error {
	switch _bbdfd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbdfd))
	}
	return nil
}

// ValidateWithPath validates the CT_Connector and its children, prefixing error messages with path
func (_bad *CT_Connector) ValidateWithPath(path string) error {
	if _cfga := _bad.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _cfga != nil {
		return _cfga
	}
	if _bfgga := _bad.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _bfgga != nil {
		return _bfgga
	}
	if _bad.Style != nil {
		if _ebgf := _bad.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ebgf != nil {
			return _ebgf
		}
	}
	if _bad.ExtLst != nil {
		if _ebge := _bad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebge != nil {
			return _ebge
		}
	}
	return nil
}
func (_gcgddc ST_PrintWhat) ValidateWithPath(path string) error {
	switch _gcgddc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcgddc))
	}
	return nil
}
func NewCT_TLIterateIntervalTime() *CT_TLIterateIntervalTime {
	_gfaac := &CT_TLIterateIntervalTime{}
	return _gfaac
}
func NewCT_TransitionSoundAction() *CT_TransitionSoundAction {
	_bdeag := &CT_TransitionSoundAction{}
	return _bdeag
}

type CT_OleObjectChoice struct {
	Embed *CT_OleObjectEmbed
	Link  *CT_OleObjectLink
}

func (_ecdce *CT_SlideLayout) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ecdce.MatchingNameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_ecdce.MatchingNameAttr)})
	}
	if _ecdce.TypeAttr != ST_SlideLayoutTypeUnset {
		_ggeb, _cbcac := _ecdce.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _cbcac != nil {
			return _cbcac
		}
		start.Attr = append(start.Attr, _ggeb)
	}
	if _ecdce.PreserveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ecdce.PreserveAttr))})
	}
	if _ecdce.UserDrawnAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ecdce.UserDrawnAttr))})
	}
	if _ecdce.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ecdce.ShowMasterSpAttr))})
	}
	if _ecdce.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_ecdce.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_eaeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_ecdce.CSld, _eaeb)
	if _ecdce.ClrMapOvr != nil {
		_adceg := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_ecdce.ClrMapOvr, _adceg)
	}
	if _ecdce.Transition != nil {
		_cadc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_ecdce.Transition, _cadc)
	}
	if _ecdce.Timing != nil {
		_fabag := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_ecdce.Timing, _fabag)
	}
	if _ecdce.Hf != nil {
		_cdcg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_ecdce.Hf, _cdcg)
	}
	if _ecdce.ExtLst != nil {
		_abaa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecdce.ExtLst, _abaa)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_ModifyVerifier struct {

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinValueAttr *uint32

	// Cryptographic Provider Type
	CryptProviderTypeAttr _g.ST_CryptProv

	// Cryptographic Algorithm Class
	CryptAlgorithmClassAttr _g.ST_AlgClass

	// Cryptographic Algorithm Type
	CryptAlgorithmTypeAttr _g.ST_AlgType

	// Cryptographic Hashing Algorithm
	CryptAlgorithmSidAttr *uint32

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Salt for Password Verifier
	SaltDataAttr *string

	// Password Hash
	HashDataAttr *string

	// Cryptographic Provider
	CryptProviderAttr *string

	// Cryptographic Algorithm Extensibility
	AlgIdExtAttr *uint32

	// Algorithm Extensibility Source
	AlgIdExtSourceAttr *string

	// Cryptographic Provider Type Extensibility
	CryptProviderTypeExtAttr *uint32

	// Provider Type Extensibility Source
	CryptProviderTypeExtSourceAttr *string
}

func (_aefcd *CT_ShapeNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_faacc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_aefcd.CNvPr, _faacc)
	_cbafb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u004e\u0076\u0053\u0070\u0050r"}}
	e.EncodeElement(_aefcd.CNvSpPr, _cbafb)
	_dbaa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_aefcd.NvPr, _dbaa)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TLOleChartTargetElement struct {

	// Type
	TypeAttr ST_TLChartSubelementType

	// Level
	LvlAttr *uint32
}

func (_cbbdf *CT_OutlineViewSlideEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _cbbdf.IdAttr)})
	if _cbbdf.CollapseAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006f\u006c\u006c\u0061\u0070\u0073\u0065"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_cbbdf.CollapseAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLTriggerRuntimeNode and its children
func (_dbfda *CT_TLTriggerRuntimeNode) Validate() error {
	return _dbfda.ValidateWithPath("\u0043\u0054\u005fTL\u0054\u0072\u0069\u0067\u0067\u0065\u0072\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065")
}
func (_dabc *Notes) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dabc.CT_NotesSlide = *NewCT_NotesSlide()
	for _, _afaa := range start.Attr {
		if _afaa.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_ggge, _cfdgd := _ag.ParseBool(_afaa.Value)
			if _cfdgd != nil {
				return _cfdgd
			}
			_dabc.ShowMasterSpAttr = &_ggge
			continue
		}
		if _afaa.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_beaca, _aeage := _ag.ParseBool(_afaa.Value)
			if _aeage != nil {
				return _aeage
			}
			_dabc.ShowMasterPhAnimAttr = &_beaca
			continue
		}
	}
_cebgd:
	for {
		_aedc, _bgaac := d.Token()
		if _bgaac != nil {
			return _bgaac
		}
		switch _eeeea := _aedc.(type) {
		case _d.StartElement:
			switch _eeeea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _bebcc := d.DecodeElement(_dabc.CSld, &_eeeea); _bebcc != nil {
					return _bebcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_dabc.ClrMapOvr = _c.NewCT_ColorMappingOverride()
				if _abccbd := d.DecodeElement(_dabc.ClrMapOvr, &_eeeea); _abccbd != nil {
					return _abccbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dabc.ExtLst = NewCT_ExtensionListModify()
				if _efccc := d.DecodeElement(_dabc.ExtLst, &_eeeea); _efccc != nil {
					return _efccc
				}
			default:
				_be.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u004e\u006f\u0074e\u0073 \u0025\u0076", _eeeea.Name)
				if _gdfa := d.Skip(); _gdfa != nil {
					return _gdfa
				}
			}
		case _d.EndElement:
			break _cebgd
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_dcbe *CT_ExtensionList) ValidateWithPath(path string) error {
	for _cafe, _aeaa := range _dcbe.Ext {
		if _agfe := _aeaa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _cafe)); _agfe != nil {
			return _agfe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HandoutMasterIdList and its children, prefixing error messages with path
func (_afbc *CT_HandoutMasterIdList) ValidateWithPath(path string) error {
	if _afbc.HandoutMasterId != nil {
		if _cgbbg := _afbc.HandoutMasterId.ValidateWithPath(path + "\u002f\u0048a\u006e\u0064\u006fu\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"); _cgbbg != nil {
			return _cgbbg
		}
	}
	return nil
}
func NewCT_CustomerDataList() *CT_CustomerDataList { _geb := &CT_CustomerDataList{}; return _geb }

// Validate validates the CT_SlideViewProperties and its children
func (_dgcaf *CT_SlideViewProperties) Validate() error {
	return _dgcaf.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}
func NewCT_TLTimeAnimateValueList() *CT_TLTimeAnimateValueList {
	_bgbbb := &CT_TLTimeAnimateValueList{}
	return _bgbbb
}

// Validate validates the EG_TopLevelSlide and its children
func (_ecgee *EG_TopLevelSlide) Validate() error {
	return _ecgee.ValidateWithPath("\u0045\u0047_\u0054\u006f\u0070L\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065")
}
func (_aadd *CT_GraphicalObjectFrameNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gcdac := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_aadd.CNvPr, _gcdac)
	_acde := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u004evG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_aadd.CNvGraphicFramePr, _acde)
	_edaa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_aadd.NvPr, _edaa)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GroupShapeNonVisual and its children
func (_bec *CT_GroupShapeNonVisual) Validate() error {
	return _bec.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c")
}

type CT_TLAnimateRotationBehavior struct {

	// By
	ByAttr *int32

	// From
	FromAttr *int32

	// To
	ToAttr *int32
	CBhvr  *CT_TLCommonBehaviorData
}

// ValidateWithPath validates the CT_TLSubShapeId and its children, prefixing error messages with path
func (_eace *CT_TLSubShapeId) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_TLIterateIntervalPercentage and its children, prefixing error messages with path
func (_afabca *CT_TLIterateIntervalPercentage) ValidateWithPath(path string) error {
	if _cacda := _afabca.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cacda != nil {
		return _cacda
	}
	return nil
}
func NewCT_SlideTransition() *CT_SlideTransition { _aeba := &CT_SlideTransition{}; return _aeba }
func (_beafbb ST_TLAnimateColorSpace) ValidateWithPath(path string) error {
	switch _beafbb {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_beafbb))
	}
	return nil
}
func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_beaac := &CT_PictureNonVisual{}
	_beaac.CNvPr = _c.NewCT_NonVisualDrawingProps()
	_beaac.CNvPicPr = _c.NewCT_NonVisualPictureProperties()
	_beaac.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _beaac
}
func (_fbab ST_TLTimeNodeFillType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dggaff := _d.Attr{}
	_dggaff.Name = name
	switch _fbab {
	case ST_TLTimeNodeFillTypeUnset:
		_dggaff.Value = ""
	case ST_TLTimeNodeFillTypeRemove:
		_dggaff.Value = "\u0072\u0065\u006d\u006f\u0076\u0065"
	case ST_TLTimeNodeFillTypeFreeze:
		_dggaff.Value = "\u0066\u0072\u0065\u0065\u007a\u0065"
	case ST_TLTimeNodeFillTypeHold:
		_dggaff.Value = "\u0068\u006f\u006c\u0064"
	case ST_TLTimeNodeFillTypeTransition:
		_dggaff.Value = "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"
	}
	return _dggaff, nil
}
func (_dddg *CT_OleObject) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dddg.Choice = NewCT_OleObjectChoice()
	for _, _cbggg := range start.Attr {
		if _cbggg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cbggg.Name.Local == "\u0069\u0064" {
			_ddgd, _ggfag := _cbggg.Value, error(nil)
			if _ggfag != nil {
				return _ggfag
			}
			_dddg.IdAttr = &_ddgd
			continue
		}
		if _cbggg.Name.Local == "\u0073\u0070\u0069\u0064" {
			_bdeca, _aeb := _cbggg.Value, error(nil)
			if _aeb != nil {
				return _aeb
			}
			_dddg.SpidAttr = &_bdeca
			continue
		}
		if _cbggg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_egdcb, _cfbc := _cbggg.Value, error(nil)
			if _cfbc != nil {
				return _cfbc
			}
			_dddg.NameAttr = &_egdcb
			continue
		}
		if _cbggg.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_gdbfb, _dbbbf := _ag.ParseBool(_cbggg.Value)
			if _dbbbf != nil {
				return _dbbbf
			}
			_dddg.ShowAsIconAttr = &_gdbfb
			continue
		}
		if _cbggg.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_egaa, _gcde := _cbggg.Value, error(nil)
			if _gcde != nil {
				return _gcde
			}
			_dddg.ProgIdAttr = &_egaa
			continue
		}
		if _cbggg.Name.Local == "\u0069\u006d\u0067\u0057" {
			_bfbe, _bacdd := _ag.ParseInt(_cbggg.Value, 10, 32)
			if _bacdd != nil {
				return _bacdd
			}
			_bbeg := int32(_bfbe)
			_dddg.ImgWAttr = &_bbeg
			continue
		}
		if _cbggg.Name.Local == "\u0069\u006d\u0067\u0048" {
			_dfgb, _cdeb := _ag.ParseInt(_cbggg.Value, 10, 32)
			if _cdeb != nil {
				return _cdeb
			}
			_ebeb := int32(_dfgb)
			_dddg.ImgHAttr = &_ebeb
			continue
		}
	}
_acf:
	for {
		_bgcdf, _gdad := d.Token()
		if _gdad != nil {
			return _gdad
		}
		switch _adafa := _bgcdf.(type) {
		case _d.StartElement:
			switch _adafa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_dddg.Choice = NewCT_OleObjectChoice()
				if _cgdb := d.DecodeElement(&_dddg.Choice.Embed, &_adafa); _cgdb != nil {
					return _cgdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_dddg.Choice = NewCT_OleObjectChoice()
				if _bcbe := d.DecodeElement(&_dddg.Choice.Link, &_adafa); _bcbe != nil {
					return _bcbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_dddg.Pic = NewCT_Picture()
				if _cegdf := d.DecodeElement(_dddg.Pic, &_adafa); _cegdf != nil {
					return _cegdf
				}
			default:
				_be.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _adafa.Name)
				if _bfcc := d.Skip(); _bfcc != nil {
					return _bfcc
				}
			}
		case _d.EndElement:
			break _acf
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTemplate and its children, prefixing error messages with path
func (_ccgcb *CT_TLTemplate) ValidateWithPath(path string) error {
	if _bfed := _ccgcb.TnLst.ValidateWithPath(path + "\u002f\u0054\u006e\u004c\u0073\u0074"); _bfed != nil {
		return _bfed
	}
	return nil
}
func (_ecbf *CT_CommentAuthor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _ecbf.IdAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", _ecbf.NameAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0073"}, Value: _b.Sprintf("\u0025\u0076", _ecbf.InitialsAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006ca\u0073\u0074\u0049\u0064\u0078"}, Value: _b.Sprintf("\u0025\u0076", _ecbf.LastIdxAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006c\u0072\u0049\u0064\u0078"}, Value: _b.Sprintf("\u0025\u0076", _ecbf.ClrIdxAttr)})
	e.EncodeToken(start)
	if _ecbf.ExtLst != nil {
		_aea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecbf.ExtLst, _aea)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_ViewTypeUnset            ST_ViewType = 0
	ST_ViewTypeSldView          ST_ViewType = 1
	ST_ViewTypeSldMasterView    ST_ViewType = 2
	ST_ViewTypeNotesView        ST_ViewType = 3
	ST_ViewTypeHandoutView      ST_ViewType = 4
	ST_ViewTypeNotesMasterView  ST_ViewType = 5
	ST_ViewTypeOutlineView      ST_ViewType = 6
	ST_ViewTypeSldSorterView    ST_ViewType = 7
	ST_ViewTypeSldThumbnailView ST_ViewType = 8
)

func (_befbf *CT_TLTriggerRuntimeNode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_befbf.ValAttr = ST_TLTriggerRuntimeNode(1)
	for _, _fdfa := range start.Attr {
		if _fdfa.Name.Local == "\u0076\u0061\u006c" {
			_befbf.ValAttr.UnmarshalXMLAttr(_fdfa)
			continue
		}
	}
	for {
		_cbacg, _dacaf := d.Token()
		if _dacaf != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u004c\u0054r\u0069\u0067\u0067\u0065\u0072\u0052\u0075n\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u003a\u0020%\u0073", _dacaf)
		}
		if _fbaac, _baad := _cbacg.(_d.EndElement); _baad && _fbaac.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HtmlPublishProperties and its children, prefixing error messages with path
func (_fbee *CT_HtmlPublishProperties) ValidateWithPath(path string) error {
	if _fbee.SldAll != nil {
		if _fbcbg := _fbee.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _fbcbg != nil {
			return _fbcbg
		}
	}
	if _fbee.SldRg != nil {
		if _dfgg := _fbee.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _dfgg != nil {
			return _dfgg
		}
	}
	if _fbee.CustShow != nil {
		if _gdbge := _fbee.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _gdbge != nil {
			return _gdbge
		}
	}
	if _fbee.ExtLst != nil {
		if _ddagd := _fbee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddagd != nil {
			return _ddagd
		}
	}
	return nil
}
func (_fcgg ST_TLTriggerEvent) Validate() error { return _fcgg.ValidateWithPath("") }
func (_aggfc *NotesMaster) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072"
	return _aggfc.CT_NotesMaster.MarshalXML(e, start)
}

type CT_HtmlPublishProperties struct {

	// Show Speaker Notes
	ShowSpeakerNotesAttr *bool

	// Target Output Profile
	TargetAttr *string

	// HTML Output Title
	TitleAttr *string
	IdAttr    string

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId
	ExtLst   *CT_ExtensionList
}

func (_degbd ST_PhotoAlbumLayout) ValidateWithPath(path string) error {
	switch _degbd {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_degbd))
	}
	return nil
}

// Validate validates the CT_TLByAnimateColorTransform and its children
func (_acabg *CT_TLByAnimateColorTransform) Validate() error {
	return _acabg.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043o\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d")
}
func (_bgffb *CT_TLTriggerTimeNodeID) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _bgffb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_daeac *SldMaster) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_daeac.CT_SlideMaster = *NewCT_SlideMaster()
	for _, _acdac := range start.Attr {
		if _acdac.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_eaaeg, _dbdgc := _ag.ParseBool(_acdac.Value)
			if _dbdgc != nil {
				return _dbdgc
			}
			_daeac.PreserveAttr = &_eaaeg
			continue
		}
	}
_fcaec:
	for {
		_gbade, _gfdbb := d.Token()
		if _gfdbb != nil {
			return _gfdbb
		}
		switch _dgbf := _gbade.(type) {
		case _d.StartElement:
			switch _dgbf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _cegfd := d.DecodeElement(_daeac.CSld, &_dgbf); _cegfd != nil {
					return _cegfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _aggce := d.DecodeElement(_daeac.ClrMap, &_dgbf); _aggce != nil {
					return _aggce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}:
				_daeac.SldLayoutIdLst = NewCT_SlideLayoutIdList()
				if _eadcf := d.DecodeElement(_daeac.SldLayoutIdLst, &_dgbf); _eadcf != nil {
					return _eadcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_daeac.Transition = NewCT_SlideTransition()
				if _daefc := d.DecodeElement(_daeac.Transition, &_dgbf); _daefc != nil {
					return _daefc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_daeac.Timing = NewCT_SlideTiming()
				if _ggeag := d.DecodeElement(_daeac.Timing, &_dgbf); _ggeag != nil {
					return _ggeag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_daeac.Hf = NewCT_HeaderFooter()
				if _ebcca := d.DecodeElement(_daeac.Hf, &_dgbf); _ebcca != nil {
					return _ebcca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_daeac.TxStyles = NewCT_SlideMasterTextStyles()
				if _cgdgc := d.DecodeElement(_daeac.TxStyles, &_dgbf); _cgdgc != nil {
					return _cgdgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_daeac.ExtLst = NewCT_ExtensionListModify()
				if _abeg := d.DecodeElement(_daeac.ExtLst, &_dgbf); _abeg != nil {
					return _abeg
				}
			default:
				_be.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u004d\u0061\u0073t\u0065\u0072 \u0025\u0076", _dgbf.Name)
				if _faacb := d.Skip(); _faacb != nil {
					return _faacb
				}
			}
		case _d.EndElement:
			break _fcaec
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_EmbeddedFontListEntry and its children
func (_baec *CT_EmbeddedFontListEntry) Validate() error {
	return _baec.ValidateWithPath("\u0043T\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079")
}

// Validate validates the CT_TLTimeNodeSequence and its children
func (_eadb *CT_TLTimeNodeSequence) Validate() error {
	return _eadb.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0053e\u0071\u0075\u0065\u006e\u0063\u0065")
}
func (_dbffe ST_TLBehaviorAccumulateType) String() string {
	switch _dbffe {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return ""
}

// Validate validates the CT_HandoutMasterIdList and its children
func (_dbeb *CT_HandoutMasterIdList) Validate() error {
	return _dbeb.ValidateWithPath("\u0043\u0054\u005f\u0048an\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074")
}

type CT_Control struct {
	ExtLst         *CT_ExtensionList
	Pic            *CT_Picture
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

// ValidateWithPath validates the AG_ChildSlide and its children, prefixing error messages with path
func (_ce *AG_ChildSlide) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_TLTimeNodeExclusive and its children, prefixing error messages with path
func (_agfcd *CT_TLTimeNodeExclusive) ValidateWithPath(path string) error {
	if _aeagg := _agfcd.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _aeagg != nil {
		return _aeagg
	}
	return nil
}

type ST_TLAnimateEffectTransition byte

func (_gafb ST_TLBehaviorAdditiveType) ValidateWithPath(path string) error {
	switch _gafb {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gafb))
	}
	return nil
}
func (_gdbbf *ST_TLTime) ValidateWithPath(path string) error {
	_befef := []string{}
	if _gdbbf.Uint32 != nil {
		_befef = append(_befef, "\u0055\u0069\u006e\u0074\u0033\u0032")
	}
	if _gdbbf.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		_befef = append(_befef, "\u0053\u0054\u005f\u0054LT\u0069\u006d\u0065\u0049\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065")
	}
	if len(_befef) > 1 {
		return _b.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _befef)
	}
	return nil
}

type CT_SlideTransition struct {

	// Transition Speed
	SpdAttr ST_TransitionSpeed

	// Advance on Click
	AdvClickAttr *bool

	// Advance after time
	AdvTmAttr *uint32
	Choice    *CT_SlideTransitionChoice

	// Sound Action
	SndAc  *CT_TransitionSoundAction
	ExtLst *CT_ExtensionListModify
}

func (_bbdef ST_TLChartSubelementType) Validate() error  { return _bbdef.ValidateWithPath("") }
func (_badec ST_TLBehaviorOverrideType) Validate() error { return _badec.ValidateWithPath("") }

// ValidateWithPath validates the CT_TimeNodeList and its children, prefixing error messages with path
func (_adcbd *CT_TimeNodeList) ValidateWithPath(path string) error {
	for _ebeee, _baacb := range _adcbd.Par {
		if _fdfda := _baacb.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0050\u0061\u0072\u005b\u0025\u0064\u005d", path, _ebeee)); _fdfda != nil {
			return _fdfda
		}
	}
	for _gbgec, _bbgbe := range _adcbd.Seq {
		if _adccb := _bbgbe.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0071\u005b\u0025\u0064\u005d", path, _gbgec)); _adccb != nil {
			return _adccb
		}
	}
	for _ceebg, _gdaga := range _adcbd.Excl {
		if _ggbad := _gdaga.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0045\u0078\u0063\u006c\u005b\u0025\u0064\u005d", path, _ceebg)); _ggbad != nil {
			return _ggbad
		}
	}
	for _bedgc, _dffce := range _adcbd.Anim {
		if _cccfff := _dffce.ValidateWithPath(_b.Sprintf("%\u0073\u002f\u0041\u006e\u0069\u006d\u005b\u0025\u0064\u005d", path, _bedgc)); _cccfff != nil {
			return _cccfff
		}
	}
	for _cebfg, _gfgd := range _adcbd.AnimClr {
		if _fdaaf := _gfgd.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0043\u006cr\u005b\u0025\u0064\u005d", path, _cebfg)); _fdaaf != nil {
			return _fdaaf
		}
	}
	for _bfdb, _fgfdc := range _adcbd.AnimEffect {
		if _ddbd := _fgfdc.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063t\u005b\u0025\u0064\u005d", path, _bfdb)); _ddbd != nil {
			return _ddbd
		}
	}
	for _dgfa, _gagab := range _adcbd.AnimMotion {
		if _ggcdf := _gagab.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006fn\u005b\u0025\u0064\u005d", path, _dgfa)); _ggcdf != nil {
			return _ggcdf
		}
	}
	for _fcdac, _fdafa := range _adcbd.AnimRot {
		if _aafcg := _fdafa.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0052\u006ft\u005b\u0025\u0064\u005d", path, _fcdac)); _aafcg != nil {
			return _aafcg
		}
	}
	for _cacgc, _dfdg := range _adcbd.AnimScale {
		if _cgacb := _dfdg.ValidateWithPath(_b.Sprintf("\u0025\u0073/\u0041\u006e\u0069m\u0053\u0063\u0061\u006c\u0065\u005b\u0025\u0064\u005d", path, _cacgc)); _cgacb != nil {
			return _cgacb
		}
	}
	for _edfcc, _gcegg := range _adcbd.Cmd {
		if _abed := _gcegg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u006d\u0064\u005b\u0025\u0064\u005d", path, _edfcc)); _abed != nil {
			return _abed
		}
	}
	for _egbbe, _gcbba := range _adcbd.Set {
		if _dccad := _gcbba.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _egbbe)); _dccad != nil {
			return _dccad
		}
	}
	for _ecbfd, _decge := range _adcbd.Audio {
		if _ggaa := _decge.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fA\u0075\u0064\u0069\u006f\u005b\u0025\u0064\u005d", path, _ecbfd)); _ggaa != nil {
			return _ggaa
		}
	}
	for _ffeb, _cded := range _adcbd.Video {
		if _gdbgd := _cded.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fV\u0069\u0064\u0065\u006f\u005b\u0025\u0064\u005d", path, _ffeb)); _gdbgd != nil {
			return _gdbgd
		}
	}
	return nil
}
func (_dbbfdf *ST_PhotoAlbumLayout) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gggd, _gcab := d.Token()
	if _gcab != nil {
		return _gcab
	}
	if _bgfeb, _geaca := _gggd.(_d.EndElement); _geaca && _bgfeb.Name == start.Name {
		*_dbbfdf = 1
		return nil
	}
	if _afbce, _afgf := _gggd.(_d.CharData); !_afgf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gggd)
	} else {
		switch string(_afbce) {
		case "":
			*_dbbfdf = 0
		case "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065":
			*_dbbfdf = 1
		case "\u0031\u0070\u0069\u0063":
			*_dbbfdf = 2
		case "\u0032\u0070\u0069\u0063":
			*_dbbfdf = 3
		case "\u0034\u0070\u0069\u0063":
			*_dbbfdf = 4
		case "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_dbbfdf = 5
		case "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_dbbfdf = 6
		case "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_dbbfdf = 7
		}
	}
	_gggd, _gcab = d.Token()
	if _gcab != nil {
		return _gcab
	}
	if _efeff, _gddafd := _gggd.(_d.EndElement); _gddafd && _efeff.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gggd)
}
func (_eccae ST_TransitionInOutDirectionType) Validate() error { return _eccae.ValidateWithPath("") }

type CT_WheelTransition struct {

	// Spokes
	SpokesAttr *uint32
}

func NewCT_NotesTextViewProperties() *CT_NotesTextViewProperties {
	_afca := &CT_NotesTextViewProperties{}
	_afca.CViewPr = NewCT_CommonViewProperties()
	return _afca
}
func (_ecgda ST_TLBehaviorOverrideType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ecgda.String(), start)
}
func (_bgbaa *CT_SlideRelationshipList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gfbf:
	for {
		_gaade, _gcbd := d.Token()
		if _gcbd != nil {
			return _gcbd
		}
		switch _bgfc := _gaade.(type) {
		case _d.StartElement:
			switch _bgfc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064"}:
				_gadge := NewCT_SlideRelationshipListEntry()
				if _edccf := d.DecodeElement(_gadge, &_bgfc); _edccf != nil {
					return _edccf
				}
				_bgbaa.Sld = append(_bgbaa.Sld, _gadge)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069p\u004c\u0069\u0073\u0074\u0020%\u0076", _bgfc.Name)
				if _adbcdc := d.Skip(); _adbcdc != nil {
					return _adbcdc
				}
			}
		case _d.EndElement:
			break _gfbf
		case _d.CharData:
		}
	}
	return nil
}
func (_gba *CT_BuildList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ecgb:
	for {
		_ddf, _cdd := d.Token()
		if _cdd != nil {
			return _cdd
		}
		switch _gbe := _ddf.(type) {
		case _d.StartElement:
			switch _gbe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}:
				_bfd := NewCT_TLBuildParagraph()
				if _dac := d.DecodeElement(_bfd, &_gbe); _dac != nil {
					return _dac
				}
				_gba.BldP = append(_gba.BldP, _bfd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}:
				_gda := NewCT_TLBuildDiagram()
				if _ebb := d.DecodeElement(_gda, &_gbe); _ebb != nil {
					return _ebb
				}
				_gba.BldDgm = append(_gba.BldDgm, _gda)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}:
				_cbbd := NewCT_TLOleBuildChart()
				if _effe := d.DecodeElement(_cbbd, &_gbe); _effe != nil {
					return _effe
				}
				_gba.BldOleChart = append(_gba.BldOleChart, _cbbd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}:
				_eac := NewCT_TLGraphicalObjectBuild()
				if _dcf := d.DecodeElement(_eac, &_gbe); _dcf != nil {
					return _dcf
				}
				_gba.BldGraphic = append(_gba.BldGraphic, _eac)
			default:
				_be.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u0075\u0069l\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _gbe.Name)
				if _ffd := d.Skip(); _ffd != nil {
					return _ffd
				}
			}
		case _d.EndElement:
			break _ecgb
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TLPreviousActionTypeUnset     ST_TLPreviousActionType = 0
	ST_TLPreviousActionTypeNone      ST_TLPreviousActionType = 1
	ST_TLPreviousActionTypeSkipTimed ST_TLPreviousActionType = 2
)

func (_bbf *CT_OutlineViewSlideList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bbf.Sld != nil {
		_ecafb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073l\u0064"}}
		for _, _dggd := range _bbf.Sld {
			e.EncodeElement(_dggd, _ecafb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ddfag ST_TLTimeIndefinite) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dcaef := _d.Attr{}
	_dcaef.Name = name
	switch _ddfag {
	case ST_TLTimeIndefiniteUnset:
		_dcaef.Value = ""
	case ST_TLTimeIndefiniteIndefinite:
		_dcaef.Value = "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065"
	}
	return _dcaef, nil
}
func (_gcada ST_WebColorType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fbgfb := _d.Attr{}
	_fbgfb.Name = name
	switch _gcada {
	case ST_WebColorTypeUnset:
		_fbgfb.Value = ""
	case ST_WebColorTypeNone:
		_fbgfb.Value = "\u006e\u006f\u006e\u0065"
	case ST_WebColorTypeBrowser:
		_fbgfb.Value = "\u0062r\u006f\u0077\u0073\u0065\u0072"
	case ST_WebColorTypePresentationText:
		_fbgfb.Value = "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_WebColorTypePresentationAccent:
		_fbgfb.Value = "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074"
	case ST_WebColorTypeWhiteTextOnBlack:
		_fbgfb.Value = "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b"
	case ST_WebColorTypeBlackTextOnWhite:
		_fbgfb.Value = "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065"
	}
	return _fbgfb, nil
}
func (_dda *CT_CommentList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aaeb:
	for {
		_cee, _dgbe := d.Token()
		if _dgbe != nil {
			return _dgbe
		}
		switch _cfa := _cee.(type) {
		case _d.StartElement:
			switch _cfa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d"}:
				_cebg := NewCT_Comment()
				if _dceeb := d.DecodeElement(_cebg, &_cfa); _dceeb != nil {
					return _dceeb
				}
				_dda.Cm = append(_dda.Cm, _cebg)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074L\u0069s\u0074\u0020\u0025\u0076", _cfa.Name)
				if _bgb := d.Skip(); _bgb != nil {
					return _bgb
				}
			}
		case _d.EndElement:
			break _aaeb
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_WebProperties() *CT_WebProperties { _accb := &CT_WebProperties{}; return _accb }
func (_befga *CT_ViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _aebeb := range start.Attr {
		if _aebeb.Name.Local == "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077" {
			_befga.LastViewAttr.UnmarshalXMLAttr(_aebeb)
			continue
		}
		if _aebeb.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_edfd, _ecea := _ag.ParseBool(_aebeb.Value)
			if _ecea != nil {
				return _ecea
			}
			_befga.ShowCommentsAttr = &_edfd
			continue
		}
	}
_dbfea:
	for {
		_bccd, _bccdg := d.Token()
		if _bccdg != nil {
			return _bccdg
		}
		switch _cfeffc := _bccd.(type) {
		case _d.StartElement:
			switch _cfeffc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_befga.NormalViewPr = NewCT_NormalViewProperties()
				if _bgbae := d.DecodeElement(_befga.NormalViewPr, &_cfeffc); _bgbae != nil {
					return _bgbae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_befga.SlideViewPr = NewCT_SlideViewProperties()
				if _aebbc := d.DecodeElement(_befga.SlideViewPr, &_cfeffc); _aebbc != nil {
					return _aebbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_befga.OutlineViewPr = NewCT_OutlineViewProperties()
				if _cbdcd := d.DecodeElement(_befga.OutlineViewPr, &_cfeffc); _cbdcd != nil {
					return _cbdcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_befga.NotesTextViewPr = NewCT_NotesTextViewProperties()
				if _eagf := d.DecodeElement(_befga.NotesTextViewPr, &_cfeffc); _eagf != nil {
					return _eagf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_befga.SorterViewPr = NewCT_SlideSorterViewProperties()
				if _cada := d.DecodeElement(_befga.SorterViewPr, &_cfeffc); _cada != nil {
					return _cada
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_befga.NotesViewPr = NewCT_NotesViewProperties()
				if _ddcb := d.DecodeElement(_befga.NotesViewPr, &_cfeffc); _ddcb != nil {
					return _ddcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_befga.GridSpacing = _c.NewCT_PositiveSize2D()
				if _abec := d.DecodeElement(_befga.GridSpacing, &_cfeffc); _abec != nil {
					return _abec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_befga.ExtLst = NewCT_ExtensionList()
				if _eebf := d.DecodeElement(_befga.ExtLst, &_cfeffc); _eebf != nil {
					return _eebf
				}
			default:
				_be.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cfeffc.Name)
				if _dbag := d.Skip(); _dbag != nil {
					return _dbag
				}
			}
		case _d.EndElement:
			break _dbfea
		case _d.CharData:
		}
	}
	return nil
}

type CT_ConnectorNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_c.CT_NonVisualDrawingProps

	// Non-Visual Connector Shape Drawing Properties
	CNvCxnSpPr *_c.CT_NonVisualConnectorProperties

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

// Validate validates the CT_SplitTransition and its children
func (_dgdcb *CT_SplitTransition) Validate() error {
	return _dgdcb.ValidateWithPath("\u0043T\u005fS\u0070\u006c\u0069\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}
func NewCT_GroupShape() *CT_GroupShape {
	_cgcdg := &CT_GroupShape{}
	_cgcdg.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_cgcdg.GrpSpPr = _c.NewCT_GroupShapeProperties()
	return _cgcdg
}

// ValidateWithPath validates the CT_SlideIdList and its children, prefixing error messages with path
func (_dceg *CT_SlideIdList) ValidateWithPath(path string) error {
	for _ebgfe, _efee := range _dceg.SldId {
		if _acaf := _efee.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002fS\u006c\u0064\u0049\u0064\u005b\u0025\u0064\u005d", path, _ebgfe)); _acaf != nil {
			return _acaf
		}
	}
	return nil
}

const (
	ST_TLAnimateColorSpaceUnset ST_TLAnimateColorSpace = 0
	ST_TLAnimateColorSpaceRgb   ST_TLAnimateColorSpace = 1
	ST_TLAnimateColorSpaceHsl   ST_TLAnimateColorSpace = 2
)

func NewCT_TLSetBehavior() *CT_TLSetBehavior {
	_cgdbe := &CT_TLSetBehavior{}
	_cgdbe.CBhvr = NewCT_TLCommonBehaviorData()
	return _cgdbe
}
func NewCT_CommonSlideData() *CT_CommonSlideData {
	_ccd := &CT_CommonSlideData{}
	_ccd.SpTree = NewCT_GroupShape()
	return _ccd
}

type OleObj struct{ CT_OleObject }

// ValidateWithPath validates the CT_TLCommandBehavior and its children, prefixing error messages with path
func (_gbeg *CT_TLCommandBehavior) ValidateWithPath(path string) error {
	if _afgc := _gbeg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _afgc != nil {
		return _afgc
	}
	if _ggcg := _gbeg.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _ggcg != nil {
		return _ggcg
	}
	return nil
}
func (_aab *CT_GroupShape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aab.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_aab.GrpSpPr = _c.NewCT_GroupShapeProperties()
_efac:
	for {
		_ecgg, _fddd := d.Token()
		if _fddd != nil {
			return _fddd
		}
		switch _adcf := _ecgg.(type) {
		case _d.StartElement:
			switch _adcf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _badc := d.DecodeElement(_aab.NvGrpSpPr, &_adcf); _badc != nil {
					return _badc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _bdab := d.DecodeElement(_aab.GrpSpPr, &_adcf); _bdab != nil {
					return _bdab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_gff := NewCT_GroupShapeChoice()
				if _abc := d.DecodeElement(&_gff.Sp, &_adcf); _abc != nil {
					return _abc
				}
				_aab.Choice = append(_aab.Choice, _gff)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_fgeg := NewCT_GroupShapeChoice()
				if _fggag := d.DecodeElement(&_fgeg.GrpSp, &_adcf); _fggag != nil {
					return _fggag
				}
				_aab.Choice = append(_aab.Choice, _fgeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_bcaf := NewCT_GroupShapeChoice()
				if _bdgg := d.DecodeElement(&_bcaf.GraphicFrame, &_adcf); _bdgg != nil {
					return _bdgg
				}
				_aab.Choice = append(_aab.Choice, _bcaf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_cfdg := NewCT_GroupShapeChoice()
				if _fef := d.DecodeElement(&_cfdg.CxnSp, &_adcf); _fef != nil {
					return _fef
				}
				_aab.Choice = append(_aab.Choice, _cfdg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_fdg := NewCT_GroupShapeChoice()
				if _gbaae := d.DecodeElement(&_fdg.Pic, &_adcf); _gbaae != nil {
					return _gbaae
				}
				_aab.Choice = append(_aab.Choice, _fdg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_ffda := NewCT_GroupShapeChoice()
				if _bdbg := d.DecodeElement(&_ffda.ContentPart, &_adcf); _bdbg != nil {
					return _bdbg
				}
				_aab.Choice = append(_aab.Choice, _ffda)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aab.ExtLst = NewCT_ExtensionListModify()
				if _faaab := d.DecodeElement(_aab.ExtLst, &_adcf); _faaab != nil {
					return _faaab
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065 \u0025\u0076", _adcf.Name)
				if _ccdd := d.Skip(); _ccdd != nil {
					return _ccdd
				}
			}
		case _d.EndElement:
			break _efac
		case _d.CharData:
		}
	}
	return nil
}
func NewTagLst() *TagLst { _adaeb := &TagLst{}; _adaeb.CT_TagList = *NewCT_TagList(); return _adaeb }

type CT_ControlList struct {

	// Embedded Control
	Control []*CT_Control
}

func (_cbff *CT_TLShapeTargetElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bdagb := range start.Attr {
		if _bdagb.Name.Local == "\u0073\u0070\u0069\u0064" {
			_acda, _edaab := _ag.ParseUint(_bdagb.Value, 10, 32)
			if _edaab != nil {
				return _edaab
			}
			_cbff.SpidAttr = uint32(_acda)
			continue
		}
	}
_bfeaaf:
	for {
		_gdcac, _daeed := d.Token()
		if _daeed != nil {
			return _daeed
		}
		switch _agcdg := _gdcac.(type) {
		case _d.StartElement:
			switch _agcdg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
				_cbff.Bg = NewCT_Empty()
				if _ffag := d.DecodeElement(_cbff.Bg, &_agcdg); _ffag != nil {
					return _ffag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}:
				_cbff.SubSp = NewCT_TLSubShapeId()
				if _bfgb := d.DecodeElement(_cbff.SubSp, &_agcdg); _bfgb != nil {
					return _bfgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}:
				_cbff.OleChartEl = NewCT_TLOleChartTargetElement()
				if _fafb := d.DecodeElement(_cbff.OleChartEl, &_agcdg); _fafb != nil {
					return _fafb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}:
				_cbff.TxEl = NewCT_TLTextTargetElement()
				if _fgegfd := d.DecodeElement(_cbff.TxEl, &_agcdg); _fgegfd != nil {
					return _fgegfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}:
				_cbff.GraphicEl = _c.NewCT_AnimationElementChoice()
				if _eegdb := d.DecodeElement(_cbff.GraphicEl, &_agcdg); _eegdb != nil {
					return _eegdb
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0068\u0061\u0070\u0065\u0054\u0061r\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074 \u0025\u0076", _agcdg.Name)
				if _affd := d.Skip(); _affd != nil {
					return _affd
				}
			}
		case _d.EndElement:
			break _bfeaaf
		case _d.CharData:
		}
	}
	return nil
}
func (_fdd *CT_BackgroundProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cbd := range start.Attr {
		if _cbd.Name.Local == "\u0073\u0068\u0061d\u0065\u0054\u006f\u0054\u0069\u0074\u006c\u0065" {
			_dbf, _ecb := _ag.ParseBool(_cbd.Value)
			if _ecb != nil {
				return _ecb
			}
			_fdd.ShadeToTitleAttr = &_dbf
			continue
		}
	}
_gdb:
	for {
		_abge, _ffg := d.Token()
		if _ffg != nil {
			return _ffg
		}
		switch _dgg := _abge.(type) {
		case _d.StartElement:
			switch _dgg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fdd.NoFill = _c.NewCT_NoFillProperties()
				if _bfg := d.DecodeElement(_fdd.NoFill, &_dgg); _bfg != nil {
					return _bfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fdd.SolidFill = _c.NewCT_SolidColorFillProperties()
				if _cfe := d.DecodeElement(_fdd.SolidFill, &_dgg); _cfe != nil {
					return _cfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_fdd.GradFill = _c.NewCT_GradientFillProperties()
				if _fbc := d.DecodeElement(_fdd.GradFill, &_dgg); _fbc != nil {
					return _fbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_fdd.BlipFill = _c.NewCT_BlipFillProperties()
				if _gad := d.DecodeElement(_fdd.BlipFill, &_dgg); _gad != nil {
					return _gad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fdd.PattFill = _c.NewCT_PatternFillProperties()
				if _bcae := d.DecodeElement(_fdd.PattFill, &_dgg); _bcae != nil {
					return _bcae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_fdd.GrpFill = _c.NewCT_GroupFillProperties()
				if _abe := d.DecodeElement(_fdd.GrpFill, &_dgg); _abe != nil {
					return _abe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_fdd.EffectLst = _c.NewCT_EffectList()
				if _aff := d.DecodeElement(_fdd.EffectLst, &_dgg); _aff != nil {
					return _aff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_fdd.EffectDag = _c.NewCT_EffectContainer()
				if _gee := d.DecodeElement(_fdd.EffectDag, &_dgg); _gee != nil {
					return _gee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdd.ExtLst = NewCT_ExtensionList()
				if _dbe := d.DecodeElement(_fdd.ExtLst, &_dgg); _dbe != nil {
					return _dbe
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006ed\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _dgg.Name)
				if _gddg := d.Skip(); _gddg != nil {
					return _gddg
				}
			}
		case _d.EndElement:
			break _gdb
		case _d.CharData:
		}
	}
	return nil
}
func (_cecfb ST_TLChartSubelementType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bfbfac := _d.Attr{}
	_bfbfac.Name = name
	switch _cecfb {
	case ST_TLChartSubelementTypeUnset:
		_bfbfac.Value = ""
	case ST_TLChartSubelementTypeGridLegend:
		_bfbfac.Value = "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	case ST_TLChartSubelementTypeSeries:
		_bfbfac.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_TLChartSubelementTypeCategory:
		_bfbfac.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_TLChartSubelementTypePtInSeries:
		_bfbfac.Value = "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case ST_TLChartSubelementTypePtInCategory:
		_bfbfac.Value = "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	}
	return _bfbfac, nil
}
func (_fbcga *ST_TLAnimateColorDirection) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_edgdg, _babcg := d.Token()
	if _babcg != nil {
		return _babcg
	}
	if _ebegd, _bbaac := _edgdg.(_d.EndElement); _bbaac && _ebegd.Name == start.Name {
		*_fbcga = 1
		return nil
	}
	if _gecbf, _dfgcg := _edgdg.(_d.CharData); !_dfgcg {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edgdg)
	} else {
		switch string(_gecbf) {
		case "":
			*_fbcga = 0
		case "\u0063\u0077":
			*_fbcga = 1
		case "\u0063\u0063\u0077":
			*_fbcga = 2
		}
	}
	_edgdg, _babcg = d.Token()
	if _babcg != nil {
		return _babcg
	}
	if _gecege, _fcedb := _edgdg.(_d.EndElement); _fcedb && _gecege.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edgdg)
}

// ValidateWithPath validates the CT_TLAnimVariantBooleanVal and its children, prefixing error messages with path
func (_gcfc *CT_TLAnimVariantBooleanVal) ValidateWithPath(path string) error { return nil }
func (_gbadc *CT_CustomShowList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ebbe:
	for {
		_eeec, _efefa := d.Token()
		if _efefa != nil {
			return _efefa
		}
		switch _bgca := _eeec.(type) {
		case _d.StartElement:
			switch _bgca.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_gbb := NewCT_CustomShow()
				if _efdc := d.DecodeElement(_gbb, &_bgca); _efdc != nil {
					return _efdc
				}
				_gbadc.CustShow = append(_gbadc.CustShow, _gbb)
			default:
				_be.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bgca.Name)
				if _deec := d.Skip(); _deec != nil {
					return _deec
				}
			}
		case _d.EndElement:
			break _ebbe
		case _d.CharData:
		}
	}
	return nil
}
func (_ebbacf *ST_TLCommandType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eabfa, _dgfge := d.Token()
	if _dgfge != nil {
		return _dgfge
	}
	if _ebebg, _fdeeb := _eabfa.(_d.EndElement); _fdeeb && _ebebg.Name == start.Name {
		*_ebbacf = 1
		return nil
	}
	if _bccfda, _efebf := _eabfa.(_d.CharData); !_efebf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eabfa)
	} else {
		switch string(_bccfda) {
		case "":
			*_ebbacf = 0
		case "\u0065\u0076\u0074":
			*_ebbacf = 1
		case "\u0063\u0061\u006c\u006c":
			*_ebbacf = 2
		case "\u0076\u0065\u0072\u0062":
			*_ebbacf = 3
		}
	}
	_eabfa, _dgfge = d.Token()
	if _dgfge != nil {
		return _dgfge
	}
	if _fgead, _daaaa := _eabfa.(_d.EndElement); _daaaa && _fgead.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eabfa)
}

type CT_TLBuildDiagram struct {

	// Diagram Build Types
	BldAttr      ST_TLDiagramBuildType
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

// ValidateWithPath validates the CT_SlideMasterIdListEntry and its children, prefixing error messages with path
func (_ggbdc *CT_SlideMasterIdListEntry) ValidateWithPath(path string) error {
	if _ggbdc.IdAttr != nil {
		if *_ggbdc.IdAttr < 2147483648 {
			return _b.Errorf("\u0025\u0073\u002f\u006d\u002e\u0049\u0064A\u0074\u0074\u0072 \u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ggbdc.IdAttr)
		}
	}
	if _ggbdc.ExtLst != nil {
		if _badg := _ggbdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _badg != nil {
			return _badg
		}
	}
	return nil
}

type ST_TLAnimateColorDirection byte
type ST_TLBehaviorAccumulateType byte

func ParseUnionST_TLTime(s string) (ST_TLTime, error) { return ST_TLTime{}, nil }
func (_cbfba *CT_TLIterateIntervalTime) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fagg := range start.Attr {
		if _fagg.Name.Local == "\u0076\u0061\u006c" {
			_gdgf, _cdacf := ParseUnionST_TLTime(_fagg.Value)
			if _cdacf != nil {
				return _cdacf
			}
			_cbfba.ValAttr = _gdgf
			continue
		}
	}
	for {
		_eccdd, _gacfc := d.Token()
		if _gacfc != nil {
			return _b.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LIt\u0065ra\u0074\u0065\u0049\u006e\u0074\u0065\u0072va\u006c\u0054\u0069\u006d\u0065\u003a\u0020%\u0073", _gacfc)
		}
		if _bgeg, _ecdca := _eccdd.(_d.EndElement); _ecdca && _bgeg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cd *CT_ApplicationNonVisualDrawingProps) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cd.IsPhotoAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069s\u0050\u0068\u006f\u0074\u006f"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_cd.IsPhotoAttr))})
	}
	if _cd.UserDrawnAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_cd.UserDrawnAttr))})
	}
	e.EncodeToken(start)
	if _cd.Ph != nil {
		_add := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0068"}}
		e.EncodeElement(_cd.Ph, _add)
	}
	if _cd.AudioCd != nil {
		_ccc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0061\u0075\u0064\u0069\u006f\u0043d"}}
		e.EncodeElement(_cd.AudioCd, _ccc)
	}
	if _cd.WavAudioFile != nil {
		_acd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0077\u0061\u0076\u0041\u0075\u0064\u0069o\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_cd.WavAudioFile, _acd)
	}
	if _cd.AudioFile != nil {
		_agg := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0061\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_cd.AudioFile, _agg)
	}
	if _cd.VideoFile != nil {
		_gcd := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_cd.VideoFile, _gcd)
	}
	if _cd.QuickTimeFile != nil {
		_fa := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0071u\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_cd.QuickTimeFile, _fa)
	}
	if _cd.CustDataLst != nil {
		_fed := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_cd.CustDataLst, _fed)
	}
	if _cd.ExtLst != nil {
		_bgd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cd.ExtLst, _bgd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_egdff *CT_TLTimeCondition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _egdff.EvtAttr != ST_TLTriggerEventUnset {
		_adddb, _dgdb := _egdff.EvtAttr.MarshalXMLAttr(_d.Name{Local: "\u0065\u0076\u0074"})
		if _dgdb != nil {
			return _dgdb
		}
		start.Attr = append(start.Attr, _adddb)
	}
	if _egdff.DelayAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0065\u006ca\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_egdff.DelayAttr)})
	}
	e.EncodeToken(start)
	if _egdff.TgtEl != nil {
		_ccea := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
		e.EncodeElement(_egdff.TgtEl, _ccea)
	}
	if _egdff.Tn != nil {
		_efefe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u006e"}}
		e.EncodeElement(_egdff.Tn, _efefe)
	}
	if _egdff.Rtn != nil {
		_cdfbfd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0072t\u006e"}}
		e.EncodeElement(_egdff.Rtn, _cdfbfd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_HeaderFooter and its children, prefixing error messages with path
func (_cbcab *CT_HeaderFooter) ValidateWithPath(path string) error {
	if _cbcab.ExtLst != nil {
		if _agcc := _cbcab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agcc != nil {
			return _agcc
		}
	}
	return nil
}

type ST_TLTimeNodeFillType byte

func NewCT_IndexRange() *CT_IndexRange { _dba := &CT_IndexRange{}; return _dba }
func (_gfbffg ST_IterateType) String() string {
	switch _gfbffg {
	case 0:
		return ""
	case 1:
		return "\u0065\u006c"
	case 2:
		return "\u0077\u0064"
	case 3:
		return "\u006c\u0074"
	}
	return ""
}
func (_dbdeg *ST_SlideLayoutType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ebdaf, _gaceb := d.Token()
	if _gaceb != nil {
		return _gaceb
	}
	if _bfcaf, _aeeeb := _ebdaf.(_d.EndElement); _aeeeb && _bfcaf.Name == start.Name {
		*_dbdeg = 1
		return nil
	}
	if _acbcf, _cefe := _ebdaf.(_d.CharData); !_cefe {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebdaf)
	} else {
		switch string(_acbcf) {
		case "":
			*_dbdeg = 0
		case "\u0074\u0069\u0074l\u0065":
			*_dbdeg = 1
		case "\u0074\u0078":
			*_dbdeg = 2
		case "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078":
			*_dbdeg = 3
		case "\u0074\u0062\u006c":
			*_dbdeg = 4
		case "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074":
			*_dbdeg = 5
		case "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
			*_dbdeg = 6
		case "\u0064\u0067\u006d":
			*_dbdeg = 7
		case "\u0063\u0068\u0061r\u0074":
			*_dbdeg = 8
		case "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074":
			*_dbdeg = 9
		case "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
			*_dbdeg = 10
		case "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy":
			*_dbdeg = 11
		case "\u0062\u006c\u0061n\u006b":
			*_dbdeg = 12
		case "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a":
			*_dbdeg = 13
		case "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
			*_dbdeg = 14
		case "\u006fb\u006a\u004f\u006e\u006c\u0079":
			*_dbdeg = 15
		case "\u006f\u0062\u006a":
			*_dbdeg = 16
		case "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061":
			*_dbdeg = 17
		case "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078":
			*_dbdeg = 18
		case "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x":
			*_dbdeg = 19
		case "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j":
			*_dbdeg = 20
		case "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
			*_dbdeg = 21
		case "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
			*_dbdeg = 22
		case "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078":
			*_dbdeg = 23
		case "\u0066o\u0075\u0072\u004f\u0062\u006a":
			*_dbdeg = 24
		case "\u0076\u0065\u0072\u0074\u0054\u0078":
			*_dbdeg = 25
		case "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078":
			*_dbdeg = 26
		case "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078":
			*_dbdeg = 27
		case "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074":
			*_dbdeg = 28
		case "\u0074\u0077\u006f\u004f\u0062\u006a":
			*_dbdeg = 29
		case "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
			*_dbdeg = 30
		case "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a":
			*_dbdeg = 31
		case "\u0063\u0075\u0073\u0074":
			*_dbdeg = 32
		case "\u0073e\u0063\u0048\u0065\u0061\u0064":
			*_dbdeg = 33
		case "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a":
			*_dbdeg = 34
		case "\u006f\u0062\u006aT\u0078":
			*_dbdeg = 35
		case "\u0070\u0069\u0063T\u0078":
			*_dbdeg = 36
		}
	}
	_ebdaf, _gaceb = d.Token()
	if _gaceb != nil {
		return _gaceb
	}
	if _gdada, _fgef := _ebdaf.(_d.EndElement); _fgef && _gdada.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebdaf)
}
func (_afabd ST_TLOleChartBuildType) Validate() error { return _afabd.ValidateWithPath("") }

// Validate validates the CT_SlideRelationshipListEntry and its children
func (_efcde *CT_SlideRelationshipListEntry) Validate() error {
	return _efcde.ValidateWithPath("\u0043\u0054_\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045nt\u0072\u0079")
}
func (_fggb *EG_ExtensionList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cbbce:
	for {
		_egbbc, _dedce := d.Token()
		if _dedce != nil {
			return _dedce
		}
		switch _ceddf := _egbbc.(type) {
		case _d.StartElement:
			switch _ceddf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_eefg := NewCT_Extension()
				if _eedcg := d.DecodeElement(_eefg, &_ceddf); _eedcg != nil {
					return _eedcg
				}
				_fggb.Ext = append(_fggb.Ext, _eefg)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _ceddf.Name)
				if _edeb := d.Skip(); _edeb != nil {
					return _edeb
				}
			}
		case _d.EndElement:
			break _cbbce
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TLBehaviorTransformTypeUnset ST_TLBehaviorTransformType = 0
	ST_TLBehaviorTransformTypePt    ST_TLBehaviorTransformType = 1
	ST_TLBehaviorTransformTypeImg   ST_TLBehaviorTransformType = 2
)

func (_bceef ST_SlideLayoutType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bceef.String(), start)
}
func (_cbfgd *CT_SlideMasterTextStyles) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eaafb:
	for {
		_gfge, _befc := d.Token()
		if _befc != nil {
			return _befc
		}
		switch _ffdg := _gfge.(type) {
		case _d.StartElement:
			switch _ffdg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_cbfgd.TitleStyle = _c.NewCT_TextListStyle()
				if _cebc := d.DecodeElement(_cbfgd.TitleStyle, &_ffdg); _cebc != nil {
					return _cebc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u0064\u0079\u0053\u0074\u0079\u006ce"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0064\u0079\u0053\u0074\u0079\u006ce"}:
				_cbfgd.BodyStyle = _c.NewCT_TextListStyle()
				if _aagcd := d.DecodeElement(_cbfgd.BodyStyle, &_ffdg); _aagcd != nil {
					return _aagcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}:
				_cbfgd.OtherStyle = _c.NewCT_TextListStyle()
				if _bbdce := d.DecodeElement(_cbfgd.OtherStyle, &_ffdg); _bbdce != nil {
					return _bbdce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbfgd.ExtLst = NewCT_ExtensionList()
				if _afcf := d.DecodeElement(_cbfgd.ExtLst, &_ffdg); _afcf != nil {
					return _afcf
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u0054\u0065\u0078\u0074\u0053t\u0079\u006c\u0065\u0073\u0020%\u0076", _ffdg.Name)
				if _agdae := d.Skip(); _agdae != nil {
					return _agdae
				}
			}
		case _d.EndElement:
			break _eaafb
		case _d.CharData:
		}
	}
	return nil
}
func (_ba *AG_Ole) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fe := range start.Attr {
		if _fe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fe.Name.Local == "\u0069\u0064" {
			_ca, _dg := _fe.Value, error(nil)
			if _dg != nil {
				return _dg
			}
			_ba.IdAttr = &_ca
			continue
		}
		if _fe.Name.Local == "\u0073\u0070\u0069\u0064" {
			_gaf, _gd := _fe.Value, error(nil)
			if _gd != nil {
				return _gd
			}
			_ba.SpidAttr = &_gaf
			continue
		}
		if _fe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cc, _bc := _fe.Value, error(nil)
			if _bc != nil {
				return _bc
			}
			_ba.NameAttr = &_cc
			continue
		}
		if _fe.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_acb, _dc := _ag.ParseBool(_fe.Value)
			if _dc != nil {
				return _dc
			}
			_ba.ShowAsIconAttr = &_acb
			continue
		}
		if _fe.Name.Local == "\u0069\u006d\u0067\u0057" {
			_bg, _cag := _ag.ParseInt(_fe.Value, 10, 32)
			if _cag != nil {
				return _cag
			}
			_aad := int32(_bg)
			_ba.ImgWAttr = &_aad
			continue
		}
		if _fe.Name.Local == "\u0069\u006d\u0067\u0048" {
			_bea, _eb := _ag.ParseInt(_fe.Value, 10, 32)
			if _eb != nil {
				return _eb
			}
			_cab := int32(_bea)
			_ba.ImgHAttr = &_cab
			continue
		}
	}
	for {
		_da, _bca := d.Token()
		if _bca != nil {
			return _b.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041G\u005f\u004fl\u0065\u003a\u0020\u0025\u0073", _bca)
		}
		if _aadc, _bb := _da.(_d.EndElement); _bb && _aadc.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_SlideSizeType byte

func (_gefad *CT_SmartTags) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _gefad.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ebbbd ST_PlaceholderType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ebbbd.String(), start)
}
func (_fgae *EG_ShowType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ggff:
	for {
		_ffdad, _eccg := d.Token()
		if _eccg != nil {
			return _eccg
		}
		switch _fgdbg := _ffdad.(type) {
		case _d.StartElement:
			switch _fgdbg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
				_fgae.Present = NewCT_Empty()
				if _gddf := d.DecodeElement(_fgae.Present, &_fgdbg); _gddf != nil {
					return _gddf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
				_fgae.Browse = NewCT_ShowInfoBrowse()
				if _gbceb := d.DecodeElement(_fgae.Browse, &_fgdbg); _gbceb != nil {
					return _gbceb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
				_fgae.Kiosk = NewCT_ShowInfoKiosk()
				if _gcgdd := d.DecodeElement(_fgae.Kiosk, &_fgdbg); _gcgdd != nil {
					return _gcgdd
				}
			default:
				_be.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065\u0020\u0025\u0076", _fgdbg.Name)
				if _eedce := d.Skip(); _eedce != nil {
					return _eedce
				}
			}
		case _d.EndElement:
			break _ggff
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TLOleChartBuildTypeUnset      ST_TLOleChartBuildType = 0
	ST_TLOleChartBuildTypeAllAtOnce  ST_TLOleChartBuildType = 1
	ST_TLOleChartBuildTypeSeries     ST_TLOleChartBuildType = 2
	ST_TLOleChartBuildTypeCategory   ST_TLOleChartBuildType = 3
	ST_TLOleChartBuildTypeSeriesEl   ST_TLOleChartBuildType = 4
	ST_TLOleChartBuildTypeCategoryEl ST_TLOleChartBuildType = 5
)

// Validate validates the CT_OleObjectLink and its children
func (_caaef *CT_OleObjectLink) Validate() error {
	return _caaef.ValidateWithPath("\u0043\u0054_\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b")
}
func (_edebf ST_TLAnimateEffectTransition) ValidateWithPath(path string) error {
	switch _edebf {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_edebf))
	}
	return nil
}
func (_dfgc ST_TLAnimateBehaviorValueType) String() string {
	switch _dfgc {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u0072"
	case 2:
		return "\u006e\u0075\u006d"
	case 3:
		return "\u0063\u006c\u0072"
	}
	return ""
}

// Validate validates the CT_CornerDirectionTransition and its children
func (_acbee *CT_CornerDirectionTransition) Validate() error {
	return _acbee.ValidateWithPath("\u0043\u0054\u005f\u0043o\u0072\u006e\u0065\u0072\u0044\u0069\u0072\u0065\u0063\u0074i\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e")
}
func NewCT_PrintProperties() *CT_PrintProperties { _dfbg := &CT_PrintProperties{}; return _dfbg }

// Validate validates the CT_GroupShapeChoice and its children
func (_fecg *CT_GroupShapeChoice) Validate() error {
	return _fecg.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}
func NewCT_OleObjectChoice() *CT_OleObjectChoice { _gedd := &CT_OleObjectChoice{}; return _gedd }

// ValidateWithPath validates the CT_IndexRange and its children, prefixing error messages with path
func (_beafb *CT_IndexRange) ValidateWithPath(path string) error { return nil }

type CT_Placeholder struct {

	// Placeholder Type
	TypeAttr ST_PlaceholderType

	// Placeholder Orientation
	OrientAttr ST_Direction

	// Placeholder Size
	SzAttr ST_PlaceholderSize

	// Placeholder Index
	IdxAttr *uint32

	// Placeholder has custom prompt
	HasCustomPromptAttr *bool
	ExtLst              *CT_ExtensionListModify
}

func (_adafc ST_TLAnimateBehaviorValueType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_adafc.String(), start)
}
func (_bbbff ST_TransitionInOutDirectionType) ValidateWithPath(path string) error {
	switch _bbbff {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbbff))
	}
	return nil
}
func (_bcacd *ST_TLOleChartBuildType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bdebf, _dccfg := d.Token()
	if _dccfg != nil {
		return _dccfg
	}
	if _eeda, _bdecdc := _bdebf.(_d.EndElement); _bdecdc && _eeda.Name == start.Name {
		*_bcacd = 1
		return nil
	}
	if _fedba, _ggeed := _bdebf.(_d.CharData); !_ggeed {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdebf)
	} else {
		switch string(_fedba) {
		case "":
			*_bcacd = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_bcacd = 1
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_bcacd = 2
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_bcacd = 3
		case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
			*_bcacd = 4
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
			*_bcacd = 5
		}
	}
	_bdebf, _dccfg = d.Token()
	if _dccfg != nil {
		return _dccfg
	}
	if _gcad, _cgbgg := _bdebf.(_d.EndElement); _cgbgg && _gcad.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdebf)
}
func (_ceeb *CT_SlideTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eddb := range start.Attr {
		if _eddb.Name.Local == "\u0073\u0070\u0064" {
			_ceeb.SpdAttr.UnmarshalXMLAttr(_eddb)
			continue
		}
		if _eddb.Name.Local == "\u0061\u0064\u0076\u0043\u006c\u0069\u0063\u006b" {
			_cfabc, _eeab := _ag.ParseBool(_eddb.Value)
			if _eeab != nil {
				return _eeab
			}
			_ceeb.AdvClickAttr = &_cfabc
			continue
		}
		if _eddb.Name.Local == "\u0061\u0064\u0076T\u006d" {
			_eegd, _acefe := _ag.ParseUint(_eddb.Value, 10, 32)
			if _acefe != nil {
				return _acefe
			}
			_dgdc := uint32(_eegd)
			_ceeb.AdvTmAttr = &_dgdc
			continue
		}
	}
_gfacf:
	for {
		_eegeg, _gbcae := d.Token()
		if _gbcae != nil {
			return _gbcae
		}
		switch _cbgf := _eegeg.(type) {
		case _d.StartElement:
			switch _cbgf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _afcag := d.DecodeElement(&_ceeb.Choice.Blinds, &_cbgf); _afcag != nil {
					return _afcag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _bbfdg := d.DecodeElement(&_ceeb.Choice.Checker, &_cbgf); _bbfdg != nil {
					return _bbfdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _cddaf := d.DecodeElement(&_ceeb.Choice.Circle, &_cbgf); _cddaf != nil {
					return _cddaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _dcgce := d.DecodeElement(&_ceeb.Choice.Dissolve, &_cbgf); _dcgce != nil {
					return _dcgce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _cdac := d.DecodeElement(&_ceeb.Choice.Comb, &_cbgf); _cdac != nil {
					return _cdac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _cbdfd := d.DecodeElement(&_ceeb.Choice.Cover, &_cbgf); _cbdfd != nil {
					return _cbdfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0074"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _dgbec := d.DecodeElement(&_ceeb.Choice.Cut, &_cbgf); _dgbec != nil {
					return _dgbec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _acgf := d.DecodeElement(&_ceeb.Choice.Diamond, &_cbgf); _acgf != nil {
					return _acgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _facb := d.DecodeElement(&_ceeb.Choice.Fade, &_cbgf); _facb != nil {
					return _facb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _aafba := d.DecodeElement(&_ceeb.Choice.Newsflash, &_cbgf); _aafba != nil {
					return _aafba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _bafc := d.DecodeElement(&_ceeb.Choice.Plus, &_cbgf); _bafc != nil {
					return _bafc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _abcac := d.DecodeElement(&_ceeb.Choice.Pull, &_cbgf); _abcac != nil {
					return _abcac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _bafb := d.DecodeElement(&_ceeb.Choice.Push, &_cbgf); _bafb != nil {
					return _bafb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _adbeb := d.DecodeElement(&_ceeb.Choice.Random, &_cbgf); _adbeb != nil {
					return _adbeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _cgdef := d.DecodeElement(&_ceeb.Choice.RandomBar, &_cbgf); _cgdef != nil {
					return _cgdef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _ebfeg := d.DecodeElement(&_ceeb.Choice.Split, &_cbgf); _ebfeg != nil {
					return _ebfeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _eedd := d.DecodeElement(&_ceeb.Choice.Strips, &_cbgf); _eedd != nil {
					return _eedd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _accec := d.DecodeElement(&_ceeb.Choice.Wedge, &_cbgf); _accec != nil {
					return _accec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _ebde := d.DecodeElement(&_ceeb.Choice.Wheel, &_cbgf); _ebde != nil {
					return _ebde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _fgcc := d.DecodeElement(&_ceeb.Choice.Wipe, &_cbgf); _fgcc != nil {
					return _fgcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}:
				_ceeb.Choice = NewCT_SlideTransitionChoice()
				if _deag := d.DecodeElement(&_ceeb.Choice.Zoom, &_cbgf); _deag != nil {
					return _deag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064A\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064A\u0063"}:
				_ceeb.SndAc = NewCT_TransitionSoundAction()
				if _cddf := d.DecodeElement(_ceeb.SndAc, &_cbgf); _cddf != nil {
					return _cddf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ceeb.ExtLst = NewCT_ExtensionListModify()
				if _ecde := d.DecodeElement(_ceeb.ExtLst, &_cbgf); _ecde != nil {
					return _ecde
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _cbgf.Name)
				if _agggd := d.Skip(); _agggd != nil {
					return _agggd
				}
			}
		case _d.EndElement:
			break _gfacf
		case _d.CharData:
		}
	}
	return nil
}
func ParseUnionST_TLTimeAnimateValueTime(s string) (ST_TLTimeAnimateValueTime, error) {
	return ST_TLTimeAnimateValueTime{}, nil
}
func (_bffga *ST_TLAnimateColorSpace) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bffd, _gedaa := d.Token()
	if _gedaa != nil {
		return _gedaa
	}
	if _ebabe, _dgcd := _bffd.(_d.EndElement); _dgcd && _ebabe.Name == start.Name {
		*_bffga = 1
		return nil
	}
	if _eebec, _cceac := _bffd.(_d.CharData); !_cceac {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bffd)
	} else {
		switch string(_eebec) {
		case "":
			*_bffga = 0
		case "\u0072\u0067\u0062":
			*_bffga = 1
		case "\u0068\u0073\u006c":
			*_bffga = 2
		}
	}
	_bffd, _gedaa = d.Token()
	if _gedaa != nil {
		return _gedaa
	}
	if _ddcge, _accab := _bffd.(_d.EndElement); _accab && _ddcge.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bffd)
}
func (_cbedg *CT_TLCommonMediaNodeData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cbedg.CTn = NewCT_TLCommonTimeNodeData()
	_cbedg.TgtEl = NewCT_TLTimeTargetElement()
	for _, _effa := range start.Attr {
		if _effa.Name.Local == "\u0076\u006f\u006c" {
			_gebb, _gfab := ParseUnionST_PositiveFixedPercentage(_effa.Value)
			if _gfab != nil {
				return _gfab
			}
			_cbedg.VolAttr = &_gebb
			continue
		}
		if _effa.Name.Local == "\u006d\u0075\u0074\u0065" {
			_aefab, _aeecf := _ag.ParseBool(_effa.Value)
			if _aeecf != nil {
				return _aeecf
			}
			_cbedg.MuteAttr = &_aefab
			continue
		}
		if _effa.Name.Local == "\u006e\u0075\u006d\u0053\u006c\u0064" {
			_gecdb, _adgce := _ag.ParseUint(_effa.Value, 10, 32)
			if _adgce != nil {
				return _adgce
			}
			_cfega := uint32(_gecdb)
			_cbedg.NumSldAttr = &_cfega
			continue
		}
		if _effa.Name.Local == "\u0073h\u006fw\u0057\u0068\u0065\u006e\u0053\u0074\u006f\u0070\u0070\u0065\u0064" {
			_bcgfg, _adbbf := _ag.ParseBool(_effa.Value)
			if _adbbf != nil {
				return _adbbf
			}
			_cbedg.ShowWhenStoppedAttr = &_bcgfg
			continue
		}
	}
_gfec:
	for {
		_cggbd, _bbfdf := d.Token()
		if _bbfdf != nil {
			return _bbfdf
		}
		switch _egefg := _cggbd.(type) {
		case _d.StartElement:
			switch _egefg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _badgc := d.DecodeElement(_cbedg.CTn, &_egefg); _badgc != nil {
					return _badgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				if _ggbg := d.DecodeElement(_cbedg.TgtEl, &_egefg); _ggbg != nil {
					return _ggbg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064e\u0044\u0061\u0074\u0061\u0020%\u0076", _egefg.Name)
				if _afga := d.Skip(); _afga != nil {
					return _afga
				}
			}
		case _d.EndElement:
			break _gfec
		case _d.CharData:
		}
	}
	return nil
}

type CT_OutlineViewSlideEntry struct {
	IdAttr string

	// Collapsed
	CollapseAttr *bool
}

// Validate validates the CT_TLIterateIntervalPercentage and its children
func (_ebdef *CT_TLIterateIntervalPercentage) Validate() error {
	return _ebdef.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061t\u0065\u0049\u006e\u0074\u0065\u0072\u0076a\u006c\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
}
func (_aceeb ST_SlideLayoutType) Validate() error { return _aceeb.ValidateWithPath("") }
func (_cebabf *CT_IndexRange) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0074"}, Value: _b.Sprintf("\u0025\u0076", _cebabf.StAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0076", _cebabf.EndAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dbbcg *CT_GuideList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fgd:
	for {
		_bdae, _dega := d.Token()
		if _dega != nil {
			return _dega
		}
		switch _daff := _bdae.(type) {
		case _d.StartElement:
			switch _daff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0075\u0069d\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0075\u0069d\u0065"}:
				_aagc := NewCT_Guide()
				if _cfc := d.DecodeElement(_aagc, &_daff); _cfc != nil {
					return _cfc
				}
				_dbbcg.Guide = append(_dbbcg.Guide, _aagc)
			default:
				_be.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_G\u0075\u0069d\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _daff.Name)
				if _fbgg := d.Skip(); _fbgg != nil {
					return _fbgg
				}
			}
		case _d.EndElement:
			break _fgd
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLCommandBehavior struct {

	// Command Type
	TypeAttr ST_TLCommandType

	// Command
	CmdAttr *string
	CBhvr   *CT_TLCommonBehaviorData
}

func (_gabaf *CT_TLAnimVariantBooleanVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(_gabaf.ValAttr))})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewPresentationPr() *PresentationPr {
	_gaag := &PresentationPr{}
	_gaag.CT_PresentationProperties = *NewCT_PresentationProperties()
	return _gaag
}
func (_bcdbg *ST_TLTriggerEvent) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_begbb, _fgbeb := d.Token()
	if _fgbeb != nil {
		return _fgbeb
	}
	if _cgdcb, _fegdbd := _begbb.(_d.EndElement); _fegdbd && _cgdcb.Name == start.Name {
		*_bcdbg = 1
		return nil
	}
	if _ebff, _bgea := _begbb.(_d.CharData); !_bgea {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _begbb)
	} else {
		switch string(_ebff) {
		case "":
			*_bcdbg = 0
		case "\u006fn\u0042\u0065\u0067\u0069\u006e":
			*_bcdbg = 1
		case "\u006f\u006e\u0045n\u0064":
			*_bcdbg = 2
		case "\u0062\u0065\u0067i\u006e":
			*_bcdbg = 3
		case "\u0065\u006e\u0064":
			*_bcdbg = 4
		case "\u006fn\u0043\u006c\u0069\u0063\u006b":
			*_bcdbg = 5
		case "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b":
			*_bcdbg = 6
		case "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072":
			*_bcdbg = 7
		case "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074":
			*_bcdbg = 8
		case "\u006f\u006e\u004e\u0065\u0078\u0074":
			*_bcdbg = 9
		case "\u006f\u006e\u0050\u0072\u0065\u0076":
			*_bcdbg = 10
		case "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f":
			*_bcdbg = 11
		}
	}
	_begbb, _fgbeb = d.Token()
	if _fgbeb != nil {
		return _fgbeb
	}
	if _aeefd, _bgecd := _begbb.(_d.EndElement); _bgecd && _aeefd.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _begbb)
}
func (_aaeca *ST_TLAnimateMotionPathEditMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_aaeca = 0
	case "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":
		*_aaeca = 1
	case "\u0066\u0069\u0078e\u0064":
		*_aaeca = 2
	}
	return nil
}
func NewCT_SlideSyncProperties() *CT_SlideSyncProperties {
	_ddad := &CT_SlideSyncProperties{}
	return _ddad
}

// ValidateWithPath validates the CT_OleObjectLink and its children, prefixing error messages with path
func (_bfbga *CT_OleObjectLink) ValidateWithPath(path string) error {
	if _bfbga.ExtLst != nil {
		if _ffbc := _bfbga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffbc != nil {
			return _ffbc
		}
	}
	return nil
}
func (_cfag *CT_TLBuildParagraph) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dabg := range start.Attr {
		if _dabg.Name.Local == "\u0062\u0075\u0069l\u0064" {
			_cfag.BuildAttr.UnmarshalXMLAttr(_dabg)
			continue
		}
		if _dabg.Name.Local == "\u0062\u006c\u0064\u004c\u0076\u006c" {
			_acaea, _fdbb := _ag.ParseUint(_dabg.Value, 10, 32)
			if _fdbb != nil {
				return _fdbb
			}
			_fgfg := uint32(_acaea)
			_cfag.BldLvlAttr = &_fgfg
			continue
		}
		if _dabg.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_gdfg, _bffeb := _ag.ParseBool(_dabg.Value)
			if _bffeb != nil {
				return _bffeb
			}
			_cfag.AnimBgAttr = &_gdfg
			continue
		}
		if _dabg.Name.Local == "\u0061\u0075t\u006f\u0055\u0070d\u0061\u0074\u0065\u0041\u006e\u0069\u006d\u0042\u0067" {
			_cffc, _edda := _ag.ParseBool(_dabg.Value)
			if _edda != nil {
				return _edda
			}
			_cfag.AutoUpdateAnimBgAttr = &_cffc
			continue
		}
		if _dabg.Name.Local == "\u0072\u0065\u0076" {
			_bfcb, _bagea := _ag.ParseBool(_dabg.Value)
			if _bagea != nil {
				return _bagea
			}
			_cfag.RevAttr = &_bfcb
			continue
		}
		if _dabg.Name.Local == "\u0061d\u0076\u0041\u0075\u0074\u006f" {
			_bbcd, _bddee := ParseUnionST_TLTime(_dabg.Value)
			if _bddee != nil {
				return _bddee
			}
			_cfag.AdvAutoAttr = &_bbcd
			continue
		}
		if _dabg.Name.Local == "\u0073\u0070\u0069\u0064" {
			_begbg, _dcea := _ag.ParseUint(_dabg.Value, 10, 32)
			if _dcea != nil {
				return _dcea
			}
			_dcffg := uint32(_begbg)
			_cfag.SpidAttr = &_dcffg
			continue
		}
		if _dabg.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_cafaa, _aafbb := _ag.ParseUint(_dabg.Value, 10, 32)
			if _aafbb != nil {
				return _aafbb
			}
			_fgcdg := uint32(_cafaa)
			_cfag.GrpIdAttr = &_fgcdg
			continue
		}
		if _dabg.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_baddg, _dfdae := _ag.ParseBool(_dabg.Value)
			if _dfdae != nil {
				return _dfdae
			}
			_cfag.UiExpandAttr = &_baddg
			continue
		}
	}
_gffcf:
	for {
		_fdgeb, _fcfbf := d.Token()
		if _fcfbf != nil {
			return _fcfbf
		}
		switch _decgcg := _fdgeb.(type) {
		case _d.StartElement:
			switch _decgcg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074m\u0070\u006c\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074m\u0070\u006c\u004c\u0073\u0074"}:
				_cfag.TmplLst = NewCT_TLTemplateList()
				if _aeeb := d.DecodeElement(_cfag.TmplLst, &_decgcg); _aeeb != nil {
					return _aeeb
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064Pa\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0020\u0025\u0076", _decgcg.Name)
				if _eddg := d.Skip(); _eddg != nil {
					return _eddg
				}
			}
		case _d.EndElement:
			break _gffcf
		case _d.CharData:
		}
	}
	return nil
}

type CT_SlideMasterIdList struct {

	// Slide Master ID
	SldMasterId []*CT_SlideMasterIdListEntry
}

func (_dgbaf ST_TLParaBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dgbaf.String(), start)
}
func NewCT_SlideMasterTextStyles() *CT_SlideMasterTextStyles {
	_ggcef := &CT_SlideMasterTextStyles{}
	return _ggcef
}

// Validate validates the CT_TLAnimateEffectBehavior and its children
func (_gecg *CT_TLAnimateEffectBehavior) Validate() error {
	return _gecg.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061v\u0069\u006f\u0072")
}

// Validate validates the CT_EmbeddedFontDataId and its children
func (_gbg *CT_EmbeddedFontDataId) Validate() error {
	return _gbg.ValidateWithPath("C\u0054\u005f\u0045\u006dbe\u0064d\u0065\u0064\u0046\u006f\u006et\u0044\u0061\u0074\u0061\u0049\u0064")
}
func (_gcfa *CT_HandoutMasterIdListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _gcfa.IdAttr)})
	e.EncodeToken(start)
	if _gcfa.ExtLst != nil {
		_fggf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gcfa.ExtLst, _fggf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLAnimateColorBehavior() *CT_TLAnimateColorBehavior {
	_aeede := &CT_TLAnimateColorBehavior{}
	_aeede.CBhvr = NewCT_TLCommonBehaviorData()
	return _aeede
}
func (_cfbff ST_TLOleChartBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cfbff.String(), start)
}

// ValidateWithPath validates the CT_Shape and its children, prefixing error messages with path
func (_bgdff *CT_Shape) ValidateWithPath(path string) error {
	if _gefbe := _bgdff.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _gefbe != nil {
		return _gefbe
	}
	if _dfba := _bgdff.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _dfba != nil {
		return _dfba
	}
	if _bgdff.Style != nil {
		if _ddagdd := _bgdff.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ddagdd != nil {
			return _ddagdd
		}
	}
	if _bgdff.TxBody != nil {
		if _bceee := _bgdff.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _bceee != nil {
			return _bceee
		}
	}
	if _bgdff.ExtLst != nil {
		if _acef := _bgdff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acef != nil {
			return _acef
		}
	}
	return nil
}

type CT_TLAnimVariant struct {

	// Boolean Variant
	BoolVal *CT_TLAnimVariantBooleanVal

	// Integer
	IntVal *CT_TLAnimVariantIntegerVal

	// Float Value
	FltVal *CT_TLAnimVariantFloatVal

	// String Value
	StrVal *CT_TLAnimVariantStringVal

	// Color Value
	ClrVal *_c.CT_Color
}

func (_fegfda *ST_PlaceholderSize) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dfeca, _dfaa := d.Token()
	if _dfaa != nil {
		return _dfaa
	}
	if _caaed, _gbcbc := _dfeca.(_d.EndElement); _gbcbc && _caaed.Name == start.Name {
		*_fegfda = 1
		return nil
	}
	if _dacac, _aefce := _dfeca.(_d.CharData); !_aefce {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfeca)
	} else {
		switch string(_dacac) {
		case "":
			*_fegfda = 0
		case "\u0066\u0075\u006c\u006c":
			*_fegfda = 1
		case "\u0068\u0061\u006c\u0066":
			*_fegfda = 2
		case "\u0071u\u0061\u0072\u0074\u0065\u0072":
			*_fegfda = 3
		}
	}
	_dfeca, _dfaa = d.Token()
	if _dfaa != nil {
		return _dfaa
	}
	if _bddc, _egbgd := _dfeca.(_d.EndElement); _egbgd && _bddc.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfeca)
}
func (_bceab ST_TLTimeNodeType) ValidateWithPath(path string) error {
	switch _bceab {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bceab))
	}
	return nil
}

// Validate validates the CT_TLIterateIntervalTime and its children
func (_fffb *CT_TLIterateIntervalTime) Validate() error {
	return _fffb.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049n\u0074\u0065\u0072\u0076\u0061\u006c\u0054\u0069\u006d\u0065")
}
func NewCT_TLByHslColorTransform() *CT_TLByHslColorTransform {
	_gccb := &CT_TLByHslColorTransform{}
	return _gccb
}
func (_dcaac *ST_SplitterBarState) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dcaac = 0
	case "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d":
		*_dcaac = 1
	case "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064":
		*_dcaac = 2
	case "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d":
		*_dcaac = 3
	}
	return nil
}

// Validate validates the CT_NotesTextViewProperties and its children
func (_gccc *CT_NotesTextViewProperties) Validate() error {
	return _gccc.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0054\u0065\u0078t\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}
func (_debce *CT_TLBehaviorAttributeNameList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_adge:
	for {
		_bbdcg, _dcdfa := d.Token()
		if _dcdfa != nil {
			return _dcdfa
		}
		switch _dbcf := _bbdcg.(type) {
		case _d.StartElement:
			switch _dbcf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}:
				var _bcfd string
				if _cfcaf := d.DecodeElement(&_bcfd, &_dbcf); _cfcaf != nil {
					return _cfcaf
				}
				_debce.AttrName = append(_debce.AttrName, _bcfd)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006es\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0041\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u004e\u0061\u006d\u0065L\u0069\u0073\u0074\u0020\u0025\u0076", _dbcf.Name)
				if _abde := d.Skip(); _abde != nil {
					return _abde
				}
			}
		case _d.EndElement:
			break _adge
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ConnectorNonVisual and its children, prefixing error messages with path
func (_bbd *CT_ConnectorNonVisual) ValidateWithPath(path string) error {
	if _aac := _bbd.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _aac != nil {
		return _aac
	}
	if _aec := _bbd.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _aec != nil {
		return _aec
	}
	if _ddff := _bbd.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _ddff != nil {
		return _ddff
	}
	return nil
}
func (_cffd *CT_Guide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cffd.OrientAttr != ST_DirectionUnset {
		_fbfe, _gbbf := _cffd.OrientAttr.MarshalXMLAttr(_d.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _gbbf != nil {
			return _gbbf
		}
		start.Attr = append(start.Attr, _fbfe)
	}
	if _cffd.PosAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u006f\u0073"}, Value: _b.Sprintf("\u0025\u0076", *_cffd.PosAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Presentation and its children
func (_dcad *CT_Presentation) Validate() error {
	return _dcad.ValidateWithPath("\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e")
}
func (_ecfb *ST_TLBehaviorTransformType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ecfb = 0
	case "\u0070\u0074":
		*_ecfb = 1
	case "\u0069\u006d\u0067":
		*_ecfb = 2
	}
	return nil
}
func (_caag ST_TransitionCornerDirectionType) Validate() error { return _caag.ValidateWithPath("") }
func (_cagga *ST_TLOleChartBuildType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cagga = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_cagga = 1
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_cagga = 2
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_cagga = 3
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		*_cagga = 4
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		*_cagga = 5
	}
	return nil
}

// Validate validates the CT_Picture and its children
func (_bebeb *CT_Picture) Validate() error {
	return _bebeb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}
func (_edabd ST_SlideSizeType) Validate() error { return _edabd.ValidateWithPath("") }

type CT_SplitTransition struct {

	// Orientation
	OrientAttr ST_Direction

	// Direction
	DirAttr ST_TransitionInOutDirectionType
}

// Validate validates the SldLayout and its children
func (_eegf *SldLayout) Validate() error {
	return _eegf.ValidateWithPath("\u0053l\u0064\u004c\u0061\u0079\u006f\u0075t")
}

// Validate validates the CT_TLAnimateBehavior and its children
func (_aecag *CT_TLAnimateBehavior) Validate() error {
	return _aecag.ValidateWithPath("C\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0042\u0065\u0068\u0061vi\u006f\u0072")
}
func (_cfgeg *ViewPr) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cfgeg.CT_ViewProperties = *NewCT_ViewProperties()
	for _, _daafc := range start.Attr {
		if _daafc.Name.Local == "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077" {
			_cfgeg.LastViewAttr.UnmarshalXMLAttr(_daafc)
			continue
		}
		if _daafc.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_cffdg, _efaec := _ag.ParseBool(_daafc.Value)
			if _efaec != nil {
				return _efaec
			}
			_cfgeg.ShowCommentsAttr = &_cffdg
			continue
		}
	}
_abcad:
	for {
		_dfgeb, _agfad := d.Token()
		if _agfad != nil {
			return _agfad
		}
		switch _fgff := _dfgeb.(type) {
		case _d.StartElement:
			switch _fgff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cfgeg.NormalViewPr = NewCT_NormalViewProperties()
				if _ggbda := d.DecodeElement(_cfgeg.NormalViewPr, &_fgff); _ggbda != nil {
					return _ggbda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cfgeg.SlideViewPr = NewCT_SlideViewProperties()
				if _cbgd := d.DecodeElement(_cfgeg.SlideViewPr, &_fgff); _cbgd != nil {
					return _cbgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cfgeg.OutlineViewPr = NewCT_OutlineViewProperties()
				if _cgfg := d.DecodeElement(_cfgeg.OutlineViewPr, &_fgff); _cgfg != nil {
					return _cgfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cfgeg.NotesTextViewPr = NewCT_NotesTextViewProperties()
				if _bagd := d.DecodeElement(_cfgeg.NotesTextViewPr, &_fgff); _bagd != nil {
					return _bagd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cfgeg.SorterViewPr = NewCT_SlideSorterViewProperties()
				if _bafdc := d.DecodeElement(_cfgeg.SorterViewPr, &_fgff); _bafdc != nil {
					return _bafdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cfgeg.NotesViewPr = NewCT_NotesViewProperties()
				if _cfdf := d.DecodeElement(_cfgeg.NotesViewPr, &_fgff); _cfdf != nil {
					return _cfdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_cfgeg.GridSpacing = _c.NewCT_PositiveSize2D()
				if _fcag := d.DecodeElement(_cfgeg.GridSpacing, &_fgff); _fcag != nil {
					return _fcag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfgeg.ExtLst = NewCT_ExtensionList()
				if _gcebc := d.DecodeElement(_cfgeg.ExtLst, &_fgff); _gcebc != nil {
					return _gcebc
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0056\u0069\u0065\u0077\u0050\u0072\u0020\u0025\u0076", _fgff.Name)
				if _ddbdb := d.Skip(); _ddbdb != nil {
					return _ddbdb
				}
			}
		case _d.EndElement:
			break _abcad
		case _d.CharData:
		}
	}
	return nil
}
func (_gfdb *CT_TLAnimateBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gfdb.ByAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0079"}, Value: _b.Sprintf("\u0025\u0076", *_gfdb.ByAttr)})
	}
	if _gfdb.FromAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_gfdb.FromAttr)})
	}
	if _gfdb.ToAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_gfdb.ToAttr)})
	}
	if _gfdb.CalcmodeAttr != ST_TLAnimateBehaviorCalcModeUnset {
		_bdef, _cede := _gfdb.CalcmodeAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u0061\u006c\u0063\u006d\u006f\u0064\u0065"})
		if _cede != nil {
			return _cede
		}
		start.Attr = append(start.Attr, _bdef)
	}
	if _gfdb.ValueTypeAttr != ST_TLAnimateBehaviorValueTypeUnset {
		_bbdbd, _efbc := _gfdb.ValueTypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0076a\u006c\u0075\u0065\u0054\u0079\u0070e"})
		if _efbc != nil {
			return _efbc
		}
		start.Attr = append(start.Attr, _bbdbd)
	}
	e.EncodeToken(start)
	_dddb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_gfdb.CBhvr, _dddb)
	if _gfdb.TavLst != nil {
		_fdga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_gfdb.TavLst, _fdga)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PresentationProperties and its children, prefixing error messages with path
func (_egdd *CT_PresentationProperties) ValidateWithPath(path string) error {
	if _egdd.HtmlPubPr != nil {
		if _fbfd := _egdd.HtmlPubPr.ValidateWithPath(path + "\u002f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u0050\u0072"); _fbfd != nil {
			return _fbfd
		}
	}
	if _egdd.WebPr != nil {
		if _eadd := _egdd.WebPr.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0072"); _eadd != nil {
			return _eadd
		}
	}
	if _egdd.PrnPr != nil {
		if _cafff := _egdd.PrnPr.ValidateWithPath(path + "\u002f\u0050\u0072\u006e\u0050\u0072"); _cafff != nil {
			return _cafff
		}
	}
	if _egdd.ShowPr != nil {
		if _dbfb := _egdd.ShowPr.ValidateWithPath(path + "\u002fS\u0068\u006f\u0077\u0050\u0072"); _dbfb != nil {
			return _dbfb
		}
	}
	if _egdd.ClrMru != nil {
		if _fdcfc := _egdd.ClrMru.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0072\u0075"); _fdcfc != nil {
			return _fdcfc
		}
	}
	if _egdd.ExtLst != nil {
		if _dfaeb := _egdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfaeb != nil {
			return _dfaeb
		}
	}
	return nil
}
func (_ddgdb *CT_OrientationTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ddgdb.DirAttr != ST_DirectionUnset {
		_fcgb, _bcbfd := _ddgdb.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
		if _bcbfd != nil {
			return _bcbfd
		}
		start.Attr = append(start.Attr, _fcgb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cdbd *CT_EightDirectionTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cdbd.DirAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0072"}, Value: _b.Sprintf("\u0025\u0076", *_cdbd.DirAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dbeff *ST_TLTimeIndefinite) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ebefg, _ccacb := d.Token()
	if _ccacb != nil {
		return _ccacb
	}
	if _aceg, _dfag := _ebefg.(_d.EndElement); _dfag && _aceg.Name == start.Name {
		*_dbeff = 1
		return nil
	}
	if _efgg, _gecec := _ebefg.(_d.CharData); !_gecec {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebefg)
	} else {
		switch string(_efgg) {
		case "":
			*_dbeff = 0
		case "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065":
			*_dbeff = 1
		}
	}
	_ebefg, _ccacb = d.Token()
	if _ccacb != nil {
		return _ccacb
	}
	if _gdced, _gcegd := _ebefg.(_d.EndElement); _gcegd && _gdced.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebefg)
}

// Validate validates the CT_WheelTransition and its children
func (_baedcb *CT_WheelTransition) Validate() error {
	return _baedcb.ValidateWithPath("\u0043T\u005fW\u0068\u0065\u0065\u006c\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

type Sld struct{ CT_Slide }

// Validate validates the CT_TagsData and its children
func (_gfdab *CT_TagsData) Validate() error {
	return _gfdab.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061")
}

// Validate validates the CT_TLSetBehavior and its children
func (_dead *CT_TLSetBehavior) Validate() error {
	return _dead.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0053e\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072")
}
func (_deaa *CT_SlideSize) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_deaa.CxAttr = 914400
	_deaa.CyAttr = 914400
	for _, _bgacg := range start.Attr {
		if _bgacg.Name.Local == "\u0063\u0078" {
			_affge, _fffd := _ag.ParseInt(_bgacg.Value, 10, 32)
			if _fffd != nil {
				return _fffd
			}
			_deaa.CxAttr = int32(_affge)
			continue
		}
		if _bgacg.Name.Local == "\u0063\u0079" {
			_degf, _gdbe := _ag.ParseInt(_bgacg.Value, 10, 32)
			if _gdbe != nil {
				return _gdbe
			}
			_deaa.CyAttr = int32(_degf)
			continue
		}
		if _bgacg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_deaa.TypeAttr.UnmarshalXMLAttr(_bgacg)
			continue
		}
	}
	for {
		_facg, _gbdff := d.Token()
		if _gbdff != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006ci\u0064\u0065\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0073", _gbdff)
		}
		if _caadd, _ggab := _facg.(_d.EndElement); _ggab && _caadd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bacb *CT_SlideTransitionChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_beca:
	for {
		_eegdc, _gcef := d.Token()
		if _gcef != nil {
			return _gcef
		}
		switch _dgdee := _eegdc.(type) {
		case _d.StartElement:
			switch _dgdee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}:
				_bacb.Blinds = NewCT_OrientationTransition()
				if _dbegd := d.DecodeElement(_bacb.Blinds, &_dgdee); _dbegd != nil {
					return _dbegd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}:
				_bacb.Checker = NewCT_OrientationTransition()
				if _dddf := d.DecodeElement(_bacb.Checker, &_dgdee); _dddf != nil {
					return _dddf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}:
				_bacb.Circle = NewCT_Empty()
				if _abceg := d.DecodeElement(_bacb.Circle, &_dgdee); _abceg != nil {
					return _abceg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}:
				_bacb.Dissolve = NewCT_Empty()
				if _ffec := d.DecodeElement(_bacb.Dissolve, &_dgdee); _ffec != nil {
					return _ffec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}:
				_bacb.Comb = NewCT_OrientationTransition()
				if _fadf := d.DecodeElement(_bacb.Comb, &_dgdee); _fadf != nil {
					return _fadf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}:
				_bacb.Cover = NewCT_EightDirectionTransition()
				if _fdfb := d.DecodeElement(_bacb.Cover, &_dgdee); _fdfb != nil {
					return _fdfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0074"}:
				_bacb.Cut = NewCT_OptionalBlackTransition()
				if _fcbeb := d.DecodeElement(_bacb.Cut, &_dgdee); _fcbeb != nil {
					return _fcbeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}:
				_bacb.Diamond = NewCT_Empty()
				if _eded := d.DecodeElement(_bacb.Diamond, &_dgdee); _eded != nil {
					return _eded
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}:
				_bacb.Fade = NewCT_OptionalBlackTransition()
				if _bbgb := d.DecodeElement(_bacb.Fade, &_dgdee); _bbgb != nil {
					return _bbgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}:
				_bacb.Newsflash = NewCT_Empty()
				if _gdggc := d.DecodeElement(_bacb.Newsflash, &_dgdee); _gdggc != nil {
					return _gdggc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}:
				_bacb.Plus = NewCT_Empty()
				if _eefc := d.DecodeElement(_bacb.Plus, &_dgdee); _eefc != nil {
					return _eefc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}:
				_bacb.Pull = NewCT_EightDirectionTransition()
				if _fgdd := d.DecodeElement(_bacb.Pull, &_dgdee); _fgdd != nil {
					return _fgdd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}:
				_bacb.Push = NewCT_SideDirectionTransition()
				if _bbfe := d.DecodeElement(_bacb.Push, &_dgdee); _bbfe != nil {
					return _bbfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}:
				_bacb.Random = NewCT_Empty()
				if _deccg := d.DecodeElement(_bacb.Random, &_dgdee); _deccg != nil {
					return _deccg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}:
				_bacb.RandomBar = NewCT_OrientationTransition()
				if _geff := d.DecodeElement(_bacb.RandomBar, &_dgdee); _geff != nil {
					return _geff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}:
				_bacb.Split = NewCT_SplitTransition()
				if _becaa := d.DecodeElement(_bacb.Split, &_dgdee); _becaa != nil {
					return _becaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}:
				_bacb.Strips = NewCT_CornerDirectionTransition()
				if _gfgaf := d.DecodeElement(_bacb.Strips, &_dgdee); _gfgaf != nil {
					return _gfgaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}:
				_bacb.Wedge = NewCT_Empty()
				if _aecda := d.DecodeElement(_bacb.Wedge, &_dgdee); _aecda != nil {
					return _aecda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}:
				_bacb.Wheel = NewCT_WheelTransition()
				if _afebe := d.DecodeElement(_bacb.Wheel, &_dgdee); _afebe != nil {
					return _afebe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}:
				_bacb.Wipe = NewCT_SideDirectionTransition()
				if _cgacf := d.DecodeElement(_bacb.Wipe, &_dgdee); _cgacf != nil {
					return _cgacf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}:
				_bacb.Zoom = NewCT_InOutTransition()
				if _abbg := d.DecodeElement(_bacb.Zoom, &_dgdee); _abbg != nil {
					return _abbg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _dgdee.Name)
				if _beefb := d.Skip(); _beefb != nil {
					return _beefb
				}
			}
		case _d.EndElement:
			break _beca
		case _d.CharData:
		}
	}
	return nil
}
func (_bdfaa ST_WebColorType) Validate() error { return _bdfaa.ValidateWithPath("") }

const (
	ST_TLTimeNodeRestartTypeUnset         ST_TLTimeNodeRestartType = 0
	ST_TLTimeNodeRestartTypeAlways        ST_TLTimeNodeRestartType = 1
	ST_TLTimeNodeRestartTypeWhenNotActive ST_TLTimeNodeRestartType = 2
	ST_TLTimeNodeRestartTypeNever         ST_TLTimeNodeRestartType = 3
)

func NewCT_TLTemplate() *CT_TLTemplate {
	_abdgdb := &CT_TLTemplate{}
	_abdgdb.TnLst = NewCT_TimeNodeList()
	return _abdgdb
}
func (_cbfdg ST_TLAnimateBehaviorCalcMode) ValidateWithPath(path string) error {
	switch _cbfdg {
	case 0, 1, 2, 3:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbfdg))
	}
	return nil
}
func (_gaea *CT_NotesTextViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ggag := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_gaea.CViewPr, _ggag)
	if _gaea.ExtLst != nil {
		_gcgb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gaea.ExtLst, _gcgb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_TLTimeNodeSyncType byte

func NewSldLayout() *SldLayout {
	_cfbd := &SldLayout{}
	_cfbd.CT_SlideLayout = *NewCT_SlideLayout()
	return _cfbd
}

// ValidateWithPath validates the CT_NormalViewPortion and its children, prefixing error messages with path
func (_fbgdc *CT_NormalViewPortion) ValidateWithPath(path string) error {
	if _bbbe := _fbgdc.SzAttr.ValidateWithPath(path + "\u002fS\u007a\u0041\u0074\u0074\u0072"); _bbbe != nil {
		return _bbbe
	}
	return nil
}

type ViewPr struct{ CT_ViewProperties }

func (_gcage ST_WebColorType) String() string {
	switch _gcage {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0062r\u006f\u0077\u0073\u0065\u0072"
	case 3:
		return "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 4:
		return "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074"
	case 5:
		return "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b"
	case 6:
		return "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065"
	}
	return ""
}

// Validate validates the CT_ConnectorNonVisual and its children
func (_fbba *CT_ConnectorNonVisual) Validate() error {
	return _fbba.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}

// ValidateWithPath validates the CT_CustomShowList and its children, prefixing error messages with path
func (_egcd *CT_CustomShowList) ValidateWithPath(path string) error {
	for _dgbeb, _dcec := range _egcd.CustShow {
		if _fde := _dcec.ValidateWithPath(_b.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u005b\u0025\u0064\u005d", path, _dgbeb)); _fde != nil {
			return _fde
		}
	}
	return nil
}
func (_fcad *CT_TLCommonMediaNodeData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fcad.VolAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u006f\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_fcad.VolAttr)})
	}
	if _fcad.MuteAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0075\u0074\u0065"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_fcad.MuteAttr))})
	}
	if _fcad.NumSldAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0075\u006d\u0053\u006c\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_fcad.NumSldAttr)})
	}
	if _fcad.ShowWhenStoppedAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073h\u006fw\u0057\u0068\u0065\u006e\u0053\u0074\u006f\u0070\u0070\u0065\u0064"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_fcad.ShowWhenStoppedAttr))})
	}
	e.EncodeToken(start)
	_fdgd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_fcad.CTn, _fdgd)
	_daad := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
	e.EncodeElement(_fcad.TgtEl, _daad)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_ShowType struct {

	// Presenter Slide Show Mode
	Present *CT_Empty

	// Browse Slide Show Mode
	Browse *CT_ShowInfoBrowse

	// Kiosk Slide Show Mode
	Kiosk *CT_ShowInfoKiosk
}
type CT_TLSetBehavior struct {

	// Common Behavior
	CBhvr *CT_TLCommonBehaviorData

	// To
	To *CT_TLAnimVariant
}
type CT_SlideMasterTextStyles struct {

	// Slide Master Title Text Style
	TitleStyle *_c.CT_TextListStyle

	// Slide Master Body Text Style
	BodyStyle *_c.CT_TextListStyle

	// Slide Master Other Text Style
	OtherStyle *_c.CT_TextListStyle
	ExtLst     *CT_ExtensionList
}

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_efaf *CT_Empty) ValidateWithPath(path string) error { return nil }
func (_cg *AG_Ole) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cg.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cg.SpidAttr)})
	}
	if _cg.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _b.Sprintf("\u0025\u0076", *_cg.NameAttr)})
	}
	if _cg.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_cg.ShowAsIconAttr))})
	}
	if _cg.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_cg.IdAttr)})
	}
	if _cg.ImgWAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _b.Sprintf("\u0025\u0076", *_cg.ImgWAttr)})
	}
	if _cg.ImgHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _b.Sprintf("\u0025\u0076", *_cg.ImgHAttr)})
	}
	return nil
}
func NewSldMaster() *SldMaster {
	_gdggg := &SldMaster{}
	_gdggg.CT_SlideMaster = *NewCT_SlideMaster()
	return _gdggg
}

// ValidateWithPath validates the CT_WebProperties and its children, prefixing error messages with path
func (_adaef *CT_WebProperties) ValidateWithPath(path string) error {
	if _agadb := _adaef.ImgSzAttr.ValidateWithPath(path + "\u002f\u0049\u006d\u0067\u0053\u007a\u0041\u0074\u0074\u0072"); _agadb != nil {
		return _agadb
	}
	if _dbdeb := _adaef.ClrAttr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0041\u0074\u0074\u0072"); _dbdeb != nil {
		return _dbdeb
	}
	if _adaef.ExtLst != nil {
		if _afecd := _adaef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afecd != nil {
			return _afecd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomerData and its children, prefixing error messages with path
func (_beaa *CT_CustomerData) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the HandoutMaster and its children, prefixing error messages with path
func (_facgc *HandoutMaster) ValidateWithPath(path string) error {
	if _afcfe := _facgc.CT_HandoutMaster.ValidateWithPath(path); _afcfe != nil {
		return _afcfe
	}
	return nil
}
func (_cebfd ST_WebScreenSize) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cebfd.String(), start)
}

// ValidateWithPath validates the CT_TransitionStartSoundAction and its children, prefixing error messages with path
func (_gaefb *CT_TransitionStartSoundAction) ValidateWithPath(path string) error {
	if _ebbfee := _gaefb.Snd.ValidateWithPath(path + "\u002f\u0053\u006e\u0064"); _ebbfee != nil {
		return _ebbfee
	}
	return nil
}
func (_cegc *CT_HandoutMaster) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_cegfa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_cegc.CSld, _cegfa)
	_ebgc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_cegc.ClrMap, _ebgc)
	if _cegc.Hf != nil {
		_abfed := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_cegc.Hf, _abfed)
	}
	if _cegc.ExtLst != nil {
		_bgfee := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cegc.ExtLst, _bgfee)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gdcge ST_TLDiagramBuildType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gababf := _d.Attr{}
	_gababf.Name = name
	switch _gdcge {
	case ST_TLDiagramBuildTypeUnset:
		_gababf.Value = ""
	case ST_TLDiagramBuildTypeWhole:
		_gababf.Value = "\u0077\u0068\u006fl\u0065"
	case ST_TLDiagramBuildTypeDepthByNode:
		_gababf.Value = "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case ST_TLDiagramBuildTypeDepthByBranch:
		_gababf.Value = "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068"
	case ST_TLDiagramBuildTypeBreadthByNode:
		_gababf.Value = "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case ST_TLDiagramBuildTypeBreadthByLvl:
		_gababf.Value = "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c"
	case ST_TLDiagramBuildTypeCw:
		_gababf.Value = "\u0063\u0077"
	case ST_TLDiagramBuildTypeCwIn:
		_gababf.Value = "\u0063\u0077\u0049\u006e"
	case ST_TLDiagramBuildTypeCwOut:
		_gababf.Value = "\u0063\u0077\u004fu\u0074"
	case ST_TLDiagramBuildTypeCcw:
		_gababf.Value = "\u0063\u0063\u0077"
	case ST_TLDiagramBuildTypeCcwIn:
		_gababf.Value = "\u0063\u0063\u0077I\u006e"
	case ST_TLDiagramBuildTypeCcwOut:
		_gababf.Value = "\u0063\u0063\u0077\u004f\u0075\u0074"
	case ST_TLDiagramBuildTypeInByRing:
		_gababf.Value = "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067"
	case ST_TLDiagramBuildTypeOutByRing:
		_gababf.Value = "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg"
	case ST_TLDiagramBuildTypeUp:
		_gababf.Value = "\u0075\u0070"
	case ST_TLDiagramBuildTypeDown:
		_gababf.Value = "\u0064\u006f\u0077\u006e"
	case ST_TLDiagramBuildTypeAllAtOnce:
		_gababf.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLDiagramBuildTypeCust:
		_gababf.Value = "\u0063\u0075\u0073\u0074"
	}
	return _gababf, nil
}

// Validate validates the CT_Shape and its children
func (_dfcc *CT_Shape) Validate() error {
	return _dfcc.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065")
}
func (_gfcg *CT_TLOleBuildChart) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gfcg.BldAttr != ST_TLOleChartBuildTypeUnset {
		_ccebd, _fdgfg := _gfcg.BldAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u006c\u0064"})
		if _fdgfg != nil {
			return _fdgfg
		}
		start.Attr = append(start.Attr, _ccebd)
	}
	if _gfcg.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gfcg.AnimBgAttr))})
	}
	if _gfcg.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_gfcg.SpidAttr)})
	}
	if _gfcg.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_gfcg.GrpIdAttr)})
	}
	if _gfcg.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gfcg.UiExpandAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLAnimVariantFloatVal() *CT_TLAnimVariantFloatVal {
	_fgcd := &CT_TLAnimVariantFloatVal{}
	return _fgcd
}
func NewEG_Background() *EG_Background { _cfbb := &EG_Background{}; return _cfbb }
func (_cfdabe *ST_PlaceholderType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cfdabe = 0
	case "\u0074\u0069\u0074l\u0065":
		*_cfdabe = 1
	case "\u0062\u006f\u0064\u0079":
		*_cfdabe = 2
	case "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065":
		*_cfdabe = 3
	case "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065":
		*_cfdabe = 4
	case "\u0064\u0074":
		*_cfdabe = 5
	case "\u0073\u006c\u0064\u004e\u0075\u006d":
		*_cfdabe = 6
	case "\u0066\u0074\u0072":
		*_cfdabe = 7
	case "\u0068\u0064\u0072":
		*_cfdabe = 8
	case "\u006f\u0062\u006a":
		*_cfdabe = 9
	case "\u0063\u0068\u0061r\u0074":
		*_cfdabe = 10
	case "\u0074\u0062\u006c":
		*_cfdabe = 11
	case "\u0063l\u0069\u0070\u0041\u0072\u0074":
		*_cfdabe = 12
	case "\u0064\u0067\u006d":
		*_cfdabe = 13
	case "\u006d\u0065\u0064i\u0061":
		*_cfdabe = 14
	case "\u0073\u006c\u0064\u0049\u006d\u0067":
		*_cfdabe = 15
	case "\u0070\u0069\u0063":
		*_cfdabe = 16
	}
	return nil
}
func (_bccab ST_SplitterBarState) String() string {
	switch _bccab {
	case 0:
		return ""
	case 1:
		return "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"
	case 2:
		return "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064"
	case 3:
		return "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"
	}
	return ""
}
func NewCT_TLTemplateList() *CT_TLTemplateList { _cbgge := &CT_TLTemplateList{}; return _cbgge }

type CT_SlideSyncProperties struct {

	// Server's Slide File ID
	ServerSldIdAttr string

	// Server's Slide File's modification date/time
	ServerSldModifiedTimeAttr _f.Time

	// Client Slide Insertion date/time
	ClientInsertedTimeAttr _f.Time
	ExtLst                 *CT_ExtensionList
}

// Validate validates the CT_EmbeddedFontList and its children
func (_gdda *CT_EmbeddedFontList) Validate() error {
	return _gdda.ValidateWithPath("\u0043\u0054\u005f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_TLAnimateScaleBehavior and its children, prefixing error messages with path
func (_fbdga *CT_TLAnimateScaleBehavior) ValidateWithPath(path string) error {
	if _dfefd := _fbdga.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _dfefd != nil {
		return _dfefd
	}
	if _fbdga.By != nil {
		if _fcfad := _fbdga.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _fcfad != nil {
			return _fcfad
		}
	}
	if _fbdga.From != nil {
		if _cedd := _fbdga.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _cedd != nil {
			return _cedd
		}
	}
	if _fbdga.To != nil {
		if _bebbf := _fbdga.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _bebbf != nil {
			return _bebbf
		}
	}
	return nil
}
func (_cceb *CT_PrintProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _daegg := range start.Attr {
		if _daegg.Name.Local == "\u0070r\u006e\u0057\u0068\u0061\u0074" {
			_cceb.PrnWhatAttr.UnmarshalXMLAttr(_daegg)
			continue
		}
		if _daegg.Name.Local == "\u0063l\u0072\u004d\u006f\u0064\u0065" {
			_cceb.ClrModeAttr.UnmarshalXMLAttr(_daegg)
			continue
		}
		if _daegg.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0053\u006c\u0069\u0064\u0065\u0073" {
			_eefea, _cabed := _ag.ParseBool(_daegg.Value)
			if _cabed != nil {
				return _cabed
			}
			_cceb.HiddenSlidesAttr = &_eefea
			continue
		}
		if _daegg.Name.Local == "\u0073c\u0061l\u0065\u0054\u006f\u0046\u0069\u0074\u0050\u0061\u0070\u0065\u0072" {
			_abcf, _ecbe := _ag.ParseBool(_daegg.Value)
			if _ecbe != nil {
				return _ecbe
			}
			_cceb.ScaleToFitPaperAttr = &_abcf
			continue
		}
		if _daegg.Name.Local == "f\u0072\u0061\u006d\u0065\u0053\u006c\u0069\u0064\u0065\u0073" {
			_dcgf, _cgea := _ag.ParseBool(_daegg.Value)
			if _cgea != nil {
				return _cgea
			}
			_cceb.FrameSlidesAttr = &_dcgf
			continue
		}
	}
_gdcd:
	for {
		_bdga, _gacde := d.Token()
		if _gacde != nil {
			return _gacde
		}
		switch _fabcc := _bdga.(type) {
		case _d.StartElement:
			switch _fabcc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cceb.ExtLst = NewCT_ExtensionList()
				if _accac := d.DecodeElement(_cceb.ExtLst, &_fabcc); _accac != nil {
					return _accac
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0069\u006e\u0074\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fabcc.Name)
				if _ebbed := d.Skip(); _ebbed != nil {
					return _ebbed
				}
			}
		case _d.EndElement:
			break _gdcd
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_ShowInfoKiosk() *CT_ShowInfoKiosk { _eag := &CT_ShowInfoKiosk{}; return _eag }

// ValidateWithPath validates the CT_TLCommonBehaviorData and its children, prefixing error messages with path
func (_gegae *CT_TLCommonBehaviorData) ValidateWithPath(path string) error {
	if _ebcc := _gegae.AdditiveAttr.ValidateWithPath(path + "\u002f\u0041\u0064\u0064\u0069\u0074\u0069\u0076\u0065\u0041\u0074\u0074\u0072"); _ebcc != nil {
		return _ebcc
	}
	if _ddaa := _gegae.AccumulateAttr.ValidateWithPath(path + "\u002fA\u0063c\u0075\u006d\u0075\u006c\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _ddaa != nil {
		return _ddaa
	}
	if _efce := _gegae.XfrmTypeAttr.ValidateWithPath(path + "\u002f\u0058\u0066\u0072\u006d\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _efce != nil {
		return _efce
	}
	if _fdae := _gegae.OverrideAttr.ValidateWithPath(path + "\u002f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0041\u0074\u0074\u0072"); _fdae != nil {
		return _fdae
	}
	if _fcdb := _gegae.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _fcdb != nil {
		return _fcdb
	}
	if _acfa := _gegae.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _acfa != nil {
		return _acfa
	}
	if _gegae.AttrNameLst != nil {
		if _fabd := _gegae.AttrNameLst.ValidateWithPath(path + "\u002f\u0041\u0074t\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"); _fabd != nil {
			return _fabd
		}
	}
	return nil
}
func (_egbaf *ST_IterateType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_caece, _faeccf := d.Token()
	if _faeccf != nil {
		return _faeccf
	}
	if _bgfd, _dddce := _caece.(_d.EndElement); _dddce && _bgfd.Name == start.Name {
		*_egbaf = 1
		return nil
	}
	if _afdb, _bfgd := _caece.(_d.CharData); !_bfgd {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _caece)
	} else {
		switch string(_afdb) {
		case "":
			*_egbaf = 0
		case "\u0065\u006c":
			*_egbaf = 1
		case "\u0077\u0064":
			*_egbaf = 2
		case "\u006c\u0074":
			*_egbaf = 3
		}
	}
	_caece, _faeccf = d.Token()
	if _faeccf != nil {
		return _faeccf
	}
	if _gbaad, _eeeeaf := _caece.(_d.EndElement); _eeeeaf && _gbaad.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _caece)
}
func (_abgdf ST_TLAnimateColorSpace) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_deeg := _d.Attr{}
	_deeg.Name = name
	switch _abgdf {
	case ST_TLAnimateColorSpaceUnset:
		_deeg.Value = ""
	case ST_TLAnimateColorSpaceRgb:
		_deeg.Value = "\u0072\u0067\u0062"
	case ST_TLAnimateColorSpaceHsl:
		_deeg.Value = "\u0068\u0073\u006c"
	}
	return _deeg, nil
}
func (_gbbb *ST_TLCommandType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gbbb = 0
	case "\u0065\u0076\u0074":
		*_gbbb = 1
	case "\u0063\u0061\u006c\u006c":
		*_gbbb = 2
	case "\u0076\u0065\u0072\u0062":
		*_gbbb = 3
	}
	return nil
}
func NewCT_ConnectorNonVisual() *CT_ConnectorNonVisual {
	_gfb := &CT_ConnectorNonVisual{}
	_gfb.CNvPr = _c.NewCT_NonVisualDrawingProps()
	_gfb.CNvCxnSpPr = _c.NewCT_NonVisualConnectorProperties()
	_gfb.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _gfb
}
func NewCT_NotesMaster() *CT_NotesMaster {
	_fbad := &CT_NotesMaster{}
	_fbad.CSld = NewCT_CommonSlideData()
	_fbad.ClrMap = _c.NewCT_ColorMapping()
	return _fbad
}
func (_dcdf *CT_GraphicalObjectFrameNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dcdf.CNvPr = _c.NewCT_NonVisualDrawingProps()
	_dcdf.CNvGraphicFramePr = _c.NewCT_NonVisualGraphicFrameProperties()
	_dcdf.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_dbbc:
	for {
		_ace, _cacga := d.Token()
		if _cacga != nil {
			return _cacga
		}
		switch _fbca := _ace.(type) {
		case _d.StartElement:
			switch _fbca.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _cbg := d.DecodeElement(_dcdf.CNvPr, &_fbca); _cbg != nil {
					return _cbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _gcbbc := d.DecodeElement(_dcdf.CNvGraphicFramePr, &_fbca); _gcbbc != nil {
					return _gcbbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _beaf := d.DecodeElement(_dcdf.NvPr, &_fbca); _beaf != nil {
					return _beaf
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006de\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0020\u0025\u0076", _fbca.Name)
				if _bebb := d.Skip(); _bebb != nil {
					return _bebb
				}
			}
		case _d.EndElement:
			break _dbbc
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OleObjectChoice and its children
func (_bbba *CT_OleObjectChoice) Validate() error {
	return _bbba.ValidateWithPath("\u0043T\u005fO\u006c\u0065\u004f\u0062\u006ae\u0063\u0074C\u0068\u006f\u0069\u0063\u0065")
}
func (_aecf ST_TransitionEightDirectionType) String() string {
	if _aecf.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		return _aecf.ST_TransitionSideDirectionType.String()
	}
	if _aecf.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		return _aecf.ST_TransitionCornerDirectionType.String()
	}
	return ""
}

type ST_IterateType byte

func NewCT_NotesMasterIdList() *CT_NotesMasterIdList { _fgcf := &CT_NotesMasterIdList{}; return _fgcf }
func NewCT_EmbeddedFontList() *CT_EmbeddedFontList   { _bcbg := &CT_EmbeddedFontList{}; return _bcbg }
func (_ggecd *CT_OleObjectEmbed) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ggecd.FollowColorSchemeAttr != ST_OleObjectFollowColorSchemeUnset {
		_cgda, _bebe := _ggecd.FollowColorSchemeAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u006f\u006c\u006c\u006f\u0077\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065"})
		if _bebe != nil {
			return _bebe
		}
		start.Attr = append(start.Attr, _cgda)
	}
	e.EncodeToken(start)
	if _ggecd.ExtLst != nil {
		_bbabc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggecd.ExtLst, _bbabc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cbegc ST_TLTimeNodeRestartType) Validate() error { return _cbegc.ValidateWithPath("") }

type CT_Kinsoku struct {

	// Language
	LangAttr *string

	// Invalid Kinsoku Start Characters
	InvalStCharsAttr string

	// Invalid Kinsoku End Characters
	InvalEndCharsAttr string
}

func (_eebge *ST_TLParaBuildType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cefgc, _ccbg := d.Token()
	if _ccbg != nil {
		return _ccbg
	}
	if _becgf, _cebbe := _cefgc.(_d.EndElement); _cebbe && _becgf.Name == start.Name {
		*_eebge = 1
		return nil
	}
	if _dgggf, _degaga := _cefgc.(_d.CharData); !_degaga {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cefgc)
	} else {
		switch string(_dgggf) {
		case "":
			*_eebge = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_eebge = 1
		case "\u0070":
			*_eebge = 2
		case "\u0063\u0075\u0073\u0074":
			*_eebge = 3
		case "\u0077\u0068\u006fl\u0065":
			*_eebge = 4
		}
	}
	_cefgc, _ccbg = d.Token()
	if _ccbg != nil {
		return _ccbg
	}
	if _fgacf, _bdfc := _cefgc.(_d.EndElement); _bdfc && _fgacf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cefgc)
}
func (_afdcf ST_TLParaBuildType) Validate() error { return _afdcf.ValidateWithPath("") }

const (
	ST_PhotoAlbumLayoutUnset      ST_PhotoAlbumLayout = 0
	ST_PhotoAlbumLayoutFitToSlide ST_PhotoAlbumLayout = 1
	ST_PhotoAlbumLayout1pic       ST_PhotoAlbumLayout = 2
	ST_PhotoAlbumLayout2pic       ST_PhotoAlbumLayout = 3
	ST_PhotoAlbumLayout4pic       ST_PhotoAlbumLayout = 4
	ST_PhotoAlbumLayout1picTitle  ST_PhotoAlbumLayout = 5
	ST_PhotoAlbumLayout2picTitle  ST_PhotoAlbumLayout = 6
	ST_PhotoAlbumLayout4picTitle  ST_PhotoAlbumLayout = 7
)

func (_agdca *CT_EmbeddedFontListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_bcf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0066\u006f\u006e\u0074"}}
	e.EncodeElement(_agdca.Font, _bcf)
	if _agdca.Regular != nil {
		_gabf := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0072\u0065\u0067\u0075\u006c\u0061r"}}
		e.EncodeElement(_agdca.Regular, _gabf)
	}
	if _agdca.Bold != nil {
		_ecec := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006f\u006c\u0064"}}
		e.EncodeElement(_agdca.Bold, _ecec)
	}
	if _agdca.Italic != nil {
		_dfb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0069\u0074\u0061\u006c\u0069\u0063"}}
		e.EncodeElement(_agdca.Italic, _dfb)
	}
	if _agdca.BoldItalic != nil {
		_ddffg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062o\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}}
		e.EncodeElement(_agdca.BoldItalic, _ddffg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cfffa ST_PrintColorMode) String() string {
	switch _cfffa {
	case 0:
		return ""
	case 1:
		return "\u0062\u0077"
	case 2:
		return "\u0067\u0072\u0061\u0079"
	case 3:
		return "\u0063\u006c\u0072"
	}
	return ""
}
func NewCT_TLAnimVariant() *CT_TLAnimVariant { _adfb := &CT_TLAnimVariant{}; return _adfb }

// ValidateWithPath validates the CT_Comment and its children, prefixing error messages with path
func (_cgc *CT_Comment) ValidateWithPath(path string) error {
	if _bge := _cgc.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _bge != nil {
		return _bge
	}
	if _cgc.ExtLst != nil {
		if _dfef := _cgc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfef != nil {
			return _dfef
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OutlineViewSlideEntry and its children, prefixing error messages with path
func (_bdcf *CT_OutlineViewSlideEntry) ValidateWithPath(path string) error { return nil }

type ST_TLAnimateBehaviorValueType byte
type CT_CustomerDataList struct {

	// Customer Data
	CustData []*CT_CustomerData

	// Customer Data Tags
	Tags *CT_TagsData
}
type CT_BuildList struct {

	// Build Paragraph
	BldP []*CT_TLBuildParagraph

	// Build Diagram
	BldDgm []*CT_TLBuildDiagram

	// Build Embedded Chart
	BldOleChart []*CT_TLOleBuildChart

	// Build Graphics
	BldGraphic []*CT_TLGraphicalObjectBuild
}

// ValidateWithPath validates the CT_NotesMasterIdListEntry and its children, prefixing error messages with path
func (_dceb *CT_NotesMasterIdListEntry) ValidateWithPath(path string) error {
	if _dceb.ExtLst != nil {
		if _ccgf := _dceb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccgf != nil {
			return _ccgf
		}
	}
	return nil
}
func (_aggef *ST_TLTimeNodeType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_aggef = 0
	case "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074":
		*_aggef = 1
	case "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074":
		*_aggef = 2
	case "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074":
		*_aggef = 3
	case "\u006da\u0069\u006e\u0053\u0065\u0071":
		*_aggef = 4
	case "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071":
		*_aggef = 5
	case "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072":
		*_aggef = 6
	case "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p":
		*_aggef = 7
	case "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
		*_aggef = 8
	case "\u0074\u006d\u0052\u006f\u006f\u0074":
		*_aggef = 9
	}
	return nil
}
func (_ecgf ST_TLBehaviorTransformType) ValidateWithPath(path string) error {
	switch _ecgf {
	case 0, 1, 2:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecgf))
	}
	return nil
}

// Validate validates the CT_ViewProperties and its children
func (_egeg *CT_ViewProperties) Validate() error {
	return _egeg.ValidateWithPath("\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

const (
	ST_TLAnimateColorDirectionUnset ST_TLAnimateColorDirection = 0
	ST_TLAnimateColorDirectionCw    ST_TLAnimateColorDirection = 1
	ST_TLAnimateColorDirectionCcw   ST_TLAnimateColorDirection = 2
)

func (_ebd *CT_EmbeddedFontList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_afe:
	for {
		_abdb, _abdg := d.Token()
		if _abdg != nil {
			return _abdg
		}
		switch _ebgfb := _abdb.(type) {
		case _d.StartElement:
			switch _ebgfb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074"}:
				_dfcd := NewCT_EmbeddedFontListEntry()
				if _efa := d.DecodeElement(_dfcd, &_ebgfb); _efa != nil {
					return _efa
				}
				_ebd.EmbeddedFont = append(_ebd.EmbeddedFont, _dfcd)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065dF\u006f\u006e\u0074\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ebgfb.Name)
				if _edf := d.Skip(); _edf != nil {
					return _edf
				}
			}
		case _d.EndElement:
			break _afe
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TLBuildParagraph() *CT_TLBuildParagraph { _aebee := &CT_TLBuildParagraph{}; return _aebee }
func (_bcdb *CT_OptionalBlackTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bcdb.ThruBlkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074h\u0072\u0075\u0042\u006c\u006b"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_bcdb.ThruBlkAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLTriggerTimeNodeID() *CT_TLTriggerTimeNodeID {
	_ecdefc := &CT_TLTriggerTimeNodeID{}
	return _ecdefc
}
func (_cbbgg ST_TLPreviousActionType) Validate() error { return _cbbgg.ValidateWithPath("") }

type CT_OptionalBlackTransition struct {

	// Transition Through Black
	ThruBlkAttr *bool
}

func (_abdc *CT_TLAnimateMotionBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _abdc.OriginAttr != ST_TLAnimateMotionBehaviorOriginUnset {
		_cebd, _dggg := _abdc.OriginAttr.MarshalXMLAttr(_d.Name{Local: "\u006f\u0072\u0069\u0067\u0069\u006e"})
		if _dggg != nil {
			return _dggg
		}
		start.Attr = append(start.Attr, _cebd)
	}
	if _abdc.PathAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0061\u0074\u0068"}, Value: _b.Sprintf("\u0025\u0076", *_abdc.PathAttr)})
	}
	if _abdc.PathEditModeAttr != ST_TLAnimateMotionPathEditModeUnset {
		_babad, _acdde := _abdc.PathEditModeAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0061\u0074h\u0045\u0064\u0069\u0074\u004d\u006f\u0064\u0065"})
		if _acdde != nil {
			return _acdde
		}
		start.Attr = append(start.Attr, _babad)
	}
	if _abdc.RAngAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0041\u006e\u0067"}, Value: _b.Sprintf("\u0025\u0076", *_abdc.RAngAttr)})
	}
	if _abdc.PtsTypesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0074\u0073\u0054\u0079\u0070\u0065\u0073"}, Value: _b.Sprintf("\u0025\u0076", *_abdc.PtsTypesAttr)})
	}
	e.EncodeToken(start)
	_efaeg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_abdc.CBhvr, _efaeg)
	if _abdc.By != nil {
		_ccdde := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_abdc.By, _ccdde)
	}
	if _abdc.From != nil {
		_gfbgf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_abdc.From, _gfbgf)
	}
	if _abdc.To != nil {
		_faebg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_abdc.To, _faebg)
	}
	if _abdc.RCtr != nil {
		_fgged := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0072\u0043\u0074\u0072"}}
		e.EncodeElement(_abdc.RCtr, _fgged)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_WebScreenSizeUnset     ST_WebScreenSize = 0
	ST_WebScreenSize544x376   ST_WebScreenSize = 1
	ST_WebScreenSize640x480   ST_WebScreenSize = 2
	ST_WebScreenSize720x512   ST_WebScreenSize = 3
	ST_WebScreenSize800x600   ST_WebScreenSize = 4
	ST_WebScreenSize1024x768  ST_WebScreenSize = 5
	ST_WebScreenSize1152x882  ST_WebScreenSize = 6
	ST_WebScreenSize1152x900  ST_WebScreenSize = 7
	ST_WebScreenSize1280x1024 ST_WebScreenSize = 8
	ST_WebScreenSize1600x1200 ST_WebScreenSize = 9
	ST_WebScreenSize1800x1400 ST_WebScreenSize = 10
	ST_WebScreenSize1920x1200 ST_WebScreenSize = 11
)

func (_cbcd *CT_TLTimeNodeParallel) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gceg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_cbcd.CTn, _gceg)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bega *ST_TLAnimateMotionBehaviorOrigin) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bega = 0
	case "\u0070\u0061\u0072\u0065\u006e\u0074":
		*_bega = 1
	case "\u006c\u0061\u0079\u006f\u0075\u0074":
		*_bega = 2
	}
	return nil
}

// Validate validates the NotesMaster and its children
func (_edga *NotesMaster) Validate() error {
	return _edga.ValidateWithPath("N\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072")
}
func ParseUnionST_TransitionEightDirectionType(s string) (ST_TransitionEightDirectionType, error) {
	return ST_TransitionEightDirectionType{}, nil
}
func (_cbace *CT_TLMediaNodeVideo) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cbace.FullScrnAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0075\u006c\u006c\u0053\u0063\u0072\u006e"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_cbace.FullScrnAttr))})
	}
	e.EncodeToken(start)
	_cbga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063M\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}}
	e.EncodeElement(_cbace.CMediaNode, _cbga)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OleObject and its children
func (_cdfdg *CT_OleObject) Validate() error {
	return _cdfdg.ValidateWithPath("\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074")
}

type ST_TLCommandType byte

// ValidateWithPath validates the CT_SlideRelationshipList and its children, prefixing error messages with path
func (_bgfcf *CT_SlideRelationshipList) ValidateWithPath(path string) error {
	for _acdd, _efbg := range _bgfcf.Sld {
		if _dgdgc := _efbg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0053\u006c\u0064\u005b\u0025\u0064\u005d", path, _acdd)); _dgdgc != nil {
			return _dgdgc
		}
	}
	return nil
}
func (_dcadg ST_TLAnimateBehaviorCalcMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dcadg.String(), start)
}
func NewCT_NormalViewPortion() *CT_NormalViewPortion { _defg := &CT_NormalViewPortion{}; return _defg }
func (_ggfge *CT_TLMediaNodeVideo) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ggfge.CMediaNode = NewCT_TLCommonMediaNodeData()
	for _, _efcc := range start.Attr {
		if _efcc.Name.Local == "\u0066\u0075\u006c\u006c\u0053\u0063\u0072\u006e" {
			_dfgd, _cebe := _ag.ParseBool(_efcc.Value)
			if _cebe != nil {
				return _cebe
			}
			_ggfge.FullScrnAttr = &_dfgd
			continue
		}
	}
_addg:
	for {
		_abgd, _egfdc := d.Token()
		if _egfdc != nil {
			return _egfdc
		}
		switch _fbdbd := _abgd.(type) {
		case _d.StartElement:
			switch _fbdbd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}:
				if _acefg := d.DecodeElement(_ggfge.CMediaNode, &_fbdbd); _acefg != nil {
					return _acefg
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u004d\u0065\u0064\u0069\u0061No\u0064\u0065\u0056\u0069\u0064\u0065\u006f\u0020\u0025\u0076", _fbdbd.Name)
				if _gead := d.Skip(); _gead != nil {
					return _gead
				}
			}
		case _d.EndElement:
			break _addg
		case _d.CharData:
		}
	}
	return nil
}

type ST_TLTriggerEvent byte

func NewCT_StringTag() *CT_StringTag { _eada := &CT_StringTag{}; return _eada }
func NewHandoutMaster() *HandoutMaster {
	_fgbc := &HandoutMaster{}
	_fgbc.CT_HandoutMaster = *NewCT_HandoutMaster()
	return _fgbc
}

type CT_SlideLayoutIdList struct {

	// Slide Layout Id
	SldLayoutId []*CT_SlideLayoutIdListEntry
}

func (_feecg *CT_TLAnimVariantStringVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _b.Sprintf("\u0025\u0076", _feecg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_TopLevelSlide struct {

	// Color Scheme Map
	ClrMap *_c.CT_ColorMapping
}

// Validate validates the CT_Comment and its children
func (_gef *CT_Comment) Validate() error {
	return _gef.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074")
}
func NewCT_SideDirectionTransition() *CT_SideDirectionTransition {
	_gcac := &CT_SideDirectionTransition{}
	return _gcac
}
func (_fbecf *CT_TLOleBuildChart) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bceed := range start.Attr {
		if _bceed.Name.Local == "\u0062\u006c\u0064" {
			_fbecf.BldAttr.UnmarshalXMLAttr(_bceed)
			continue
		}
		if _bceed.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_effecb, _gfdcc := _ag.ParseBool(_bceed.Value)
			if _gfdcc != nil {
				return _gfdcc
			}
			_fbecf.AnimBgAttr = &_effecb
			continue
		}
		if _bceed.Name.Local == "\u0073\u0070\u0069\u0064" {
			_gbga, _dedafg := _ag.ParseUint(_bceed.Value, 10, 32)
			if _dedafg != nil {
				return _dedafg
			}
			_adcfg := uint32(_gbga)
			_fbecf.SpidAttr = &_adcfg
			continue
		}
		if _bceed.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_dfbac, _ecbfb := _ag.ParseUint(_bceed.Value, 10, 32)
			if _ecbfb != nil {
				return _ecbfb
			}
			_gacfa := uint32(_dfbac)
			_fbecf.GrpIdAttr = &_gacfa
			continue
		}
		if _bceed.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_gagg, _gdead := _ag.ParseBool(_bceed.Value)
			if _gdead != nil {
				return _gdead
			}
			_fbecf.UiExpandAttr = &_gagg
			continue
		}
	}
	for {
		_abccb, _gaedc := d.Token()
		if _gaedc != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0054\u004c\u004f\u006c\u0065\u0042\u0075i\u006c\u0064\u0043\u0068\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _gaedc)
		}
		if _cdaac, _faaga := _abccb.(_d.EndElement); _faaga && _cdaac.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aebaa *CT_TLByRgbColorTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abcdc := range start.Attr {
		if _abcdc.Name.Local == "\u0072" {
			_eccda, _ffdfe := ParseUnionST_FixedPercentage(_abcdc.Value)
			if _ffdfe != nil {
				return _ffdfe
			}
			_aebaa.RAttr = _eccda
			continue
		}
		if _abcdc.Name.Local == "\u0067" {
			_afgd, _fbge := ParseUnionST_FixedPercentage(_abcdc.Value)
			if _fbge != nil {
				return _fbge
			}
			_aebaa.GAttr = _afgd
			continue
		}
		if _abcdc.Name.Local == "\u0062" {
			_cbggge, _fbeec := ParseUnionST_FixedPercentage(_abcdc.Value)
			if _fbeec != nil {
				return _fbeec
			}
			_aebaa.BAttr = _cbggge
			continue
		}
	}
	for {
		_acdc, _dfacc := d.Token()
		if _dfacc != nil {
			return _b.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LBy\u0052gb\u0043\u006f\u006c\u006f\u0072\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _dfacc)
		}
		if _ffaa, _eebbgb := _acdc.(_d.EndElement); _eebbgb && _ffaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bfddea ST_TLTimeNodeMasterRelation) String() string {
	switch _bfddea {
	case 0:
		return ""
	case 1:
		return "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k"
	case 2:
		return "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k"
	case 3:
		return "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k"
	}
	return ""
}
func (_fccgc *CT_ExtensionListModify) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gbed := range start.Attr {
		if _gbed.Name.Local == "\u006d\u006f\u0064" {
			_dbfge, _fccga := _ag.ParseBool(_gbed.Value)
			if _fccga != nil {
				return _fccga
			}
			_fccgc.ModAttr = &_dbfge
			continue
		}
	}
_gfdd:
	for {
		_faf, _eeed := d.Token()
		if _eeed != nil {
			return _eeed
		}
		switch _beg := _faf.(type) {
		case _d.StartElement:
			switch _beg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_abgf := NewCT_Extension()
				if _beaae := d.DecodeElement(_abgf, &_beg); _beaae != nil {
					return _beaae
				}
				_fccgc.Ext = append(_fccgc.Ext, _abgf)
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0045\u0078\u0074\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069\u0066\u0079\u0020\u0025\u0076", _beg.Name)
				if _ccfg := d.Skip(); _ccfg != nil {
					return _ccfg
				}
			}
		case _d.EndElement:
			break _gfdd
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLMediaNodeAudio and its children, prefixing error messages with path
func (_beaef *CT_TLMediaNodeAudio) ValidateWithPath(path string) error {
	if _dbcaf := _beaef.CMediaNode.ValidateWithPath(path + "/\u0043\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"); _dbcaf != nil {
		return _dbcaf
	}
	return nil
}

// ValidateWithPath validates the PresentationPr and its children, prefixing error messages with path
func (_fdbca *PresentationPr) ValidateWithPath(path string) error {
	if _aadabc := _fdbca.CT_PresentationProperties.ValidateWithPath(path); _aadabc != nil {
		return _aadabc
	}
	return nil
}

// Validate validates the CT_NormalViewPortion and its children
func (_ecaf *CT_NormalViewPortion) Validate() error {
	return _ecaf.ValidateWithPath("C\u0054_\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069e\u0077\u0050\u006f\u0072ti\u006f\u006e")
}
func (_gbcgd ST_SlideSizeType) String() string {
	switch _gbcgd {
	case 0:
		return ""
	case 1:
		return "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783"
	case 2:
		return "\u006c\u0065\u0074\u0074\u0065\u0072"
	case 3:
		return "\u0041\u0034"
	case 4:
		return "\u0033\u0035\u006d\u006d"
	case 5:
		return "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064"
	case 6:
		return "\u0062\u0061\u006e\u006e\u0065\u0072"
	case 7:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	case 8:
		return "\u006c\u0065\u0064\u0067\u0065\u0072"
	case 9:
		return "\u0041\u0033"
	case 10:
		return "\u0042\u0034\u0049S\u004f"
	case 11:
		return "\u0042\u0035\u0049S\u004f"
	case 12:
		return "\u0042\u0034\u004aI\u0053"
	case 13:
		return "\u0042\u0035\u004aI\u0053"
	case 14:
		return "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064"
	case 15:
		return "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039"
	case 16:
		return "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030"
	}
	return ""
}
func (_fdfg *CT_NormalViewPortion) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bgdde := range start.Attr {
		if _bgdde.Name.Local == "\u0073\u007a" {
			_bacf, _cebf := ParseUnionST_PositiveFixedPercentage(_bgdde.Value)
			if _cebf != nil {
				return _cebf
			}
			_fdfg.SzAttr = _bacf
			continue
		}
		if _bgdde.Name.Local == "\u0061\u0075\u0074\u006f\u0041\u0064\u006a\u0075\u0073\u0074" {
			_gbbd, _gcaf := _ag.ParseBool(_bgdde.Value)
			if _gcaf != nil {
				return _gcaf
			}
			_fdfg.AutoAdjustAttr = &_gbbd
			continue
		}
	}
	for {
		_eefef, _dfcaf := d.Token()
		if _dfcaf != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004e\u006f\u0072\u006da\u006cV\u0069\u0065\u0077\u0050\u006f\u0072\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _dfcaf)
		}
		if _gdcee, _dcaf := _eefef.(_d.EndElement); _dcaf && _gdcee.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Control() *CT_Control { _efd := &CT_Control{}; return _efd }
func (_ddccg ST_TLPreviousActionType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gggc := _d.Attr{}
	_gggc.Name = name
	switch _ddccg {
	case ST_TLPreviousActionTypeUnset:
		_gggc.Value = ""
	case ST_TLPreviousActionTypeNone:
		_gggc.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLPreviousActionTypeSkipTimed:
		_gggc.Value = "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d"
	}
	return _gggc, nil
}

// Validate validates the CT_SlideIdListEntry and its children
func (_cgcb *CT_SlideIdListEntry) Validate() error {
	return _cgcb.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079")
}

const (
	ST_OleObjectFollowColorSchemeUnset             ST_OleObjectFollowColorScheme = 0
	ST_OleObjectFollowColorSchemeNone              ST_OleObjectFollowColorScheme = 1
	ST_OleObjectFollowColorSchemeFull              ST_OleObjectFollowColorScheme = 2
	ST_OleObjectFollowColorSchemeTextAndBackground ST_OleObjectFollowColorScheme = 3
)

func NewCT_CommentList() *CT_CommentList { _cec := &CT_CommentList{}; return _cec }
func (_ccbef *ST_PlaceholderType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dddbb, _bfdbf := d.Token()
	if _bfdbf != nil {
		return _bfdbf
	}
	if _efdag, _abcdb := _dddbb.(_d.EndElement); _abcdb && _efdag.Name == start.Name {
		*_ccbef = 1
		return nil
	}
	if _babge, _fgage := _dddbb.(_d.CharData); !_fgage {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dddbb)
	} else {
		switch string(_babge) {
		case "":
			*_ccbef = 0
		case "\u0074\u0069\u0074l\u0065":
			*_ccbef = 1
		case "\u0062\u006f\u0064\u0079":
			*_ccbef = 2
		case "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065":
			*_ccbef = 3
		case "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065":
			*_ccbef = 4
		case "\u0064\u0074":
			*_ccbef = 5
		case "\u0073\u006c\u0064\u004e\u0075\u006d":
			*_ccbef = 6
		case "\u0066\u0074\u0072":
			*_ccbef = 7
		case "\u0068\u0064\u0072":
			*_ccbef = 8
		case "\u006f\u0062\u006a":
			*_ccbef = 9
		case "\u0063\u0068\u0061r\u0074":
			*_ccbef = 10
		case "\u0074\u0062\u006c":
			*_ccbef = 11
		case "\u0063l\u0069\u0070\u0041\u0072\u0074":
			*_ccbef = 12
		case "\u0064\u0067\u006d":
			*_ccbef = 13
		case "\u006d\u0065\u0064i\u0061":
			*_ccbef = 14
		case "\u0073\u006c\u0064\u0049\u006d\u0067":
			*_ccbef = 15
		case "\u0070\u0069\u0063":
			*_ccbef = 16
		}
	}
	_dddbb, _bfdbf = d.Token()
	if _bfdbf != nil {
		return _bfdbf
	}
	if _bcfdf, _bbebdb := _dddbb.(_d.EndElement); _bbebdb && _bcfdf.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dddbb)
}
func (_bbgag *CT_TLGraphicalObjectBuild) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bbgag.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bbgag.SpidAttr)})
	}
	if _bbgag.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_bbgag.GrpIdAttr)})
	}
	if _bbgag.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_bbgag.UiExpandAttr))})
	}
	e.EncodeToken(start)
	if _bbgag.BldAsOne != nil {
		_cceba := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}}
		e.EncodeElement(_bbgag.BldAsOne, _cceba)
	}
	if _bbgag.BldSub != nil {
		_dbdfg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0053\u0075\u0062"}}
		e.EncodeElement(_bbgag.BldSub, _dbdfg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gdcdc *ST_TLTimeNodeFillType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fedbc, _feged := d.Token()
	if _feged != nil {
		return _feged
	}
	if _dfacbe, _ccddc := _fedbc.(_d.EndElement); _ccddc && _dfacbe.Name == start.Name {
		*_gdcdc = 1
		return nil
	}
	if _ecgcd, _cgfcf := _fedbc.(_d.CharData); !_cgfcf {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fedbc)
	} else {
		switch string(_ecgcd) {
		case "":
			*_gdcdc = 0
		case "\u0072\u0065\u006d\u006f\u0076\u0065":
			*_gdcdc = 1
		case "\u0066\u0072\u0065\u0065\u007a\u0065":
			*_gdcdc = 2
		case "\u0068\u006f\u006c\u0064":
			*_gdcdc = 3
		case "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e":
			*_gdcdc = 4
		}
	}
	_fedbc, _feged = d.Token()
	if _feged != nil {
		return _feged
	}
	if _geffa, _dgbcg := _fedbc.(_d.EndElement); _dgbcg && _geffa.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fedbc)
}

type ST_OleObjectFollowColorScheme byte

const (
	ST_TLTimeNodeSyncTypeUnset   ST_TLTimeNodeSyncType = 0
	ST_TLTimeNodeSyncTypeCanSlip ST_TLTimeNodeSyncType = 1
	ST_TLTimeNodeSyncTypeLocked  ST_TLTimeNodeSyncType = 2
)

// ValidateWithPath validates the CT_TLAnimateBehavior and its children, prefixing error messages with path
func (_ddegg *CT_TLAnimateBehavior) ValidateWithPath(path string) error {
	if _cfgg := _ddegg.CalcmodeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0063\u006d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _cfgg != nil {
		return _cfgg
	}
	if _egfg := _ddegg.ValueTypeAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0075\u0065\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _egfg != nil {
		return _egfg
	}
	if _eacbc := _ddegg.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _eacbc != nil {
		return _eacbc
	}
	if _ddegg.TavLst != nil {
		if _dfbf := _ddegg.TavLst.ValidateWithPath(path + "\u002fT\u0061\u0076\u004c\u0073\u0074"); _dfbf != nil {
			return _dfbf
		}
	}
	return nil
}

// Validate validates the CT_BuildList and its children
func (_bafg *CT_BuildList) Validate() error {
	return _bafg.ValidateWithPath("\u0043\u0054\u005fB\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074")
}
func (_cbbf *CT_CustomerDataList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cbbf.CustData != nil {
		_dgfg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}}
		for _, _bgcg := range _cbbf.CustData {
			e.EncodeElement(_bgcg, _dgfg)
		}
	}
	if _cbbf.Tags != nil {
		_acc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0061\u0067\u0073"}}
		e.EncodeElement(_cbbf.Tags, _acc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLIterateData and its children
func (_ddbbfe *CT_TLIterateData) Validate() error {
	return _ddbbfe.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0049t\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061")
}

// ValidateWithPath validates the EG_ChildSlide and its children, prefixing error messages with path
func (_dbbga *EG_ChildSlide) ValidateWithPath(path string) error {
	if _dbbga.ClrMapOvr != nil {
		if _aafdd := _dbbga.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _aafdd != nil {
			return _aafdd
		}
	}
	return nil
}
func (_afdfe *CT_TLShapeTargetElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", _afdfe.SpidAttr)})
	e.EncodeToken(start)
	if _afdfe.Bg != nil {
		_ccbb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0067"}}
		e.EncodeElement(_afdfe.Bg, _ccbb)
	}
	if _afdfe.SubSp != nil {
		_ecfdc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0075\u0062\u0053\u0070"}}
		e.EncodeElement(_afdfe.SubSp, _ecfdc)
	}
	if _afdfe.OleChartEl != nil {
		_cgge := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006fl\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}}
		e.EncodeElement(_afdfe.OleChartEl, _cgge)
	}
	if _afdfe.TxEl != nil {
		_gdadf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0078\u0045\u006c"}}
		e.EncodeElement(_afdfe.TxEl, _gdadf)
	}
	if _afdfe.GraphicEl != nil {
		_ffddb := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0045\u006c"}}
		e.EncodeElement(_afdfe.GraphicEl, _ffddb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLAnimateMotionBehavior and its children, prefixing error messages with path
func (_acffc *CT_TLAnimateMotionBehavior) ValidateWithPath(path string) error {
	if _aebag := _acffc.OriginAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0067\u0069\u006e\u0041\u0074\u0074\u0072"); _aebag != nil {
		return _aebag
	}
	if _efgdc := _acffc.PathEditModeAttr.ValidateWithPath(path + "\u002f\u0050\u0061\u0074\u0068\u0045\u0064\u0069\u0074\u004d\u006f\u0064e\u0041\u0074\u0074\u0072"); _efgdc != nil {
		return _efgdc
	}
	if _dcfbc := _acffc.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _dcfbc != nil {
		return _dcfbc
	}
	if _acffc.By != nil {
		if _ccga := _acffc.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _ccga != nil {
			return _ccga
		}
	}
	if _acffc.From != nil {
		if _abgeg := _acffc.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _abgeg != nil {
			return _abgeg
		}
	}
	if _acffc.To != nil {
		if _aaebg := _acffc.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _aaebg != nil {
			return _aaebg
		}
	}
	if _acffc.RCtr != nil {
		if _gfef := _acffc.RCtr.ValidateWithPath(path + "\u002f\u0052\u0043t\u0072"); _gfef != nil {
			return _gfef
		}
	}
	return nil
}
func (_bbged ST_TLBehaviorAccumulateType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ggdcb := _d.Attr{}
	_ggdcb.Name = name
	switch _bbged {
	case ST_TLBehaviorAccumulateTypeUnset:
		_ggdcb.Value = ""
	case ST_TLBehaviorAccumulateTypeNone:
		_ggdcb.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLBehaviorAccumulateTypeAlways:
		_ggdcb.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return _ggdcb, nil
}

type CT_NotesMaster struct {

	// Common Slide Data
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_c.CT_ColorMapping

	// Header/Footer Information for a Notes Master
	Hf *CT_HeaderFooter

	// Notes Text Style
	NotesStyle *_c.CT_TextListStyle
	ExtLst     *CT_ExtensionListModify
}
type ST_TLTimeNodeMasterRelation byte

func (_agga *CT_NotesMasterIdListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ecdcg := range start.Attr {
		if _ecdcg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ecdcg.Name.Local == "\u0069\u0064" || _ecdcg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ecdcg.Name.Local == "\u0069\u0064" {
			_cbdbe, _bcba := _ecdcg.Value, error(nil)
			if _bcba != nil {
				return _bcba
			}
			_agga.IdAttr = _cbdbe
			continue
		}
	}
_ecced:
	for {
		_geecc, _fccce := d.Token()
		if _fccce != nil {
			return _fccce
		}
		switch _afbcf := _geecc.(type) {
		case _d.StartElement:
			switch _afbcf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agga.ExtLst = NewCT_ExtensionList()
				if _acce := d.DecodeElement(_agga.ExtLst, &_afbcf); _acce != nil {
					return _acce
				}
			default:
				_be.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065r\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _afbcf.Name)
				if _deefe := d.Skip(); _deefe != nil {
					return _deefe
				}
			}
		case _d.EndElement:
			break _ecced
		case _d.CharData:
		}
	}
	return nil
}

type CmAuthorLst struct{ CT_CommentAuthorList }

func (_begf ST_TLTimeNodeFillType) ValidateWithPath(path string) error {
	switch _begf {
	case 0, 1, 2, 3, 4:
	default:
		return _b.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_begf))
	}
	return nil
}
func NewCT_BuildList() *CT_BuildList { _egf := &CT_BuildList{}; return _egf }

type Notes struct{ CT_NotesSlide }

func (_cbcg *CT_ExtensionListModify) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cbcg.ModAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u006f\u0064"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_cbcg.ModAttr))})
	}
	e.EncodeToken(start)
	if _cbcg.Ext != nil {
		_bfea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _baee := range _cbcg.Ext {
			e.EncodeElement(_baee, _bfea)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aggcd *CT_TLSubShapeId) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ceefg := range start.Attr {
		if _ceefg.Name.Local == "\u0073\u0070\u0069\u0064" {
			_daffb, _ecca := _ceefg.Value, error(nil)
			if _ecca != nil {
				return _ecca
			}
			_aggcd.SpidAttr = _daffb
			continue
		}
	}
	for {
		_faff, _fffef := d.Token()
		if _fffef != nil {
			return _b.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u004c\u0053\u0075\u0062\u0053h\u0061\u0070\u0065I\u0064:\u0020\u0025\u0073", _fffef)
		}
		if _ddde, _fggcg := _faff.(_d.EndElement); _fggcg && _ddde.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_NotesSlide() *CT_NotesSlide {
	_bfdd := &CT_NotesSlide{}
	_bfdd.CSld = NewCT_CommonSlideData()
	return _bfdd
}
func (_bceea *CT_HandoutMaster) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bceea.CSld = NewCT_CommonSlideData()
	_bceea.ClrMap = _c.NewCT_ColorMapping()
_beacd:
	for {
		_efgea, _eeba := d.Token()
		if _eeba != nil {
			return _eeba
		}
		switch _egdf := _efgea.(type) {
		case _d.StartElement:
			switch _egdf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ddec := d.DecodeElement(_bceea.CSld, &_egdf); _ddec != nil {
					return _ddec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _egbda := d.DecodeElement(_bceea.ClrMap, &_egdf); _egbda != nil {
					return _egbda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_bceea.Hf = NewCT_HeaderFooter()
				if _baaa := d.DecodeElement(_bceea.Hf, &_egdf); _baaa != nil {
					return _baaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bceea.ExtLst = NewCT_ExtensionListModify()
				if _cgba := d.DecodeElement(_bceea.ExtLst, &_egdf); _cgba != nil {
					return _cgba
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0020\u0025v", _egdf.Name)
				if _ggbd := d.Skip(); _ggbd != nil {
					return _ggbd
				}
			}
		case _d.EndElement:
			break _beacd
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTimeCondition and its children, prefixing error messages with path
func (_bbbfd *CT_TLTimeCondition) ValidateWithPath(path string) error {
	if _gadbe := _bbbfd.EvtAttr.ValidateWithPath(path + "\u002f\u0045\u0076\u0074\u0041\u0074\u0074\u0072"); _gadbe != nil {
		return _gadbe
	}
	if _bbbfd.DelayAttr != nil {
		if _ecaeb := _bbbfd.DelayAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u006c\u0061\u0079\u0041\u0074\u0074\u0072"); _ecaeb != nil {
			return _ecaeb
		}
	}
	if _bbbfd.TgtEl != nil {
		if _ebcga := _bbbfd.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _ebcga != nil {
			return _ebcga
		}
	}
	if _bbbfd.Tn != nil {
		if _ebbede := _bbbfd.Tn.ValidateWithPath(path + "\u002f\u0054\u006e"); _ebbede != nil {
			return _ebbede
		}
	}
	if _bbbfd.Rtn != nil {
		if _eeded := _bbbfd.Rtn.ValidateWithPath(path + "\u002f\u0052\u0074\u006e"); _eeded != nil {
			return _eeded
		}
	}
	return nil
}
func (_gagea *CT_TLTimeNodeExclusive) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_bafbd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_gagea.CTn, _bafbd)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_SlideViewProperties() *CT_SlideViewProperties {
	_ddgdf := &CT_SlideViewProperties{}
	_ddgdf.CSldViewPr = NewCT_CommonSlideViewProperties()
	return _ddgdf
}
func (_cfgce *CT_NotesViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cfgce.CSldViewPr = NewCT_CommonSlideViewProperties()
_fcabc:
	for {
		_cfegb, _cbceb := d.Token()
		if _cbceb != nil {
			return _cbceb
		}
		switch _babac := _cfegb.(type) {
		case _d.StartElement:
			switch _babac.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}:
				if _gbfe := d.DecodeElement(_cfgce.CSldViewPr, &_babac); _gbfe != nil {
					return _gbfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfgce.ExtLst = NewCT_ExtensionList()
				if _baedc := d.DecodeElement(_cfgce.ExtLst, &_babac); _baedc != nil {
					return _baedc
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004e\u006f\u0074\u0065s\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _babac.Name)
				if _bgee := d.Skip(); _bgee != nil {
					return _bgee
				}
			}
		case _d.EndElement:
			break _fcabc
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLAnimVariantBooleanVal struct {

	// Value
	ValAttr bool
}

func (_dedeg ST_ViewType) Validate() error { return _dedeg.ValidateWithPath("") }

// ValidateWithPath validates the CT_GroupShape and its children, prefixing error messages with path
func (_fgece *CT_GroupShape) ValidateWithPath(path string) error {
	if _bab := _fgece.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _bab != nil {
		return _bab
	}
	if _feee := _fgece.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _feee != nil {
		return _feee
	}
	for _gcf, _fbg := range _fgece.Choice {
		if _bfeg := _fbg.ValidateWithPath(_b.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _gcf)); _bfeg != nil {
			return _bfeg
		}
	}
	if _fgece.ExtLst != nil {
		if _egca := _fgece.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egca != nil {
			return _egca
		}
	}
	return nil
}

const (
	ST_TLAnimateBehaviorValueTypeUnset ST_TLAnimateBehaviorValueType = 0
	ST_TLAnimateBehaviorValueTypeStr   ST_TLAnimateBehaviorValueType = 1
	ST_TLAnimateBehaviorValueTypeNum   ST_TLAnimateBehaviorValueType = 2
	ST_TLAnimateBehaviorValueTypeClr   ST_TLAnimateBehaviorValueType = 3
)

func (_fbefb ST_TLAnimateMotionPathEditMode) Validate() error { return _fbefb.ValidateWithPath("") }

// ValidateWithPath validates the CT_TransitionSoundAction and its children, prefixing error messages with path
func (_bacccf *CT_TransitionSoundAction) ValidateWithPath(path string) error {
	if _bacccf.StSnd != nil {
		if _dcdgb := _bacccf.StSnd.ValidateWithPath(path + "\u002f\u0053\u0074\u0053\u006e\u0064"); _dcdgb != nil {
			return _dcdgb
		}
	}
	if _bacccf.EndSnd != nil {
		if _gaffd := _bacccf.EndSnd.ValidateWithPath(path + "\u002fE\u006e\u0064\u0053\u006e\u0064"); _gaffd != nil {
			return _gaffd
		}
	}
	return nil
}
func (_dbbf *CT_StringTag) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gbef := range start.Attr {
		if _gbef.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dafdf, _fcfb := _gbef.Value, error(nil)
			if _fcfb != nil {
				return _fcfb
			}
			_dbbf.NameAttr = _dafdf
			continue
		}
		if _gbef.Name.Local == "\u0076\u0061\u006c" {
			_dbad, _defgd := _gbef.Value, error(nil)
			if _defgd != nil {
				return _defgd
			}
			_dbbf.ValAttr = _dbad
			continue
		}
	}
	for {
		_eacae, _gfegg := d.Token()
		if _gfegg != nil {
			return _b.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0074r\u0069\u006e\u0067\u0054\u0061\u0067\u003a\u0020\u0025\u0073", _gfegg)
		}
		if _dafbe, _bbdb := _eacae.(_d.EndElement); _bbdb && _dafbe.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TLBuildDiagram and its children
func (_ecccc *CT_TLBuildDiagram) Validate() error {
	return _ecccc.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069a\u0067\u0072\u0061\u006d")
}
func NewCT_TLPoint() *CT_TLPoint { _feefae := &CT_TLPoint{}; return _feefae }
func (_fbefa ST_TLBehaviorAdditiveType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fbefa.String(), start)
}
func NewAG_TLBuild() *AG_TLBuild { _fcb := &AG_TLBuild{}; return _fcb }

// ValidateWithPath validates the CT_Control and its children, prefixing error messages with path
func (_afbg *CT_Control) ValidateWithPath(path string) error {
	if _afbg.ExtLst != nil {
		if _fedb := _afbg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fedb != nil {
			return _fedb
		}
	}
	if _afbg.Pic != nil {
		if _befeg := _afbg.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _befeg != nil {
			return _befeg
		}
	}
	if _afbg.ImgWAttr != nil {
		if *_afbg.ImgWAttr < 0 {
			return _b.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_afbg.ImgWAttr)
		}
	}
	if _afbg.ImgHAttr != nil {
		if *_afbg.ImgHAttr < 0 {
			return _b.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_afbg.ImgHAttr)
		}
	}
	return nil
}
func (_dgfeb ST_TLTimeNodeSyncType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dgfeb.String(), start)
}
func (_bcff *CT_WebProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fdccg := range start.Attr {
		if _fdccg.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e" {
			_gbdda, _afbfb := _ag.ParseBool(_fdccg.Value)
			if _afbfb != nil {
				return _afbfb
			}
			_bcff.ShowAnimationAttr = &_gbdda
			continue
		}
		if _fdccg.Name.Local == "\u0072\u0065\u0073\u0069\u007a\u0065\u0047\u0072\u0061p\u0068\u0069\u0063\u0073" {
			_cbfeg, _fedab := _ag.ParseBool(_fdccg.Value)
			if _fedab != nil {
				return _fedab
			}
			_bcff.ResizeGraphicsAttr = &_cbfeg
			continue
		}
		if _fdccg.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067" {
			_beedg, _gebgg := _ag.ParseBool(_fdccg.Value)
			if _gebgg != nil {
				return _gebgg
			}
			_bcff.AllowPngAttr = &_beedg
			continue
		}
		if _fdccg.Name.Local == "\u0072e\u006c\u0079\u004f\u006e\u0056\u006dl" {
			_dabf, _gceag := _ag.ParseBool(_fdccg.Value)
			if _gceag != nil {
				return _gceag
			}
			_bcff.RelyOnVmlAttr = &_dabf
			continue
		}
		if _fdccg.Name.Local == "\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0065\u0049\u006e\u0046\u006fl\u0064\u0065\u0072\u0073" {
			_bacgd, _ffebd := _ag.ParseBool(_fdccg.Value)
			if _ffebd != nil {
				return _ffebd
			}
			_bcff.OrganizeInFoldersAttr = &_bacgd
			continue
		}
		if _fdccg.Name.Local == "\u0075\u0073e\u004c\u006f\u006eg\u0046\u0069\u006c\u0065\u006e\u0061\u006d\u0065\u0073" {
			_ebfb, _fcegg := _ag.ParseBool(_fdccg.Value)
			if _fcegg != nil {
				return _fcegg
			}
			_bcff.UseLongFilenamesAttr = &_ebfb
			continue
		}
		if _fdccg.Name.Local == "\u0069\u006d\u0067S\u007a" {
			_bcff.ImgSzAttr.UnmarshalXMLAttr(_fdccg)
			continue
		}
		if _fdccg.Name.Local == "\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067" {
			_ecbb, _ffabb := _fdccg.Value, error(nil)
			if _ffabb != nil {
				return _ffabb
			}
			_bcff.EncodingAttr = &_ecbb
			continue
		}
		if _fdccg.Name.Local == "\u0063\u006c\u0072" {
			_bcff.ClrAttr.UnmarshalXMLAttr(_fdccg)
			continue
		}
	}
_ggcc:
	for {
		_bgefb, _adgeg := d.Token()
		if _adgeg != nil {
			return _adgeg
		}
		switch _gfcgb := _bgefb.(type) {
		case _d.StartElement:
			switch _gfcgb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcff.ExtLst = NewCT_ExtensionList()
				if _bcbgc := d.DecodeElement(_bcff.ExtLst, &_gfcgb); _bcbgc != nil {
					return _bcbgc
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025v", _gfcgb.Name)
				if _fdag := d.Skip(); _fdag != nil {
					return _fdag
				}
			}
		case _d.EndElement:
			break _ggcc
		case _d.CharData:
		}
	}
	return nil
}
func (_gbgce *CT_TLBuildParagraph) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gbgce.BuildAttr != ST_TLParaBuildTypeUnset {
		_gdggcg, _eacga := _gbgce.BuildAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u0075\u0069l\u0064"})
		if _eacga != nil {
			return _eacga
		}
		start.Attr = append(start.Attr, _gdggcg)
	}
	if _gbgce.BldLvlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u006c\u0064\u004c\u0076\u006c"}, Value: _b.Sprintf("\u0025\u0076", *_gbgce.BldLvlAttr)})
	}
	if _gbgce.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gbgce.AnimBgAttr))})
	}
	if _gbgce.AutoUpdateAnimBgAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0075t\u006f\u0055\u0070d\u0061\u0074\u0065\u0041\u006e\u0069\u006d\u0042\u0067"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gbgce.AutoUpdateAnimBgAttr))})
	}
	if _gbgce.RevAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0065\u0076"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gbgce.RevAttr))})
	}
	if _gbgce.AdvAutoAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061d\u0076\u0041\u0075\u0074\u006f"}, Value: _b.Sprintf("\u0025\u0076", *_gbgce.AdvAutoAttr)})
	}
	if _gbgce.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_gbgce.SpidAttr)})
	}
	if _gbgce.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _b.Sprintf("\u0025\u0076", *_gbgce.GrpIdAttr)})
	}
	if _gbgce.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _b.Sprintf("\u0025\u0064", _cdcbd(*_gbgce.UiExpandAttr))})
	}
	e.EncodeToken(start)
	if _gbgce.TmplLst != nil {
		_gffc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u006d\u0070\u006c\u004c\u0073t"}}
		e.EncodeElement(_gbgce.TmplLst, _gffc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Guide and its children
func (_aed *CT_Guide) Validate() error {
	return _aed.ValidateWithPath("\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u0065")
}
func (_cefce *CT_TLTimeAnimateValue) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cefce.TmAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u006d"}, Value: _b.Sprintf("\u0025\u0076", *_cefce.TmAttr)})
	}
	if _cefce.FmlaAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006d\u006c\u0061"}, Value: _b.Sprintf("\u0025\u0076", *_cefce.FmlaAttr)})
	}
	e.EncodeToken(start)
	if _cefce.Val != nil {
		_aafc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0076a\u006c"}}
		e.EncodeElement(_cefce.Val, _aafc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dcaafa *CT_TLAnimateMotionBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dcaafa.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _ddgfb := range start.Attr {
		if _ddgfb.Name.Local == "\u006f\u0072\u0069\u0067\u0069\u006e" {
			_dcaafa.OriginAttr.UnmarshalXMLAttr(_ddgfb)
			continue
		}
		if _ddgfb.Name.Local == "\u0070\u0061\u0074\u0068" {
			_dfecc, _fage := _ddgfb.Value, error(nil)
			if _fage != nil {
				return _fage
			}
			_dcaafa.PathAttr = &_dfecc
			continue
		}
		if _ddgfb.Name.Local == "\u0070\u0061\u0074h\u0045\u0064\u0069\u0074\u004d\u006f\u0064\u0065" {
			_dcaafa.PathEditModeAttr.UnmarshalXMLAttr(_ddgfb)
			continue
		}
		if _ddgfb.Name.Local == "\u0072\u0041\u006e\u0067" {
			_aced, _egge := _ag.ParseInt(_ddgfb.Value, 10, 32)
			if _egge != nil {
				return _egge
			}
			_cfabcb := int32(_aced)
			_dcaafa.RAngAttr = &_cfabcb
			continue
		}
		if _ddgfb.Name.Local == "\u0070\u0074\u0073\u0054\u0079\u0070\u0065\u0073" {
			_ebcd, _edef := _ddgfb.Value, error(nil)
			if _edef != nil {
				return _edef
			}
			_dcaafa.PtsTypesAttr = &_ebcd
			continue
		}
	}
_ggfaa:
	for {
		_dcbd, _fbgb := d.Token()
		if _fbgb != nil {
			return _fbgb
		}
		switch _dddc := _dcbd.(type) {
		case _d.StartElement:
			switch _dddc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _befca := d.DecodeElement(_dcaafa.CBhvr, &_dddc); _befca != nil {
					return _befca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_dcaafa.By = NewCT_TLPoint()
				if _fgccf := d.DecodeElement(_dcaafa.By, &_dddc); _fgccf != nil {
					return _fgccf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_dcaafa.From = NewCT_TLPoint()
				if _bede := d.DecodeElement(_dcaafa.From, &_dddc); _bede != nil {
					return _bede
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_dcaafa.To = NewCT_TLPoint()
				if _dcdg := d.DecodeElement(_dcaafa.To, &_dddc); _dcdg != nil {
					return _dcdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0043\u0074\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0043\u0074\u0072"}:
				_dcaafa.RCtr = NewCT_TLPoint()
				if _cdff := d.DecodeElement(_dcaafa.RCtr, &_dddc); _cdff != nil {
					return _cdff
				}
			default:
				_be.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u004cA\u006e\u0069\u006d\u0061\u0074\u0065\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _dddc.Name)
				if _aefe := d.Skip(); _aefe != nil {
					return _aefe
				}
			}
		case _d.EndElement:
			break _ggfaa
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_NotesMasterIdListEntry() *CT_NotesMasterIdListEntry {
	_caffd := &CT_NotesMasterIdListEntry{}
	return _caffd
}
func (_dedfa ST_PhotoAlbumLayout) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dedfa.String(), start)
}
func (_bced *CT_EightDirectionTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _geed := range start.Attr {
		if _geed.Name.Local == "\u0064\u0069\u0072" {
			_gacd, _eeb := ParseUnionST_TransitionEightDirectionType(_geed.Value)
			if _eeb != nil {
				return _eeb
			}
			_bced.DirAttr = &_gacd
			continue
		}
	}
	for {
		_bda, _ggfd := d.Token()
		if _ggfd != nil {
			return _b.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0069g\u0068\u0074\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006fn\u003a\u0020\u0025\u0073", _ggfd)
		}
		if _aggd, _dca := _bda.(_d.EndElement); _dca && _aggd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OleObject and its children, prefixing error messages with path
func (_fcee *CT_OleObject) ValidateWithPath(path string) error {
	if _dfbc := _fcee.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _dfbc != nil {
		return _dfbc
	}
	if _fcee.Pic != nil {
		if _aefd := _fcee.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _aefd != nil {
			return _aefd
		}
	}
	if _fcee.ImgWAttr != nil {
		if *_fcee.ImgWAttr < 0 {
			return _b.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fcee.ImgWAttr)
		}
	}
	if _fcee.ImgHAttr != nil {
		if *_fcee.ImgHAttr < 0 {
			return _b.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fcee.ImgHAttr)
		}
	}
	return nil
}
func NewCT_WheelTransition() *CT_WheelTransition { _fggecc := &CT_WheelTransition{}; return _fggecc }

type CT_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func (_caaae *ST_TLTriggerRuntimeNode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cefba, _daecd := d.Token()
	if _daecd != nil {
		return _daecd
	}
	if _cdeec, _gcecg := _cefba.(_d.EndElement); _gcecg && _cdeec.Name == start.Name {
		*_caaae = 1
		return nil
	}
	if _ggdgd, _gcbad := _cefba.(_d.CharData); !_gcbad {
		return _b.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cefba)
	} else {
		switch string(_ggdgd) {
		case "":
			*_caaae = 0
		case "\u0066\u0069\u0072s\u0074":
			*_caaae = 1
		case "\u006c\u0061\u0073\u0074":
			*_caaae = 2
		case "\u0061\u006c\u006c":
			*_caaae = 3
		}
	}
	_cefba, _daecd = d.Token()
	if _daecd != nil {
		return _daecd
	}
	if _gbaed, _gddgd := _cefba.(_d.EndElement); _gddgd && _gbaed.Name == start.Name {
		return nil
	}
	return _b.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cefba)
}
func NewCT_GroupShapeNonVisual() *CT_GroupShapeNonVisual {
	_feed := &CT_GroupShapeNonVisual{}
	_feed.CNvPr = _c.NewCT_NonVisualDrawingProps()
	_feed.CNvGrpSpPr = _c.NewCT_NonVisualGroupDrawingShapeProps()
	_feed.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _feed
}
func (_aacd *CT_EmbeddedFontListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aacd.Font = _c.NewCT_TextFont()
_cbaf:
	for {
		_cafae, _bcee := d.Token()
		if _bcee != nil {
			return _bcee
		}
		switch _ada := _cafae.(type) {
		case _d.StartElement:
			switch _ada.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				if _adf := d.DecodeElement(_aacd.Font, &_ada); _adf != nil {
					return _adf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072e\u0067\u0075\u006c\u0061\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0067\u0075\u006c\u0061\u0072"}:
				_aacd.Regular = NewCT_EmbeddedFontDataId()
				if _daaf := d.DecodeElement(_aacd.Regular, &_ada); _daaf != nil {
					return _daaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006f\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u006c\u0064"}:
				_aacd.Bold = NewCT_EmbeddedFontDataId()
				if _bffg := d.DecodeElement(_aacd.Bold, &_ada); _bffg != nil {
					return _bffg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u0074\u0061\u006c\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0061\u006c\u0069\u0063"}:
				_aacd.Italic = NewCT_EmbeddedFontDataId()
				if _aee := d.DecodeElement(_aacd.Italic, &_ada); _aee != nil {
					return _aee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}:
				_aacd.BoldItalic = NewCT_EmbeddedFontDataId()
				if _fbaf := d.DecodeElement(_aacd.BoldItalic, &_ada); _fbaf != nil {
					return _fbaf
				}
			default:
				_be.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074E\u006e\u0074\u0072\u0079\u0020%\u0076", _ada.Name)
				if _afg := d.Skip(); _afg != nil {
					return _afg
				}
			}
		case _d.EndElement:
			break _cbaf
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideSyncProperties and its children
func (_acdf *CT_SlideSyncProperties) Validate() error {
	return _acdf.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}
func init() {
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e", NewCT_SideDirectionTransition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043o\u0072\u006e\u0065\u0072\u0044\u0069\u0072\u0065\u0063\u0074i\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e", NewCT_CornerDirectionTransition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0045\u0069\u0067\u0068t\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006es\u0069t\u0069\u006f\u006e", NewCT_EightDirectionTransition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e", NewCT_OrientationTransition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fI\u006e\u004f\u0075\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_InOutTransition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006cB\u006c\u0061\u0063\u006b\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e", NewCT_OptionalBlackTransition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fS\u0070\u006c\u0069\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_SplitTransition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fW\u0068\u0065\u0065\u006c\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_WheelTransition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074\u0061\u0072\u0074\u0053\u006f\u0075\u006e\u0064\u0041\u0063ti\u006f\u006e", NewCT_TransitionStartSoundAction)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006eS\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e", NewCT_TransitionSoundAction)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fS\u006c\u0069\u0064\u0065\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_SlideTransition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049n\u0074\u0065\u0072\u0076\u0061\u006c\u0054\u0069\u006d\u0065", NewCT_TLIterateIntervalTime)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061t\u0065\u0049\u006e\u0074\u0065\u0072\u0076a\u006c\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_TLIterateIntervalPercentage)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0049t\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061", NewCT_TLIterateData)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u0053\u0075\u0062\u0053\u0068\u0061\u0070\u0065\u0049\u0064", NewCT_TLSubShapeId)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_TLTextTargetElement)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061r\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074", NewCT_TLOleChartTargetElement)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_TLShapeTargetElement)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_TLTimeTargetElement)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0072\u0069\u0067\u0067\u0065\u0072\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065I\u0044", NewCT_TLTriggerTimeNodeID)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0054\u0072\u0069\u0067\u0067\u0065\u0072\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065", NewCT_TLTriggerRuntimeNode)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u0054\u0069\u006d\u0065C\u006f\u006ed\u0069\u0074\u0069\u006f\u006e", NewCT_TLTimeCondition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069s\u0074", NewCT_TLTimeConditionList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_TimeNodeList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061", NewCT_TLCommonTimeNodeData)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0050a\u0072\u0061\u006c\u006c\u0065\u006c", NewCT_TLTimeNodeParallel)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0053e\u0071\u0075\u0065\u006e\u0063\u0065", NewCT_TLTimeNodeSequence)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069v\u0065", NewCT_TLTimeNodeExclusive)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076i\u006f\u0072\u0041\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u004e\u0061\u006d\u0065\u004c\u0069\u0073\u0074", NewCT_TLBehaviorAttributeNameList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0044\u0061\u0074\u0061", NewCT_TLCommonBehaviorData)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0042\u006f\u006f\u006c\u0065\u0061n\u0056\u0061\u006c", NewCT_TLAnimVariantBooleanVal)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0049\u006e\u0074\u0065\u0067\u0065r\u0056\u0061\u006c", NewCT_TLAnimVariantIntegerVal)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c", NewCT_TLAnimVariantFloatVal)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072i\u0061n\u0074S\u0074\u0072\u0069\u006e\u0067\u0056\u0061l", NewCT_TLAnimVariantStringVal)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074", NewCT_TLAnimVariant)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u0041\u006e\u0069\u006d\u0061t\u0065\u0056\u0061\u006c\u0075\u0065", NewCT_TLTimeAnimateValue)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0054i\u006d\u0065\u0041\u006e\u0069m\u0061t\u0065V\u0061\u006c\u0075\u0065\u004c\u0069\u0073t", NewCT_TLTimeAnimateValueList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0042\u0065\u0068\u0061vi\u006f\u0072", NewCT_TLAnimateBehavior)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0042\u0079\u0052\u0067\u0062\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_TLByRgbColorTransform)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0042\u0079\u0048\u0073\u006c\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_TLByHslColorTransform)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054L\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043o\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d", NewCT_TLByAnimateColorTransform)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0042\u0065\u0068\u0061\u0076\u0069\u006fr", NewCT_TLAnimateColorBehavior)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061v\u0069\u006f\u0072", NewCT_TLAnimateEffectBehavior)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074", NewCT_TLPoint)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061v\u0069\u006f\u0072", NewCT_TLAnimateMotionBehavior)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054L\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074a\u0074i\u006f\u006e\u0042\u0065\u0068\u0061\u0076i\u006f\u0072", NewCT_TLAnimateRotationBehavior)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065S\u0063a\u006ce\u0042\u0065\u0068\u0061\u0076\u0069\u006fr", NewCT_TLAnimateScaleBehavior)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006ed\u0042\u0065\u0068\u0061vi\u006f\u0072", NewCT_TLCommandBehavior)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0053e\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072", NewCT_TLSetBehavior)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065d\u0069\u0061\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061", NewCT_TLCommonMediaNodeData)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0041\u0075\u0064\u0069\u006f", NewCT_TLMediaNodeAudio)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0056\u0069\u0064\u0065\u006f", NewCT_TLMediaNodeVideo)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065", NewCT_TLTemplate)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u004c\u0069\u0073\u0074", NewCT_TLTemplateList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LB\u0075\u0069\u006c\u0064\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068", NewCT_TLBuildParagraph)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069a\u0067\u0072\u0061\u006d", NewCT_TLBuildDiagram)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u004f\u006c\u0065\u0042u\u0069\u006cd\u0043\u0068\u0061\u0072\u0074", NewCT_TLOleBuildChart)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0047r\u0061\u0070\u0068\u0069\u0063a\u006cO\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006cd", NewCT_TLGraphicalObjectBuild)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fB\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074", NewCT_BuildList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054i\u006d\u0069\u006e\u0067", NewCT_SlideTiming)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079", NewCT_Empty)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0052\u0061\u006e\u0067\u0065", NewCT_IndexRange)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045nt\u0072\u0079", NewCT_SlideRelationshipListEntry)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074", NewCT_SlideRelationshipList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u0049\u0064", NewCT_CustomShowId)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061", NewCT_CustomerData)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061", NewCT_TagsData)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061\u004c\u0069\u0073\u0074", NewCT_CustomerDataList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_Extension)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewCT_ExtensionList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069f\u0079", NewCT_ExtensionListModify)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0043\u006f\u006dm\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072", NewCT_CommentAuthor)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041u\u0074\u0068\u006f\u0072Li\u0073\u0074", NewCT_CommentAuthorList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074", NewCT_Comment)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074", NewCT_CommentList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074E\u006d\u0062\u0065\u0064", NewCT_OleObjectEmbed)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b", NewCT_OleObjectLink)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_OleObject)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c", NewCT_Control)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006fl\u004c\u0069\u0073\u0074", NewCT_ControlList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079", NewCT_SlideIdListEntry)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049d\u004c\u0069\u0073\u0074", NewCT_SlideIdList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069d\u0065\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_SlideMasterIdListEntry)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074", NewCT_SlideMasterIdList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004e\u006f\u0074e\u0073\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_NotesMasterIdListEntry)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074", NewCT_NotesMasterIdList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049d\u004c\u0069\u0073t\u0045n\u0074\u0072\u0079", NewCT_HandoutMasterIdListEntry)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0048an\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074", NewCT_HandoutMasterIdList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0045\u006dbe\u0064d\u0065\u0064\u0046\u006f\u006et\u0044\u0061\u0074\u0061\u0049\u0064", NewCT_EmbeddedFontDataId)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079", NewCT_EmbeddedFontListEntry)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074", NewCT_EmbeddedFontList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_SmartTags)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077", NewCT_CustomShow)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006fw\u004c\u0069\u0073\u0074", NewCT_CustomShowList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d", NewCT_PhotoAlbum)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u006c\u0069\u0064\u0065\u0053\u0069\u007a\u0065", NewCT_SlideSize)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075", NewCT_Kinsoku)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072", NewCT_ModifyVerifier)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e", NewCT_Presentation)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073h\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_HtmlPublishProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0057\u0065\u0062P\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_WebProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fP\u0072\u0069\u006e\u0074\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_PrintProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042r\u006f\u0077\u0073\u0065", NewCT_ShowInfoBrowse)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0053\u0068\u006fw\u0049\u006e\u0066\u006f\u004b\u0069\u006f\u0073\u006b", NewCT_ShowInfoKiosk)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_ShowProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074i\u006fn\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s", NewCT_PresentationProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072", NewCT_HeaderFooter)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068o\u006c\u0064\u0065\u0072", NewCT_Placeholder)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0041\u0070\u0070\u006ci\u0063\u0061\u0074\u0069\u006f\u006eN\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006fp\u0073", NewCT_ApplicationNonVisualDrawingProps)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c", NewCT_ShapeNonVisual)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065", NewCT_Shape)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_ConnectorNonVisual)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_Connector)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GraphicalObjectFrameNonVisual)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065", NewCT_GraphicalObjectFrame)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c", NewCT_GroupShapeNonVisual)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065", NewCT_GroupShape)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u006c", NewCT_Rel)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_BackgroundProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064", NewCT_Background)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u006f\u006d\u006d\u006f\u006eS\u006c\u0069d\u0065\u0044\u0061\u0074\u0061", NewCT_CommonSlideData)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065", NewCT_Slide)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004ca\u0079\u006f\u0075\u0074", NewCT_SlideLayout)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065r\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_SlideMasterTextStyles)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069d\u0065\u004c\u0061\u0079\u006fu\u0074I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_SlideLayoutIdListEntry)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075\u0074\u0049\u0064Li\u0073\u0074", NewCT_SlideLayoutIdList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004da\u0073\u0074\u0065\u0072", NewCT_SlideMaster)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0048\u0061\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072", NewCT_HandoutMaster)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004da\u0073\u0074\u0065\u0072", NewCT_NotesMaster)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065", NewCT_NotesSlide)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_SlideSyncProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u0074\u0072\u0069\u006e\u0067\u0054\u0061\u0067", NewCT_StringTag)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0067\u004c\u0069\u0073\u0074", NewCT_TagList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069e\u0077\u0050\u006f\u0072ti\u006f\u006e", NewCT_NormalViewPortion)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fNo\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NormalViewProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fCo\u006d\u006d\u006f\u006e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_CommonViewProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0054\u0065\u0078t\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_NotesTextViewProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0053\u006c\u0069\u0064\u0065\u0045\u006e\u0074\u0072\u0079", NewCT_OutlineViewSlideEntry)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fOu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0053\u006c\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_OutlineViewSlideList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_OutlineViewProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053l\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073", NewCT_SlideSorterViewProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u0065", NewCT_Guide)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fG\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_GuideList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043o\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073", NewCT_CommonSlideViewProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_SlideViewProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004eot\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_NotesViewProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_ViewProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "c\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074", NewCmAuthorLst)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0063\u006d\u004cs\u0074", NewCmLst)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u006f\u006c\u0065\u004f\u0062\u006a", NewOleObj)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0070\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e", NewPresentation)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u0050\u0072", NewPresentationPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073\u006c\u0064", NewSld)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u004c\u0061\u0079\u006f\u0075t", NewSldLayout)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u004d\u0061\u0073\u0074\u0065r", NewSldMaster)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0068\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072", NewHandoutMaster)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "n\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072", NewNotesMaster)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u006e\u006f\u0074e\u0073", NewNotes)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u0053\u0079\u006e\u0063\u0050r", NewSldSyncPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0074\u0061\u0067\u004c\u0073\u0074", NewTagLst)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0076\u0069\u0065\u0077\u0050\u0072", NewViewPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045G\u005fS\u006c\u0069\u0064\u0065\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065", NewEG_SlideListChoice)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewEG_ExtensionList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "E\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065", NewEG_ShowType)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047_\u0054\u006f\u0070L\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065", NewEG_TopLevelSlide)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065", NewEG_ChildSlide)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064", NewEG_Background)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064", NewAG_TLBuild)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u004f\u006c\u0065", NewAG_Ole)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065", NewAG_ChildSlide)
}
