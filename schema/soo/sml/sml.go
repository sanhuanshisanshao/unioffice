//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package sml

import (
	_a "encoding/xml"
	_fc "fmt"
	_fca "github.com/sanhuanshisanshao/unioffice"
	_ee "github.com/sanhuanshisanshao/unioffice/common/logger"
	_af "github.com/sanhuanshisanshao/unioffice/schema/soo/dml/spreadsheetDrawing"
	_ae "github.com/sanhuanshisanshao/unioffice/schema/soo/ofc/sharedTypes"
	_f "strconv"
	_e "strings"
	_cd "time"
)

func (_dcbfc ST_VolValueType) Validate() error { return _dcbfc.ValidateWithPath("") }

type CT_Controls struct {

	// Embedded Control
	Control []*CT_Control
}
type CT_ExternalLink struct {
	Choice *CT_ExternalLinkChoice
	ExtLst *CT_ExtensionList
}
type CT_DdeLink struct {

	// Service name
	DdeServiceAttr string

	// Topic for DDE server
	DdeTopicAttr string

	// DDE Items Collection
	DdeItems *CT_DdeItems
}
type CT_PivotAreaReferences struct {

	// Pivot Filter Count
	CountAttr *uint32

	// Reference
	Reference []*CT_PivotAreaReference
}

// ValidateWithPath validates the CT_Rst and its children, prefixing error messages with path
func (_fbgec *CT_Rst) ValidateWithPath(path string) error {
	for _eaadc, _gafdg := range _fbgec.R {
		if _dccgac := _gafdg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u005b\u0025\u0064\u005d", path, _eaadc)); _dccgac != nil {
			return _dccgac
		}
	}
	for _fgdbe, _ccdfb := range _fbgec.RPh {
		if _egeea := _ccdfb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u0050\u0068\u005b\u0025\u0064\u005d", path, _fgdbe)); _egeea != nil {
			return _egeea
		}
	}
	if _fbgec.PhoneticPr != nil {
		if _ffbba := _fbgec.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _ffbba != nil {
			return _ffbba
		}
	}
	return nil
}
func (_dfdef ST_SortType) ValidateWithPath(path string) error {
	switch _dfdef {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfdef))
	}
	return nil
}

// Validate validates the Dialogsheet and its children
func (_fbeffe *Dialogsheet) Validate() error {
	return _fbeffe.ValidateWithPath("D\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074")
}
func (_cgbaa *CT_PivotHierarchy) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ceefc := range start.Attr {
		if _ceefc.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061" {
			_ecdef, _ecbbcg := _f.ParseBool(_ceefc.Value)
			if _ecbbcg != nil {
				return _ecbbcg
			}
			_cgbaa.DragToDataAttr = &_ecdef
			continue
		}
		if _ceefc.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_aagfgc, _gaffbc := _f.ParseBool(_ceefc.Value)
			if _gaffbc != nil {
				return _gaffbc
			}
			_cgbaa.OutlineAttr = &_aagfgc
			continue
		}
		if _ceefc.Name.Local == "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070" {
			_edbbg, _beadg := _f.ParseBool(_ceefc.Value)
			if _beadg != nil {
				return _beadg
			}
			_cgbaa.SubtotalTopAttr = &_edbbg
			continue
		}
		if _ceefc.Name.Local == "\u0073h\u006fw\u0049\u006e\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_gdacf, _dgbeb := _f.ParseBool(_ceefc.Value)
			if _dgbeb != nil {
				return _dgbeb
			}
			_cgbaa.ShowInFieldListAttr = &_gdacf
			continue
		}
		if _ceefc.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw" {
			_dddgb, _ccfba := _f.ParseBool(_ceefc.Value)
			if _ccfba != nil {
				return _ccfba
			}
			_cgbaa.DragToRowAttr = &_dddgb
			continue
		}
		if _ceefc.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl" {
			_bfcdfe, _gdada := _f.ParseBool(_ceefc.Value)
			if _gdada != nil {
				return _gdada
			}
			_cgbaa.DragToColAttr = &_bfcdfe
			continue
		}
		if _ceefc.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065" {
			_fecae, _ceeb := _f.ParseBool(_ceefc.Value)
			if _ceeb != nil {
				return _ceeb
			}
			_cgbaa.DragToPageAttr = &_fecae
			continue
		}
		if _ceefc.Name.Local == "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064" {
			_fadag, _adcega := _f.ParseBool(_ceefc.Value)
			if _adcega != nil {
				return _adcega
			}
			_cgbaa.MultipleItemSelectionAllowedAttr = &_fadag
			continue
		}
		if _ceefc.Name.Local == "\u0064r\u0061\u0067\u004f\u0066\u0066" {
			_abfee, _gfccb := _f.ParseBool(_ceefc.Value)
			if _gfccb != nil {
				return _gfccb
			}
			_cgbaa.DragOffAttr = &_abfee
			continue
		}
		if _ceefc.Name.Local == "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072" {
			_aceaf, _adegc := _f.ParseBool(_ceefc.Value)
			if _adegc != nil {
				return _adegc
			}
			_cgbaa.IncludeNewItemsInFilterAttr = &_aceaf
			continue
		}
		if _ceefc.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_eedga, _eaedd := _ceefc.Value, error(nil)
			if _eaedd != nil {
				return _eaedd
			}
			_cgbaa.CaptionAttr = &_eedga
			continue
		}
	}
_dbbeg:
	for {
		_gecgba, _fdddb := d.Token()
		if _fdddb != nil {
			return _fdddb
		}
		switch _eccaad := _gecgba.(type) {
		case _a.StartElement:
			switch _eccaad.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u0073"}:
				_cgbaa.Mps = NewCT_MemberProperties()
				if _gbfe := d.DecodeElement(_cgbaa.Mps, &_eccaad); _gbfe != nil {
					return _gbfe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u006d\u0062\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u006d\u0062\u0065\u0072\u0073"}:
				_gcead := NewCT_Members()
				if _cgdea := d.DecodeElement(_gcead, &_eccaad); _cgdea != nil {
					return _cgdea
				}
				_cgbaa.Members = append(_cgbaa.Members, _gcead)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgbaa.ExtLst = NewCT_ExtensionList()
				if _cffbeee := d.DecodeElement(_cgbaa.ExtLst, &_eccaad); _cffbeee != nil {
					return _cffbeee
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0020\u0025\u0076", _eccaad.Name)
				if _abcbbg := d.Skip(); _abcbbg != nil {
					return _abcbbg
				}
			}
		case _a.EndElement:
			break _dbbeg
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MemberProperties and its children
func (_bdbfg *CT_MemberProperties) Validate() error {
	return _bdbfg.ValidateWithPath("\u0043\u0054\u005f\u004dem\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_eecedb ST_IconSetType) String() string {
	switch _eecedb {
	case 0:
		return ""
	case 1:
		return "\u0033A\u0072\u0072\u006f\u0077\u0073"
	case 2:
		return "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 3:
		return "\u0033\u0046\u006c\u0061\u0067\u0073"
	case 4:
		return "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031"
	case 5:
		return "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032"
	case 6:
		return "\u0033\u0053\u0069\u0067\u006e\u0073"
	case 7:
		return "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073"
	case 8:
		return "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732"
	case 9:
		return "\u0034A\u0072\u0072\u006f\u0077\u0073"
	case 10:
		return "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 11:
		return "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b"
	case 12:
		return "\u0034R\u0061\u0074\u0069\u006e\u0067"
	case 13:
		return "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073"
	case 14:
		return "\u0035A\u0072\u0072\u006f\u0077\u0073"
	case 15:
		return "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 16:
		return "\u0035R\u0061\u0074\u0069\u006e\u0067"
	case 17:
		return "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s"
	}
	return ""
}
func (_gdddb *CT_FontName) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", _gdddb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_abdgaf ST_GradientType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_abdgaf.String(), start)
}

// ValidateWithPath validates the CT_FieldGroup and its children, prefixing error messages with path
func (_edefd *CT_FieldGroup) ValidateWithPath(path string) error {
	if _edefd.RangePr != nil {
		if _eeae := _edefd.RangePr.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0067\u0065\u0050\u0072"); _eeae != nil {
			return _eeae
		}
	}
	if _edefd.DiscretePr != nil {
		if _edcd := _edefd.DiscretePr.ValidateWithPath(path + "/\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"); _edcd != nil {
			return _edcd
		}
	}
	if _edefd.GroupItems != nil {
		if _bdagc := _edefd.GroupItems.ValidateWithPath(path + "/\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"); _bdagc != nil {
			return _bdagc
		}
	}
	return nil
}
func (_ebbee *CT_ChartsheetPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ebbee.PublishedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebbee.PublishedAttr))})
	}
	if _ebbee.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_ebbee.CodeNameAttr)})
	}
	e.EncodeToken(start)
	if _ebbee.TabColor != nil {
		_bgac := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_ebbee.TabColor, _bgac)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cbgdb *CT_CommentPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cbgdb.Anchor = NewCT_ObjectAnchor()
	for _, _aagbg := range start.Attr {
		if _aagbg.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_fabaf, _aefge := _aagbg.Value, error(nil)
			if _aefge != nil {
				return _aefge
			}
			_cbgdb.AltTextAttr = &_fabaf
			continue
		}
		if _aagbg.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_beaa, _fdegd := _f.ParseBool(_aagbg.Value)
			if _fdegd != nil {
				return _fdegd
			}
			_cbgdb.DefaultSizeAttr = &_beaa
			continue
		}
		if _aagbg.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_cffe, _bbfe := _f.ParseBool(_aagbg.Value)
			if _bbfe != nil {
				return _bbfe
			}
			_cbgdb.PrintAttr = &_cffe
			continue
		}
		if _aagbg.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_gegd, _fced := _f.ParseBool(_aagbg.Value)
			if _fced != nil {
				return _fced
			}
			_cbgdb.DisabledAttr = &_gegd
			continue
		}
		if _aagbg.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_dgdcb, _gdcb := _f.ParseBool(_aagbg.Value)
			if _gdcb != nil {
				return _gdcb
			}
			_cbgdb.AutoFillAttr = &_dgdcb
			continue
		}
		if _aagbg.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_eadd, _begb := _f.ParseBool(_aagbg.Value)
			if _begb != nil {
				return _begb
			}
			_cbgdb.AutoLineAttr = &_eadd
			continue
		}
		if _aagbg.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_dfgb, _eefaa := _f.ParseBool(_aagbg.Value)
			if _eefaa != nil {
				return _eefaa
			}
			_cbgdb.LockedAttr = &_dfgb
			continue
		}
		if _aagbg.Name.Local == "\u0074\u0065\u0078\u0074\u0048\u0041\u006c\u0069\u0067\u006e" {
			_cbgdb.TextHAlignAttr.UnmarshalXMLAttr(_aagbg)
			continue
		}
		if _aagbg.Name.Local == "\u0074\u0065\u0078\u0074\u0056\u0041\u006c\u0069\u0067\u006e" {
			_cbgdb.TextVAlignAttr.UnmarshalXMLAttr(_aagbg)
			continue
		}
		if _aagbg.Name.Local == "\u006c\u006f\u0063\u006b\u0054\u0065\u0078\u0074" {
			_fccg, _ggde := _f.ParseBool(_aagbg.Value)
			if _ggde != nil {
				return _ggde
			}
			_cbgdb.LockTextAttr = &_fccg
			continue
		}
		if _aagbg.Name.Local == "\u006au\u0073\u0074\u004c\u0061\u0073\u0074X" {
			_gffd, _aaca := _f.ParseBool(_aagbg.Value)
			if _aaca != nil {
				return _aaca
			}
			_cbgdb.JustLastXAttr = &_gffd
			continue
		}
		if _aagbg.Name.Local == "\u0061u\u0074\u006f\u0053\u0063\u0061\u006ce" {
			_bead, _agdge := _f.ParseBool(_aagbg.Value)
			if _agdge != nil {
				return _agdge
			}
			_cbgdb.AutoScaleAttr = &_bead
			continue
		}
	}
_cdfa:
	for {
		_ebead, _fgbgg := d.Token()
		if _fgbgg != nil {
			return _fgbgg
		}
		switch _dafd := _ebead.(type) {
		case _a.StartElement:
			switch _dafd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _bbdfc := d.DecodeElement(_cbgdb.Anchor, &_dafd); _bbdfc != nil {
					return _bbdfc
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006dm\u0065\u006e\u0074\u0050\u0072\u0020\u0025\u0076", _dafd.Name)
				if _gegdd := d.Skip(); _gegdd != nil {
					return _gegdd
				}
			}
		case _a.EndElement:
			break _cdfa
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_PivotFilterTypeUnset                     ST_PivotFilterType = 0
	ST_PivotFilterTypeUnknown                   ST_PivotFilterType = 1
	ST_PivotFilterTypeCount                     ST_PivotFilterType = 2
	ST_PivotFilterTypePercent                   ST_PivotFilterType = 3
	ST_PivotFilterTypeSum                       ST_PivotFilterType = 4
	ST_PivotFilterTypeCaptionEqual              ST_PivotFilterType = 5
	ST_PivotFilterTypeCaptionNotEqual           ST_PivotFilterType = 6
	ST_PivotFilterTypeCaptionBeginsWith         ST_PivotFilterType = 7
	ST_PivotFilterTypeCaptionNotBeginsWith      ST_PivotFilterType = 8
	ST_PivotFilterTypeCaptionEndsWith           ST_PivotFilterType = 9
	ST_PivotFilterTypeCaptionNotEndsWith        ST_PivotFilterType = 10
	ST_PivotFilterTypeCaptionContains           ST_PivotFilterType = 11
	ST_PivotFilterTypeCaptionNotContains        ST_PivotFilterType = 12
	ST_PivotFilterTypeCaptionGreaterThan        ST_PivotFilterType = 13
	ST_PivotFilterTypeCaptionGreaterThanOrEqual ST_PivotFilterType = 14
	ST_PivotFilterTypeCaptionLessThan           ST_PivotFilterType = 15
	ST_PivotFilterTypeCaptionLessThanOrEqual    ST_PivotFilterType = 16
	ST_PivotFilterTypeCaptionBetween            ST_PivotFilterType = 17
	ST_PivotFilterTypeCaptionNotBetween         ST_PivotFilterType = 18
	ST_PivotFilterTypeValueEqual                ST_PivotFilterType = 19
	ST_PivotFilterTypeValueNotEqual             ST_PivotFilterType = 20
	ST_PivotFilterTypeValueGreaterThan          ST_PivotFilterType = 21
	ST_PivotFilterTypeValueGreaterThanOrEqual   ST_PivotFilterType = 22
	ST_PivotFilterTypeValueLessThan             ST_PivotFilterType = 23
	ST_PivotFilterTypeValueLessThanOrEqual      ST_PivotFilterType = 24
	ST_PivotFilterTypeValueBetween              ST_PivotFilterType = 25
	ST_PivotFilterTypeValueNotBetween           ST_PivotFilterType = 26
	ST_PivotFilterTypeDateEqual                 ST_PivotFilterType = 27
	ST_PivotFilterTypeDateNotEqual              ST_PivotFilterType = 28
	ST_PivotFilterTypeDateOlderThan             ST_PivotFilterType = 29
	ST_PivotFilterTypeDateOlderThanOrEqual      ST_PivotFilterType = 30
	ST_PivotFilterTypeDateNewerThan             ST_PivotFilterType = 31
	ST_PivotFilterTypeDateNewerThanOrEqual      ST_PivotFilterType = 32
	ST_PivotFilterTypeDateBetween               ST_PivotFilterType = 33
	ST_PivotFilterTypeDateNotBetween            ST_PivotFilterType = 34
	ST_PivotFilterTypeTomorrow                  ST_PivotFilterType = 35
	ST_PivotFilterTypeToday                     ST_PivotFilterType = 36
	ST_PivotFilterTypeYesterday                 ST_PivotFilterType = 37
	ST_PivotFilterTypeNextWeek                  ST_PivotFilterType = 38
	ST_PivotFilterTypeThisWeek                  ST_PivotFilterType = 39
	ST_PivotFilterTypeLastWeek                  ST_PivotFilterType = 40
	ST_PivotFilterTypeNextMonth                 ST_PivotFilterType = 41
	ST_PivotFilterTypeThisMonth                 ST_PivotFilterType = 42
	ST_PivotFilterTypeLastMonth                 ST_PivotFilterType = 43
	ST_PivotFilterTypeNextQuarter               ST_PivotFilterType = 44
	ST_PivotFilterTypeThisQuarter               ST_PivotFilterType = 45
	ST_PivotFilterTypeLastQuarter               ST_PivotFilterType = 46
	ST_PivotFilterTypeNextYear                  ST_PivotFilterType = 47
	ST_PivotFilterTypeThisYear                  ST_PivotFilterType = 48
	ST_PivotFilterTypeLastYear                  ST_PivotFilterType = 49
	ST_PivotFilterTypeYearToDate                ST_PivotFilterType = 50
	ST_PivotFilterTypeQ1                        ST_PivotFilterType = 51
	ST_PivotFilterTypeQ2                        ST_PivotFilterType = 52
	ST_PivotFilterTypeQ3                        ST_PivotFilterType = 53
	ST_PivotFilterTypeQ4                        ST_PivotFilterType = 54
	ST_PivotFilterTypeM1                        ST_PivotFilterType = 55
	ST_PivotFilterTypeM2                        ST_PivotFilterType = 56
	ST_PivotFilterTypeM3                        ST_PivotFilterType = 57
	ST_PivotFilterTypeM4                        ST_PivotFilterType = 58
	ST_PivotFilterTypeM5                        ST_PivotFilterType = 59
	ST_PivotFilterTypeM6                        ST_PivotFilterType = 60
	ST_PivotFilterTypeM7                        ST_PivotFilterType = 61
	ST_PivotFilterTypeM8                        ST_PivotFilterType = 62
	ST_PivotFilterTypeM9                        ST_PivotFilterType = 63
	ST_PivotFilterTypeM10                       ST_PivotFilterType = 64
	ST_PivotFilterTypeM11                       ST_PivotFilterType = 65
	ST_PivotFilterTypeM12                       ST_PivotFilterType = 66
)

type CT_XmlColumnPr struct {

	// XML Map Id
	MapIdAttr uint32

	// XPath
	XpathAttr string

	// Denormalized
	DenormalizedAttr *bool

	// XML Data Type
	XmlDataTypeAttr string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ddbec *ST_SheetViewType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fadbd, _aaaag := d.Token()
	if _aaaag != nil {
		return _aaaag
	}
	if _dgeda, _bdgfd := _fadbd.(_a.EndElement); _bdgfd && _dgeda.Name == start.Name {
		*_ddbec = 1
		return nil
	}
	if _defg, _beeea := _fadbd.(_a.CharData); !_beeea {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fadbd)
	} else {
		switch string(_defg) {
		case "":
			*_ddbec = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_ddbec = 1
		case "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077":
			*_ddbec = 2
		case "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074":
			*_ddbec = 3
		}
	}
	_fadbd, _aaaag = d.Token()
	if _aaaag != nil {
		return _aaaag
	}
	if _bcabbge, _eceabc := _fadbd.(_a.EndElement); _eceabc && _bcabbge.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fadbd)
}
func (_egagc *CT_PivotAreas) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdced := range start.Attr {
		if _cdced.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eedad, _bdbfcd := _f.ParseUint(_cdced.Value, 10, 32)
			if _bdbfcd != nil {
				return _bdbfcd
			}
			_ggabg := uint32(_eedad)
			_egagc.CountAttr = &_ggabg
			continue
		}
	}
_aagede:
	for {
		_fgddab, _ceaef := d.Token()
		if _ceaef != nil {
			return _ceaef
		}
		switch _acedf := _fgddab.(type) {
		case _a.StartElement:
			switch _acedf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				_efdcf := NewCT_PivotArea()
				if _efedf := d.DecodeElement(_efdcf, &_acedf); _efedf != nil {
					return _efedf
				}
				_egagc.PivotArea = append(_egagc.PivotArea, _efdcf)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050i\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073 \u0025\u0076", _acedf.Name)
				if _gcdec := d.Skip(); _gcdec != nil {
					return _gcdec
				}
			}
		case _a.EndElement:
			break _aagede
		case _a.CharData:
		}
	}
	return nil
}
func (_ccfde ST_MdxFunctionType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ccfde.String(), start)
}
func (_cbacaa ST_TotalsRowFunction) String() string {
	switch _cbacaa {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0075\u006d"
	case 3:
		return "\u006d\u0069\u006e"
	case 4:
		return "\u006d\u0061\u0078"
	case 5:
		return "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case 6:
		return "\u0063\u006f\u0075n\u0074"
	case 7:
		return "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case 8:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 9:
		return "\u0076\u0061\u0072"
	case 10:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return ""
}

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_eeaf *CT_ExtensionList) ValidateWithPath(path string) error {
	for _bcggd, _dfcab := range _eeaf.Ext {
		if _acae := _dfcab.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _bcggd)); _acae != nil {
			return _acae
		}
	}
	return nil
}
func (_eadcg ST_GrowShrinkType) ValidateWithPath(path string) error {
	switch _eadcg {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eadcg))
	}
	return nil
}
func (_dadeca ST_CellType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fcaaa := _a.Attr{}
	_fcaaa.Name = name
	switch _dadeca {
	case ST_CellTypeUnset:
		_fcaaa.Value = ""
	case ST_CellTypeB:
		_fcaaa.Value = "\u0062"
	case ST_CellTypeN:
		_fcaaa.Value = "\u006e"
	case ST_CellTypeE:
		_fcaaa.Value = "\u0065"
	case ST_CellTypeS:
		_fcaaa.Value = "\u0073"
	case ST_CellTypeStr:
		_fcaaa.Value = "\u0073\u0074\u0072"
	case ST_CellTypeInlineStr:
		_fcaaa.Value = "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r"
	}
	return _fcaaa, nil
}
func (_efebd *CT_Parameters) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _badeb := range start.Attr {
		if _badeb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddccg, _dccfge := _f.ParseUint(_badeb.Value, 10, 32)
			if _dccfge != nil {
				return _dccfge
			}
			_caff := uint32(_ddccg)
			_efebd.CountAttr = &_caff
			continue
		}
	}
_aabad:
	for {
		_cegfc, _cadgb := d.Token()
		if _cadgb != nil {
			return _cadgb
		}
		switch _fcbgd := _cegfc.(type) {
		case _a.StartElement:
			switch _fcbgd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0072\u0061\u006d\u0065\u0074\u0065r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0072\u0061\u006d\u0065\u0074\u0065r"}:
				_gegbfe := NewCT_Parameter()
				if _bgbc := d.DecodeElement(_gegbfe, &_fcbgd); _bgbc != nil {
					return _bgbc
				}
				_efebd.Parameter = append(_efebd.Parameter, _gegbfe)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 \u0025\u0076", _fcbgd.Name)
				if _cadcbb := d.Skip(); _cadcbb != nil {
					return _cadcbb
				}
			}
		case _a.EndElement:
			break _aabad
		case _a.CharData:
		}
	}
	return nil
}

type CT_DateGroupItem struct {

	// Year
	YearAttr uint16

	// Month
	MonthAttr *uint16

	// Day
	DayAttr *uint16

	// Hour
	HourAttr *uint16

	// Minute
	MinuteAttr *uint16

	// Second
	SecondAttr *uint16

	// Date Time Grouping
	DateTimeGroupingAttr ST_DateTimeGrouping
}

func (_aafgd *ST_Comments) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dffcd, _edfbd := d.Token()
	if _edfbd != nil {
		return _edfbd
	}
	if _bgebf, _dgffa := _dffcd.(_a.EndElement); _dgffa && _bgebf.Name == start.Name {
		*_aafgd = 1
		return nil
	}
	if _dcbfba, _aggaee := _dffcd.(_a.CharData); !_aggaee {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dffcd)
	} else {
		switch string(_dcbfba) {
		case "":
			*_aafgd = 0
		case "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065":
			*_aafgd = 1
		case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
			*_aafgd = 2
		case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074":
			*_aafgd = 3
		}
	}
	_dffcd, _edfbd = d.Token()
	if _edfbd != nil {
		return _edfbd
	}
	if _gfecba, _gagfa := _dffcd.(_a.EndElement); _gagfa && _gfecba.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dffcd)
}

// ValidateWithPath validates the CT_DbPr and its children, prefixing error messages with path
func (_adea *CT_DbPr) ValidateWithPath(path string) error { return nil }
func NewCT_WebPublishing() *CT_WebPublishing              { _daddc := &CT_WebPublishing{}; return _daddc }

// Validate validates the CT_PageFields and its children
func (_dcab *CT_PageFields) Validate() error {
	return _dcab.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073")
}

type CT_CacheSource struct {

	// Cache Type
	TypeAttr ST_SourceType

	// Connection Index
	ConnectionIdAttr *uint32

	// Worksheet PivotCache Source
	WorksheetSource *CT_WorksheetSource

	// Consolidation Source
	Consolidation *CT_Consolidation

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

const (
	ST_TypeUnset  ST_Type = 0
	ST_TypeNone   ST_Type = 1
	ST_TypeAll    ST_Type = 2
	ST_TypeRow    ST_Type = 3
	ST_TypeColumn ST_Type = 4
)

type Workbook struct{ CT_Workbook }
type CT_DdeItem struct {

	// DDE Name
	NameAttr *string

	// Object Linking TechnologyE
	OleAttr *bool

	// Advise
	AdviseAttr *bool

	// Data is an Image
	PreferPicAttr *bool

	// DDE Name Values
	Values *CT_DdeValues
}

func (_ddeag *CT_SharedUser) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _ddeag.GuidAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _ddeag.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _ddeag.IdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _ddeag.DateTimeAttr)})
	e.EncodeToken(start)
	if _ddeag.ExtLst != nil {
		_ceca := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ddeag.ExtLst, _ceca)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dbef *CT_CellSmartTagPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006b\u0065\u0079"}, Value: _fc.Sprintf("\u0025\u0076", _dbef.KeyAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", _dbef.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_agfgg ST_RevisionAction) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_agfgg.String(), start)
}

// ValidateWithPath validates the CT_CustomProperty and its children, prefixing error messages with path
func (_efeb *CT_CustomProperty) ValidateWithPath(path string) error { return nil }
func (_ccbaa *CT_DefinedName) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _ccbaa.NameAttr)})
	if _ccbaa.CommentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ccbaa.CommentAttr)})
	}
	if _ccbaa.CustomMenuAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _fc.Sprintf("\u0025\u0076", *_ccbaa.CustomMenuAttr)})
	}
	if _ccbaa.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_ccbaa.DescriptionAttr)})
	}
	if _ccbaa.HelpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u006c\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_ccbaa.HelpAttr)})
	}
	if _ccbaa.StatusBarAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r"}, Value: _fc.Sprintf("\u0025\u0076", *_ccbaa.StatusBarAttr)})
	}
	if _ccbaa.LocalSheetIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_ccbaa.LocalSheetIdAttr)})
	}
	if _ccbaa.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ccbaa.HiddenAttr))})
	}
	if _ccbaa.FunctionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ccbaa.FunctionAttr))})
	}
	if _ccbaa.VbProcedureAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "v\u0062\u0050\u0072\u006f\u0063\u0065\u0064\u0075\u0072\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ccbaa.VbProcedureAttr))})
	}
	if _ccbaa.XlmAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006c\u006d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ccbaa.XlmAttr))})
	}
	if _ccbaa.FunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_ccbaa.FunctionGroupIdAttr)})
	}
	if _ccbaa.ShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079"}, Value: _fc.Sprintf("\u0025\u0076", *_ccbaa.ShortcutKeyAttr)})
	}
	if _ccbaa.PublishToServerAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070u\u0062l\u0069\u0073\u0068\u0054\u006f\u0053\u0065\u0072\u0076\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ccbaa.PublishToServerAttr))})
	}
	if _ccbaa.WorkbookParameterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0061\u0072\u0061m\u0065\u0074\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ccbaa.WorkbookParameterAttr))})
	}
	e.EncodeElement(_ccbaa.Content, start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_Visibility byte

// ValidateWithPath validates the CT_pivotTableDefinition and its children, prefixing error messages with path
func (_bccgg *CT_pivotTableDefinition) ValidateWithPath(path string) error {
	if _bbfec := _bccgg.Location.ValidateWithPath(path + "\u002fL\u006f\u0063\u0061\u0074\u0069\u006fn"); _bbfec != nil {
		return _bbfec
	}
	if _bccgg.PivotFields != nil {
		if _cffgc := _bccgg.PivotFields.ValidateWithPath(path + "\u002f\u0050\u0069v\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"); _cffgc != nil {
			return _cffgc
		}
	}
	if _bccgg.RowFields != nil {
		if _bbfcge := _bccgg.RowFields.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073"); _bbfcge != nil {
			return _bbfcge
		}
	}
	if _bccgg.RowItems != nil {
		if _abbeed := _bccgg.RowItems.ValidateWithPath(path + "\u002fR\u006f\u0077\u0049\u0074\u0065\u006ds"); _abbeed != nil {
			return _abbeed
		}
	}
	if _bccgg.ColFields != nil {
		if _bebef := _bccgg.ColFields.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073"); _bebef != nil {
			return _bebef
		}
	}
	if _bccgg.ColItems != nil {
		if _degfg := _bccgg.ColItems.ValidateWithPath(path + "\u002fC\u006f\u006c\u0049\u0074\u0065\u006ds"); _degfg != nil {
			return _degfg
		}
	}
	if _bccgg.PageFields != nil {
		if _gbfad := _bccgg.PageFields.ValidateWithPath(path + "/\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"); _gbfad != nil {
			return _gbfad
		}
	}
	if _bccgg.DataFields != nil {
		if _baaef := _bccgg.DataFields.ValidateWithPath(path + "/\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"); _baaef != nil {
			return _baaef
		}
	}
	if _bccgg.Formats != nil {
		if _ddaed := _bccgg.Formats.ValidateWithPath(path + "\u002f\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _ddaed != nil {
			return _ddaed
		}
	}
	if _bccgg.ConditionalFormats != nil {
		if _fecca := _bccgg.ConditionalFormats.ValidateWithPath(path + "\u002f\u0043\u006f\u006edi\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _fecca != nil {
			return _fecca
		}
	}
	if _bccgg.ChartFormats != nil {
		if _aacfc := _bccgg.ChartFormats.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _aacfc != nil {
			return _aacfc
		}
	}
	if _bccgg.PivotHierarchies != nil {
		if _bbdac := _bccgg.PivotHierarchies.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072c\u0068\u0069\u0065\u0073"); _bbdac != nil {
			return _bbdac
		}
	}
	if _bccgg.PivotTableStyleInfo != nil {
		if _gagdd := _bccgg.PivotTableStyleInfo.ValidateWithPath(path + "/\u0050i\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065In\u0066\u006f"); _gagdd != nil {
			return _gagdd
		}
	}
	if _bccgg.Filters != nil {
		if _gaefa := _bccgg.Filters.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u0073"); _gaefa != nil {
			return _gaefa
		}
	}
	if _bccgg.RowHierarchiesUsage != nil {
		if _gggca := _bccgg.RowHierarchiesUsage.ValidateWithPath(path + "/\u0052o\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0069\u0065\u0073\u0055sa\u0067\u0065"); _gggca != nil {
			return _gggca
		}
	}
	if _bccgg.ColHierarchiesUsage != nil {
		if _cfbdf := _bccgg.ColHierarchiesUsage.ValidateWithPath(path + "/\u0043o\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0069\u0065\u0073\u0055sa\u0067\u0065"); _cfbdf != nil {
			return _cfbdf
		}
	}
	if _bccgg.ExtLst != nil {
		if _cafgcd := _bccgg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cafgcd != nil {
			return _cafgcd
		}
	}
	return nil
}
func (_gcfda *CT_FutureMetadata) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cbage := range start.Attr {
		if _cbage.Name.Local == "\u006e\u0061\u006d\u0065" {
			_badac, _ebdca := _cbage.Value, error(nil)
			if _ebdca != nil {
				return _ebdca
			}
			_gcfda.NameAttr = _badac
			continue
		}
		if _cbage.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccdd, _gdebd := _f.ParseUint(_cbage.Value, 10, 32)
			if _gdebd != nil {
				return _gdebd
			}
			_gfcbc := uint32(_ccdd)
			_gcfda.CountAttr = &_gfcbc
			continue
		}
	}
_bbdag:
	for {
		_eaag, _ffgcg := d.Token()
		if _ffgcg != nil {
			return _ffgcg
		}
		switch _gdfef := _eaag.(type) {
		case _a.StartElement:
			switch _gdfef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}:
				_ggdde := NewCT_FutureMetadataBlock()
				if _abffd := d.DecodeElement(_ggdde, &_gdfef); _abffd != nil {
					return _abffd
				}
				_gcfda.Bk = append(_gcfda.Bk, _ggdde)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcfda.ExtLst = NewCT_ExtensionList()
				if _bede := d.DecodeElement(_gcfda.ExtLst, &_gdfef); _bede != nil {
					return _bede
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _gdfef.Name)
				if _eegad := d.Skip(); _eegad != nil {
					return _eegad
				}
			}
		case _a.EndElement:
			break _bbdag
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_DrawingHF and its children
func (_gbcd *CT_DrawingHF) Validate() error {
	return _gbcd.ValidateWithPath("\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046")
}

// Validate validates the CT_ExternalSheetName and its children
func (_fcecg *CT_ExternalSheetName) Validate() error {
	return _fcecg.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Na\u006d\u0065")
}
func NewCT_DefinedNames() *CT_DefinedNames { _addad := &CT_DefinedNames{}; return _addad }

// Validate validates the CT_NumFmt and its children
func (_eaegg *CT_NumFmt) Validate() error {
	return _eaegg.ValidateWithPath("\u0043T\u005f\u004e\u0075\u006d\u0046\u006dt")
}
func NewCT_CacheFields() *CT_CacheFields { _afdf := &CT_CacheFields{}; return _afdf }

type CT_MdxTuple struct {

	// Member Index Count
	CAttr *uint32

	// Server Formatting Culture Currency
	CtAttr *string

	// Server Formatting String Index
	SiAttr *uint32

	// Server Formatting Built-In Number Format Index
	FiAttr *uint32

	// Server Formatting Background Color
	BcAttr *string

	// Server Formatting Foreground Color
	FcAttr *string

	// Server Formatting Italic Font
	IAttr *bool

	// Server Formatting Underline Font
	UAttr *bool

	// Server Formatting Strikethrough Font
	StAttr *bool

	// Server Formatting Bold Font
	BAttr *bool

	// Member Unique Name Index
	N []*CT_MetadataStringIndex
}

func NewCT_ExternalBook() *CT_ExternalBook { _bffgff := &CT_ExternalBook{}; return _bffgff }
func NewCT_CellFormula() *CT_CellFormula   { _gbb := &CT_CellFormula{}; return _gbb }
func NewCT_Control() *CT_Control           { _daee := &CT_Control{}; return _daee }
func (_fffad *CT_Table) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _fffad.IdAttr)})
	if _fffad.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.NameAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _fffad.DisplayNameAttr)})
	if _fffad.CommentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.CommentAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _fffad.RefAttr)})
	if _fffad.TableTypeAttr != ST_TableTypeUnset {
		_efgbg, _aedbfe := _fffad.TableTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e"})
		if _aedbfe != nil {
			return _aedbfe
		}
		start.Attr = append(start.Attr, _efgbg)
	}
	if _fffad.HeaderRowCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.HeaderRowCountAttr)})
	}
	if _fffad.InsertRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fffad.InsertRowAttr))})
	}
	if _fffad.InsertRowShiftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fffad.InsertRowShiftAttr))})
	}
	if _fffad.TotalsRowCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.TotalsRowCountAttr)})
	}
	if _fffad.TotalsRowShownAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fffad.TotalsRowShownAttr))})
	}
	if _fffad.PublishedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fffad.PublishedAttr))})
	}
	if _fffad.HeaderRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.HeaderRowDxfIdAttr)})
	}
	if _fffad.DataDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.DataDxfIdAttr)})
	}
	if _fffad.TotalsRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.TotalsRowDxfIdAttr)})
	}
	if _fffad.HeaderRowBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.HeaderRowBorderDxfIdAttr)})
	}
	if _fffad.TableBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.TableBorderDxfIdAttr)})
	}
	if _fffad.TotalsRowBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.TotalsRowBorderDxfIdAttr)})
	}
	if _fffad.HeaderRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.HeaderRowCellStyleAttr)})
	}
	if _fffad.DataCellStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.DataCellStyleAttr)})
	}
	if _fffad.TotalsRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.TotalsRowCellStyleAttr)})
	}
	if _fffad.ConnectionIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fffad.ConnectionIdAttr)})
	}
	e.EncodeToken(start)
	if _fffad.AutoFilter != nil {
		_fgcaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_fffad.AutoFilter, _fgcaa)
	}
	if _fffad.SortState != nil {
		_adaaab := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_fffad.SortState, _adaaab)
	}
	_eacaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003at\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}}
	e.EncodeElement(_fffad.TableColumns, _eacaa)
	if _fffad.TableStyleInfo != nil {
		_beefc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}}
		e.EncodeElement(_fffad.TableStyleInfo, _beefc)
	}
	if _fffad.ExtLst != nil {
		_caceeca := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fffad.ExtLst, _caceeca)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_acfed *ST_VerticalAlignment) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_egedg, _agdfg := d.Token()
	if _agdfg != nil {
		return _agdfg
	}
	if _cfdeaf, _gdddf := _egedg.(_a.EndElement); _gdddf && _cfdeaf.Name == start.Name {
		*_acfed = 1
		return nil
	}
	if _egcgb, _daegb := _egedg.(_a.CharData); !_daegb {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egedg)
	} else {
		switch string(_egcgb) {
		case "":
			*_acfed = 0
		case "\u0074\u006f\u0070":
			*_acfed = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_acfed = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d":
			*_acfed = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_acfed = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_acfed = 5
		}
	}
	_egedg, _agdfg = d.Token()
	if _agdfg != nil {
		return _agdfg
	}
	if _bdgbca, _dfgdgc := _egedg.(_a.EndElement); _dfgdgc && _bdgbca.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egedg)
}
func (_dedc *CT_CellSmartTags) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fc.Sprintf("\u0025\u0076", _dedc.RAttr)})
	e.EncodeToken(start)
	_dedf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}}
	for _, _cgbd := range _dedc.CellSmartTag {
		e.EncodeElement(_cgbd, _dedf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cfaed *CT_PivotAreas) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cfaed.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cfaed.CountAttr)})
	}
	e.EncodeToken(start)
	if _cfaed.PivotArea != nil {
		_cdaba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
		for _, _bfebc := range _cfaed.PivotArea {
			e.EncodeElement(_bfebc, _cdaba)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_Macrosheet() *CT_Macrosheet {
	_bffgg := &CT_Macrosheet{}
	_bffgg.SheetData = NewCT_SheetData()
	return _bffgg
}

// ValidateWithPath validates the CT_DdeLink and its children, prefixing error messages with path
func (_cabb *CT_DdeLink) ValidateWithPath(path string) error {
	if _cabb.DdeItems != nil {
		if _afdd := _cabb.DdeItems.ValidateWithPath(path + "\u002fD\u0064\u0065\u0049\u0074\u0065\u006ds"); _afdd != nil {
			return _afdd
		}
	}
	return nil
}
func (_faggf ST_Type) Validate() error { return _faggf.ValidateWithPath("") }

// ValidateWithPath validates the CT_Query and its children, prefixing error messages with path
func (_gbeaff *CT_Query) ValidateWithPath(path string) error {
	if _gbeaff.Tpls != nil {
		if _bdbcd := _gbeaff.Tpls.ValidateWithPath(path + "\u002f\u0054\u0070l\u0073"); _bdbcd != nil {
			return _bdbcd
		}
	}
	return nil
}

// Validate validates the CT_OleItems and its children
func (_aaaacb *CT_OleItems) Validate() error {
	return _aaaacb.ValidateWithPath("C\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073")
}
func (_bdeccg *CT_RevisionConflict) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edabg := range start.Attr {
		if _edabg.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_ecaaf, _aedab := _f.ParseUint(_edabg.Value, 10, 32)
			if _aedab != nil {
				return _aedab
			}
			_cacea := uint32(_ecaaf)
			_bdeccg.SheetIdAttr = &_cacea
			continue
		}
		if _edabg.Name.Local == "\u0072\u0049\u0064" {
			_fgdbf, _cffda := _f.ParseUint(_edabg.Value, 10, 32)
			if _cffda != nil {
				return _cffda
			}
			_ccdfcb := uint32(_fgdbf)
			_bdeccg.RIdAttr = &_ccdfcb
			continue
		}
		if _edabg.Name.Local == "\u0075\u0061" {
			_eddge, _ebdfdc := _f.ParseBool(_edabg.Value)
			if _ebdfdc != nil {
				return _ebdfdc
			}
			_bdeccg.UaAttr = &_eddge
			continue
		}
		if _edabg.Name.Local == "\u0072\u0061" {
			_cabaeb, _gcbcc := _f.ParseBool(_edabg.Value)
			if _gcbcc != nil {
				return _gcbcc
			}
			_bdeccg.RaAttr = &_cabaeb
			continue
		}
	}
	for {
		_afacg, _cgead := d.Token()
		if _cgead != nil {
			return _fc.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0052\u0065\u0076\u0069\u0073i\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u003a\u0020\u0025\u0073", _cgead)
		}
		if _dgda, _gdcg := _afacg.(_a.EndElement); _gdcg && _dgda.Name == start.Name {
			break
		}
	}
	return nil
}

type Table struct{ CT_Table }

// ValidateWithPath validates the CT_MdxSet and its children, prefixing error messages with path
func (_dbdde *CT_MdxSet) ValidateWithPath(path string) error {
	if _feddad := _dbdde.OAttr.ValidateWithPath(path + "\u002f\u004f\u0041\u0074\u0074\u0072"); _feddad != nil {
		return _feddad
	}
	for _afbba, _aecfbd := range _dbdde.N {
		if _bebdc := _aecfbd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _afbba)); _bebdc != nil {
			return _bebdc
		}
	}
	return nil
}
func (_efafd *CT_Query) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _febd := range start.Attr {
		if _febd.Name.Local == "\u006d\u0064\u0078" {
			_ccaf, _ccfda := _febd.Value, error(nil)
			if _ccfda != nil {
				return _ccfda
			}
			_efafd.MdxAttr = _ccaf
			continue
		}
	}
_ecgbgc:
	for {
		_bdacf, _dbdfb := d.Token()
		if _dbdfb != nil {
			return _dbdfb
		}
		switch _aabged := _bdacf.(type) {
		case _a.StartElement:
			switch _aabged.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_efafd.Tpls = NewCT_Tuples()
				if _cccgc := d.DecodeElement(_efafd.Tpls, &_aabged); _cccgc != nil {
					return _cccgc
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0020\u0025\u0076", _aabged.Name)
				if _fagfa := d.Skip(); _fagfa != nil {
					return _fagfa
				}
			}
		case _a.EndElement:
			break _ecgbgc
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_MeasureDimensionMaps() *CT_MeasureDimensionMaps {
	_egag := &CT_MeasureDimensionMaps{}
	return _egag
}

// ValidateWithPath validates the CT_SharedUser and its children, prefixing error messages with path
func (_bbebdb *CT_SharedUser) ValidateWithPath(path string) error {
	if !_ae.ST_GuidPatternRe.MatchString(_bbebdb.GuidAttr) {
		return _fc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ae.ST_GuidPatternRe, _bbebdb.GuidAttr)
	}
	if _bbebdb.ExtLst != nil {
		if _agdfaf := _bbebdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agdfaf != nil {
			return _agdfaf
		}
	}
	return nil
}
func NewCT_ChartsheetView() *CT_ChartsheetView { _fabf := &CT_ChartsheetView{}; return _fabf }

type CT_ChartFormat struct {

	// Chart Index
	ChartAttr uint32

	// Pivot Format Id
	FormatAttr uint32

	// Series Format
	SeriesAttr *bool

	// Pivot Table Location Rule
	PivotArea *CT_PivotArea
}

// ValidateWithPath validates the CT_ServerFormat and its children, prefixing error messages with path
func (_fadfd *CT_ServerFormat) ValidateWithPath(path string) error { return nil }
func (_fdfdd ST_RefMode) Validate() error                          { return _fdfdd.ValidateWithPath("") }

type CT_PCDKPIs struct {

	// KPI Count
	CountAttr *uint32

	// OLAP KPI
	Kpi []*CT_PCDKPI
}

func (_bbeae *MapInfo) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u004d\u0061\u0070\u0049\u006e\u0066\u006f"
	return _bbeae.CT_MapInfo.MarshalXML(e, start)
}
func (_cegd *CT_DdeItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_eggaa:
	for {
		_deggb, _fggc := d.Token()
		if _fggc != nil {
			return _fggc
		}
		switch _edag := _deggb.(type) {
		case _a.StartElement:
			switch _edag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u0049\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u0049\u0074\u0065\u006d"}:
				_cegef := NewCT_DdeItem()
				if _eaeaa := d.DecodeElement(_cegef, &_edag); _eaeaa != nil {
					return _eaeaa
				}
				_cegd.DdeItem = append(_cegd.DdeItem, _cegef)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _edag.Name)
				if _cagde := d.Skip(); _cagde != nil {
					return _cagde
				}
			}
		case _a.EndElement:
			break _eggaa
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_ScopeUnset     ST_Scope = 0
	ST_ScopeSelection ST_Scope = 1
	ST_ScopeData      ST_Scope = 2
	ST_ScopeField     ST_Scope = 3
)

// Validate validates the CT_Worksheet and its children
func (_ebggb *CT_Worksheet) Validate() error {
	return _ebggb.ValidateWithPath("\u0043\u0054\u005fW\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074")
}
func (_ddbfa *CT_ExternalSheetData) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _ddbfa.SheetIdAttr)})
	if _ddbfa.RefreshErrorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066r\u0065\u0073\u0068\u0045\u0072\u0072\u006f\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ddbfa.RefreshErrorAttr))})
	}
	e.EncodeToken(start)
	if _ddbfa.Row != nil {
		_ggea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u006f\u0077"}}
		for _, _daffd := range _ddbfa.Row {
			e.EncodeElement(_daffd, _ggea)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextField and its children, prefixing error messages with path
func (_effeb *CT_TextField) ValidateWithPath(path string) error {
	if _cbbeb := _effeb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cbbeb != nil {
		return _cbbeb
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalDefinedNames and its children, prefixing error messages with path
func (_aeee *CT_ExternalDefinedNames) ValidateWithPath(path string) error {
	for _ebaaf, _fbaef := range _aeee.DefinedName {
		if _egcaa := _fbaef.ValidateWithPath(_fc.Sprintf("\u0025s\u002fD\u0065\u0066\u0069\u006e\u0065d\u004e\u0061m\u0065\u005b\u0025\u0064\u005d", path, _ebaaf)); _egcaa != nil {
			return _egcaa
		}
	}
	return nil
}
func NewCT_RevisionQueryTableField() *CT_RevisionQueryTableField {
	_bdgde := &CT_RevisionQueryTableField{}
	return _bdgde
}

// Validate validates the CT_Extension and its children
func (_bedc *CT_Extension) Validate() error {
	return _bedc.ValidateWithPath("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e")
}
func (_egbfb *CT_ColorFilter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _egbfb.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_egbfb.DxfIdAttr)})
	}
	if _egbfb.CellColorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_egbfb.CellColorAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_CalcPr() *CT_CalcPr { _ebcf := &CT_CalcPr{}; return _ebcf }

// ValidateWithPath validates the CT_Dialogsheet and its children, prefixing error messages with path
func (_gcfcg *CT_Dialogsheet) ValidateWithPath(path string) error {
	if _gcfcg.SheetPr != nil {
		if _eaac := _gcfcg.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _eaac != nil {
			return _eaac
		}
	}
	if _gcfcg.SheetViews != nil {
		if _gfdg := _gcfcg.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _gfdg != nil {
			return _gfdg
		}
	}
	if _gcfcg.SheetFormatPr != nil {
		if _bfgae := _gcfcg.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _bfgae != nil {
			return _bfgae
		}
	}
	if _gcfcg.SheetProtection != nil {
		if _ggdb := _gcfcg.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _ggdb != nil {
			return _ggdb
		}
	}
	if _gcfcg.CustomSheetViews != nil {
		if _gegae := _gcfcg.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _gegae != nil {
			return _gegae
		}
	}
	if _gcfcg.PrintOptions != nil {
		if _faceg := _gcfcg.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _faceg != nil {
			return _faceg
		}
	}
	if _gcfcg.PageMargins != nil {
		if _bbae := _gcfcg.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _bbae != nil {
			return _bbae
		}
	}
	if _gcfcg.PageSetup != nil {
		if _ffda := _gcfcg.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _ffda != nil {
			return _ffda
		}
	}
	if _gcfcg.HeaderFooter != nil {
		if _ggcba := _gcfcg.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _ggcba != nil {
			return _ggcba
		}
	}
	if _gcfcg.Drawing != nil {
		if _fdgc := _gcfcg.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _fdgc != nil {
			return _fdgc
		}
	}
	if _gcfcg.LegacyDrawing != nil {
		if _fcag := _gcfcg.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _fcag != nil {
			return _fcag
		}
	}
	if _gcfcg.LegacyDrawingHF != nil {
		if _cgcc := _gcfcg.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _cgcc != nil {
			return _cgcc
		}
	}
	if _gcfcg.DrawingHF != nil {
		if _bbag := _gcfcg.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _bbag != nil {
			return _bbag
		}
	}
	if _gcfcg.OleObjects != nil {
		if _fbbf := _gcfcg.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _fbbf != nil {
			return _fbbf
		}
	}
	if _gcfcg.Controls != nil {
		if _gcebb := _gcfcg.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _gcebb != nil {
			return _gcebb
		}
	}
	if _gcfcg.ExtLst != nil {
		if _gbcce := _gcfcg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbcce != nil {
			return _gbcce
		}
	}
	return nil
}
func (_bgccg *CT_Row) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bgccg.RAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_bgccg.RAttr)})
	}
	if _bgccg.SpansAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0070\u0061n\u0073"}, Value: _fc.Sprintf("\u0025\u0076", *_bgccg.SpansAttr)})
	}
	if _bgccg.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fc.Sprintf("\u0025\u0076", *_bgccg.SAttr)})
	}
	if _bgccg.CustomFormatAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u006f\u0072\u006d\u0061\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgccg.CustomFormatAttr))})
	}
	if _bgccg.HtAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bgccg.HtAttr)})
	}
	if _bgccg.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgccg.HiddenAttr))})
	}
	if _bgccg.CustomHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgccg.CustomHeightAttr))})
	}
	if _bgccg.OutlineLevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_bgccg.OutlineLevelAttr)})
	}
	if _bgccg.CollapsedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgccg.CollapsedAttr))})
	}
	if _bgccg.ThickTopAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgccg.ThickTopAttr))})
	}
	if _bgccg.ThickBotAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0042\u006f\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgccg.ThickBotAttr))})
	}
	if _bgccg.PhAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgccg.PhAttr))})
	}
	e.EncodeToken(start)
	if _bgccg.C != nil {
		_eaeed := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063"}}
		for _, _gage := range _bgccg.C {
			e.EncodeElement(_gage, _eaeed)
		}
	}
	if _bgccg.ExtLst != nil {
		_fcgggf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bgccg.ExtLst, _fcgggf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eaece ST_DdeValueType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cgbgc := _a.Attr{}
	_cgbgc.Name = name
	switch _eaece {
	case ST_DdeValueTypeUnset:
		_cgbgc.Value = ""
	case ST_DdeValueTypeNil:
		_cgbgc.Value = "\u006e\u0069\u006c"
	case ST_DdeValueTypeB:
		_cgbgc.Value = "\u0062"
	case ST_DdeValueTypeN:
		_cgbgc.Value = "\u006e"
	case ST_DdeValueTypeE:
		_cgbgc.Value = "\u0065"
	case ST_DdeValueTypeStr:
		_cgbgc.Value = "\u0073\u0074\u0072"
	}
	return _cgbgc, nil
}

// ValidateWithPath validates the CT_Sheet and its children, prefixing error messages with path
func (_eabgcc *CT_Sheet) ValidateWithPath(path string) error {
	if _gfcbg := _eabgcc.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _gfcbg != nil {
		return _gfcbg
	}
	return nil
}
func (_cbecf *CT_CustomWorkbookView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _cbecf.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _cbecf.GuidAttr)})
	if _cbecf.AutoUpdateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0055\u0070\u0064\u0061\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.AutoUpdateAttr))})
	}
	if _cbecf.MergeIntervalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0072\u0067\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_cbecf.MergeIntervalAttr)})
	}
	if _cbecf.ChangesSavedWinAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063h\u0061n\u0067\u0065\u0073\u0053\u0061\u0076\u0065\u0064\u0057\u0069\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.ChangesSavedWinAttr))})
	}
	if _cbecf.OnlySyncAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006e\u006c\u0079\u0053\u0079\u006e\u0063"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.OnlySyncAttr))})
	}
	if _cbecf.PersonalViewAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0065\u0072s\u006f\u006e\u0061\u006c\u0056\u0069\u0065\u0077"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.PersonalViewAttr))})
	}
	if _cbecf.IncludePrintSettingsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "i\u006ec\u006c\u0075\u0064\u0065\u0050\u0072\u0069\u006et\u0053\u0065\u0074\u0074in\u0067\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.IncludePrintSettingsAttr))})
	}
	if _cbecf.IncludeHiddenRowColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0063\u006cud\u0065\u0048\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0043\u006f\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.IncludeHiddenRowColAttr))})
	}
	if _cbecf.MaximizedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.MaximizedAttr))})
	}
	if _cbecf.MinimizedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.MinimizedAttr))})
	}
	if _cbecf.ShowHorizontalScrollAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.ShowHorizontalScrollAttr))})
	}
	if _cbecf.ShowVerticalScrollAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.ShowVerticalScrollAttr))})
	}
	if _cbecf.ShowSheetTabsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.ShowSheetTabsAttr))})
	}
	if _cbecf.XWindowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0076", *_cbecf.XWindowAttr)})
	}
	if _cbecf.YWindowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0076", *_cbecf.YWindowAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068"}, Value: _fc.Sprintf("\u0025\u0076", _cbecf.WindowWidthAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0076", _cbecf.WindowHeightAttr)})
	if _cbecf.TabRatioAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_cbecf.TabRatioAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _cbecf.ActiveSheetIdAttr)})
	if _cbecf.ShowFormulaBarAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0075l\u0061\u0042\u0061\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.ShowFormulaBarAttr))})
	}
	if _cbecf.ShowStatusbarAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0074\u0061\u0074\u0075\u0073\u0062\u0061\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbecf.ShowStatusbarAttr))})
	}
	if _cbecf.ShowCommentsAttr != ST_CommentsUnset {
		_beag, _bagf := _cbecf.ShowCommentsAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"})
		if _bagf != nil {
			return _bagf
		}
		start.Attr = append(start.Attr, _beag)
	}
	if _cbecf.ShowObjectsAttr != ST_ObjectsUnset {
		_ddac, _dfebe := _cbecf.ShowObjectsAttr.MarshalXMLAttr(_a.Name{Local: "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073"})
		if _dfebe != nil {
			return _dfebe
		}
		start.Attr = append(start.Attr, _ddac)
	}
	e.EncodeToken(start)
	if _cbecf.ExtLst != nil {
		_fdfba := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cbecf.ExtLst, _fdfba)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Color struct {

	// Automatic
	AutoAttr *bool

	// Index
	IndexedAttr *uint32

	// Alpha Red Green Blue Color Value
	RgbAttr *string

	// Theme Color
	ThemeAttr *uint32

	// Tint
	TintAttr *float64
}

// Validate validates the CT_Borders and its children
func (_cegb *CT_Borders) Validate() error {
	return _cegb.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0073")
}
func (_cbfbbca *CT_SheetCalcPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cbfbbca.FullCalcOnLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbfbbca.FullCalcOnLoadAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cfafe *CT_Dxfs) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aaced := range start.Attr {
		if _aaced.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_accge, _dgec := _f.ParseUint(_aaced.Value, 10, 32)
			if _dgec != nil {
				return _dgec
			}
			_fgcbec := uint32(_accge)
			_cfafe.CountAttr = &_fgcbec
			continue
		}
	}
_ggfcd:
	for {
		_dgfec, _ddcaa := d.Token()
		if _ddcaa != nil {
			return _ddcaa
		}
		switch _cfbce := _dgfec.(type) {
		case _a.StartElement:
			switch _cfbce.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}:
				_dfbgc := NewCT_Dxf()
				if _dafdb := d.DecodeElement(_dfbgc, &_cfbce); _dafdb != nil {
					return _dafdb
				}
				_cfafe.Dxf = append(_cfafe.Dxf, _dfbgc)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0044\u0078\u0066\u0073\u0020\u0025\u0076", _cfbce.Name)
				if _bdcbf := d.Skip(); _bdcbf != nil {
					return _bdcbf
				}
			}
		case _a.EndElement:
			break _ggfcd
		case _a.CharData:
		}
	}
	return nil
}

type CT_PivotCacheDefinition struct {
	IdAttr *string

	// Invalid Cache
	InvalidAttr *bool

	// Save Pivot Records
	SaveDataAttr *bool

	// Refresh On Load
	RefreshOnLoadAttr *bool

	// Optimize Cache for Memory
	OptimizeMemoryAttr *bool

	// Enable PivotCache Refresh
	EnableRefreshAttr *bool

	// Last Refreshed By
	RefreshedByAttr *string

	// PivotCache Last Refreshed Date
	RefreshedDateAttr *float64

	// PivotCache Last Refreshed Date ISO
	RefreshedDateIsoAttr *_cd.Time

	// Background Query
	BackgroundQueryAttr *bool

	// Missing Items Limit
	MissingItemsLimitAttr *uint32

	// PivotCache Created Version
	CreatedVersionAttr *uint8

	// PivotCache Last Refreshed Version
	RefreshedVersionAttr *uint8

	// Minimum Version Required for Refresh
	MinRefreshableVersionAttr *uint8

	// PivotCache Record Count
	RecordCountAttr *uint32

	// Upgrade PivotCache on Refresh
	UpgradeOnRefreshAttr *bool

	// Tuple Cache
	TupleCacheAttr *bool

	// Supports Subqueries
	SupportSubqueryAttr *bool

	// Supports Attribute Drilldown
	SupportAdvancedDrillAttr *bool

	// PivotCache Source Description
	CacheSource *CT_CacheSource

	// PivotCache Fields
	CacheFields *CT_CacheFields

	// PivotCache Hierarchies
	CacheHierarchies *CT_CacheHierarchies

	// OLAP KPIs
	Kpis *CT_PCDKPIs

	// Tuple Cache
	TupleCache *CT_TupleCache

	// Calculated Items
	CalculatedItems *CT_CalculatedItems

	// Calculated Members
	CalculatedMembers *CT_CalculatedMembers

	// OLAP Dimensions
	Dimensions *CT_Dimensions

	// OLAP Measure Groups
	MeasureGroups *CT_MeasureGroups

	// OLAP Measure Group
	Maps *CT_MeasureDimensionMaps

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type ST_PageOrder byte

// Validate validates the CT_PCDKPI and its children
func (_ddgc *CT_PCDKPI) Validate() error {
	return _ddgc.ValidateWithPath("\u0043T\u005f\u0050\u0043\u0044\u004b\u0050I")
}

type CT_pivotTableDefinition struct {

	// Name
	NameAttr string

	// PivotCache Definition Id
	CacheIdAttr uint32

	// Data On Rows
	DataOnRowsAttr *bool

	// Default Data Field Position
	DataPositionAttr *uint32

	// Data Field Header Name
	DataCaptionAttr string

	// Grand Totals Caption
	GrandTotalCaptionAttr *string

	// Error Caption
	ErrorCaptionAttr *string

	// Show Error
	ShowErrorAttr *bool

	// Caption for Missing Values
	MissingCaptionAttr *string

	// Show Missing
	ShowMissingAttr *bool

	// Page Header Style Name
	PageStyleAttr *string

	// Table Style Name
	PivotTableStyleAttr *string

	// Vacated Style
	VacatedStyleAttr *string

	// PivotTable Custom String
	TagAttr *string

	// PivotTable Last Updated Version
	UpdatedVersionAttr *uint8

	// Minimum Refreshable Version
	MinRefreshableVersionAttr *uint8

	// Asterisk Totals
	AsteriskTotalsAttr *bool

	// Show Item Names
	ShowItemsAttr *bool

	// Allow Edit Data
	EditDataAttr *bool

	// Disable Field List
	DisableFieldListAttr *bool

	// Show Calculated Members
	ShowCalcMbrsAttr *bool

	// Total Visual Data
	VisualTotalsAttr *bool

	// Show Multiple Labels
	ShowMultipleLabelAttr *bool

	// Show Drop Down
	ShowDataDropDownAttr *bool

	// Show Expand Collapse
	ShowDrillAttr *bool

	// Print Drill Indicators
	PrintDrillAttr *bool

	// Show Member Property ToolTips
	ShowMemberPropertyTipsAttr *bool

	// Show ToolTips on Data
	ShowDataTipsAttr *bool

	// Enable PivotTable Wizard
	EnableWizardAttr *bool

	// Enable Drill Down
	EnableDrillAttr *bool

	// Enable Field Properties
	EnableFieldPropertiesAttr *bool

	// Preserve Formatting
	PreserveFormattingAttr *bool

	// Auto Formatting
	UseAutoFormattingAttr *bool

	// Page Wrap
	PageWrapAttr *uint32

	// Page Over Then Down
	PageOverThenDownAttr *bool

	// Subtotal Hidden Items
	SubtotalHiddenItemsAttr *bool

	// Row Grand Totals
	RowGrandTotalsAttr *bool

	// Grand Totals On Columns
	ColGrandTotalsAttr *bool

	// Field Print Titles
	FieldPrintTitlesAttr *bool

	// Item Print Titles
	ItemPrintTitlesAttr *bool

	// Merge Titles
	MergeItemAttr *bool

	// Show Drop Zones
	ShowDropZonesAttr *bool

	// PivotCache Created Version
	CreatedVersionAttr *uint8

	// Indentation for Compact Axis
	IndentAttr *uint32

	// Show Empty Row
	ShowEmptyRowAttr *bool

	// Show Empty Column
	ShowEmptyColAttr *bool

	// Show Field Headers
	ShowHeadersAttr *bool

	// Compact New Fields
	CompactAttr *bool

	// Outline New Fields
	OutlineAttr *bool

	// Outline Data Fields
	OutlineDataAttr *bool

	// Compact Data
	CompactDataAttr *bool

	// Data Fields Published
	PublishedAttr *bool

	// Enable Drop Zones
	GridDropZonesAttr *bool

	// Stop Immersive UI
	ImmersiveAttr *bool

	// Multiple Field Filters
	MultipleFieldFiltersAttr *bool

	// Chart Format Id
	ChartFormatAttr *uint32

	// Row Header Caption
	RowHeaderCaptionAttr *string

	// Column Header Caption
	ColHeaderCaptionAttr *string

	// Default Sort Order
	FieldListSortAscendingAttr *bool

	// MDX Subqueries Supported
	MdxSubqueriesAttr *bool

	// Custom List AutoSort
	CustomListSortAttr *bool

	// PivotTable Location
	Location *CT_Location

	// PivotTable Fields
	PivotFields *CT_PivotFields

	// Row Fields
	RowFields *CT_RowFields

	// Row Items
	RowItems *CT_rowItems

	// Column Fields
	ColFields *CT_ColFields

	// Column Items
	ColItems *CT_colItems

	// Page Field Items
	PageFields *CT_PageFields

	// Data Fields
	DataFields *CT_DataFields

	// PivotTable Formats
	Formats *CT_Formats

	// Conditional Formats
	ConditionalFormats *CT_ConditionalFormats

	// PivotChart Formats
	ChartFormats *CT_ChartFormats

	// PivotTable OLAP Hierarchies
	PivotHierarchies *CT_PivotHierarchies

	// PivotTable Style
	PivotTableStyleInfo *CT_PivotTableStyle

	// Filters
	Filters *CT_PivotFilters

	// Row OLAP Hierarchy References
	RowHierarchiesUsage *CT_RowHierarchiesUsage

	// Column OLAP Hierarchy References
	ColHierarchiesUsage *CT_ColHierarchiesUsage

	// Future Feature Data Storage Area
	ExtLst                      *CT_ExtensionList
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}
type CT_CustomProperty struct {

	// Custom Property Name
	NameAttr string
	IdAttr   string
}
type CT_PivotField struct {

	// Field Name
	NameAttr *string

	// Axis
	AxisAttr ST_Axis

	// Data Field
	DataFieldAttr *bool

	// Custom Subtotal Caption
	SubtotalCaptionAttr *string

	// Show PivotField Header Drop Downs
	ShowDropDownsAttr *bool

	// Hidden Level
	HiddenLevelAttr *bool

	// Unique Member Property
	UniqueMemberPropertyAttr *string

	// Compact
	CompactAttr *bool

	// All Items Expanded
	AllDrilledAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Outline Items
	OutlineAttr *bool

	// Subtotals At Top
	SubtotalTopAttr *bool

	// Drag To Row
	DragToRowAttr *bool

	// Drag To Column
	DragToColAttr *bool

	// Multiple Field Filters
	MultipleItemSelectionAllowedAttr *bool

	// Drag Field to Page
	DragToPageAttr *bool

	// Field Can Drag to Data
	DragToDataAttr *bool

	// Drag Off
	DragOffAttr *bool

	// Show All Items
	ShowAllAttr *bool

	// Insert Blank Row
	InsertBlankRowAttr *bool

	// Server-based Page Field
	ServerFieldAttr *bool

	// Insert Item Page Break
	InsertPageBreakAttr *bool

	// Auto Show
	AutoShowAttr *bool

	// Top Auto Show
	TopAutoShowAttr *bool

	// Hide New Items
	HideNewItemsAttr *bool

	// Measure Filter
	MeasureFilterAttr *bool

	// Inclusive Manual Filter
	IncludeNewItemsInFilterAttr *bool

	// Items Per Page Count
	ItemPageCountAttr *uint32

	// Auto Sort Type
	SortTypeAttr ST_FieldSortType

	// Data Source Sort
	DataSourceSortAttr *bool

	// Auto Sort
	NonAutoSortDefaultAttr *bool

	// Auto Show Rank By
	RankByAttr *uint32

	// Show Default Subtotal
	DefaultSubtotalAttr *bool

	// Sum Subtotal
	SumSubtotalAttr *bool

	// CountA
	CountASubtotalAttr *bool

	// Average
	AvgSubtotalAttr *bool

	// Max Subtotal
	MaxSubtotalAttr *bool

	// Min Subtotal
	MinSubtotalAttr *bool

	// Product Subtotal
	ProductSubtotalAttr *bool

	// Count
	CountSubtotalAttr *bool

	// StdDev Subtotal
	StdDevSubtotalAttr *bool

	// StdDevP Subtotal
	StdDevPSubtotalAttr *bool

	// Variance Subtotal
	VarSubtotalAttr *bool

	// VarP Subtotal
	VarPSubtotalAttr *bool

	// Show Member Property in Cell
	ShowPropCellAttr *bool

	// Show Member Property ToolTip
	ShowPropTipAttr *bool

	// Show As Caption
	ShowPropAsCaptionAttr *bool

	// Drill State
	DefaultAttributeDrillStateAttr *bool

	// Field Items
	Items *CT_Items

	// AutoSort Scope
	AutoSortScope *CT_AutoSortScope

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_babbg *CT_Field) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdee := range start.Attr {
		if _cdee.Name.Local == "\u0078" {
			_dffdg, _abbab := _f.ParseInt(_cdee.Value, 10, 32)
			if _abbab != nil {
				return _abbab
			}
			_babbg.XAttr = int32(_dffdg)
			continue
		}
	}
	for {
		_aeeea, _cbcf := d.Token()
		if _cbcf != nil {
			return _fc.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u0065\u006c\u0064: \u0025\u0073", _cbcf)
		}
		if _ebgbe, _ffabd := _aeeea.(_a.EndElement); _ffabd && _ebgbe.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adgb *CT_CellSmartTag) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gdfd := range start.Attr {
		if _gdfd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_caac, _dgcc := _f.ParseUint(_gdfd.Value, 10, 32)
			if _dgcc != nil {
				return _dgcc
			}
			_adgb.TypeAttr = uint32(_caac)
			continue
		}
		if _gdfd.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_abgd, _abdg := _f.ParseBool(_gdfd.Value)
			if _abdg != nil {
				return _abdg
			}
			_adgb.DeletedAttr = &_abgd
			continue
		}
		if _gdfd.Name.Local == "\u0078\u006d\u006c\u0042\u0061\u0073\u0065\u0064" {
			_fbf, _gedg := _f.ParseBool(_gdfd.Value)
			if _gedg != nil {
				return _gedg
			}
			_adgb.XmlBasedAttr = &_fbf
			continue
		}
	}
_gbde:
	for {
		_bec, _ggfd := d.Token()
		if _ggfd != nil {
			return _ggfd
		}
		switch _bdff := _bec.(type) {
		case _a.StartElement:
			switch _bdff.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}:
				_fae := NewCT_CellSmartTagPr()
				if _cgda := d.DecodeElement(_fae, &_bdff); _cgda != nil {
					return _cgda
				}
				_adgb.CellSmartTagPr = append(_adgb.CellSmartTagPr, _fae)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0020\u0025\u0076", _bdff.Name)
				if _agebf := d.Skip(); _agebf != nil {
					return _agebf
				}
			}
		case _a.EndElement:
			break _gbde
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Connection and its children
func (_fadgc *CT_Connection) Validate() error {
	return _fadgc.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e")
}

type CT_DiscretePr struct {

	// Mapping Index Count
	CountAttr *uint32

	// Element Group
	X []*CT_Index
}

func (_cfeac *ST_BorderStyle) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cfeac = 0
	case "\u006e\u006f\u006e\u0065":
		*_cfeac = 1
	case "\u0074\u0068\u0069\u006e":
		*_cfeac = 2
	case "\u006d\u0065\u0064\u0069\u0075\u006d":
		*_cfeac = 3
	case "\u0064\u0061\u0073\u0068\u0065\u0064":
		*_cfeac = 4
	case "\u0064\u006f\u0074\u0074\u0065\u0064":
		*_cfeac = 5
	case "\u0074\u0068\u0069c\u006b":
		*_cfeac = 6
	case "\u0064\u006f\u0075\u0062\u006c\u0065":
		*_cfeac = 7
	case "\u0068\u0061\u0069\u0072":
		*_cfeac = 8
	case "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064":
		*_cfeac = 9
	case "\u0064a\u0073\u0068\u0044\u006f\u0074":
		*_cfeac = 10
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_cfeac = 11
	case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_cfeac = 12
	case "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_cfeac = 13
	case "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_cfeac = 14
	}
	return nil
}
func NewCT_SharedUser() *CT_SharedUser {
	_gdded := &CT_SharedUser{}
	_gdded.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _gdded
}
func (_agbed *CT_OleSize) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbcea := range start.Attr {
		if _fbcea.Name.Local == "\u0072\u0065\u0066" {
			_ceceec, _adfce := _fbcea.Value, error(nil)
			if _adfce != nil {
				return _adfce
			}
			_agbed.RefAttr = _ceceec
			continue
		}
	}
	for {
		_fbcba, _cggca := d.Token()
		if _cggca != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065\u003a\u0020%\u0073", _cggca)
		}
		if _ebefd, _caca := _fbcba.(_a.EndElement); _caca && _ebefd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ecfff *Connections) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ecfff.CT_Connections = *NewCT_Connections()
_bcbbaf:
	for {
		_bgcdef, _ddfb := d.Token()
		if _ddfb != nil {
			return _ddfb
		}
		switch _ecgfc := _bgcdef.(type) {
		case _a.StartElement:
			switch _ecgfc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_efaad := NewCT_Connection()
				if _dbced := d.DecodeElement(_efaad, &_ecgfc); _dbced != nil {
					return _dbced
				}
				_ecfff.Connection = append(_ecfff.Connection, _efaad)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _ecgfc.Name)
				if _gdgcg := d.Skip(); _gdgcg != nil {
					return _gdgcg
				}
			}
		case _a.EndElement:
			break _bcbbaf
		case _a.CharData:
		}
	}
	return nil
}
func (_dfcf *CT_ConditionalFormat) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dfcf.ScopeAttr != ST_ScopeUnset {
		_dbbd, _afgc := _dfcf.ScopeAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0063\u006fp\u0065"})
		if _afgc != nil {
			return _afgc
		}
		start.Attr = append(start.Attr, _dbbd)
	}
	if _dfcf.TypeAttr != ST_TypeUnset {
		_beeec, _dgfc := _dfcf.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dgfc != nil {
			return _dgfc
		}
		start.Attr = append(start.Attr, _beeec)
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079"}, Value: _fc.Sprintf("\u0025\u0076", _dfcf.PriorityAttr)})
	e.EncodeToken(start)
	_gcebe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}}
	e.EncodeElement(_dfcf.PivotAreas, _gcebe)
	if _dfcf.ExtLst != nil {
		_cgdg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dfcf.ExtLst, _cgdg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Error and its children
func (_efdgf *CT_Error) Validate() error {
	return _efdgf.ValidateWithPath("\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072")
}

type ExternalLink struct{ CT_ExternalLink }

func (_ggdegb *CT_PivotFilters) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bcdba := range start.Attr {
		if _bcdba.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bafda, _beedf := _f.ParseUint(_bcdba.Value, 10, 32)
			if _beedf != nil {
				return _beedf
			}
			_abbc := uint32(_bafda)
			_ggdegb.CountAttr = &_abbc
			continue
		}
	}
_ffgb:
	for {
		_efgdd, _deffe := d.Token()
		if _deffe != nil {
			return _deffe
		}
		switch _fcacfd := _efgdd.(type) {
		case _a.StartElement:
			switch _fcacfd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}:
				_gfefa := NewCT_PivotFilter()
				if _gaacg := d.DecodeElement(_gfefa, &_fcacfd); _gaacg != nil {
					return _gaacg
				}
				_ggdegb.Filter = append(_ggdegb.Filter, _gfefa)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076o\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025\u0076", _fcacfd.Name)
				if _cdaa := d.Skip(); _cdaa != nil {
					return _cdaa
				}
			}
		case _a.EndElement:
			break _ffgb
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CustomFilter and its children
func (_ebbef *CT_CustomFilter) Validate() error {
	return _ebbef.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072")
}

type CT_Workbook struct {

	// Document Conformance Class
	ConformanceAttr _ae.ST_ConformanceClass

	// File Version
	FileVersion *CT_FileVersion

	// File Sharing
	FileSharing *CT_FileSharing

	// Workbook Properties
	WorkbookPr *CT_WorkbookPr

	// Workbook Protection
	WorkbookProtection *CT_WorkbookProtection

	// Workbook Views
	BookViews *CT_BookViews

	// Sheets
	Sheets *CT_Sheets

	// Function Groups
	FunctionGroups *CT_FunctionGroups

	// External References
	ExternalReferences *CT_ExternalReferences

	// Defined Names
	DefinedNames *CT_DefinedNames

	// Calculation Properties
	CalcPr *CT_CalcPr

	// Embedded Object Size
	OleSize *CT_OleSize

	// Custom Workbook Views
	CustomWorkbookViews *CT_CustomWorkbookViews

	// PivotCaches
	PivotCaches *CT_PivotCaches

	// Smart Tag Properties
	SmartTagPr *CT_SmartTagPr

	// Smart Tag Types
	SmartTagTypes *CT_SmartTagTypes

	// Web Publishing Properties
	WebPublishing *CT_WebPublishing

	// File Recovery Properties
	FileRecoveryPr []*CT_FileRecoveryPr

	// Web Publish Objects
	WebPublishObjects *CT_WebPublishObjects

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_CustomSheetView() *CT_CustomSheetView {
	_dffa := &CT_CustomSheetView{}
	_dffa.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _dffa
}

// ValidateWithPath validates the CalcChain and its children, prefixing error messages with path
func (_gcbdd *CalcChain) ValidateWithPath(path string) error {
	if _eaegga := _gcbdd.CT_CalcChain.ValidateWithPath(path); _eaegga != nil {
		return _eaegga
	}
	return nil
}
func (_cedcee *Headers) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0068\u0065\u0061\u0064\u0065\u0072\u0073"
	return _cedcee.CT_RevisionHeaders.MarshalXML(e, start)
}
func NewCT_Field() *CT_Field { _gdaf := &CT_Field{}; return _gdaf }
func (_bbadd ST_ShowDataAs) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bbadd.String(), start)
}

// ValidateWithPath validates the CT_ColFields and its children, prefixing error messages with path
func (_gegbc *CT_ColFields) ValidateWithPath(path string) error {
	for _deee, _ccea := range _gegbc.Field {
		if _efbc := _ccea.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002fF\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _deee)); _efbc != nil {
			return _efbc
		}
	}
	return nil
}

const (
	ST_HtmlFmtUnset ST_HtmlFmt = 0
	ST_HtmlFmtNone  ST_HtmlFmt = 1
	ST_HtmlFmtRtf   ST_HtmlFmt = 2
	ST_HtmlFmtAll   ST_HtmlFmt = 3
)

func NewCT_RevisionFormatting() *CT_RevisionFormatting {
	_gdgeg := &CT_RevisionFormatting{}
	return _gdgeg
}
func (_bfeg *CT_NumFmts) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bfeg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bfeg.CountAttr)})
	}
	e.EncodeToken(start)
	if _bfeg.NumFmt != nil {
		_cgdba := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u006e\u0075\u006d\u0046\u006dt"}}
		for _, _cggeb := range _bfeg.NumFmt {
			e.EncodeElement(_cggeb, _cgdba)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aadgd *CT_SheetIdMap) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gegbd := range start.Attr {
		if _gegbd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fggcg, _gbbdf := _f.ParseUint(_gegbd.Value, 10, 32)
			if _gbbdf != nil {
				return _gbbdf
			}
			_bbeaf := uint32(_fggcg)
			_aadgd.CountAttr = &_bbeaf
			continue
		}
	}
_ecdeg:
	for {
		_ffbdb, _fegcf := d.Token()
		if _fegcf != nil {
			return _fegcf
		}
		switch _ccbdb := _ffbdb.(type) {
		case _a.StartElement:
			switch _ccbdb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}:
				_gabae := NewCT_SheetId()
				if _gbebc := d.DecodeElement(_gabae, &_ccbdb); _gbebc != nil {
					return _gbebc
				}
				_aadgd.SheetId = append(_aadgd.SheetId, _gabae)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070 \u0025\u0076", _ccbdb.Name)
				if _beeee := d.Skip(); _beeee != nil {
					return _beeee
				}
			}
		case _a.EndElement:
			break _ecdeg
		case _a.CharData:
		}
	}
	return nil
}
func (_cefef ST_RefMode) String() string {
	switch _cefef {
	case 0:
		return ""
	case 1:
		return "\u0041\u0031"
	case 2:
		return "\u0052\u0031\u0043\u0031"
	}
	return ""
}

// Validate validates the CT_DdeItem and its children
func (_cbfd *CT_DdeItem) Validate() error {
	return _cbfd.ValidateWithPath("\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d")
}

// ValidateWithPath validates the CT_TableColumns and its children, prefixing error messages with path
func (_geefa *CT_TableColumns) ValidateWithPath(path string) error {
	for _afeab, _edgbc := range _geefa.TableColumn {
		if _egeac := _edgbc.ValidateWithPath(_fc.Sprintf("\u0025s\u002fT\u0061\u0062\u006c\u0065\u0043o\u006c\u0075m\u006e\u005b\u0025\u0064\u005d", path, _afeab)); _egeac != nil {
			return _egeac
		}
	}
	return nil
}
func (_dgbcab *ST_DataValidationImeMode) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ffaddg, _bgcga := d.Token()
	if _bgcga != nil {
		return _bgcga
	}
	if _cdffad, _ccfcdb := _ffaddg.(_a.EndElement); _ccfcdb && _cdffad.Name == start.Name {
		*_dgbcab = 1
		return nil
	}
	if _fafdbd, _eeafac := _ffaddg.(_a.CharData); !_eeafac {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffaddg)
	} else {
		switch string(_fafdbd) {
		case "":
			*_dgbcab = 0
		case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
			*_dgbcab = 1
		case "\u006f\u0066\u0066":
			*_dgbcab = 2
		case "\u006f\u006e":
			*_dgbcab = 3
		case "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064":
			*_dgbcab = 4
		case "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
			*_dgbcab = 5
		case "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
			*_dgbcab = 6
		case "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
			*_dgbcab = 7
		case "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a":
			*_dgbcab = 8
		case "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a":
			*_dgbcab = 9
		case "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c":
			*_dgbcab = 10
		case "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c":
			*_dgbcab = 11
		}
	}
	_ffaddg, _bgcga = d.Token()
	if _bgcga != nil {
		return _bgcga
	}
	if _fcdgb, _dcbdfa := _ffaddg.(_a.EndElement); _dcbdfa && _fcdgb.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffaddg)
}
func NewCT_Missing() *CT_Missing                     { _cdcf := &CT_Missing{}; return _cdcf }
func (_bdgcb ST_DataValidationType) Validate() error { return _bdgcb.ValidateWithPath("") }
func NewCT_FontSize() *CT_FontSize                   { _bacee := &CT_FontSize{}; return _bacee }
func (_caeba *CT_PivotHierarchy) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _caeba.OutlineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_caeba.OutlineAttr))})
	}
	if _caeba.MultipleItemSelectionAllowedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_caeba.MultipleItemSelectionAllowedAttr))})
	}
	if _caeba.SubtotalTopAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_caeba.SubtotalTopAttr))})
	}
	if _caeba.ShowInFieldListAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006fw\u0049\u006e\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_caeba.ShowInFieldListAttr))})
	}
	if _caeba.DragToRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_caeba.DragToRowAttr))})
	}
	if _caeba.DragToColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_caeba.DragToColAttr))})
	}
	if _caeba.DragToPageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_caeba.DragToPageAttr))})
	}
	if _caeba.DragToDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_caeba.DragToDataAttr))})
	}
	if _caeba.DragOffAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064r\u0061\u0067\u004f\u0066\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_caeba.DragOffAttr))})
	}
	if _caeba.IncludeNewItemsInFilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_caeba.IncludeNewItemsInFilterAttr))})
	}
	if _caeba.CaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_caeba.CaptionAttr)})
	}
	e.EncodeToken(start)
	if _caeba.Mps != nil {
		_cggacd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006d\u0070\u0073"}}
		e.EncodeElement(_caeba.Mps, _cggacd)
	}
	if _caeba.Members != nil {
		_cdcgf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006d\u0065\u006d\u0062\u0065\u0072\u0073"}}
		for _, _cadfg := range _caeba.Members {
			e.EncodeElement(_cadfg, _cdcgf)
		}
	}
	if _caeba.ExtLst != nil {
		_cggg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_caeba.ExtLst, _cggg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_TupleCache() *CT_TupleCache { _ebfff := &CT_TupleCache{}; return _ebfff }

// ValidateWithPath validates the CT_BookViews and its children, prefixing error messages with path
func (_ffb *CT_BookViews) ValidateWithPath(path string) error {
	for _ddgd, _dcc := range _ffb.WorkbookView {
		if _bdc := _dcc.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0057or\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _ddgd)); _bdc != nil {
			return _bdc
		}
	}
	return nil
}

type CT_TableStyles struct {

	// Table Style Count
	CountAttr *uint32

	// Default Table Style
	DefaultTableStyleAttr *string

	// Default Pivot Style
	DefaultPivotStyleAttr *string

	// Table Style
	TableStyle []*CT_TableStyle
}

// ValidateWithPath validates the CT_CustomWorkbookViews and its children, prefixing error messages with path
func (_dbgdc *CT_CustomWorkbookViews) ValidateWithPath(path string) error {
	for _agbbg, _fadff := range _dbgdc.CustomWorkbookView {
		if _bcce := _fadff.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0043\u0075\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062o\u006fk\u0056\u0069\u0065\u0077\u005b\u0025\u0064]", path, _agbbg)); _bcce != nil {
			return _bcce
		}
	}
	return nil
}
func NewCT_CfRule() *CT_CfRule { _ddga := &CT_CfRule{}; return _ddga }
func (_ccdca *CT_MemberProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _agcf := range start.Attr {
		if _agcf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bcbcb, _ffgeg := _agcf.Value, error(nil)
			if _ffgeg != nil {
				return _ffgeg
			}
			_ccdca.NameAttr = &_bcbcb
			continue
		}
		if _agcf.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u0065\u006c\u006c" {
			_efag, _bfdcb := _f.ParseBool(_agcf.Value)
			if _bfdcb != nil {
				return _bfdcb
			}
			_ccdca.ShowCellAttr = &_efag
			continue
		}
		if _agcf.Name.Local == "\u0073h\u006f\u0077\u0054\u0069\u0070" {
			_ggfac, _bdbee := _f.ParseBool(_agcf.Value)
			if _bdbee != nil {
				return _bdbee
			}
			_ccdca.ShowTipAttr = &_ggfac
			continue
		}
		if _agcf.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_eacag, _gbaaca := _f.ParseBool(_agcf.Value)
			if _gbaaca != nil {
				return _gbaaca
			}
			_ccdca.ShowAsCaptionAttr = &_eacag
			continue
		}
		if _agcf.Name.Local == "\u006ea\u006d\u0065\u004c\u0065\u006e" {
			_bbabf, _aacacd := _f.ParseUint(_agcf.Value, 10, 32)
			if _aacacd != nil {
				return _aacacd
			}
			_ffffd := uint32(_bbabf)
			_ccdca.NameLenAttr = &_ffffd
			continue
		}
		if _agcf.Name.Local == "\u0070\u0050\u006f\u0073" {
			_aaffba, _dfefe := _f.ParseUint(_agcf.Value, 10, 32)
			if _dfefe != nil {
				return _dfefe
			}
			_acffa := uint32(_aaffba)
			_ccdca.PPosAttr = &_acffa
			continue
		}
		if _agcf.Name.Local == "\u0070\u004c\u0065\u006e" {
			_ebbbb, _bfgeb := _f.ParseUint(_agcf.Value, 10, 32)
			if _bfgeb != nil {
				return _bfgeb
			}
			_dfccg := uint32(_ebbbb)
			_ccdca.PLenAttr = &_dfccg
			continue
		}
		if _agcf.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_cfecdc, _cfged := _f.ParseUint(_agcf.Value, 10, 32)
			if _cfged != nil {
				return _cfged
			}
			_aacfb := uint32(_cfecdc)
			_ccdca.LevelAttr = &_aacfb
			continue
		}
		if _agcf.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_cgbbcg, _afggg := _f.ParseUint(_agcf.Value, 10, 32)
			if _afggg != nil {
				return _afggg
			}
			_ccdca.FieldAttr = uint32(_cgbbcg)
			continue
		}
	}
	for {
		_bgage, _ddgac := d.Token()
		if _ddgac != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079: \u0025\u0073", _ddgac)
		}
		if _acecg, _gebcd := _bgage.(_a.EndElement); _gebcd && _acecg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ChartFormats and its children
func (_adgcf *CT_ChartFormats) Validate() error {
	return _adgcf.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

type CT_ExternalSheetDataSet struct {

	// External Sheet Data Set
	SheetData []*CT_ExternalSheetData
}

// ValidateWithPath validates the CT_Revisions and its children, prefixing error messages with path
func (_ddfae *CT_Revisions) ValidateWithPath(path string) error {
	for _fgbda, _dfcec := range _ddfae.Rrc {
		if _ddeed := _dfcec.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u0072\u0063\u005b\u0025\u0064\u005d", path, _fgbda)); _ddeed != nil {
			return _ddeed
		}
	}
	for _fceac, _daadd := range _ddfae.Rm {
		if _egeef := _daadd.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0052\u006d\u005b\u0025\u0064]", path, _fceac)); _egeef != nil {
			return _egeef
		}
	}
	for _gefefg, _gadbga := range _ddfae.Rcv {
		if _abaed := _gadbga.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0076\u005b\u0025\u0064\u005d", path, _gefefg)); _abaed != nil {
			return _abaed
		}
	}
	for _cggcd, _ecbge := range _ddfae.Rsnm {
		if _bdaed := _ecbge.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0052\u0073\u006e\u006d\u005b\u0025\u0064\u005d", path, _cggcd)); _bdaed != nil {
			return _bdaed
		}
	}
	for _bbcfb, _ggdca := range _ddfae.Ris {
		if _fgaaab := _ggdca.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u0069\u0073\u005b\u0025\u0064\u005d", path, _bbcfb)); _fgaaab != nil {
			return _fgaaab
		}
	}
	for _decgeg, _bbcfg := range _ddfae.Rcc {
		if _fedaaf := _bbcfg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _decgeg)); _fedaaf != nil {
			return _fedaaf
		}
	}
	for _fcecdc, _gaacf := range _ddfae.Rfmt {
		if _fgeed := _gaacf.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _fcecdc)); _fgeed != nil {
			return _fgeed
		}
	}
	for _gafebe, _fedgg := range _ddfae.Raf {
		if _decgg := _fedgg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u0061\u0066\u005b\u0025\u0064\u005d", path, _gafebe)); _decgg != nil {
			return _decgg
		}
	}
	for _cdcfc, _aaagd := range _ddfae.Rdn {
		if _aeecc := _aaagd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u0064\u006e\u005b\u0025\u0064\u005d", path, _cdcfc)); _aeecc != nil {
			return _aeecc
		}
	}
	for _deebc, _daacdg := range _ddfae.Rcmt {
		if _babcc := _daacdg.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0052\u0063\u006d\u0074\u005b\u0025\u0064\u005d", path, _deebc)); _babcc != nil {
			return _babcc
		}
	}
	for _gdgdge, _aaccf := range _ddfae.Rqt {
		if _ebgcg := _aaccf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u0071\u0074\u005b\u0025\u0064\u005d", path, _gdgdge)); _ebgcg != nil {
			return _ebgcg
		}
	}
	for _gbged, _defcd := range _ddfae.Rcft {
		if _cebbg := _defcd.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0052\u0063\u0066\u0074\u005b\u0025\u0064\u005d", path, _gbged)); _cebbg != nil {
			return _cebbg
		}
	}
	return nil
}
func (_bddda ST_DataValidationErrorStyle) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bddda.String(), start)
}

type CT_OleItems struct {

	// Object Link Item
	OleItem []*CT_OleItem
}

// ValidateWithPath validates the CT_Dimensions and its children, prefixing error messages with path
func (_ddce *CT_Dimensions) ValidateWithPath(path string) error {
	for _abcfb, _cfegb := range _ddce.Dimension {
		if _cfeed := _cfegb.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0044\u0069\u006de\u006e\u0073\u0069\u006f\u006e\u005b\u0025\u0064\u005d", path, _abcfb)); _cfeed != nil {
			return _cfeed
		}
	}
	return nil
}
func NewCT_XmlColumnPr() *CT_XmlColumnPr { _eafgg := &CT_XmlColumnPr{}; return _eafgg }

// Validate validates the CT_XmlCellPr and its children
func (_bgcb *CT_XmlCellPr) Validate() error {
	return _bgcb.ValidateWithPath("\u0043\u0054\u005fX\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072")
}
func NewCT_Dxfs() *CT_Dxfs { _gdgae := &CT_Dxfs{}; return _gdgae }
func (_adgbc *CT_SmartTagTypes) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_abace:
	for {
		_bfgde, _aegcf := d.Token()
		if _aegcf != nil {
			return _aegcf
		}
		switch _bgab := _bfgde.(type) {
		case _a.StartElement:
			switch _bgab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}:
				_ebfee := NewCT_SmartTagType()
				if _fcdbef := d.DecodeElement(_ebfee, &_bgab); _fcdbef != nil {
					return _fcdbef
				}
				_adgbc.SmartTagType = append(_adgbc.SmartTagType, _ebfee)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073\u0020\u0025v", _bgab.Name)
				if _bbfad := d.Skip(); _bbfad != nil {
					return _bbfad
				}
			}
		case _a.EndElement:
			break _abace
		case _a.CharData:
		}
	}
	return nil
}
func (_edffd *CT_PivotField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eagfcc := range start.Attr {
		if _eagfcc.Name.Local == "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u0069\u006c\u0074\u0065\u0072" {
			_dbfd, _fcebf := _f.ParseBool(_eagfcc.Value)
			if _fcebf != nil {
				return _fcebf
			}
			_edffd.MeasureFilterAttr = &_dbfd
			continue
		}
		if _eagfcc.Name.Local == "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072" {
			_bgedf, _fcebeg := _f.ParseBool(_eagfcc.Value)
			if _fcebeg != nil {
				return _fcebeg
			}
			_edffd.IncludeNewItemsInFilterAttr = &_bgedf
			continue
		}
		if _eagfcc.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_bdda, _ageed := _f.ParseBool(_eagfcc.Value)
			if _ageed != nil {
				return _ageed
			}
			_edffd.CompactAttr = &_bdda
			continue
		}
		if _eagfcc.Name.Local == "\u0069\u0074\u0065\u006d\u0050\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_eabge, _cgegf := _f.ParseUint(_eagfcc.Value, 10, 32)
			if _cgegf != nil {
				return _cgegf
			}
			_dbffg := uint32(_eabge)
			_edffd.ItemPageCountAttr = &_dbffg
			continue
		}
		if _eagfcc.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_acacc, _agdba := _f.ParseUint(_eagfcc.Value, 10, 32)
			if _agdba != nil {
				return _agdba
			}
			_fcgeb := uint32(_acacc)
			_edffd.NumFmtIdAttr = &_fcgeb
			continue
		}
		if _eagfcc.Name.Local == "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065" {
			_edffd.SortTypeAttr.UnmarshalXMLAttr(_eagfcc)
			continue
		}
		if _eagfcc.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_ecgfda, _cgffce := _f.ParseBool(_eagfcc.Value)
			if _cgffce != nil {
				return _cgffce
			}
			_edffd.OutlineAttr = &_ecgfda
			continue
		}
		if _eagfcc.Name.Local == "\u0064\u0061\u0074\u0061\u0053\u006f\u0075\u0072\u0063e\u0053\u006f\u0072\u0074" {
			_aedbf, _agdbga := _f.ParseBool(_eagfcc.Value)
			if _agdbga != nil {
				return _agdbga
			}
			_edffd.DataSourceSortAttr = &_aedbf
			continue
		}
		if _eagfcc.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw" {
			_ccbdg, _gebdd := _f.ParseBool(_eagfcc.Value)
			if _gebdd != nil {
				return _gebdd
			}
			_edffd.DragToRowAttr = &_ccbdg
			continue
		}
		if _eagfcc.Name.Local == "\u006eo\u006eA\u0075\u0074\u006f\u0053\u006fr\u0074\u0044e\u0066\u0061\u0075\u006c\u0074" {
			_bagcdc, _dcfad := _f.ParseBool(_eagfcc.Value)
			if _dcfad != nil {
				return _dcfad
			}
			_edffd.NonAutoSortDefaultAttr = &_bagcdc
			continue
		}
		if _eagfcc.Name.Local == "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064" {
			_cffgea, _gcddb := _f.ParseBool(_eagfcc.Value)
			if _gcddb != nil {
				return _gcddb
			}
			_edffd.MultipleItemSelectionAllowedAttr = &_cffgea
			continue
		}
		if _eagfcc.Name.Local == "\u0072\u0061\u006e\u006b\u0042\u0079" {
			_gbeaga, _dbbdc := _f.ParseUint(_eagfcc.Value, 10, 32)
			if _dbbdc != nil {
				return _dbbdc
			}
			_abacb := uint32(_gbeaga)
			_edffd.RankByAttr = &_abacb
			continue
		}
		if _eagfcc.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_ccbcba, _dgacc := _f.ParseBool(_eagfcc.Value)
			if _dgacc != nil {
				return _dgacc
			}
			_edffd.StdDevSubtotalAttr = &_ccbcba
			continue
		}
		if _eagfcc.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_edgeg, _caeebd := _f.ParseBool(_eagfcc.Value)
			if _caeebd != nil {
				return _caeebd
			}
			_edffd.CountASubtotalAttr = &_edgeg
			continue
		}
		if _eagfcc.Name.Local == "\u0061\u0075\u0074\u006f\u0053\u0068\u006f\u0077" {
			_faabb, _fagda := _f.ParseBool(_eagfcc.Value)
			if _fagda != nil {
				return _fagda
			}
			_edffd.AutoShowAttr = &_faabb
			continue
		}
		if _eagfcc.Name.Local == "\u0073\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0041\u0073\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_bfdfg, _effe := _f.ParseBool(_eagfcc.Value)
			if _effe != nil {
				return _effe
			}
			_edffd.ShowPropAsCaptionAttr = &_bfdfg
			continue
		}
		if _eagfcc.Name.Local == "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cbdec, _dbgac := _f.ParseBool(_eagfcc.Value)
			if _dbgac != nil {
				return _dbgac
			}
			_edffd.ProductSubtotalAttr = &_cbdec
			continue
		}
		if _eagfcc.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065" {
			_cdgcbg, _eafgf := _f.ParseBool(_eagfcc.Value)
			if _eafgf != nil {
				return _eafgf
			}
			_edffd.DragToPageAttr = &_cdgcbg
			continue
		}
		if _eagfcc.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_facdc, _bcbffgc := _f.ParseBool(_eagfcc.Value)
			if _bcbffgc != nil {
				return _bcbffgc
			}
			_edffd.DefaultSubtotalAttr = &_facdc
			continue
		}
		if _eagfcc.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061" {
			_faccdd, _cfafab := _f.ParseBool(_eagfcc.Value)
			if _cfafab != nil {
				return _cfafab
			}
			_edffd.DragToDataAttr = &_faccdd
			continue
		}
		if _eagfcc.Name.Local == "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cagef, _gbeddf := _f.ParseBool(_eagfcc.Value)
			if _gbeddf != nil {
				return _gbeddf
			}
			_edffd.MaxSubtotalAttr = &_cagef
			continue
		}
		if _eagfcc.Name.Local == "\u0068\u0069\u0064e\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073" {
			_cfcee, _acadc := _f.ParseBool(_eagfcc.Value)
			if _acadc != nil {
				return _acadc
			}
			_edffd.HideNewItemsAttr = &_cfcee
			continue
		}
		if _eagfcc.Name.Local == "\u0073\u0068\u006fw\u0050\u0072\u006f\u0070\u0043\u0065\u006c\u006c" {
			_bcgcg, _eabdc := _f.ParseBool(_eagfcc.Value)
			if _eabdc != nil {
				return _eabdc
			}
			_edffd.ShowPropCellAttr = &_bcgcg
			continue
		}
		if _eagfcc.Name.Local == "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070" {
			_eaeag, _dfebd := _f.ParseBool(_eagfcc.Value)
			if _dfebd != nil {
				return _dfebd
			}
			_edffd.SubtotalTopAttr = &_eaeag
			continue
		}
		if _eagfcc.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064" {
			_dagee, _adfad := _f.ParseBool(_eagfcc.Value)
			if _adfad != nil {
				return _adfad
			}
			_edffd.ServerFieldAttr = &_dagee
			continue
		}
		if _eagfcc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_begg, _edbdc := _eagfcc.Value, error(nil)
			if _edbdc != nil {
				return _edbdc
			}
			_edffd.NameAttr = &_begg
			continue
		}
		if _eagfcc.Name.Local == "\u0069n\u0073e\u0072\u0074\u0050\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b" {
			_dfega, _cecfee := _f.ParseBool(_eagfcc.Value)
			if _cecfee != nil {
				return _cecfee
			}
			_edffd.InsertPageBreakAttr = &_dfega
			continue
		}
		if _eagfcc.Name.Local == "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gfgcf, _daggf := _f.ParseBool(_eagfcc.Value)
			if _daggf != nil {
				return _daggf
			}
			_edffd.SumSubtotalAttr = &_gfgcf
			continue
		}
		if _eagfcc.Name.Local == "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd" {
			_gbege, _ddfd := _f.ParseBool(_eagfcc.Value)
			if _ddfd != nil {
				return _ddfd
			}
			_edffd.DataFieldAttr = &_gbege
			continue
		}
		if _eagfcc.Name.Local == "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dbgfd, _abdgfb := _f.ParseBool(_eagfcc.Value)
			if _abdgfb != nil {
				return _abdgfb
			}
			_edffd.AvgSubtotalAttr = &_dbgfd
			continue
		}
		if _eagfcc.Name.Local == "t\u006f\u0070\u0041\u0075\u0074\u006f\u0053\u0068\u006f\u0077" {
			_cadae, _addb := _f.ParseBool(_eagfcc.Value)
			if _addb != nil {
				return _addb
			}
			_edffd.TopAutoShowAttr = &_cadae
			continue
		}
		if _eagfcc.Name.Local == "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_edbe, _fbfcb := _f.ParseBool(_eagfcc.Value)
			if _fbfcb != nil {
				return _fbfcb
			}
			_edffd.MinSubtotalAttr = &_edbe
			continue
		}
		if _eagfcc.Name.Local == "\u0064r\u0061\u0067\u004f\u0066\u0066" {
			_dfegfa, _cgddc := _f.ParseBool(_eagfcc.Value)
			if _cgddc != nil {
				return _cgddc
			}
			_edffd.DragOffAttr = &_dfegfa
			continue
		}
		if _eagfcc.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bcgae, _edgfba := _f.ParseBool(_eagfcc.Value)
			if _edgfba != nil {
				return _edgfba
			}
			_edffd.CountSubtotalAttr = &_bcgae
			continue
		}
		if _eagfcc.Name.Local == "u\u006ei\u0071\u0075\u0065\u004d\u0065\u006d\u0062\u0065r\u0050\u0072\u006f\u0070er\u0074\u0079" {
			_cefdg, _bfebd := _eagfcc.Value, error(nil)
			if _bfebd != nil {
				return _bfebd
			}
			_edffd.UniqueMemberPropertyAttr = &_cefdg
			continue
		}
		if _eagfcc.Name.Local == "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dgfee, _bgfbb := _f.ParseBool(_eagfcc.Value)
			if _bgfbb != nil {
				return _bgfbb
			}
			_edffd.VarPSubtotalAttr = &_dgfee
			continue
		}
		if _eagfcc.Name.Local == "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_ceeade, _aeffb := _f.ParseBool(_eagfcc.Value)
			if _aeffb != nil {
				return _aeffb
			}
			_edffd.StdDevPSubtotalAttr = &_ceeade
			continue
		}
		if _eagfcc.Name.Local == "\u0073u\u0062t\u006f\u0074\u0061\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_bbafe, _fcdac := _eagfcc.Value, error(nil)
			if _fcdac != nil {
				return _fcdac
			}
			_edffd.SubtotalCaptionAttr = &_bbafe
			continue
		}
		if _eagfcc.Name.Local == "s\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0054\u0069\u0070" {
			_dgeca, _bfgfa := _f.ParseBool(_eagfcc.Value)
			if _bfgfa != nil {
				return _bfgfa
			}
			_edffd.ShowPropTipAttr = &_dgeca
			continue
		}
		if _eagfcc.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0042\u006c\u0061n\u006b\u0052\u006f\u0077" {
			_aaggcf, _fffa := _f.ParseBool(_eagfcc.Value)
			if _fffa != nil {
				return _fffa
			}
			_edffd.InsertBlankRowAttr = &_aaggcf
			continue
		}
		if _eagfcc.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0041\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0044\u0072\u0069\u006c\u006c\u0053t\u0061\u0074\u0065" {
			_dcggf, _dddfd := _f.ParseBool(_eagfcc.Value)
			if _dddfd != nil {
				return _dddfd
			}
			_edffd.DefaultAttributeDrillStateAttr = &_dcggf
			continue
		}
		if _eagfcc.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl" {
			_abbag, _eeffed := _f.ParseBool(_eagfcc.Value)
			if _eeffed != nil {
				return _eeffed
			}
			_edffd.DragToColAttr = &_abbag
			continue
		}
		if _eagfcc.Name.Local == "h\u0069\u0064\u0064\u0065\u006e\u004c\u0065\u0076\u0065\u006c" {
			_ddbdf, _bacdd := _f.ParseBool(_eagfcc.Value)
			if _bacdd != nil {
				return _bacdd
			}
			_edffd.HiddenLevelAttr = &_ddbdf
			continue
		}
		if _eagfcc.Name.Local == "\u0061\u0078\u0069\u0073" {
			_edffd.AxisAttr.UnmarshalXMLAttr(_eagfcc)
			continue
		}
		if _eagfcc.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e\u0073" {
			_ffaab, _bedeef := _f.ParseBool(_eagfcc.Value)
			if _bedeef != nil {
				return _bedeef
			}
			_edffd.ShowDropDownsAttr = &_ffaab
			continue
		}
		if _eagfcc.Name.Local == "\u0073h\u006f\u0077\u0041\u006c\u006c" {
			_aadaf, _cdcbb := _f.ParseBool(_eagfcc.Value)
			if _cdcbb != nil {
				return _cdcbb
			}
			_edffd.ShowAllAttr = &_aadaf
			continue
		}
		if _eagfcc.Name.Local == "\u0061\u006c\u006c\u0044\u0072\u0069\u006c\u006c\u0065\u0064" {
			_efcca, _bcgfc := _f.ParseBool(_eagfcc.Value)
			if _bcgfc != nil {
				return _bcgfc
			}
			_edffd.AllDrilledAttr = &_efcca
			continue
		}
		if _eagfcc.Name.Local == "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gbabe, _abbed := _f.ParseBool(_eagfcc.Value)
			if _abbed != nil {
				return _abbed
			}
			_edffd.VarSubtotalAttr = &_gbabe
			continue
		}
	}
_ecfcb:
	for {
		_gedac, _gbfbb := d.Token()
		if _gbfbb != nil {
			return _gbfbb
		}
		switch _fabgd := _gedac.(type) {
		case _a.StartElement:
			switch _fabgd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065m\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065m\u0073"}:
				_edffd.Items = NewCT_Items()
				if _abcca := d.DecodeElement(_edffd.Items, &_fabgd); _abcca != nil {
					return _abcca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}:
				_edffd.AutoSortScope = NewCT_AutoSortScope()
				if _eegadb := d.DecodeElement(_edffd.AutoSortScope, &_fabgd); _eegadb != nil {
					return _eegadb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edffd.ExtLst = NewCT_ExtensionList()
				if _ffgfa := d.DecodeElement(_edffd.ExtLst, &_fabgd); _ffgfa != nil {
					return _ffgfa
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050i\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064 \u0025\u0076", _fabgd.Name)
				if _fcfeb := d.Skip(); _fcfeb != nil {
					return _fcfeb
				}
			}
		case _a.EndElement:
			break _ecfcb
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SharedItems and its children, prefixing error messages with path
func (_dfacc *CT_SharedItems) ValidateWithPath(path string) error {
	for _befbg, _bgadg := range _dfacc.M {
		if _cgeadf := _bgadg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _befbg)); _cgeadf != nil {
			return _cgeadf
		}
	}
	for _gegec, _dgfbg := range _dfacc.N {
		if _fdfbac := _dgfbg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _gegec)); _fdfbac != nil {
			return _fdfbac
		}
	}
	for _abagb, _cbdaec := range _dfacc.B {
		if _dfbfg := _cbdaec.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _abagb)); _dfbfg != nil {
			return _dfbfg
		}
	}
	for _ggffdb, _dbeaa := range _dfacc.E {
		if _bbdcg := _dbeaa.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _ggffdb)); _bbdcg != nil {
			return _bbdcg
		}
	}
	for _cgefd, _ebgae := range _dfacc.S {
		if _cgcagb := _ebgae.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _cgefd)); _cgcagb != nil {
			return _cgcagb
		}
	}
	for _ebcga, _adfbc := range _dfacc.D {
		if _egbb := _adfbc.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _ebcga)); _egbb != nil {
			return _egbb
		}
	}
	return nil
}
func (_ccacd *CT_UnderlineProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afcgg := range start.Attr {
		if _afcgg.Name.Local == "\u0076\u0061\u006c" {
			_ccacd.ValAttr.UnmarshalXMLAttr(_afcgg)
			continue
		}
	}
	for {
		_gbddeb, _aafcaa := d.Token()
		if _aafcaa != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0055\u006e\u0064\u0065r\u006ci\u006e\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u003a\u0020\u0025\u0073", _aafcaa)
		}
		if _fedfd, _dafec := _gbddeb.(_a.EndElement); _dafec && _fedfd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SheetProtection struct {

	// Legacy Password
	PasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Sheet Locked
	SheetAttr *bool

	// Objects Locked
	ObjectsAttr *bool

	// Scenarios Locked
	ScenariosAttr *bool

	// Format Cells Locked
	FormatCellsAttr *bool

	// Format Columns Locked
	FormatColumnsAttr *bool

	// Format Rows Locked
	FormatRowsAttr *bool

	// Insert Columns Locked
	InsertColumnsAttr *bool

	// Insert Rows Locked
	InsertRowsAttr *bool

	// Insert Hyperlinks Locked
	InsertHyperlinksAttr *bool

	// Delete Columns Locked
	DeleteColumnsAttr *bool

	// Delete Rows Locked
	DeleteRowsAttr *bool

	// Select Locked Cells Locked
	SelectLockedCellsAttr *bool

	// Sort Locked
	SortAttr *bool

	// AutoFilter Locked
	AutoFilterAttr *bool

	// Pivot Tables Locked
	PivotTablesAttr *bool

	// Select Unlocked Cells Locked
	SelectUnlockedCellsAttr *bool
}

func NewCT_ExternalReference() *CT_ExternalReference {
	_fegga := &CT_ExternalReference{}
	return _fegga
}

// Validate validates the CT_MeasureGroups and its children
func (_dbfgf *CT_MeasureGroups) Validate() error {
	return _dbfgf.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073")
}
func (_ebbdg *CT_PivotTableStyle) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eaacd := range start.Attr {
		if _eaacd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_agfagg, _bbcef := _eaacd.Value, error(nil)
			if _bbcef != nil {
				return _bbcef
			}
			_ebbdg.NameAttr = &_agfagg
			continue
		}
		if _eaacd.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_aacbf, _gfde := _f.ParseBool(_eaacd.Value)
			if _gfde != nil {
				return _gfde
			}
			_ebbdg.ShowRowHeadersAttr = &_aacbf
			continue
		}
		if _eaacd.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_cffcb, _eeegf := _f.ParseBool(_eaacd.Value)
			if _eeegf != nil {
				return _eeegf
			}
			_ebbdg.ShowColHeadersAttr = &_cffcb
			continue
		}
		if _eaacd.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_gecda, _afgcf := _f.ParseBool(_eaacd.Value)
			if _afgcf != nil {
				return _afgcf
			}
			_ebbdg.ShowRowStripesAttr = &_gecda
			continue
		}
		if _eaacd.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_bgfbg, _dcgefc := _f.ParseBool(_eaacd.Value)
			if _dcgefc != nil {
				return _dcgefc
			}
			_ebbdg.ShowColStripesAttr = &_bgfbg
			continue
		}
		if _eaacd.Name.Local == "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e" {
			_cfddf, _abfdbg := _f.ParseBool(_eaacd.Value)
			if _abfdbg != nil {
				return _abfdbg
			}
			_ebbdg.ShowLastColumnAttr = &_cfddf
			continue
		}
	}
	for {
		_eggba, _edebb := d.Token()
		if _edebb != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0050\u0069\u0076\u006f\u0074\u0054\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u003a\u0020\u0025\u0073", _edebb)
		}
		if _eccbec, _degec := _eggba.(_a.EndElement); _degec && _eccbec.Name == start.Name {
			break
		}
	}
	return nil
}
func (_caafab *CT_Sheets) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_bdgfea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074"}}
	for _, _fgaab := range _caafab.Sheet {
		e.EncodeElement(_fgaab, _bdgfea)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_afb *CT_AutoFilter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _afb.RefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_afb.RefAttr)})
	}
	e.EncodeToken(start)
	if _afb.FilterColumn != nil {
		_bge := _a.StartElement{Name: _a.Name{Local: "\u006da\u003af\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}}
		for _, _dce := range _afb.FilterColumn {
			e.EncodeElement(_dce, _bge)
		}
	}
	if _afb.SortState != nil {
		_ea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_afb.SortState, _ea)
	}
	if _afb.ExtLst != nil {
		_fcge := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_afb.ExtLst, _fcge)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bfdgg *ST_CfvoType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bfdgg = 0
	case "\u006e\u0075\u006d":
		*_bfdgg = 1
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_bfdgg = 2
	case "\u006d\u0061\u0078":
		*_bfdgg = 3
	case "\u006d\u0069\u006e":
		*_bfdgg = 4
	case "\u0066o\u0072\u006d\u0075\u006c\u0061":
		*_bfdgg = 5
	case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065":
		*_bfdgg = 6
	}
	return nil
}
func (_afce *CT_CellAlignment) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _afce.HorizontalAttr != ST_HorizontalAlignmentUnset {
		_bba, _dafe := _afce.HorizontalAttr.MarshalXMLAttr(_a.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"})
		if _dafe != nil {
			return _dafe
		}
		start.Attr = append(start.Attr, _bba)
	}
	if _afce.VerticalAttr != ST_VerticalAlignmentUnset {
		_aef, _bddcd := _afce.VerticalAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"})
		if _bddcd != nil {
			return _bddcd
		}
		start.Attr = append(start.Attr, _aef)
	}
	if _afce.TextRotationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0065\u0078t\u0052\u006f\u0074\u0061\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_afce.TextRotationAttr)})
	}
	if _afce.WrapTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u0072\u0061\u0070\u0054\u0065\u0078\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afce.WrapTextAttr))})
	}
	if _afce.IndentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_afce.IndentAttr)})
	}
	if _afce.RelativeIndentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0049n\u0064\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_afce.RelativeIndentAttr)})
	}
	if _afce.JustifyLastLineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006au\u0073t\u0069\u0066\u0079\u004c\u0061\u0073\u0074\u004c\u0069\u006e\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afce.JustifyLastLineAttr))})
	}
	if _afce.ShrinkToFitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068\u0072\u0069\u006e\u006b\u0054\u006f\u0046\u0069\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afce.ShrinkToFitAttr))})
	}
	if _afce.ReadingOrderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0061d\u0069\u006e\u0067\u004f\u0072\u0064\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_afce.ReadingOrderAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dcddeeb *ST_CredMethod) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dcddeeb = 0
	case "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064":
		*_dcddeeb = 1
	case "\u006e\u006f\u006e\u0065":
		*_dcddeeb = 2
	case "\u0073\u0074\u006f\u0072\u0065\u0064":
		*_dcddeeb = 3
	case "\u0070\u0072\u006f\u006d\u0070\u0074":
		*_dcddeeb = 4
	}
	return nil
}
func NewCT_DefinedName() *CT_DefinedName { _aadgb := &CT_DefinedName{}; return _aadgb }
func (_fgafd *ST_DataValidationType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_adgffe, _efccg := d.Token()
	if _efccg != nil {
		return _efccg
	}
	if _dcffge, _aefcd := _adgffe.(_a.EndElement); _aefcd && _dcffge.Name == start.Name {
		*_fgafd = 1
		return nil
	}
	if _gbbea, _ccbbb := _adgffe.(_a.CharData); !_ccbbb {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adgffe)
	} else {
		switch string(_gbbea) {
		case "":
			*_fgafd = 0
		case "\u006e\u006f\u006e\u0065":
			*_fgafd = 1
		case "\u0077\u0068\u006fl\u0065":
			*_fgafd = 2
		case "\u0064e\u0063\u0069\u006d\u0061\u006c":
			*_fgafd = 3
		case "\u006c\u0069\u0073\u0074":
			*_fgafd = 4
		case "\u0064\u0061\u0074\u0065":
			*_fgafd = 5
		case "\u0074\u0069\u006d\u0065":
			*_fgafd = 6
		case "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068":
			*_fgafd = 7
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_fgafd = 8
		}
	}
	_adgffe, _efccg = d.Token()
	if _efccg != nil {
		return _efccg
	}
	if _bgebd, _deddg := _adgffe.(_a.EndElement); _deddg && _bgebd.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adgffe)
}

// ValidateWithPath validates the CT_ExternalBook and its children, prefixing error messages with path
func (_acgcc *CT_ExternalBook) ValidateWithPath(path string) error {
	if _acgcc.SheetNames != nil {
		if _ebdc := _acgcc.SheetNames.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"); _ebdc != nil {
			return _ebdc
		}
	}
	if _acgcc.DefinedNames != nil {
		if _abgbg := _acgcc.DefinedNames.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"); _abgbg != nil {
			return _abgbg
		}
	}
	if _acgcc.SheetDataSet != nil {
		if _fcfgb := _acgcc.SheetDataSet.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"); _fcfgb != nil {
			return _fcfgb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MeasureGroup and its children, prefixing error messages with path
func (_cfbcg *CT_MeasureGroup) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Xf and its children
func (_ccdfa *CT_Xf) Validate() error { return _ccdfa.ValidateWithPath("\u0043\u0054\u005fX\u0066") }

// ValidateWithPath validates the CT_SheetData and its children, prefixing error messages with path
func (_aeagc *CT_SheetData) ValidateWithPath(path string) error {
	for _bedcg, _cggcdf := range _aeagc.Row {
		if _bafbfa := _cggcdf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u006f\u0077\u005b\u0025\u0064\u005d", path, _bedcg)); _bafbfa != nil {
			return _bafbfa
		}
	}
	return nil
}

const (
	ST_UnderlineValuesUnset            ST_UnderlineValues = 0
	ST_UnderlineValuesSingle           ST_UnderlineValues = 1
	ST_UnderlineValuesDouble           ST_UnderlineValues = 2
	ST_UnderlineValuesSingleAccounting ST_UnderlineValues = 3
	ST_UnderlineValuesDoubleAccounting ST_UnderlineValues = 4
	ST_UnderlineValuesNone             ST_UnderlineValues = 5
)

func (_ddedc *CT_WebPublishItem) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ddedc.SourceTypeAttr = ST_WebSourceType(1)
	for _, _aeegd := range start.Attr {
		if _aeegd.Name.Local == "\u0069\u0064" {
			_fgdbg, _degff := _f.ParseUint(_aeegd.Value, 10, 32)
			if _degff != nil {
				return _degff
			}
			_ddedc.IdAttr = uint32(_fgdbg)
			continue
		}
		if _aeegd.Name.Local == "\u0064\u0069\u0076I\u0064" {
			_abaffc, _cadgfb := _aeegd.Value, error(nil)
			if _cadgfb != nil {
				return _cadgfb
			}
			_ddedc.DivIdAttr = _abaffc
			continue
		}
		if _aeegd.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065" {
			_ddedc.SourceTypeAttr.UnmarshalXMLAttr(_aeegd)
			continue
		}
		if _aeegd.Name.Local == "\u0073o\u0075\u0072\u0063\u0065\u0052\u0065f" {
			_bface, _dbacae := _aeegd.Value, error(nil)
			if _dbacae != nil {
				return _dbacae
			}
			_ddedc.SourceRefAttr = &_bface
			continue
		}
		if _aeegd.Name.Local == "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074" {
			_ebeeb, _faeeg := _aeegd.Value, error(nil)
			if _faeeg != nil {
				return _faeeg
			}
			_ddedc.SourceObjectAttr = &_ebeeb
			continue
		}
		if _aeegd.Name.Local == "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065" {
			_abggcf, _fdcgfe := _aeegd.Value, error(nil)
			if _fdcgfe != nil {
				return _fdcgfe
			}
			_ddedc.DestinationFileAttr = _abggcf
			continue
		}
		if _aeegd.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_bbdcgf, _fcgda := _aeegd.Value, error(nil)
			if _fcgda != nil {
				return _fcgda
			}
			_ddedc.TitleAttr = &_bbdcgf
			continue
		}
		if _aeegd.Name.Local == "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068" {
			_fcbga, _deedb := _f.ParseBool(_aeegd.Value)
			if _deedb != nil {
				return _deedb
			}
			_ddedc.AutoRepublishAttr = &_fcbga
			continue
		}
	}
	for {
		_ggbgd, _bbed := d.Token()
		if _bbed != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d: \u0025\u0073", _bbed)
		}
		if _gceag, _bcfe := _ggbgd.(_a.EndElement); _bcfe && _gceag.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CustomChartsheetViews struct {

	// Custom Chart Sheet View
	CustomSheetView []*CT_CustomChartsheetView
}

func (_gdcbd ST_PivotAreaType) Validate() error { return _gdcbd.ValidateWithPath("") }
func (_dafbgb ST_SheetState) ValidateWithPath(path string) error {
	switch _dafbgb {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dafbgb))
	}
	return nil
}
func (_cadab ST_TotalsRowFunction) ValidateWithPath(path string) error {
	switch _cadab {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cadab))
	}
	return nil
}
func (_bffbf *ST_CellFormulaType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bffbf = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_bffbf = 1
	case "\u0061\u0072\u0072a\u0079":
		*_bffbf = 2
	case "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce":
		*_bffbf = 3
	case "\u0073\u0068\u0061\u0072\u0065\u0064":
		*_bffbf = 4
	}
	return nil
}

type CT_GradientStop struct {

	// Gradient Stop Position
	PositionAttr float64

	// Color
	Color *CT_Color
}

// ValidateWithPath validates the CT_Colors and its children, prefixing error messages with path
func (_dddd *CT_Colors) ValidateWithPath(path string) error {
	if _dddd.IndexedColors != nil {
		if _fgfg := _dddd.IndexedColors.ValidateWithPath(path + "\u002f\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0043o\u006c\u006f\u0072\u0073"); _fgfg != nil {
			return _fgfg
		}
	}
	if _dddd.MruColors != nil {
		if _dgdea := _dddd.MruColors.ValidateWithPath(path + "\u002f\u004d\u0072\u0075\u0043\u006f\u006c\u006f\u0072\u0073"); _dgdea != nil {
			return _dgdea
		}
	}
	return nil
}
func (_dgbefa *ST_SheetViewType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dgbefa = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_dgbefa = 1
	case "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077":
		*_dgbefa = 2
	case "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074":
		*_dgbefa = 3
	}
	return nil
}
func (_bgba *CT_CellStyleXfs) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bgba.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bgba.CountAttr)})
	}
	e.EncodeToken(start)
	_bbad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ax\u0066"}}
	for _, _afdc := range _bgba.Xf {
		e.EncodeElement(_afdc, _bbad)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Fonts struct {

	// Font Count
	CountAttr *uint32

	// Font
	Font []*CT_Font
}

// Validate validates the CT_ExternalDefinedName and its children
func (_afadd *CT_ExternalDefinedName) Validate() error {
	return _afadd.ValidateWithPath("\u0043\u0054\u005f\u0045xt\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065")
}
func NewCT_Boolean() *CT_Boolean { _gbfa := &CT_Boolean{}; return _gbfa }
func (_gefc *Revisions) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003ar\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073"
	return _gefc.CT_Revisions.MarshalXML(e, start)
}
func NewCT_Drawing() *CT_Drawing { _cffg := &CT_Drawing{}; return _cffg }
func (_ffcffd *CT_PivotAreaReferences) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbefe := range start.Attr {
		if _fbefe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_daebfg, _acdacb := _f.ParseUint(_fbefe.Value, 10, 32)
			if _acdacb != nil {
				return _acdacb
			}
			_dfgbbe := uint32(_daebfg)
			_ffcffd.CountAttr = &_dfgbbe
			continue
		}
	}
_fbcfa:
	for {
		_fgfab, _fgdef := d.Token()
		if _fgdef != nil {
			return _fgdef
		}
		switch _agdbg := _fgfab.(type) {
		case _a.StartElement:
			switch _agdbg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0066\u0065\u0072\u0065\u006e\u0063e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0066\u0065\u0072\u0065\u006e\u0063e"}:
				_bdacb := NewCT_PivotAreaReference()
				if _gabagf := d.DecodeElement(_bdacb, &_agdbg); _gabagf != nil {
					return _gabagf
				}
				_ffcffd.Reference = append(_ffcffd.Reference, _bdacb)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0069\u0076\u006ft\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073\u0020\u0025\u0076", _agdbg.Name)
				if _gfbbc := d.Skip(); _gfbbc != nil {
					return _gfbbc
				}
			}
		case _a.EndElement:
			break _fbcfa
		case _a.CharData:
		}
	}
	return nil
}
func NewWorksheet() *Worksheet {
	_gbega := &Worksheet{}
	_gbega.CT_Worksheet = *NewCT_Worksheet()
	return _gbega
}

// ValidateWithPath validates the CT_UndoInfo and its children, prefixing error messages with path
func (_beecc *CT_UndoInfo) ValidateWithPath(path string) error {
	if _beecc.ExpAttr == ST_FormulaExpressionUnset {
		return _fc.Errorf("\u0025\u0073\u002fE\u0078\u0070\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gacgbc := _beecc.ExpAttr.ValidateWithPath(path + "\u002f\u0045\u0078\u0070\u0041\u0074\u0074\u0072"); _gacgbc != nil {
		return _gacgbc
	}
	return nil
}

// ValidateWithPath validates the CT_DiscretePr and its children, prefixing error messages with path
func (_fbfab *CT_DiscretePr) ValidateWithPath(path string) error {
	for _ffbgf, _bdad := range _fbfab.X {
		if _cgab := _bdad.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _ffbgf)); _cgab != nil {
			return _cgab
		}
	}
	return nil
}
func NewCT_ExternalLink() *CT_ExternalLink { _fgdag := &CT_ExternalLink{}; return _fgdag }

// ValidateWithPath validates the CT_HierarchyUsage and its children, prefixing error messages with path
func (_gddga *CT_HierarchyUsage) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Selection and its children, prefixing error messages with path
func (_afccg *CT_Selection) ValidateWithPath(path string) error {
	if _gbeadd := _afccg.PaneAttr.ValidateWithPath(path + "\u002fP\u0061\u006e\u0065\u0041\u0074\u0074r"); _gbeadd != nil {
		return _gbeadd
	}
	return nil
}

type CT_Chartsheet struct {

	// Chart Sheet Properties
	SheetPr *CT_ChartsheetPr

	// Chart Sheet Views
	SheetViews *CT_ChartsheetViews

	// Chart Sheet Protection
	SheetProtection *CT_ChartsheetProtection

	// Custom Chart Sheet Views
	CustomSheetViews *CT_CustomChartsheetViews
	PageMargins      *CT_PageMargins
	PageSetup        *CT_CsPageSetup
	HeaderFooter     *CT_HeaderFooter

	// Drawing
	Drawing       *CT_Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Reference in Header Footer
	LegacyDrawingHF *CT_LegacyDrawing

	// Drawing Reference in Header Footer
	DrawingHF       *CT_DrawingHF
	Picture         *CT_SheetBackgroundPicture
	WebPublishItems *CT_WebPublishItems
	ExtLst          *CT_ExtensionList
}

func (_cgcff *CT_XmlColumnPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0070I\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _cgcff.MapIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0070\u0061t\u0068"}, Value: _fc.Sprintf("\u0025\u0076", _cgcff.XpathAttr)})
	if _cgcff.DenormalizedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u006eo\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cgcff.DenormalizedAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _cgcff.XmlDataTypeAttr)})
	e.EncodeToken(start)
	if _cgcff.ExtLst != nil {
		_cdbgd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cgcff.ExtLst, _cdbgd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Missing and its children
func (_afacee *CT_Missing) Validate() error {
	return _afacee.ValidateWithPath("\u0043\u0054\u005f\u004d\u0069\u0073\u0073\u0069\u006e\u0067")
}

// Validate validates the CT_Revisions and its children
func (_fcdaa *CT_Revisions) Validate() error {
	return _fcdaa.ValidateWithPath("\u0043\u0054\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073")
}
func (_fegec *CT_MergeCell) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _fegec.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextPr() *CT_TextPr { _eacdc := &CT_TextPr{}; return _eacdc }

type CT_ColorFilter struct {

	// Differential Format Record Id
	DxfIdAttr *uint32

	// Filter By Cell Color
	CellColorAttr *bool
}

func NewComments() *Comments {
	_dadffd := &Comments{}
	_dadffd.CT_Comments = *NewCT_Comments()
	return _dadffd
}
func (_cbbbfd ST_Type) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cbbbfd.String(), start)
}
func (_cdca *CT_BooleanProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfa := range start.Attr {
		if _dfa.Name.Local == "\u0076\u0061\u006c" {
			_fed, _egge := _f.ParseBool(_dfa.Value)
			if _egge != nil {
				return _egge
			}
			_cdca.ValAttr = &_fed
			continue
		}
	}
	for {
		_acgd, _abae := d.Token()
		if _abae != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0042\u006f\u006f\u006c\u0065\u0061\u006eP\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u003a\u0020\u0025\u0073", _abae)
		}
		if _cdg, _gac := _acgd.(_a.EndElement); _gac && _cdg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ebbae *CT_Workbook) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ebbae.ConformanceAttr != _ae.ST_ConformanceClassUnset {
		_baacbb, _gdagd := _ebbae.ConformanceAttr.MarshalXMLAttr(_a.Name{Local: "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065"})
		if _gdagd != nil {
			return _gdagd
		}
		start.Attr = append(start.Attr, _baacbb)
	}
	e.EncodeToken(start)
	if _ebbae.FileVersion != nil {
		_efcbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_ebbae.FileVersion, _efcbe)
	}
	if _ebbae.FileSharing != nil {
		_edbacg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067"}}
		e.EncodeElement(_ebbae.FileSharing, _edbacg)
	}
	if _ebbae.WorkbookPr != nil {
		_ffabe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}}
		e.EncodeElement(_ebbae.WorkbookPr, _ffabe)
	}
	if _ebbae.WorkbookProtection != nil {
		_dagega := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0077\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_ebbae.WorkbookProtection, _dagega)
	}
	if _ebbae.BookViews != nil {
		_dcaefd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ab\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_ebbae.BookViews, _dcaefd)
	}
	_cffeed := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0073\u0068\u0065\u0065\u0074s"}}
	e.EncodeElement(_ebbae.Sheets, _cffeed)
	if _ebbae.FunctionGroups != nil {
		_aggeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_ebbae.FunctionGroups, _aggeb)
	}
	if _ebbae.ExternalReferences != nil {
		_dgdga := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0065\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073"}}
		e.EncodeElement(_ebbae.ExternalReferences, _dgdga)
	}
	if _ebbae.DefinedNames != nil {
		_ggada := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ad\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_ebbae.DefinedNames, _ggada)
	}
	if _ebbae.CalcPr != nil {
		_cgbcg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0063\u0061\u006c\u0063\u0050r"}}
		e.EncodeElement(_ebbae.CalcPr, _cgbcg)
	}
	if _ebbae.OleSize != nil {
		_ebggd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u0053\u0069\u007a\u0065"}}
		e.EncodeElement(_ebbae.OleSize, _ebggd)
	}
	if _ebbae.CustomWorkbookViews != nil {
		_geabd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073"}}
		e.EncodeElement(_ebbae.CustomWorkbookViews, _geabd)
	}
	if _ebbae.PivotCaches != nil {
		_fedfdb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073"}}
		e.EncodeElement(_ebbae.PivotCaches, _fedfdb)
	}
	if _ebbae.SmartTagPr != nil {
		_bceaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}}
		e.EncodeElement(_ebbae.SmartTagPr, _bceaa)
	}
	if _ebbae.SmartTagTypes != nil {
		_dfbfec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}}
		e.EncodeElement(_ebbae.SmartTagTypes, _dfbfec)
	}
	if _ebbae.WebPublishing != nil {
		_cabda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0077\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}}
		e.EncodeElement(_ebbae.WebPublishing, _cabda)
	}
	if _ebbae.FileRecoveryPr != nil {
		_agade := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}}
		for _, _cbacd := range _ebbae.FileRecoveryPr {
			e.EncodeElement(_cbacd, _agade)
		}
	}
	if _ebbae.WebPublishObjects != nil {
		_ceeede := _a.StartElement{Name: _a.Name{Local: "m\u0061:\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073"}}
		e.EncodeElement(_ebbae.WebPublishObjects, _ceeede)
	}
	if _ebbae.ExtLst != nil {
		_fadfff := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ebbae.ExtLst, _fadfff)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ecggf *CT_ExternalDefinedNames) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_fgfed:
	for {
		_cabdb, _cfada := d.Token()
		if _cfada != nil {
			return _cfada
		}
		switch _ffaf := _cabdb.(type) {
		case _a.StartElement:
			switch _ffaf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}:
				_ecbbag := NewCT_ExternalDefinedName()
				if _fcbdf := d.DecodeElement(_ecbbag, &_ffaf); _fcbdf != nil {
					return _fcbdf
				}
				_ecggf.DefinedName = append(_ecggf.DefinedName, _ecbbag)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0044e\u0066\u0069\u006e\u0065\u0064\u004ea\u006d\u0065\u0073 \u0025\u0076", _ffaf.Name)
				if _dgfb := d.Skip(); _dgfb != nil {
					return _dgfb
				}
			}
		case _a.EndElement:
			break _fgfed
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DataRef and its children, prefixing error messages with path
func (_aeef *CT_DataRef) ValidateWithPath(path string) error { return nil }
func (_bfefag ST_ConditionalFormattingOperator) ValidateWithPath(path string) error {
	switch _bfefag {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfefag))
	}
	return nil
}

// Validate validates the CT_FileVersion and its children
func (_bebg *CT_FileVersion) Validate() error {
	return _bebg.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e")
}

// Validate validates the CT_GroupMember and its children
func (_ggfeb *CT_GroupMember) Validate() error {
	return _ggfeb.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072")
}
func (_fcffgg *ST_PaneState) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fbeagd, _ggffe := d.Token()
	if _ggffe != nil {
		return _ggffe
	}
	if _cdcafe, _fdgdc := _fbeagd.(_a.EndElement); _fdgdc && _cdcafe.Name == start.Name {
		*_fcffgg = 1
		return nil
	}
	if _gdcbdg, _abfeb := _fbeagd.(_a.CharData); !_abfeb {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbeagd)
	} else {
		switch string(_gdcbdg) {
		case "":
			*_fcffgg = 0
		case "\u0073\u0070\u006ci\u0074":
			*_fcffgg = 1
		case "\u0066\u0072\u006f\u007a\u0065\u006e":
			*_fcffgg = 2
		case "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074":
			*_fcffgg = 3
		}
	}
	_fbeagd, _ggffe = d.Token()
	if _ggffe != nil {
		return _ggffe
	}
	if _abfgf, _cggcc := _fbeagd.(_a.EndElement); _cggcc && _abfgf.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbeagd)
}

// Validate validates the CT_Sheet and its children
func (_cbgag *CT_Sheet) Validate() error {
	return _cbgag.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074")
}

// Validate validates the CT_Boolean and its children
func (_fcaa *CT_Boolean) Validate() error {
	return _fcaa.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e")
}

type ST_CredMethod byte

func (_dcgba *CT_Hyperlinks) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gcbfd:
	for {
		_bggdf, _abbf := d.Token()
		if _abbf != nil {
			return _abbf
		}
		switch _cecfe := _bggdf.(type) {
		case _a.StartElement:
			switch _cecfe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068y\u0070\u0065\u0072\u006c\u0069\u006ek"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068y\u0070\u0065\u0072\u006c\u0069\u006ek"}:
				_dadee := NewCT_Hyperlink()
				if _aeed := d.DecodeElement(_dadee, &_cecfe); _aeed != nil {
					return _aeed
				}
				_dcgba.Hyperlink = append(_dcgba.Hyperlink, _dadee)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048y\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073 \u0025\u0076", _cecfe.Name)
				if _aagcb := d.Skip(); _aagcb != nil {
					return _aagcb
				}
			}
		case _a.EndElement:
			break _gcbfd
		case _a.CharData:
		}
	}
	return nil
}

type CT_CustomWorkbookView struct {

	// Custom View Name
	NameAttr string

	// Custom View GUID
	GuidAttr string

	// Auto Update
	AutoUpdateAttr *bool

	// Merge Interval
	MergeIntervalAttr *uint32

	// Changes Saved Win
	ChangesSavedWinAttr *bool

	// Only Synch
	OnlySyncAttr *bool

	// Personal View
	PersonalViewAttr *bool

	// Include Print Settings
	IncludePrintSettingsAttr *bool

	// Include Hidden Rows & Columns
	IncludeHiddenRowColAttr *bool

	// Maximized
	MaximizedAttr *bool

	// Minimized
	MinimizedAttr *bool

	// Show Horizontal Scroll
	ShowHorizontalScrollAttr *bool

	// Show Vertical Scroll
	ShowVerticalScrollAttr *bool

	// Show Sheet Tabs
	ShowSheetTabsAttr *bool

	// Top Left Corner (X Coordinate)
	XWindowAttr *int32

	// Top Left Corner (Y Coordinate)
	YWindowAttr *int32

	// Window Width
	WindowWidthAttr uint32

	// Window Height
	WindowHeightAttr uint32

	// Sheet Tab Ratio
	TabRatioAttr *uint32

	// Active Sheet in Book View
	ActiveSheetIdAttr uint32

	// Show Formula Bar
	ShowFormulaBarAttr *bool

	// Show Status Bar
	ShowStatusbarAttr *bool

	// Show Comments
	ShowCommentsAttr ST_Comments

	// Show Objects
	ShowObjectsAttr ST_Objects
	ExtLst          *CT_ExtensionList
}

func (_bbdbe *CT_Formats) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebbdd := range start.Attr {
		if _ebbdd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dgccg, _acab := _f.ParseUint(_ebbdd.Value, 10, 32)
			if _acab != nil {
				return _acab
			}
			_dfbdg := uint32(_dgccg)
			_bbdbe.CountAttr = &_dfbdg
			continue
		}
	}
_gcegb:
	for {
		_ffece, _acbg := d.Token()
		if _acbg != nil {
			return _acbg
		}
		switch _gcbfg := _ffece.(type) {
		case _a.StartElement:
			switch _gcbfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}:
				_gfcfd := NewCT_Format()
				if _cafgc := d.DecodeElement(_gfcfd, &_gcbfg); _cafgc != nil {
					return _cafgc
				}
				_bbdbe.Format = append(_bbdbe.Format, _gfcfd)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fF\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _gcbfg.Name)
				if _gbad := d.Skip(); _gbad != nil {
					return _gbad
				}
			}
		case _a.EndElement:
			break _gcegb
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_PhoneticAlignmentUnset       ST_PhoneticAlignment = 0
	ST_PhoneticAlignmentNoControl   ST_PhoneticAlignment = 1
	ST_PhoneticAlignmentLeft        ST_PhoneticAlignment = 2
	ST_PhoneticAlignmentCenter      ST_PhoneticAlignment = 3
	ST_PhoneticAlignmentDistributed ST_PhoneticAlignment = 4
)

func NewCT_Member() *CT_Member { _bgacf := &CT_Member{}; return _bgacf }
func (_cdeg *CT_Control) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acded := range start.Attr {
		if _acded.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _acded.Name.Local == "\u0069\u0064" || _acded.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _acded.Name.Local == "\u0069\u0064" {
			_gebb, _bdae := _acded.Value, error(nil)
			if _bdae != nil {
				return _bdae
			}
			_cdeg.IdAttr = _gebb
			continue
		}
		if _acded.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_dcedd, _ffed := _f.ParseUint(_acded.Value, 10, 32)
			if _ffed != nil {
				return _ffed
			}
			_cdeg.ShapeIdAttr = uint32(_dcedd)
			continue
		}
		if _acded.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fddd, _acad := _acded.Value, error(nil)
			if _acad != nil {
				return _acad
			}
			_cdeg.NameAttr = &_fddd
			continue
		}
	}
_dade:
	for {
		_beae, _egce := d.Token()
		if _egce != nil {
			return _egce
		}
		switch _gddc := _beae.(type) {
		case _a.StartElement:
			switch _gddc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c\u0050r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c\u0050r"}:
				_cdeg.ControlPr = NewCT_ControlPr()
				if _aagc := d.DecodeElement(_cdeg.ControlPr, &_gddc); _aagc != nil {
					return _aagc
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0020\u0025\u0076", _gddc.Name)
				if _eagbg := d.Skip(); _eagbg != nil {
					return _eagbg
				}
			}
		case _a.EndElement:
			break _dade
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MetadataBlocks and its children
func (_cdfaa *CT_MetadataBlocks) Validate() error {
	return _cdfaa.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042l\u006f\u0063\u006b\u0073")
}
func (_fccfe *CT_pivotTableDefinition) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _fccfe.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0063\u0068\u0065\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _fccfe.CacheIdAttr)})
	if _fccfe.DataOnRowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.DataOnRowsAttr))})
	}
	if _fccfe.DataPositionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.DataPositionAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _fccfe.DataCaptionAttr)})
	if _fccfe.GrandTotalCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.GrandTotalCaptionAttr)})
	}
	if _fccfe.ErrorCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.ErrorCaptionAttr)})
	}
	if _fccfe.ShowErrorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowErrorAttr))})
	}
	if _fccfe.MissingCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.MissingCaptionAttr)})
	}
	if _fccfe.ShowMissingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowMissingAttr))})
	}
	if _fccfe.PageStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.PageStyleAttr)})
	}
	if _fccfe.PivotTableStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.PivotTableStyleAttr)})
	}
	if _fccfe.VacatedStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.VacatedStyleAttr)})
	}
	if _fccfe.TagAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061\u0067"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.TagAttr)})
	}
	if _fccfe.UpdatedVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.UpdatedVersionAttr)})
	}
	if _fccfe.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.MinRefreshableVersionAttr)})
	}
	if _fccfe.AsteriskTotalsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.AsteriskTotalsAttr))})
	}
	if _fccfe.ShowItemsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowItemsAttr))})
	}
	if _fccfe.EditDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.EditDataAttr))})
	}
	if _fccfe.DisableFieldListAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.DisableFieldListAttr))})
	}
	if _fccfe.ShowCalcMbrsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowCalcMbrsAttr))})
	}
	if _fccfe.VisualTotalsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.VisualTotalsAttr))})
	}
	if _fccfe.ShowMultipleLabelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowMultipleLabelAttr))})
	}
	if _fccfe.ShowDataDropDownAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowDataDropDownAttr))})
	}
	if _fccfe.ShowDrillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowDrillAttr))})
	}
	if _fccfe.PrintDrillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.PrintDrillAttr))})
	}
	if _fccfe.ShowMemberPropertyTipsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowMemberPropertyTipsAttr))})
	}
	if _fccfe.ShowDataTipsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowDataTipsAttr))})
	}
	if _fccfe.EnableWizardAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.EnableWizardAttr))})
	}
	if _fccfe.EnableDrillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.EnableDrillAttr))})
	}
	if _fccfe.EnableFieldPropertiesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.EnableFieldPropertiesAttr))})
	}
	if _fccfe.PreserveFormattingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.PreserveFormattingAttr))})
	}
	if _fccfe.UseAutoFormattingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.UseAutoFormattingAttr))})
	}
	if _fccfe.PageWrapAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.PageWrapAttr)})
	}
	if _fccfe.PageOverThenDownAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.PageOverThenDownAttr))})
	}
	if _fccfe.SubtotalHiddenItemsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.SubtotalHiddenItemsAttr))})
	}
	if _fccfe.RowGrandTotalsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.RowGrandTotalsAttr))})
	}
	if _fccfe.ColGrandTotalsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ColGrandTotalsAttr))})
	}
	if _fccfe.FieldPrintTitlesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.FieldPrintTitlesAttr))})
	}
	if _fccfe.ItemPrintTitlesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ItemPrintTitlesAttr))})
	}
	if _fccfe.MergeItemAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.MergeItemAttr))})
	}
	if _fccfe.ShowDropZonesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowDropZonesAttr))})
	}
	if _fccfe.CreatedVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.CreatedVersionAttr)})
	}
	if _fccfe.IndentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.IndentAttr)})
	}
	if _fccfe.ShowEmptyRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowEmptyRowAttr))})
	}
	if _fccfe.ShowEmptyColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowEmptyColAttr))})
	}
	if _fccfe.ShowHeadersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ShowHeadersAttr))})
	}
	if _fccfe.CompactAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u0070\u0061\u0063\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.CompactAttr))})
	}
	if _fccfe.OutlineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.OutlineAttr))})
	}
	if _fccfe.OutlineDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.OutlineDataAttr))})
	}
	if _fccfe.CompactDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.CompactDataAttr))})
	}
	if _fccfe.PublishedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.PublishedAttr))})
	}
	if _fccfe.GridDropZonesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.GridDropZonesAttr))})
	}
	if _fccfe.ImmersiveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ImmersiveAttr))})
	}
	if _fccfe.MultipleFieldFiltersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.MultipleFieldFiltersAttr))})
	}
	if _fccfe.ChartFormatAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.ChartFormatAttr)})
	}
	if _fccfe.RowHeaderCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.RowHeaderCaptionAttr)})
	}
	if _fccfe.ColHeaderCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.ColHeaderCaptionAttr)})
	}
	if _fccfe.FieldListSortAscendingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.FieldListSortAscendingAttr))})
	}
	if _fccfe.MdxSubqueriesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.MdxSubqueriesAttr))})
	}
	if _fccfe.CustomListSortAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.CustomListSortAttr))})
	}
	if _fccfe.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fccfe.AutoFormatIdAttr)})
	}
	if _fccfe.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ApplyNumberFormatsAttr))})
	}
	if _fccfe.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ApplyBorderFormatsAttr))})
	}
	if _fccfe.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ApplyFontFormatsAttr))})
	}
	if _fccfe.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ApplyPatternFormatsAttr))})
	}
	if _fccfe.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ApplyAlignmentFormatsAttr))})
	}
	if _fccfe.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccfe.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	_gffbba := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}}
	e.EncodeElement(_fccfe.Location, _gffbba)
	if _fccfe.PivotFields != nil {
		_fgggg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_fccfe.PivotFields, _fgggg)
	}
	if _fccfe.RowFields != nil {
		_cdcaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_fccfe.RowFields, _cdcaa)
	}
	if _fccfe.RowItems != nil {
		_gbbfg := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_fccfe.RowItems, _gbbfg)
	}
	if _fccfe.ColFields != nil {
		_aaaeeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_fccfe.ColFields, _aaaeeb)
	}
	if _fccfe.ColItems != nil {
		_efedc := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_fccfe.ColItems, _efedc)
	}
	if _fccfe.PageFields != nil {
		_ecfbeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_fccfe.PageFields, _ecfbeg)
	}
	if _fccfe.DataFields != nil {
		_begce := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_fccfe.DataFields, _begce)
	}
	if _fccfe.Formats != nil {
		_aedgg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_fccfe.Formats, _aedgg)
	}
	if _fccfe.ConditionalFormats != nil {
		_gadecb := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0063\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_fccfe.ConditionalFormats, _gadecb)
	}
	if _fccfe.ChartFormats != nil {
		_abecf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ac\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_fccfe.ChartFormats, _abecf)
	}
	if _fccfe.PivotHierarchies != nil {
		_ecbddb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}}
		e.EncodeElement(_fccfe.PivotHierarchies, _ecbddb)
	}
	if _fccfe.PivotTableStyleInfo != nil {
		_aebefgf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070iv\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006ef\u006f"}}
		e.EncodeElement(_fccfe.PivotTableStyleInfo, _aebefgf)
	}
	if _fccfe.Filters != nil {
		_baagg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_fccfe.Filters, _baagg)
	}
	if _fccfe.RowHierarchiesUsage != nil {
		_aecgd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065"}}
		e.EncodeElement(_fccfe.RowHierarchiesUsage, _aecgd)
	}
	if _fccfe.ColHierarchiesUsage != nil {
		_adecd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065"}}
		e.EncodeElement(_fccfe.ColHierarchiesUsage, _adecd)
	}
	if _fccfe.ExtLst != nil {
		_fbdbf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fccfe.ExtLst, _fbdbf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the PivotCacheRecords and its children
func (_fcfbc *PivotCacheRecords) Validate() error {
	return _fcfbc.ValidateWithPath("\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065c\u006f\u0072\u0064\u0073")
}
func (_adcdgg *ST_DataConsolidateFunction) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_edfgfb, _geabdc := d.Token()
	if _geabdc != nil {
		return _geabdc
	}
	if _bacce, _ecfbcc := _edfgfb.(_a.EndElement); _ecfbcc && _bacce.Name == start.Name {
		*_adcdgg = 1
		return nil
	}
	if _accaa, _fabaea := _edfgfb.(_a.CharData); !_fabaea {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edfgfb)
	} else {
		switch string(_accaa) {
		case "":
			*_adcdgg = 0
		case "\u0061v\u0065\u0072\u0061\u0067\u0065":
			*_adcdgg = 1
		case "\u0063\u006f\u0075n\u0074":
			*_adcdgg = 2
		case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
			*_adcdgg = 3
		case "\u006d\u0061\u0078":
			*_adcdgg = 4
		case "\u006d\u0069\u006e":
			*_adcdgg = 5
		case "\u0070r\u006f\u0064\u0075\u0063\u0074":
			*_adcdgg = 6
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_adcdgg = 7
		case "\u0073t\u0064\u0044\u0065\u0076\u0070":
			*_adcdgg = 8
		case "\u0073\u0075\u006d":
			*_adcdgg = 9
		case "\u0076\u0061\u0072":
			*_adcdgg = 10
		case "\u0076\u0061\u0072\u0070":
			*_adcdgg = 11
		}
	}
	_edfgfb, _geabdc = d.Token()
	if _geabdc != nil {
		return _geabdc
	}
	if _ebdec, _dddgd := _edfgfb.(_a.EndElement); _dddgd && _ebdec.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edfgfb)
}
func (_gbag *CT_CustomProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _baaff := range start.Attr {
		if _baaff.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _baaff.Name.Local == "\u0069\u0064" || _baaff.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _baaff.Name.Local == "\u0069\u0064" {
			_cffd, _bbdff := _baaff.Value, error(nil)
			if _bbdff != nil {
				return _bbdff
			}
			_gbag.IdAttr = _cffd
			continue
		}
		if _baaff.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fbgcb, _ecgfd := _baaff.Value, error(nil)
			if _ecgfd != nil {
				return _ecgfd
			}
			_gbag.NameAttr = _fbgcb
			continue
		}
	}
	for {
		_bdgg, _gddce := d.Token()
		if _gddce != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079: \u0025\u0073", _gddce)
		}
		if _gdbe, _dffb := _bdgg.(_a.EndElement); _dffb && _gdbe.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cfgadg *CT_RevisionQueryTableField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eddbe := range start.Attr {
		if _eddbe.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_fegebf, _efgef := _f.ParseUint(_eddbe.Value, 10, 32)
			if _efgef != nil {
				return _efgef
			}
			_cfgadg.SheetIdAttr = uint32(_fegebf)
			continue
		}
		if _eddbe.Name.Local == "\u0072\u0065\u0066" {
			_fcafdb, _dedbe := _eddbe.Value, error(nil)
			if _dedbe != nil {
				return _dedbe
			}
			_cfgadg.RefAttr = _fcafdb
			continue
		}
		if _eddbe.Name.Local == "\u0066i\u0065\u006c\u0064\u0049\u0064" {
			_gabee, _afabcf := _f.ParseUint(_eddbe.Value, 10, 32)
			if _afabcf != nil {
				return _afabcf
			}
			_cfgadg.FieldIdAttr = uint32(_gabee)
			continue
		}
	}
	for {
		_cgggf, _fggec := d.Token()
		if _fggec != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0051\u0075\u0065\u0072\u0079T\u0061\u0062\u006c\u0065\u0046i\u0065\u006cd\u003a\u0020\u0025\u0073", _fggec)
		}
		if _bdcdg, _abbbd := _cgggf.(_a.EndElement); _abbbd && _bdcdg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gefgdd *CT_VolMain) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebefb := range start.Attr {
		if _ebefb.Name.Local == "\u0066\u0069\u0072s\u0074" {
			_geagd, _ggcda := _ebefb.Value, error(nil)
			if _ggcda != nil {
				return _ggcda
			}
			_gefgdd.FirstAttr = _geagd
			continue
		}
	}
_ddbcd:
	for {
		_gafba, _deeeg := d.Token()
		if _deeeg != nil {
			return _deeeg
		}
		switch _dgdbgb := _gafba.(type) {
		case _a.StartElement:
			switch _dgdbgb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070"}:
				_gcega := NewCT_VolTopic()
				if _afbeg := d.DecodeElement(_gcega, &_dgdbgb); _afbeg != nil {
					return _afbeg
				}
				_gefgdd.Tp = append(_gefgdd.Tp, _gcega)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fV\u006f\u006c\u004d\u0061\u0069\u006e\u0020\u0025\u0076", _dgdbgb.Name)
				if _dffac := d.Skip(); _dffac != nil {
					return _dffac
				}
			}
		case _a.EndElement:
			break _ddbcd
		case _a.CharData:
		}
	}
	return nil
}

type QueryTable struct{ CT_QueryTable }

func NewCT_X() *CT_X { _bgaba := &CT_X{}; return _bgaba }

type CT_Xf struct {

	// Number Format Id
	NumFmtIdAttr *uint32

	// Font Id
	FontIdAttr *uint32

	// Fill Id
	FillIdAttr *uint32

	// Border Id
	BorderIdAttr *uint32

	// Format Id
	XfIdAttr *uint32

	// Quote Prefix
	QuotePrefixAttr *bool

	// Pivot Button
	PivotButtonAttr *bool

	// Apply Number Format
	ApplyNumberFormatAttr *bool

	// Apply Font
	ApplyFontAttr *bool

	// Apply Fill
	ApplyFillAttr *bool

	// Apply Border
	ApplyBorderAttr *bool

	// Apply Alignment
	ApplyAlignmentAttr *bool

	// Apply Protection
	ApplyProtectionAttr *bool

	// Alignment
	Alignment *CT_CellAlignment

	// Protection
	Protection *CT_CellProtection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_BorderPr and its children
func (_gga *CT_BorderPr) Validate() error {
	return _gga.ValidateWithPath("C\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072")
}
func (_gaedge *CT_OleItem) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cefdf := range start.Attr {
		if _cefdf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gcgcf, _abaffa := _cefdf.Value, error(nil)
			if _abaffa != nil {
				return _abaffa
			}
			_gaedge.NameAttr = _gcgcf
			continue
		}
		if _cefdf.Name.Local == "\u0069\u0063\u006f\u006e" {
			_cfdcf, _ccfgfa := _f.ParseBool(_cefdf.Value)
			if _ccfgfa != nil {
				return _ccfgfa
			}
			_gaedge.IconAttr = &_cfdcf
			continue
		}
		if _cefdf.Name.Local == "\u0061\u0064\u0076\u0069\u0073\u0065" {
			_aedaf, _bbce := _f.ParseBool(_cefdf.Value)
			if _bbce != nil {
				return _bbce
			}
			_gaedge.AdviseAttr = &_aedaf
			continue
		}
		if _cefdf.Name.Local == "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c" {
			_bdfd, _dffcc := _f.ParseBool(_cefdf.Value)
			if _dffcc != nil {
				return _dffcc
			}
			_gaedge.PreferPicAttr = &_bdfd
			continue
		}
	}
	for {
		_fedde, _gdaeb := d.Token()
		if _gdaeb != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u003a\u0020%\u0073", _gdaeb)
		}
		if _dgbbf, _ceeea := _fedde.(_a.EndElement); _ceeea && _dgbbf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Parameter and its children
func (_dadec *CT_Parameter) Validate() error {
	return _dadec.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072")
}

// Validate validates the CT_LevelGroup and its children
func (_dabe *CT_LevelGroup) Validate() error {
	return _dabe.ValidateWithPath("\u0043\u0054\u005f\u004c\u0065\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070")
}

type CT_Error struct {

	// Value
	VAttr string

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Item Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls *CT_Tuples

	// Member Property Indexes
	X []*CT_X
}

func NewCT_TableMissing() *CT_TableMissing { _ggadc := &CT_TableMissing{}; return _ggadc }
func (_bffbd ST_UnderlineValues) String() string {
	switch _bffbd {
	case 0:
		return ""
	case 1:
		return "\u0073\u0069\u006e\u0067\u006c\u0065"
	case 2:
		return "\u0064\u006f\u0075\u0062\u006c\u0065"
	case 3:
		return "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case 4:
		return "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

// ValidateWithPath validates the Revisions and its children, prefixing error messages with path
func (_eefdc *Revisions) ValidateWithPath(path string) error {
	if _bffde := _eefdc.CT_Revisions.ValidateWithPath(path); _bffde != nil {
		return _bffde
	}
	return nil
}
func (_cegeee *CT_MetadataTypes) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdeaf := range start.Attr {
		if _cdeaf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_caeega, _bdcdf := _f.ParseUint(_cdeaf.Value, 10, 32)
			if _bdcdf != nil {
				return _bdcdf
			}
			_ffgfee := uint32(_caeega)
			_cegeee.CountAttr = &_ffgfee
			continue
		}
	}
_dgadf:
	for {
		_afffa, _aebfb := d.Token()
		if _aebfb != nil {
			return _aebfb
		}
		switch _dffgf := _afffa.(type) {
		case _a.StartElement:
			switch _dffgf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}:
				_cbddc := NewCT_MetadataType()
				if _bceb := d.DecodeElement(_cbddc, &_dffgf); _bceb != nil {
					return _bceb
				}
				_cegeee.MetadataType = append(_cegeee.MetadataType, _cbddc)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073\u0020\u0025v", _dffgf.Name)
				if _dgecee := d.Skip(); _dgecee != nil {
					return _dgecee
				}
			}
		case _a.EndElement:
			break _dgadf
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Borders and its children, prefixing error messages with path
func (_efac *CT_Borders) ValidateWithPath(path string) error {
	for _abg, _ba := range _efac.Border {
		if _fef := _ba.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u005b\u0025\u0064\u005d", path, _abg)); _fef != nil {
			return _fef
		}
	}
	return nil
}
func (_gccfb *CT_VerticalAlignFontProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_fgebe, _bggab := _gccfb.ValAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0061\u006c"})
	if _bggab != nil {
		return _bggab
	}
	start.Attr = append(start.Attr, _fgebe)
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_decge *CT_FieldsUsage) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbcgcd := range start.Attr {
		if _fbcgcd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_adfag, _adceg := _f.ParseUint(_fbcgcd.Value, 10, 32)
			if _adceg != nil {
				return _adceg
			}
			_dffe := uint32(_adfag)
			_decge.CountAttr = &_dffe
			continue
		}
	}
_fbgab:
	for {
		_gcdca, _ffba := d.Token()
		if _ffba != nil {
			return _ffba
		}
		switch _gfedb := _gcdca.(type) {
		case _a.StartElement:
			switch _gfedb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}:
				_cgbga := NewCT_FieldUsage()
				if _fcaae := d.DecodeElement(_cgbga, &_gfedb); _fcaae != nil {
					return _fcaae
				}
				_decge.FieldUsage = append(_decge.FieldUsage, _cgbga)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073\u0055s\u0061g\u0065\u0020\u0025\u0076", _gfedb.Name)
				if _caafg := d.Skip(); _caafg != nil {
					return _caafg
				}
			}
		case _a.EndElement:
			break _fbgab
		case _a.CharData:
		}
	}
	return nil
}
func (_agag *CT_CalcChain) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_afbf:
	for {
		_dded, _bac := d.Token()
		if _bac != nil {
			return _bac
		}
		switch _ecgc := _dded.(type) {
		case _a.StartElement:
			switch _ecgc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_fcae := NewCT_CalcCell()
				if _cdcad := d.DecodeElement(_fcae, &_ecgc); _cdcad != nil {
					return _cdcad
				}
				_agag.C = append(_agag.C, _fcae)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agag.ExtLst = NewCT_ExtensionList()
				if _bbgg := d.DecodeElement(_agag.ExtLst, &_ecgc); _bbgg != nil {
					return _bbgg
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u0061\u006cc\u0043\u0068\u0061\u0069\u006e\u0020\u0025\u0076", _ecgc.Name)
				if _gfbd := d.Skip(); _gfbd != nil {
					return _gfbd
				}
			}
		case _a.EndElement:
			break _afbf
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_WorksheetSource and its children
func (_adgda *CT_WorksheetSource) Validate() error {
	return _adgda.ValidateWithPath("\u0043T\u005fW\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065")
}

type CT_DdeValues struct {

	// Rows
	RowsAttr *uint32

	// Columns
	ColsAttr *uint32

	// Value
	Value []*CT_DdeValue
}

// Validate validates the CT_Mdx and its children
func (_aeaed *CT_Mdx) Validate() error {
	return _aeaed.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078")
}
func NewCT_MetadataRecord() *CT_MetadataRecord { _fbbfc := &CT_MetadataRecord{}; return _fbbfc }
func (_fbdae *Headers) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fbdae.CT_RevisionHeaders = *NewCT_RevisionHeaders()
	for _, _eeabfd := range start.Attr {
		if _eeabfd.Name.Local == "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e" {
			_fcbaca, _fcbccg := _f.ParseBool(_eeabfd.Value)
			if _fcbccg != nil {
				return _fcbccg
			}
			_fbdae.ExclusiveAttr = &_fcbaca
			continue
		}
		if _eeabfd.Name.Local == "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064" {
			_ddgab, _dbabee := _eeabfd.Value, error(nil)
			if _dbabee != nil {
				return _dbabee
			}
			_fbdae.LastGuidAttr = &_ddgab
			continue
		}
		if _eeabfd.Name.Local == "\u0073\u0068\u0061\u0072\u0065\u0064" {
			_daeae, _adgbag := _f.ParseBool(_eeabfd.Value)
			if _adgbag != nil {
				return _adgbag
			}
			_fbdae.SharedAttr = &_daeae
			continue
		}
		if _eeabfd.Name.Local == "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073" {
			_efdca, _afgdeb := _f.ParseBool(_eeabfd.Value)
			if _afgdeb != nil {
				return _afgdeb
			}
			_fbdae.DiskRevisionsAttr = &_efdca
			continue
		}
		if _eeabfd.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_cegfa, _cbagdg := _f.ParseBool(_eeabfd.Value)
			if _cbagdg != nil {
				return _cbagdg
			}
			_fbdae.HistoryAttr = &_cegfa
			continue
		}
		if _eeabfd.Name.Local == "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073" {
			_egcee, _cgcbcb := _f.ParseBool(_eeabfd.Value)
			if _cgcbcb != nil {
				return _cgcbcb
			}
			_fbdae.TrackRevisionsAttr = &_egcee
			continue
		}
		if _eeabfd.Name.Local == "\u0067\u0075\u0069\u0064" {
			_eaddge, _fdfdc := _eeabfd.Value, error(nil)
			if _fdfdc != nil {
				return _fdfdc
			}
			_fbdae.GuidAttr = _eaddge
			continue
		}
		if _eeabfd.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064" {
			_cgcbd, _dddef := _f.ParseUint(_eeabfd.Value, 10, 32)
			if _dddef != nil {
				return _dddef
			}
			_ebadaa := uint32(_cgcbd)
			_fbdae.RevisionIdAttr = &_ebadaa
			continue
		}
		if _eeabfd.Name.Local == "\u0076e\u0072\u0073\u0069\u006f\u006e" {
			_ecgdd, _aabfcg := _f.ParseInt(_eeabfd.Value, 10, 32)
			if _aabfcg != nil {
				return _aabfcg
			}
			_dggda := int32(_ecgdd)
			_fbdae.VersionAttr = &_dggda
			continue
		}
		if _eeabfd.Name.Local == "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079" {
			_fcefbb, _bfafg := _f.ParseBool(_eeabfd.Value)
			if _bfafg != nil {
				return _bfafg
			}
			_fbdae.KeepChangeHistoryAttr = &_fcefbb
			continue
		}
		if _eeabfd.Name.Local == "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d" {
			_cebca, _dddcbc := _f.ParseBool(_eeabfd.Value)
			if _dddcbc != nil {
				return _dddcbc
			}
			_fbdae.ProtectedAttr = &_cebca
			continue
		}
		if _eeabfd.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079" {
			_ecgcb, _fgece := _f.ParseUint(_eeabfd.Value, 10, 32)
			if _fgece != nil {
				return _fgece
			}
			_ccgadg := uint32(_ecgcb)
			_fbdae.PreserveHistoryAttr = &_ccgadg
			continue
		}
	}
_cafcf:
	for {
		_baaaad, _effgg := d.Token()
		if _effgg != nil {
			return _effgg
		}
		switch _dgdggg := _baaaad.(type) {
		case _a.StartElement:
			switch _dgdggg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				_baeff := NewCT_RevisionHeader()
				if _fcadf := d.DecodeElement(_baeff, &_dgdggg); _fcadf != nil {
					return _fcadf
				}
				_fbdae.Header = append(_fbdae.Header, _baeff)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0048e\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _dgdggg.Name)
				if _fcdcc := d.Skip(); _fcdcc != nil {
					return _fcdcc
				}
			}
		case _a.EndElement:
			break _cafcf
		case _a.CharData:
		}
	}
	return nil
}
func (_fbbde *CT_PrintOptions) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fbbde.HorizontalCenteredAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068o\u0072i\u007a\u006f\u006e\u0074\u0061l\u0043\u0065n\u0074\u0065\u0072\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fbbde.HorizontalCenteredAttr))})
	}
	if _fbbde.VerticalCenteredAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0065r\u0074\u0069\u0063a\u006c\u0043\u0065\u006e\u0074\u0065\u0072\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fbbde.VerticalCenteredAttr))})
	}
	if _fbbde.HeadingsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u0061\u0064\u0069\u006e\u0067\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fbbde.HeadingsAttr))})
	}
	if _fbbde.GridLinesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067r\u0069\u0064\u004c\u0069\u006e\u0065s"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fbbde.GridLinesAttr))})
	}
	if _fbbde.GridLinesSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u0069d\u004c\u0069\u006e\u0065\u0073\u0053\u0065\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fbbde.GridLinesSetAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SharedItems and its children
func (_fdgfe *CT_SharedItems) Validate() error {
	return _fdgfe.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073")
}
func (_afeac *CT_PivotCache) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gggad := range start.Attr {
		if _gggad.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gggad.Name.Local == "\u0069\u0064" || _gggad.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gggad.Name.Local == "\u0069\u0064" {
			_acfge, _cefgcf := _gggad.Value, error(nil)
			if _cefgcf != nil {
				return _cefgcf
			}
			_afeac.IdAttr = _acfge
			continue
		}
		if _gggad.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_cfgf, _aagbf := _f.ParseUint(_gggad.Value, 10, 32)
			if _aagbf != nil {
				return _aagbf
			}
			_afeac.CacheIdAttr = uint32(_cfgf)
			continue
		}
	}
	for {
		_fccbfa, _gbbec := d.Token()
		if _gbbec != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050i\u0076o\u0074C\u0061\u0063\u0068\u0065\u003a\u0020\u0025s", _gbbec)
		}
		if _fffcd, _bfbfae := _fccbfa.(_a.EndElement); _bfbfae && _fffcd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_beded ST_PhoneticAlignment) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_beded.String(), start)
}
func (_egfb *CT_ServerFormats) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _egfb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_egfb.CountAttr)})
	}
	e.EncodeToken(start)
	if _egfb.ServerFormat != nil {
		_cegdg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003as\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}}
		for _, _baccdd := range _egfb.ServerFormat {
			e.EncodeElement(_baccdd, _cegdg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bffeg *CT_CellSmartTags) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebg := range start.Attr {
		if _ebg.Name.Local == "\u0072" {
			_gfcgc, _fbaa := _ebg.Value, error(nil)
			if _fbaa != nil {
				return _fbaa
			}
			_bffeg.RAttr = _gfcgc
			continue
		}
	}
_fefb:
	for {
		_eadg, _edbb := d.Token()
		if _edbb != nil {
			return _edbb
		}
		switch _cgagd := _eadg.(type) {
		case _a.StartElement:
			switch _cgagd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}:
				_gbfae := NewCT_CellSmartTag()
				if _effd := d.DecodeElement(_gbfae, &_cgagd); _effd != nil {
					return _effd
				}
				_bffeg.CellSmartTag = append(_bffeg.CellSmartTag, _gbfae)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073\u0020\u0025v", _cgagd.Name)
				if _eafg := d.Skip(); _eafg != nil {
					return _eafg
				}
			}
		case _a.EndElement:
			break _fefb
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TableParts and its children
func (_dbcae *CT_TableParts) Validate() error {
	return _dbcae.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073")
}

// ValidateWithPath validates the CT_RangeSets and its children, prefixing error messages with path
func (_dacdb *CT_RangeSets) ValidateWithPath(path string) error {
	for _fbfae, _fbfdf := range _dacdb.RangeSet {
		if _adaad := _fbfdf.ValidateWithPath(_fc.Sprintf("\u0025s\u002fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _fbfae)); _adaad != nil {
			return _adaad
		}
	}
	return nil
}
func (_cebed ST_GrowShrinkType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cbdcg := _a.Attr{}
	_cbdcg.Name = name
	switch _cebed {
	case ST_GrowShrinkTypeUnset:
		_cbdcg.Value = ""
	case ST_GrowShrinkTypeInsertDelete:
		_cbdcg.Value = "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065"
	case ST_GrowShrinkTypeInsertClear:
		_cbdcg.Value = "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072"
	case ST_GrowShrinkTypeOverwriteClear:
		_cbdcg.Value = "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072"
	}
	return _cbdcg, nil
}

// ValidateWithPath validates the CT_ExternalReference and its children, prefixing error messages with path
func (_beab *CT_ExternalReference) ValidateWithPath(path string) error { return nil }
func (_bbcebg *ST_SortMethod) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_badeeg, _ebede := d.Token()
	if _ebede != nil {
		return _ebede
	}
	if _affbe, _gbggb := _badeeg.(_a.EndElement); _gbggb && _affbe.Name == start.Name {
		*_bbcebg = 1
		return nil
	}
	if _fdeba, _fceabb := _badeeg.(_a.CharData); !_fceabb {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _badeeg)
	} else {
		switch string(_fdeba) {
		case "":
			*_bbcebg = 0
		case "\u0073\u0074\u0072\u006f\u006b\u0065":
			*_bbcebg = 1
		case "\u0070\u0069\u006e\u0059\u0069\u006e":
			*_bbcebg = 2
		case "\u006e\u006f\u006e\u0065":
			*_bbcebg = 3
		}
	}
	_badeeg, _ebede = d.Token()
	if _ebede != nil {
		return _ebede
	}
	if _gcbdg, _fdgece := _badeeg.(_a.EndElement); _fdgece && _gcbdg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _badeeg)
}

// Validate validates the CT_DeletedField and its children
func (_cceec *CT_DeletedField) Validate() error {
	return _cceec.ValidateWithPath("\u0043T\u005fD\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064")
}
func NewCT_VolTypes() *CT_VolTypes { _begfgd := &CT_VolTypes{}; return _begfgd }
func (_cfgd *CT_Reviewed) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _cfgd.RIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DdeItem and its children, prefixing error messages with path
func (_dffd *CT_DdeItem) ValidateWithPath(path string) error {
	if _dffd.Values != nil {
		if _fcfgc := _dffd.Values.ValidateWithPath(path + "\u002fV\u0061\u006c\u0075\u0065\u0073"); _fcfgc != nil {
			return _fcfgc
		}
	}
	return nil
}
func (_cggccb *ST_TargetScreenSize) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cggccb = 0
	case "\u00354\u0034\u0078\u0033\u0037\u0036":
		*_cggccb = 1
	case "\u00364\u0030\u0078\u0034\u0038\u0030":
		*_cggccb = 2
	case "\u00372\u0030\u0078\u0035\u0031\u0032":
		*_cggccb = 3
	case "\u00380\u0030\u0078\u0036\u0030\u0030":
		*_cggccb = 4
	case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
		*_cggccb = 5
	case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
		*_cggccb = 6
	case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
		*_cggccb = 7
	case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
		*_cggccb = 8
	case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
		*_cggccb = 9
	case "\u00318\u0030\u0030\u0078\u0031\u0034\u00340":
		*_cggccb = 10
	case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
		*_cggccb = 11
	}
	return nil
}
func NewCT_ChartsheetProtection() *CT_ChartsheetProtection {
	_bbcd := &CT_ChartsheetProtection{}
	return _bbcd
}
func NewCT_PageField() *CT_PageField { _ccaecc := &CT_PageField{}; return _ccaecc }
func (_cafdd *CT_VolType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cafdd.TypeAttr = ST_VolDepType(1)
	for _, _bgcde := range start.Attr {
		if _bgcde.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cafdd.TypeAttr.UnmarshalXMLAttr(_bgcde)
			continue
		}
	}
_cdaad:
	for {
		_fbefd, _dfbfe := d.Token()
		if _dfbfe != nil {
			return _dfbfe
		}
		switch _dbdfc := _fbefd.(type) {
		case _a.StartElement:
			switch _dbdfc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0069\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0069\u006e"}:
				_becda := NewCT_VolMain()
				if _efbbf := d.DecodeElement(_becda, &_dbdfc); _efbbf != nil {
					return _efbbf
				}
				_cafdd.Main = append(_cafdd.Main, _becda)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fV\u006f\u006c\u0054\u0079\u0070\u0065\u0020\u0025\u0076", _dbdfc.Name)
				if _ddfeae := d.Skip(); _ddfeae != nil {
					return _ddfeae
				}
			}
		case _a.EndElement:
			break _cdaad
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_InputCells and its children
func (_agdfa *CT_InputCells) Validate() error {
	return _agdfa.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073")
}
func (_bdbae *CT_MeasureDimensionMaps) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bdbae.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bdbae.CountAttr)})
	}
	e.EncodeToken(start)
	if _bdbae.Map != nil {
		_dfdbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006d\u0061\u0070"}}
		for _, _debddd := range _bdbae.Map {
			e.EncodeElement(_debddd, _dfdbe)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_WebSourceType byte

func (_ddecd *CT_Format) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ddecd.ActionAttr != ST_FormatActionUnset {
		_cacgeg, _gfcfc := _ddecd.ActionAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
		if _gfcfc != nil {
			return _gfcfc
		}
		start.Attr = append(start.Attr, _cacgeg)
	}
	if _ddecd.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_ddecd.DxfIdAttr)})
	}
	e.EncodeToken(start)
	_gafca := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_ddecd.PivotArea, _gafca)
	if _ddecd.ExtLst != nil {
		_ddgde := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ddecd.ExtLst, _ddgde)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bbcgf *ST_IconSetType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bbcgf = 0
	case "\u0033A\u0072\u0072\u006f\u0077\u0073":
		*_bbcgf = 1
	case "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_bbcgf = 2
	case "\u0033\u0046\u006c\u0061\u0067\u0073":
		*_bbcgf = 3
	case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031":
		*_bbcgf = 4
	case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032":
		*_bbcgf = 5
	case "\u0033\u0053\u0069\u0067\u006e\u0073":
		*_bbcgf = 6
	case "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073":
		*_bbcgf = 7
	case "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732":
		*_bbcgf = 8
	case "\u0034A\u0072\u0072\u006f\u0077\u0073":
		*_bbcgf = 9
	case "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_bbcgf = 10
	case "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b":
		*_bbcgf = 11
	case "\u0034R\u0061\u0074\u0069\u006e\u0067":
		*_bbcgf = 12
	case "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073":
		*_bbcgf = 13
	case "\u0035A\u0072\u0072\u006f\u0077\u0073":
		*_bbcgf = 14
	case "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_bbcgf = 15
	case "\u0035R\u0061\u0074\u0069\u006e\u0067":
		*_bbcgf = 16
	case "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s":
		*_bbcgf = 17
	}
	return nil
}
func NewCT_SortCondition() *CT_SortCondition { _caceg := &CT_SortCondition{}; return _caceg }

// ValidateWithPath validates the CT_RevisionHeaders and its children, prefixing error messages with path
func (_adfdd *CT_RevisionHeaders) ValidateWithPath(path string) error {
	if !_ae.ST_GuidPatternRe.MatchString(_adfdd.GuidAttr) {
		return _fc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ae.ST_GuidPatternRe, _adfdd.GuidAttr)
	}
	if _adfdd.LastGuidAttr != nil {
		if !_ae.ST_GuidPatternRe.MatchString(*_adfdd.LastGuidAttr) {
			return _fc.Errorf("\u0025\u0073\u002f\u006d\u002e\u004c\u0061s\u0074\u0047\u0075i\u0064\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ae.ST_GuidPatternRe, *_adfdd.LastGuidAttr)
		}
	}
	for _cfbba, _dcfdge := range _adfdd.Header {
		if _fbebe := _dcfdge.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u005b\u0025\u0064\u005d", path, _cfbba)); _fbebe != nil {
			return _fbebe
		}
	}
	return nil
}
func (_gfbf *CT_CellAlignment) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebbf := range start.Attr {
		if _ebbf.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c" {
			_gfbf.HorizontalAttr.UnmarshalXMLAttr(_ebbf)
			continue
		}
		if _ebbf.Name.Local == "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c" {
			_gfbf.VerticalAttr.UnmarshalXMLAttr(_ebbf)
			continue
		}
		if _ebbf.Name.Local == "\u0074\u0065\u0078t\u0052\u006f\u0074\u0061\u0074\u0069\u006f\u006e" {
			_baed, _ffd := _f.ParseUint(_ebbf.Value, 10, 8)
			if _ffd != nil {
				return _ffd
			}
			_bdbf := uint8(_baed)
			_gfbf.TextRotationAttr = &_bdbf
			continue
		}
		if _ebbf.Name.Local == "\u0077\u0072\u0061\u0070\u0054\u0065\u0078\u0074" {
			_gdba, _gabe := _f.ParseBool(_ebbf.Value)
			if _gabe != nil {
				return _gabe
			}
			_gfbf.WrapTextAttr = &_gdba
			continue
		}
		if _ebbf.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_egae, _ccge := _f.ParseUint(_ebbf.Value, 10, 32)
			if _ccge != nil {
				return _ccge
			}
			_gff := uint32(_egae)
			_gfbf.IndentAttr = &_gff
			continue
		}
		if _ebbf.Name.Local == "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0049n\u0064\u0065\u006e\u0074" {
			_bdbfc, _dgbf := _f.ParseInt(_ebbf.Value, 10, 32)
			if _dgbf != nil {
				return _dgbf
			}
			_bedd := int32(_bdbfc)
			_gfbf.RelativeIndentAttr = &_bedd
			continue
		}
		if _ebbf.Name.Local == "\u006au\u0073t\u0069\u0066\u0079\u004c\u0061\u0073\u0074\u004c\u0069\u006e\u0065" {
			_bbfb, _bacg := _f.ParseBool(_ebbf.Value)
			if _bacg != nil {
				return _bacg
			}
			_gfbf.JustifyLastLineAttr = &_bbfb
			continue
		}
		if _ebbf.Name.Local == "s\u0068\u0072\u0069\u006e\u006b\u0054\u006f\u0046\u0069\u0074" {
			_bde, _fdgg := _f.ParseBool(_ebbf.Value)
			if _fdgg != nil {
				return _fdgg
			}
			_gfbf.ShrinkToFitAttr = &_bde
			continue
		}
		if _ebbf.Name.Local == "\u0072\u0065\u0061d\u0069\u006e\u0067\u004f\u0072\u0064\u0065\u0072" {
			_edde, _cdef := _f.ParseUint(_ebbf.Value, 10, 32)
			if _cdef != nil {
				return _cdef
			}
			_eaabe := uint32(_edde)
			_gfbf.ReadingOrderAttr = &_eaabe
			continue
		}
	}
	for {
		_ebccb, _fdef := d.Token()
		if _fdef != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006cA\u006ci\u0067\u006e\u006d\u0065\u006e\u0074\u003a \u0025\u0073", _fdef)
		}
		if _bcbc, _gbe := _ebccb.(_a.EndElement); _gbe && _bcbc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dfcad *CT_Map) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aceef := range start.Attr {
		if _aceef.Name.Local == "\u0049\u0044" {
			_efabb, _fabfea := _f.ParseUint(_aceef.Value, 10, 32)
			if _fabfea != nil {
				return _fabfea
			}
			_dfcad.IDAttr = uint32(_efabb)
			continue
		}
		if _aceef.Name.Local == "\u004e\u0061\u006d\u0065" {
			_gbeeb, _abdadb := _aceef.Value, error(nil)
			if _abdadb != nil {
				return _abdadb
			}
			_dfcad.NameAttr = _gbeeb
			continue
		}
		if _aceef.Name.Local == "R\u006f\u006f\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074" {
			_cbdfc, _ecbed := _aceef.Value, error(nil)
			if _ecbed != nil {
				return _ecbed
			}
			_dfcad.RootElementAttr = _cbdfc
			continue
		}
		if _aceef.Name.Local == "\u0053\u0063\u0068\u0065\u006d\u0061\u0049\u0044" {
			_faagd, _eeedb := _aceef.Value, error(nil)
			if _eeedb != nil {
				return _eeedb
			}
			_dfcad.SchemaIDAttr = _faagd
			continue
		}
		if _aceef.Name.Local == "\u0053\u0068\u006f\u0077\u0049\u006d\u0070\u006f\u0072\u0074\u0045\u0078\u0070\u006f\u0072t\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0045\u0072\u0072\u006f\u0072\u0073" {
			_cagae, _facga := _f.ParseBool(_aceef.Value)
			if _facga != nil {
				return _facga
			}
			_dfcad.ShowImportExportValidationErrorsAttr = _cagae
			continue
		}
		if _aceef.Name.Local == "\u0041u\u0074\u006f\u0046\u0069\u0074" {
			_cedbf, _gafa := _f.ParseBool(_aceef.Value)
			if _gafa != nil {
				return _gafa
			}
			_dfcad.AutoFitAttr = _cedbf
			continue
		}
		if _aceef.Name.Local == "\u0041\u0070\u0070\u0065\u006e\u0064" {
			_ffga, _aaafc := _f.ParseBool(_aceef.Value)
			if _aaafc != nil {
				return _aaafc
			}
			_dfcad.AppendAttr = _ffga
			continue
		}
		if _aceef.Name.Local == "P\u0072e\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072t\u0041\u0046\u004c\u0061yo\u0075\u0074" {
			_bfcee, _dgbca := _f.ParseBool(_aceef.Value)
			if _dgbca != nil {
				return _dgbca
			}
			_dfcad.PreserveSortAFLayoutAttr = _bfcee
			continue
		}
		if _aceef.Name.Local == "\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0046o\u0072\u006d\u0061\u0074" {
			_edee, _cgbfg := _f.ParseBool(_aceef.Value)
			if _cgbfg != nil {
				return _cgbfg
			}
			_dfcad.PreserveFormatAttr = _edee
			continue
		}
	}
_bgcccg:
	for {
		_ccab, _efbff := d.Token()
		if _efbff != nil {
			return _efbff
		}
		switch _aebad := _ccab.(type) {
		case _a.StartElement:
			switch _aebad.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}:
				_dfcad.DataBinding = NewCT_DataBinding()
				if _ccacc := d.DecodeElement(_dfcad.DataBinding, &_aebad); _ccacc != nil {
					return _ccacc
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0061\u0070\u0020\u0025\u0076", _aebad.Name)
				if _baafff := d.Skip(); _baafff != nil {
					return _baafff
				}
			}
		case _a.EndElement:
			break _bgcccg
		case _a.CharData:
		}
	}
	return nil
}
func (_bdcad *Table) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065"
	return _bdcad.CT_Table.MarshalXML(e, start)
}
func (_dcbccd *ST_CalcMode) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dcbccd = 0
	case "\u006d\u0061\u006e\u0075\u0061\u006c":
		*_dcbccd = 1
	case "\u0061\u0075\u0074\u006f":
		*_dcbccd = 2
	case "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065":
		*_dcbccd = 3
	}
	return nil
}
func (_abeaa *ST_SmartTagShow) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_abeaa = 0
	case "\u0061\u006c\u006c":
		*_abeaa = 1
	case "\u006e\u006f\u006e\u0065":
		*_abeaa = 2
	case "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
		*_abeaa = 3
	}
	return nil
}

// ValidateWithPath validates the CT_SheetFormatPr and its children, prefixing error messages with path
func (_ggdad *CT_SheetFormatPr) ValidateWithPath(path string) error { return nil }
func (_aaggb *ST_CellType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_aaggb = 0
	case "\u0062":
		*_aaggb = 1
	case "\u006e":
		*_aaggb = 2
	case "\u0065":
		*_aaggb = 3
	case "\u0073":
		*_aaggb = 4
	case "\u0073\u0074\u0072":
		*_aaggb = 5
	case "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r":
		*_aaggb = 6
	}
	return nil
}

// Validate validates the CT_PivotCacheRecords and its children
func (_gbefae *CT_PivotCacheRecords) Validate() error {
	return _gbefae.ValidateWithPath("C\u0054_\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073")
}
func NewCT_MetadataTypes() *CT_MetadataTypes { _cbfdd := &CT_MetadataTypes{}; return _cbfdd }
func (_eggcc *CT_MapInfo) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cecec := range start.Attr {
		if _cecec.Name.Local == "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073" {
			_bbdef, _fbbea := _cecec.Value, error(nil)
			if _fbbea != nil {
				return _fbbea
			}
			_eggcc.SelectionNamespacesAttr = _bbdef
			continue
		}
	}
_fdege:
	for {
		_bcec, _babfb := d.Token()
		if _babfb != nil {
			return _babfb
		}
		switch _bdabf := _bcec.(type) {
		case _a.StartElement:
			switch _bdabf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}:
				_bebbb := NewCT_Schema()
				if _badaf := d.DecodeElement(_bebbb, &_bdabf); _badaf != nil {
					return _badaf
				}
				_eggcc.Schema = append(_eggcc.Schema, _bebbb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}:
				_ceged := NewCT_Map()
				if _fcfcf := d.DecodeElement(_ceged, &_bdabf); _fcfcf != nil {
					return _fcfcf
				}
				_eggcc.Map = append(_eggcc.Map, _ceged)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0061\u0070\u0049\u006e\u0066\u006f\u0020\u0025\u0076", _bdabf.Name)
				if _aadcc := d.Skip(); _aadcc != nil {
					return _aadcc
				}
			}
		case _a.EndElement:
			break _fdege
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_XmlPr and its children, prefixing error messages with path
func (_dacdad *CT_XmlPr) ValidateWithPath(path string) error {
	if _dacdad.ExtLst != nil {
		if _gdgff := _dacdad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdgff != nil {
			return _gdgff
		}
	}
	return nil
}
func (_edefde *PivotTableDefinition) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003api\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"
	return _edefde.CT_pivotTableDefinition.MarshalXML(e, start)
}
func (_dcbcg ST_TimePeriod) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dcbcg.String(), start)
}
func NewCT_ExternalSheetName() *CT_ExternalSheetName {
	_eefbb := &CT_ExternalSheetName{}
	return _eefbb
}

type CT_ExternalCell struct {

	// Reference
	RAttr *string

	// Type
	TAttr ST_CellType

	// Value Metadata
	VmAttr *uint32

	// Value
	V *string
}

// Validate validates the CT_Fills and its children
func (_gaga *CT_Fills) Validate() error {
	return _gaga.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073")
}
func (_fcdea ST_UnderlineValues) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_adgge := _a.Attr{}
	_adgge.Name = name
	switch _fcdea {
	case ST_UnderlineValuesUnset:
		_adgge.Value = ""
	case ST_UnderlineValuesSingle:
		_adgge.Value = "\u0073\u0069\u006e\u0067\u006c\u0065"
	case ST_UnderlineValuesDouble:
		_adgge.Value = "\u0064\u006f\u0075\u0062\u006c\u0065"
	case ST_UnderlineValuesSingleAccounting:
		_adgge.Value = "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case ST_UnderlineValuesDoubleAccounting:
		_adgge.Value = "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case ST_UnderlineValuesNone:
		_adgge.Value = "\u006e\u006f\u006e\u0065"
	}
	return _adgge, nil
}

type CT_Dxf struct {

	// Font Properties
	Font *CT_Font

	// Number Format
	NumFmt *CT_NumFmt

	// Fill
	Fill *CT_Fill

	// Alignment
	Alignment *CT_CellAlignment

	// Border Properties
	Border *CT_Border

	// Protection Properties
	Protection *CT_CellProtection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_Formats and its children
func (_fbged *CT_Formats) Validate() error {
	return _fbged.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

type ST_CellComments byte
type CT_CsPageSetup struct {

	// Paper Size
	PaperSizeAttr *uint32

	// Paper Height
	PaperHeightAttr *string

	// Paper Width
	PaperWidthAttr *string

	// First Page Number
	FirstPageNumberAttr *uint32

	// Orientation
	OrientationAttr ST_Orientation

	// Use Printer Defaults
	UsePrinterDefaultsAttr *bool

	// Black And White
	BlackAndWhiteAttr *bool

	// Draft
	DraftAttr *bool

	// Use First Page Number
	UseFirstPageNumberAttr *bool

	// Horizontal DPI
	HorizontalDpiAttr *uint32

	// Vertical DPI
	VerticalDpiAttr *uint32

	// Number Of Copies
	CopiesAttr *uint32
	IdAttr     *string
}

func (_ddaa *CT_ExternalReferences) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_fdbfc:
	for {
		_aggf, _fbgf := d.Token()
		if _fbgf != nil {
			return _fbgf
		}
		switch _dbadg := _aggf.(type) {
		case _a.StartElement:
			switch _dbadg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065r\u0065\u006e\u0063\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065r\u0065\u006e\u0063\u0065"}:
				_daead := NewCT_ExternalReference()
				if _efddg := d.DecodeElement(_daead, &_dbadg); _efddg != nil {
					return _efddg
				}
				_ddaa.ExternalReference = append(_ddaa.ExternalReference, _daead)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073\u0020\u0025\u0076", _dbadg.Name)
				if _dccbd := d.Skip(); _dccbd != nil {
					return _dccbd
				}
			}
		case _a.EndElement:
			break _fdbfc
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_VolTopicRef() *CT_VolTopicRef { _gcgca := &CT_VolTopicRef{}; return _gcgca }
func NewCT_VerticalAlignFontProperty() *CT_VerticalAlignFontProperty {
	_cbcfb := &CT_VerticalAlignFontProperty{}
	_cbcfb.ValAttr = _ae.ST_VerticalAlignRun(1)
	return _cbcfb
}
func NewCT_DynamicFilter() *CT_DynamicFilter {
	_eceec := &CT_DynamicFilter{}
	_eceec.TypeAttr = ST_DynamicFilterType(1)
	return _eceec
}
func (_ecbbc *CT_ExternalCell) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ecbbc.RAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_ecbbc.RAttr)})
	}
	if _ecbbc.TAttr != ST_CellTypeUnset {
		_febg, _ecfbc := _ecbbc.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _ecfbc != nil {
			return _ecfbc
		}
		start.Attr = append(start.Attr, _febg)
	}
	if _ecbbc.VmAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u006d"}, Value: _fc.Sprintf("\u0025\u0076", *_ecbbc.VmAttr)})
	}
	e.EncodeToken(start)
	if _ecbbc.V != nil {
		_degcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0076"}}
		_fca.AddPreserveSpaceAttr(&_degcg, *_ecbbc.V)
		e.EncodeElement(_ecbbc.V, _degcg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dgdbe ST_BorderStyle) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dgdbe.String(), start)
}
func (_gaefe *CT_VerticalAlignFontProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gaefe.ValAttr = _ae.ST_VerticalAlignRun(1)
	for _, _dbegc := range start.Attr {
		if _dbegc.Name.Local == "\u0076\u0061\u006c" {
			_gaefe.ValAttr.UnmarshalXMLAttr(_dbegc)
			continue
		}
	}
	for {
		_febafg, _ggafd := d.Token()
		if _ggafd != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006cA\u006c\u0069\u0067\u006e\u0046\u006f\u006e\u0074\u0050\u0072op\u0065\u0072\u0074y\u003a \u0025\u0073", _ggafd)
		}
		if _feagf, _cgdgd := _febafg.(_a.EndElement); _cgdgd && _feagf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aadgcf *ST_ShowDataAs) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bbbcb, _dcaefg := d.Token()
	if _dcaefg != nil {
		return _dcaefg
	}
	if _ecffde, _dfged := _bbbcb.(_a.EndElement); _dfged && _ecffde.Name == start.Name {
		*_aadgcf = 1
		return nil
	}
	if _bbefgg, _fcfdd := _bbbcb.(_a.CharData); !_fcfdd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbbcb)
	} else {
		switch string(_bbefgg) {
		case "":
			*_aadgcf = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_aadgcf = 1
		case "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065":
			*_aadgcf = 2
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_aadgcf = 3
		case "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066":
			*_aadgcf = 4
		case "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c":
			*_aadgcf = 5
		case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077":
			*_aadgcf = 6
		case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c":
			*_aadgcf = 7
		case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c":
			*_aadgcf = 8
		case "\u0069\u006e\u0064e\u0078":
			*_aadgcf = 9
		}
	}
	_bbbcb, _dcaefg = d.Token()
	if _dcaefg != nil {
		return _dcaefg
	}
	if _eeccaa, _bagdcc := _bbbcb.(_a.EndElement); _bagdcc && _eeccaa.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbbcb)
}

type ST_Orientation byte

func (_caaeb *CT_QueryTable) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dbgbfb := range start.Attr {
		if _dbgbfb.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068" {
			_fcbge, _beddc := _f.ParseBool(_dbgbfb.Value)
			if _beddc != nil {
				return _beddc
			}
			_caaeb.AdjustColumnWidthAttr = &_fcbge
			continue
		}
		if _dbgbfb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fgdde, _dbdgaaf := _dbgbfb.Value, error(nil)
			if _dbdgaaf != nil {
				return _dbdgaaf
			}
			_caaeb.NameAttr = _fgdde
			continue
		}
		if _dbgbfb.Name.Local == "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065" {
			_cefe, _dccgg := _f.ParseBool(_dbgbfb.Value)
			if _dccgg != nil {
				return _dccgg
			}
			_caaeb.IntermediateAttr = &_cefe
			continue
		}
		if _dbgbfb.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_bbdefa, _dgggg := _f.ParseBool(_dbgbfb.Value)
			if _dgggg != nil {
				return _dgggg
			}
			_caaeb.RowNumbersAttr = &_bbdefa
			continue
		}
		if _dbgbfb.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_geca, _bbadef := _f.ParseUint(_dbgbfb.Value, 10, 32)
			if _bbadef != nil {
				return _bbadef
			}
			_caaeb.ConnectionIdAttr = uint32(_geca)
			continue
		}
		if _dbgbfb.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_ddcdf, _egbea := _f.ParseBool(_dbgbfb.Value)
			if _egbea != nil {
				return _egbea
			}
			_caaeb.BackgroundRefreshAttr = &_ddcdf
			continue
		}
		if _dbgbfb.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_eecbf, _dgbd := _f.ParseBool(_dbgbfb.Value)
			if _dgbd != nil {
				return _dgbd
			}
			_caaeb.RefreshOnLoadAttr = &_eecbf
			continue
		}
		if _dbgbfb.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_aacaa, _abfab := _f.ParseBool(_dbgbfb.Value)
			if _abfab != nil {
				return _abfab
			}
			_caaeb.FillFormulasAttr = &_aacaa
			continue
		}
		if _dbgbfb.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_cbbdg, _efdgb := _f.ParseBool(_dbgbfb.Value)
			if _efdgb != nil {
				return _efdgb
			}
			_caaeb.ApplyNumberFormatsAttr = &_cbbdg
			continue
		}
		if _dbgbfb.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cgded, _ggabf := _f.ParseBool(_dbgbfb.Value)
			if _ggabf != nil {
				return _ggabf
			}
			_caaeb.ApplyFontFormatsAttr = &_cgded
			continue
		}
		if _dbgbfb.Name.Local == "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068" {
			_cecbe, _gcgde := _f.ParseBool(_dbgbfb.Value)
			if _gcgde != nil {
				return _gcgde
			}
			_caaeb.FirstBackgroundRefreshAttr = &_cecbe
			continue
		}
		if _dbgbfb.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_eegaa, _fcgbb := _f.ParseUint(_dbgbfb.Value, 10, 32)
			if _fcgbb != nil {
				return _fcgbb
			}
			_fcced := uint32(_eegaa)
			_caaeb.AutoFormatIdAttr = &_fcced
			continue
		}
		if _dbgbfb.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cadfe, _gfefca := _f.ParseBool(_dbgbfb.Value)
			if _gfefca != nil {
				return _gfefca
			}
			_caaeb.ApplyAlignmentFormatsAttr = &_cadfe
			continue
		}
		if _dbgbfb.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_ggccc, _ggabb := _f.ParseBool(_dbgbfb.Value)
			if _ggabb != nil {
				return _ggabb
			}
			_caaeb.DisableRefreshAttr = &_ggccc
			continue
		}
		if _dbgbfb.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bdebgd, _cfbdag := _f.ParseBool(_dbgbfb.Value)
			if _cfbdag != nil {
				return _cfbdag
			}
			_caaeb.ApplyBorderFormatsAttr = &_bdebgd
			continue
		}
		if _dbgbfb.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_gadbe, _ffafa := _f.ParseBool(_dbgbfb.Value)
			if _ffafa != nil {
				return _ffafa
			}
			_caaeb.PreserveFormattingAttr = &_gadbe
			continue
		}
		if _dbgbfb.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_fbgccf, _cggba := _f.ParseBool(_dbgbfb.Value)
			if _cggba != nil {
				return _cggba
			}
			_caaeb.ApplyPatternFormatsAttr = &_fbgccf
			continue
		}
		if _dbgbfb.Name.Local == "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065" {
			_caaeb.GrowShrinkTypeAttr.UnmarshalXMLAttr(_dbgbfb)
			continue
		}
		if _dbgbfb.Name.Local == "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074" {
			_adcdg, _cggbc := _f.ParseBool(_dbgbfb.Value)
			if _cggbc != nil {
				return _cggbc
			}
			_caaeb.DisableEditAttr = &_adcdg
			continue
		}
		if _dbgbfb.Name.Local == "\u0068e\u0061\u0064\u0065\u0072\u0073" {
			_edefb, _cbebd := _f.ParseBool(_dbgbfb.Value)
			if _cbebd != nil {
				return _cbebd
			}
			_caaeb.HeadersAttr = &_edefb
			continue
		}
		if _dbgbfb.Name.Local == "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065" {
			_bffaaa, _bagde := _f.ParseBool(_dbgbfb.Value)
			if _bagde != nil {
				return _bagde
			}
			_caaeb.RemoveDataOnSaveAttr = &_bffaaa
			continue
		}
		if _dbgbfb.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gbbac, _gdfceg := _f.ParseBool(_dbgbfb.Value)
			if _gdfceg != nil {
				return _gdfceg
			}
			_caaeb.ApplyWidthHeightFormatsAttr = &_gbbac
			continue
		}
	}
_eddfb:
	for {
		_eccbf, _cceda := d.Token()
		if _cceda != nil {
			return _cceda
		}
		switch _ffcga := _eccbf.(type) {
		case _a.StartElement:
			switch _ffcga.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}:
				_caaeb.QueryTableRefresh = NewCT_QueryTableRefresh()
				if _dbgge := d.DecodeElement(_caaeb.QueryTableRefresh, &_ffcga); _dbgge != nil {
					return _dbgge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caaeb.ExtLst = NewCT_ExtensionList()
				if _cceb := d.DecodeElement(_caaeb.ExtLst, &_ffcga); _cceb != nil {
					return _cceb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051u\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065 \u0025\u0076", _ffcga.Name)
				if _dbcada := d.Skip(); _dbcada != nil {
					return _dbcada
				}
			}
		case _a.EndElement:
			break _eddfb
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Row and its children, prefixing error messages with path
func (_afabce *CT_Row) ValidateWithPath(path string) error {
	for _ffcbf, _edddbc := range _afabce.C {
		if _beefg := _edddbc.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043\u005b\u0025\u0064\u005d", path, _ffcbf)); _beefg != nil {
			return _beefg
		}
	}
	if _afabce.ExtLst != nil {
		if _dddac := _afabce.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dddac != nil {
			return _dddac
		}
	}
	return nil
}

type CT_Map struct {

	// XML Mapping ID
	IDAttr uint32

	// XML Mapping Name
	NameAttr string

	// Root Element Name
	RootElementAttr string

	// Schema Name
	SchemaIDAttr string

	// Show Validation Errors
	ShowImportExportValidationErrorsAttr bool

	// AutoFit Table on Refresh
	AutoFitAttr bool

	// Append Data to Table
	AppendAttr bool

	// Preserve AutoFilter State
	PreserveSortAFLayoutAttr bool

	// Preserve Cell Formatting
	PreserveFormatAttr bool

	// XML Mapping
	DataBinding *CT_DataBinding
}

// ValidateWithPath validates the CT_FileVersion and its children, prefixing error messages with path
func (_ageg *CT_FileVersion) ValidateWithPath(path string) error {
	if _ageg.CodeNameAttr != nil {
		if !_ae.ST_GuidPatternRe.MatchString(*_ageg.CodeNameAttr) {
			return _fc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u006fd\u0065\u004e\u0061m\u0065\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ae.ST_GuidPatternRe, *_ageg.CodeNameAttr)
		}
	}
	return nil
}
func (_dabab ST_UpdateLinks) ValidateWithPath(path string) error {
	switch _dabab {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dabab))
	}
	return nil
}
func (_gbdaeb ST_Comments) ValidateWithPath(path string) error {
	switch _gbdaeb {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbdaeb))
	}
	return nil
}
func (_daeccd ST_CredMethod) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_daeccd.String(), start)
}

const (
	ST_PaneStateUnset       ST_PaneState = 0
	ST_PaneStateSplit       ST_PaneState = 1
	ST_PaneStateFrozen      ST_PaneState = 2
	ST_PaneStateFrozenSplit ST_PaneState = 3
)

type ST_ParameterType byte

// ValidateWithPath validates the CT_DeletedField and its children, prefixing error messages with path
func (_ebedc *CT_DeletedField) ValidateWithPath(path string) error { return nil }
func (_bgbge *CT_HeaderFooter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gbfdg := range start.Attr {
		if _gbfdg.Name.Local == "\u0064\u0069f\u0066\u0065\u0072e\u006e\u0074\u004f\u0064\u0064\u0045\u0076\u0065\u006e" {
			_bcaaf, _dafcd := _f.ParseBool(_gbfdg.Value)
			if _dafcd != nil {
				return _dafcd
			}
			_bgbge.DifferentOddEvenAttr = &_bcaaf
			continue
		}
		if _gbfdg.Name.Local == "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074F\u0069\u0072\u0073\u0074" {
			_bebfa, _ddecef := _f.ParseBool(_gbfdg.Value)
			if _ddecef != nil {
				return _ddecef
			}
			_bgbge.DifferentFirstAttr = &_bebfa
			continue
		}
		if _gbfdg.Name.Local == "\u0073\u0063\u0061l\u0065\u0057\u0069\u0074\u0068\u0044\u006f\u0063" {
			_badacg, _afdda := _f.ParseBool(_gbfdg.Value)
			if _afdda != nil {
				return _afdda
			}
			_bgbge.ScaleWithDocAttr = &_badacg
			continue
		}
		if _gbfdg.Name.Local == "\u0061\u006ci\u0067\u006e\u0057i\u0074\u0068\u004d\u0061\u0072\u0067\u0069\u006e\u0073" {
			_gefgd, _agaba := _f.ParseBool(_gbfdg.Value)
			if _agaba != nil {
				return _agaba
			}
			_bgbge.AlignWithMarginsAttr = &_gefgd
			continue
		}
	}
_gcfgd:
	for {
		_egdde, _abdag := d.Token()
		if _abdag != nil {
			return _abdag
		}
		switch _aagdg := _egdde.(type) {
		case _a.StartElement:
			switch _aagdg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0048\u0065\u0061\u0064\u0065r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0048\u0065\u0061\u0064\u0065r"}:
				_bgbge.OddHeader = new(string)
				if _fefdf := d.DecodeElement(_bgbge.OddHeader, &_aagdg); _fefdf != nil {
					return _fefdf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0046\u006f\u006f\u0074\u0065r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0046\u006f\u006f\u0074\u0065r"}:
				_bgbge.OddFooter = new(string)
				if _cdcgg := d.DecodeElement(_bgbge.OddFooter, &_aagdg); _cdcgg != nil {
					return _cdcgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}:
				_bgbge.EvenHeader = new(string)
				if _daefe := d.DecodeElement(_bgbge.EvenHeader, &_aagdg); _daefe != nil {
					return _daefe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_bgbge.EvenFooter = new(string)
				if _bbeef := d.DecodeElement(_bgbge.EvenFooter, &_aagdg); _bbeef != nil {
					return _bbeef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}:
				_bgbge.FirstHeader = new(string)
				if _eafaf := d.DecodeElement(_bgbge.FirstHeader, &_aagdg); _eafaf != nil {
					return _eafaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_bgbge.FirstFooter = new(string)
				if _edad := d.DecodeElement(_bgbge.FirstFooter, &_aagdg); _edad != nil {
					return _edad
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072\u0020\u0025\u0076", _aagdg.Name)
				if _ffcdf := d.Skip(); _ffcdf != nil {
					return _ffcdf
				}
			}
		case _a.EndElement:
			break _gcfgd
		case _a.CharData:
		}
	}
	return nil
}
func (_cggbg *CT_FontScheme) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_dacc, _gefeg := _cggbg.ValAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0061\u006c"})
	if _gefeg != nil {
		return _gefeg
	}
	start.Attr = append(start.Attr, _dacc)
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ggbag *CT_FunctionGroups) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cfedc := range start.Attr {
		if _cfedc.Name.Local == "\u0062\u0075\u0069\u006c\u0074\u0049\u006e\u0047\u0072\u006f\u0075\u0070C\u006f\u0075\u006e\u0074" {
			_dggef, _bagaf := _f.ParseUint(_cfedc.Value, 10, 32)
			if _bagaf != nil {
				return _bagaf
			}
			_gdbf := uint32(_dggef)
			_ggbag.BuiltInGroupCountAttr = &_gdbf
			continue
		}
	}
_cfba:
	for {
		_dafdf, _geegc := d.Token()
		if _geegc != nil {
			return _geegc
		}
		switch _bcdge := _dafdf.(type) {
		case _a.StartElement:
			switch _bcdge.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}:
				_fgdda := NewCT_FunctionGroup()
				if _dbadb := d.DecodeElement(_fgdda, &_bcdge); _dbadb != nil {
					return _dbadb
				}
				_ggbag.FunctionGroup = append(_ggbag.FunctionGroup, _fgdda)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0073\u0020\u0025\u0076", _bcdge.Name)
				if _cecee := d.Skip(); _cecee != nil {
					return _cecee
				}
			}
		case _a.EndElement:
			break _cfba
		case _a.CharData:
		}
	}
	return nil
}

type CT_FileVersion struct {

	// Application Name
	AppNameAttr *string

	// Last Edited Version
	LastEditedAttr *string

	// Lowest Edited Version
	LowestEditedAttr *string

	// Build Version
	RupBuildAttr *string

	// Code Name
	CodeNameAttr *string
}

func (_bbgeg *CT_TableStyleElement) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_begfad, _acdfc := _bbgeg.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _acdfc != nil {
		return _acdfc
	}
	start.Attr = append(start.Attr, _begfad)
	if _bbgeg.SizeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0069\u007a\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_bbgeg.SizeAttr)})
	}
	if _bbgeg.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bbgeg.DxfIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_begfe *CT_HierarchyUsage) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dgfdeb := range start.Attr {
		if _dgfdeb.Name.Local == "\u0068\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065" {
			_gcefc, _edced := _f.ParseInt(_dgfdeb.Value, 10, 32)
			if _edced != nil {
				return _edced
			}
			_begfe.HierarchyUsageAttr = int32(_gcefc)
			continue
		}
	}
	for {
		_faeec, _cfdc := d.Token()
		if _cfdc != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0055\u0073\u0061\u0067\u0065: \u0025\u0073", _cfdc)
		}
		if _gdbeb, _cded := _faeec.(_a.EndElement); _cded && _gdbeb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cecade ST_PhoneticType) ValidateWithPath(path string) error {
	switch _cecade {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cecade))
	}
	return nil
}
func (_fddc *CT_Filters) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fddc.BlankAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006c\u0061n\u006b"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fddc.BlankAttr))})
	}
	if _fddc.CalendarTypeAttr != _ae.ST_CalendarTypeUnset {
		_bbfeb, _acdcg := _fddc.CalendarTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0063\u0061\u006ce\u006e\u0064\u0061\u0072\u0054\u0079\u0070\u0065"})
		if _acdcg != nil {
			return _acdcg
		}
		start.Attr = append(start.Attr, _bbfeb)
	}
	e.EncodeToken(start)
	if _fddc.Filter != nil {
		_becbg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u0074\u0065r"}}
		for _, _bgbfa := range _fddc.Filter {
			e.EncodeElement(_bgbfa, _becbg)
		}
	}
	if _fddc.DateGroupItem != nil {
		_gdfde := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0064\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}}
		for _, _fagce := range _fddc.DateGroupItem {
			e.EncodeElement(_fagce, _gdfde)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SheetProtection and its children, prefixing error messages with path
func (_gbbdfa *CT_SheetProtection) ValidateWithPath(path string) error { return nil }
func (_cdedb *ST_PatternType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eedgg, _ebfbb := d.Token()
	if _ebfbb != nil {
		return _ebfbb
	}
	if _ggaga, _fbebgc := _eedgg.(_a.EndElement); _fbebgc && _ggaga.Name == start.Name {
		*_cdedb = 1
		return nil
	}
	if _cfffb, _dfgee := _eedgg.(_a.CharData); !_dfgee {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eedgg)
	} else {
		switch string(_cfffb) {
		case "":
			*_cdedb = 0
		case "\u006e\u006f\u006e\u0065":
			*_cdedb = 1
		case "\u0073\u006f\u006ci\u0064":
			*_cdedb = 2
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079":
			*_cdedb = 3
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
			*_cdedb = 4
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
			*_cdedb = 5
		case "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c":
			*_cdedb = 6
		case "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
			*_cdedb = 7
		case "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e":
			*_cdedb = 8
		case "\u0064\u0061\u0072\u006b\u0055\u0070":
			*_cdedb = 9
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064":
			*_cdedb = 10
		case "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
			*_cdedb = 11
		case "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":
			*_cdedb = 12
		case "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
			*_cdedb = 13
		case "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n":
			*_cdedb = 14
		case "\u006ci\u0067\u0068\u0074\u0055\u0070":
			*_cdedb = 15
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d":
			*_cdedb = 16
		case "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
			*_cdedb = 17
		case "\u0067r\u0061\u0079\u0031\u0032\u0035":
			*_cdedb = 18
		case "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035":
			*_cdedb = 19
		}
	}
	_eedgg, _ebfbb = d.Token()
	if _ebfbb != nil {
		return _ebfbb
	}
	if _dgffbd, _facfg := _eedgg.(_a.EndElement); _facfg && _dgffbd.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eedgg)
}

// ValidateWithPath validates the CT_Members and its children, prefixing error messages with path
func (_ccfgf *CT_Members) ValidateWithPath(path string) error {
	for _acfg, _cade := range _ccfgf.Member {
		if _geaf := _cade.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004d\u0065\u006d\u0062\u0065\u0072\u005b\u0025\u0064\u005d", path, _acfg)); _geaf != nil {
			return _geaf
		}
	}
	return nil
}
func (_cbgbb *CT_WorkbookProtection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cbgbb.WorkbookPasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006fr\u006b\u0062\u006fo\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbb.WorkbookPasswordAttr)})
	}
	if _cbgbb.WorkbookPasswordCharacterSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006bb\u006f\u006f\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072d\u0043h\u0061\u0072\u0061\u0063\u0074\u0065\u0072S\u0065\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbb.WorkbookPasswordCharacterSetAttr)})
	}
	if _cbgbb.RevisionsPasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073s\u0077\u006f\u0072\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbb.RevisionsPasswordAttr)})
	}
	if _cbgbb.RevisionsPasswordCharacterSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065v\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065rS\u0065\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbb.RevisionsPasswordCharacterSetAttr)})
	}
	if _cbgbb.LockStructureAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0053\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbgbb.LockStructureAttr))})
	}
	if _cbgbb.LockWindowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "l\u006f\u0063\u006b\u0057\u0069\u006e\u0064\u006f\u0077\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbgbb.LockWindowsAttr))})
	}
	if _cbgbb.LockRevisionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063k\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbgbb.LockRevisionAttr))})
	}
	if _cbgbb.RevisionsAlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0076\u0069si\u006f\u006e\u0073\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061m\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbb.RevisionsAlgorithmNameAttr)})
	}
	if _cbgbb.RevisionsHashValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073H\u0061\u0073h\u0056\u0061\u006c\u0075\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbb.RevisionsHashValueAttr)})
	}
	if _cbgbb.RevisionsSaltValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0061\u006ct\u0056\u0061\u006c\u0075\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbb.RevisionsSaltValueAttr)})
	}
	if _cbgbb.RevisionsSpinCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0070\u0069n\u0043\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbb.RevisionsSpinCountAttr)})
	}
	if _cbgbb.WorkbookAlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "w\u006f\u0072\u006b\u0062oo\u006bA\u006c\u0067\u006f\u0072\u0069t\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbb.WorkbookAlgorithmNameAttr)})
	}
	if _cbgbb.WorkbookHashValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0048\u0061\u0073\u0068V\u0061\u006c\u0075\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbb.WorkbookHashValueAttr)})
	}
	if _cbgbb.WorkbookSaltValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0061\u006c\u0074V\u0061\u006c\u0075\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbb.WorkbookSaltValueAttr)})
	}
	if _cbgbb.WorkbookSpinCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0070\u0069\u006eC\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbb.WorkbookSpinCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_ExternalSheetDataSet() *CT_ExternalSheetDataSet {
	_dgece := &CT_ExternalSheetDataSet{}
	return _dgece
}
func (_dggf *CT_CfRule) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dggf.TypeAttr != ST_CfTypeUnset {
		_gagc, _aabge := _dggf.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _aabge != nil {
			return _aabge
		}
		start.Attr = append(start.Attr, _gagc)
	}
	if _dggf.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_dggf.DxfIdAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079"}, Value: _fc.Sprintf("\u0025\u0076", _dggf.PriorityAttr)})
	if _dggf.StopIfTrueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u006f\u0070\u0049\u0066\u0054\u0072\u0075\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dggf.StopIfTrueAttr))})
	}
	if _dggf.AboveAverageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dggf.AboveAverageAttr))})
	}
	if _dggf.PercentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dggf.PercentAttr))})
	}
	if _dggf.BottomAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dggf.BottomAttr))})
	}
	if _dggf.OperatorAttr != ST_ConditionalFormattingOperatorUnset {
		_bebd, _eddc := _dggf.OperatorAttr.MarshalXMLAttr(_a.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _eddc != nil {
			return _eddc
		}
		start.Attr = append(start.Attr, _bebd)
	}
	if _dggf.TextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0065\u0078\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_dggf.TextAttr)})
	}
	if _dggf.TimePeriodAttr != ST_TimePeriodUnset {
		_bcab, _adgc := _dggf.TimePeriodAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"})
		if _adgc != nil {
			return _adgc
		}
		start.Attr = append(start.Attr, _bcab)
	}
	if _dggf.RankAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061\u006e\u006b"}, Value: _fc.Sprintf("\u0025\u0076", *_dggf.RankAttr)})
	}
	if _dggf.StdDevAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076"}, Value: _fc.Sprintf("\u0025\u0076", *_dggf.StdDevAttr)})
	}
	if _dggf.EqualAverageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0071\u0075a\u006c\u0041\u0076\u0065\u0072\u0061\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dggf.EqualAverageAttr))})
	}
	e.EncodeToken(start)
	if _dggf.Formula != nil {
		_dabc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061"}}
		for _, _cacd := range _dggf.Formula {
			e.EncodeElement(_cacd, _dabc)
		}
	}
	if _dggf.ColorScale != nil {
		_agcbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}}
		e.EncodeElement(_dggf.ColorScale, _agcbc)
	}
	if _dggf.DataBar != nil {
		_faag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0042\u0061\u0072"}}
		e.EncodeElement(_dggf.DataBar, _faag)
	}
	if _dggf.IconSet != nil {
		_bgdb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0069\u0063\u006f\u006e\u0053\u0065\u0074"}}
		e.EncodeElement(_dggf.IconSet, _bgdb)
	}
	if _dggf.ExtLst != nil {
		_gdc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dggf.ExtLst, _gdc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_CacheField struct {

	// PivotCache Field Name
	NameAttr string

	// PivotCache Field Caption
	CaptionAttr *string

	// Property Name
	PropertyNameAttr *string

	// Server-based Field
	ServerFieldAttr *bool

	// Unique List Retrieved
	UniqueListAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Calculated Field Formula
	FormulaAttr *string

	// SQL Data Type
	SqlTypeAttr *int32

	// Hierarchy
	HierarchyAttr *int32

	// Hierarchy Level
	LevelAttr *uint32

	// Database Field
	DatabaseFieldAttr *bool

	// Member Property Count
	MappingCountAttr *uint32

	// Member Property Field
	MemberPropertyFieldAttr *bool

	// Shared Items
	SharedItems *CT_SharedItems

	// Field Group Properties
	FieldGroup *CT_FieldGroup

	// Member Properties Map
	MpMap []*CT_X

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_bbgbfb *ST_PageOrder) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bbgbfb = 0
	case "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072":
		*_bbgbfb = 1
	case "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e":
		*_bbgbfb = 2
	}
	return nil
}
func (_aaec *CT_DefinedNames) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gdcfe:
	for {
		_acgee, _dcdg := d.Token()
		if _dcdg != nil {
			return _dcdg
		}
		switch _cedee := _acgee.(type) {
		case _a.StartElement:
			switch _cedee.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}:
				_ebgfa := NewCT_DefinedName()
				if _acgfe := d.DecodeElement(_ebgfa, &_cedee); _acgfe != nil {
					return _acgfe
				}
				_aaec.DefinedName = append(_aaec.DefinedName, _ebgfa)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073\u0020\u0025\u0076", _cedee.Name)
				if _fafd := d.Skip(); _fafd != nil {
					return _fafd
				}
			}
		case _a.EndElement:
			break _gdcfe
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Hyperlink and its children
func (_fddfb *CT_Hyperlink) Validate() error {
	return _fddfb.ValidateWithPath("\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b")
}

type ST_CellFormulaType byte

func (_ecbfdd *CT_Tuple) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edfad := range start.Attr {
		if _edfad.Name.Local == "\u0066\u006c\u0064" {
			_fgbccg, _ecdfff := _f.ParseUint(_edfad.Value, 10, 32)
			if _ecdfff != nil {
				return _ecdfff
			}
			_ebagb := uint32(_fgbccg)
			_ecbfdd.FldAttr = &_ebagb
			continue
		}
		if _edfad.Name.Local == "\u0068\u0069\u0065\u0072" {
			_adgbdf, _cdcag := _f.ParseUint(_edfad.Value, 10, 32)
			if _cdcag != nil {
				return _cdcag
			}
			_aefbb := uint32(_adgbdf)
			_ecbfdd.HierAttr = &_aefbb
			continue
		}
		if _edfad.Name.Local == "\u0069\u0074\u0065\u006d" {
			_gfdcc, _bbafba := _f.ParseUint(_edfad.Value, 10, 32)
			if _bbafba != nil {
				return _bbafba
			}
			_ecbfdd.ItemAttr = uint32(_gfdcc)
			continue
		}
	}
	for {
		_accfc, _cadbd := d.Token()
		if _cadbd != nil {
			return _fc.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u0075\u0070\u006c\u0065: \u0025\u0073", _cadbd)
		}
		if _adcgfa, _debebc := _accfc.(_a.EndElement); _debebc && _adcgfa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_agcdf *CT_MergeCell) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _deef := range start.Attr {
		if _deef.Name.Local == "\u0072\u0065\u0066" {
			_aadae, _edfga := _deef.Value, error(nil)
			if _edfga != nil {
				return _edfga
			}
			_agcdf.RefAttr = _aadae
			continue
		}
	}
	for {
		_dfaag, _agbcb := d.Token()
		if _agbcb != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065r\u0067\u0065\u0043\u0065\u006c\u006c\u003a\u0020\u0025\u0073", _agbcb)
		}
		if _gfgfbc, _dgggd := _dfaag.(_a.EndElement); _dgggd && _gfgfbc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Mdx struct {

	// Connection Name Index
	NAttr uint32

	// Cube Function Tag
	FAttr ST_MdxFunctionType

	// Tuple MDX Metadata
	T *CT_MdxTuple

	// Set MDX Metadata
	Ms *CT_MdxSet

	// Member Property MDX Metadata
	P *CT_MdxMemeberProp

	// KPI MDX Metadata
	K *CT_MdxKPI
}

func (_dfdda *CT_UndoInfo) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0064e\u0078"}, Value: _fc.Sprintf("\u0025\u0076", _dfdda.IndexAttr)})
	_ddccd, _dedfca := _dfdda.ExpAttr.MarshalXMLAttr(_a.Name{Local: "\u0065\u0078\u0070"})
	if _dedfca != nil {
		return _dedfca
	}
	start.Attr = append(start.Attr, _ddccd)
	if _dfdda.Ref3DAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u00663\u0044"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfdda.Ref3DAttr))})
	}
	if _dfdda.ArrayAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0072\u0072a\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfdda.ArrayAttr))})
	}
	if _dfdda.VAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfdda.VAttr))})
	}
	if _dfdda.NfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfdda.NfAttr))})
	}
	if _dfdda.CsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfdda.CsAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072"}, Value: _fc.Sprintf("\u0025\u0076", _dfdda.DrAttr)})
	if _dfdda.DnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_dfdda.DnAttr)})
	}
	if _dfdda.RAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_dfdda.RAttr)})
	}
	if _dfdda.SIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_dfdda.SIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_faffab ST_ItemType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_defa := _a.Attr{}
	_defa.Name = name
	switch _faffab {
	case ST_ItemTypeUnset:
		_defa.Value = ""
	case ST_ItemTypeData:
		_defa.Value = "\u0064\u0061\u0074\u0061"
	case ST_ItemTypeDefault:
		_defa.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_ItemTypeSum:
		_defa.Value = "\u0073\u0075\u006d"
	case ST_ItemTypeCountA:
		_defa.Value = "\u0063\u006f\u0075\u006e\u0074\u0041"
	case ST_ItemTypeAvg:
		_defa.Value = "\u0061\u0076\u0067"
	case ST_ItemTypeMax:
		_defa.Value = "\u006d\u0061\u0078"
	case ST_ItemTypeMin:
		_defa.Value = "\u006d\u0069\u006e"
	case ST_ItemTypeProduct:
		_defa.Value = "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case ST_ItemTypeCount:
		_defa.Value = "\u0063\u006f\u0075n\u0074"
	case ST_ItemTypeStdDev:
		_defa.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_ItemTypeStdDevP:
		_defa.Value = "\u0073t\u0064\u0044\u0065\u0076\u0050"
	case ST_ItemTypeVar:
		_defa.Value = "\u0076\u0061\u0072"
	case ST_ItemTypeVarP:
		_defa.Value = "\u0076\u0061\u0072\u0050"
	case ST_ItemTypeGrand:
		_defa.Value = "\u0067\u0072\u0061n\u0064"
	case ST_ItemTypeBlank:
		_defa.Value = "\u0062\u006c\u0061n\u006b"
	}
	return _defa, nil
}

// Validate validates the CT_PivotArea and its children
func (_degbaa *CT_PivotArea) Validate() error {
	return _degbaa.ValidateWithPath("\u0043\u0054\u005fP\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061")
}

// ValidateWithPath validates the CT_PageSetup and its children, prefixing error messages with path
func (_dafcbe *CT_PageSetup) ValidateWithPath(path string) error {
	if _dafcbe.PaperHeightAttr != nil {
		if !_ae.ST_PositiveUniversalMeasurePatternRe.MatchString(*_dafcbe.PaperHeightAttr) {
			return _fc.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ae.ST_PositiveUniversalMeasurePatternRe, *_dafcbe.PaperHeightAttr)
		}
	}
	if _dafcbe.PaperHeightAttr != nil {
		if !_ae.ST_UniversalMeasurePatternRe.MatchString(*_dafcbe.PaperHeightAttr) {
			return _fc.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ae.ST_UniversalMeasurePatternRe, *_dafcbe.PaperHeightAttr)
		}
	}
	if _dafcbe.PaperWidthAttr != nil {
		if !_ae.ST_PositiveUniversalMeasurePatternRe.MatchString(*_dafcbe.PaperWidthAttr) {
			return _fc.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ae.ST_PositiveUniversalMeasurePatternRe, *_dafcbe.PaperWidthAttr)
		}
	}
	if _dafcbe.PaperWidthAttr != nil {
		if !_ae.ST_UniversalMeasurePatternRe.MatchString(*_dafcbe.PaperWidthAttr) {
			return _fc.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ae.ST_UniversalMeasurePatternRe, *_dafcbe.PaperWidthAttr)
		}
	}
	if _ccfea := _dafcbe.PageOrderAttr.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u004f\u0072\u0064\u0065r\u0041\u0074\u0074\u0072"); _ccfea != nil {
		return _ccfea
	}
	if _gaede := _dafcbe.OrientationAttr.ValidateWithPath(path + "\u002f\u004fr\u0069\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _gaede != nil {
		return _gaede
	}
	if _aaagf := _dafcbe.CellCommentsAttr.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0043\u006f\u006d\u006d\u0065\u006e\u0074s\u0041\u0074\u0074\u0072"); _aaagf != nil {
		return _aaagf
	}
	if _gfga := _dafcbe.ErrorsAttr.ValidateWithPath(path + "/\u0045\u0072\u0072\u006f\u0072\u0073\u0041\u0074\u0074\u0072"); _gfga != nil {
		return _gfga
	}
	return nil
}

// Validate validates the CT_IconSet and its children
func (_aaaac *CT_IconSet) Validate() error {
	return _aaaac.ValidateWithPath("\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0053\u0065\u0074")
}
func (_eegd *CT_CacheField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _eegd.NameAttr)})
	if _eegd.CaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_eegd.CaptionAttr)})
	}
	if _eegd.PropertyNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006fp\u0065\u0072\u0074\u0079\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_eegd.PropertyNameAttr)})
	}
	if _eegd.ServerFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eegd.ServerFieldAttr))})
	}
	if _eegd.UniqueListAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004c\u0069\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eegd.UniqueListAttr))})
	}
	if _eegd.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_eegd.NumFmtIdAttr)})
	}
	if _eegd.FormulaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _fc.Sprintf("\u0025\u0076", *_eegd.FormulaAttr)})
	}
	if _eegd.SqlTypeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073q\u006c\u0054\u0079\u0070\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_eegd.SqlTypeAttr)})
	}
	if _eegd.HierarchyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y"}, Value: _fc.Sprintf("\u0025\u0076", *_eegd.HierarchyAttr)})
	}
	if _eegd.LevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_eegd.LevelAttr)})
	}
	if _eegd.DatabaseFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0046\u0069\u0065\u006c\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eegd.DatabaseFieldAttr))})
	}
	if _eegd.MappingCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0070p\u0069\u006e\u0067\u0043\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_eegd.MappingCountAttr)})
	}
	if _eegd.MemberPropertyFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u006d\u0062er\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0046\u0069\u0065\u006c\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eegd.MemberPropertyFieldAttr))})
	}
	e.EncodeToken(start)
	if _eegd.SharedItems != nil {
		_afeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_eegd.SharedItems, _afeg)
	}
	if _eegd.FieldGroup != nil {
		_bcd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}}
		e.EncodeElement(_eegd.FieldGroup, _bcd)
	}
	if _eegd.MpMap != nil {
		_bcb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006d\u0070\u004d\u0061\u0070"}}
		for _, _fgd := range _eegd.MpMap {
			e.EncodeElement(_fgd, _bcb)
		}
	}
	if _eegd.ExtLst != nil {
		_agdg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eegd.ExtLst, _agdg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Members and its children
func (_bbfea *CT_Members) Validate() error {
	return _bbfea.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0073")
}

type ST_SheetState byte

// ValidateWithPath validates the CT_SmartTagPr and its children, prefixing error messages with path
func (_fbbdb *CT_SmartTagPr) ValidateWithPath(path string) error {
	if _ccfgg := _fbbdb.ShowAttr.ValidateWithPath(path + "\u002fS\u0068\u006f\u0077\u0041\u0074\u0074r"); _ccfgg != nil {
		return _ccfgg
	}
	return nil
}
func (_cbbada *CT_SmartTagPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cbbada.EmbedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006d\u0062e\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbbada.EmbedAttr))})
	}
	if _cbbada.ShowAttr != ST_SmartTagShowUnset {
		_dcddf, _egeeff := _cbbada.ShowAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0068\u006f\u0077"})
		if _egeeff != nil {
			return _egeeff
		}
		start.Attr = append(start.Attr, _dcddf)
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MetadataRecord and its children, prefixing error messages with path
func (_eebaff *CT_MetadataRecord) ValidateWithPath(path string) error { return nil }
func NewCT_UnderlineProperty() *CT_UnderlineProperty {
	_edffcf := &CT_UnderlineProperty{}
	return _edffcf
}
func (_cbaaf *ST_OleUpdate) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bdecb, _dbeab := d.Token()
	if _dbeab != nil {
		return _dbeab
	}
	if _bdgcd, _fgbgb := _bdecb.(_a.EndElement); _fgbgb && _bdgcd.Name == start.Name {
		*_cbaaf = 1
		return nil
	}
	if _bafbfc, _bgagdd := _bdecb.(_a.CharData); !_bgagdd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdecb)
	} else {
		switch string(_bafbfc) {
		case "":
			*_cbaaf = 0
		case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053":
			*_cbaaf = 1
		case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c":
			*_cbaaf = 2
		}
	}
	_bdecb, _dbeab = d.Token()
	if _dbeab != nil {
		return _dbeab
	}
	if _gbgbfg, _ccbeeb := _bdecb.(_a.EndElement); _ccbeeb && _gbgbfg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdecb)
}

// ValidateWithPath validates the CT_PageBreak and its children, prefixing error messages with path
func (_cadee *CT_PageBreak) ValidateWithPath(path string) error {
	for _abdab, _cgdee := range _cadee.Brk {
		if _cfcac := _cgdee.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0042\u0072\u006b\u005b\u0025\u0064\u005d", path, _abdab)); _cfcac != nil {
			return _cfcac
		}
	}
	return nil
}
func (_babbgb *CT_Mdx) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _babbgb.NAttr)})
	_ebbg, _afbcba := _babbgb.FAttr.MarshalXMLAttr(_a.Name{Local: "\u0066"})
	if _afbcba != nil {
		return _afbcba
	}
	start.Attr = append(start.Attr, _ebbg)
	e.EncodeToken(start)
	if _babbgb.T != nil {
		_bcea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074"}}
		e.EncodeElement(_babbgb.T, _bcea)
	}
	if _babbgb.Ms != nil {
		_ebgga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003am\u0073"}}
		e.EncodeElement(_babbgb.Ms, _ebgga)
	}
	if _babbgb.P != nil {
		_fccde := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070"}}
		e.EncodeElement(_babbgb.P, _fccde)
	}
	if _babbgb.K != nil {
		_bbaab := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006b"}}
		e.EncodeElement(_babbgb.K, _bbaab)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_abegd ST_PivotAreaType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_abegd.String(), start)
}

// ValidateWithPath validates the CT_ExternalLink and its children, prefixing error messages with path
func (_fbgcc *CT_ExternalLink) ValidateWithPath(path string) error {
	if _fbgcc.Choice != nil {
		if _ebda := _fbgcc.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _ebda != nil {
			return _ebda
		}
	}
	if _fbgcc.ExtLst != nil {
		if _gbeeg := _fbgcc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbeeg != nil {
			return _gbeeg
		}
	}
	return nil
}
func NewCT_Parameters() *CT_Parameters { _fdcfd := &CT_Parameters{}; return _fdcfd }
func (_bbfegc *Users) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bbfegc.CT_Users = *NewCT_Users()
	for _, _ffgfda := range start.Attr {
		if _ffgfda.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cdabff, _dcbfe := _f.ParseUint(_ffgfda.Value, 10, 32)
			if _dcbfe != nil {
				return _dcbfe
			}
			_ffgcgb := uint32(_cdabff)
			_bbfegc.CountAttr = &_ffgcgb
			continue
		}
	}
_bcefd:
	for {
		_eccfb, _dcdgac := d.Token()
		if _dcdgac != nil {
			return _dcdgac
		}
		switch _gfgefd := _eccfb.(type) {
		case _a.StartElement:
			switch _gfgefd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}:
				_baedba := NewCT_SharedUser()
				if _dccgga := d.DecodeElement(_baedba, &_gfgefd); _dccgga != nil {
					return _dccgga
				}
				_bbfegc.UserInfo = append(_bbfegc.UserInfo, _baedba)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0055\u0073\u0065r\u0073 \u0025\u0076", _gfgefd.Name)
				if _eccdg := d.Skip(); _eccdg != nil {
					return _eccdg
				}
			}
		case _a.EndElement:
			break _bcefd
		case _a.CharData:
		}
	}
	return nil
}
func NewExternalLink() *ExternalLink {
	_ddgdc := &ExternalLink{}
	_ddgdc.CT_ExternalLink = *NewCT_ExternalLink()
	return _ddgdc
}
func (_acecc *CT_Member) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _acecc.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_afcdc ST_PivotFilterType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_afcdc.String(), start)
}
func (_bggaa *CT_FutureMetadataBlock) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_ggfe:
	for {
		_fdgec, _eaaf := d.Token()
		if _eaaf != nil {
			return _eaaf
		}
		switch _bbdba := _fdgec.(type) {
		case _a.StartElement:
			switch _bbdba.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bggaa.ExtLst = NewCT_ExtensionList()
				if _cedfg := d.DecodeElement(_bggaa.ExtLst, &_bbdba); _cedfg != nil {
					return _cedfg
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0075\u0074\u0075r\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0020\u0025\u0076", _bbdba.Name)
				if _cdcbe := d.Skip(); _cdcbe != nil {
					return _cdcbe
				}
			}
		case _a.EndElement:
			break _ggfe
		case _a.CharData:
		}
	}
	return nil
}

type CT_CustomWorkbookViews struct {

	// Custom Workbook View
	CustomWorkbookView []*CT_CustomWorkbookView
}
type ST_DataValidationType byte

// Validate validates the CT_X and its children
func (_dcacgf *CT_X) Validate() error { return _dcacgf.ValidateWithPath("\u0043\u0054\u005f\u0058") }

// ValidateWithPath validates the CT_Location and its children, prefixing error messages with path
func (_eebabc *CT_Location) ValidateWithPath(path string) error { return nil }
func (_bdddg *CT_PivotArea) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bdddg.FieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bdddg.FieldAttr)})
	}
	if _bdddg.TypeAttr != ST_PivotAreaTypeUnset {
		_dgdgf, _daacgd := _bdddg.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _daacgd != nil {
			return _daacgd
		}
		start.Attr = append(start.Attr, _dgdgf)
	}
	if _bdddg.DataOnlyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061\u004f\u006e\u006c\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdddg.DataOnlyAttr))})
	}
	if _bdddg.LabelOnlyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006ca\u0062\u0065\u006c\u004f\u006e\u006cy"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdddg.LabelOnlyAttr))})
	}
	if _bdddg.GrandRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0052\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdddg.GrandRowAttr))})
	}
	if _bdddg.GrandColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0043\u006f\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdddg.GrandColAttr))})
	}
	if _bdddg.CacheIndexAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061\u0063\u0068\u0065\u0049\u006e\u0064\u0065\u0078"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdddg.CacheIndexAttr))})
	}
	if _bdddg.OutlineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdddg.OutlineAttr))})
	}
	if _bdddg.OffsetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u0066\u0066\u0073\u0065\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bdddg.OffsetAttr)})
	}
	if _bdddg.CollapsedLevelsAreSubtotalsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u006f\u006c\u006c\u0061\u0070\u0073e\u0064\u004c\u0065\u0076\u0065\u006c\u0073\u0041\u0072e\u0053\u0075\u0062t\u006ft\u0061\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdddg.CollapsedLevelsAreSubtotalsAttr))})
	}
	if _bdddg.AxisAttr != ST_AxisUnset {
		_cfcc, _adaeb := _bdddg.AxisAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _adaeb != nil {
			return _adaeb
		}
		start.Attr = append(start.Attr, _cfcc)
	}
	if _bdddg.FieldPositionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065\u006c\u0064\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_bdddg.FieldPositionAttr)})
	}
	e.EncodeToken(start)
	if _bdddg.References != nil {
		_fgafa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}}
		e.EncodeElement(_bdddg.References, _fgafa)
	}
	if _bdddg.ExtLst != nil {
		_ffcffa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bdddg.ExtLst, _ffcffa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_MetadataStringIndex struct {

	// Index Value
	XAttr uint32

	// String is a Set
	SAttr *bool
}

// ValidateWithPath validates the CT_DdeItems and its children, prefixing error messages with path
func (_gdbbge *CT_DdeItems) ValidateWithPath(path string) error {
	for _daaf, _gffff := range _gdbbge.DdeItem {
		if _dfdcd := _gffff.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0044\u0064\u0065\u0049\u0074\u0065m\u005b\u0025\u0064\u005d", path, _daaf)); _dfdcd != nil {
			return _dfdcd
		}
	}
	return nil
}
func (_bccc *CT_Cell) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ffeff := range start.Attr {
		if _ffeff.Name.Local == "\u0072" {
			_cabfg, _bddfb := _ffeff.Value, error(nil)
			if _bddfb != nil {
				return _bddfb
			}
			_bccc.RAttr = &_cabfg
			continue
		}
		if _ffeff.Name.Local == "\u0073" {
			_fcac, _fdac := _f.ParseUint(_ffeff.Value, 10, 32)
			if _fdac != nil {
				return _fdac
			}
			_bgee := uint32(_fcac)
			_bccc.SAttr = &_bgee
			continue
		}
		if _ffeff.Name.Local == "\u0074" {
			_bccc.TAttr.UnmarshalXMLAttr(_ffeff)
			continue
		}
		if _ffeff.Name.Local == "\u0063\u006d" {
			_ggfcc, _acee := _f.ParseUint(_ffeff.Value, 10, 32)
			if _acee != nil {
				return _acee
			}
			_bda := uint32(_ggfcc)
			_bccc.CmAttr = &_bda
			continue
		}
		if _ffeff.Name.Local == "\u0076\u006d" {
			_ccdc, _bgc := _f.ParseUint(_ffeff.Value, 10, 32)
			if _bgc != nil {
				return _bgc
			}
			_ffbf := uint32(_ccdc)
			_bccc.VmAttr = &_ffbf
			continue
		}
		if _ffeff.Name.Local == "\u0070\u0068" {
			_ggg, _acf := _f.ParseBool(_ffeff.Value)
			if _acf != nil {
				return _acf
			}
			_bccc.PhAttr = &_ggg
			continue
		}
	}
_gbdc:
	for {
		_fabae, _bea := d.Token()
		if _bea != nil {
			return _bea
		}
		switch _dfbe := _fabae.(type) {
		case _a.StartElement:
			switch _dfbe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066"}:
				_bccc.F = NewCT_CellFormula()
				if _eca := d.DecodeElement(_bccc.F, &_dfbe); _eca != nil {
					return _eca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				_bccc.V = new(string)
				if _cdac := d.DecodeElement(_bccc.V, &_dfbe); _cdac != nil {
					return _cdac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0073"}:
				_bccc.Is = NewCT_Rst()
				if _cbac := d.DecodeElement(_bccc.Is, &_dfbe); _cbac != nil {
					return _cbac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bccc.ExtLst = NewCT_ExtensionList()
				if _ccfa := d.DecodeElement(_bccc.ExtLst, &_dfbe); _ccfa != nil {
					return _ccfa
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _dfbe.Name)
				if _edcb := d.Skip(); _edcb != nil {
					return _edcb
				}
			}
		case _a.EndElement:
			break _gbdc
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_FontScheme() *CT_FontScheme {
	_bgeca := &CT_FontScheme{}
	_bgeca.ValAttr = ST_FontScheme(1)
	return _bgeca
}
func (_bcefe ST_DataValidationImeMode) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bcefe.String(), start)
}
func (_bggdd *CT_SheetDimension) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dggbga := range start.Attr {
		if _dggbga.Name.Local == "\u0072\u0065\u0066" {
			_cbdceb, _fcddgd := _dggbga.Value, error(nil)
			if _fcddgd != nil {
				return _fcddgd
			}
			_bggdd.RefAttr = _cbdceb
			continue
		}
	}
	for {
		_efbgd, _agfgf := d.Token()
		if _agfgf != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e: \u0025\u0073", _agfgf)
		}
		if _cfbef, _acdggb := _efbgd.(_a.EndElement); _acdggb && _cfbef.Name == start.Name {
			break
		}
	}
	return nil
}
func (_egdfa *CT_Connections) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_dfeaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}}
	for _, _fbebf := range _egdfa.Connection {
		e.EncodeElement(_fbebf, _dfeaf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fceba *CT_GroupMembers) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fceba.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fceba.CountAttr)})
	}
	e.EncodeToken(start)
	_dada := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072"}}
	for _, _abdc := range _fceba.GroupMember {
		e.EncodeElement(_abdc, _dada)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_Type byte

func (_eegfa *CT_InputCells) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fc.Sprintf("\u0025\u0076", _eegfa.RAttr)})
	if _eegfa.DeletedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eegfa.DeletedAttr))})
	}
	if _eegfa.UndoneAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0064\u006f\u006e\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eegfa.UndoneAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", _eegfa.ValAttr)})
	if _eegfa.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_eegfa.NumFmtIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_CustomProperty() *CT_CustomProperty { _adbe := &CT_CustomProperty{}; return _adbe }

// ValidateWithPath validates the CT_CacheHierarchy and its children, prefixing error messages with path
func (_gag *CT_CacheHierarchy) ValidateWithPath(path string) error {
	if _gag.FieldsUsage != nil {
		if _eefa := _gag.FieldsUsage.ValidateWithPath(path + "\u002f\u0046\u0069e\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"); _eefa != nil {
			return _eefa
		}
	}
	if _gag.GroupLevels != nil {
		if _ecga := _gag.GroupLevels.ValidateWithPath(path + "\u002f\u0047\u0072o\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"); _ecga != nil {
			return _ecga
		}
	}
	if _gag.ExtLst != nil {
		if _acdb := _gag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acdb != nil {
			return _acdb
		}
	}
	return nil
}
func (_egcdb *CT_PivotSelection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_egcdb.PivotArea = NewCT_PivotArea()
	for _, _fecg := range start.Attr {
		if _fecg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fecg.Name.Local == "\u0069\u0064" || _fecg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fecg.Name.Local == "\u0069\u0064" {
			_fggegg, _ffcbg := _fecg.Value, error(nil)
			if _ffcbg != nil {
				return _ffcbg
			}
			_egcdb.IdAttr = &_fggegg
			continue
		}
		if _fecg.Name.Local == "\u006d\u0069\u006e" {
			_gbeaf, _begbc := _f.ParseUint(_fecg.Value, 10, 32)
			if _begbc != nil {
				return _begbc
			}
			_egggg := uint32(_gbeaf)
			_egcdb.MinAttr = &_egggg
			continue
		}
		if _fecg.Name.Local == "\u006d\u0061\u0078" {
			_ddabf, _ecegd := _f.ParseUint(_fecg.Value, 10, 32)
			if _ecegd != nil {
				return _ecegd
			}
			_cccff := uint32(_ddabf)
			_egcdb.MaxAttr = &_cccff
			continue
		}
		if _fecg.Name.Local == "\u006c\u0061\u0062e\u006c" {
			_gfdab, _eddabg := _f.ParseBool(_fecg.Value)
			if _eddabg != nil {
				return _eddabg
			}
			_egcdb.LabelAttr = &_gfdab
			continue
		}
		if _fecg.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0052\u006fw" {
			_dgfdga, _ccfgc := _f.ParseUint(_fecg.Value, 10, 32)
			if _ccfgc != nil {
				return _ccfgc
			}
			_egcae := uint32(_dgfdga)
			_egcdb.ActiveRowAttr = &_egcae
			continue
		}
		if _fecg.Name.Local == "\u0065\u0078\u0074\u0065\u006e\u0064\u0061\u0062\u006c\u0065" {
			_ddfe, _acgdde := _f.ParseBool(_fecg.Value)
			if _acgdde != nil {
				return _acgdde
			}
			_egcdb.ExtendableAttr = &_ddfe
			continue
		}
		if _fecg.Name.Local == "\u0061\u0078\u0069\u0073" {
			_egcdb.AxisAttr.UnmarshalXMLAttr(_fecg)
			continue
		}
		if _fecg.Name.Local == "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn" {
			_gccec, _gacae := _f.ParseUint(_fecg.Value, 10, 32)
			if _gacae != nil {
				return _gacae
			}
			_eagca := uint32(_gccec)
			_egcdb.DimensionAttr = &_eagca
			continue
		}
		if _fecg.Name.Local == "\u0073\u0074\u0061r\u0074" {
			_efee, _bgfd := _f.ParseUint(_fecg.Value, 10, 32)
			if _bgfd != nil {
				return _bgfd
			}
			_dddecc := uint32(_efee)
			_egcdb.StartAttr = &_dddecc
			continue
		}
		if _fecg.Name.Local == "\u0070\u0061\u006e\u0065" {
			_egcdb.PaneAttr.UnmarshalXMLAttr(_fecg)
			continue
		}
		if _fecg.Name.Local == "\u0064\u0061\u0074\u0061" {
			_gcga, _fgagfc := _f.ParseBool(_fecg.Value)
			if _fgagfc != nil {
				return _fgagfc
			}
			_egcdb.DataAttr = &_gcga
			continue
		}
		if _fecg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dcdcae, _bbbfc := _f.ParseUint(_fecg.Value, 10, 32)
			if _bbbfc != nil {
				return _bbbfc
			}
			_bacbb := uint32(_dcdcae)
			_egcdb.CountAttr = &_bacbb
			continue
		}
		if _fecg.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0043\u006fl" {
			_ebgbdc, _ebaebg := _f.ParseUint(_fecg.Value, 10, 32)
			if _ebaebg != nil {
				return _ebaebg
			}
			_fgafbdb := uint32(_ebgbdc)
			_egcdb.ActiveColAttr = &_fgafbdb
			continue
		}
		if _fecg.Name.Local == "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0052\u006f\u0077" {
			_dbddb, _bcbbf := _f.ParseUint(_fecg.Value, 10, 32)
			if _bcbbf != nil {
				return _bcbbf
			}
			_eegea := uint32(_dbddb)
			_egcdb.PreviousRowAttr = &_eegea
			continue
		}
		if _fecg.Name.Local == "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0043\u006f\u006c" {
			_gegee, _fcbgf := _f.ParseUint(_fecg.Value, 10, 32)
			if _fcbgf != nil {
				return _fcbgf
			}
			_facda := uint32(_gegee)
			_egcdb.PreviousColAttr = &_facda
			continue
		}
		if _fecg.Name.Local == "\u0063\u006c\u0069c\u006b" {
			_agbee, _dbcaa := _f.ParseUint(_fecg.Value, 10, 32)
			if _dbcaa != nil {
				return _dbcaa
			}
			_dagbd := uint32(_agbee)
			_egcdb.ClickAttr = &_dagbd
			continue
		}
		if _fecg.Name.Local == "\u0073\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072" {
			_edeff, _dcbgg := _f.ParseBool(_fecg.Value)
			if _dcbgg != nil {
				return _dcbgg
			}
			_egcdb.ShowHeaderAttr = &_edeff
			continue
		}
	}
_cdfcg:
	for {
		_afcbc, _cfgef := d.Token()
		if _cfgef != nil {
			return _cfgef
		}
		switch _cfdcd := _afcbc.(type) {
		case _a.StartElement:
			switch _cfdcd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _bfecb := d.DecodeElement(_egcdb.PivotArea, &_cfdcd); _bfecb != nil {
					return _bfecb
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _cfdcd.Name)
				if _eaafg := d.Skip(); _eaafg != nil {
					return _eaafg
				}
			}
		case _a.EndElement:
			break _cdfcg
		case _a.CharData:
		}
	}
	return nil
}
func (_fcfca ST_CfvoType) ValidateWithPath(path string) error {
	switch _fcfca {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcfca))
	}
	return nil
}

// ValidateWithPath validates the CT_PivotDimension and its children, prefixing error messages with path
func (_cgfg *CT_PivotDimension) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_RevisionAutoFormatting and its children, prefixing error messages with path
func (_gaedef *CT_RevisionAutoFormatting) ValidateWithPath(path string) error { return nil }
func (_ffdf *CT_CustomSheetViews) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_cbdee:
	for {
		_bged, _fbegb := d.Token()
		if _fbegb != nil {
			return _fbegb
		}
		switch _ebecdg := _bged.(type) {
		case _a.StartElement:
			switch _ebecdg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}:
				_aead := NewCT_CustomSheetView()
				if _ddgf := d.DecodeElement(_aead, &_ebecdg); _ddgf != nil {
					return _ddgf
				}
				_ffdf.CustomSheetView = append(_ffdf.CustomSheetView, _aead)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053he\u0065\u0074\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _ebecdg.Name)
				if _fccdd := d.Skip(); _fccdd != nil {
					return _fccdd
				}
			}
		case _a.EndElement:
			break _cbdee
		case _a.CharData:
		}
	}
	return nil
}

type CT_InputCells struct {

	// Reference
	RAttr string

	// Deleted
	DeletedAttr *bool

	// Undone
	UndoneAttr *bool

	// Value
	ValAttr string

	// Number Format Id
	NumFmtIdAttr *uint32
}

// Validate validates the CT_CsPageSetup and its children
func (_cgcb *CT_CsPageSetup) Validate() error {
	return _cgcb.ValidateWithPath("\u0043\u0054\u005f\u0043\u0073\u0050\u0061\u0067\u0065S\u0065\u0074\u0075\u0070")
}
func (_daacb *CT_FontFamily) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_daacb.ValAttr = 0
	for _, _bbbdc := range start.Attr {
		if _bbbdc.Name.Local == "\u0076\u0061\u006c" {
			_bgge, _dcag := _f.ParseInt(_bbbdc.Value, 10, 64)
			if _dcag != nil {
				return _dcag
			}
			_daacb.ValAttr = _bgge
			continue
		}
	}
	for {
		_aceeg, _faeg := d.Token()
		if _faeg != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046o\u006et\u0046a\u006d\u0069\u006c\u0079\u003a\u0020\u0025s", _faeg)
		}
		if _bbcb, _caace := _aceeg.(_a.EndElement); _caace && _bbcb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableStyleInfo and its children, prefixing error messages with path
func (_aafdge *CT_TableStyleInfo) ValidateWithPath(path string) error { return nil }
func (_daddf *ST_SortType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_daddf = 0
	case "\u006e\u006f\u006e\u0065":
		*_daddf = 1
	case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
		*_daddf = 2
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
		*_daddf = 3
	case "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061":
		*_daddf = 4
	case "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061":
		*_daddf = 5
	case "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c":
		*_daddf = 6
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c":
		*_daddf = 7
	}
	return nil
}

const (
	ST_PrintErrorUnset     ST_PrintError = 0
	ST_PrintErrorDisplayed ST_PrintError = 1
	ST_PrintErrorBlank     ST_PrintError = 2
	ST_PrintErrorDash      ST_PrintError = 3
	ST_PrintErrorNA        ST_PrintError = 4
)

func NewCT_VolTopic() *CT_VolTopic { _gbgfbd := &CT_VolTopic{}; return _gbgfbd }

type CT_MdxMemeberProp struct {

	// Member Unique Name Index
	NAttr uint32

	// Property Name Index
	NpAttr uint32
}

func (_bddde *CT_Rst) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _bddde.T != nil {
		_gcebd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074"}}
		_fca.AddPreserveSpaceAttr(&_gcebd, *_bddde.T)
		e.EncodeElement(_bddde.T, _gcebd)
	}
	if _bddde.R != nil {
		_fafecb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072"}}
		for _, _cgefga := range _bddde.R {
			e.EncodeElement(_cgefga, _fafecb)
		}
	}
	if _bddde.RPh != nil {
		_bbeeaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0050\u0068"}}
		for _, _fagcd := range _bddde.RPh {
			e.EncodeElement(_fagcd, _bbeeaa)
		}
	}
	if _bddde.PhoneticPr != nil {
		_cbcae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_bddde.PhoneticPr, _cbcae)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_TextVAlign byte

// Validate validates the CT_OleLink and its children
func (_gafda *CT_OleLink) Validate() error {
	return _gafda.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004c\u0069\u006e\u006b")
}
func NewCT_Extension() *CT_Extension { _aafgf := &CT_Extension{}; return _aafgf }

// Validate validates the CT_CalculatedMembers and its children
func (_dcgac *CT_CalculatedMembers) Validate() error {
	return _dcgac.ValidateWithPath("C\u0054_\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073")
}
func NewCT_Groups() *CT_Groups { _dbfc := &CT_Groups{}; return _dbfc }
func NewCT_MdxKPI() *CT_MdxKPI {
	_fedda := &CT_MdxKPI{}
	_fedda.PAttr = ST_MdxKPIProperty(1)
	return _fedda
}
func NewCT_QueryTable() *CT_QueryTable { _aaccd := &CT_QueryTable{}; return _aaccd }
func (_aeeaf ST_DataValidationOperator) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bffga := _a.Attr{}
	_bffga.Name = name
	switch _aeeaf {
	case ST_DataValidationOperatorUnset:
		_bffga.Value = ""
	case ST_DataValidationOperatorBetween:
		_bffga.Value = "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case ST_DataValidationOperatorNotBetween:
		_bffga.Value = "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_DataValidationOperatorEqual:
		_bffga.Value = "\u0065\u0071\u0075a\u006c"
	case ST_DataValidationOperatorNotEqual:
		_bffga.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_DataValidationOperatorLessThan:
		_bffga.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_DataValidationOperatorLessThanOrEqual:
		_bffga.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_DataValidationOperatorGreaterThan:
		_bffga.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_DataValidationOperatorGreaterThanOrEqual:
		_bffga.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	}
	return _bffga, nil
}
func (_ccddf *CT_MergeCells) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dadfg := range start.Attr {
		if _dadfg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aacea, _bgdee := _f.ParseUint(_dadfg.Value, 10, 32)
			if _bgdee != nil {
				return _bgdee
			}
			_ddadd := uint32(_aacea)
			_ccddf.CountAttr = &_ddadd
			continue
		}
	}
_cefcef:
	for {
		_bfedb, _fbbbd := d.Token()
		if _fbbbd != nil {
			return _fbbbd
		}
		switch _beebc := _bfedb.(type) {
		case _a.StartElement:
			switch _beebc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0072\u0067\u0065\u0043\u0065\u006cl"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0072\u0067\u0065\u0043\u0065\u006cl"}:
				_fgdcb := NewCT_MergeCell()
				if _egcdd := d.DecodeElement(_fgdcb, &_beebc); _egcdd != nil {
					return _egcdd
				}
				_ccddf.MergeCell = append(_ccddf.MergeCell, _fgdcb)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004de\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073 \u0025\u0076", _beebc.Name)
				if _aafeca := d.Skip(); _aafeca != nil {
					return _aafeca
				}
			}
		case _a.EndElement:
			break _cefcef
		case _a.CharData:
		}
	}
	return nil
}

type CT_SmartTagType struct {

	// SmartTag Namespace URI
	NamespaceUriAttr *string

	// Name
	NameAttr *string

	// Smart Tag URL
	UrlAttr *string
}

func (_fcdfc *CT_QueryTableField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _fcdfc.IdAttr)})
	if _fcdfc.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fcdfc.NameAttr)})
	}
	if _fcdfc.DataBoundAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064a\u0074\u0061\u0042\u006f\u0075\u006ed"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fcdfc.DataBoundAttr))})
	}
	if _fcdfc.RowNumbersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fcdfc.RowNumbersAttr))})
	}
	if _fcdfc.FillFormulasAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fcdfc.FillFormulasAttr))})
	}
	if _fcdfc.ClippedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063l\u0069\u0070\u0070\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fcdfc.ClippedAttr))})
	}
	if _fcdfc.TableColumnIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fcdfc.TableColumnIdAttr)})
	}
	e.EncodeToken(start)
	if _fcdfc.ExtLst != nil {
		_daggfd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fcdfc.ExtLst, _daggfd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_XmlPr and its children
func (_bcbae *CT_XmlPr) Validate() error {
	return _bcbae.ValidateWithPath("\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072")
}
func (_afbc *CT_CacheFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _afbc.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_afbc.CountAttr)})
	}
	e.EncodeToken(start)
	if _afbc.CacheField != nil {
		_bggd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}}
		for _, _edd := range _afbc.CacheField {
			e.EncodeElement(_edd, _bggd)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_decda *CT_RElt) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _decda.RPr != nil {
		_bcedb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0050\u0072"}}
		e.EncodeElement(_decda.RPr, _bcedb)
	}
	_fdaag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074"}}
	_fca.AddPreserveSpaceAttr(&_fdaag, _decda.T)
	e.EncodeElement(_decda.T, _fdaag)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_RowFields() *CT_RowFields { _cedac := &CT_RowFields{}; return _cedac }

// Validate validates the CT_PivotTableStyle and its children
func (_ddcbd *CT_PivotTableStyle) Validate() error {
	return _ddcbd.ValidateWithPath("\u0043T\u005fP\u0069\u0076\u006f\u0074\u0054a\u0062\u006ce\u0053\u0074\u0079\u006c\u0065")
}
func (_eeea *CT_CellWatch) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acfa := range start.Attr {
		if _acfa.Name.Local == "\u0072" {
			_eeca, _gefbf := _acfa.Value, error(nil)
			if _gefbf != nil {
				return _gefbf
			}
			_eeea.RAttr = _eeca
			continue
		}
	}
	for {
		_bfed, _dafgd := d.Token()
		if _dafgd != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065l\u006c\u0057\u0061\u0074\u0063\u0068\u003a\u0020\u0025\u0073", _dafgd)
		}
		if _dggg, _bfdgc := _bfed.(_a.EndElement); _bfdgc && _dggg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_LegacyDrawing() *CT_LegacyDrawing { _gbcgb := &CT_LegacyDrawing{}; return _gbcgb }
func (_efbefa ST_WebSourceType) String() string {
	switch _efbefa {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0065e\u0074"
	case 2:
		return "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"
	case 3:
		return "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"
	case 4:
		return "\u0072\u0061\u006eg\u0065"
	case 5:
		return "\u0063\u0068\u0061r\u0074"
	case 6:
		return "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065"
	case 7:
		return "\u0071\u0075\u0065r\u0079"
	case 8:
		return "\u006c\u0061\u0062e\u006c"
	}
	return ""
}
func NewCT_MetadataStringIndex() *CT_MetadataStringIndex {
	_gceea := &CT_MetadataStringIndex{}
	return _gceea
}

// ValidateWithPath validates the VolTypes and its children, prefixing error messages with path
func (_adac *VolTypes) ValidateWithPath(path string) error {
	if _cdabdb := _adac.CT_VolTypes.ValidateWithPath(path); _cdabdb != nil {
		return _cdabdb
	}
	return nil
}

// ValidateWithPath validates the CT_RangePr and its children, prefixing error messages with path
func (_gffafc *CT_RangePr) ValidateWithPath(path string) error {
	if _caaba := _gffafc.GroupByAttr.ValidateWithPath(path + "\u002f\u0047\u0072o\u0075\u0070\u0042\u0079\u0041\u0074\u0074\u0072"); _caaba != nil {
		return _caaba
	}
	return nil
}

// Validate validates the CT_Authors and its children
func (_gaf *CT_Authors) Validate() error {
	return _gaf.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0074\u0068\u006f\u0072\u0073")
}
func (_cecbga *ST_Scope) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_begdcb, _befcd := d.Token()
	if _befcd != nil {
		return _befcd
	}
	if _bcafgb, _efcde := _begdcb.(_a.EndElement); _efcde && _bcafgb.Name == start.Name {
		*_cecbga = 1
		return nil
	}
	if _dfccgc, _eedgf := _begdcb.(_a.CharData); !_eedgf {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _begdcb)
	} else {
		switch string(_dfccgc) {
		case "":
			*_cecbga = 0
		case "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn":
			*_cecbga = 1
		case "\u0064\u0061\u0074\u0061":
			*_cecbga = 2
		case "\u0066\u0069\u0065l\u0064":
			*_cecbga = 3
		}
	}
	_begdcb, _befcd = d.Token()
	if _befcd != nil {
		return _befcd
	}
	if _fddgg, _dgcgc := _begdcb.(_a.EndElement); _dgcgc && _fddgg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _begdcb)
}

// ValidateWithPath validates the CT_rowItems and its children, prefixing error messages with path
func (_cfdegb *CT_rowItems) ValidateWithPath(path string) error {
	for _dcded, _aaeee := range _cfdegb.I {
		if _bageg := _aaeee.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _dcded)); _bageg != nil {
			return _bageg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellAlignment and its children, prefixing error messages with path
func (_acde *CT_CellAlignment) ValidateWithPath(path string) error {
	if _beebg := _acde.HorizontalAttr.ValidateWithPath(path + "\u002fH\u006fr\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0041\u0074\u0074\u0072"); _beebg != nil {
		return _beebg
	}
	if _gacb := _acde.VerticalAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u0074\u0074\u0072"); _gacb != nil {
		return _gacb
	}
	return nil
}

type CT_MemberProperties struct {

	// OLAP Member Properties Count
	CountAttr *uint32

	// OLAP Member Property
	Mp []*CT_MemberProperty
}
type CT_Col struct {

	// Minimum Column
	MinAttr uint32

	// Maximum Column
	MaxAttr uint32

	// Column Width
	WidthAttr *float64

	// Style
	StyleAttr *uint32

	// Hidden Columns
	HiddenAttr *bool

	// Best Fit Column Width
	BestFitAttr *bool

	// Custom Width
	CustomWidthAttr *bool

	// Show Phonetic Information
	PhoneticAttr *bool

	// Outline Level
	OutlineLevelAttr *uint8

	// Collapsed
	CollapsedAttr *bool
}
type CT_OleObjects struct {

	// Embedded Object
	OleObject []*CT_OleObject
}

func (_bfbfa *CT_OleLink) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ggecd := range start.Attr {
		if _ggecd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ggecd.Name.Local == "\u0069\u0064" || _ggecd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ggecd.Name.Local == "\u0069\u0064" {
			_fabec, _eaage := _ggecd.Value, error(nil)
			if _eaage != nil {
				return _eaage
			}
			_bfbfa.IdAttr = _fabec
			continue
		}
		if _ggecd.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_ggbfa, _aaffbac := _ggecd.Value, error(nil)
			if _aaffbac != nil {
				return _aaffbac
			}
			_bfbfa.ProgIdAttr = _ggbfa
			continue
		}
	}
_bcaag:
	for {
		_gbdca, _gdabd := d.Token()
		if _gdabd != nil {
			return _gdabd
		}
		switch _gdebg := _gbdca.(type) {
		case _a.StartElement:
			switch _gdebg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}:
				_bfbfa.OleItems = NewCT_OleItems()
				if _efbgc := d.DecodeElement(_bfbfa.OleItems, &_gdebg); _efbgc != nil {
					return _efbgc
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fO\u006c\u0065\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _gdebg.Name)
				if _afagb := d.Skip(); _afagb != nil {
					return _afagb
				}
			}
		case _a.EndElement:
			break _bcaag
		case _a.CharData:
		}
	}
	return nil
}

type CT_BookViews struct {

	// Workbook View
	WorkbookView []*CT_BookView
}

func (_fgaed *CT_WorkbookPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fgaed.Date1904Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0065\u0031\u0039\u0030\u0034"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.Date1904Attr))})
	}
	if _fgaed.ShowObjectsAttr != ST_ObjectsUnset {
		_gedggb, _cdfcf := _fgaed.ShowObjectsAttr.MarshalXMLAttr(_a.Name{Local: "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073"})
		if _cdfcf != nil {
			return _cdfcf
		}
		start.Attr = append(start.Attr, _gedggb)
	}
	if _fgaed.ShowBorderUnselectedTablesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0055n\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0054\u0061b\u006c\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.ShowBorderUnselectedTablesAttr))})
	}
	if _fgaed.FilterPrivacyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072\u0050\u0072\u0069\u0076\u0061\u0063\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.FilterPrivacyAttr))})
	}
	if _fgaed.PromptedSolutionsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074\u0065\u0064\u0053\u006f\u006c\u0075t\u0069\u006f\u006e\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.PromptedSolutionsAttr))})
	}
	if _fgaed.ShowInkAnnotationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0049\u006e\u006b\u0041\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.ShowInkAnnotationAttr))})
	}
	if _fgaed.BackupFileAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0061\u0063\u006b\u0075\u0070\u0046\u0069\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.BackupFileAttr))})
	}
	if _fgaed.SaveExternalLinkValuesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0061\u0076\u0065Ex\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0056\u0061\u006c\u0075e\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.SaveExternalLinkValuesAttr))})
	}
	if _fgaed.UpdateLinksAttr != ST_UpdateLinksUnset {
		_ddbad, _eadead := _fgaed.UpdateLinksAttr.MarshalXMLAttr(_a.Name{Local: "u\u0070\u0064\u0061\u0074\u0065\u004c\u0069\u006e\u006b\u0073"})
		if _eadead != nil {
			return _eadead
		}
		start.Attr = append(start.Attr, _ddbad)
	}
	if _fgaed.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fgaed.CodeNameAttr)})
	}
	if _fgaed.HidePivotFieldListAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068i\u0064e\u0050\u0069\u0076\u006f\u0074F\u0069\u0065l\u0064\u004c\u0069\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.HidePivotFieldListAttr))})
	}
	if _fgaed.ShowPivotChartFilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068o\u0077\u0050\u0069\u0076\u006f\u0074\u0043\u0068a\u0072\u0074\u0046\u0069lt\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.ShowPivotChartFilterAttr))})
	}
	if _fgaed.AllowRefreshQueryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0052\u0065\u0066\u0072\u0065\u0073\u0068Q\u0075\u0065\u0072\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.AllowRefreshQueryAttr))})
	}
	if _fgaed.PublishItemsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.PublishItemsAttr))})
	}
	if _fgaed.CheckCompatibilityAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063h\u0065c\u006b\u0043\u006f\u006d\u0070a\u0074\u0069b\u0069\u006c\u0069\u0074\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.CheckCompatibilityAttr))})
	}
	if _fgaed.AutoCompressPicturesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.AutoCompressPicturesAttr))})
	}
	if _fgaed.RefreshAllConnectionsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "r\u0065\u0066\u0072\u0065sh\u0041l\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u0069\u006f\u006e\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgaed.RefreshAllConnectionsAttr))})
	}
	if _fgaed.DefaultThemeVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0066\u0061ul\u0074\u0054\u0068\u0065\u006d\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fgaed.DefaultThemeVersionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_DataFields() *CT_DataFields { _gedae := &CT_DataFields{}; return _gedae }
func (_fccgb *CT_SheetCalcPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _abaad := range start.Attr {
		if _abaad.Name.Local == "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064" {
			_fcgbg, _dcbbb := _f.ParseBool(_abaad.Value)
			if _dcbbb != nil {
				return _dcbbb
			}
			_fccgb.FullCalcOnLoadAttr = &_fcgbg
			continue
		}
	}
	for {
		_gadbd, _gcafd := d.Token()
		if _gcafd != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072:\u0020\u0025\u0073", _gcafd)
		}
		if _faaae, _accdae := _gadbd.(_a.EndElement); _accdae && _faaae.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_VolType and its children, prefixing error messages with path
func (_baebbf *CT_VolType) ValidateWithPath(path string) error {
	if _baebbf.TypeAttr == ST_VolDepTypeUnset {
		return _fc.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cbdcd := _baebbf.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cbdcd != nil {
		return _cbdcd
	}
	for _dgbafc, _cbcdc := range _baebbf.Main {
		if _fcdg := _cbcdc.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u004d\u0061\u0069\u006e\u005b\u0025\u0064\u005d", path, _dgbafc)); _fcdg != nil {
			return _fcdg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Index and its children, prefixing error messages with path
func (_badgc *CT_Index) ValidateWithPath(path string) error { return nil }
func (_adgcc *ST_HtmlFmt) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_adgcc = 0
	case "\u006e\u006f\u006e\u0065":
		*_adgcc = 1
	case "\u0072\u0074\u0066":
		*_adgcc = 2
	case "\u0061\u006c\u006c":
		*_adgcc = 3
	}
	return nil
}
func (_agcda *CT_PivotDimension) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _agcda.MeasureAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006de\u0061\u0073\u0075\u0072\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_agcda.MeasureAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _agcda.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _agcda.UniqueNameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _agcda.CaptionAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gcadba *ST_DateTimeGrouping) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ageaad, _fbbec := d.Token()
	if _fbbec != nil {
		return _fbbec
	}
	if _aeaad, _eggdg := _ageaad.(_a.EndElement); _eggdg && _aeaad.Name == start.Name {
		*_gcadba = 1
		return nil
	}
	if _ecbef, _gfdca := _ageaad.(_a.CharData); !_gfdca {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ageaad)
	} else {
		switch string(_ecbef) {
		case "":
			*_gcadba = 0
		case "\u0079\u0065\u0061\u0072":
			*_gcadba = 1
		case "\u006d\u006f\u006et\u0068":
			*_gcadba = 2
		case "\u0064\u0061\u0079":
			*_gcadba = 3
		case "\u0068\u006f\u0075\u0072":
			*_gcadba = 4
		case "\u006d\u0069\u006e\u0075\u0074\u0065":
			*_gcadba = 5
		case "\u0073\u0065\u0063\u006f\u006e\u0064":
			*_gcadba = 6
		}
	}
	_ageaad, _fbbec = d.Token()
	if _fbbec != nil {
		return _fbbec
	}
	if _bdgfb, _ccegbe := _ageaad.(_a.EndElement); _ccegbe && _bdgfb.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ageaad)
}

type CT_MergeCell struct {

	// Reference
	RefAttr string
}
type CT_IgnoredError struct {

	// Sequence of References
	SqrefAttr ST_Sqref

	// Evaluation Error
	EvalErrorAttr *bool

	// Two Digit Text Year
	TwoDigitTextYearAttr *bool

	// Number Stored As Text
	NumberStoredAsTextAttr *bool

	// Formula
	FormulaAttr *bool

	// Formula Range
	FormulaRangeAttr *bool

	// Unlocked Formula
	UnlockedFormulaAttr *bool

	// Empty Cell Reference
	EmptyCellReferenceAttr *bool

	// List Data Validation
	ListDataValidationAttr *bool

	// Calculated Column
	CalculatedColumnAttr *bool
}

// ValidateWithPath validates the CT_IndexedColors and its children, prefixing error messages with path
func (_acegc *CT_IndexedColors) ValidateWithPath(path string) error {
	for _deaeb, _eccda := range _acegc.RgbColor {
		if _gcdg := _eccda.ValidateWithPath(_fc.Sprintf("\u0025s\u002fR\u0067\u0062\u0043\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _deaeb)); _gcdg != nil {
			return _gcdg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotAreaReference and its children, prefixing error messages with path
func (_dbacd *CT_PivotAreaReference) ValidateWithPath(path string) error {
	for _eaaaa, _cedeb := range _dbacd.X {
		if _gadbc := _cedeb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _eaaaa)); _gadbc != nil {
			return _gadbc
		}
	}
	if _dbacd.ExtLst != nil {
		if _edbcd := _dbacd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edbcd != nil {
			return _edbcd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Error and its children, prefixing error messages with path
func (_eccb *CT_Error) ValidateWithPath(path string) error {
	if _eccb.Tpls != nil {
		if _ebabc := _eccb.Tpls.ValidateWithPath(path + "\u002f\u0054\u0070l\u0073"); _ebabc != nil {
			return _ebabc
		}
	}
	for _fadbg, _becg := range _eccb.X {
		if _decc := _becg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _fadbg)); _decc != nil {
			return _decc
		}
	}
	return nil
}
func NewCT_CalcCell() *CT_CalcCell { _eae := &CT_CalcCell{}; return _eae }
func (_gfdddb *CT_PCDKPIs) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dgbbfa := range start.Attr {
		if _dgbbfa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dbgec, _fcddd := _f.ParseUint(_dgbbfa.Value, 10, 32)
			if _fcddd != nil {
				return _fcddd
			}
			_bdbcc := uint32(_dbgec)
			_gfdddb.CountAttr = &_bdbcc
			continue
		}
	}
_eefeg:
	for {
		_cfdg, _bgdde := d.Token()
		if _bgdde != nil {
			return _bgdde
		}
		switch _bbfbb := _cfdg.(type) {
		case _a.StartElement:
			switch _bbfbb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069"}:
				_efegf := NewCT_PCDKPI()
				if _fffbg := d.DecodeElement(_efegf, &_bbfbb); _fffbg != nil {
					return _fffbg
				}
				_gfdddb.Kpi = append(_gfdddb.Kpi, _efegf)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0043\u0044\u004b\u0050\u0049\u0073\u0020\u0025\u0076", _bbfbb.Name)
				if _daacg := d.Skip(); _daacg != nil {
					return _daacg
				}
			}
		case _a.EndElement:
			break _eefeg
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_IgnoredErrors and its children
func (_abfbc *CT_IgnoredErrors) Validate() error {
	return _abfbc.ValidateWithPath("\u0043\u0054_\u0049\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073")
}
func (_fbedce *CT_Record) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _fbedce.M != nil {
		_edgee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _dgbgd := range _fbedce.M {
			e.EncodeElement(_dgbgd, _edgee)
		}
	}
	if _fbedce.N != nil {
		_bgeebf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _fbabdc := range _fbedce.N {
			e.EncodeElement(_fbabdc, _bgeebf)
		}
	}
	if _fbedce.B != nil {
		_faagg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _aafbg := range _fbedce.B {
			e.EncodeElement(_aafbg, _faagg)
		}
	}
	if _fbedce.E != nil {
		_abeac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _cdcaf := range _fbedce.E {
			e.EncodeElement(_cdcaf, _abeac)
		}
	}
	if _fbedce.S != nil {
		_fedaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _dfbeb := range _fbedce.S {
			e.EncodeElement(_dfbeb, _fedaf)
		}
	}
	if _fbedce.D != nil {
		_ggccd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _gebcb := range _fbedce.D {
			e.EncodeElement(_gebcb, _ggccd)
		}
	}
	if _fbedce.X != nil {
		_ccbed := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _dface := range _fbedce.X {
			e.EncodeElement(_dface, _ccbed)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_TableStyle struct {

	// Table Style Name
	NameAttr string

	// Pivot Style
	PivotAttr *bool

	// Table
	TableAttr *bool

	// Table Style Count
	CountAttr *uint32

	// Table Style
	TableStyleElement []*CT_TableStyleElement
}

func (_ecebdb ST_CredMethod) ValidateWithPath(path string) error {
	switch _ecebdb {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecebdb))
	}
	return nil
}

type CT_ChartsheetView struct {

	// Sheet Tab Selected
	TabSelectedAttr *bool

	// Window Zoom Scale
	ZoomScaleAttr *uint32

	// Workbook View Id
	WorkbookViewIdAttr uint32

	// Zoom To Fit
	ZoomToFitAttr *bool
	ExtLst        *CT_ExtensionList
}

func NewCT_Mdx() *CT_Mdx { _fedcc := &CT_Mdx{}; _fedcc.FAttr = ST_MdxFunctionType(1); return _fedcc }

type CT_ExternalDefinedName struct {

	// Defined Name
	NameAttr string

	// Refers To
	RefersToAttr *string

	// Sheet Id
	SheetIdAttr *uint32
}

// ValidateWithPath validates the CT_CustomProperties and its children, prefixing error messages with path
func (_ggecf *CT_CustomProperties) ValidateWithPath(path string) error {
	for _acbe, _faad := range _ggecf.CustomPr {
		if _gggg := _faad.ValidateWithPath(_fc.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u005b\u0025\u0064\u005d", path, _acbe)); _gggg != nil {
			return _gggg
		}
	}
	return nil
}
func (_ebabb *CT_DbPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cbae := range start.Attr {
		if _cbae.Name.Local == "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e" {
			_gagcf, _eaea := _cbae.Value, error(nil)
			if _eaea != nil {
				return _eaea
			}
			_ebabb.ConnectionAttr = _gagcf
			continue
		}
		if _cbae.Name.Local == "\u0063o\u006d\u006d\u0061\u006e\u0064" {
			_fdcad, _gccab := _cbae.Value, error(nil)
			if _gccab != nil {
				return _gccab
			}
			_ebabb.CommandAttr = &_fdcad
			continue
		}
		if _cbae.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0043\u006f\u006d\u006d\u0061\u006e\u0064" {
			_aeage, _gfedf := _cbae.Value, error(nil)
			if _gfedf != nil {
				return _gfedf
			}
			_ebabb.ServerCommandAttr = &_aeage
			continue
		}
		if _cbae.Name.Local == "c\u006f\u006d\u006d\u0061\u006e\u0064\u0054\u0079\u0070\u0065" {
			_gbdd, _gcfdb := _f.ParseUint(_cbae.Value, 10, 32)
			if _gcfdb != nil {
				return _gcfdb
			}
			_gdgcf := uint32(_gbdd)
			_ebabb.CommandTypeAttr = &_gdgcf
			continue
		}
	}
	for {
		_dbcff, _aafc := d.Token()
		if _aafc != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0062\u0050\u0072\u003a\u0020\u0025\u0073", _aafc)
		}
		if _edac, _dfdb := _dbcff.(_a.EndElement); _dfdb && _edac.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Item struct {

	// Item User Caption
	NAttr *string

	// Item Type
	TAttr ST_ItemType

	// Hidden
	HAttr *bool

	// Character
	SAttr *bool

	// Hide Details
	SdAttr *bool

	// Calculated Member
	FAttr *bool

	// Missing
	MAttr *bool

	// Child Items
	CAttr *bool

	// Item Index
	XAttr *uint32

	// Expanded
	DAttr *bool

	// Drill Across Attributes
	EAttr *bool
}

func (_gfbb *CT_CustomChartsheetView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gfbb.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _bgfb := range start.Attr {
		if _bgfb.Name.Local == "\u0067\u0075\u0069\u0064" {
			_baca, _bcdg := _bgfb.Value, error(nil)
			if _bcdg != nil {
				return _bcdg
			}
			_gfbb.GuidAttr = _baca
			continue
		}
		if _bgfb.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_cgebc, _fabe := _f.ParseUint(_bgfb.Value, 10, 32)
			if _fabe != nil {
				return _fabe
			}
			_bcddc := uint32(_cgebc)
			_gfbb.ScaleAttr = &_bcddc
			continue
		}
		if _bgfb.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_gfbb.StateAttr.UnmarshalXMLAttr(_bgfb)
			continue
		}
		if _bgfb.Name.Local == "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t" {
			_dbefa, _dff := _f.ParseBool(_bgfb.Value)
			if _dff != nil {
				return _dff
			}
			_gfbb.ZoomToFitAttr = &_dbefa
			continue
		}
	}
_egcec:
	for {
		_gbfaa, _daacd := d.Token()
		if _daacd != nil {
			return _daacd
		}
		switch _egfcf := _gbfaa.(type) {
		case _a.StartElement:
			switch _egfcf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_gfbb.PageMargins = NewCT_PageMargins()
				if _fgbc := d.DecodeElement(_gfbb.PageMargins, &_egfcf); _fgbc != nil {
					return _fgbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_gfbb.PageSetup = NewCT_CsPageSetup()
				if _fcfdb := d.DecodeElement(_gfbb.PageSetup, &_egfcf); _fcfdb != nil {
					return _fcfdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_gfbb.HeaderFooter = NewCT_HeaderFooter()
				if _cgga := d.DecodeElement(_gfbb.HeaderFooter, &_egfcf); _cgga != nil {
					return _cgga
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077 \u0025\u0076", _egfcf.Name)
				if _dbea := d.Skip(); _dbea != nil {
					return _dbea
				}
			}
		case _a.EndElement:
			break _egcec
		case _a.CharData:
		}
	}
	return nil
}
func (_aaab *CT_DefinedNames) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _aaab.DefinedName != nil {
		_cagdd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065"}}
		for _, _bfgcc := range _aaab.DefinedName {
			e.EncodeElement(_bfgcc, _cagdd)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cdbbde *CT_Sst) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ccbgd := range start.Attr {
		if _ccbgd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_daaegg, _fbcca := _f.ParseUint(_ccbgd.Value, 10, 32)
			if _fbcca != nil {
				return _fbcca
			}
			_dfgfc := uint32(_daaegg)
			_cdbbde.CountAttr = &_dfgfc
			continue
		}
		if _ccbgd.Name.Local == "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074" {
			_fefgb, _dfeegb := _f.ParseUint(_ccbgd.Value, 10, 32)
			if _dfeegb != nil {
				return _dfeegb
			}
			_baecb := uint32(_fefgb)
			_cdbbde.UniqueCountAttr = &_baecb
			continue
		}
	}
_ggfec:
	for {
		_gabed, _abgdd := d.Token()
		if _abgdd != nil {
			return _abgdd
		}
		switch _feedd := _gabed.(type) {
		case _a.StartElement:
			switch _feedd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}:
				_dfebbd := NewCT_Rst()
				if _acgfa := d.DecodeElement(_dfebbd, &_feedd); _acgfa != nil {
					return _acgfa
				}
				_cdbbde.Si = append(_cdbbde.Si, _dfebbd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdbbde.ExtLst = NewCT_ExtensionList()
				if _fdaeae := d.DecodeElement(_cdbbde.ExtLst, &_feedd); _fdaeae != nil {
					return _fdaeae
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0073\u0074\u0020\u0025\u0076", _feedd.Name)
				if _bcggde := d.Skip(); _bcggde != nil {
					return _bcggde
				}
			}
		case _a.EndElement:
			break _ggfec
		case _a.CharData:
		}
	}
	return nil
}
func (_agec *CT_DateTime) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fc.Sprintf("\u0025\u0076", _agec.VAttr)})
	if _agec.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_agec.UAttr))})
	}
	if _agec.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_agec.FAttr))})
	}
	if _agec.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_agec.CAttr)})
	}
	if _agec.CpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_agec.CpAttr)})
	}
	e.EncodeToken(start)
	if _agec.X != nil {
		_ddcde := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _egcfbd := range _agec.X {
			e.EncodeElement(_egcfbd, _ddcde)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fbecd *CT_Scenario) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _fbecd.NameAttr)})
	if _fbecd.LockedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fbecd.LockedAttr))})
	}
	if _fbecd.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fbecd.HiddenAttr))})
	}
	if _fbecd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fbecd.CountAttr)})
	}
	if _fbecd.UserAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0073\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_fbecd.UserAttr)})
	}
	if _fbecd.CommentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fbecd.CommentAttr)})
	}
	e.EncodeToken(start)
	_gccba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}}
	for _, _cdcaff := range _fbecd.InputCells {
		e.EncodeElement(_cdcaff, _gccba)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Users and its children
func (_agegbb *CT_Users) Validate() error {
	return _agegbb.ValidateWithPath("\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073")
}

// ValidateWithPath validates the CT_OutlinePr and its children, prefixing error messages with path
func (_fagea *CT_OutlinePr) ValidateWithPath(path string) error { return nil }
func NewCT_LevelGroup() *CT_LevelGroup {
	_cccda := &CT_LevelGroup{}
	_cccda.GroupMembers = NewCT_GroupMembers()
	return _cccda
}
func (_bcbdb *CT_RevisionAutoFormatting) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _bcbdb.SheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _bcbdb.RefAttr)})
	if _bcbdb.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bcbdb.AutoFormatIdAttr)})
	}
	if _bcbdb.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcbdb.ApplyNumberFormatsAttr))})
	}
	if _bcbdb.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcbdb.ApplyBorderFormatsAttr))})
	}
	if _bcbdb.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcbdb.ApplyFontFormatsAttr))})
	}
	if _bcbdb.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcbdb.ApplyPatternFormatsAttr))})
	}
	if _bcbdb.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcbdb.ApplyAlignmentFormatsAttr))})
	}
	if _bcbdb.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcbdb.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_CfRule struct {

	// Type
	TypeAttr ST_CfType

	// Differential Formatting Id
	DxfIdAttr *uint32

	// Priority
	PriorityAttr int32

	// Stop If True
	StopIfTrueAttr *bool

	// Above Or Below Average
	AboveAverageAttr *bool

	// Top 10 Percent
	PercentAttr *bool

	// Bottom N
	BottomAttr *bool

	// Operator
	OperatorAttr ST_ConditionalFormattingOperator

	// Text
	TextAttr *string

	// Time Period
	TimePeriodAttr ST_TimePeriod

	// Rank
	RankAttr *uint32

	// StdDev
	StdDevAttr *int32

	// Equal Average
	EqualAverageAttr *bool

	// Formula
	Formula []string

	// Color Scale
	ColorScale *CT_ColorScale

	// Data Bar
	DataBar *CT_DataBar

	// Icon Set
	IconSet *CT_IconSet
	ExtLst  *CT_ExtensionList
}

func (_bbbf *CT_ConditionalFormats) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfebc := range start.Attr {
		if _dfebc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aegeb, _bad := _f.ParseUint(_dfebc.Value, 10, 32)
			if _bad != nil {
				return _bad
			}
			_aageg := uint32(_aegeb)
			_bbbf.CountAttr = &_aageg
			continue
		}
	}
_bade:
	for {
		_edcc, _cagg := d.Token()
		if _cagg != nil {
			return _cagg
		}
		switch _fcfd := _edcc.(type) {
		case _a.StartElement:
			switch _fcfd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072\u006d\u0061\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072\u006d\u0061\u0074"}:
				_fbdff := NewCT_ConditionalFormat()
				if _fadf := d.DecodeElement(_fbdff, &_fcfd); _fadf != nil {
					return _fadf
				}
				_bbbf.ConditionalFormat = append(_bbbf.ConditionalFormat, _fbdff)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _fcfd.Name)
				if _bgaecf := d.Skip(); _bgaecf != nil {
					return _bgaecf
				}
			}
		case _a.EndElement:
			break _bade
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_CommentList() *CT_CommentList { _aecc := &CT_CommentList{}; return _aecc }
func (_fcg *CT_Authors) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_acd:
	for {
		_ebb, _dfb := d.Token()
		if _dfb != nil {
			return _dfb
		}
		switch _da := _ebb.(type) {
		case _a.StartElement:
			switch _da.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}:
				var _gefa string
				if _aed := d.DecodeElement(&_gefa, &_da); _aed != nil {
					return _aed
				}
				_fcg.Author = append(_fcg.Author, _gefa)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fA\u0075\u0074\u0068\u006f\u0072\u0073\u0020\u0025\u0076", _da.Name)
				if _bgd := d.Skip(); _bgd != nil {
					return _bgd
				}
			}
		case _a.EndElement:
			break _acd
		case _a.CharData:
		}
	}
	return nil
}
func (_ebdff *VolTypes) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0076\u006f\u006c\u0054\u0079\u0070\u0065\u0073"
	return _ebdff.CT_VolTypes.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_I and its children, prefixing error messages with path
func (_bcdcb *CT_I) ValidateWithPath(path string) error {
	if _efbef := _bcdcb.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _efbef != nil {
		return _efbef
	}
	for _fdagf, _bacef := range _bcdcb.X {
		if _efgce := _bacef.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _fdagf)); _efgce != nil {
			return _efgce
		}
	}
	return nil
}
func (_cadge *CT_WebPublishObjects) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgffe := range start.Attr {
		if _fgffe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aafcb, _accfb := _f.ParseUint(_fgffe.Value, 10, 32)
			if _accfb != nil {
				return _accfb
			}
			_dcdbc := uint32(_aafcb)
			_cadge.CountAttr = &_dcdbc
			continue
		}
	}
_adgba:
	for {
		_bddee, _adada := d.Token()
		if _adada != nil {
			return _adada
		}
		switch _geggf := _bddee.(type) {
		case _a.StartElement:
			switch _geggf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065b\u0050\u0075\u0062l\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065b\u0050\u0075\u0062l\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}:
				_eeeba := NewCT_WebPublishObject()
				if _bebcdd := d.DecodeElement(_eeeba, &_geggf); _bebcdd != nil {
					return _bebcdd
				}
				_cadge.WebPublishObject = append(_cadge.WebPublishObject, _eeeba)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u0073\u0020\u0025\u0076", _geggf.Name)
				if _eadfg := d.Skip(); _eadfg != nil {
					return _eadfg
				}
			}
		case _a.EndElement:
			break _adgba
		case _a.CharData:
		}
	}
	return nil
}

type CT_CellAlignment struct {

	// Horizontal Alignment
	HorizontalAttr ST_HorizontalAlignment

	// Vertical Alignment
	VerticalAttr ST_VerticalAlignment

	// Text Rotation
	TextRotationAttr *uint8

	// Wrap Text
	WrapTextAttr *bool

	// Indent
	IndentAttr *uint32

	// Relative Indent
	RelativeIndentAttr *int32

	// Justify Last Line
	JustifyLastLineAttr *bool

	// Shrink To Fit
	ShrinkToFitAttr *bool

	// Reading Order
	ReadingOrderAttr *uint32
}

// ValidateWithPath validates the CT_OleObject and its children, prefixing error messages with path
func (_daecd *CT_OleObject) ValidateWithPath(path string) error {
	if _cegag := _daecd.DvAspectAttr.ValidateWithPath(path + "\u002f\u0044\u0076\u0041\u0073\u0070\u0065\u0063\u0074\u0041\u0074\u0074\u0072"); _cegag != nil {
		return _cegag
	}
	if _fbgff := _daecd.OleUpdateAttr.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u0055\u0070\u0064\u0061\u0074e\u0041\u0074\u0074\u0072"); _fbgff != nil {
		return _fbgff
	}
	if _daecd.ObjectPr != nil {
		if _aaeagf := _daecd.ObjectPr.ValidateWithPath(path + "\u002fO\u0062\u006a\u0065\u0063\u0074\u0050r"); _aaeagf != nil {
			return _aaeagf
		}
	}
	return nil
}

type CT_DataFields struct {

	// Data Items Count
	CountAttr *uint32

	// Data Field Item
	DataField []*CT_DataField
}

func (_gdfdag *CT_ObjectPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdfdag.Anchor = NewCT_ObjectAnchor()
	for _, _fdaeag := range start.Attr {
		if _fdaeag.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fdaeag.Name.Local == "\u0069\u0064" || _fdaeag.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fdaeag.Name.Local == "\u0069\u0064" {
			_cbfbf, _ccedd := _fdaeag.Value, error(nil)
			if _ccedd != nil {
				return _ccedd
			}
			_gdfdag.IdAttr = &_cbfbf
			continue
		}
		if _fdaeag.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_bfeab, _fdea := _f.ParseBool(_fdaeag.Value)
			if _fdea != nil {
				return _fdea
			}
			_gdfdag.AutoLineAttr = &_bfeab
			continue
		}
		if _fdaeag.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_befgg, _feddc := _f.ParseBool(_fdaeag.Value)
			if _feddc != nil {
				return _feddc
			}
			_gdfdag.PrintAttr = &_befgg
			continue
		}
		if _fdaeag.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_caddbb, _ddbeg := _f.ParseBool(_fdaeag.Value)
			if _ddbeg != nil {
				return _ddbeg
			}
			_gdfdag.DisabledAttr = &_caddbb
			continue
		}
		if _fdaeag.Name.Local == "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074" {
			_cabcf, _adgfb := _f.ParseBool(_fdaeag.Value)
			if _adgfb != nil {
				return _adgfb
			}
			_gdfdag.UiObjectAttr = &_cabcf
			continue
		}
		if _fdaeag.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_gdegec, _baeg := _f.ParseBool(_fdaeag.Value)
			if _baeg != nil {
				return _baeg
			}
			_gdfdag.AutoFillAttr = &_gdegec
			continue
		}
		if _fdaeag.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_dccdae, _agbbeg := _f.ParseBool(_fdaeag.Value)
			if _agbbeg != nil {
				return _agbbeg
			}
			_gdfdag.LockedAttr = &_dccdae
			continue
		}
		if _fdaeag.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074" {
			_bffee, _cgdbe := _f.ParseBool(_fdaeag.Value)
			if _cgdbe != nil {
				return _cgdbe
			}
			_gdfdag.AutoPictAttr = &_bffee
			continue
		}
		if _fdaeag.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_dacgb, _fegbb := _fdaeag.Value, error(nil)
			if _fegbb != nil {
				return _fegbb
			}
			_gdfdag.MacroAttr = &_dacgb
			continue
		}
		if _fdaeag.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_bgfgg, _fdfde := _fdaeag.Value, error(nil)
			if _fdfde != nil {
				return _fdfde
			}
			_gdfdag.AltTextAttr = &_bgfgg
			continue
		}
		if _fdaeag.Name.Local == "\u0064\u0064\u0065" {
			_fdece, _gadc := _f.ParseBool(_fdaeag.Value)
			if _gadc != nil {
				return _gadc
			}
			_gdfdag.DdeAttr = &_fdece
			continue
		}
		if _fdaeag.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_bafad, _afdce := _f.ParseBool(_fdaeag.Value)
			if _afdce != nil {
				return _afdce
			}
			_gdfdag.DefaultSizeAttr = &_bafad
			continue
		}
	}
_cegea:
	for {
		_fgga, _dccdaeb := d.Token()
		if _dccdaeb != nil {
			return _dccdaeb
		}
		switch _bedgf := _fgga.(type) {
		case _a.StartElement:
			switch _bedgf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _gacggb := d.DecodeElement(_gdfdag.Anchor, &_bedgf); _gacggb != nil {
					return _gacggb
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072\u0020\u0025\u0076", _bedgf.Name)
				if _gddeb := d.Skip(); _gddeb != nil {
					return _gddeb
				}
			}
		case _a.EndElement:
			break _cegea
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_SmartTagType() *CT_SmartTagType { _ebeabb := &CT_SmartTagType{}; return _ebeabb }
func (_gfdag ST_SheetViewType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_ddbcde := _a.Attr{}
	_ddbcde.Name = name
	switch _gfdag {
	case ST_SheetViewTypeUnset:
		_ddbcde.Value = ""
	case ST_SheetViewTypeNormal:
		_ddbcde.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_SheetViewTypePageBreakPreview:
		_ddbcde.Value = "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077"
	case ST_SheetViewTypePageLayout:
		_ddbcde.Value = "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074"
	}
	return _ddbcde, nil
}
func (_ebaae *CT_Hyperlink) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _ebaae.RefAttr)})
	if _ebaae.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_ebaae.IdAttr)})
	}
	if _ebaae.LocationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_ebaae.LocationAttr)})
	}
	if _ebaae.TooltipAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074o\u006f\u006c\u0074\u0069\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_ebaae.TooltipAttr)})
	}
	if _ebaae.DisplayAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064i\u0073\u0070\u006c\u0061\u0079"}, Value: _fc.Sprintf("\u0025\u0076", *_ebaae.DisplayAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Font and its children, prefixing error messages with path
func (_gfgdf *CT_Font) ValidateWithPath(path string) error {
	for _efbcc, _bdgfe := range _gfgdf.Name {
		if _gfdfc := _bdgfe.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u004e\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _efbcc)); _gfdfc != nil {
			return _gfdfc
		}
	}
	for _agcdg, _deaga := range _gfgdf.Charset {
		if _daace := _deaga.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043\u0068\u0061\u0072\u0073\u0065t\u005b\u0025\u0064\u005d", path, _agcdg)); _daace != nil {
			return _daace
		}
	}
	for _daddb, _dabg := range _gfgdf.Family {
		if _afgbe := _dabg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0046\u0061\u006d\u0069\u006c\u0079\u005b\u0025\u0064\u005d", path, _daddb)); _afgbe != nil {
			return _afgbe
		}
	}
	for _gfcd, _ffccge := range _gfgdf.B {
		if _afbd := _ffccge.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _gfcd)); _afbd != nil {
			return _afbd
		}
	}
	for _dcfa, _fbafbb := range _gfgdf.I {
		if _bgdbc := _fbafbb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _dcfa)); _bgdbc != nil {
			return _bgdbc
		}
	}
	for _cbgcc, _dcdca := range _gfgdf.Strike {
		if _fadaf := _dcdca.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053\u0074\u0072\u0069\u006b\u0065\u005b\u0025\u0064\u005d", path, _cbgcc)); _fadaf != nil {
			return _fadaf
		}
	}
	for _ebae, _cfcd := range _gfgdf.Outline {
		if _adcb := _cfcd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004f\u0075\u0074\u006c\u0069\u006ee\u005b\u0025\u0064\u005d", path, _ebae)); _adcb != nil {
			return _adcb
		}
	}
	for _bcbga, _gffdd := range _gfgdf.Shadow {
		if _cfeca := _gffdd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053\u0068\u0061\u0064\u006f\u0077\u005b\u0025\u0064\u005d", path, _bcbga)); _cfeca != nil {
			return _cfeca
		}
	}
	for _eabfb, _ebgbec := range _gfgdf.Condense {
		if _gdab := _ebgbec.ValidateWithPath(_fc.Sprintf("\u0025s\u002fC\u006f\u006e\u0064\u0065\u006e\u0073\u0065\u005b\u0025\u0064\u005d", path, _eabfb)); _gdab != nil {
			return _gdab
		}
	}
	for _adefb, _ebegg := range _gfgdf.Extend {
		if _cbdeed := _ebegg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u0065\u006e\u0064\u005b\u0025\u0064\u005d", path, _adefb)); _cbdeed != nil {
			return _cbdeed
		}
	}
	for _gbbfb, _ebgbf := range _gfgdf.Color {
		if _efdfe := _ebgbf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _gbbfb)); _efdfe != nil {
			return _efdfe
		}
	}
	for _caddb, _ddgff := range _gfgdf.Sz {
		if _afdgb := _ddgff.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0053\u007a\u005b\u0025\u0064]", path, _caddb)); _afdgb != nil {
			return _afdgb
		}
	}
	for _bgcae, _dccge := range _gfgdf.U {
		if _gdbd := _dccge.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0055\u005b\u0025\u0064\u005d", path, _bgcae)); _gdbd != nil {
			return _gdbd
		}
	}
	for _gfge, _dggfa := range _gfgdf.VertAlign {
		if _dccda := _dggfa.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0056\u0065\u0072t\u0041\u006c\u0069\u0067\u006e\u005b\u0025\u0064\u005d", path, _gfge)); _dccda != nil {
			return _dccda
		}
	}
	for _bdebgf, _egggf := range _gfgdf.Scheme {
		if _cafb := _egggf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u005b\u0025\u0064\u005d", path, _bdebgf)); _cafb != nil {
			return _cafb
		}
	}
	return nil
}
func NewCT_ColFields() *CT_ColFields { _aefg := &CT_ColFields{}; return _aefg }
func (_cdfbc *ST_HtmlFmt) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aaefb, _ffagc := d.Token()
	if _ffagc != nil {
		return _ffagc
	}
	if _abeed, _afceea := _aaefb.(_a.EndElement); _afceea && _abeed.Name == start.Name {
		*_cdfbc = 1
		return nil
	}
	if _faadc, _egfgd := _aaefb.(_a.CharData); !_egfgd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aaefb)
	} else {
		switch string(_faadc) {
		case "":
			*_cdfbc = 0
		case "\u006e\u006f\u006e\u0065":
			*_cdfbc = 1
		case "\u0072\u0074\u0066":
			*_cdfbc = 2
		case "\u0061\u006c\u006c":
			*_cdfbc = 3
		}
	}
	_aaefb, _ffagc = d.Token()
	if _ffagc != nil {
		return _ffagc
	}
	if _gbbadg, _geebc := _aaefb.(_a.EndElement); _geebc && _gbbadg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aaefb)
}
func NewCT_IndexedColors() *CT_IndexedColors { _cbgfc := &CT_IndexedColors{}; return _cbgfc }

// ValidateWithPath validates the CT_Border and its children, prefixing error messages with path
func (_befd *CT_Border) ValidateWithPath(path string) error {
	if _befd.Start != nil {
		if _acbd := _befd.Start.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0072\u0074"); _acbd != nil {
			return _acbd
		}
	}
	if _befd.End != nil {
		if _cbb := _befd.End.ValidateWithPath(path + "\u002f\u0045\u006e\u0064"); _cbb != nil {
			return _cbb
		}
	}
	if _befd.Left != nil {
		if _fgg := _befd.Left.ValidateWithPath(path + "\u002f\u004c\u0065f\u0074"); _fgg != nil {
			return _fgg
		}
	}
	if _befd.Right != nil {
		if _dbe := _befd.Right.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0068\u0074"); _dbe != nil {
			return _dbe
		}
	}
	if _befd.Top != nil {
		if _fcef := _befd.Top.ValidateWithPath(path + "\u002f\u0054\u006f\u0070"); _fcef != nil {
			return _fcef
		}
	}
	if _befd.Bottom != nil {
		if _eee := _befd.Bottom.ValidateWithPath(path + "\u002fB\u006f\u0074\u0074\u006f\u006d"); _eee != nil {
			return _eee
		}
	}
	if _befd.Diagonal != nil {
		if _eaaa := _befd.Diagonal.ValidateWithPath(path + "\u002fD\u0069\u0061\u0067\u006f\u006e\u0061l"); _eaaa != nil {
			return _eaaa
		}
	}
	if _befd.Vertical != nil {
		if _efb := _befd.Vertical.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0069\u0063\u0061l"); _efb != nil {
			return _efb
		}
	}
	if _befd.Horizontal != nil {
		if _ebeg := _befd.Horizontal.ValidateWithPath(path + "/\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"); _ebeg != nil {
			return _ebeg
		}
	}
	return nil
}

// Validate validates the CT_PivotAreas and its children
func (_fgae *CT_PivotAreas) Validate() error {
	return _fgae.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073")
}

type CT_ChartsheetPr struct {

	// Published
	PublishedAttr *bool

	// Code Name
	CodeNameAttr *string
	TabColor     *CT_Color
}

func (_ddaee *CT_MemberProperties) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ddaee.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ddaee.CountAttr)})
	}
	e.EncodeToken(start)
	_bbfeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003am\u0070"}}
	for _, _fadaa := range _ddaee.Mp {
		e.EncodeElement(_fadaa, _bbfeg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextPr and its children, prefixing error messages with path
func (_gbgbf *CT_TextPr) ValidateWithPath(path string) error {
	if _eabaf := _gbgbf.FileTypeAttr.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _eabaf != nil {
		return _eabaf
	}
	if _cabbe := _gbgbf.QualifierAttr.ValidateWithPath(path + "\u002f\u0051\u0075\u0061\u006c\u0069\u0066\u0069\u0065r\u0041\u0074\u0074\u0072"); _cabbe != nil {
		return _cabbe
	}
	if _gbgbf.TextFields != nil {
		if _dgfce := _gbgbf.TextFields.ValidateWithPath(path + "/\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"); _dgfce != nil {
			return _dgfce
		}
	}
	return nil
}
func (_dggeb ST_TargetScreenSize) ValidateWithPath(path string) error {
	switch _dggeb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dggeb))
	}
	return nil
}
func NewCT_Col() *CT_Col { _geeg := &CT_Col{}; return _geeg }
func (_gfda *CT_CustomFilter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gfdfd := range start.Attr {
		if _gfdfd.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_gfda.OperatorAttr.UnmarshalXMLAttr(_gfdfd)
			continue
		}
		if _gfdfd.Name.Local == "\u0076\u0061\u006c" {
			_dbfb, _baabf := _gfdfd.Value, error(nil)
			if _baabf != nil {
				return _baabf
			}
			_gfda.ValAttr = &_dbfb
			continue
		}
	}
	for {
		_daddd, _fega := d.Token()
		if _fega != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dF\u0069\u006c\u0074e\u0072:\u0020\u0025\u0073", _fega)
		}
		if _ccgfc, _gbaf := _daddd.(_a.EndElement); _gbaf && _ccgfc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adcbb ST_TextHAlign) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_adcbb.String(), start)
}

type CT_GroupLevels struct {

	// Grouping Level Count
	CountAttr *uint32

	// OLAP Grouping Levels
	GroupLevel []*CT_GroupLevel
}

// Validate validates the CT_PivotSelection and its children
func (_egcecg *CT_PivotSelection) Validate() error {
	return _egcecg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e")
}
func (_dcffc *CT_GroupMember) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eeddg := range start.Attr {
		if _eeddg.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_befdc, _acacb := _eeddg.Value, error(nil)
			if _acacb != nil {
				return _acacb
			}
			_dcffc.UniqueNameAttr = _befdc
			continue
		}
		if _eeddg.Name.Local == "\u0067\u0072\u006fu\u0070" {
			_dafde, _ceda := _f.ParseBool(_eeddg.Value)
			if _ceda != nil {
				return _ceda
			}
			_dcffc.GroupAttr = &_dafde
			continue
		}
	}
	for {
		_dcgegg, _cddd := d.Token()
		if _cddd != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072:\u0020\u0025\u0073", _cddd)
		}
		if _fgdaa, _ebef := _dcgegg.(_a.EndElement); _ebef && _fgdaa.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_FutureMetadata struct {

	// Metadata Type Name
	NameAttr string

	// Future Metadata Block Count
	CountAttr *uint32

	// Future Metadata Block
	Bk []*CT_FutureMetadataBlock

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_WorkbookPr and its children
func (_cedgce *CT_WorkbookPr) Validate() error {
	return _cedgce.ValidateWithPath("\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072")
}
func (_cfeeb *CT_PageField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006c\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _cfeeb.FldAttr)})
	if _cfeeb.ItemAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0074\u0065\u006d"}, Value: _fc.Sprintf("\u0025\u0076", *_cfeeb.ItemAttr)})
	}
	if _cfeeb.HierAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_cfeeb.HierAttr)})
	}
	if _cfeeb.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_cfeeb.NameAttr)})
	}
	if _cfeeb.CapAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_cfeeb.CapAttr)})
	}
	e.EncodeToken(start)
	if _cfeeb.ExtLst != nil {
		_geccb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cfeeb.ExtLst, _geccb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dcffa *ST_rwColActionType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dcffa = 0
	case "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw":
		*_dcffa = 1
	case "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw":
		*_dcffa = 2
	case "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl":
		*_dcffa = 3
	case "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl":
		*_dcffa = 4
	}
	return nil
}
func NewCT_Dialogsheet() *CT_Dialogsheet { _bfffe := &CT_Dialogsheet{}; return _bfffe }

type CT_CalcCell struct {

	// Cell Reference
	RAttr   *string
	RefAttr *string

	// Sheet Id
	IAttr *int32

	// Child Chain
	SAttr *bool

	// New Dependency Level
	LAttr *bool

	// New Thread
	TAttr *bool

	// Array
	AAttr *bool
}

func (_dcggb *CT_ProtectedRanges) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_aafaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}}
	for _, _gdgdd := range _dcggb.ProtectedRange {
		e.EncodeElement(_gdgdd, _aafaf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_DataRefs struct {

	// Data Consolidation Reference Count
	CountAttr *uint32

	// Data Consolidation Reference
	DataRef []*CT_DataRef
}

func (_debfcb *ST_FileType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gefefd, _fbbdg := d.Token()
	if _fbbdg != nil {
		return _fbbdg
	}
	if _ebeaad, _acgba := _gefefd.(_a.EndElement); _acgba && _ebeaad.Name == start.Name {
		*_debfcb = 1
		return nil
	}
	if _dffae, _dgdfe := _gefefd.(_a.CharData); !_dgdfe {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gefefd)
	} else {
		switch string(_dffae) {
		case "":
			*_debfcb = 0
		case "\u006d\u0061\u0063":
			*_debfcb = 1
		case "\u0077\u0069\u006e":
			*_debfcb = 2
		case "\u0064\u006f\u0073":
			*_debfcb = 3
		case "\u006c\u0069\u006e":
			*_debfcb = 4
		case "\u006f\u0074\u0068e\u0072":
			*_debfcb = 5
		}
	}
	_gefefd, _fbbdg = d.Token()
	if _fbbdg != nil {
		return _fbbdg
	}
	if _fgfeec, _cfcfe := _gefefd.(_a.EndElement); _cfcfe && _fgfeec.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gefefd)
}
func (_deedg *ST_TableStyleType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_deedg = 0
	case "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065":
		*_deedg = 1
	case "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw":
		*_deedg = 2
	case "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_deedg = 3
	case "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
		*_deedg = 4
	case "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
		*_deedg = 5
	case "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065":
		*_deedg = 6
	case "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065":
		*_deedg = 7
	case "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065":
		*_deedg = 8
	case "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065":
		*_deedg = 9
	case "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c":
		*_deedg = 10
	case "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c":
		*_deedg = 11
	case "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c":
		*_deedg = 12
	case "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c":
		*_deedg = 13
	case "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
		*_deedg = 14
	case "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e":
		*_deedg = 15
	case "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
		*_deedg = 16
	case "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_deedg = 17
	case "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077":
		*_deedg = 18
	case "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_deedg = 19
	case "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077":
		*_deedg = 20
	case "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
		*_deedg = 21
	case "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067":
		*_deedg = 22
	case "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
		*_deedg = 23
	case "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
		*_deedg = 24
	case "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067":
		*_deedg = 25
	case "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
		*_deedg = 26
	case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073":
		*_deedg = 27
	case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073":
		*_deedg = 28
	}
	return nil
}
func (_bdbfe *CT_ColorFilter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfeaa := range start.Attr {
		if _dfeaa.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_ebfdg, _dacd := _f.ParseUint(_dfeaa.Value, 10, 32)
			if _dacd != nil {
				return _dacd
			}
			_egbdd := uint32(_ebfdg)
			_bdbfe.DxfIdAttr = &_egbdd
			continue
		}
		if _dfeaa.Name.Local == "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr" {
			_gegbb, _bgef := _f.ParseBool(_dfeaa.Value)
			if _bgef != nil {
				return _bgef
			}
			_bdbfe.CellColorAttr = &_gegbb
			continue
		}
	}
	for {
		_abdec, _bfde := d.Token()
		if _bfde != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072:\u0020\u0025\u0073", _bfde)
		}
		if _caaa, _fbdcg := _abdec.(_a.EndElement); _fbdcg && _caaa.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Set and its children
func (_fbdgbd *CT_Set) Validate() error {
	return _fbdgbd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0065\u0074")
}

// Validate validates the CT_Pane and its children
func (_cegbe *CT_Pane) Validate() error {
	return _cegbe.ValidateWithPath("\u0043T\u005f\u0050\u0061\u006e\u0065")
}

const (
	ST_ParameterTypeUnset  ST_ParameterType = 0
	ST_ParameterTypePrompt ST_ParameterType = 1
	ST_ParameterTypeValue  ST_ParameterType = 2
	ST_ParameterTypeCell   ST_ParameterType = 3
)

// ValidateWithPath validates the CT_DateTime and its children, prefixing error messages with path
func (_eefb *CT_DateTime) ValidateWithPath(path string) error {
	for _defdf, _cbfg := range _eefb.X {
		if _gebga := _cbfg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _defdf)); _gebga != nil {
			return _gebga
		}
	}
	return nil
}
func (_cefbf *CT_SortCondition) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cecff := range start.Attr {
		if _cecff.Name.Local == "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067" {
			_cecffa, _agbfdc := _f.ParseBool(_cecff.Value)
			if _agbfdc != nil {
				return _agbfdc
			}
			_cefbf.DescendingAttr = &_cecffa
			continue
		}
		if _cecff.Name.Local == "\u0073\u006f\u0072\u0074\u0042\u0079" {
			_cefbf.SortByAttr.UnmarshalXMLAttr(_cecff)
			continue
		}
		if _cecff.Name.Local == "\u0072\u0065\u0066" {
			_afccb, _dbccce := _cecff.Value, error(nil)
			if _dbccce != nil {
				return _dbccce
			}
			_cefbf.RefAttr = _afccb
			continue
		}
		if _cecff.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073\u0074" {
			_addef, _baadc := _cecff.Value, error(nil)
			if _baadc != nil {
				return _baadc
			}
			_cefbf.CustomListAttr = &_addef
			continue
		}
		if _cecff.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_ddgca, _cafda := _f.ParseUint(_cecff.Value, 10, 32)
			if _cafda != nil {
				return _cafda
			}
			_dbfegd := uint32(_ddgca)
			_cefbf.DxfIdAttr = &_dbfegd
			continue
		}
		if _cecff.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_cefbf.IconSetAttr.UnmarshalXMLAttr(_cecff)
			continue
		}
		if _cecff.Name.Local == "\u0069\u0063\u006f\u006e\u0049\u0064" {
			_bbebe, _afbdf := _f.ParseUint(_cecff.Value, 10, 32)
			if _afbdf != nil {
				return _afbdf
			}
			_dcabb := uint32(_bbebe)
			_cefbf.IconIdAttr = &_dcabb
			continue
		}
	}
	for {
		_ggcff, _faeef := d.Token()
		if _faeef != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006f\u0072\u0074C\u006fn\u0064\u0069\u0074\u0069\u006f\u006e\u003a \u0025\u0073", _faeef)
		}
		if _bcegaf, _dgebd := _ggcff.(_a.EndElement); _dgebd && _bcegaf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Hyperlinks and its children, prefixing error messages with path
func (_cbaee *CT_Hyperlinks) ValidateWithPath(path string) error {
	for _dbcad, _deceb := range _cbaee.Hyperlink {
		if _bdcf := _deceb.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0048\u0079\u0070e\u0072\u006c\u0069\u006e\u006b\u005b\u0025\u0064\u005d", path, _dbcad)); _bdcf != nil {
			return _bdcf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MdxMetadata and its children, prefixing error messages with path
func (_dgddb *CT_MdxMetadata) ValidateWithPath(path string) error {
	for _eegfd, _fbdd := range _dgddb.Mdx {
		if _becdg := _fbdd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004d\u0064\u0078\u005b\u0025\u0064\u005d", path, _eegfd)); _becdg != nil {
			return _becdg
		}
	}
	return nil
}

type CT_Dialogsheet struct {

	// Sheet Properties
	SheetPr *CT_SheetPr

	// Dialog Sheet Views
	SheetViews *CT_SheetViews

	// Dialog Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Sheet Protection
	SheetProtection *CT_SheetProtection

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header & Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF
	OleObjects      *CT_OleObjects
	Controls        *CT_Controls

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_GroupLevel struct {

	// Unique Name
	UniqueNameAttr string

	// Grouping Level Display Name
	CaptionAttr string

	// User-Defined Group Level
	UserAttr *bool

	// Custom Roll Up
	CustomRollUpAttr *bool

	// OLAP Level Groups
	Groups *CT_Groups

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ad *AG_AutoFormat) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gb := range start.Attr {
		if _gb.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_aa, _fcad := _f.ParseUint(_gb.Value, 10, 32)
			if _fcad != nil {
				return _fcad
			}
			_d := uint32(_aa)
			_ad.AutoFormatIdAttr = &_d
			continue
		}
		if _gb.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_b, _adb := _f.ParseBool(_gb.Value)
			if _adb != nil {
				return _adb
			}
			_ad.ApplyNumberFormatsAttr = &_b
			continue
		}
		if _gb.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_eeb, _de := _f.ParseBool(_gb.Value)
			if _de != nil {
				return _de
			}
			_ad.ApplyBorderFormatsAttr = &_eeb
			continue
		}
		if _gb.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_df, _ab := _f.ParseBool(_gb.Value)
			if _ab != nil {
				return _ab
			}
			_ad.ApplyFontFormatsAttr = &_df
			continue
		}
		if _gb.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_be, _gg := _f.ParseBool(_gb.Value)
			if _gg != nil {
				return _gg
			}
			_ad.ApplyPatternFormatsAttr = &_be
			continue
		}
		if _gb.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gf, _cb := _f.ParseBool(_gb.Value)
			if _cb != nil {
				return _cb
			}
			_ad.ApplyAlignmentFormatsAttr = &_gf
			continue
		}
		if _gb.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ce, _aad := _f.ParseBool(_gb.Value)
			if _aad != nil {
				return _aad
			}
			_ad.ApplyWidthHeightFormatsAttr = &_ce
			continue
		}
	}
	for {
		_dd, _ggd := d.Token()
		if _ggd != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0041\u0047\u005f\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u003a\u0020\u0025s", _ggd)
		}
		if _cg, _cga := _dd.(_a.EndElement); _cga && _cg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_ColorFilter() *CT_ColorFilter { _gacgb := &CT_ColorFilter{}; return _gacgb }

// Validate validates the CT_DefinedNames and its children
func (_cbda *CT_DefinedNames) Validate() error {
	return _cbda.ValidateWithPath("\u0043T\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073")
}
func (_bcdeb *CT_PageMargins) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cbgcf := range start.Attr {
		if _cbgcf.Name.Local == "\u006c\u0065\u0066\u0074" {
			_bfcec, _fgddad := _f.ParseFloat(_cbgcf.Value, 64)
			if _fgddad != nil {
				return _fgddad
			}
			_bcdeb.LeftAttr = _bfcec
			continue
		}
		if _cbgcf.Name.Local == "\u0072\u0069\u0067h\u0074" {
			_adecff, _cggae := _f.ParseFloat(_cbgcf.Value, 64)
			if _cggae != nil {
				return _cggae
			}
			_bcdeb.RightAttr = _adecff
			continue
		}
		if _cbgcf.Name.Local == "\u0074\u006f\u0070" {
			_fdgf, _ccfedg := _f.ParseFloat(_cbgcf.Value, 64)
			if _ccfedg != nil {
				return _ccfedg
			}
			_bcdeb.TopAttr = _fdgf
			continue
		}
		if _cbgcf.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_caadaa, _ebcgg := _f.ParseFloat(_cbgcf.Value, 64)
			if _ebcgg != nil {
				return _ebcgg
			}
			_bcdeb.BottomAttr = _caadaa
			continue
		}
		if _cbgcf.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072" {
			_abcfa, _bdfdg := _f.ParseFloat(_cbgcf.Value, 64)
			if _bdfdg != nil {
				return _bdfdg
			}
			_bcdeb.HeaderAttr = _abcfa
			continue
		}
		if _cbgcf.Name.Local == "\u0066\u006f\u006f\u0074\u0065\u0072" {
			_bdbfgc, _dbabd := _f.ParseFloat(_cbgcf.Value, 64)
			if _dbabd != nil {
				return _dbabd
			}
			_bcdeb.FooterAttr = _bdbfgc
			continue
		}
	}
	for {
		_agfeb, _abgc := d.Token()
		if _abgc != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073:\u0020\u0025\u0073", _abgc)
		}
		if _fdbc, _egbddd := _agfeb.(_a.EndElement); _egbddd && _fdbc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Index struct {

	// Shared Items Index
	VAttr uint32
}

func (_gdggb *CT_MeasureDimensionMap) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gaeab := range start.Attr {
		if _gaeab.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_fefbc, _aeeadd := _f.ParseUint(_gaeab.Value, 10, 32)
			if _aeeadd != nil {
				return _aeeadd
			}
			_bded := uint32(_fefbc)
			_gdggb.MeasureGroupAttr = &_bded
			continue
		}
		if _gaeab.Name.Local == "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn" {
			_bgaaf, _ccgecc := _f.ParseUint(_gaeab.Value, 10, 32)
			if _ccgecc != nil {
				return _ccgecc
			}
			_gbeag := uint32(_bgaaf)
			_gdggb.DimensionAttr = &_gbeag
			continue
		}
	}
	for {
		_abaeb, _ggdec := d.Token()
		if _ggdec != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0061s\u0075r\u0065D\u0069m\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u003a\u0020\u0025\u0073", _ggdec)
		}
		if _acfbg, _ecagc := _abaeb.(_a.EndElement); _ecagc && _acfbg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_MetadataRecord and its children
func (_cabe *CT_MetadataRecord) Validate() error {
	return _cabe.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052e\u0063\u006f\u0072\u0064")
}

// ValidateWithPath validates the CT_FutureMetadataBlock and its children, prefixing error messages with path
func (_cbfdg *CT_FutureMetadataBlock) ValidateWithPath(path string) error {
	if _cbfdg.ExtLst != nil {
		if _cgfdb := _cbfdg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgfdb != nil {
			return _cgfdb
		}
	}
	return nil
}

type ST_PivotFilterType byte
type CT_Dxfs struct {

	// Format Count
	CountAttr *uint32

	// Formatting
	Dxf []*CT_Dxf
}

func (_ebffd *CT_OleItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _ebffd.OleItem != nil {
		_eacab := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u0049\u0074\u0065\u006d"}}
		for _, _gadge := range _ebffd.OleItem {
			e.EncodeElement(_gadge, _eacab)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_BookView struct {

	// Visibility
	VisibilityAttr ST_Visibility

	// Minimized
	MinimizedAttr *bool

	// Show Horizontal Scroll
	ShowHorizontalScrollAttr *bool

	// Show Vertical Scroll
	ShowVerticalScrollAttr *bool

	// Show Sheet Tabs
	ShowSheetTabsAttr *bool

	// Upper Left Corner (X Coordinate)
	XWindowAttr *int32

	// Upper Left Corner (Y Coordinate)
	YWindowAttr *int32

	// Window Width
	WindowWidthAttr *uint32

	// Window Height
	WindowHeightAttr *uint32

	// Sheet Tab Ratio
	TabRatioAttr *uint32

	// First Sheet
	FirstSheetAttr *uint32

	// Active Sheet Index
	ActiveTabAttr *uint32

	// AutoFilter Date Grouping
	AutoFilterDateGroupingAttr *bool
	ExtLst                     *CT_ExtensionList
}

func (_gdgdf ST_CfType) String() string {
	switch _gdgdf {
	case 0:
		return ""
	case 1:
		return "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e"
	case 2:
		return "\u0063\u0065\u006c\u006c\u0049\u0073"
	case 3:
		return "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"
	case 4:
		return "\u0064a\u0074\u0061\u0042\u0061\u0072"
	case 5:
		return "\u0069c\u006f\u006e\u0053\u0065\u0074"
	case 6:
		return "\u0074\u006f\u00701\u0030"
	case 7:
		return "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case 8:
		return "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case 9:
		return "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 10:
		return "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 11:
		return "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case 12:
		return "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case 13:
		return "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case 14:
		return "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case 15:
		return "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case 16:
		return "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case 17:
		return "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"
	case 18:
		return "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	}
	return ""
}
func (_afag *CT_CustomChartsheetViews) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _afag.CustomSheetView != nil {
		_gffa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077"}}
		for _, _bbec := range _afag.CustomSheetView {
			e.EncodeElement(_bbec, _gffa)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type VolTypes struct{ CT_VolTypes }

func (_fedbe ST_Visibility) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_eadbb := _a.Attr{}
	_eadbb.Name = name
	switch _fedbe {
	case ST_VisibilityUnset:
		_eadbb.Value = ""
	case ST_VisibilityVisible:
		_eadbb.Value = "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case ST_VisibilityHidden:
		_eadbb.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	case ST_VisibilityVeryHidden:
		_eadbb.Value = "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return _eadbb, nil
}
func (_faede *CT_PivotHierarchies) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _abaag := range start.Attr {
		if _abaag.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bebgg, _adgag := _f.ParseUint(_abaag.Value, 10, 32)
			if _adgag != nil {
				return _adgag
			}
			_gbage := uint32(_bebgg)
			_faede.CountAttr = &_gbage
			continue
		}
	}
_bdfcfc:
	for {
		_dadda, _egaf := d.Token()
		if _egaf != nil {
			return _egaf
		}
		switch _ccedc := _dadda.(type) {
		case _a.StartElement:
			switch _ccedc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}:
				_defff := NewCT_PivotHierarchy()
				if _cffgeb := d.DecodeElement(_defff, &_ccedc); _cffgeb != nil {
					return _cffgeb
				}
				_faede.PivotHierarchy = append(_faede.PivotHierarchy, _defff)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069er\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0020\u0025\u0076", _ccedc.Name)
				if _bfdbfd := d.Skip(); _bfdbfd != nil {
					return _bfdbfd
				}
			}
		case _a.EndElement:
			break _bdfcfc
		case _a.CharData:
		}
	}
	return nil
}
func (_gcg *CT_Borders) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fdca := range start.Attr {
		if _fdca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cdd, _agbc := _f.ParseUint(_fdca.Value, 10, 32)
			if _agbc != nil {
				return _agbc
			}
			_ede := uint32(_cdd)
			_gcg.CountAttr = &_ede
			continue
		}
	}
_aaed:
	for {
		_gfa, _aadc := d.Token()
		if _aadc != nil {
			return _aadc
		}
		switch _ace := _gfa.(type) {
		case _a.StartElement:
			switch _ace.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}:
				_ceab := NewCT_Border()
				if _acdf := d.DecodeElement(_ceab, &_ace); _acdf != nil {
					return _acdf
				}
				_gcg.Border = append(_gcg.Border, _ceab)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fB\u006f\u0072\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _ace.Name)
				if _ebfc := d.Skip(); _ebfc != nil {
					return _ebfc
				}
			}
		case _a.EndElement:
			break _aaed
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_CellSmartTagPr() *CT_CellSmartTagPr { _dfg := &CT_CellSmartTagPr{}; return _dfg }

type CT_ExternalDefinedNames struct {

	// Defined Name
	DefinedName []*CT_ExternalDefinedName
}

func (_fdged *CT_IconFilter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fdged.IconSetAttr = ST_IconSetType(1)
	for _, _befgc := range start.Attr {
		if _befgc.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_fdged.IconSetAttr.UnmarshalXMLAttr(_befgc)
			continue
		}
		if _befgc.Name.Local == "\u0069\u0063\u006f\u006e\u0049\u0064" {
			_ceed, _eebabb := _f.ParseUint(_befgc.Value, 10, 32)
			if _eebabb != nil {
				return _eebabb
			}
			_bfedg := uint32(_ceed)
			_fdged.IconIdAttr = &_bfedg
			continue
		}
	}
	for {
		_degade, _addac := d.Token()
		if _addac != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049c\u006fn\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s", _addac)
		}
		if _dffbg, _eeega := _degade.(_a.EndElement); _eeega && _dffbg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gcbdc *CT_Scenarios) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gcbdc.CurrentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063u\u0072\u0072\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_gcbdc.CurrentAttr)})
	}
	if _gcbdc.ShowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0076", *_gcbdc.ShowAttr)})
	}
	if _gcbdc.SqrefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_gcbdc.SqrefAttr)})
	}
	e.EncodeToken(start)
	_gefge := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}}
	for _, _efagf := range _gcbdc.Scenario {
		e.EncodeElement(_efagf, _gefge)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cfcga ST_SourceType) ValidateWithPath(path string) error {
	switch _cfcga {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfcga))
	}
	return nil
}
func (_gfbdaf ST_HtmlFmt) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cffgg := _a.Attr{}
	_cffgg.Name = name
	switch _gfbdaf {
	case ST_HtmlFmtUnset:
		_cffgg.Value = ""
	case ST_HtmlFmtNone:
		_cffgg.Value = "\u006e\u006f\u006e\u0065"
	case ST_HtmlFmtRtf:
		_cffgg.Value = "\u0072\u0074\u0066"
	case ST_HtmlFmtAll:
		_cffgg.Value = "\u0061\u006c\u006c"
	}
	return _cffgg, nil
}

// ValidateWithPath validates the CT_FontName and its children, prefixing error messages with path
func (_cbag *CT_FontName) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_CustomProperties and its children
func (_cefa *CT_CustomProperties) Validate() error {
	return _cefa.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_SheetId struct {

	// Sheet Id
	ValAttr uint32
}

// ValidateWithPath validates the CT_GroupMembers and its children, prefixing error messages with path
func (_fagfe *CT_GroupMembers) ValidateWithPath(path string) error {
	for _gaagb, _fecfc := range _fagfe.GroupMember {
		if _afbga := _fecfc.ValidateWithPath(_fc.Sprintf("\u0025s\u002fG\u0072\u006f\u0075\u0070\u004de\u006d\u0062e\u0072\u005b\u0025\u0064\u005d", path, _gaagb)); _afbga != nil {
			return _afbga
		}
	}
	return nil
}

type CT_Parameters struct {

	// Parameter Count
	CountAttr *uint32

	// Parameter Properties
	Parameter []*CT_Parameter
}
type CT_XmlCellPr struct {

	// Table Field Id
	IdAttr uint32

	// Unique Table Name
	UniqueNameAttr *string

	// Column XML Properties
	XmlPr *CT_XmlPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_dcfgf *CT_SingleXmlCells) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gccf:
	for {
		_ggabfc, _bcccg := d.Token()
		if _bcccg != nil {
			return _bcccg
		}
		switch _edfaaa := _ggabfc.(type) {
		case _a.StartElement:
			switch _edfaaa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}:
				_egcgd := NewCT_SingleXmlCell()
				if _aecag := d.DecodeElement(_egcgd, &_edfaaa); _aecag != nil {
					return _aecag
				}
				_dcfgf.SingleXmlCell = append(_dcfgf.SingleXmlCell, _egcgd)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0073\u0020\u0025\u0076", _edfaaa.Name)
				if _affcd := d.Skip(); _affcd != nil {
					return _affcd
				}
			}
		case _a.EndElement:
			break _gccf
		case _a.CharData:
		}
	}
	return nil
}

type CT_OleSize struct {

	// Reference
	RefAttr string
}

func NewCT_GroupLevels() *CT_GroupLevels { _ccccd := &CT_GroupLevels{}; return _ccccd }

type CT_HeaderFooter struct {

	// Different Odd Even Header Footer
	DifferentOddEvenAttr *bool

	// Different First Page
	DifferentFirstAttr *bool

	// Scale Header & Footer With Document
	ScaleWithDocAttr *bool

	// Align Margins
	AlignWithMarginsAttr *bool

	// Odd Header
	OddHeader *string

	// Odd Page Footer
	OddFooter *string

	// Even Page Header
	EvenHeader *string

	// Even Page Footer
	EvenFooter *string

	// First Page Header
	FirstHeader *string

	// First Page Footer
	FirstFooter *string
}

// ValidateWithPath validates the Chartsheet and its children, prefixing error messages with path
func (_fedcge *Chartsheet) ValidateWithPath(path string) error {
	if _efdcb := _fedcge.CT_Chartsheet.ValidateWithPath(path); _efdcb != nil {
		return _efdcb
	}
	return nil
}
func (_fbeced ST_FormulaExpression) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fbeced.String(), start)
}
func (_agbeegd *ST_PrintError) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fggfgd, _ecaadd := d.Token()
	if _ecaadd != nil {
		return _ecaadd
	}
	if _cccbb, _ddfbc := _fggfgd.(_a.EndElement); _ddfbc && _cccbb.Name == start.Name {
		*_agbeegd = 1
		return nil
	}
	if _cagdeb, _afdcbf := _fggfgd.(_a.CharData); !_afdcbf {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fggfgd)
	} else {
		switch string(_cagdeb) {
		case "":
			*_agbeegd = 0
		case "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d":
			*_agbeegd = 1
		case "\u0062\u006c\u0061n\u006b":
			*_agbeegd = 2
		case "\u0064\u0061\u0073\u0068":
			*_agbeegd = 3
		case "\u004e\u0041":
			*_agbeegd = 4
		}
	}
	_fggfgd, _ecaadd = d.Token()
	if _ecaadd != nil {
		return _ecaadd
	}
	if _eggfc, _ggfae := _fggfgd.(_a.EndElement); _ggfae && _eggfc.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fggfgd)
}
func (_dbdgbg *ST_DynamicFilterType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dgedbg, _aacfbc := d.Token()
	if _aacfbc != nil {
		return _aacfbc
	}
	if _cadaef, _abcge := _dgedbg.(_a.EndElement); _abcge && _cadaef.Name == start.Name {
		*_dbdgbg = 1
		return nil
	}
	if _dcgag, _cdbdg := _dgedbg.(_a.CharData); !_cdbdg {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgedbg)
	} else {
		switch string(_dcgag) {
		case "":
			*_dbdgbg = 0
		case "\u006e\u0075\u006c\u006c":
			*_dbdgbg = 1
		case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_dbdgbg = 2
		case "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_dbdgbg = 3
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_dbdgbg = 4
		case "\u0074\u006f\u0064a\u0079":
			*_dbdgbg = 5
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_dbdgbg = 6
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_dbdgbg = 7
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_dbdgbg = 8
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_dbdgbg = 9
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_dbdgbg = 10
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_dbdgbg = 11
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_dbdgbg = 12
		case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_dbdgbg = 13
		case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_dbdgbg = 14
		case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_dbdgbg = 15
		case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
			*_dbdgbg = 16
		case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
			*_dbdgbg = 17
		case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
			*_dbdgbg = 18
		case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
			*_dbdgbg = 19
		case "\u0051\u0031":
			*_dbdgbg = 20
		case "\u0051\u0032":
			*_dbdgbg = 21
		case "\u0051\u0033":
			*_dbdgbg = 22
		case "\u0051\u0034":
			*_dbdgbg = 23
		case "\u004d\u0031":
			*_dbdgbg = 24
		case "\u004d\u0032":
			*_dbdgbg = 25
		case "\u004d\u0033":
			*_dbdgbg = 26
		case "\u004d\u0034":
			*_dbdgbg = 27
		case "\u004d\u0035":
			*_dbdgbg = 28
		case "\u004d\u0036":
			*_dbdgbg = 29
		case "\u004d\u0037":
			*_dbdgbg = 30
		case "\u004d\u0038":
			*_dbdgbg = 31
		case "\u004d\u0039":
			*_dbdgbg = 32
		case "\u004d\u0031\u0030":
			*_dbdgbg = 33
		case "\u004d\u0031\u0031":
			*_dbdgbg = 34
		case "\u004d\u0031\u0032":
			*_dbdgbg = 35
		}
	}
	_dgedbg, _aacfbc = d.Token()
	if _aacfbc != nil {
		return _aacfbc
	}
	if _eeefd, _agcde := _dgedbg.(_a.EndElement); _agcde && _eeefd.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgedbg)
}

// Validate validates the CT_OleItem and its children
func (_egcac *CT_OleItem) Validate() error {
	return _egcac.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d")
}

type CT_SmartTagTypes struct {

	// Smart Tag Type
	SmartTagType []*CT_SmartTagType
}

func (_eegdg ST_RevisionAction) String() string {
	switch _eegdg {
	case 0:
		return ""
	case 1:
		return "\u0061\u0064\u0064"
	case 2:
		return "\u0064\u0065\u006c\u0065\u0074\u0065"
	}
	return ""
}
func NewCT_CalcChain() *CT_CalcChain { _eedf := &CT_CalcChain{}; return _eedf }

// ValidateWithPath validates the CT_ConditionalFormats and its children, prefixing error messages with path
func (_gefd *CT_ConditionalFormats) ValidateWithPath(path string) error {
	for _eea, _caea := range _gefd.ConditionalFormat {
		if _dbbb := _caea.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _eea)); _dbbb != nil {
			return _dbbb
		}
	}
	return nil
}

type CT_VolMain struct {

	// First String
	FirstAttr string

	// Topic
	Tp []*CT_VolTopic
}

func (_cacga ST_rwColActionType) Validate() error { return _cacga.ValidateWithPath("") }

// Validate validates the CT_Metadata and its children
func (_dcfeb *CT_Metadata) Validate() error {
	return _dcfeb.ValidateWithPath("C\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061")
}
func (_faaag *PivotCacheDefinition) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_faaag.CT_PivotCacheDefinition = *NewCT_PivotCacheDefinition()
	for _, _gcbdf := range start.Attr {
		if _gcbdf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gcbdf.Name.Local == "\u0069\u0064" || _gcbdf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gcbdf.Name.Local == "\u0069\u0064" {
			_cacddf, _ebdaa := _gcbdf.Value, error(nil)
			if _ebdaa != nil {
				return _ebdaa
			}
			_faaag.IdAttr = &_cacddf
			continue
		}
		if _gcbdf.Name.Local == "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_afdceg, _bbgac := _f.ParseBool(_gcbdf.Value)
			if _bbgac != nil {
				return _bbgac
			}
			_faaag.UpgradeOnRefreshAttr = &_afdceg
			continue
		}
		if _gcbdf.Name.Local == "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065" {
			_ddabb, _gcfcc := _f.ParseBool(_gcbdf.Value)
			if _gcfcc != nil {
				return _gcfcc
			}
			_faaag.TupleCacheAttr = &_ddabb
			continue
		}
		if _gcbdf.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_gedgeg, _adgbf := _f.ParseBool(_gcbdf.Value)
			if _adgbf != nil {
				return _adgbf
			}
			_faaag.SaveDataAttr = &_gedgeg
			continue
		}
		if _gcbdf.Name.Local == "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079" {
			_cafag, _feaafg := _f.ParseBool(_gcbdf.Value)
			if _feaafg != nil {
				return _feaafg
			}
			_faaag.SupportSubqueryAttr = &_cafag
			continue
		}
		if _gcbdf.Name.Local == "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079" {
			_fbbcf, _cgabf := _f.ParseBool(_gcbdf.Value)
			if _cgabf != nil {
				return _cgabf
			}
			_faaag.OptimizeMemoryAttr = &_fbbcf
			continue
		}
		if _gcbdf.Name.Local == "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c" {
			_eafdb, _edfcg := _f.ParseBool(_gcbdf.Value)
			if _edfcg != nil {
				return _edfcg
			}
			_faaag.SupportAdvancedDrillAttr = &_eafdb
			continue
		}
		if _gcbdf.Name.Local == "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079" {
			_cbdea, _bbfab := _gcbdf.Value, error(nil)
			if _bbfab != nil {
				return _bbfab
			}
			_faaag.RefreshedByAttr = &_cbdea
			continue
		}
		if _gcbdf.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f" {
			_dfgca, _gfgbd := ParseStdlibTime(_gcbdf.Value)
			if _gfgbd != nil {
				return _gfgbd
			}
			_faaag.RefreshedDateIsoAttr = &_dfgca
			continue
		}
		if _gcbdf.Name.Local == "\u0069n\u0076\u0061\u006c\u0069\u0064" {
			_daagcf, _babgdg := _f.ParseBool(_gcbdf.Value)
			if _babgdg != nil {
				return _babgdg
			}
			_faaag.InvalidAttr = &_daagcf
			continue
		}
		if _gcbdf.Name.Local == "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079" {
			_efcae, _fefbcf := _f.ParseBool(_gcbdf.Value)
			if _fefbcf != nil {
				return _fefbcf
			}
			_faaag.BackgroundQueryAttr = &_efcae
			continue
		}
		if _gcbdf.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074" {
			_faaaa, _ddadfb := _f.ParseUint(_gcbdf.Value, 10, 32)
			if _ddadfb != nil {
				return _ddadfb
			}
			_cfefb := uint32(_faaaa)
			_faaag.MissingItemsLimitAttr = &_cfefb
			continue
		}
		if _gcbdf.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_cbaggf, _gfgbf := _f.ParseUint(_gcbdf.Value, 10, 8)
			if _gfgbf != nil {
				return _gfgbf
			}
			_efeda := uint8(_cbaggf)
			_faaag.RefreshedVersionAttr = &_efeda
			continue
		}
		if _gcbdf.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_bfdfa, _gbgcc := _f.ParseBool(_gcbdf.Value)
			if _gbgcc != nil {
				return _gbgcc
			}
			_faaag.RefreshOnLoadAttr = &_bfdfa
			continue
		}
		if _gcbdf.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065" {
			_dgbcfc, _dfdba := _f.ParseFloat(_gcbdf.Value, 64)
			if _dfdba != nil {
				return _dfdba
			}
			_faaag.RefreshedDateAttr = &_dgbcfc
			continue
		}
		if _gcbdf.Name.Local == "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074" {
			_bbeada, _dggcf := _f.ParseUint(_gcbdf.Value, 10, 32)
			if _dggcf != nil {
				return _dggcf
			}
			_fdgdd := uint32(_bbeada)
			_faaag.RecordCountAttr = &_fdgdd
			continue
		}
		if _gcbdf.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_bebdbf, _dbbcc := _f.ParseUint(_gcbdf.Value, 10, 8)
			if _dbbcc != nil {
				return _dbbcc
			}
			_gcefa := uint8(_bebdbf)
			_faaag.CreatedVersionAttr = &_gcefa
			continue
		}
		if _gcbdf.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_fadbeea, _gccfe := _f.ParseUint(_gcbdf.Value, 10, 8)
			if _gccfe != nil {
				return _gccfe
			}
			_acgce := uint8(_fadbeea)
			_faaag.MinRefreshableVersionAttr = &_acgce
			continue
		}
		if _gcbdf.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_dgcbbc, _cbffb := _f.ParseBool(_gcbdf.Value)
			if _cbffb != nil {
				return _cbffb
			}
			_faaag.EnableRefreshAttr = &_dgcbbc
			continue
		}
	}
_feaeag:
	for {
		_dfbbd, _dfcca := d.Token()
		if _dfcca != nil {
			return _dfcca
		}
		switch _dcbga := _dfbbd.(type) {
		case _a.StartElement:
			switch _dcbga.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}:
				if _bbgdcc := d.DecodeElement(_faaag.CacheSource, &_dcbga); _bbgdcc != nil {
					return _bbgdcc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _aceca := d.DecodeElement(_faaag.CacheFields, &_dcbga); _aceca != nil {
					return _aceca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_faaag.CacheHierarchies = NewCT_CacheHierarchies()
				if _cfbcbf := d.DecodeElement(_faaag.CacheHierarchies, &_dcbga); _cfbcbf != nil {
					return _cfbcbf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}:
				_faaag.Kpis = NewCT_PCDKPIs()
				if _fbfdff := d.DecodeElement(_faaag.Kpis, &_dcbga); _fbfdff != nil {
					return _fbfdff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}:
				_faaag.TupleCache = NewCT_TupleCache()
				if _bcdfc := d.DecodeElement(_faaag.TupleCache, &_dcbga); _bcdfc != nil {
					return _bcdfc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_faaag.CalculatedItems = NewCT_CalculatedItems()
				if _egfaf := d.DecodeElement(_faaag.CalculatedItems, &_dcbga); _egfaf != nil {
					return _egfaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}:
				_faaag.CalculatedMembers = NewCT_CalculatedMembers()
				if _cdadb := d.DecodeElement(_faaag.CalculatedMembers, &_dcbga); _cdadb != nil {
					return _cdadb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}:
				_faaag.Dimensions = NewCT_Dimensions()
				if _dcabdba := d.DecodeElement(_faaag.Dimensions, &_dcbga); _dcabdba != nil {
					return _dcabdba
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}:
				_faaag.MeasureGroups = NewCT_MeasureGroups()
				if _bafbc := d.DecodeElement(_faaag.MeasureGroups, &_dcbga); _bafbc != nil {
					return _bafbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}:
				_faaag.Maps = NewCT_MeasureDimensionMaps()
				if _bcgeb := d.DecodeElement(_faaag.Maps, &_dcbga); _bcgeb != nil {
					return _bcgeb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_faaag.ExtLst = NewCT_ExtensionList()
				if _eeceg := d.DecodeElement(_faaag.ExtLst, &_dcbga); _eeceg != nil {
					return _eeceg
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _dcbga.Name)
				if _cfcfa := d.Skip(); _cfcfa != nil {
					return _cfcfa
				}
			}
		case _a.EndElement:
			break _feaeag
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_TextFields() *CT_TextFields { _aaagc := &CT_TextFields{}; return _aaagc }
func NewCT_OlapPr() *CT_OlapPr         { _fgbbc := &CT_OlapPr{}; return _fgbbc }

// Validate validates the CT_ConditionalFormatting and its children
func (_dcbb *CT_ConditionalFormatting) Validate() error {
	return _dcbb.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067")
}
func (_fageae ST_FormatAction) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fageae.String(), start)
}

// ValidateWithPath validates the CT_CustomFilter and its children, prefixing error messages with path
func (_fdace *CT_CustomFilter) ValidateWithPath(path string) error {
	if _gebbb := _fdace.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _gebbb != nil {
		return _gebbb
	}
	return nil
}
func (_aafe *CT_ControlPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aafe.LockedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafe.LockedAttr))})
	}
	if _aafe.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafe.DefaultSizeAttr))})
	}
	if _aafe.PrintAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafe.PrintAttr))})
	}
	if _aafe.DisabledAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafe.DisabledAttr))})
	}
	if _aafe.RecalcAlwaysAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0063a\u006c\u0063\u0041\u006c\u0077\u0061\u0079\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafe.RecalcAlwaysAttr))})
	}
	if _aafe.UiObjectAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafe.UiObjectAttr))})
	}
	if _aafe.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafe.AutoFillAttr))})
	}
	if _aafe.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafe.AutoLineAttr))})
	}
	if _aafe.AutoPictAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafe.AutoPictAttr))})
	}
	if _aafe.MacroAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_aafe.MacroAttr)})
	}
	if _aafe.AltTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_aafe.AltTextAttr)})
	}
	if _aafe.LinkedCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0069\u006e\u006b\u0065\u0064\u0043\u0065\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_aafe.LinkedCellAttr)})
	}
	if _aafe.ListFillRangeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0069\u0073\u0074\u0046\u0069\u006c\u006c\u0052\u0061\u006e\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_aafe.ListFillRangeAttr)})
	}
	if _aafe.CfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_aafe.CfAttr)})
	}
	if _aafe.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_aafe.IdAttr)})
	}
	e.EncodeToken(start)
	_efgab := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_aafe.Anchor, _efgab)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dcef *CT_CommentPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dcef.LockedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcef.LockedAttr))})
	}
	if _dcef.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcef.DefaultSizeAttr))})
	}
	if _dcef.PrintAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcef.PrintAttr))})
	}
	if _dcef.DisabledAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcef.DisabledAttr))})
	}
	if _dcef.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcef.AutoFillAttr))})
	}
	if _dcef.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcef.AutoLineAttr))})
	}
	if _dcef.AltTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_dcef.AltTextAttr)})
	}
	if _dcef.TextHAlignAttr != ST_TextHAlignUnset {
		_gaec, _gdfda := _dcef.TextHAlignAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0065\u0078\u0074\u0048\u0041\u006c\u0069\u0067\u006e"})
		if _gdfda != nil {
			return _gdfda
		}
		start.Attr = append(start.Attr, _gaec)
	}
	if _dcef.TextVAlignAttr != ST_TextVAlignUnset {
		_ggca, _ddede := _dcef.TextVAlignAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0065\u0078\u0074\u0056\u0041\u006c\u0069\u0067\u006e"})
		if _ddede != nil {
			return _ddede
		}
		start.Attr = append(start.Attr, _ggca)
	}
	if _dcef.LockTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0054\u0065\u0078\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcef.LockTextAttr))})
	}
	if _dcef.JustLastXAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006au\u0073\u0074\u004c\u0061\u0073\u0074X"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcef.JustLastXAttr))})
	}
	if _dcef.AutoScaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061u\u0074\u006f\u0053\u0063\u0061\u006ce"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcef.AutoScaleAttr))})
	}
	e.EncodeToken(start)
	_agga := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_dcef.Anchor, _agga)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewMetadata() *Metadata {
	_bdefeb := &Metadata{}
	_bdefeb.CT_Metadata = *NewCT_Metadata()
	return _bdefeb
}

const (
	ST_UpdateLinksUnset   ST_UpdateLinks = 0
	ST_UpdateLinksUserSet ST_UpdateLinks = 1
	ST_UpdateLinksNever   ST_UpdateLinks = 2
	ST_UpdateLinksAlways  ST_UpdateLinks = 3
)

// Validate validates the CT_SortCondition and its children
func (_baff *CT_SortCondition) Validate() error {
	return _baff.ValidateWithPath("\u0043\u0054_\u0053\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_CommentList and its children
func (_ceadc *CT_CommentList) Validate() error {
	return _ceadc.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_PivotHierarchies and its children, prefixing error messages with path
func (_bdedg *CT_PivotHierarchies) ValidateWithPath(path string) error {
	for _gefafa, _cbedda := range _bdedg.PivotHierarchy {
		if _bagggf := _cbedda.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0050\u0069vo\u0074H\u0069\u0065\u0072\u0061\u0072c\u0068\u0079\u005b\u0025\u0064\u005d", path, _gefafa)); _bagggf != nil {
			return _bagggf
		}
	}
	return nil
}

// Validate validates the CT_CustomSheetViews and its children
func (_ebbb *CT_CustomSheetViews) Validate() error {
	return _ebbb.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}
func (_bdeec ST_Scope) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gfbcg := _a.Attr{}
	_gfbcg.Name = name
	switch _bdeec {
	case ST_ScopeUnset:
		_gfbcg.Value = ""
	case ST_ScopeSelection:
		_gfbcg.Value = "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"
	case ST_ScopeData:
		_gfbcg.Value = "\u0064\u0061\u0074\u0061"
	case ST_ScopeField:
		_gfbcg.Value = "\u0066\u0069\u0065l\u0064"
	}
	return _gfbcg, nil
}

// ValidateWithPath validates the CT_Xf and its children, prefixing error messages with path
func (_ebfcc *CT_Xf) ValidateWithPath(path string) error {
	if _ebfcc.Alignment != nil {
		if _defbb := _ebfcc.Alignment.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"); _defbb != nil {
			return _defbb
		}
	}
	if _ebfcc.Protection != nil {
		if _cafddd := _ebfcc.Protection.ValidateWithPath(path + "/\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _cafddd != nil {
			return _cafddd
		}
	}
	if _ebfcc.ExtLst != nil {
		if _gefebf := _ebfcc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gefebf != nil {
			return _gefebf
		}
	}
	return nil
}

// Validate validates the CT_Dxf and its children
func (_caceec *CT_Dxf) Validate() error {
	return _caceec.ValidateWithPath("\u0043\u0054\u005f\u0044\u0078\u0066")
}

// Validate validates the CT_SmartTagTypes and its children
func (_agbdg *CT_SmartTagTypes) Validate() error {
	return _agbdg.ValidateWithPath("\u0043\u0054_\u0053\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073")
}
func (_abega ST_TextHAlign) ValidateWithPath(path string) error {
	switch _abega {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abega))
	}
	return nil
}
func (_abbaa *ST_CfvoType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aedbbc, _adegbb := d.Token()
	if _adegbb != nil {
		return _adegbb
	}
	if _bgcbb, _geedb := _aedbbc.(_a.EndElement); _geedb && _bgcbb.Name == start.Name {
		*_abbaa = 1
		return nil
	}
	if _cgfda, _bdecfg := _aedbbc.(_a.CharData); !_bdecfg {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aedbbc)
	} else {
		switch string(_cgfda) {
		case "":
			*_abbaa = 0
		case "\u006e\u0075\u006d":
			*_abbaa = 1
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_abbaa = 2
		case "\u006d\u0061\u0078":
			*_abbaa = 3
		case "\u006d\u0069\u006e":
			*_abbaa = 4
		case "\u0066o\u0072\u006d\u0075\u006c\u0061":
			*_abbaa = 5
		case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065":
			*_abbaa = 6
		}
	}
	_aedbbc, _adegbb = d.Token()
	if _adegbb != nil {
		return _adegbb
	}
	if _dfbgbg, _deedda := _aedbbc.(_a.EndElement); _deedda && _dfbgbg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aedbbc)
}
func (_ffeecb *CT_TableStyle) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ffdag := range start.Attr {
		if _ffdag.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cggbd, _cegbeb := _ffdag.Value, error(nil)
			if _cegbeb != nil {
				return _cegbeb
			}
			_ffeecb.NameAttr = _cggbd
			continue
		}
		if _ffdag.Name.Local == "\u0070\u0069\u0076o\u0074" {
			_dgedbe, _ffegcc := _f.ParseBool(_ffdag.Value)
			if _ffegcc != nil {
				return _ffegcc
			}
			_ffeecb.PivotAttr = &_dgedbe
			continue
		}
		if _ffdag.Name.Local == "\u0074\u0061\u0062l\u0065" {
			_agbaa, _ggdbc := _f.ParseBool(_ffdag.Value)
			if _ggdbc != nil {
				return _ggdbc
			}
			_ffeecb.TableAttr = &_agbaa
			continue
		}
		if _ffdag.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dgbcc, _cbgff := _f.ParseUint(_ffdag.Value, 10, 32)
			if _cbgff != nil {
				return _cbgff
			}
			_cgdbg := uint32(_dgbcc)
			_ffeecb.CountAttr = &_cgdbg
			continue
		}
	}
_ecbgdg:
	for {
		_fgdae, _bbfcdbg := d.Token()
		if _bbfcdbg != nil {
			return _bbfcdbg
		}
		switch _ggbc := _fgdae.(type) {
		case _a.StartElement:
			switch _ggbc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0045\u006ce\u006d\u0065\u006e\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0045\u006ce\u006d\u0065\u006e\u0074"}:
				_fbbgd := NewCT_TableStyleElement()
				if _egadf := d.DecodeElement(_fbbgd, &_ggbc); _egadf != nil {
					return _egadf
				}
				_ffeecb.TableStyleElement = append(_ffeecb.TableStyleElement, _fbbgd)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _ggbc.Name)
				if _bdecgc := d.Skip(); _bdecgc != nil {
					return _bdecgc
				}
			}
		case _a.EndElement:
			break _ecbgdg
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_DefinedName and its children
func (_bedbf *CT_DefinedName) Validate() error {
	return _bedbf.ValidateWithPath("\u0043\u0054\u005f\u0044\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065")
}

type CT_RevisionQueryTableField struct {

	// Sheet Id
	SheetIdAttr uint32

	// QueryTable Reference
	RefAttr string

	// Field Id
	FieldIdAttr uint32
}

// ValidateWithPath validates the CT_MeasureDimensionMap and its children, prefixing error messages with path
func (_ggdaf *CT_MeasureDimensionMap) ValidateWithPath(path string) error { return nil }
func NewCT_WorksheetSource() *CT_WorksheetSource                          { _eaafe := &CT_WorksheetSource{}; return _eaafe }
func NewCT_ChartFormats() *CT_ChartFormats                                { _eadb := &CT_ChartFormats{}; return _eadb }
func (_ebeag *CT_MeasureDimensionMap) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ebeag.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_ebeag.MeasureGroupAttr)})
	}
	if _ebeag.DimensionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, Value: _fc.Sprintf("\u0025\u0076", *_ebeag.DimensionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_edgcba *ST_Orientation) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_edgcba = 0
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_edgcba = 1
	case "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074":
		*_edgcba = 2
	case "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e":
		*_edgcba = 3
	}
	return nil
}
func (_cfgb *CT_GroupItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cfgb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cfgb.CountAttr)})
	}
	e.EncodeToken(start)
	if _cfgb.M != nil {
		_bcgf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _ecaec := range _cfgb.M {
			e.EncodeElement(_ecaec, _bcgf)
		}
	}
	if _cfgb.N != nil {
		_cbdgf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _ffbda := range _cfgb.N {
			e.EncodeElement(_ffbda, _cbdgf)
		}
	}
	if _cfgb.B != nil {
		_bcad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _fedd := range _cfgb.B {
			e.EncodeElement(_fedd, _bcad)
		}
	}
	if _cfgb.E != nil {
		_fffcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _ecdcc := range _cfgb.E {
			e.EncodeElement(_ecdcc, _fffcg)
		}
	}
	if _cfgb.S != nil {
		_bcbeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _fefce := range _cfgb.S {
			e.EncodeElement(_fefce, _bcbeg)
		}
	}
	if _cfgb.D != nil {
		_cagdb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _fcbg := range _cfgb.D {
			e.EncodeElement(_fcbg, _cagdb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cfddd *ST_MdxFunctionType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cfddd = 0
	case "\u006d":
		*_cfddd = 1
	case "\u0076":
		*_cfddd = 2
	case "\u0073":
		*_cfddd = 3
	case "\u0063":
		*_cfddd = 4
	case "\u0072":
		*_cfddd = 5
	case "\u0070":
		*_cfddd = 6
	case "\u006b":
		*_cfddd = 7
	}
	return nil
}
func (_gceac ST_FileType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gceac.String(), start)
}
func (_gfbdd *CT_DateGroupItem) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gfbdd.DateTimeGroupingAttr = ST_DateTimeGrouping(1)
	for _, _egeae := range start.Attr {
		if _egeae.Name.Local == "\u0079\u0065\u0061\u0072" {
			_aaddd, _dffab := _f.ParseUint(_egeae.Value, 10, 16)
			if _dffab != nil {
				return _dffab
			}
			_gfbdd.YearAttr = uint16(_aaddd)
			continue
		}
		if _egeae.Name.Local == "\u006d\u006f\u006et\u0068" {
			_bfagg, _aebe := _f.ParseUint(_egeae.Value, 10, 16)
			if _aebe != nil {
				return _aebe
			}
			_cfgaf := uint16(_bfagg)
			_gfbdd.MonthAttr = &_cfgaf
			continue
		}
		if _egeae.Name.Local == "\u0064\u0061\u0079" {
			_eegdc, _bacga := _f.ParseUint(_egeae.Value, 10, 16)
			if _bacga != nil {
				return _bacga
			}
			_fgfda := uint16(_eegdc)
			_gfbdd.DayAttr = &_fgfda
			continue
		}
		if _egeae.Name.Local == "\u0068\u006f\u0075\u0072" {
			_ebee, _cfad := _f.ParseUint(_egeae.Value, 10, 16)
			if _cfad != nil {
				return _cfad
			}
			_bdeb := uint16(_ebee)
			_gfbdd.HourAttr = &_bdeb
			continue
		}
		if _egeae.Name.Local == "\u006d\u0069\u006e\u0075\u0074\u0065" {
			_fegb, _eceae := _f.ParseUint(_egeae.Value, 10, 16)
			if _eceae != nil {
				return _eceae
			}
			_ccad := uint16(_fegb)
			_gfbdd.MinuteAttr = &_ccad
			continue
		}
		if _egeae.Name.Local == "\u0073\u0065\u0063\u006f\u006e\u0064" {
			_bfdc, _bbdc := _f.ParseUint(_egeae.Value, 10, 16)
			if _bbdc != nil {
				return _bbdc
			}
			_eggea := uint16(_bfdc)
			_gfbdd.SecondAttr = &_eggea
			continue
		}
		if _egeae.Name.Local == "\u0064\u0061t\u0065\u0054\u0069m\u0065\u0047\u0072\u006f\u0075\u0070\u0069\u006e\u0067" {
			_gfbdd.DateTimeGroupingAttr.UnmarshalXMLAttr(_egeae)
			continue
		}
	}
	for {
		_cfcge, _ccdcb := d.Token()
		if _ccdcb != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0065G\u0072o\u0075\u0070\u0049\u0074\u0065\u006d\u003a \u0025\u0073", _ccdcb)
		}
		if _abed, _cebc := _cfcge.(_a.EndElement); _cebc && _abed.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Top10() *CT_Top10 { _cbdded := &CT_Top10{}; return _cbdded }

// Validate validates the CT_CustomFilters and its children
func (_ceaad *CT_CustomFilters) Validate() error {
	return _ceaad.ValidateWithPath("\u0043\u0054_\u0043\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}
func (_gedfc *CT_PageSetUpPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gedfc.AutoPageBreaksAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gedfc.AutoPageBreaksAttr))})
	}
	if _gedfc.FitToPageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gedfc.FitToPageAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_edagc *CT_RPrElt) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _edagc.RFont != nil {
		_cbbcbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_edagc.RFont, _cbbcbc)
	}
	if _edagc.Charset != nil {
		_ebedd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0073\u0065\u0074"}}
		e.EncodeElement(_edagc.Charset, _ebedd)
	}
	if _edagc.Family != nil {
		_ffegbf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0066\u0061\u006d\u0069\u006cy"}}
		e.EncodeElement(_edagc.Family, _ffegbf)
	}
	if _edagc.B != nil {
		_fecfb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0062"}}
		e.EncodeElement(_edagc.B, _fecfb)
	}
	if _edagc.I != nil {
		_eggcge := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0069"}}
		e.EncodeElement(_edagc.I, _eggcge)
	}
	if _edagc.Strike != nil {
		_gfead := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0073\u0074\u0072\u0069\u006be"}}
		e.EncodeElement(_edagc.Strike, _gfead)
	}
	if _edagc.Outline != nil {
		_adgae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		e.EncodeElement(_edagc.Outline, _adgae)
	}
	if _edagc.Shadow != nil {
		_ecaae := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0073\u0068\u0061\u0064\u006fw"}}
		e.EncodeElement(_edagc.Shadow, _ecaae)
	}
	if _edagc.Condense != nil {
		_bbgedf := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}}
		e.EncodeElement(_edagc.Condense, _bbgedf)
	}
	if _edagc.Extend != nil {
		_abagda := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u0065\u006ed"}}
		e.EncodeElement(_edagc.Extend, _abagda)
	}
	if _edagc.Color != nil {
		_bcddbb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_edagc.Color, _bcddbb)
	}
	if _edagc.Sz != nil {
		_ggeaea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u007a"}}
		e.EncodeElement(_edagc.Sz, _ggeaea)
	}
	if _edagc.U != nil {
		_ggeed := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0075"}}
		e.EncodeElement(_edagc.U, _ggeed)
	}
	if _edagc.VertAlign != nil {
		_cggcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003av\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"}}
		e.EncodeElement(_edagc.VertAlign, _cggcg)
	}
	if _edagc.Scheme != nil {
		_bdbcg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0073\u0063\u0068\u0065\u006de"}}
		e.EncodeElement(_edagc.Scheme, _bdbcg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dgedfa *CT_Worksheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dgedfa.SheetData = NewCT_SheetData()
_ceadd:
	for {
		_becfa, _bbfcg := d.Token()
		if _bbfcg != nil {
			return _bbfcg
		}
		switch _bdaec := _becfa.(type) {
		case _a.StartElement:
			switch _bdaec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_dgedfa.SheetPr = NewCT_SheetPr()
				if _efead := d.DecodeElement(_dgedfa.SheetPr, &_bdaec); _efead != nil {
					return _efead
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_dgedfa.Dimension = NewCT_SheetDimension()
				if _fbcgcdf := d.DecodeElement(_dgedfa.Dimension, &_bdaec); _fbcgcdf != nil {
					return _fbcgcdf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_dgedfa.SheetViews = NewCT_SheetViews()
				if _eadbd := d.DecodeElement(_dgedfa.SheetViews, &_bdaec); _eadbd != nil {
					return _eadbd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_dgedfa.SheetFormatPr = NewCT_SheetFormatPr()
				if _eaced := d.DecodeElement(_dgedfa.SheetFormatPr, &_bdaec); _eaced != nil {
					return _eaced
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_aagae := NewCT_Cols()
				if _dcceg := d.DecodeElement(_aagae, &_bdaec); _dcceg != nil {
					return _dcceg
				}
				_dgedfa.Cols = append(_dgedfa.Cols, _aagae)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _acgdc := d.DecodeElement(_dgedfa.SheetData, &_bdaec); _acgdc != nil {
					return _acgdc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}:
				_dgedfa.SheetCalcPr = NewCT_SheetCalcPr()
				if _gbfdf := d.DecodeElement(_dgedfa.SheetCalcPr, &_bdaec); _gbfdf != nil {
					return _gbfdf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_dgedfa.SheetProtection = NewCT_SheetProtection()
				if _ffdef := d.DecodeElement(_dgedfa.SheetProtection, &_bdaec); _ffdef != nil {
					return _ffdef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}:
				_dgedfa.ProtectedRanges = NewCT_ProtectedRanges()
				if _egcdea := d.DecodeElement(_dgedfa.ProtectedRanges, &_bdaec); _egcdea != nil {
					return _egcdea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}:
				_dgedfa.Scenarios = NewCT_Scenarios()
				if _fbgcgf := d.DecodeElement(_dgedfa.Scenarios, &_bdaec); _fbgcgf != nil {
					return _fbgcgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_dgedfa.AutoFilter = NewCT_AutoFilter()
				if _afbebe := d.DecodeElement(_dgedfa.AutoFilter, &_bdaec); _afbebe != nil {
					return _afbebe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_dgedfa.SortState = NewCT_SortState()
				if _beadgc := d.DecodeElement(_dgedfa.SortState, &_bdaec); _beadgc != nil {
					return _beadgc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_dgedfa.DataConsolidate = NewCT_DataConsolidate()
				if _ecedc := d.DecodeElement(_dgedfa.DataConsolidate, &_bdaec); _ecedc != nil {
					return _ecedc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_dgedfa.CustomSheetViews = NewCT_CustomSheetViews()
				if _gadaf := d.DecodeElement(_dgedfa.CustomSheetViews, &_bdaec); _gadaf != nil {
					return _gadaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}:
				_dgedfa.MergeCells = NewCT_MergeCells()
				if _cacfg := d.DecodeElement(_dgedfa.MergeCells, &_bdaec); _cacfg != nil {
					return _cacfg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_dgedfa.PhoneticPr = NewCT_PhoneticPr()
				if _fegecf := d.DecodeElement(_dgedfa.PhoneticPr, &_bdaec); _fegecf != nil {
					return _fegecf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_abbbdf := NewCT_ConditionalFormatting()
				if _gbfgg := d.DecodeElement(_abbbdf, &_bdaec); _gbfgg != nil {
					return _gbfgg
				}
				_dgedfa.ConditionalFormatting = append(_dgedfa.ConditionalFormatting, _abbbdf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}:
				_dgedfa.DataValidations = NewCT_DataValidations()
				if _cbdeedf := d.DecodeElement(_dgedfa.DataValidations, &_bdaec); _cbdeedf != nil {
					return _cbdeedf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}:
				_dgedfa.Hyperlinks = NewCT_Hyperlinks()
				if _eebaffa := d.DecodeElement(_dgedfa.Hyperlinks, &_bdaec); _eebaffa != nil {
					return _eebaffa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_dgedfa.PrintOptions = NewCT_PrintOptions()
				if _cgece := d.DecodeElement(_dgedfa.PrintOptions, &_bdaec); _cgece != nil {
					return _cgece
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_dgedfa.PageMargins = NewCT_PageMargins()
				if _dacag := d.DecodeElement(_dgedfa.PageMargins, &_bdaec); _dacag != nil {
					return _dacag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_dgedfa.PageSetup = NewCT_PageSetup()
				if _geegeg := d.DecodeElement(_dgedfa.PageSetup, &_bdaec); _geegeg != nil {
					return _geegeg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_dgedfa.HeaderFooter = NewCT_HeaderFooter()
				if _dafbb := d.DecodeElement(_dgedfa.HeaderFooter, &_bdaec); _dafbb != nil {
					return _dafbb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_dgedfa.RowBreaks = NewCT_PageBreak()
				if _fffedg := d.DecodeElement(_dgedfa.RowBreaks, &_bdaec); _fffedg != nil {
					return _fffedg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_dgedfa.ColBreaks = NewCT_PageBreak()
				if _gccdd := d.DecodeElement(_dgedfa.ColBreaks, &_bdaec); _gccdd != nil {
					return _gccdd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_dgedfa.CustomProperties = NewCT_CustomProperties()
				if _gceadg := d.DecodeElement(_dgedfa.CustomProperties, &_bdaec); _gceadg != nil {
					return _gceadg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}:
				_dgedfa.CellWatches = NewCT_CellWatches()
				if _agbcgc := d.DecodeElement(_dgedfa.CellWatches, &_bdaec); _agbcgc != nil {
					return _agbcgc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}:
				_dgedfa.IgnoredErrors = NewCT_IgnoredErrors()
				if _aggbag := d.DecodeElement(_dgedfa.IgnoredErrors, &_bdaec); _aggbag != nil {
					return _aggbag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_dgedfa.SmartTags = NewCT_SmartTags()
				if _bfcdb := d.DecodeElement(_dgedfa.SmartTags, &_bdaec); _bfcdb != nil {
					return _bfcdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_dgedfa.Drawing = NewCT_Drawing()
				if _fdbeef := d.DecodeElement(_dgedfa.Drawing, &_bdaec); _fdbeef != nil {
					return _fdbeef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_dgedfa.LegacyDrawing = NewCT_LegacyDrawing()
				if _dbaef := d.DecodeElement(_dgedfa.LegacyDrawing, &_bdaec); _dbaef != nil {
					return _dbaef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_dgedfa.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _babga := d.DecodeElement(_dgedfa.LegacyDrawingHF, &_bdaec); _babga != nil {
					return _babga
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_dgedfa.DrawingHF = NewCT_DrawingHF()
				if _addgg := d.DecodeElement(_dgedfa.DrawingHF, &_bdaec); _addgg != nil {
					return _addgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_dgedfa.Picture = NewCT_SheetBackgroundPicture()
				if _fcaaf := d.DecodeElement(_dgedfa.Picture, &_bdaec); _fcaaf != nil {
					return _fcaaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_dgedfa.OleObjects = NewCT_OleObjects()
				if _cffdge := d.DecodeElement(_dgedfa.OleObjects, &_bdaec); _cffdge != nil {
					return _cffdge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_dgedfa.Controls = NewCT_Controls()
				if _aeeabe := d.DecodeElement(_dgedfa.Controls, &_bdaec); _aeeabe != nil {
					return _aeeabe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_dgedfa.WebPublishItems = NewCT_WebPublishItems()
				if _fgdaeb := d.DecodeElement(_dgedfa.WebPublishItems, &_bdaec); _fgdaeb != nil {
					return _fgdaeb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}:
				_dgedfa.TableParts = NewCT_TableParts()
				if _egcdba := d.DecodeElement(_dgedfa.TableParts, &_bdaec); _egcdba != nil {
					return _egcdba
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgedfa.ExtLst = NewCT_ExtensionList()
				if _adbcb := d.DecodeElement(_dgedfa.ExtLst, &_bdaec); _adbcb != nil {
					return _adbcb
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_W\u006f\u0072k\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _bdaec.Name)
				if _fedegb := d.Skip(); _fedegb != nil {
					return _fedegb
				}
			}
		case _a.EndElement:
			break _ceadd
		case _a.CharData:
		}
	}
	return nil
}
func (_dgaacd ST_GroupBy) Validate() error { return _dgaacd.ValidateWithPath("") }

// Validate validates the CT_Stylesheet and its children
func (_cfbbff *CT_Stylesheet) Validate() error {
	return _cfbbff.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074")
}

// Validate validates the CT_MdxMetadata and its children
func (_fbdcdf *CT_MdxMetadata) Validate() error {
	return _fbdcdf.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061")
}

type CT_OutlinePr struct {

	// Apply Styles in Outline
	ApplyStylesAttr *bool

	// Summary Below
	SummaryBelowAttr *bool

	// Summary Right
	SummaryRightAttr *bool

	// Show Outline Symbols
	ShowOutlineSymbolsAttr *bool
}
type CT_DataBinding struct {

	// Unique Identifer
	DataBindingNameAttr *string

	// Binding to External File
	FileBindingAttr *bool

	// Reference to Connection ID
	ConnectionIDAttr *uint32

	// File Binding Name
	FileBindingNameAttr *string

	// XML Data Loading Behavior
	DataBindingLoadModeAttr uint32
	Any                     _fca.Any
}

// Validate validates the CalcChain and its children
func (_ggfg *CalcChain) Validate() error {
	return _ggfg.ValidateWithPath("\u0043a\u006c\u0063\u0043\u0068\u0061\u0069n")
}

// ValidateWithPath validates the CT_Reviewed and its children, prefixing error messages with path
func (_ecbcg *CT_Reviewed) ValidateWithPath(path string) error { return nil }

type CT_AutoSortScope struct {

	// Auto Sort Scope
	PivotArea *CT_PivotArea
}

func (_aeefgd ST_CellSpans) String() string { return _e.Join(_aeefgd, "\u0020") }
func (_cagca *CT_ExternalCell) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbaad := range start.Attr {
		if _fbaad.Name.Local == "\u0072" {
			_fafga, _ebgc := _fbaad.Value, error(nil)
			if _ebgc != nil {
				return _ebgc
			}
			_cagca.RAttr = &_fafga
			continue
		}
		if _fbaad.Name.Local == "\u0074" {
			_cagca.TAttr.UnmarshalXMLAttr(_fbaad)
			continue
		}
		if _fbaad.Name.Local == "\u0076\u006d" {
			_aeae, _gfee := _f.ParseUint(_fbaad.Value, 10, 32)
			if _gfee != nil {
				return _gfee
			}
			_adce := uint32(_aeae)
			_cagca.VmAttr = &_adce
			continue
		}
	}
_ecfg:
	for {
		_deggbf, _feeg := d.Token()
		if _feeg != nil {
			return _feeg
		}
		switch _edacc := _deggbf.(type) {
		case _a.StartElement:
			switch _edacc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				_cagca.V = new(string)
				if _fecb := d.DecodeElement(_cagca.V, &_edacc); _fecb != nil {
					return _fecb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _edacc.Name)
				if _fdbgb := d.Skip(); _fdbgb != nil {
					return _fdbgb
				}
			}
		case _a.EndElement:
			break _ecfg
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OleObject and its children
func (_ggdgd *CT_OleObject) Validate() error {
	return _ggdgd.ValidateWithPath("\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074")
}
func NewCT_I() *CT_I { _ceba := &CT_I{}; return _ceba }

const (
	ST_SortByUnset     ST_SortBy = 0
	ST_SortByValue     ST_SortBy = 1
	ST_SortByCellColor ST_SortBy = 2
	ST_SortByFontColor ST_SortBy = 3
	ST_SortByIcon      ST_SortBy = 4
)

// Validate validates the CT_OutlinePr and its children
func (_facgf *CT_OutlinePr) Validate() error {
	return _facgf.ValidateWithPath("\u0043\u0054\u005fO\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072")
}
func NewCT_Query() *CT_Query { _deaf := &CT_Query{}; return _deaf }

// ValidateWithPath validates the Table and its children, prefixing error messages with path
func (_ebggde *Table) ValidateWithPath(path string) error {
	if _effga := _ebggde.CT_Table.ValidateWithPath(path); _effga != nil {
		return _effga
	}
	return nil
}

// ValidateWithPath validates the ExternalLink and its children, prefixing error messages with path
func (_gbade *ExternalLink) ValidateWithPath(path string) error {
	if _ecced := _gbade.CT_ExternalLink.ValidateWithPath(path); _ecced != nil {
		return _ecced
	}
	return nil
}
func ParseStdlibTime(s string) (_cd.Time, error) { return _cd.Time{}, nil }
func (_fcabe *CT_SmartTagPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _caaeg := range start.Attr {
		if _caaeg.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_ecgec, _ggabd := _f.ParseBool(_caaeg.Value)
			if _ggabd != nil {
				return _ggabd
			}
			_fcabe.EmbedAttr = &_ecgec
			continue
		}
		if _caaeg.Name.Local == "\u0073\u0068\u006f\u0077" {
			_fcabe.ShowAttr.UnmarshalXMLAttr(_caaeg)
			continue
		}
	}
	for {
		_edgbd, _dgcgd := d.Token()
		if _dgcgd != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0053m\u0061r\u0074T\u0061\u0067\u0050\u0072\u003a\u0020\u0025s", _dgcgd)
		}
		if _defec, _cgbgf := _edgbd.(_a.EndElement); _cgbgf && _defec.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Cols struct {

	// Column Width & Formatting
	Col []*CT_Col
}

// ValidateWithPath validates the CT_MergeCells and its children, prefixing error messages with path
func (_gcbc *CT_MergeCells) ValidateWithPath(path string) error {
	for _cfbd, _dabfg := range _gcbc.MergeCell {
		if _gfdfca := _dabfg.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u004d\u0065\u0072g\u0065\u0043\u0065\u006c\u006c\u005b\u0025\u0064\u005d", path, _cfbd)); _gfdfca != nil {
			return _gfdfca
		}
	}
	return nil
}

// Validate validates the PivotCacheDefinition and its children
func (_fegce *PivotCacheDefinition) Validate() error {
	return _fegce.ValidateWithPath("P\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e")
}

type PivotTableDefinition struct{ CT_pivotTableDefinition }

func (_gdgge *CT_RangePr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gdgge.AutoStartAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061u\u0074\u006f\u0053\u0074\u0061\u0072t"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gdgge.AutoStartAttr))})
	}
	if _gdgge.AutoEndAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061u\u0074\u006f\u0045\u006e\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gdgge.AutoEndAttr))})
	}
	if _gdgge.GroupByAttr != ST_GroupByUnset {
		_bbgea, _ecddd := _gdgge.GroupByAttr.MarshalXMLAttr(_a.Name{Local: "\u0067r\u006f\u0075\u0070\u0042\u0079"})
		if _ecddd != nil {
			return _ecddd
		}
		start.Attr = append(start.Attr, _bbgea)
	}
	if _gdgge.StartNumAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0061\u0072\u0074\u004e\u0075\u006d"}, Value: _fc.Sprintf("\u0025\u0076", *_gdgge.StartNumAttr)})
	}
	if _gdgge.EndNumAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006e\u0064\u004e\u0075\u006d"}, Value: _fc.Sprintf("\u0025\u0076", *_gdgge.EndNumAttr)})
	}
	if _gdgge.StartDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073t\u0061\u0072\u0074\u0044\u0061\u0074e"}, Value: _fc.Sprintf("\u0025\u0076", *_gdgge.StartDateAttr)})
	}
	if _gdgge.EndDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065n\u0064\u0044\u0061\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_gdgge.EndDateAttr)})
	}
	if _gdgge.GroupIntervalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_gdgge.GroupIntervalAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_ItemType byte

func (_bacgg *CT_TableStyles) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gccdfd := range start.Attr {
		if _gccdfd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cabfa, _gcfad := _f.ParseUint(_gccdfd.Value, 10, 32)
			if _gcfad != nil {
				return _gcfad
			}
			_cbgab := uint32(_cabfa)
			_bacgg.CountAttr = &_cbgab
			continue
		}
		if _gccdfd.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065" {
			_fcbcbe, _gadcd := _gccdfd.Value, error(nil)
			if _gadcd != nil {
				return _gadcd
			}
			_bacgg.DefaultTableStyleAttr = &_fcbcbe
			continue
		}
		if _gccdfd.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0050\u0069\u0076\u006f\u0074S\u0074\u0079\u006c\u0065" {
			_dfde, _afebcc := _gccdfd.Value, error(nil)
			if _afebcc != nil {
				return _afebcc
			}
			_bacgg.DefaultPivotStyleAttr = &_dfde
			continue
		}
	}
_gaaab:
	for {
		_afcge, _becdf := d.Token()
		if _becdf != nil {
			return _becdf
		}
		switch _gdbad := _afcge.(type) {
		case _a.StartElement:
			switch _gdbad.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_fddbc := NewCT_TableStyle()
				if _edeeg := d.DecodeElement(_fddbc, &_gdbad); _edeeg != nil {
					return _edeeg
				}
				_bacgg.TableStyle = append(_bacgg.TableStyle, _fddbc)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074y\u006ce\u0073\u0020\u0025\u0076", _gdbad.Name)
				if _cefbc := d.Skip(); _cefbc != nil {
					return _cefbc
				}
			}
		case _a.EndElement:
			break _gaaab
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Query and its children
func (_beegg *CT_Query) Validate() error {
	return _beegg.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079")
}
func NewCT_Cell() *CT_Cell { _dfba := &CT_Cell{}; return _dfba }
func (_gcfa *CT_Pane) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fcefba := range start.Attr {
		if _fcefba.Name.Local == "\u0078\u0053\u0070\u006c\u0069\u0074" {
			_dddcb, _aacfa := _f.ParseFloat(_fcefba.Value, 64)
			if _aacfa != nil {
				return _aacfa
			}
			_gcfa.XSplitAttr = &_dddcb
			continue
		}
		if _fcefba.Name.Local == "\u0079\u0053\u0070\u006c\u0069\u0074" {
			_gegdeb, _cbbee := _f.ParseFloat(_fcefba.Value, 64)
			if _cbbee != nil {
				return _cbbee
			}
			_gcfa.YSplitAttr = &_gegdeb
			continue
		}
		if _fcefba.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_gfgcb, _dddaf := _fcefba.Value, error(nil)
			if _dddaf != nil {
				return _dddaf
			}
			_gcfa.TopLeftCellAttr = &_gfgcb
			continue
		}
		if _fcefba.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0050\u0061\u006e\u0065" {
			_gcfa.ActivePaneAttr.UnmarshalXMLAttr(_fcefba)
			continue
		}
		if _fcefba.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_gcfa.StateAttr.UnmarshalXMLAttr(_fcefba)
			continue
		}
	}
	for {
		_dcfd, _bagfe := d.Token()
		if _bagfe != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u0061\u006e\u0065\u003a\u0020\u0025\u0073", _bagfe)
		}
		if _dabgd, _feffef := _dcfd.(_a.EndElement); _feffef && _dabgd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_PageField struct {

	// Field
	FldAttr int32

	// Item Index
	ItemAttr *uint32

	// OLAP Hierarchy Index
	HierAttr *int32

	// Hierarchy Unique Name
	NameAttr *string

	// Hierarchy Display Name
	CapAttr *string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_ChartsheetViews and its children, prefixing error messages with path
func (_bfac *CT_ChartsheetViews) ValidateWithPath(path string) error {
	for _deaab, _fbaf := range _bfac.SheetView {
		if _fcgd := _fbaf.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _deaab)); _fcgd != nil {
			return _fcgd
		}
	}
	if _bfac.ExtLst != nil {
		if _gabbd := _bfac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gabbd != nil {
			return _gabbd
		}
	}
	return nil
}
func (_dfabce *CT_Colors) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_aecg:
	for {
		_dagd, _acaf := d.Token()
		if _acaf != nil {
			return _acaf
		}
		switch _gfgb := _dagd.(type) {
		case _a.StartElement:
			switch _gfgb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}:
				_dfabce.IndexedColors = NewCT_IndexedColors()
				if _caga := d.DecodeElement(_dfabce.IndexedColors, &_gfgb); _caga != nil {
					return _caga
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006dr\u0075\u0043\u006f\u006c\u006f\u0072s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006dr\u0075\u0043\u006f\u006c\u006f\u0072s"}:
				_dfabce.MruColors = NewCT_MRUColors()
				if _ecgg := d.DecodeElement(_dfabce.MruColors, &_gfgb); _ecgg != nil {
					return _ecgg
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u006f\u006co\u0072\u0073 \u0025\u0076", _gfgb.Name)
				if _egea := d.Skip(); _egea != nil {
					return _egea
				}
			}
		case _a.EndElement:
			break _aecg
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_QueryTableField() *CT_QueryTableField { _adceab := &CT_QueryTableField{}; return _adceab }

const (
	ST_ItemTypeUnset   ST_ItemType = 0
	ST_ItemTypeData    ST_ItemType = 1
	ST_ItemTypeDefault ST_ItemType = 2
	ST_ItemTypeSum     ST_ItemType = 3
	ST_ItemTypeCountA  ST_ItemType = 4
	ST_ItemTypeAvg     ST_ItemType = 5
	ST_ItemTypeMax     ST_ItemType = 6
	ST_ItemTypeMin     ST_ItemType = 7
	ST_ItemTypeProduct ST_ItemType = 8
	ST_ItemTypeCount   ST_ItemType = 9
	ST_ItemTypeStdDev  ST_ItemType = 10
	ST_ItemTypeStdDevP ST_ItemType = 11
	ST_ItemTypeVar     ST_ItemType = 12
	ST_ItemTypeVarP    ST_ItemType = 13
	ST_ItemTypeGrand   ST_ItemType = 14
	ST_ItemTypeBlank   ST_ItemType = 15
)

type ST_DvAspect byte

// Validate validates the CT_SortState and its children
func (_eccege *CT_SortState) Validate() error {
	return _eccege.ValidateWithPath("\u0043\u0054\u005fS\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065")
}
func (_aadfb *CT_PCDSDTCEntries) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bafcb := range start.Attr {
		if _bafcb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fgccde, _fdcaaf := _f.ParseUint(_bafcb.Value, 10, 32)
			if _fdcaaf != nil {
				return _fdcaaf
			}
			_ccga := uint32(_fgccde)
			_aadfb.CountAttr = &_ccga
			continue
		}
	}
_agcce:
	for {
		_dbbbe, _dggc := d.Token()
		if _dggc != nil {
			return _dggc
		}
		switch _bfcdf := _dbbbe.(type) {
		case _a.StartElement:
			switch _bfcdf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_agcaed := NewCT_Missing()
				if _ebaccf := d.DecodeElement(_agcaed, &_bfcdf); _ebaccf != nil {
					return _ebaccf
				}
				_aadfb.M = append(_aadfb.M, _agcaed)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_cdcef := NewCT_Number()
				if _efddb := d.DecodeElement(_cdcef, &_bfcdf); _efddb != nil {
					return _efddb
				}
				_aadfb.N = append(_aadfb.N, _cdcef)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_adcee := NewCT_Error()
				if _dafa := d.DecodeElement(_adcee, &_bfcdf); _dafa != nil {
					return _dafa
				}
				_aadfb.E = append(_aadfb.E, _adcee)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_adaaa := NewCT_String()
				if _daecf := d.DecodeElement(_adaaa, &_bfcdf); _daecf != nil {
					return _daecf
				}
				_aadfb.S = append(_aadfb.S, _adaaa)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006e\u0074\u0072\u0069\u0065\u0073\u0020\u0025\u0076", _bfcdf.Name)
				if _baade := d.Skip(); _baade != nil {
					return _baade
				}
			}
		case _a.EndElement:
			break _agcce
		case _a.CharData:
		}
	}
	return nil
}
func (_effgfb ST_DataValidationType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_effgfb.String(), start)
}
func NewCT_Pages() *CT_Pages { _cgcddg := &CT_Pages{}; return _cgcddg }
func (_afffee ST_DateTimeGrouping) String() string {
	switch _afffee {
	case 0:
		return ""
	case 1:
		return "\u0079\u0065\u0061\u0072"
	case 2:
		return "\u006d\u006f\u006et\u0068"
	case 3:
		return "\u0064\u0061\u0079"
	case 4:
		return "\u0068\u006f\u0075\u0072"
	case 5:
		return "\u006d\u0069\u006e\u0075\u0074\u0065"
	case 6:
		return "\u0073\u0065\u0063\u006f\u006e\u0064"
	}
	return ""
}
func (_dfaff *CT_IconSet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dfaff.IconSetAttr != ST_IconSetTypeUnset {
		_ebcfd, _fdeebb := _dfaff.IconSetAttr.MarshalXMLAttr(_a.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
		if _fdeebb != nil {
			return _fdeebb
		}
		start.Attr = append(start.Attr, _ebcfd)
	}
	if _dfaff.ShowValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfaff.ShowValueAttr))})
	}
	if _dfaff.PercentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfaff.PercentAttr))})
	}
	if _dfaff.ReverseAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072e\u0076\u0065\u0072\u0073\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfaff.ReverseAttr))})
	}
	e.EncodeToken(start)
	_gfgef := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _eeag := range _dfaff.Cfvo {
		e.EncodeElement(_eeag, _gfgef)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_PivotFilters() *CT_PivotFilters { _ecbedb := &CT_PivotFilters{}; return _ecbedb }

// ValidateWithPath validates the CT_WebPublishObjects and its children, prefixing error messages with path
func (_cdfgfc *CT_WebPublishObjects) ValidateWithPath(path string) error {
	for _abaea, _afdcd := range _cdfgfc.WebPublishObject {
		if _afdgf := _afdcd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002fWe\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u005b\u0025\u0064\u005d", path, _abaea)); _afdgf != nil {
			return _afdgf
		}
	}
	return nil
}
func NewCT_Map() *CT_Map { _cbcd := &CT_Map{}; return _cbcd }
func (_dccga *CT_HierarchyUsage) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _dccga.HierarchyUsageAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gagac *CT_GroupLevel) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cgdc := range start.Attr {
		if _cgdc.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_bgbde, _gebda := _cgdc.Value, error(nil)
			if _gebda != nil {
				return _gebda
			}
			_gagac.UniqueNameAttr = _bgbde
			continue
		}
		if _cgdc.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_cegbb, _abeda := _cgdc.Value, error(nil)
			if _abeda != nil {
				return _abeda
			}
			_gagac.CaptionAttr = _cegbb
			continue
		}
		if _cgdc.Name.Local == "\u0075\u0073\u0065\u0072" {
			_gccdf, _dbgdb := _f.ParseBool(_cgdc.Value)
			if _dbgdb != nil {
				return _dbgdb
			}
			_gagac.UserAttr = &_gccdf
			continue
		}
		if _cgdc.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0052\u006f\u006c\u006c\u0055\u0070" {
			_ccdg, _edead := _f.ParseBool(_cgdc.Value)
			if _edead != nil {
				return _edead
			}
			_gagac.CustomRollUpAttr = &_ccdg
			continue
		}
	}
_agbaf:
	for {
		_dfbbc, _abaff := d.Token()
		if _abaff != nil {
			return _abaff
		}
		switch _abfb := _dfbbc.(type) {
		case _a.StartElement:
			switch _abfb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0073"}:
				_gagac.Groups = NewCT_Groups()
				if _bfedd := d.DecodeElement(_gagac.Groups, &_abfb); _bfedd != nil {
					return _bfedd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gagac.ExtLst = NewCT_ExtensionList()
				if _bgfeb := d.DecodeElement(_gagac.ExtLst, &_abfb); _bgfeb != nil {
					return _bgfeb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c \u0025\u0076", _abfb.Name)
				if _egdgf := d.Skip(); _egdgf != nil {
					return _egdgf
				}
			}
		case _a.EndElement:
			break _agbaf
		case _a.CharData:
		}
	}
	return nil
}
func (_dfded ST_ParameterType) Validate() error { return _dfded.ValidateWithPath("") }
func (_dcefaa ST_MdxSetOrder) String() string {
	switch _dcefaa {
	case 0:
		return ""
	case 1:
		return "\u0075"
	case 2:
		return "\u0061"
	case 3:
		return "\u0064"
	case 4:
		return "\u0061\u0061"
	case 5:
		return "\u0061\u0064"
	case 6:
		return "\u006e\u0061"
	case 7:
		return "\u006e\u0064"
	}
	return ""
}

type ST_CalcMode byte

func NewCT_CellWatches() *CT_CellWatches { _gbeg := &CT_CellWatches{}; return _gbeg }

// Validate validates the CT_TupleCache and its children
func (_bgacc *CT_TupleCache) Validate() error {
	return _bgacc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065")
}

// Validate validates the CT_ConditionalFormats and its children
func (_eggfa *CT_ConditionalFormats) Validate() error {
	return _eggfa.ValidateWithPath("C\u0054\u005f\u0043\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073")
}

type ST_VerticalAlignment byte

func (_cdbcb ST_UnderlineValues) Validate() error { return _cdbcb.ValidateWithPath("") }

// ValidateWithPath validates the CT_ExternalSheetName and its children, prefixing error messages with path
func (_gcgdd *CT_ExternalSheetName) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Font and its children
func (_fcega *CT_Font) Validate() error {
	return _fcega.ValidateWithPath("\u0043T\u005f\u0046\u006f\u006e\u0074")
}

// Validate validates the CT_HierarchyUsage and its children
func (_bfgdb *CT_HierarchyUsage) Validate() error {
	return _bfgdb.ValidateWithPath("\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065")
}
func (_gabab ST_VolValueType) String() string {
	switch _gabab {
	case 0:
		return ""
	case 1:
		return "\u0062"
	case 2:
		return "\u006e"
	case 3:
		return "\u0065"
	case 4:
		return "\u0073"
	}
	return ""
}

// Validate validates the CT_GroupLevel and its children
func (_edae *CT_GroupLevel) Validate() error {
	return _edae.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c")
}

type CT_NumFmt struct {

	// Number Format Id
	NumFmtIdAttr uint32

	// Number Format Code
	FormatCodeAttr string
}

// ValidateWithPath validates the CT_Map and its children, prefixing error messages with path
func (_cffab *CT_Map) ValidateWithPath(path string) error {
	if _cffab.DataBinding != nil {
		if _cdeeb := _cffab.DataBinding.ValidateWithPath(path + "\u002f\u0044\u0061t\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"); _cdeeb != nil {
			return _cdeeb
		}
	}
	return nil
}
func NewCT_MetadataBlock() *CT_MetadataBlock { _afgde := &CT_MetadataBlock{}; return _afgde }
func (_aabdbe ST_SmartTagShow) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_aabdbe.String(), start)
}

const (
	ST_TableTypeUnset      ST_TableType = 0
	ST_TableTypeWorksheet  ST_TableType = 1
	ST_TableTypeXml        ST_TableType = 2
	ST_TableTypeQueryTable ST_TableType = 3
)

func (_abaf *CT_CalculatedMembers) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gee := range start.Attr {
		if _gee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aadg, _bafd := _f.ParseUint(_gee.Value, 10, 32)
			if _bafd != nil {
				return _bafd
			}
			_dcga := uint32(_aadg)
			_abaf.CountAttr = &_dcga
			continue
		}
	}
_aaag:
	for {
		_fcc, _dgabe := d.Token()
		if _dgabe != nil {
			return _dgabe
		}
		switch _agab := _fcc.(type) {
		case _a.StartElement:
			switch _agab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}:
				_bffe := NewCT_CalculatedMember()
				if _adde := d.DecodeElement(_bffe, &_agab); _adde != nil {
					return _adde
				}
				_abaf.CalculatedMember = append(_abaf.CalculatedMember, _bffe)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _agab.Name)
				if _facbb := d.Skip(); _facbb != nil {
					return _facbb
				}
			}
		case _a.EndElement:
			break _aaag
		case _a.CharData:
		}
	}
	return nil
}
func (_fgeagb *SingleXmlCells) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073"
	return _fgeagb.CT_SingleXmlCells.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_NumFmt and its children, prefixing error messages with path
func (_cddde *CT_NumFmt) ValidateWithPath(path string) error { return nil }
func (_gfbg *CT_DataConsolidate) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gfbg.FunctionAttr != ST_DataConsolidateFunctionUnset {
		_dgbfb, _cbcbe := _gfbg.FunctionAttr.MarshalXMLAttr(_a.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"})
		if _cbcbe != nil {
			return _cbcbe
		}
		start.Attr = append(start.Attr, _dgbfb)
	}
	if _gfbg.StartLabelsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0074\u0061\u0072\u0074\u004c\u0061\u0062\u0065\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gfbg.StartLabelsAttr))})
	}
	if _gfbg.LeftLabelsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u0066\u0074\u004c\u0061\u0062\u0065\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gfbg.LeftLabelsAttr))})
	}
	if _gfbg.TopLabelsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074o\u0070\u004c\u0061\u0062\u0065\u006cs"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gfbg.TopLabelsAttr))})
	}
	if _gfbg.LinkAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0069\u006e\u006b"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gfbg.LinkAttr))})
	}
	e.EncodeToken(start)
	if _gfbg.DataRefs != nil {
		_eadafa := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}}
		e.EncodeElement(_gfbg.DataRefs, _eadafa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cfaae *CT_FileVersion) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fefgd := range start.Attr {
		if _fefgd.Name.Local == "\u0061p\u0070\u004e\u0061\u006d\u0065" {
			_cdbbb, _dceac := _fefgd.Value, error(nil)
			if _dceac != nil {
				return _dceac
			}
			_cfaae.AppNameAttr = &_cdbbb
			continue
		}
		if _fefgd.Name.Local == "\u006c\u0061\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064" {
			_fddde, _gaef := _fefgd.Value, error(nil)
			if _gaef != nil {
				return _gaef
			}
			_cfaae.LastEditedAttr = &_fddde
			continue
		}
		if _fefgd.Name.Local == "\u006c\u006f\u0077e\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064" {
			_dccee, _edbg := _fefgd.Value, error(nil)
			if _edbg != nil {
				return _edbg
			}
			_cfaae.LowestEditedAttr = &_dccee
			continue
		}
		if _fefgd.Name.Local == "\u0072\u0075\u0070\u0042\u0075\u0069\u006c\u0064" {
			_gdcaa, _aeade := _fefgd.Value, error(nil)
			if _aeade != nil {
				return _aeade
			}
			_cfaae.RupBuildAttr = &_gdcaa
			continue
		}
		if _fefgd.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_aecfd, _dafda := _fefgd.Value, error(nil)
			if _dafda != nil {
				return _dafda
			}
			_cfaae.CodeNameAttr = &_aecfd
			continue
		}
	}
	for {
		_aeaef, _dgdg := d.Token()
		if _dgdg != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e:\u0020\u0025\u0073", _dgdg)
		}
		if _ffdd, _fdee := _aeaef.(_a.EndElement); _fdee && _ffdd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Col and its children, prefixing error messages with path
func (_aagg *CT_Col) ValidateWithPath(path string) error { return nil }

type CT_Parameter struct {

	// Parameter Name
	NameAttr *string

	// SQL Data Type
	SqlTypeAttr *int32

	// Parameter Type
	ParameterTypeAttr ST_ParameterType

	// Refresh on Change
	RefreshOnChangeAttr *bool

	// Parameter Prompt String
	PromptAttr *string

	// Boolean
	BooleanAttr *bool

	// Double
	DoubleAttr *float64

	// Integer
	IntegerAttr *int32

	// String
	StringAttr *string

	// Cell Reference
	CellAttr *string
}

func NewCT_RangeSets() *CT_RangeSets { _gdaecc := &CT_RangeSets{}; return _gdaecc }

// ValidateWithPath validates the CT_CommentList and its children, prefixing error messages with path
func (_dadb *CT_CommentList) ValidateWithPath(path string) error {
	for _fcfa, _cffa := range _dadb.Comment {
		if _gfdf := _cffa.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006d\u006d\u0065\u006et\u005b\u0025\u0064\u005d", path, _fcfa)); _gfdf != nil {
			return _gfdf
		}
	}
	return nil
}

// Validate validates the CT_FontSize and its children
func (_bcfae *CT_FontSize) Validate() error {
	return _bcfae.ValidateWithPath("C\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065")
}
func (_ggfacc ST_UpdateLinks) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ggfacc.String(), start)
}

// ValidateWithPath validates the CT_Worksheet and its children, prefixing error messages with path
func (_ffdcc *CT_Worksheet) ValidateWithPath(path string) error {
	if _ffdcc.SheetPr != nil {
		if _efced := _ffdcc.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _efced != nil {
			return _efced
		}
	}
	if _ffdcc.Dimension != nil {
		if _bdcdb := _ffdcc.Dimension.ValidateWithPath(path + "\u002f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"); _bdcdb != nil {
			return _bdcdb
		}
	}
	if _ffdcc.SheetViews != nil {
		if _cfbbg := _ffdcc.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _cfbbg != nil {
			return _cfbbg
		}
	}
	if _ffdcc.SheetFormatPr != nil {
		if _cebge := _ffdcc.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _cebge != nil {
			return _cebge
		}
	}
	for _efdbd, _efgccc := range _ffdcc.Cols {
		if _caeeba := _efgccc.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0043\u006f\u006c\u0073\u005b\u0025\u0064\u005d", path, _efdbd)); _caeeba != nil {
			return _caeeba
		}
	}
	if _aaabf := _ffdcc.SheetData.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"); _aaabf != nil {
		return _aaabf
	}
	if _ffdcc.SheetCalcPr != nil {
		if _cgcdf := _ffdcc.SheetCalcPr.ValidateWithPath(path + "\u002f\u0053\u0068e\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"); _cgcdf != nil {
			return _cgcdf
		}
	}
	if _ffdcc.SheetProtection != nil {
		if _bcaaef := _ffdcc.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _bcaaef != nil {
			return _bcaaef
		}
	}
	if _ffdcc.ProtectedRanges != nil {
		if _agedd := _ffdcc.ProtectedRanges.ValidateWithPath(path + "\u002f\u0050r\u006f\u0074\u0065c\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"); _agedd != nil {
			return _agedd
		}
	}
	if _ffdcc.Scenarios != nil {
		if _ecgfdc := _ffdcc.Scenarios.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073"); _ecgfdc != nil {
			return _ecgfdc
		}
	}
	if _ffdcc.AutoFilter != nil {
		if _afbge := _ffdcc.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _afbge != nil {
			return _afbge
		}
	}
	if _ffdcc.SortState != nil {
		if _fddgf := _ffdcc.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _fddgf != nil {
			return _fddgf
		}
	}
	if _ffdcc.DataConsolidate != nil {
		if _ecbeg := _ffdcc.DataConsolidate.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0043o\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"); _ecbeg != nil {
			return _ecbeg
		}
	}
	if _ffdcc.CustomSheetViews != nil {
		if _bfbdg := _ffdcc.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _bfbdg != nil {
			return _bfbdg
		}
	}
	if _ffdcc.MergeCells != nil {
		if _ebeaa := _ffdcc.MergeCells.ValidateWithPath(path + "/\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"); _ebeaa != nil {
			return _ebeaa
		}
	}
	if _ffdcc.PhoneticPr != nil {
		if _cbgbbc := _ffdcc.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _cbgbbc != nil {
			return _cbgbbc
		}
	}
	for _bcaced, _ecbfe := range _ffdcc.ConditionalFormatting {
		if _agfda := _ecbfe.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043o\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072m\u0061\u0074\u0074\u0069\u006e\u0067\u005b%\u0064\u005d", path, _bcaced)); _agfda != nil {
			return _agfda
		}
	}
	if _ffdcc.DataValidations != nil {
		if _aacbe := _ffdcc.DataValidations.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"); _aacbe != nil {
			return _aacbe
		}
	}
	if _ffdcc.Hyperlinks != nil {
		if _gbdccc := _ffdcc.Hyperlinks.ValidateWithPath(path + "/\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"); _gbdccc != nil {
			return _gbdccc
		}
	}
	if _ffdcc.PrintOptions != nil {
		if _egegda := _ffdcc.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _egegda != nil {
			return _egegda
		}
	}
	if _ffdcc.PageMargins != nil {
		if _bdgad := _ffdcc.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _bdgad != nil {
			return _bdgad
		}
	}
	if _ffdcc.PageSetup != nil {
		if _feaeg := _ffdcc.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _feaeg != nil {
			return _feaeg
		}
	}
	if _ffdcc.HeaderFooter != nil {
		if _aedeb := _ffdcc.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _aedeb != nil {
			return _aedeb
		}
	}
	if _ffdcc.RowBreaks != nil {
		if _ffabg := _ffdcc.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _ffabg != nil {
			return _ffabg
		}
	}
	if _ffdcc.ColBreaks != nil {
		if _fbgdd := _ffdcc.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _fbgdd != nil {
			return _fbgdd
		}
	}
	if _ffdcc.CustomProperties != nil {
		if _cfeba := _ffdcc.CustomProperties.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"); _cfeba != nil {
			return _cfeba
		}
	}
	if _ffdcc.CellWatches != nil {
		if _cccdb := _ffdcc.CellWatches.ValidateWithPath(path + "\u002f\u0043\u0065l\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"); _cccdb != nil {
			return _cccdb
		}
	}
	if _ffdcc.IgnoredErrors != nil {
		if _dbedd := _ffdcc.IgnoredErrors.ValidateWithPath(path + "\u002f\u0049\u0067\u006e\u006f\u0072\u0065\u0064\u0045r\u0072\u006f\u0072\u0073"); _dbedd != nil {
			return _dbedd
		}
	}
	if _ffdcc.SmartTags != nil {
		if _dbffb := _ffdcc.SmartTags.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"); _dbffb != nil {
			return _dbffb
		}
	}
	if _ffdcc.Drawing != nil {
		if _fcfac := _ffdcc.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _fcfac != nil {
			return _fcfac
		}
	}
	if _ffdcc.LegacyDrawing != nil {
		if _bfgdd := _ffdcc.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _bfgdd != nil {
			return _bfgdd
		}
	}
	if _ffdcc.LegacyDrawingHF != nil {
		if _fdgef := _ffdcc.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _fdgef != nil {
			return _fdgef
		}
	}
	if _ffdcc.DrawingHF != nil {
		if _eagfa := _ffdcc.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _eagfa != nil {
			return _eagfa
		}
	}
	if _ffdcc.Picture != nil {
		if _agaded := _ffdcc.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _agaded != nil {
			return _agaded
		}
	}
	if _ffdcc.OleObjects != nil {
		if _aaedag := _ffdcc.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _aaedag != nil {
			return _aaedag
		}
	}
	if _ffdcc.Controls != nil {
		if _ggdff := _ffdcc.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _ggdff != nil {
			return _ggdff
		}
	}
	if _ffdcc.WebPublishItems != nil {
		if _ceafgc := _ffdcc.WebPublishItems.ValidateWithPath(path + "\u002f\u0057e\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"); _ceafgc != nil {
			return _ceafgc
		}
	}
	if _ffdcc.TableParts != nil {
		if _aafeb := _ffdcc.TableParts.ValidateWithPath(path + "/\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"); _aafeb != nil {
			return _aafeb
		}
	}
	if _ffdcc.ExtLst != nil {
		if _dadfe := _ffdcc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dadfe != nil {
			return _dadfe
		}
	}
	return nil
}
func (_dca *CT_CalculatedMember) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _dca.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0064\u0078"}, Value: _fc.Sprintf("\u0025\u0076", _dca.MdxAttr)})
	if _dca.MemberNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u006d\u0062\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_dca.MemberNameAttr)})
	}
	if _dca.HierarchyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y"}, Value: _fc.Sprintf("\u0025\u0076", *_dca.HierarchyAttr)})
	}
	if _dca.ParentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0072\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_dca.ParentAttr)})
	}
	if _dca.SolveOrderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u006c\u0076\u0065\u004f\u0072\u0064\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_dca.SolveOrderAttr)})
	}
	if _dca.SetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dca.SetAttr))})
	}
	e.EncodeToken(start)
	if _dca.ExtLst != nil {
		_ebcce := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dca.ExtLst, _ebcce)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_RangePr struct {

	// Source Data Set Beginning Range
	AutoStartAttr *bool

	// Source Data Ending Range
	AutoEndAttr *bool

	// Group By
	GroupByAttr ST_GroupBy

	// Numeric Grouping Start Value
	StartNumAttr *float64

	// Numeric Grouping End Value
	EndNumAttr *float64

	// Date Grouping Start Value
	StartDateAttr *_cd.Time

	// Date Grouping End Value
	EndDateAttr *_cd.Time

	// Grouping Interval
	GroupIntervalAttr *float64
}

func (_ffdgf ST_TimePeriod) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gcgaf := _a.Attr{}
	_gcgaf.Name = name
	switch _ffdgf {
	case ST_TimePeriodUnset:
		_gcgaf.Value = ""
	case ST_TimePeriodToday:
		_gcgaf.Value = "\u0074\u006f\u0064a\u0079"
	case ST_TimePeriodYesterday:
		_gcgaf.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_TimePeriodTomorrow:
		_gcgaf.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_TimePeriodLast7Days:
		_gcgaf.Value = "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s"
	case ST_TimePeriodThisMonth:
		_gcgaf.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodLastMonth:
		_gcgaf.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodNextMonth:
		_gcgaf.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodThisWeek:
		_gcgaf.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_TimePeriodLastWeek:
		_gcgaf.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_TimePeriodNextWeek:
		_gcgaf.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	}
	return _gcgaf, nil
}
func (_dddc *CT_CellSmartTag) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _dddc.TypeAttr)})
	if _dddc.DeletedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dddc.DeletedAttr))})
	}
	if _dddc.XmlBasedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u0042\u0061\u0073\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dddc.XmlBasedAttr))})
	}
	e.EncodeToken(start)
	if _dddc.CellSmartTagPr != nil {
		_ggce := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}}
		for _, _dgga := range _dddc.CellSmartTagPr {
			e.EncodeElement(_dgga, _ggce)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ebfad *CT_CustomSheetView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _ebfad.GuidAttr)})
	if _ebfad.ScaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_ebfad.ScaleAttr)})
	}
	if _ebfad.ColorIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006c\u006f\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_ebfad.ColorIdAttr)})
	}
	if _ebfad.ShowPageBreaksAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.ShowPageBreaksAttr))})
	}
	if _ebfad.ShowFormulasAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.ShowFormulasAttr))})
	}
	if _ebfad.ShowGridLinesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.ShowGridLinesAttr))})
	}
	if _ebfad.ShowRowColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.ShowRowColAttr))})
	}
	if _ebfad.OutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0053\u0079m\u0062\u006f\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.OutlineSymbolsAttr))})
	}
	if _ebfad.ZeroValuesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007a\u0065\u0072\u006f\u0056\u0061\u006c\u0075\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.ZeroValuesAttr))})
	}
	if _ebfad.FitToPageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.FitToPageAttr))})
	}
	if _ebfad.PrintAreaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.PrintAreaAttr))})
	}
	if _ebfad.FilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.FilterAttr))})
	}
	if _ebfad.ShowAutoFilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.ShowAutoFilterAttr))})
	}
	if _ebfad.HiddenRowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.HiddenRowsAttr))})
	}
	if _ebfad.HiddenColumnsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.HiddenColumnsAttr))})
	}
	if _ebfad.StateAttr != ST_SheetStateUnset {
		_gcaea, _fgedd := _ebfad.StateAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _fgedd != nil {
			return _fgedd
		}
		start.Attr = append(start.Attr, _gcaea)
	}
	if _ebfad.FilterUniqueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006ct\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.FilterUniqueAttr))})
	}
	if _ebfad.ViewAttr != ST_SheetViewTypeUnset {
		_bedg, _ccec := _ebfad.ViewAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0069\u0065\u0077"})
		if _ccec != nil {
			return _ccec
		}
		start.Attr = append(start.Attr, _bedg)
	}
	if _ebfad.ShowRulerAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebfad.ShowRulerAttr))})
	}
	if _ebfad.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_ebfad.TopLeftCellAttr)})
	}
	e.EncodeToken(start)
	if _ebfad.Pane != nil {
		_ccfge := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0070\u0061\u006e\u0065"}}
		e.EncodeElement(_ebfad.Pane, _ccfge)
	}
	if _ebfad.Selection != nil {
		_dceba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_ebfad.Selection, _dceba)
	}
	if _ebfad.RowBreaks != nil {
		_ffgea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_ebfad.RowBreaks, _ffgea)
	}
	if _ebfad.ColBreaks != nil {
		_agba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_ebfad.ColBreaks, _agba)
	}
	if _ebfad.PageMargins != nil {
		_dddf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_ebfad.PageMargins, _dddf)
	}
	if _ebfad.PrintOptions != nil {
		_cggb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_ebfad.PrintOptions, _cggb)
	}
	if _ebfad.PageSetup != nil {
		_bdga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_ebfad.PageSetup, _bdga)
	}
	if _ebfad.HeaderFooter != nil {
		_ebada := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_ebfad.HeaderFooter, _ebada)
	}
	if _ebfad.AutoFilter != nil {
		_ffbcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_ebfad.AutoFilter, _ffbcg)
	}
	if _ebfad.ExtLst != nil {
		_dccdb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ebfad.ExtLst, _dccdb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FileSharing and its children
func (_dcdee *CT_FileSharing) Validate() error {
	return _dcdee.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067")
}

type CT_DataField struct {

	// Data Field Name
	NameAttr *string

	// Field
	FldAttr uint32

	// Subtotal
	SubtotalAttr ST_DataConsolidateFunction

	// Show Data As Display Format
	ShowDataAsAttr ST_ShowDataAs

	// 'Show Data As' Base Field
	BaseFieldAttr *int32

	// 'Show Data As' Base Setting
	BaseItemAttr *uint32

	// Number Format Id
	NumFmtIdAttr *uint32

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_bbfgb *CT_RowHierarchiesUsage) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bbfgb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bbfgb.CountAttr)})
	}
	e.EncodeToken(start)
	_gfebf := _a.StartElement{Name: _a.Name{Local: "m\u0061:\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061r\u0063\u0068\u0079\u0055sa\u0067\u0065"}}
	for _, _dddgf := range _bbfgb.RowHierarchyUsage {
		e.EncodeElement(_dddgf, _gfebf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ObjectAnchor and its children
func (_adaeg *CT_ObjectAnchor) Validate() error {
	return _adaeg.ValidateWithPath("\u0043T\u005fO\u0062\u006a\u0065\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072")
}
func (_bafa *CT_DeletedField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dcdde := range start.Attr {
		if _dcdde.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gfafc, _aceea := _dcdde.Value, error(nil)
			if _aceea != nil {
				return _aceea
			}
			_bafa.NameAttr = _gfafc
			continue
		}
	}
	for {
		_cfbg, _baac := d.Token()
		if _baac != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0044\u0065\u006c\u0065\u0074\u0065d\u0046\u0069\u0065l\u0064:\u0020\u0025\u0073", _baac)
		}
		if _dfbfd, _cggda := _cfbg.(_a.EndElement); _cggda && _dfbfd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the SingleXmlCells and its children, prefixing error messages with path
func (_bacgc *SingleXmlCells) ValidateWithPath(path string) error {
	if _dbdgfd := _bacgc.CT_SingleXmlCells.ValidateWithPath(path); _dbdgfd != nil {
		return _dbdgfd
	}
	return nil
}

// Validate validates the CT_ExternalCell and its children
func (_aaae *CT_ExternalCell) Validate() error {
	return _aaae.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c")
}
func NewCT_SheetView() *CT_SheetView { _dabgaf := &CT_SheetView{}; return _dabgaf }
func (_aecgef *CT_Query) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0064\u0078"}, Value: _fc.Sprintf("\u0025\u0076", _aecgef.MdxAttr)})
	e.EncodeToken(start)
	if _aecgef.Tpls != nil {
		_edddf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		e.EncodeElement(_aecgef.Tpls, _edddf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Format and its children
func (_dcfe *CT_Format) Validate() error {
	return _dcfe.ValidateWithPath("\u0043T\u005f\u0046\u006f\u0072\u006d\u0061t")
}
func (_adeb *CT_DataRef) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bfbf := range start.Attr {
		if _bfbf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bfbf.Name.Local == "\u0069\u0064" || _bfbf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bfbf.Name.Local == "\u0069\u0064" {
			_fffed, _ebaca := _bfbf.Value, error(nil)
			if _ebaca != nil {
				return _ebaca
			}
			_adeb.IdAttr = &_fffed
			continue
		}
		if _bfbf.Name.Local == "\u0072\u0065\u0066" {
			_fcbe, _fdage := _bfbf.Value, error(nil)
			if _fdage != nil {
				return _fdage
			}
			_adeb.RefAttr = &_fcbe
			continue
		}
		if _bfbf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gbgdf, _eeda := _bfbf.Value, error(nil)
			if _eeda != nil {
				return _eeda
			}
			_adeb.NameAttr = &_gbgdf
			continue
		}
		if _bfbf.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_fddga, _cafc := _bfbf.Value, error(nil)
			if _cafc != nil {
				return _cafc
			}
			_adeb.SheetAttr = &_fddga
			continue
		}
	}
	for {
		_fdagd, _gefac := d.Token()
		if _gefac != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u003a\u0020%\u0073", _gefac)
		}
		if _efefg, _aagfc := _fdagd.(_a.EndElement); _aagfc && _efefg.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_CfvoTypeUnset      ST_CfvoType = 0
	ST_CfvoTypeNum        ST_CfvoType = 1
	ST_CfvoTypePercent    ST_CfvoType = 2
	ST_CfvoTypeMax        ST_CfvoType = 3
	ST_CfvoTypeMin        ST_CfvoType = 4
	ST_CfvoTypeFormula    ST_CfvoType = 5
	ST_CfvoTypePercentile ST_CfvoType = 6
)

// Validate validates the CT_MergeCells and its children
func (_adagd *CT_MergeCells) Validate() error {
	return _adagd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073")
}

// Validate validates the CT_QueryTable and its children
func (_ccdcbb *CT_QueryTable) Validate() error {
	return _ccdcbb.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065")
}

type CT_Set struct {

	// Number of Tuples
	CountAttr *uint32

	// Maximum Rank Requested
	MaxRankAttr int32

	// MDX Set Definition
	SetDefinitionAttr string

	// Set Sort Order
	SortTypeAttr ST_SortType

	// Query Failed
	QueryFailedAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Sort By Tuple
	SortByTuple *CT_Tuples
}

func (_agcbf *CT_Location) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _agcbf.RefAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064e\u0072\u0052\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0076", _agcbf.FirstHeaderRowAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0052\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0076", _agcbf.FirstDataRowAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0043\u006f\u006c"}, Value: _fc.Sprintf("\u0025\u0076", _agcbf.FirstDataColAttr)})
	if _agcbf.RowPageCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006f\u0077P\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_agcbf.RowPageCountAttr)})
	}
	if _agcbf.ColPageCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006cP\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_agcbf.ColPageCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_adef *CT_CacheFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fdb := range start.Attr {
		if _fdb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_efce, _bgbd := _f.ParseUint(_fdb.Value, 10, 32)
			if _bgbd != nil {
				return _bgbd
			}
			_egb := uint32(_efce)
			_adef.CountAttr = &_egb
			continue
		}
	}
_fgbg:
	for {
		_bdbe, _dfab := d.Token()
		if _dfab != nil {
			return _dfab
		}
		switch _bag := _bdbe.(type) {
		case _a.StartElement:
			switch _bag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}:
				_fcb := NewCT_CacheField()
				if _bfga := d.DecodeElement(_fcb, &_bag); _bfga != nil {
					return _bfga
				}
				_adef.CacheField = append(_adef.CacheField, _fcb)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069e\u006cd\u0073\u0020\u0025\u0076", _bag.Name)
				if _cab := d.Skip(); _cab != nil {
					return _cab
				}
			}
		case _a.EndElement:
			break _fgbg
		case _a.CharData:
		}
	}
	return nil
}
func (_fcgbf ST_FieldSortType) Validate() error { return _fcgbf.ValidateWithPath("") }
func (_bfffac *CT_ConditionalFormatting) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edfa := range start.Attr {
		if _edfa.Name.Local == "\u0070\u0069\u0076o\u0074" {
			_ecbd, _dfca := _f.ParseBool(_edfa.Value)
			if _dfca != nil {
				return _dfca
			}
			_bfffac.PivotAttr = &_ecbd
			continue
		}
		if _edfa.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_bfgd, _ddcd := ParseSliceST_Sqref(_edfa.Value)
			if _ddcd != nil {
				return _ddcd
			}
			_bfffac.SqrefAttr = &_bfgd
			continue
		}
	}
_eafa:
	for {
		_aded, _ggge := d.Token()
		if _ggge != nil {
			return _ggge
		}
		switch _gcae := _aded.(type) {
		case _a.StartElement:
			switch _gcae.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0052\u0075\u006c\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0052\u0075\u006c\u0065"}:
				_egba := NewCT_CfRule()
				if _bfgb := d.DecodeElement(_egba, &_gcae); _bfgb != nil {
					return _bfgb
				}
				_bfffac.CfRule = append(_bfffac.CfRule, _egba)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bfffac.ExtLst = NewCT_ExtensionList()
				if _gfgd := d.DecodeElement(_bfffac.ExtLst, &_gcae); _gfgd != nil {
					return _gfgd
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067\u0020%\u0076", _gcae.Name)
				if _fcbcf := d.Skip(); _fcbcf != nil {
					return _fcbcf
				}
			}
		case _a.EndElement:
			break _eafa
		case _a.CharData:
		}
	}
	return nil
}
func (_dgcd ST_TableStyleType) Validate() error { return _dgcd.ValidateWithPath("") }
func NewCT_Stylesheet() *CT_Stylesheet          { _cdgdff := &CT_Stylesheet{}; return _cdgdff }
func NewCT_RevisionAutoFormatting() *CT_RevisionAutoFormatting {
	_dgbfbe := &CT_RevisionAutoFormatting{}
	return _dgbfbe
}

type ST_DataValidationErrorStyle byte

// Validate validates the CT_GroupItems and its children
func (_gedad *CT_GroupItems) Validate() error {
	return _gedad.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073")
}
func NewAG_RevData() *AG_RevData { _fb := &AG_RevData{}; return _fb }

type CT_ExternalRow struct {

	// Row
	RAttr uint32

	// External Cell Data
	Cell []*CT_ExternalCell
}
type CT_CellStyle struct {

	// User Defined Cell Style
	NameAttr *string

	// Format Id
	XfIdAttr uint32

	// Built-In Style Id
	BuiltinIdAttr *uint32

	// Outline Style
	ILevelAttr *uint32

	// Hidden Style
	HiddenAttr *bool

	// Custom Built In
	CustomBuiltinAttr *bool

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_CacheHierarchy struct {

	// Hierarchy Unique Name
	UniqueNameAttr string

	// Hierarchy Display Name
	CaptionAttr *string

	// Measure Hierarchy
	MeasureAttr *bool

	// Set
	SetAttr *bool

	// Parent Set
	ParentSetAttr *uint32

	// KPI Icon Set
	IconSetAttr *int32

	// Attribute Hierarchy
	AttributeAttr *bool

	// Time
	TimeAttr *bool

	// Key Attribute Hierarchy
	KeyAttributeAttr *bool

	// Default Member Unique Name
	DefaultMemberUniqueNameAttr *string

	// Unique Name of 'All'
	AllUniqueNameAttr *string

	// Display Name of 'All'
	AllCaptionAttr *string

	// Dimension Unique Name
	DimensionUniqueNameAttr *string

	// Display Folder
	DisplayFolderAttr *string

	// Measure Group Name
	MeasureGroupAttr *string

	// Measures
	MeasuresAttr *bool

	// Levels Count
	CountAttr uint32

	// One Field
	OneFieldAttr *bool

	// Member Value Data Type
	MemberValueDatatypeAttr *uint16

	// Unbalanced
	UnbalancedAttr *bool

	// Unbalanced Group
	UnbalancedGroupAttr *bool

	// Hidden
	HiddenAttr *bool

	// Fields Usage
	FieldsUsage *CT_FieldsUsage

	// OLAP Grouping Levels
	GroupLevels *CT_GroupLevels

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_FontFamily and its children
func (_ccfee *CT_FontFamily) Validate() error {
	return _ccfee.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079")
}
func (_egffg *CT_SheetIdMap) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _egffg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_egffg.CountAttr)})
	}
	e.EncodeToken(start)
	_gadbac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0049\u0064"}}
	for _, _afdcae := range _egffg.SheetId {
		e.EncodeElement(_afdcae, _gadbac)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bdefb *CT_CustomSheetViews) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_aecdba := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077"}}
	for _, _ggebg := range _bdefb.CustomSheetView {
		e.EncodeElement(_ggebg, _aecdba)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ggcbda ST_Type) ValidateWithPath(path string) error {
	switch _ggcbda {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggcbda))
	}
	return nil
}

// Validate validates the CT_Rst and its children
func (_dgbgb *CT_Rst) Validate() error {
	return _dgbgb.ValidateWithPath("\u0043\u0054\u005f\u0052\u0073\u0074")
}

type CT_DrawingHF struct {
	IdAttr string

	// Left Header for Odd Pages
	LhoAttr *uint32

	// Left Header for Even Pages
	LheAttr *uint32

	// Left Header for First Page
	LhfAttr *uint32

	// Center Header for Odd Pages
	ChoAttr *uint32

	// Center Header for Even Pages
	CheAttr *uint32

	// Center Header for First Page
	ChfAttr *uint32

	// Right Header for Odd Pages
	RhoAttr *uint32

	// Right Header for Even Pages
	RheAttr *uint32

	// Right Header for First Page
	RhfAttr *uint32

	// Left Footer for Odd Pages
	LfoAttr *uint32

	// Left Footer for Even Pages
	LfeAttr *uint32

	// Left Footer for First Page
	LffAttr *uint32

	// Center Footer for Odd Pages
	CfoAttr *uint32

	// Center Footer for Even Pages
	CfeAttr *uint32

	// Center Footer for First Page
	CffAttr *uint32

	// Right Footer for Odd Pages
	RfoAttr *uint32

	// Right Footer for Even Pages
	RfeAttr *uint32

	// Right Footer for First Page
	RffAttr *uint32
}

// ValidateWithPath validates the CT_PivotHierarchy and its children, prefixing error messages with path
func (_begag *CT_PivotHierarchy) ValidateWithPath(path string) error {
	if _begag.Mps != nil {
		if _ddgfg := _begag.Mps.ValidateWithPath(path + "\u002f\u004d\u0070\u0073"); _ddgfg != nil {
			return _ddgfg
		}
	}
	for _agbgg, _eafbe := range _begag.Members {
		if _egdagg := _eafbe.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004d\u0065\u006d\u0062\u0065\u0072s\u005b\u0025\u0064\u005d", path, _agbgg)); _egdagg != nil {
			return _egdagg
		}
	}
	if _begag.ExtLst != nil {
		if _abadf := _begag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abadf != nil {
			return _abadf
		}
	}
	return nil
}

// Validate validates the CT_Border and its children
func (_ccb *CT_Border) Validate() error {
	return _ccb.ValidateWithPath("\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r")
}
func NewCT_Controls() *CT_Controls { _ggebf := &CT_Controls{}; return _ggebf }

// Validate validates the CT_ExternalReference and its children
func (_cagb *CT_ExternalReference) Validate() error {
	return _cagb.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065")
}

// ValidateWithPath validates the CT_TableMissing and its children, prefixing error messages with path
func (_gabafc *CT_TableMissing) ValidateWithPath(path string) error { return nil }
func (_cbbad *CT_MetadataBlocks) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acfdaa := range start.Attr {
		if _acfdaa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fgddb, _gegba := _f.ParseUint(_acfdaa.Value, 10, 32)
			if _gegba != nil {
				return _gegba
			}
			_fcaba := uint32(_fgddb)
			_cbbad.CountAttr = &_fcaba
			continue
		}
	}
_dbac:
	for {
		_caba, _acbgf := d.Token()
		if _acbgf != nil {
			return _acbgf
		}
		switch _gbbbc := _caba.(type) {
		case _a.StartElement:
			switch _gbbbc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}:
				_dcbccb := NewCT_MetadataBlock()
				if _faefe := d.DecodeElement(_dcbccb, &_gbbbc); _faefe != nil {
					return _faefe
				}
				_cbbad.Bk = append(_cbbad.Bk, _dcbccb)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0073\u0020\u0025\u0076", _gbbbc.Name)
				if _aedbd := d.Skip(); _aedbd != nil {
					return _aedbd
				}
			}
		case _a.EndElement:
			break _dbac
		case _a.CharData:
		}
	}
	return nil
}
func (_dcceb ST_PaneState) ValidateWithPath(path string) error {
	switch _dcceb {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcceb))
	}
	return nil
}

// Validate validates the CT_SheetCalcPr and its children
func (_aaggd *CT_SheetCalcPr) Validate() error {
	return _aaggd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072")
}

// ValidateWithPath validates the CT_Drawing and its children, prefixing error messages with path
func (_dfgfg *CT_Drawing) ValidateWithPath(path string) error { return nil }
func (_gfeee *CT_FileVersion) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gfeee.AppNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_gfeee.AppNameAttr)})
	}
	if _gfeee.LastEditedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0061\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_gfeee.LastEditedAttr)})
	}
	if _gfeee.LowestEditedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0077e\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_gfeee.LowestEditedAttr)})
	}
	if _gfeee.RupBuildAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0075\u0070\u0042\u0075\u0069\u006c\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_gfeee.RupBuildAttr)})
	}
	if _gfeee.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_gfeee.CodeNameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FunctionGroup and its children
func (_bfdee *CT_FunctionGroup) Validate() error {
	return _bfdee.ValidateWithPath("\u0043\u0054_\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070")
}
func (_fcfbd ST_PaneState) String() string {
	switch _fcfbd {
	case 0:
		return ""
	case 1:
		return "\u0073\u0070\u006ci\u0074"
	case 2:
		return "\u0066\u0072\u006f\u007a\u0065\u006e"
	case 3:
		return "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074"
	}
	return ""
}

// ValidateWithPath validates the CT_CellStyles and its children, prefixing error messages with path
func (_fgag *CT_CellStyles) ValidateWithPath(path string) error {
	for _bddca, _fgcd := range _fgag.CellStyle {
		if _befg := _fgcd.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0043\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u005b\u0025\u0064\u005d", path, _bddca)); _befg != nil {
			return _befg
		}
	}
	return nil
}

// Validate validates the CT_MdxKPI and its children
func (_dgaba *CT_MdxKPI) Validate() error {
	return _dgaba.ValidateWithPath("\u0043T\u005f\u004d\u0064\u0078\u004b\u0050I")
}
func NewCT_RevisionCellChange() *CT_RevisionCellChange {
	_eceddc := &CT_RevisionCellChange{}
	_eceddc.Nc = NewCT_Cell()
	return _eceddc
}

type CT_RangeSet struct {

	// Field Item Index Page 1
	I1Attr *uint32

	// Field Item Index Page 2
	I2Attr *uint32

	// Field Item index Page 3
	I3Attr *uint32

	// Field Item Index Page 4
	I4Attr *uint32

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

func (_bedag *CT_TupleCache) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dgafd:
	for {
		_egddb, _cebbd := d.Token()
		if _cebbd != nil {
			return _cebbd
		}
		switch _acfdc := _egddb.(type) {
		case _a.StartElement:
			switch _acfdc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0074\u0072\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0074\u0072\u0069\u0065\u0073"}:
				_bedag.Entries = NewCT_PCDSDTCEntries()
				if _ebbag := d.DecodeElement(_bedag.Entries, &_acfdc); _ebbag != nil {
					return _ebbag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074\u0073"}:
				_bedag.Sets = NewCT_Sets()
				if _ececc := d.DecodeElement(_bedag.Sets, &_acfdc); _ececc != nil {
					return _ececc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}:
				_bedag.QueryCache = NewCT_QueryCache()
				if _fgfacc := d.DecodeElement(_bedag.QueryCache, &_acfdc); _fgfacc != nil {
					return _fgfacc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_bedag.ServerFormats = NewCT_ServerFormats()
				if _fegac := d.DecodeElement(_bedag.ServerFormats, &_acfdc); _fegac != nil {
					return _fegac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bedag.ExtLst = NewCT_ExtensionList()
				if _deccf := d.DecodeElement(_bedag.ExtLst, &_acfdc); _deccf != nil {
					return _deccf
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054u\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065 \u0025\u0076", _acfdc.Name)
				if _dcbbbg := d.Skip(); _dcbbbg != nil {
					return _dcbbbg
				}
			}
		case _a.EndElement:
			break _dgafd
		case _a.CharData:
		}
	}
	return nil
}
func (_ffagbg *ST_MdxKPIProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_acefec, _bggbab := d.Token()
	if _bggbab != nil {
		return _bggbab
	}
	if _dffcf, _gegbff := _acefec.(_a.EndElement); _gegbff && _dffcf.Name == start.Name {
		*_ffagbg = 1
		return nil
	}
	if _dgdebe, _fcbffd := _acefec.(_a.CharData); !_fcbffd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acefec)
	} else {
		switch string(_dgdebe) {
		case "":
			*_ffagbg = 0
		case "\u0076":
			*_ffagbg = 1
		case "\u0067":
			*_ffagbg = 2
		case "\u0073":
			*_ffagbg = 3
		case "\u0074":
			*_ffagbg = 4
		case "\u0077":
			*_ffagbg = 5
		case "\u006d":
			*_ffagbg = 6
		}
	}
	_acefec, _bggbab = d.Token()
	if _bggbab != nil {
		return _bggbab
	}
	if _faagdc, _baffa := _acefec.(_a.EndElement); _baffa && _faagdc.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acefec)
}
func (_aagfgcf *CT_SheetFormatPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aagfgcf.BaseColWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0061\u0073e\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068"}, Value: _fc.Sprintf("\u0025\u0076", *_aagfgcf.BaseColWidthAttr)})
	}
	if _aagfgcf.DefaultColWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068"}, Value: _fc.Sprintf("\u0025\u0076", *_aagfgcf.DefaultColWidthAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065f\u0061\u0075\u006ct\u0052\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0076", _aagfgcf.DefaultRowHeightAttr)})
	if _aagfgcf.CustomHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aagfgcf.CustomHeightAttr))})
	}
	if _aagfgcf.ZeroHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007a\u0065\u0072\u006f\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aagfgcf.ZeroHeightAttr))})
	}
	if _aagfgcf.ThickTopAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aagfgcf.ThickTopAttr))})
	}
	if _aagfgcf.ThickBottomAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u0068\u0069\u0063\u006b\u0042\u006f\u0074\u0074\u006f\u006d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aagfgcf.ThickBottomAttr))})
	}
	if _aagfgcf.OutlineLevelRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0052\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0076", *_aagfgcf.OutlineLevelRowAttr)})
	}
	if _aagfgcf.OutlineLevelColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_aagfgcf.OutlineLevelColAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cfafd *CT_Dxf) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gcede:
	for {
		_gecd, _adecf := d.Token()
		if _adecf != nil {
			return _adecf
		}
		switch _cggdc := _gecd.(type) {
		case _a.StartElement:
			switch _cggdc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_cfafd.Font = NewCT_Font()
				if _faca := d.DecodeElement(_cfafd.Font, &_cggdc); _faca != nil {
					return _faca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}:
				_cfafd.NumFmt = NewCT_NumFmt()
				if _fdggg := d.DecodeElement(_cfafd.NumFmt, &_cggdc); _fdggg != nil {
					return _fdggg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_cfafd.Fill = NewCT_Fill()
				if _bdagd := d.DecodeElement(_cfafd.Fill, &_cggdc); _bdagd != nil {
					return _bdagd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}:
				_cfafd.Alignment = NewCT_CellAlignment()
				if _bagb := d.DecodeElement(_cfafd.Alignment, &_cggdc); _bagb != nil {
					return _bagb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}:
				_cfafd.Border = NewCT_Border()
				if _dagag := d.DecodeElement(_cfafd.Border, &_cggdc); _dagag != nil {
					return _dagag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_cfafd.Protection = NewCT_CellProtection()
				if _fdgaa := d.DecodeElement(_cfafd.Protection, &_cggdc); _fdgaa != nil {
					return _fdgaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfafd.ExtLst = NewCT_ExtensionList()
				if _ecac := d.DecodeElement(_cfafd.ExtLst, &_cggdc); _ecac != nil {
					return _ecac
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0078\u0066\u0020\u0025\u0076", _cggdc.Name)
				if _aaaaf := d.Skip(); _aaaaf != nil {
					return _aaaaf
				}
			}
		case _a.EndElement:
			break _gcede
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MemberProperty and its children, prefixing error messages with path
func (_gbfdb *CT_MemberProperty) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_XmlColumnPr and its children
func (_dgbefc *CT_XmlColumnPr) Validate() error {
	return _dgbefc.ValidateWithPath("\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072")
}
func (_faeeb *CT_FileSharing) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _faeeb.ReadOnlyRecommendedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0061\u0064On\u006c\u0079\u0052\u0065\u0063\u006f\u006d\u006d\u0065\u006e\u0064\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faeeb.ReadOnlyRecommendedAttr))})
	}
	if _faeeb.UserNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_faeeb.UserNameAttr)})
	}
	if _faeeb.ReservationPasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0073\u0065rv\u0061\u0074\u0069\u006f\u006e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_faeeb.ReservationPasswordAttr)})
	}
	if _faeeb.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_faeeb.AlgorithmNameAttr)})
	}
	if _faeeb.HashValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _fc.Sprintf("\u0025\u0076", *_faeeb.HashValueAttr)})
	}
	if _faeeb.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _fc.Sprintf("\u0025\u0076", *_faeeb.SaltValueAttr)})
	}
	if _faeeb.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _fc.Sprintf("\u0025\u0076", *_faeeb.SpinCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Items struct {

	// Field Count
	CountAttr *uint32

	// PivotTable Field Item
	Item []*CT_Item
}

func NewCT_Scenarios() *CT_Scenarios { _fgfadc := &CT_Scenarios{}; return _fgfadc }

// Validate validates the CT_GroupMembers and its children
func (_caec *CT_GroupMembers) Validate() error {
	return _caec.ValidateWithPath("\u0043T\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073")
}

// ValidateWithPath validates the CT_Dxf and its children, prefixing error messages with path
func (_ebgg *CT_Dxf) ValidateWithPath(path string) error {
	if _ebgg.Font != nil {
		if _eggg := _ebgg.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _eggg != nil {
			return _eggg
		}
	}
	if _ebgg.NumFmt != nil {
		if _bcffe := _ebgg.NumFmt.ValidateWithPath(path + "\u002fN\u0075\u006d\u0046\u006d\u0074"); _bcffe != nil {
			return _bcffe
		}
	}
	if _ebgg.Fill != nil {
		if _bgcdcf := _ebgg.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _bgcdcf != nil {
			return _bgcdcf
		}
	}
	if _ebgg.Alignment != nil {
		if _febc := _ebgg.Alignment.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"); _febc != nil {
			return _febc
		}
	}
	if _ebgg.Border != nil {
		if _fegaf := _ebgg.Border.ValidateWithPath(path + "\u002fB\u006f\u0072\u0064\u0065\u0072"); _fegaf != nil {
			return _fegaf
		}
	}
	if _ebgg.Protection != nil {
		if _aebf := _ebgg.Protection.ValidateWithPath(path + "/\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _aebf != nil {
			return _aebf
		}
	}
	if _ebgg.ExtLst != nil {
		if _dcdec := _ebgg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcdec != nil {
			return _dcdec
		}
	}
	return nil
}

type ST_TimePeriod byte

func (_gebbd ST_FormulaExpression) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dfegfg := _a.Attr{}
	_dfegfg.Name = name
	switch _gebbd {
	case ST_FormulaExpressionUnset:
		_dfegfg.Value = ""
	case ST_FormulaExpressionRef:
		_dfegfg.Value = "\u0072\u0065\u0066"
	case ST_FormulaExpressionRefError:
		_dfegfg.Value = "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072"
	case ST_FormulaExpressionArea:
		_dfegfg.Value = "\u0061\u0072\u0065\u0061"
	case ST_FormulaExpressionAreaError:
		_dfegfg.Value = "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr"
	case ST_FormulaExpressionComputedArea:
		_dfegfg.Value = "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061"
	}
	return _dfegfg, nil
}

// Validate validates the Metadata and its children
func (_bbfee *Metadata) Validate() error {
	return _bbfee.ValidateWithPath("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061")
}

// Validate validates the CT_PivotHierarchies and its children
func (_eebcee *CT_PivotHierarchies) Validate() error {
	return _eebcee.ValidateWithPath("\u0043\u0054\u005f\u0050iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073")
}

// Validate validates the CT_CellStyleXfs and its children
func (_ggaf *CT_CellStyleXfs) Validate() error {
	return _ggaf.ValidateWithPath("\u0043T\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073")
}

// Validate validates the CT_SharedUser and its children
func (_ceegc *CT_SharedUser) Validate() error {
	return _ceegc.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072")
}
func NewCT_RevisionHeaders() *CT_RevisionHeaders {
	_dcdaed := &CT_RevisionHeaders{}
	_dcdaed.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _dcdaed
}
func (_bcbdd *CT_FontName) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _effg := range start.Attr {
		if _effg.Name.Local == "\u0076\u0061\u006c" {
			_edddb, _dgaa := _effg.Value, error(nil)
			if _dgaa != nil {
				return _dgaa
			}
			_bcbdd.ValAttr = _edddb
			continue
		}
	}
	for {
		_gecce, _bdefea := d.Token()
		if _bdefea != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _bdefea)
		}
		if _egeeb, _ecagg := _gecce.(_a.EndElement); _ecagg && _egeeb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gaceb ST_Visibility) ValidateWithPath(path string) error {
	switch _gaceb {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gaceb))
	}
	return nil
}

type CT_RowFields struct {

	// Repeated Items Count
	CountAttr *uint32

	// Row Items
	Field []*CT_Field
}

// Validate validates the Connections and its children
func (_egggb *Connections) Validate() error {
	return _egggb.ValidateWithPath("C\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073")
}

type CT_Drawing struct{ IdAttr string }

func (_gecgg *CT_Dxf) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _gecgg.Font != nil {
		_eaee := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_gecgg.Font, _eaee)
	}
	if _gecgg.NumFmt != nil {
		_fgdbc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u006e\u0075\u006d\u0046\u006dt"}}
		e.EncodeElement(_gecgg.NumFmt, _fgdbc)
	}
	if _gecgg.Fill != nil {
		_ecbgg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_gecgg.Fill, _ecbgg)
	}
	if _gecgg.Alignment != nil {
		_acccf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003aa\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"}}
		e.EncodeElement(_gecgg.Alignment, _acccf)
	}
	if _gecgg.Border != nil {
		_bfea := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0062\u006f\u0072\u0064\u0065r"}}
		e.EncodeElement(_gecgg.Border, _bfea)
	}
	if _gecgg.Protection != nil {
		_beeef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gecgg.Protection, _beeef)
	}
	if _gecgg.ExtLst != nil {
		_gbabb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gecgg.ExtLst, _gbabb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cabec *CT_SortState) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cabec.ColumnSortAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006c\u0075\u006d\u006e\u0053\u006f\u0072\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cabec.ColumnSortAttr))})
	}
	if _cabec.CaseSensitiveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061\u0073\u0065\u0053\u0065\u006e\u0073\u0069\u0074\u0069\u0076\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cabec.CaseSensitiveAttr))})
	}
	if _cabec.SortMethodAttr != ST_SortMethodUnset {
		_aeegc, _ebfeb := _cabec.SortMethodAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u006f\u0072\u0074\u004d\u0065\u0074\u0068\u006f\u0064"})
		if _ebfeb != nil {
			return _ebfeb
		}
		start.Attr = append(start.Attr, _aeegc)
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _cabec.RefAttr)})
	e.EncodeToken(start)
	if _cabec.SortCondition != nil {
		_eddaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0073\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}}
		for _, _dafbc := range _cabec.SortCondition {
			e.EncodeElement(_dafbc, _eddaf)
		}
	}
	if _cabec.ExtLst != nil {
		_cgdead := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cabec.ExtLst, _cgdead)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Control and its children
func (_ecag *CT_Control) Validate() error {
	return _ecag.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c")
}
func NewCT_CsPageSetup() *CT_CsPageSetup { _fdge := &CT_CsPageSetup{}; return _fdge }

// Validate validates the CT_DdeValue and its children
func (_dccg *CT_DdeValue) Validate() error {
	return _dccg.ValidateWithPath("C\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065")
}

// ValidateWithPath validates the CT_CustomChartsheetView and its children, prefixing error messages with path
func (_agge *CT_CustomChartsheetView) ValidateWithPath(path string) error {
	if !_ae.ST_GuidPatternRe.MatchString(_agge.GuidAttr) {
		return _fc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ae.ST_GuidPatternRe, _agge.GuidAttr)
	}
	if _aaffa := _agge.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _aaffa != nil {
		return _aaffa
	}
	if _agge.PageMargins != nil {
		if _degfa := _agge.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _degfa != nil {
			return _degfa
		}
	}
	if _agge.PageSetup != nil {
		if _abdb := _agge.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _abdb != nil {
			return _abdb
		}
	}
	if _agge.HeaderFooter != nil {
		if _gefad := _agge.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _gefad != nil {
			return _gefad
		}
	}
	return nil
}
func (_fffga *QueryTable) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	return _fffga.CT_QueryTable.MarshalXML(e, start)
}

type MapInfo struct{ CT_MapInfo }
type CT_Scenario struct {

	// Scenario Name
	NameAttr string

	// Scenario Locked
	LockedAttr *bool

	// Hidden Scenario
	HiddenAttr *bool

	// Changing Cell Count
	CountAttr *uint32

	// User Name
	UserAttr *string

	// Scenario Comment
	CommentAttr *string

	// Input Cells
	InputCells []*CT_InputCells
}

// ValidateWithPath validates the CT_MdxMemeberProp and its children, prefixing error messages with path
func (_bbacg *CT_MdxMemeberProp) ValidateWithPath(path string) error { return nil }

type CT_MeasureDimensionMaps struct {

	// Measure Group Count
	CountAttr *uint32

	// OLAP Measure Group
	Map []*CT_MeasureDimensionMap
}

func (_ddbada ST_SortMethod) Validate() error { return _ddbada.ValidateWithPath("") }
func (_bgbfac *ST_RefMode) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bgbfac = 0
	case "\u0041\u0031":
		*_bgbfac = 1
	case "\u0052\u0031\u0043\u0031":
		*_bgbfac = 2
	}
	return nil
}
func (_fffcgg *CT_OleSize) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _fffcgg.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bcfda *CT_FilterColumn) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bfdce := range start.Attr {
		if _bfdce.Name.Local == "\u0063\u006f\u006cI\u0064" {
			_dgdbd, _bcdgb := _f.ParseUint(_bfdce.Value, 10, 32)
			if _bcdgb != nil {
				return _bcdgb
			}
			_bcfda.ColIdAttr = uint32(_dgdbd)
			continue
		}
		if _bfdce.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0042\u0075\u0074\u0074\u006f\u006e" {
			_baccd, _ggcg := _f.ParseBool(_bfdce.Value)
			if _ggcg != nil {
				return _ggcg
			}
			_bcfda.HiddenButtonAttr = &_baccd
			continue
		}
		if _bfdce.Name.Local == "\u0073\u0068\u006f\u0077\u0042\u0075\u0074\u0074\u006f\u006e" {
			_cbcbg, _edcfa := _f.ParseBool(_bfdce.Value)
			if _edcfa != nil {
				return _edcfa
			}
			_bcfda.ShowButtonAttr = &_cbcbg
			continue
		}
	}
_dcbfg:
	for {
		_badg, _daggg := d.Token()
		if _daggg != nil {
			return _daggg
		}
		switch _cgfceed := _badg.(type) {
		case _a.StartElement:
			switch _cgfceed.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_bcfda.Filters = NewCT_Filters()
				if _abded := d.DecodeElement(_bcfda.Filters, &_cgfceed); _abded != nil {
					return _abded
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}:
				_bcfda.Top10 = NewCT_Top10()
				if _cbfge := d.DecodeElement(_bcfda.Top10, &_cgfceed); _cbfge != nil {
					return _cbfge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}:
				_bcfda.CustomFilters = NewCT_CustomFilters()
				if _fgfee := d.DecodeElement(_bcfda.CustomFilters, &_cgfceed); _fgfee != nil {
					return _fgfee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_bcfda.DynamicFilter = NewCT_DynamicFilter()
				if _faaee := d.DecodeElement(_bcfda.DynamicFilter, &_cgfceed); _faaee != nil {
					return _faaee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_bcfda.ColorFilter = NewCT_ColorFilter()
				if _dcggg := d.DecodeElement(_bcfda.ColorFilter, &_cgfceed); _dcggg != nil {
					return _dcggg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_bcfda.IconFilter = NewCT_IconFilter()
				if _cafd := d.DecodeElement(_bcfda.IconFilter, &_cgfceed); _cafd != nil {
					return _cafd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcfda.ExtLst = NewCT_ExtensionList()
				if _ceef := d.DecodeElement(_bcfda.ExtLst, &_cgfceed); _ceef != nil {
					return _ceef
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u0020\u0025\u0076", _cgfceed.Name)
				if _gfcea := d.Skip(); _gfcea != nil {
					return _gfcea
				}
			}
		case _a.EndElement:
			break _dcbfg
		case _a.CharData:
		}
	}
	return nil
}

type CT_Formats struct {

	// Formats Count
	CountAttr *uint32

	// PivotTable Format
	Format []*CT_Format
}

// ValidateWithPath validates the CT_VolMain and its children, prefixing error messages with path
func (_gdfade *CT_VolMain) ValidateWithPath(path string) error {
	for _cebeg, _fgcfeb := range _gdfade.Tp {
		if _gbabbb := _fgcfeb.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0054\u0070\u005b\u0025\u0064]", path, _cebeg)); _gbabbb != nil {
			return _gbabbb
		}
	}
	return nil
}
func (_fbdf *CT_Comment) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fbdf.Text = NewCT_Rst()
	for _, _gdbg := range start.Attr {
		if _gdbg.Name.Local == "\u0072\u0065\u0066" {
			_fbbcd, _fgcf := _gdbg.Value, error(nil)
			if _fgcf != nil {
				return _fgcf
			}
			_fbdf.RefAttr = _fbbcd
			continue
		}
		if _gdbg.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064" {
			_afcb, _cfecd := _f.ParseUint(_gdbg.Value, 10, 32)
			if _cfecd != nil {
				return _cfecd
			}
			_fbdf.AuthorIdAttr = uint32(_afcb)
			continue
		}
		if _gdbg.Name.Local == "\u0067\u0075\u0069\u0064" {
			_eebab, _eedfb := _gdbg.Value, error(nil)
			if _eedfb != nil {
				return _eedfb
			}
			_fbdf.GuidAttr = &_eebab
			continue
		}
		if _gdbg.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_gdedc, _cgeg := _f.ParseUint(_gdbg.Value, 10, 32)
			if _cgeg != nil {
				return _cgeg
			}
			_bbac := uint32(_gdedc)
			_fbdf.ShapeIdAttr = &_bbac
			continue
		}
	}
_fege:
	for {
		_fcfc, _eadab := d.Token()
		if _eadab != nil {
			return _eadab
		}
		switch _agcc := _fcfc.(type) {
		case _a.StartElement:
			switch _agcc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}:
				if _gacgg := d.DecodeElement(_fbdf.Text, &_agcc); _gacgg != nil {
					return _gacgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0050r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0050r"}:
				_fbdf.CommentPr = NewCT_CommentPr()
				if _fddg := d.DecodeElement(_fbdf.CommentPr, &_agcc); _fddg != nil {
					return _fddg
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _agcc.Name)
				if _eacb := d.Skip(); _eacb != nil {
					return _eacb
				}
			}
		case _a.EndElement:
			break _fege
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_Dimensions() *CT_Dimensions { _abfa := &CT_Dimensions{}; return _abfa }

type ST_RefMode byte

// Validate validates the CT_Location and its children
func (_ebdfg *CT_Location) Validate() error {
	return _ebdfg.ValidateWithPath("C\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_CellStyle and its children
func (_dgcfa *CT_CellStyle) Validate() error {
	return _dgcfa.ValidateWithPath("\u0043\u0054\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065")
}

// ValidateWithPath validates the CT_Scenarios and its children, prefixing error messages with path
func (_cegcd *CT_Scenarios) ValidateWithPath(path string) error {
	for _dfbgdc, _ecdbe := range _cegcd.Scenario {
		if _dcagba := _ecdbe.ValidateWithPath(_fc.Sprintf("\u0025s\u002fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u005b\u0025\u0064\u005d", path, _dfbgdc)); _dcagba != nil {
			return _dcagba
		}
	}
	return nil
}
func NewCT_DbPr() *CT_DbPr { _dacde := &CT_DbPr{}; return _dacde }
func (_bggba ST_Qualifier) String() string {
	switch _bggba {
	case 0:
		return ""
	case 1:
		return "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case 2:
		return "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func NewCT_Colors() *CT_Colors { _ege := &CT_Colors{}; return _ege }
func (_gafcf *CT_PivotSelection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gafcf.PaneAttr != ST_PaneUnset {
		_aaaafd, _aefga := _gafcf.PaneAttr.MarshalXMLAttr(_a.Name{Local: "\u0070\u0061\u006e\u0065"})
		if _aefga != nil {
			return _aefga
		}
		start.Attr = append(start.Attr, _aaaafd)
	}
	if _gafcf.ShowHeaderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gafcf.ShowHeaderAttr))})
	}
	if _gafcf.LabelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0061\u0062e\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gafcf.LabelAttr))})
	}
	if _gafcf.DataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gafcf.DataAttr))})
	}
	if _gafcf.ExtendableAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0078\u0074\u0065\u006e\u0064\u0061\u0062\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gafcf.ExtendableAttr))})
	}
	if _gafcf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_gafcf.CountAttr)})
	}
	if _gafcf.AxisAttr != ST_AxisUnset {
		_gdbcdc, _bdbdc := _gafcf.AxisAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _bdbdc != nil {
			return _bdbdc
		}
		start.Attr = append(start.Attr, _gdbcdc)
	}
	if _gafcf.DimensionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, Value: _fc.Sprintf("\u0025\u0076", *_gafcf.DimensionAttr)})
	}
	if _gafcf.StartAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0061r\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_gafcf.StartAttr)})
	}
	if _gafcf.MinAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_gafcf.MinAttr)})
	}
	if _gafcf.MaxAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078"}, Value: _fc.Sprintf("\u0025\u0076", *_gafcf.MaxAttr)})
	}
	if _gafcf.ActiveRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0052\u006fw"}, Value: _fc.Sprintf("\u0025\u0076", *_gafcf.ActiveRowAttr)})
	}
	if _gafcf.ActiveColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0043\u006fl"}, Value: _fc.Sprintf("\u0025\u0076", *_gafcf.ActiveColAttr)})
	}
	if _gafcf.PreviousRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0052\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0076", *_gafcf.PreviousRowAttr)})
	}
	if _gafcf.PreviousColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0043\u006f\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_gafcf.PreviousColAttr)})
	}
	if _gafcf.ClickAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006c\u0069c\u006b"}, Value: _fc.Sprintf("\u0025\u0076", *_gafcf.ClickAttr)})
	}
	if _gafcf.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_gafcf.IdAttr)})
	}
	e.EncodeToken(start)
	_adafd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_gafcf.PivotArea, _adafd)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FunctionGroup and its children, prefixing error messages with path
func (_eecag *CT_FunctionGroup) ValidateWithPath(path string) error { return nil }

type CT_PivotDimension struct {

	// Measure
	MeasureAttr *bool

	// Dimension Name
	NameAttr string

	// Dimension Unique Name
	UniqueNameAttr string

	// Dimension Display Name
	CaptionAttr string
}

func (_gdaeaa ST_TargetScreenSize) Validate() error { return _gdaeaa.ValidateWithPath("") }

// ValidateWithPath validates the CT_DynamicFilter and its children, prefixing error messages with path
func (_fdfbbd *CT_DynamicFilter) ValidateWithPath(path string) error {
	if _fdfbbd.TypeAttr == ST_DynamicFilterTypeUnset {
		return _fc.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ceccda := _fdfbbd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ceccda != nil {
		return _ceccda
	}
	return nil
}

// Validate validates the CT_Item and its children
func (_aaffac *CT_Item) Validate() error {
	return _aaffac.ValidateWithPath("\u0043T\u005f\u0049\u0074\u0065\u006d")
}
func NewCT_PivotSelection() *CT_PivotSelection {
	_cggdf := &CT_PivotSelection{}
	_cggdf.PivotArea = NewCT_PivotArea()
	return _cggdf
}
func NewCT_TableParts() *CT_TableParts { _deecff := &CT_TableParts{}; return _deecff }
func (_daef *CT_CellProtection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ceafg := range start.Attr {
		if _ceafg.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_bcdb, _bcacfe := _f.ParseBool(_ceafg.Value)
			if _bcacfe != nil {
				return _bcacfe
			}
			_daef.LockedAttr = &_bcdb
			continue
		}
		if _ceafg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_acfb, _cebg := _f.ParseBool(_ceafg.Value)
			if _cebg != nil {
				return _cebg
			}
			_daef.HiddenAttr = &_acfb
			continue
		}
	}
	for {
		_gegb, _aebg := d.Token()
		if _aebg != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e: \u0025\u0073", _aebg)
		}
		if _ebba, _ddbd := _gegb.(_a.EndElement); _ddbd && _ebba.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_DvAspectUnset            ST_DvAspect = 0
	ST_DvAspectDVASPECT_CONTENT ST_DvAspect = 1
	ST_DvAspectDVASPECT_ICON    ST_DvAspect = 2
)

type CT_Number struct {

	// Value
	VAttr float64

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// Background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// OLAP Members
	Tpls []*CT_Tuples

	// Member Property Index
	X []*CT_X
}
type CT_SmartTagPr struct {

	// Embed SmartTags
	EmbedAttr *bool

	// Show Smart Tags
	ShowAttr ST_SmartTagShow
}

func (_fbccad ST_Qualifier) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fbccad.String(), start)
}
func NewCT_NumFmt() *CT_NumFmt { _egbga := &CT_NumFmt{}; return _egbga }
func (_dabdf ST_CfvoType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gfbed := _a.Attr{}
	_gfbed.Name = name
	switch _dabdf {
	case ST_CfvoTypeUnset:
		_gfbed.Value = ""
	case ST_CfvoTypeNum:
		_gfbed.Value = "\u006e\u0075\u006d"
	case ST_CfvoTypePercent:
		_gfbed.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_CfvoTypeMax:
		_gfbed.Value = "\u006d\u0061\u0078"
	case ST_CfvoTypeMin:
		_gfbed.Value = "\u006d\u0069\u006e"
	case ST_CfvoTypeFormula:
		_gfbed.Value = "\u0066o\u0072\u006d\u0075\u006c\u0061"
	case ST_CfvoTypePercentile:
		_gfbed.Value = "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065"
	}
	return _gfbed, nil
}

// Validate validates the AG_RevData and its children
func (_gd *AG_RevData) Validate() error {
	return _gd.ValidateWithPath("\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061")
}
func (_cfee *CT_CellSmartTagPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bacc := range start.Attr {
		if _bacc.Name.Local == "\u006b\u0065\u0079" {
			_gfea, _bcee := _bacc.Value, error(nil)
			if _bcee != nil {
				return _bcee
			}
			_cfee.KeyAttr = _gfea
			continue
		}
		if _bacc.Name.Local == "\u0076\u0061\u006c" {
			_cfed, _fbcc := _bacc.Value, error(nil)
			if _fbcc != nil {
				return _fbcc
			}
			_cfee.ValAttr = _cfed
			continue
		}
	}
	for {
		_fbeb, _debc := d.Token()
		if _debc != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072: \u0025\u0073", _debc)
		}
		if _fdcd, _fbef := _fbeb.(_a.EndElement); _fbef && _fdcd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fcfdcd *ST_FormulaExpression) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fcggdf, _dbedb := d.Token()
	if _dbedb != nil {
		return _dbedb
	}
	if _gbbcg, _ddafd := _fcggdf.(_a.EndElement); _ddafd && _gbbcg.Name == start.Name {
		*_fcfdcd = 1
		return nil
	}
	if _aggcb, _fbcff := _fcggdf.(_a.CharData); !_fbcff {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcggdf)
	} else {
		switch string(_aggcb) {
		case "":
			*_fcfdcd = 0
		case "\u0072\u0065\u0066":
			*_fcfdcd = 1
		case "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072":
			*_fcfdcd = 2
		case "\u0061\u0072\u0065\u0061":
			*_fcfdcd = 3
		case "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr":
			*_fcfdcd = 4
		case "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061":
			*_fcfdcd = 5
		}
	}
	_fcggdf, _dbedb = d.Token()
	if _dbedb != nil {
		return _dbedb
	}
	if _eagfba, _dbadbc := _fcggdf.(_a.EndElement); _dbadbc && _eagfba.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcggdf)
}

type CT_RgbColor struct {

	// Alpha Red Green Blue
	RgbAttr *string
}

func (_ceegb *CT_DdeValues) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ceegb.RowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006f\u0077\u0073"}, Value: _fc.Sprintf("\u0025\u0076", *_ceegb.RowsAttr)})
	}
	if _ceegb.ColsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0076", *_ceegb.ColsAttr)})
	}
	e.EncodeToken(start)
	_bcdbb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0076\u0061\u006c\u0075\u0065"}}
	for _, _cdabd := range _ceegb.Value {
		e.EncodeElement(_cdabd, _bcdbb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ecceeg ST_TableType) Validate() error { return _ecceeg.ValidateWithPath("") }
func (_dacdcb *CT_WebPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _addde := range start.Attr {
		if _addde.Name.Local == "\u0078\u006c\u0032\u0030\u0030\u0030" {
			_acbce, _baadg := _f.ParseBool(_addde.Value)
			if _baadg != nil {
				return _baadg
			}
			_dacdcb.Xl2000Attr = &_acbce
			continue
		}
		if _addde.Name.Local == "\u0078\u006d\u006c" {
			_bbcbe, _fcbab := _f.ParseBool(_addde.Value)
			if _fcbab != nil {
				return _fcbab
			}
			_dacdcb.XmlAttr = &_bbcbe
			continue
		}
		if _addde.Name.Local == "\u0070\u0061\u0072\u0073\u0065\u0050\u0072\u0065" {
			_bdfgcg, _fbfccd := _f.ParseBool(_addde.Value)
			if _fbfccd != nil {
				return _fbfccd
			}
			_dacdcb.ParsePreAttr = &_bdfgcg
			continue
		}
		if _addde.Name.Local == "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065" {
			_edebf, _adeda := _f.ParseBool(_addde.Value)
			if _adeda != nil {
				return _adeda
			}
			_dacdcb.ConsecutiveAttr = &_edebf
			continue
		}
		if _addde.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_aaeeg, _dadecb := _f.ParseBool(_addde.Value)
			if _dadecb != nil {
				return _dadecb
			}
			_dacdcb.FirstRowAttr = &_aaeeg
			continue
		}
		if _addde.Name.Local == "\u0078\u006c\u0039\u0037" {
			_ddcdee, _debfef := _f.ParseBool(_addde.Value)
			if _debfef != nil {
				return _debfef
			}
			_dacdcb.Xl97Attr = &_ddcdee
			continue
		}
		if _addde.Name.Local == "\u0074e\u0078\u0074\u0044\u0061\u0074\u0065s" {
			_gedfcf, _bgbdea := _f.ParseBool(_addde.Value)
			if _bgbdea != nil {
				return _bgbdea
			}
			_dacdcb.TextDatesAttr = &_gedfcf
			continue
		}
		if _addde.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0044\u0061\u0074\u0061" {
			_faaac, _cdbeff := _f.ParseBool(_addde.Value)
			if _cdbeff != nil {
				return _cdbeff
			}
			_dacdcb.SourceDataAttr = &_faaac
			continue
		}
		if _addde.Name.Local == "\u0075\u0072\u006c" {
			_cfded, _feefb := _addde.Value, error(nil)
			if _feefb != nil {
				return _feefb
			}
			_dacdcb.UrlAttr = &_cfded
			continue
		}
		if _addde.Name.Local == "\u0070\u006f\u0073\u0074" {
			_bedbcg, _aabdbc := _addde.Value, error(nil)
			if _aabdbc != nil {
				return _aabdbc
			}
			_dacdcb.PostAttr = &_bedbcg
			continue
		}
		if _addde.Name.Local == "\u0068\u0074\u006d\u006c\u0054\u0061\u0062\u006c\u0065\u0073" {
			_bbafdc, _gggag := _f.ParseBool(_addde.Value)
			if _gggag != nil {
				return _gggag
			}
			_dacdcb.HtmlTablesAttr = &_bbafdc
			continue
		}
		if _addde.Name.Local == "\u0068\u0074\u006d\u006c\u0046\u006f\u0072\u006d\u0061\u0074" {
			_dacdcb.HtmlFormatAttr.UnmarshalXMLAttr(_addde)
			continue
		}
		if _addde.Name.Local == "\u0065\u0064\u0069\u0074\u0050\u0061\u0067\u0065" {
			_cgfbf, _fgbbad := _addde.Value, error(nil)
			if _fgbbad != nil {
				return _fgbbad
			}
			_dacdcb.EditPageAttr = &_cgfbf
			continue
		}
	}
_gbeebc:
	for {
		_daagc, _eegbb := d.Token()
		if _eegbb != nil {
			return _eegbb
		}
		switch _daece := _daagc.(type) {
		case _a.StartElement:
			switch _daece.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0073"}:
				_dacdcb.Tables = NewCT_Tables()
				if _fdgbf := d.DecodeElement(_dacdcb.Tables, &_daece); _fdgbf != nil {
					return _fdgbf
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072\u0020\u0025\u0076", _daece.Name)
				if _bfgaae := d.Skip(); _bfgaae != nil {
					return _bfgaae
				}
			}
		case _a.EndElement:
			break _gbeebc
		case _a.CharData:
		}
	}
	return nil
}
func (_aecab *CT_Metadata) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gdacb:
	for {
		_dgbbb, _gaeee := d.Token()
		if _gaeee != nil {
			return _gaeee
		}
		switch _edfcc := _dgbbb.(type) {
		case _a.StartElement:
			switch _edfcc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}:
				_aecab.MetadataTypes = NewCT_MetadataTypes()
				if _fdddg := d.DecodeElement(_aecab.MetadataTypes, &_edfcc); _fdddg != nil {
					return _fdddg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}:
				_aecab.MetadataStrings = NewCT_MetadataStrings()
				if _bcacg := d.DecodeElement(_aecab.MetadataStrings, &_edfcc); _bcacg != nil {
					return _bcacg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_aecab.MdxMetadata = NewCT_MdxMetadata()
				if _bgcca := d.DecodeElement(_aecab.MdxMetadata, &_edfcc); _bgcca != nil {
					return _bgcca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}:
				_aeefc := NewCT_FutureMetadata()
				if _egdfd := d.DecodeElement(_aeefc, &_edfcc); _egdfd != nil {
					return _egdfd
				}
				_aecab.FutureMetadata = append(_aecab.FutureMetadata, _aeefc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_aecab.CellMetadata = NewCT_MetadataBlocks()
				if _dccfgg := d.DecodeElement(_aecab.CellMetadata, &_edfcc); _dccfgg != nil {
					return _dccfgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_aecab.ValueMetadata = NewCT_MetadataBlocks()
				if _gfadf := d.DecodeElement(_aecab.ValueMetadata, &_edfcc); _gfadf != nil {
					return _gfadf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aecab.ExtLst = NewCT_ExtensionList()
				if _abgfg := d.DecodeElement(_aecab.ExtLst, &_edfcc); _abgfg != nil {
					return _abgfg
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _edfcc.Name)
				if _cbfag := d.Skip(); _cbfag != nil {
					return _cbfag
				}
			}
		case _a.EndElement:
			break _gdacb
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ExternalBook and its children
func (_ccaa *CT_ExternalBook) Validate() error {
	return _ccaa.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b")
}
func NewCT_DataValidations() *CT_DataValidations { _acfaa := &CT_DataValidations{}; return _acfaa }
func (_caedd ST_CellType) ValidateWithPath(path string) error {
	switch _caedd {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_caedd))
	}
	return nil
}
func (_adecbe ST_CellType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_adecbe.String(), start)
}
func (_cggfcc ST_GrowShrinkType) Validate() error { return _cggfcc.ValidateWithPath("") }

type CT_PCDSDTCEntries struct {

	// Tuple Count
	CountAttr *uint32

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String
}
type CT_PCDKPI struct {

	// KPI Unique Name
	UniqueNameAttr string

	// KPI Display Name
	CaptionAttr *string

	// KPI Display Folder
	DisplayFolderAttr *string

	// KPI Measure Group Name
	MeasureGroupAttr *string

	// Parent KPI
	ParentAttr *string

	// KPI Value Unique Name
	ValueAttr string

	// KPI Goal Unique Name
	GoalAttr *string

	// KPI Status Unique Name
	StatusAttr *string

	// KPI Trend Unique Name
	TrendAttr *string

	// KPI Weight Unique Name
	WeightAttr *string

	// Time Member KPI Unique Name
	TimeAttr *string
}

func (_cfbaa *CT_ProtectedRange) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ffaac := range start.Attr {
		if _ffaac.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_fegda, _bcgcb := _ffaac.Value, error(nil)
			if _bcgcb != nil {
				return _bcgcb
			}
			_cfbaa.PasswordAttr = &_fegda
			continue
		}
		if _ffaac.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_fgfdc, _gfdgf := ParseSliceST_Sqref(_ffaac.Value)
			if _gfdgf != nil {
				return _gfdgf
			}
			_cfbaa.SqrefAttr = _fgfdc
			continue
		}
		if _ffaac.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gcdgb, _cbgdd := _ffaac.Value, error(nil)
			if _cbgdd != nil {
				return _cbgdd
			}
			_cfbaa.NameAttr = _gcdgb
			continue
		}
		if _ffaac.Name.Local == "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072" {
			_afdcec, _efbdb := _ffaac.Value, error(nil)
			if _efbdb != nil {
				return _efbdb
			}
			_cfbaa.SecurityDescriptorAttr = &_afdcec
			continue
		}
		if _ffaac.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_gabge, _cbdad := _ffaac.Value, error(nil)
			if _cbdad != nil {
				return _cbdad
			}
			_cfbaa.AlgorithmNameAttr = &_gabge
			continue
		}
		if _ffaac.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_acgbg, _gdcae := _ffaac.Value, error(nil)
			if _gdcae != nil {
				return _gdcae
			}
			_cfbaa.HashValueAttr = &_acgbg
			continue
		}
		if _ffaac.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_bfbfe, _abedac := _ffaac.Value, error(nil)
			if _abedac != nil {
				return _abedac
			}
			_cfbaa.SaltValueAttr = &_bfbfe
			continue
		}
		if _ffaac.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_dbgcb, _gbgged := _f.ParseUint(_ffaac.Value, 10, 32)
			if _gbgged != nil {
				return _gbgged
			}
			_adcea := uint32(_dbgcb)
			_cfbaa.SpinCountAttr = &_adcea
			continue
		}
	}
_fgdcf:
	for {
		_aeeca, _bcfbf := d.Token()
		if _bcfbf != nil {
			return _bcfbf
		}
		switch _fbabd := _aeeca.(type) {
		case _a.StartElement:
			switch _fbabd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}:
				var _eecff string
				if _aacggf := d.DecodeElement(&_eecff, &_fbabd); _aacggf != nil {
					return _aacggf
				}
				_cfbaa.SecurityDescriptor = append(_cfbaa.SecurityDescriptor, _eecff)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0020\u0025\u0076", _fbabd.Name)
				if _fbggf := d.Skip(); _fbggf != nil {
					return _fbggf
				}
			}
		case _a.EndElement:
			break _fgdcf
		case _a.CharData:
		}
	}
	return nil
}

type CT_RevisionCellChange struct {

	// Sheet Id
	SIdAttr uint32

	// Old Formatting Information
	OdxfAttr *bool

	// Row Column Formatting Change
	XfDxfAttr *bool

	// Style Revision
	SAttr *bool

	// Formatting
	DxfAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Quote Prefix
	QuotePrefixAttr *bool

	// Old Quote Prefix
	OldQuotePrefixAttr *bool

	// Phonetic Text
	PhAttr *bool

	// Old Phonetic Text
	OldPhAttr *bool

	// End of List Formula Update
	EndOfListFormulaUpdateAttr *bool

	// Old Cell Data
	Oc *CT_Cell

	// New Cell Data
	Nc *CT_Cell

	// Old Formatting Information
	Odxf *CT_Dxf

	// New Formatting Information
	Ndxf    *CT_Dxf
	ExtLst  *CT_ExtensionList
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}
type CT_GradientFill struct {

	// Gradient Fill Type
	TypeAttr ST_GradientType

	// Linear Gradient Degree
	DegreeAttr *float64

	// Left Convergence
	LeftAttr *float64

	// Right Convergence
	RightAttr *float64

	// Top Gradient Convergence
	TopAttr *float64

	// Bottom Convergence
	BottomAttr *float64

	// Gradient Stop
	Stop []*CT_GradientStop
}

func NewCT_SheetId() *CT_SheetId { _eebdg := &CT_SheetId{}; return _eebdg }
func (_bgeaca *CT_ServerFormat) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ddfdc := range start.Attr {
		if _ddfdc.Name.Local == "\u0063u\u006c\u0074\u0075\u0072\u0065" {
			_ggbfbb, _caffbe := _ddfdc.Value, error(nil)
			if _caffbe != nil {
				return _caffbe
			}
			_bgeaca.CultureAttr = &_ggbfbb
			continue
		}
		if _ddfdc.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074" {
			_ffeba, _dadbc := _ddfdc.Value, error(nil)
			if _dadbc != nil {
				return _dadbc
			}
			_bgeaca.FormatAttr = &_ffeba
			continue
		}
	}
	for {
		_eadgd, _beca := d.Token()
		if _beca != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u0065\u0072\u0076\u0065\u0072F\u006f\u0072\u006da\u0074:\u0020\u0025\u0073", _beca)
		}
		if _efbfg, _efgbba := _eadgd.(_a.EndElement); _efgbba && _efbfg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gbedg *CT_Drawing) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _gbedg.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SheetBackgroundPicture and its children, prefixing error messages with path
func (_bcbca *CT_SheetBackgroundPicture) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_CellStyleXfs and its children, prefixing error messages with path
func (_baaf *CT_CellStyleXfs) ValidateWithPath(path string) error {
	for _caag, _eaef := range _baaf.Xf {
		if _cgacd := _eaef.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0058\u0066\u005b\u0025\u0064]", path, _caag)); _cgacd != nil {
			return _cgacd
		}
	}
	return nil
}
func (_eggac *CT_pivotTableDefinition) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eggac.Location = NewCT_Location()
	for _, _fcaea := range start.Attr {
		if _fcaea.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_bdbcaa, _bgffgd := _f.ParseUint(_fcaea.Value, 10, 8)
			if _bgffgd != nil {
				return _bgffgd
			}
			_dccbe := uint8(_bdbcaa)
			_eggac.CreatedVersionAttr = &_dccbe
			continue
		}
		if _fcaea.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_gecbaa, _dfcggag := _f.ParseUint(_fcaea.Value, 10, 32)
			if _dfcggag != nil {
				return _dfcggag
			}
			_bcbef := uint32(_gecbaa)
			_eggac.IndentAttr = &_bcbef
			continue
		}
		if _fcaea.Name.Local == "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065" {
			_fefbgf, _cfcbc := _fcaea.Value, error(nil)
			if _cfcbc != nil {
				return _cfcbc
			}
			_eggac.PivotTableStyleAttr = &_fefbgf
			continue
		}
		if _fcaea.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077" {
			_afaff, _dggaag := _f.ParseBool(_fcaea.Value)
			if _dggaag != nil {
				return _dggaag
			}
			_eggac.ShowEmptyRowAttr = &_afaff
			continue
		}
		if _fcaea.Name.Local == "\u0074\u0061\u0067" {
			_bafebc, _fgbf := _fcaea.Value, error(nil)
			if _fgbf != nil {
				return _fgbf
			}
			_eggac.TagAttr = &_bafebc
			continue
		}
		if _fcaea.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c" {
			_eeebae, _cdffc := _f.ParseBool(_fcaea.Value)
			if _cdffc != nil {
				return _cdffc
			}
			_eggac.ShowEmptyColAttr = &_eeebae
			continue
		}
		if _fcaea.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_cggcdfb, _cgaggf := _f.ParseUint(_fcaea.Value, 10, 8)
			if _cgaggf != nil {
				return _cgaggf
			}
			_eged := uint8(_cggcdfb)
			_eggac.MinRefreshableVersionAttr = &_eged
			continue
		}
		if _fcaea.Name.Local == "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073" {
			_edgegc, _eddcba := _f.ParseBool(_fcaea.Value)
			if _eddcba != nil {
				return _eddcba
			}
			_eggac.ShowHeadersAttr = &_edgegc
			continue
		}
		if _fcaea.Name.Local == "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073" {
			_cgdcaf, _dbfecc := _f.ParseBool(_fcaea.Value)
			if _dbfecc != nil {
				return _dbfecc
			}
			_eggac.AsteriskTotalsAttr = &_cgdcaf
			continue
		}
		if _fcaea.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_cfffa, _ddgbf := _f.ParseBool(_fcaea.Value)
			if _ddgbf != nil {
				return _ddgbf
			}
			_eggac.CompactAttr = &_cfffa
			continue
		}
		if _fcaea.Name.Local == "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061" {
			_aggbbe, _gdedcb := _f.ParseBool(_fcaea.Value)
			if _gdedcb != nil {
				return _gdedcb
			}
			_eggac.EditDataAttr = &_aggbbe
			continue
		}
		if _fcaea.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_bfcgdf, _ecafeb := _f.ParseBool(_fcaea.Value)
			if _ecafeb != nil {
				return _ecafeb
			}
			_eggac.OutlineAttr = &_bfcgdf
			continue
		}
		if _fcaea.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073" {
			_bcedgd, _dcfbb := _f.ParseBool(_fcaea.Value)
			if _dcfbb != nil {
				return _dcfbb
			}
			_eggac.ShowCalcMbrsAttr = &_bcedgd
			continue
		}
		if _fcaea.Name.Local == "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061" {
			_cfeeg, _ebgdad := _f.ParseBool(_fcaea.Value)
			if _ebgdad != nil {
				return _ebgdad
			}
			_eggac.OutlineDataAttr = &_cfeeg
			continue
		}
		if _fcaea.Name.Local == "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_fedccf, _ccgggf := _f.ParseBool(_fcaea.Value)
			if _ccgggf != nil {
				return _ccgggf
			}
			_eggac.GridDropZonesAttr = &_fedccf
			continue
		}
		if _fcaea.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074" {
			_cebbdc, _bdgegg := _f.ParseBool(_fcaea.Value)
			if _bdgegg != nil {
				return _bdgegg
			}
			_eggac.CustomListSortAttr = &_cebbdc
			continue
		}
		if _fcaea.Name.Local == "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_bgddcd, _fbeceg := _f.ParseBool(_fcaea.Value)
			if _fbeceg != nil {
				return _fbeceg
			}
			_eggac.RowGrandTotalsAttr = &_bgddcd
			continue
		}
		if _fcaea.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bdgfeg, _cdebb := _f.ParseBool(_fcaea.Value)
			if _cdebb != nil {
				return _cdebb
			}
			_eggac.ApplyWidthHeightFormatsAttr = &_bdgfeg
			continue
		}
		if _fcaea.Name.Local == "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_befba, _bfgaag := _f.ParseBool(_fcaea.Value)
			if _bfgaag != nil {
				return _bfgaag
			}
			_eggac.UseAutoFormattingAttr = &_befba
			continue
		}
		if _fcaea.Name.Local == "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_gbada, _gdabg := _fcaea.Value, error(nil)
			if _gdabg != nil {
				return _gdabg
			}
			_eggac.RowHeaderCaptionAttr = &_gbada
			continue
		}
		if _fcaea.Name.Local == "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl" {
			_eadcdfd, _gcgce := _f.ParseBool(_fcaea.Value)
			if _gcgce != nil {
				return _gcgce
			}
			_eggac.ShowDrillAttr = &_eadcdfd
			continue
		}
		if _fcaea.Name.Local == "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m" {
			_gfcgcg, _dbdbf := _f.ParseBool(_fcaea.Value)
			if _dbdbf != nil {
				return _dbdbf
			}
			_eggac.MergeItemAttr = &_gfcgcg
			continue
		}
		if _fcaea.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_agfebf, _afgce := _f.ParseBool(_fcaea.Value)
			if _afgce != nil {
				return _afgce
			}
			_eggac.ApplyBorderFormatsAttr = &_agfebf
			continue
		}
		if _fcaea.Name.Local == "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073" {
			_gfdceg, _dgddbg := _f.ParseBool(_fcaea.Value)
			if _dgddbg != nil {
				return _dgddbg
			}
			_eggac.VisualTotalsAttr = &_gfdceg
			continue
		}
		if _fcaea.Name.Local == "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061" {
			_ccafa, _bbafbg := _f.ParseBool(_fcaea.Value)
			if _bbafbg != nil {
				return _bbafbg
			}
			_eggac.CompactDataAttr = &_ccafa
			continue
		}
		if _fcaea.Name.Local == "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_eggedf, _effabe := _f.ParseUint(_fcaea.Value, 10, 32)
			if _effabe != nil {
				return _effabe
			}
			_aedgd := uint32(_eggedf)
			_eggac.DataPositionAttr = &_aedgd
			continue
		}
		if _fcaea.Name.Local == "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073" {
			_gcdfb, _ffeecc := _f.ParseBool(_fcaea.Value)
			if _ffeecc != nil {
				return _ffeecc
			}
			_eggac.MultipleFieldFiltersAttr = &_gcdfb
			continue
		}
		if _fcaea.Name.Local == "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e" {
			_fbecbf, _ffgfd := _f.ParseBool(_fcaea.Value)
			if _ffgfd != nil {
				return _ffgfd
			}
			_eggac.PageOverThenDownAttr = &_fbecbf
			continue
		}
		if _fcaea.Name.Local == "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067" {
			_gbacc, _feddf := _f.ParseBool(_fcaea.Value)
			if _feddf != nil {
				return _feddf
			}
			_eggac.FieldListSortAscendingAttr = &_gbacc
			continue
		}
		if _fcaea.Name.Local == "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067" {
			_gcegaa, _aeegf := _f.ParseBool(_fcaea.Value)
			if _aeegf != nil {
				return _aeegf
			}
			_eggac.ShowMissingAttr = &_gcegaa
			continue
		}
		if _fcaea.Name.Local == "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_bgbea, _ffffe := _f.ParseBool(_fcaea.Value)
			if _ffffe != nil {
				return _ffffe
			}
			_eggac.FieldPrintTitlesAttr = &_bgbea
			continue
		}
		if _fcaea.Name.Local == "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073" {
			_fgeba, _edfcf := _f.ParseBool(_fcaea.Value)
			if _edfcf != nil {
				return _edfcf
			}
			_eggac.ShowMemberPropertyTipsAttr = &_fgeba
			continue
		}
		if _fcaea.Name.Local == "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce" {
			_bdgcg, _edcga := _fcaea.Value, error(nil)
			if _edcga != nil {
				return _edcga
			}
			_eggac.PageStyleAttr = &_bdgcg
			continue
		}
		if _fcaea.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_ababcf, _cbbbc := _f.ParseUint(_fcaea.Value, 10, 32)
			if _cbbbc != nil {
				return _cbbbc
			}
			_ebcdag := uint32(_ababcf)
			_eggac.AutoFormatIdAttr = &_ebcdag
			continue
		}
		if _fcaea.Name.Local == "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds" {
			_cadgff, _dgebc := _f.ParseBool(_fcaea.Value)
			if _dgebc != nil {
				return _dgebc
			}
			_eggac.ShowItemsAttr = &_cadgff
			continue
		}
		if _fcaea.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cegff, _edeegd := _f.ParseBool(_fcaea.Value)
			if _edeegd != nil {
				return _edeegd
			}
			_eggac.ApplyPatternFormatsAttr = &_cegff
			continue
		}
		if _fcaea.Name.Local == "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073" {
			_ebfgb, _abcda := _f.ParseBool(_fcaea.Value)
			if _abcda != nil {
				return _abcda
			}
			_eggac.EnableFieldPropertiesAttr = &_ebfgb
			continue
		}
		if _fcaea.Name.Local == "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c" {
			_cfdgd, _ccfag := _f.ParseBool(_fcaea.Value)
			if _ccfag != nil {
				return _ccfag
			}
			_eggac.ShowMultipleLabelAttr = &_cfdgd
			continue
		}
		if _fcaea.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_bdcdgaf, _efcdfb := _f.ParseBool(_fcaea.Value)
			if _efcdfb != nil {
				return _efcdfb
			}
			_eggac.PreserveFormattingAttr = &_bdcdgaf
			continue
		}
		if _fcaea.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_cacce, _ddada := _f.ParseBool(_fcaea.Value)
			if _ddada != nil {
				return _ddada
			}
			_eggac.PublishedAttr = &_cacce
			continue
		}
		if _fcaea.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_gdcgb, _bgabc := _fcaea.Value, error(nil)
			if _bgabc != nil {
				return _bgabc
			}
			_eggac.MissingCaptionAttr = &_gdcgb
			continue
		}
		if _fcaea.Name.Local == "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e" {
			_fbebg, _bebed := _f.ParseBool(_fcaea.Value)
			if _bebed != nil {
				return _bebed
			}
			_eggac.ImmersiveAttr = &_fbebg
			continue
		}
		if _fcaea.Name.Local == "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070" {
			_cfeaaf, _effbd := _f.ParseUint(_fcaea.Value, 10, 32)
			if _effbd != nil {
				return _effbd
			}
			_ccgfa := uint32(_cfeaaf)
			_eggac.PageWrapAttr = &_ccgfa
			continue
		}
		if _fcaea.Name.Local == "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074" {
			_edgge, _cbeec := _f.ParseUint(_fcaea.Value, 10, 32)
			if _cbeec != nil {
				return _cbeec
			}
			_cgddcg := uint32(_edgge)
			_eggac.ChartFormatAttr = &_cgddcg
			continue
		}
		if _fcaea.Name.Local == "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_fdcae, _bgbag := _f.ParseBool(_fcaea.Value)
			if _bgbag != nil {
				return _bgbag
			}
			_eggac.ShowDataDropDownAttr = &_fdcae
			continue
		}
		if _fcaea.Name.Local == "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_bcbfee, _ffbcbc := _fcaea.Value, error(nil)
			if _ffbcbc != nil {
				return _ffbcbc
			}
			_eggac.ColHeaderCaptionAttr = &_bcbfee
			continue
		}
		if _fcaea.Name.Local == "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073" {
			_cdgeba, _fecfbg := _f.ParseBool(_fcaea.Value)
			if _fecfbg != nil {
				return _fecfbg
			}
			_eggac.SubtotalHiddenItemsAttr = &_cdgeba
			continue
		}
		if _fcaea.Name.Local == "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073" {
			_bbbfd, _gadfa := _f.ParseBool(_fcaea.Value)
			if _gadfa != nil {
				return _gadfa
			}
			_eggac.MdxSubqueriesAttr = &_bbbfd
			continue
		}
		if _fcaea.Name.Local == "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_egfg, _gcedd := _fcaea.Value, error(nil)
			if _gcedd != nil {
				return _gcedd
			}
			_eggac.ErrorCaptionAttr = &_egfg
			continue
		}
		if _fcaea.Name.Local == "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_dbeeb, _gdaaf := _f.ParseBool(_fcaea.Value)
			if _gdaaf != nil {
				return _gdaaf
			}
			_eggac.ColGrandTotalsAttr = &_dbeeb
			continue
		}
		if _fcaea.Name.Local == "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c" {
			_ggfbba, _egdfab := _f.ParseBool(_fcaea.Value)
			if _egdfab != nil {
				return _egdfab
			}
			_eggac.PrintDrillAttr = &_ggfbba
			continue
		}
		if _fcaea.Name.Local == "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_egffgd, _dgggb := _f.ParseBool(_fcaea.Value)
			if _dgggb != nil {
				return _dgggb
			}
			_eggac.ItemPrintTitlesAttr = &_egffgd
			continue
		}
		if _fcaea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_feaceg, _fegad := _fcaea.Value, error(nil)
			if _fegad != nil {
				return _fegad
			}
			_eggac.NameAttr = _feaceg
			continue
		}
		if _fcaea.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_abgee, _bgfebf := _f.ParseBool(_fcaea.Value)
			if _bgfebf != nil {
				return _bgfebf
			}
			_eggac.ShowDropZonesAttr = &_abgee
			continue
		}
		if _fcaea.Name.Local == "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073" {
			_gbdbbc, _ggcccd := _f.ParseBool(_fcaea.Value)
			if _ggcccd != nil {
				return _ggcccd
			}
			_eggac.ShowDataTipsAttr = &_gbdbbc
			continue
		}
		if _fcaea.Name.Local == "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065" {
			_ddgdab, _aegca := _fcaea.Value, error(nil)
			if _aegca != nil {
				return _aegca
			}
			_eggac.VacatedStyleAttr = &_ddgdab
			continue
		}
		if _fcaea.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_fgef, _daeff := _fcaea.Value, error(nil)
			if _daeff != nil {
				return _daeff
			}
			_eggac.GrandTotalCaptionAttr = &_fgef
			continue
		}
		if _fcaea.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_dgeaa, _fefagbg := _f.ParseBool(_fcaea.Value)
			if _fefagbg != nil {
				return _fefagbg
			}
			_eggac.ApplyNumberFormatsAttr = &_dgeaa
			continue
		}
		if _fcaea.Name.Local == "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c" {
			_ecbde, _dbfbfa := _f.ParseBool(_fcaea.Value)
			if _dbfbfa != nil {
				return _dbfbfa
			}
			_eggac.EnableDrillAttr = &_ecbde
			continue
		}
		if _fcaea.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gafac, _aeefb := _f.ParseBool(_fcaea.Value)
			if _aeefb != nil {
				return _aeefb
			}
			_eggac.ApplyFontFormatsAttr = &_gafac
			continue
		}
		if _fcaea.Name.Local == "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_ggbcg, _cfcdf := _f.ParseBool(_fcaea.Value)
			if _cfcdf != nil {
				return _cfcdf
			}
			_eggac.DisableFieldListAttr = &_ggbcg
			continue
		}
		if _fcaea.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_aeeeb, _beefge := _f.ParseBool(_fcaea.Value)
			if _beefge != nil {
				return _beefge
			}
			_eggac.ApplyAlignmentFormatsAttr = &_aeeeb
			continue
		}
		if _fcaea.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073" {
			_bceff, _bddce := _f.ParseBool(_fcaea.Value)
			if _bddce != nil {
				return _bddce
			}
			_eggac.DataOnRowsAttr = &_bceff
			continue
		}
		if _fcaea.Name.Local == "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_cdeda, _ccfggg := _fcaea.Value, error(nil)
			if _ccfggg != nil {
				return _ccfggg
			}
			_eggac.DataCaptionAttr = _cdeda
			continue
		}
		if _fcaea.Name.Local == "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr" {
			_ecfeef, _ceeba := _f.ParseBool(_fcaea.Value)
			if _ceeba != nil {
				return _ceeba
			}
			_eggac.ShowErrorAttr = &_ecfeef
			continue
		}
		if _fcaea.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_bdcgef, _cbfab := _f.ParseUint(_fcaea.Value, 10, 32)
			if _cbfab != nil {
				return _cbfab
			}
			_eggac.CacheIdAttr = uint32(_bdcgef)
			continue
		}
		if _fcaea.Name.Local == "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064" {
			_gggaec, _adgga := _f.ParseBool(_fcaea.Value)
			if _adgga != nil {
				return _adgga
			}
			_eggac.EnableWizardAttr = &_gggaec
			continue
		}
		if _fcaea.Name.Local == "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_bcgcgc, _dgfgc := _f.ParseUint(_fcaea.Value, 10, 8)
			if _dgfgc != nil {
				return _dgfgc
			}
			_cbgffg := uint8(_bcgcgc)
			_eggac.UpdatedVersionAttr = &_cbgffg
			continue
		}
	}
_egbfg:
	for {
		_efgaf, _fababg := d.Token()
		if _fababg != nil {
			return _fababg
		}
		switch _gbfdca := _efgaf.(type) {
		case _a.StartElement:
			switch _gbfdca.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}:
				if _gcecb := d.DecodeElement(_eggac.Location, &_gbfdca); _gcecb != nil {
					return _gcecb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_eggac.PivotFields = NewCT_PivotFields()
				if _ffdgd := d.DecodeElement(_eggac.PivotFields, &_gbfdca); _ffdgd != nil {
					return _ffdgd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}:
				_eggac.RowFields = NewCT_RowFields()
				if _dgbdag := d.DecodeElement(_eggac.RowFields, &_gbfdca); _dgbdag != nil {
					return _dgbdag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}:
				_eggac.RowItems = NewCT_rowItems()
				if _egaeg := d.DecodeElement(_eggac.RowItems, &_gbfdca); _egaeg != nil {
					return _egaeg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}:
				_eggac.ColFields = NewCT_ColFields()
				if _bcfaea := d.DecodeElement(_eggac.ColFields, &_gbfdca); _bcfaea != nil {
					return _bcfaea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}:
				_eggac.ColItems = NewCT_colItems()
				if _eceff := d.DecodeElement(_eggac.ColItems, &_gbfdca); _eceff != nil {
					return _eceff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_eggac.PageFields = NewCT_PageFields()
				if _bgfde := d.DecodeElement(_eggac.PageFields, &_gbfdca); _bgfde != nil {
					return _bgfde
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_eggac.DataFields = NewCT_DataFields()
				if _eagbf := d.DecodeElement(_eggac.DataFields, &_gbfdca); _eagbf != nil {
					return _eagbf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}:
				_eggac.Formats = NewCT_Formats()
				if _gdcagb := d.DecodeElement(_eggac.Formats, &_gbfdca); _gdcagb != nil {
					return _gdcagb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}:
				_eggac.ConditionalFormats = NewCT_ConditionalFormats()
				if _eabffe := d.DecodeElement(_eggac.ConditionalFormats, &_gbfdca); _eabffe != nil {
					return _eabffe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_eggac.ChartFormats = NewCT_ChartFormats()
				if _eafagc := d.DecodeElement(_eggac.ChartFormats, &_gbfdca); _eafagc != nil {
					return _eafagc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_eggac.PivotHierarchies = NewCT_PivotHierarchies()
				if _baaed := d.DecodeElement(_eggac.PivotHierarchies, &_gbfdca); _baaed != nil {
					return _baaed
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}:
				_eggac.PivotTableStyleInfo = NewCT_PivotTableStyle()
				if _bfaee := d.DecodeElement(_eggac.PivotTableStyleInfo, &_gbfdca); _bfaee != nil {
					return _bfaee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_eggac.Filters = NewCT_PivotFilters()
				if _gbcede := d.DecodeElement(_eggac.Filters, &_gbfdca); _gbcede != nil {
					return _gbcede
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_eggac.RowHierarchiesUsage = NewCT_RowHierarchiesUsage()
				if _fdcbf := d.DecodeElement(_eggac.RowHierarchiesUsage, &_gbfdca); _fdcbf != nil {
					return _fdcbf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_eggac.ColHierarchiesUsage = NewCT_ColHierarchiesUsage()
				if _eaagaf := d.DecodeElement(_eggac.ColHierarchiesUsage, &_gbfdca); _eaagaf != nil {
					return _eaagaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eggac.ExtLst = NewCT_ExtensionList()
				if _dggee := d.DecodeElement(_eggac.ExtLst, &_gbfdca); _dggee != nil {
					return _dggee
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006ce\u0044\u0065\u0066\u0069\u006e\u0069t\u0069\u006f\u006e \u0025\u0076", _gbfdca.Name)
				if _cbagbf := d.Skip(); _cbagbf != nil {
					return _cbagbf
				}
			}
		case _a.EndElement:
			break _egbfg
		case _a.CharData:
		}
	}
	return nil
}
func (_db *CT_AutoFilter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aba := range start.Attr {
		if _aba.Name.Local == "\u0072\u0065\u0066" {
			_cda, _ffa := _aba.Value, error(nil)
			if _ffa != nil {
				return _ffa
			}
			_db.RefAttr = &_cda
			continue
		}
	}
_aab:
	for {
		_ggf, _ega := d.Token()
		if _ega != nil {
			return _ega
		}
		switch _afc := _ggf.(type) {
		case _a.StartElement:
			switch _afc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}:
				_fbg := NewCT_FilterColumn()
				if _bgg := d.DecodeElement(_fbg, &_afc); _bgg != nil {
					return _bgg
				}
				_db.FilterColumn = append(_db.FilterColumn, _fbg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_db.SortState = NewCT_SortState()
				if _agd := d.DecodeElement(_db.SortState, &_afc); _agd != nil {
					return _agd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_db.ExtLst = NewCT_ExtensionList()
				if _gfb := d.DecodeElement(_db.ExtLst, &_afc); _gfb != nil {
					return _gfb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041u\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072 \u0025\u0076", _afc.Name)
				if _fff := d.Skip(); _fff != nil {
					return _fff
				}
			}
		case _a.EndElement:
			break _aab
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SortCondition and its children, prefixing error messages with path
func (_abdgcb *CT_SortCondition) ValidateWithPath(path string) error {
	if _aaaafde := _abdgcb.SortByAttr.ValidateWithPath(path + "/\u0053\u006f\u0072\u0074\u0042\u0079\u0041\u0074\u0074\u0072"); _aaaafde != nil {
		return _aaaafde
	}
	if _fbeac := _abdgcb.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _fbeac != nil {
		return _fbeac
	}
	return nil
}
func (_debge ST_Pane) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_debge.String(), start)
}
func NewCT_SheetViews() *CT_SheetViews { _dedee := &CT_SheetViews{}; return _dedee }

// Validate validates the CT_ProtectedRange and its children
func (_fccef *CT_ProtectedRange) Validate() error {
	return _fccef.ValidateWithPath("\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065")
}

// ValidateWithPath validates the CT_Member and its children, prefixing error messages with path
func (_fbffd *CT_Member) ValidateWithPath(path string) error { return nil }
func (_ffcad ST_TextVAlign) ValidateWithPath(path string) error {
	switch _ffcad {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffcad))
	}
	return nil
}

type CT_IndexedColors struct {

	// RGB Color
	RgbColor []*CT_RgbColor
}

func (_gaeea *ST_CellComments) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gaeea = 0
	case "\u006e\u006f\u006e\u0065":
		*_gaeea = 1
	case "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064":
		*_gaeea = 2
	case "\u0061\u0074\u0045n\u0064":
		*_gaeea = 3
	}
	return nil
}
func (_fddec *CT_NumFmt) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _fddec.NumFmtIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u0064\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _fddec.FormatCodeAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_baaea *CT_WebPublishItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _baaea.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_baaea.CountAttr)})
	}
	e.EncodeToken(start)
	_fadfe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}}
	for _, _cecad := range _baaea.WebPublishItem {
		e.EncodeElement(_cecad, _fadfe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_VolDepTypeUnset         ST_VolDepType = 0
	ST_VolDepTypeRealTimeData  ST_VolDepType = 1
	ST_VolDepTypeOlapFunctions ST_VolDepType = 2
)

type CT_FieldGroup struct {

	// Parent
	ParAttr *uint32

	// Field Base
	BaseAttr *uint32

	// Range Grouping Properties
	RangePr *CT_RangePr

	// Discrete Grouping Properties
	DiscretePr *CT_DiscretePr

	// OLAP Group Items
	GroupItems *CT_GroupItems
}

// Validate validates the Sst and its children
func (_bbddd *Sst) Validate() error { return _bbddd.ValidateWithPath("\u0053\u0073\u0074") }

// Validate validates the CT_Fonts and its children
func (_fdegf *CT_Fonts) Validate() error {
	return _fdegf.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073")
}
func (_eaecd *CT_VolTypes) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_fcfdee:
	for {
		_ddcge, _dfbfag := d.Token()
		if _dfbfag != nil {
			return _dfbfag
		}
		switch _dbcfg := _ddcge.(type) {
		case _a.StartElement:
			switch _dbcfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}:
				_bccbee := NewCT_VolType()
				if _ffcbd := d.DecodeElement(_bccbee, &_dbcfg); _ffcbd != nil {
					return _ffcbd
				}
				_eaecd.VolType = append(_eaecd.VolType, _bccbee)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eaecd.ExtLst = NewCT_ExtensionList()
				if _gdfdf := d.DecodeElement(_eaecd.ExtLst, &_dbcfg); _gdfdf != nil {
					return _gdfdf
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076", _dbcfg.Name)
				if _afcab := d.Skip(); _afcab != nil {
					return _afcab
				}
			}
		case _a.EndElement:
			break _fcfdee
		case _a.CharData:
		}
	}
	return nil
}

type CT_Macrosheet struct {

	// Sheet Properties
	SheetPr *CT_SheetPr

	// Macro Sheet Dimensions
	Dimension *CT_SheetDimension

	// Macro Sheet Views
	SheetViews *CT_SheetViews

	// Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Column Information
	Cols []*CT_Cols

	// Sheet Data
	SheetData *CT_SheetData

	// Sheet Protection Options
	SheetProtection *CT_SheetProtection

	// AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Data Consolidation
	DataConsolidate *CT_DataConsolidate

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr

	// Conditional Formatting
	ConditionalFormatting []*CT_ConditionalFormatting

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Horizontal Page Breaks (Row)
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Custom Properties
	CustomProperties *CT_CustomProperties

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing Reference
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF

	// Background Image
	Picture *CT_SheetBackgroundPicture

	// Embedded Objects
	OleObjects *CT_OleObjects

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_ConditionalFormatting struct {

	// PivotTable Conditional Formatting
	PivotAttr *bool

	// Sequence of References
	SqrefAttr *ST_Sqref

	// Conditional Formatting Rule
	CfRule []*CT_CfRule
	ExtLst *CT_ExtensionList
}

func (_aafcf *CT_MemberProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aafcf.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_aafcf.NameAttr)})
	}
	if _aafcf.ShowCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u0065\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafcf.ShowCellAttr))})
	}
	if _aafcf.ShowTipAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0054\u0069\u0070"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafcf.ShowTipAttr))})
	}
	if _aafcf.ShowAsCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafcf.ShowAsCaptionAttr))})
	}
	if _aafcf.NameLenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006ea\u006d\u0065\u004c\u0065\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_aafcf.NameLenAttr)})
	}
	if _aafcf.PPosAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0050\u006f\u0073"}, Value: _fc.Sprintf("\u0025\u0076", *_aafcf.PPosAttr)})
	}
	if _aafcf.PLenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u004c\u0065\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_aafcf.PLenAttr)})
	}
	if _aafcf.LevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_aafcf.LevelAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _aafcf.FieldAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cfcab *ST_PivotFilterType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cfcab = 0
	case "\u0075n\u006b\u006e\u006f\u0077\u006e":
		*_cfcab = 1
	case "\u0063\u006f\u0075n\u0074":
		*_cfcab = 2
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_cfcab = 3
	case "\u0073\u0075\u006d":
		*_cfcab = 4
	case "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c":
		*_cfcab = 5
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_cfcab = 6
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068":
		*_cfcab = 7
	case "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068":
		*_cfcab = 8
	case "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_cfcab = 9
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068":
		*_cfcab = 10
	case "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
		*_cfcab = 11
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073":
		*_cfcab = 12
	case "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e":
		*_cfcab = 13
	case "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l":
		*_cfcab = 14
	case "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_cfcab = 15
	case "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c":
		*_cfcab = 16
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_cfcab = 17
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_cfcab = 18
	case "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c":
		*_cfcab = 19
	case "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_cfcab = 20
	case "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_cfcab = 21
	case "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_cfcab = 22
	case "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_cfcab = 23
	case "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_cfcab = 24
	case "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_cfcab = 25
	case "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_cfcab = 26
	case "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l":
		*_cfcab = 27
	case "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_cfcab = 28
	case "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e":
		*_cfcab = 29
	case "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_cfcab = 30
	case "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e":
		*_cfcab = 31
	case "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_cfcab = 32
	case "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_cfcab = 33
	case "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_cfcab = 34
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_cfcab = 35
	case "\u0074\u006f\u0064a\u0079":
		*_cfcab = 36
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_cfcab = 37
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_cfcab = 38
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_cfcab = 39
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_cfcab = 40
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_cfcab = 41
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_cfcab = 42
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_cfcab = 43
	case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_cfcab = 44
	case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_cfcab = 45
	case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_cfcab = 46
	case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
		*_cfcab = 47
	case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
		*_cfcab = 48
	case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
		*_cfcab = 49
	case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
		*_cfcab = 50
	case "\u0051\u0031":
		*_cfcab = 51
	case "\u0051\u0032":
		*_cfcab = 52
	case "\u0051\u0033":
		*_cfcab = 53
	case "\u0051\u0034":
		*_cfcab = 54
	case "\u004d\u0031":
		*_cfcab = 55
	case "\u004d\u0032":
		*_cfcab = 56
	case "\u004d\u0033":
		*_cfcab = 57
	case "\u004d\u0034":
		*_cfcab = 58
	case "\u004d\u0035":
		*_cfcab = 59
	case "\u004d\u0036":
		*_cfcab = 60
	case "\u004d\u0037":
		*_cfcab = 61
	case "\u004d\u0038":
		*_cfcab = 62
	case "\u004d\u0039":
		*_cfcab = 63
	case "\u004d\u0031\u0030":
		*_cfcab = 64
	case "\u004d\u0031\u0031":
		*_cfcab = 65
	case "\u004d\u0031\u0032":
		*_cfcab = 66
	}
	return nil
}
func (_ccgcda ST_HtmlFmt) String() string {
	switch _ccgcda {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0072\u0074\u0066"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}

// ValidateWithPath validates the CT_Chartsheet and its children, prefixing error messages with path
func (_ddbf *CT_Chartsheet) ValidateWithPath(path string) error {
	if _ddbf.SheetPr != nil {
		if _fagc := _ddbf.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _fagc != nil {
			return _fagc
		}
	}
	if _aagbc := _ddbf.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _aagbc != nil {
		return _aagbc
	}
	if _ddbf.SheetProtection != nil {
		if _egff := _ddbf.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _egff != nil {
			return _egff
		}
	}
	if _ddbf.CustomSheetViews != nil {
		if _ffefd := _ddbf.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _ffefd != nil {
			return _ffefd
		}
	}
	if _ddbf.PageMargins != nil {
		if _cdaf := _ddbf.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _cdaf != nil {
			return _cdaf
		}
	}
	if _ddbf.PageSetup != nil {
		if _fcfed := _ddbf.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _fcfed != nil {
			return _fcfed
		}
	}
	if _ddbf.HeaderFooter != nil {
		if _gcd := _ddbf.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _gcd != nil {
			return _gcd
		}
	}
	if _cedcb := _ddbf.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _cedcb != nil {
		return _cedcb
	}
	if _ddbf.LegacyDrawing != nil {
		if _agebb := _ddbf.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _agebb != nil {
			return _agebb
		}
	}
	if _ddbf.LegacyDrawingHF != nil {
		if _ebdg := _ddbf.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _ebdg != nil {
			return _ebdg
		}
	}
	if _ddbf.DrawingHF != nil {
		if _gada := _ddbf.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _gada != nil {
			return _gada
		}
	}
	if _ddbf.Picture != nil {
		if _eega := _ddbf.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _eega != nil {
			return _eega
		}
	}
	if _ddbf.WebPublishItems != nil {
		if _fbgg := _ddbf.WebPublishItems.ValidateWithPath(path + "\u002f\u0057e\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"); _fbgg != nil {
			return _fbgg
		}
	}
	if _ddbf.ExtLst != nil {
		if _egc := _ddbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egc != nil {
			return _egc
		}
	}
	return nil
}
func NewCT_DataField() *CT_DataField { _caeeg := &CT_DataField{}; return _caeeg }

// Validate validates the CT_CellFormula and its children
func (_cgfd *CT_CellFormula) Validate() error {
	return _cgfd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0046\u006fr\u006d\u0075\u006c\u0061")
}
func (_bbgf *CT_CalculatedMembers) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bbgf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bbgf.CountAttr)})
	}
	e.EncodeToken(start)
	_ggeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}}
	for _, _acca := range _bbgf.CalculatedMember {
		e.EncodeElement(_acca, _ggeg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_VolTopicRef and its children
func (_gdfcf *CT_VolTopicRef) Validate() error {
	return _gdfcf.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070i\u0063\u0052\u0065\u0066")
}
func (_afcadf ST_Scope) String() string {
	switch _afcadf {
	case 0:
		return ""
	case 1:
		return "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"
	case 2:
		return "\u0064\u0061\u0074\u0061"
	case 3:
		return "\u0066\u0069\u0065l\u0064"
	}
	return ""
}
func (_dgcbb *CT_WorkbookProtection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgggd := range start.Attr {
		if _fgggd.Name.Local == "\u0072\u0065\u0076\u0069si\u006f\u006e\u0073\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061m\u0065" {
			_fbcbd, _aggba := _fgggd.Value, error(nil)
			if _aggba != nil {
				return _aggba
			}
			_dgcbb.RevisionsAlgorithmNameAttr = &_fbcbd
			continue
		}
		if _fgggd.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073H\u0061\u0073h\u0056\u0061\u006c\u0075\u0065" {
			_degaf, _ecdad := _fgggd.Value, error(nil)
			if _ecdad != nil {
				return _ecdad
			}
			_dgcbb.RevisionsHashValueAttr = &_degaf
			continue
		}
		if _fgggd.Name.Local == "\u0077\u006f\u0072\u006bb\u006f\u006f\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072d\u0043h\u0061\u0072\u0061\u0063\u0074\u0065\u0072S\u0065\u0074" {
			_eagff, _gcegf := _fgggd.Value, error(nil)
			if _gcegf != nil {
				return _gcegf
			}
			_dgcbb.WorkbookPasswordCharacterSetAttr = &_eagff
			continue
		}
		if _fgggd.Name.Local == "\u0072\u0065v\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065rS\u0065\u0074" {
			_bdbad, _eaceed := _fgggd.Value, error(nil)
			if _eaceed != nil {
				return _eaceed
			}
			_dgcbb.RevisionsPasswordCharacterSetAttr = &_bdbad
			continue
		}
		if _fgggd.Name.Local == "\u006c\u006f\u0063\u006b\u0053\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065" {
			_geefgc, _afaba := _f.ParseBool(_fgggd.Value)
			if _afaba != nil {
				return _afaba
			}
			_dgcbb.LockStructureAttr = &_geefgc
			continue
		}
		if _fgggd.Name.Local == "l\u006f\u0063\u006b\u0057\u0069\u006e\u0064\u006f\u0077\u0073" {
			_bcebaa, _eagef := _f.ParseBool(_fgggd.Value)
			if _eagef != nil {
				return _eagef
			}
			_dgcbb.LockWindowsAttr = &_bcebaa
			continue
		}
		if _fgggd.Name.Local == "\u006c\u006f\u0063k\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e" {
			_dbabg, _eaeb := _f.ParseBool(_fgggd.Value)
			if _eaeb != nil {
				return _eaeb
			}
			_dgcbb.LockRevisionAttr = &_dbabg
			continue
		}
		if _fgggd.Name.Local == "\u0077\u006fr\u006b\u0062\u006fo\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_gcdeb, _ffebc := _fgggd.Value, error(nil)
			if _ffebc != nil {
				return _ffebc
			}
			_dgcbb.WorkbookPasswordAttr = &_gcdeb
			continue
		}
		if _fgggd.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073s\u0077\u006f\u0072\u0064" {
			_gdecd, _fceed := _fgggd.Value, error(nil)
			if _fceed != nil {
				return _fceed
			}
			_dgcbb.RevisionsPasswordAttr = &_gdecd
			continue
		}
		if _fgggd.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0061\u006ct\u0056\u0061\u006c\u0075\u0065" {
			_feaca, _fdcbgd := _fgggd.Value, error(nil)
			if _fdcbgd != nil {
				return _fdcbgd
			}
			_dgcbb.RevisionsSaltValueAttr = &_feaca
			continue
		}
		if _fgggd.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0070\u0069n\u0043\u006f\u0075\u006e\u0074" {
			_aacafec, _gcaac := _f.ParseUint(_fgggd.Value, 10, 32)
			if _gcaac != nil {
				return _gcaac
			}
			_aafcd := uint32(_aacafec)
			_dgcbb.RevisionsSpinCountAttr = &_aafcd
			continue
		}
		if _fgggd.Name.Local == "w\u006f\u0072\u006b\u0062oo\u006bA\u006c\u0067\u006f\u0072\u0069t\u0068\u006d\u004e\u0061\u006d\u0065" {
			_cegbdd, _dgfceg := _fgggd.Value, error(nil)
			if _dgfceg != nil {
				return _dgfceg
			}
			_dgcbb.WorkbookAlgorithmNameAttr = &_cegbdd
			continue
		}
		if _fgggd.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0048\u0061\u0073\u0068V\u0061\u006c\u0075\u0065" {
			_edbdg, _edfgb := _fgggd.Value, error(nil)
			if _edfgb != nil {
				return _edfgb
			}
			_dgcbb.WorkbookHashValueAttr = &_edbdg
			continue
		}
		if _fgggd.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0061\u006c\u0074V\u0061\u006c\u0075\u0065" {
			_ebfbd, _fbgda := _fgggd.Value, error(nil)
			if _fbgda != nil {
				return _fbgda
			}
			_dgcbb.WorkbookSaltValueAttr = &_ebfbd
			continue
		}
		if _fgggd.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0070\u0069\u006eC\u006f\u0075\u006e\u0074" {
			_fcbea, _abbba := _f.ParseUint(_fgggd.Value, 10, 32)
			if _abbba != nil {
				return _abbba
			}
			_dcaegc := uint32(_fcbea)
			_dgcbb.WorkbookSpinCountAttr = &_dcaegc
			continue
		}
	}
	for {
		_ebgeb, _bcafa := d.Token()
		if _bcafa != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050r\u006f\u0074\u0065\u0063\u0074\u0069\u006fn\u003a\u0020\u0025\u0073", _bcafa)
		}
		if _cacfe, _bfebdb := _ebgeb.(_a.EndElement); _bfebdb && _cacfe.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_SheetStateUnset      ST_SheetState = 0
	ST_SheetStateVisible    ST_SheetState = 1
	ST_SheetStateHidden     ST_SheetState = 2
	ST_SheetStateVeryHidden ST_SheetState = 3
)

func (_fdcaa *CT_ExternalSheetName) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bdaag := range start.Attr {
		if _bdaag.Name.Local == "\u0076\u0061\u006c" {
			_edcf, _dbfbb := _bdaag.Value, error(nil)
			if _dbfbb != nil {
				return _dbfbb
			}
			_fdcaa.ValAttr = &_edcf
			continue
		}
	}
	for {
		_ebdcf, _aeeg := d.Token()
		if _aeeg != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065r\u006ea\u006c\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _aeeg)
		}
		if _fggg, _ecgb := _ebdcf.(_a.EndElement); _ecgb && _fggg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_WebPublishItems() *CT_WebPublishItems { _bcace := &CT_WebPublishItems{}; return _bcace }

const (
	ST_SourceTypeUnset         ST_SourceType = 0
	ST_SourceTypeWorksheet     ST_SourceType = 1
	ST_SourceTypeExternal      ST_SourceType = 2
	ST_SourceTypeConsolidation ST_SourceType = 3
	ST_SourceTypeScenario      ST_SourceType = 4
)

func (_fddaba ST_VerticalAlignment) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fddaba.String(), start)
}

// Validate validates the CT_Map and its children
func (_bcgcf *CT_Map) Validate() error {
	return _bcgcf.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0070")
}

const (
	ST_ShowDataAsUnset          ST_ShowDataAs = 0
	ST_ShowDataAsNormal         ST_ShowDataAs = 1
	ST_ShowDataAsDifference     ST_ShowDataAs = 2
	ST_ShowDataAsPercent        ST_ShowDataAs = 3
	ST_ShowDataAsPercentDiff    ST_ShowDataAs = 4
	ST_ShowDataAsRunTotal       ST_ShowDataAs = 5
	ST_ShowDataAsPercentOfRow   ST_ShowDataAs = 6
	ST_ShowDataAsPercentOfCol   ST_ShowDataAs = 7
	ST_ShowDataAsPercentOfTotal ST_ShowDataAs = 8
	ST_ShowDataAsIndex          ST_ShowDataAs = 9
)

func (_bfbgb *ST_DataValidationOperator) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cabdf, _cdfadb := d.Token()
	if _cdfadb != nil {
		return _cdfadb
	}
	if _ddfgc, _fcbgc := _cabdf.(_a.EndElement); _fcbgc && _ddfgc.Name == start.Name {
		*_bfbgb = 1
		return nil
	}
	if _aacfad, _fgacbe := _cabdf.(_a.CharData); !_fgacbe {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cabdf)
	} else {
		switch string(_aacfad) {
		case "":
			*_bfbgb = 0
		case "\u0062e\u0074\u0077\u0065\u0065\u006e":
			*_bfbgb = 1
		case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_bfbgb = 2
		case "\u0065\u0071\u0075a\u006c":
			*_bfbgb = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_bfbgb = 4
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_bfbgb = 5
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_bfbgb = 6
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_bfbgb = 7
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_bfbgb = 8
		}
	}
	_cabdf, _cdfadb = d.Token()
	if _cdfadb != nil {
		return _cdfadb
	}
	if _aegbd, _ececb := _cabdf.(_a.EndElement); _ececb && _aegbd.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cabdf)
}

// Validate validates the CT_RevisionMove and its children
func (_fbcdf *CT_RevisionMove) Validate() error {
	return _fbcdf.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065")
}

type CT_ExternalReferences struct {

	// External Reference
	ExternalReference []*CT_ExternalReference
}

// Validate validates the CT_FieldsUsage and its children
func (_cgcce *CT_FieldsUsage) Validate() error {
	return _cgcce.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065")
}
func (_bagg *CT_CommentList) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_edda:
	for {
		_fabb, _fbec := d.Token()
		if _fbec != nil {
			return _fbec
		}
		switch _bdfg := _fabb.(type) {
		case _a.StartElement:
			switch _bdfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}:
				_cgfca := NewCT_Comment()
				if _dbfgg := d.DecodeElement(_cgfca, &_bdfg); _dbfgg != nil {
					return _dbfgg
				}
				_bagg.Comment = append(_bagg.Comment, _cgfca)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074L\u0069s\u0074\u0020\u0025\u0076", _bdfg.Name)
				if _eade := d.Skip(); _eade != nil {
					return _eade
				}
			}
		case _a.EndElement:
			break _edda
		case _a.CharData:
		}
	}
	return nil
}
func (_cfbgb ST_HorizontalAlignment) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cfbgb.String(), start)
}
func (_adgca *CT_OleLink) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _adgca.IdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _adgca.ProgIdAttr)})
	e.EncodeToken(start)
	if _adgca.OleItems != nil {
		_bdcgg := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_adgca.OleItems, _bdcgg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_BookView and its children
func (_cef *CT_BookView) Validate() error {
	return _cef.ValidateWithPath("C\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077")
}

type CT_MetadataStrings struct {

	// MDX Metadata String Count
	CountAttr *uint32

	// MDX Metadata String
	S []*CT_XStringElement
}

func (_ddaeg ST_WebSourceType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fgcgbb := _a.Attr{}
	_fgcgbb.Name = name
	switch _ddaeg {
	case ST_WebSourceTypeUnset:
		_fgcgbb.Value = ""
	case ST_WebSourceTypeSheet:
		_fgcgbb.Value = "\u0073\u0068\u0065e\u0074"
	case ST_WebSourceTypePrintArea:
		_fgcgbb.Value = "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"
	case ST_WebSourceTypeAutoFilter:
		_fgcgbb.Value = "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"
	case ST_WebSourceTypeRange:
		_fgcgbb.Value = "\u0072\u0061\u006eg\u0065"
	case ST_WebSourceTypeChart:
		_fgcgbb.Value = "\u0063\u0068\u0061r\u0074"
	case ST_WebSourceTypePivotTable:
		_fgcgbb.Value = "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065"
	case ST_WebSourceTypeQuery:
		_fgcgbb.Value = "\u0071\u0075\u0065r\u0079"
	case ST_WebSourceTypeLabel:
		_fgcgbb.Value = "\u006c\u0061\u0062e\u006c"
	}
	return _fgcgbb, nil
}
func (_aacbd *CT_Pages) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aacbd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_aacbd.CountAttr)})
	}
	e.EncodeToken(start)
	_ffbfd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0070\u0061\u0067\u0065"}}
	for _, _cebcc := range _aacbd.Page {
		e.EncodeElement(_cebcc, _ffbfd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Stylesheet struct {

	// Number Formats
	NumFmts *CT_NumFmts

	// Fonts
	Fonts *CT_Fonts

	// Fills
	Fills *CT_Fills

	// Borders
	Borders *CT_Borders

	// Formatting Records
	CellStyleXfs *CT_CellStyleXfs

	// Cell Formats
	CellXfs *CT_CellXfs

	// Cell Styles
	CellStyles *CT_CellStyles

	// Formats
	Dxfs *CT_Dxfs

	// Table Styles
	TableStyles *CT_TableStyles

	// Colors
	Colors *CT_Colors

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_Item and its children, prefixing error messages with path
func (_fddcd *CT_Item) ValidateWithPath(path string) error {
	if _acgfb := _fddcd.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _acgfb != nil {
		return _acgfb
	}
	return nil
}

type ST_Axis byte

func (_efcff *CT_TextPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bbfbdd := range start.Attr {
		if _bbfbdd.Name.Local == "\u0074h\u006f\u0075\u0073\u0061\u006e\u0064s" {
			_ccegbg, _dagaec := _bbfbdd.Value, error(nil)
			if _dagaec != nil {
				return _dagaec
			}
			_efcff.ThousandsAttr = &_ccegbg
			continue
		}
		if _bbfbdd.Name.Local == "\u0074\u0061\u0062" {
			_eeac, _gdfbe := _f.ParseBool(_bbfbdd.Value)
			if _gdfbe != nil {
				return _gdfbe
			}
			_efcff.TabAttr = &_eeac
			continue
		}
		if _bbfbdd.Name.Local == "\u0066\u0069\u006c\u0065\u0054\u0079\u0070\u0065" {
			_efcff.FileTypeAttr.UnmarshalXMLAttr(_bbfbdd)
			continue
		}
		if _bbfbdd.Name.Local == "\u0073\u0070\u0061c\u0065" {
			_agfbd, _cbccb := _f.ParseBool(_bbfbdd.Value)
			if _cbccb != nil {
				return _cbccb
			}
			_efcff.SpaceAttr = &_agfbd
			continue
		}
		if _bbfbdd.Name.Local == "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074" {
			_dffbc, _ebcggg := _bbfbdd.Value, error(nil)
			if _ebcggg != nil {
				return _ebcggg
			}
			_efcff.CharacterSetAttr = &_dffbc
			continue
		}
		if _bbfbdd.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065" {
			_ddgfgc, _abdaac := _bbfbdd.Value, error(nil)
			if _abdaac != nil {
				return _abdaac
			}
			_efcff.SourceFileAttr = &_ddgfgc
			continue
		}
		if _bbfbdd.Name.Local == "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065d" {
			_dgfga, _fbcaadc := _f.ParseBool(_bbfbdd.Value)
			if _fbcaadc != nil {
				return _fbcaadc
			}
			_efcff.DelimitedAttr = &_dgfga
			continue
		}
		if _bbfbdd.Name.Local == "\u0064e\u0063\u0069\u006d\u0061\u006c" {
			_aggga, _dcabdb := _bbfbdd.Value, error(nil)
			if _dcabdb != nil {
				return _dcabdb
			}
			_efcff.DecimalAttr = &_aggga
			continue
		}
		if _bbfbdd.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_aedae, _daaeff := _f.ParseBool(_bbfbdd.Value)
			if _daaeff != nil {
				return _daaeff
			}
			_efcff.PromptAttr = &_aedae
			continue
		}
		if _bbfbdd.Name.Local == "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065" {
			_acdfb, _deeac := _f.ParseUint(_bbfbdd.Value, 10, 32)
			if _deeac != nil {
				return _deeac
			}
			_gbcbg := uint32(_acdfb)
			_efcff.CodePageAttr = &_gbcbg
			continue
		}
		if _bbfbdd.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_agdae, _bffgda := _f.ParseUint(_bbfbdd.Value, 10, 32)
			if _bffgda != nil {
				return _bffgda
			}
			_dcbdf := uint32(_agdae)
			_efcff.FirstRowAttr = &_dcbdf
			continue
		}
		if _bbfbdd.Name.Local == "\u0063\u006f\u006dm\u0061" {
			_fabab, _dbedg := _f.ParseBool(_bbfbdd.Value)
			if _dbedg != nil {
				return _dbedg
			}
			_efcff.CommaAttr = &_fabab
			continue
		}
		if _bbfbdd.Name.Local == "\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn" {
			_cbbaee, _baacfe := _f.ParseBool(_bbfbdd.Value)
			if _baacfe != nil {
				return _baacfe
			}
			_efcff.SemicolonAttr = &_cbbaee
			continue
		}
		if _bbfbdd.Name.Local == "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065" {
			_bagdf, _ffggb := _f.ParseBool(_bbfbdd.Value)
			if _ffggb != nil {
				return _ffggb
			}
			_efcff.ConsecutiveAttr = &_bagdf
			continue
		}
		if _bbfbdd.Name.Local == "\u0071u\u0061\u006c\u0069\u0066\u0069\u0065r" {
			_efcff.QualifierAttr.UnmarshalXMLAttr(_bbfbdd)
			continue
		}
		if _bbfbdd.Name.Local == "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065r" {
			_cagdea, _beefe := _bbfbdd.Value, error(nil)
			if _beefe != nil {
				return _beefe
			}
			_efcff.DelimiterAttr = &_cagdea
			continue
		}
	}
_cfbcee:
	for {
		_ecfba, _fbcfb := d.Token()
		if _fbcfb != nil {
			return _fbcfb
		}
		switch _cgdcb := _ecfba.(type) {
		case _a.StartElement:
			switch _cgdcb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_efcff.TextFields = NewCT_TextFields()
				if _baccf := d.DecodeElement(_efcff.TextFields, &_cgdcb); _baccf != nil {
					return _baccf
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0065\u0078t\u0050\u0072 \u0025\u0076", _cgdcb.Name)
				if _ggfdd := d.Skip(); _ggfdd != nil {
					return _ggfdd
				}
			}
		case _a.EndElement:
			break _cfbcee
		case _a.CharData:
		}
	}
	return nil
}
func (_dbdge ST_FormatAction) Validate() error { return _dbdge.ValidateWithPath("") }

const (
	ST_GroupByUnset    ST_GroupBy = 0
	ST_GroupByRange    ST_GroupBy = 1
	ST_GroupBySeconds  ST_GroupBy = 2
	ST_GroupByMinutes  ST_GroupBy = 3
	ST_GroupByHours    ST_GroupBy = 4
	ST_GroupByDays     ST_GroupBy = 5
	ST_GroupByMonths   ST_GroupBy = 6
	ST_GroupByQuarters ST_GroupBy = 7
	ST_GroupByYears    ST_GroupBy = 8
)

func NewCT_CellSmartTag() *CT_CellSmartTag { _cgbc := &CT_CellSmartTag{}; return _cgbc }

// ValidateWithPath validates the CT_BorderPr and its children, prefixing error messages with path
func (_daeg *CT_BorderPr) ValidateWithPath(path string) error {
	if _bdfb := _daeg.StyleAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065\u0041\u0074\u0074\u0072"); _bdfb != nil {
		return _bdfb
	}
	if _daeg.Color != nil {
		if _ebag := _daeg.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _ebag != nil {
			return _ebag
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ChartFormats and its children, prefixing error messages with path
func (_fgegg *CT_ChartFormats) ValidateWithPath(path string) error {
	for _afbcfb, _gbcg := range _fgegg.ChartFormat {
		if _gded := _gbcg.ValidateWithPath(_fc.Sprintf("\u0025s\u002fC\u0068\u0061\u0072\u0074\u0046o\u0072\u006da\u0074\u005b\u0025\u0064\u005d", path, _afbcfb)); _gded != nil {
			return _gded
		}
	}
	return nil
}
func NewCT_FontName() *CT_FontName { _bcaec := &CT_FontName{}; return _bcaec }
func (_affcga *CT_Selection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eebbf := range start.Attr {
		if _eebbf.Name.Local == "\u0070\u0061\u006e\u0065" {
			_affcga.PaneAttr.UnmarshalXMLAttr(_eebbf)
			continue
		}
		if _eebbf.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0065\u006c\u006c" {
			_feede, _gbcec := _eebbf.Value, error(nil)
			if _gbcec != nil {
				return _gbcec
			}
			_affcga.ActiveCellAttr = &_feede
			continue
		}
		if _eebbf.Name.Local == "\u0061\u0063\u0074i\u0076\u0065\u0043\u0065\u006c\u006c\u0049\u0064" {
			_eecggg, _fbgebd := _f.ParseUint(_eebbf.Value, 10, 32)
			if _fbgebd != nil {
				return _fbgebd
			}
			_afdde := uint32(_eecggg)
			_affcga.ActiveCellIdAttr = &_afdde
			continue
		}
		if _eebbf.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_abbac, _fbbeag := ParseSliceST_Sqref(_eebbf.Value)
			if _fbbeag != nil {
				return _fbbeag
			}
			_affcga.SqrefAttr = &_abbac
			continue
		}
	}
	for {
		_ededed, _aecfa := d.Token()
		if _aecfa != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _aecfa)
		}
		if _egdcd, _edeag := _ededed.(_a.EndElement); _edeag && _egdcd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adega *CT_RangeSet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ffeea := range start.Attr {
		if _ffeea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ffeea.Name.Local == "\u0069\u0064" || _ffeea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ffeea.Name.Local == "\u0069\u0064" {
			_ebgea, _gbfaf := _ffeea.Value, error(nil)
			if _gbfaf != nil {
				return _gbfaf
			}
			_adega.IdAttr = &_ebgea
			continue
		}
		if _ffeea.Name.Local == "\u0069\u0031" {
			_dafgg, _dcdae := _f.ParseUint(_ffeea.Value, 10, 32)
			if _dcdae != nil {
				return _dcdae
			}
			_fcebfa := uint32(_dafgg)
			_adega.I1Attr = &_fcebfa
			continue
		}
		if _ffeea.Name.Local == "\u0069\u0033" {
			_gccece, _ebdb := _f.ParseUint(_ffeea.Value, 10, 32)
			if _ebdb != nil {
				return _ebdb
			}
			_cgcab := uint32(_gccece)
			_adega.I3Attr = &_cgcab
			continue
		}
		if _ffeea.Name.Local == "\u0069\u0034" {
			_gfadea, _cfggee := _f.ParseUint(_ffeea.Value, 10, 32)
			if _cfggee != nil {
				return _cfggee
			}
			_bebgb := uint32(_gfadea)
			_adega.I4Attr = &_bebgb
			continue
		}
		if _ffeea.Name.Local == "\u0072\u0065\u0066" {
			_geab, _cegad := _ffeea.Value, error(nil)
			if _cegad != nil {
				return _cegad
			}
			_adega.RefAttr = &_geab
			continue
		}
		if _ffeea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bdccd, _fcege := _ffeea.Value, error(nil)
			if _fcege != nil {
				return _fcege
			}
			_adega.NameAttr = &_bdccd
			continue
		}
		if _ffeea.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_efagg, _bedgdb := _ffeea.Value, error(nil)
			if _bedgdb != nil {
				return _bedgdb
			}
			_adega.SheetAttr = &_efagg
			continue
		}
		if _ffeea.Name.Local == "\u0069\u0032" {
			_effae, _dgedb := _f.ParseUint(_ffeea.Value, 10, 32)
			if _dgedb != nil {
				return _dgedb
			}
			_aaebb := uint32(_effae)
			_adega.I2Attr = &_aaebb
			continue
		}
	}
	for {
		_eeefe, _eeebe := d.Token()
		if _eeebe != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u003a\u0020\u0025\u0073", _eeebe)
		}
		if _deaac, _cdbae := _eeefe.(_a.EndElement); _cdbae && _deaac.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_OleLink() *CT_OleLink { _bebc := &CT_OleLink{}; return _bebc }
func (_adddac ST_IconSetType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_adddac.String(), start)
}
func (_bebag *CT_WebPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bebag.XmlAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bebag.XmlAttr))})
	}
	if _bebag.SourceDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0044\u0061\u0074\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bebag.SourceDataAttr))})
	}
	if _bebag.ParsePreAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0072\u0073\u0065\u0050\u0072\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bebag.ParsePreAttr))})
	}
	if _bebag.ConsecutiveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bebag.ConsecutiveAttr))})
	}
	if _bebag.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bebag.FirstRowAttr))})
	}
	if _bebag.Xl97Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006c\u0039\u0037"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bebag.Xl97Attr))})
	}
	if _bebag.TextDatesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074e\u0078\u0074\u0044\u0061\u0074\u0065s"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bebag.TextDatesAttr))})
	}
	if _bebag.Xl2000Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006c\u0032\u0030\u0030\u0030"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bebag.Xl2000Attr))})
	}
	if _bebag.UrlAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0072\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_bebag.UrlAttr)})
	}
	if _bebag.PostAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u006f\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bebag.PostAttr)})
	}
	if _bebag.HtmlTablesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0074\u006d\u006c\u0054\u0061\u0062\u006c\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bebag.HtmlTablesAttr))})
	}
	if _bebag.HtmlFormatAttr != ST_HtmlFmtUnset {
		_ggbefe, _dgfbgb := _bebag.HtmlFormatAttr.MarshalXMLAttr(_a.Name{Local: "\u0068\u0074\u006d\u006c\u0046\u006f\u0072\u006d\u0061\u0074"})
		if _dgfbgb != nil {
			return _dgfbgb
		}
		start.Attr = append(start.Attr, _ggbefe)
	}
	if _bebag.EditPageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0064\u0069\u0074\u0050\u0061\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_bebag.EditPageAttr)})
	}
	e.EncodeToken(start)
	if _bebag.Tables != nil {
		_cggec := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0074\u0061\u0062\u006c\u0065s"}}
		e.EncodeElement(_bebag.Tables, _cggec)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_InputCells and its children, prefixing error messages with path
func (_fcbf *CT_InputCells) ValidateWithPath(path string) error { return nil }
func NewCT_DdeLink() *CT_DdeLink                                { _afgcg := &CT_DdeLink{}; return _afgcg }

type ST_SortType byte

// Validate validates the CT_DataValidations and its children
func (_gcdb *CT_DataValidations) Validate() error {
	return _gcdb.ValidateWithPath("\u0043T\u005fD\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073")
}

type CT_BorderPr struct {

	// Line Style
	StyleAttr ST_BorderStyle

	// Color
	Color *CT_Color
}

func (_beced *CT_DataField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _beced.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_beced.NameAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006c\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _beced.FldAttr)})
	if _beced.SubtotalAttr != ST_DataConsolidateFunctionUnset {
		_gdadc, _eaedf := _beced.SubtotalAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0075\u0062\u0074\u006f\u0074\u0061\u006c"})
		if _eaedf != nil {
			return _eaedf
		}
		start.Attr = append(start.Attr, _gdadc)
	}
	if _beced.ShowDataAsAttr != ST_ShowDataAsUnset {
		_accea, _feda := _beced.ShowDataAsAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0061\u0074\u0061\u0041\u0073"})
		if _feda != nil {
			return _feda
		}
		start.Attr = append(start.Attr, _accea)
	}
	if _beced.BaseFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062a\u0073\u0065\u0046\u0069\u0065\u006cd"}, Value: _fc.Sprintf("\u0025\u0076", *_beced.BaseFieldAttr)})
	}
	if _beced.BaseItemAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0061\u0073\u0065\u0049\u0074\u0065\u006d"}, Value: _fc.Sprintf("\u0025\u0076", *_beced.BaseItemAttr)})
	}
	if _beced.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_beced.NumFmtIdAttr)})
	}
	e.EncodeToken(start)
	if _beced.ExtLst != nil {
		_bffcc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_beced.ExtLst, _bffcc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_CommentsUnset             ST_Comments = 0
	ST_CommentsCommNone          ST_Comments = 1
	ST_CommentsCommIndicator     ST_Comments = 2
	ST_CommentsCommIndAndComment ST_Comments = 3
)

// Validate validates the CT_WebPublishObjects and its children
func (_geged *CT_WebPublishObjects) Validate() error {
	return _geged.ValidateWithPath("C\u0054_\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073")
}
func (_fdddc ST_TextVAlign) Validate() error { return _fdddc.ValidateWithPath("") }
func (_beebcd *ST_DataValidationErrorStyle) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_beebcd = 0
	case "\u0073\u0074\u006f\u0070":
		*_beebcd = 1
	case "\u0077a\u0072\u006e\u0069\u006e\u0067":
		*_beebcd = 2
	case "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
		*_beebcd = 3
	}
	return nil
}

const (
	ST_IconSetTypeUnset           ST_IconSetType = 0
	ST_IconSetType3Arrows         ST_IconSetType = 1
	ST_IconSetType3ArrowsGray     ST_IconSetType = 2
	ST_IconSetType3Flags          ST_IconSetType = 3
	ST_IconSetType3TrafficLights1 ST_IconSetType = 4
	ST_IconSetType3TrafficLights2 ST_IconSetType = 5
	ST_IconSetType3Signs          ST_IconSetType = 6
	ST_IconSetType3Symbols        ST_IconSetType = 7
	ST_IconSetType3Symbols2       ST_IconSetType = 8
	ST_IconSetType4Arrows         ST_IconSetType = 9
	ST_IconSetType4ArrowsGray     ST_IconSetType = 10
	ST_IconSetType4RedToBlack     ST_IconSetType = 11
	ST_IconSetType4Rating         ST_IconSetType = 12
	ST_IconSetType4TrafficLights  ST_IconSetType = 13
	ST_IconSetType5Arrows         ST_IconSetType = 14
	ST_IconSetType5ArrowsGray     ST_IconSetType = 15
	ST_IconSetType5Rating         ST_IconSetType = 16
	ST_IconSetType5Quarters       ST_IconSetType = 17
)

type CT_Cell struct {

	// Reference
	RAttr *string

	// Style Index
	SAttr *uint32

	// Cell Data Type
	TAttr ST_CellType

	// Cell Metadata Index
	CmAttr *uint32

	// Value Metadata Index
	VmAttr *uint32

	// Show Phonetic
	PhAttr *bool

	// Formula
	F *CT_CellFormula

	// Cell Value
	V *string

	// Rich Text Inline
	Is *CT_Rst

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_rowItems and its children
func (_cffgd *CT_rowItems) Validate() error {
	return _cffgd.ValidateWithPath("C\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073")
}

// ValidateWithPath validates the CT_LegacyDrawing and its children, prefixing error messages with path
func (_bfdbb *CT_LegacyDrawing) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_ColorScale and its children, prefixing error messages with path
func (_eaca *CT_ColorScale) ValidateWithPath(path string) error {
	for _ccbb, _ffbdc := range _eaca.Cfvo {
		if _acgdd := _ffbdc.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _ccbb)); _acgdd != nil {
			return _acgdd
		}
	}
	for _abgbd, _cffbee := range _eaca.Color {
		if _bceg := _cffbee.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _abgbd)); _bceg != nil {
			return _bceg
		}
	}
	return nil
}
func NewCT_Workbook() *CT_Workbook {
	_fgcdee := &CT_Workbook{}
	_fgcdee.Sheets = NewCT_Sheets()
	return _fgcdee
}
func (_fdgaf *CT_FileRecoveryPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fdgaf.AutoRecoverAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0075\u0074\u006f\u0052\u0065\u0063\u006f\u0076\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdgaf.AutoRecoverAttr))})
	}
	if _fdgaf.CrashSaveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063r\u0061\u0073\u0068\u0053\u0061\u0076e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdgaf.CrashSaveAttr))})
	}
	if _fdgaf.DataExtractLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064a\u0074a\u0045\u0078\u0074\u0072\u0061\u0063\u0074\u004c\u006f\u0061\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdgaf.DataExtractLoadAttr))})
	}
	if _fdgaf.RepairLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0070\u0061\u0069\u0072\u004c\u006f\u0061\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdgaf.RepairLoadAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bbgee *CT_Tuples) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bbgee.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_bbgee.CAttr)})
	}
	e.EncodeToken(start)
	_afagbb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074\u0070\u006c"}}
	for _, _ccbeb := range _bbgee.Tpl {
		e.EncodeElement(_ccbeb, _afagbb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_efaeg ST_FormulaExpression) Validate() error { return _efaeg.ValidateWithPath("") }

type CT_Table struct {

	// Table Id
	IdAttr uint32

	// Name
	NameAttr *string

	// Table Name
	DisplayNameAttr string

	// Table Comment
	CommentAttr *string

	// Reference
	RefAttr string

	// Table Type
	TableTypeAttr ST_TableType

	// Header Row Count
	HeaderRowCountAttr *uint32

	// Insert Row Showing
	InsertRowAttr *bool

	// Insert Row Shift
	InsertRowShiftAttr *bool

	// Totals Row Count
	TotalsRowCountAttr *uint32

	// Totals Row Shown
	TotalsRowShownAttr *bool

	// Published
	PublishedAttr *bool

	// Header Row Format Id
	HeaderRowDxfIdAttr *uint32

	// Data Area Format Id
	DataDxfIdAttr *uint32

	// Totals Row Format Id
	TotalsRowDxfIdAttr *uint32

	// Header Row Border Format Id
	HeaderRowBorderDxfIdAttr *uint32

	// Table Border Format Id
	TableBorderDxfIdAttr *uint32

	// Totals Row Border Format Id
	TotalsRowBorderDxfIdAttr *uint32

	// Header Row Style
	HeaderRowCellStyleAttr *string

	// Data Style Name
	DataCellStyleAttr *string

	// Totals Row Style
	TotalsRowCellStyleAttr *string

	// Connection ID
	ConnectionIdAttr *uint32

	// Table AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Table Columns
	TableColumns *CT_TableColumns

	// Table Style
	TableStyleInfo *CT_TableStyleInfo

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_caacf *CT_Comments) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_caacf.Authors = NewCT_Authors()
	_caacf.CommentList = NewCT_CommentList()
_bbdec:
	for {
		_ddbb, _fagb := d.Token()
		if _fagb != nil {
			return _fagb
		}
		switch _eedg := _ddbb.(type) {
		case _a.StartElement:
			switch _eedg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}:
				if _dagac := d.DecodeElement(_caacf.Authors, &_eedg); _dagac != nil {
					return _dagac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}:
				if _afgff := d.DecodeElement(_caacf.CommentList, &_eedg); _afgff != nil {
					return _afgff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caacf.ExtLst = NewCT_ExtensionList()
				if _dbeff := d.DecodeElement(_caacf.ExtLst, &_eedg); _dbeff != nil {
					return _dbeff
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _eedg.Name)
				if _ecbe := d.Skip(); _ecbe != nil {
					return _ecbe
				}
			}
		case _a.EndElement:
			break _bbdec
		case _a.CharData:
		}
	}
	return nil
}
func (_bedde *CT_DbPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _bedde.ConnectionAttr)})
	if _bedde.CommandAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u006d\u0061\u006e\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bedde.CommandAttr)})
	}
	if _bedde.ServerCommandAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0043\u006f\u006d\u006d\u0061\u006e\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bedde.ServerCommandAttr)})
	}
	if _bedde.CommandTypeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u006f\u006d\u006d\u0061\u006e\u0064\u0054\u0079\u0070\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_bedde.CommandTypeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aebbg *CT_FieldsUsage) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aebbg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_aebbg.CountAttr)})
	}
	e.EncodeToken(start)
	if _aebbg.FieldUsage != nil {
		_fgbcc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}}
		for _, _gcggg := range _aebbg.FieldUsage {
			e.EncodeElement(_gcggg, _fgbcc)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SingleXmlCell and its children
func (_gbeac *CT_SingleXmlCell) Validate() error {
	return _gbeac.ValidateWithPath("\u0043\u0054_\u0053\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c")
}
func (_aafbd *CT_rowItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aafbd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_aafbd.CountAttr)})
	}
	e.EncodeToken(start)
	_fcfad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0069"}}
	for _, _badadd := range _aafbd.I {
		e.EncodeElement(_badadd, _fcfad)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_PageBreak struct {

	// Page Break Count
	CountAttr *uint32

	// Manual Break Count
	ManualBreakCountAttr *uint32

	// Break
	Brk []*CT_Break
}

func (_bccfb *CT_DataValidations) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bcfbd := range start.Attr {
		if _bcfbd.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0050\u0072o\u006d\u0070\u0074\u0073" {
			_dfbaf, _feece := _f.ParseBool(_bcfbd.Value)
			if _feece != nil {
				return _feece
			}
			_bccfb.DisablePromptsAttr = &_dfbaf
			continue
		}
		if _bcfbd.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_ggdcd, _gfag := _f.ParseUint(_bcfbd.Value, 10, 32)
			if _gfag != nil {
				return _gfag
			}
			_cdda := uint32(_ggdcd)
			_bccfb.XWindowAttr = &_cdda
			continue
		}
		if _bcfbd.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_cadde, _acda := _f.ParseUint(_bcfbd.Value, 10, 32)
			if _acda != nil {
				return _acda
			}
			_dedg := uint32(_cadde)
			_bccfb.YWindowAttr = &_dedg
			continue
		}
		if _bcfbd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fgaff, _gcdd := _f.ParseUint(_bcfbd.Value, 10, 32)
			if _gcdd != nil {
				return _gcdd
			}
			_bdffb := uint32(_fgaff)
			_bccfb.CountAttr = &_bdffb
			continue
		}
	}
_gdefc:
	for {
		_agbcg, _ceae := d.Token()
		if _ceae != nil {
			return _ceae
		}
		switch _ffcc := _agbcg.(type) {
		case _a.StartElement:
			switch _ffcc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}:
				_aecee := NewCT_DataValidation()
				if _geffe := d.DecodeElement(_aecee, &_ffcc); _geffe != nil {
					return _geffe
				}
				_bccfb.DataValidation = append(_bccfb.DataValidation, _aecee)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061l\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _ffcc.Name)
				if _aeca := d.Skip(); _aeca != nil {
					return _aeca
				}
			}
		case _a.EndElement:
			break _gdefc
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RevisionConflict and its children
func (_bgcgc *CT_RevisionConflict) Validate() error {
	return _bgcgc.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074")
}
func (_eebbef *ST_FormulaExpression) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_eebbef = 0
	case "\u0072\u0065\u0066":
		*_eebbef = 1
	case "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072":
		*_eebbef = 2
	case "\u0061\u0072\u0065\u0061":
		*_eebbef = 3
	case "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr":
		*_eebbef = 4
	case "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061":
		*_eebbef = 5
	}
	return nil
}
func (_cabfab *CT_colItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cabfab.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cabfab.CountAttr)})
	}
	e.EncodeToken(start)
	_ebeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0069"}}
	for _, _badf := range _cabfab.I {
		e.EncodeElement(_badf, _ebeb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FutureMetadata and its children, prefixing error messages with path
func (_dgae *CT_FutureMetadata) ValidateWithPath(path string) error {
	for _gfade, _badda := range _dgae.Bk {
		if _afgdg := _badda.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0042\u006b\u005b\u0025\u0064]", path, _gfade)); _afgdg != nil {
			return _afgdg
		}
	}
	if _dgae.ExtLst != nil {
		if _fbcce := _dgae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbcce != nil {
			return _fbcce
		}
	}
	return nil
}
func (_ffedb ST_IconSetType) Validate() error { return _ffedb.ValidateWithPath("") }

// Validate validates the ExternalLink and its children
func (_aafce *ExternalLink) Validate() error {
	return _aafce.ValidateWithPath("\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b")
}
func NewCT_PivotCacheDefinition() *CT_PivotCacheDefinition {
	_cdff := &CT_PivotCacheDefinition{}
	_cdff.CacheSource = NewCT_CacheSource()
	_cdff.CacheFields = NewCT_CacheFields()
	return _cdff
}

// Validate validates the CT_Break and its children
func (_cgce *CT_Break) Validate() error {
	return _cgce.ValidateWithPath("\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b")
}

// ValidateWithPath validates the CT_QueryTable and its children, prefixing error messages with path
func (_ecef *CT_QueryTable) ValidateWithPath(path string) error {
	if _bgegf := _ecef.GrowShrinkTypeAttr.ValidateWithPath(path + "\u002f\u0047\u0072\u006fwS\u0068\u0072\u0069\u006e\u006b\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _bgegf != nil {
		return _bgegf
	}
	if _ecef.QueryTableRefresh != nil {
		if _dacgf := _ecef.QueryTableRefresh.ValidateWithPath(path + "\u002fQ\u0075e\u0072\u0079\u0054\u0061\u0062l\u0065\u0052e\u0066\u0072\u0065\u0073\u0068"); _dacgf != nil {
			return _dacgf
		}
	}
	if _ecef.ExtLst != nil {
		if _fgacb := _ecef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgacb != nil {
			return _fgacb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WebPublishItems and its children, prefixing error messages with path
func (_afgdeg *CT_WebPublishItems) ValidateWithPath(path string) error {
	for _gfacc, _facegd := range _afgdeg.WebPublishItem {
		if _dcfec := _facegd.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0057\u0065bP\u0075b\u006c\u0069\u0073\u0068\u0049t\u0065\u006d\u005b\u0025\u0064\u005d", path, _gfacc)); _dcfec != nil {
			return _dcfec
		}
	}
	return nil
}

// Validate validates the CT_ChartFormat and its children
func (_bcde *CT_ChartFormat) Validate() error {
	return _bcde.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074")
}

// Validate validates the CT_WorkbookProtection and its children
func (_edagb *CT_WorkbookProtection) Validate() error {
	return _edagb.ValidateWithPath("C\u0054\u005f\u0057\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e")
}

const (
	ST_ObjectsUnset        ST_Objects = 0
	ST_ObjectsAll          ST_Objects = 1
	ST_ObjectsPlaceholders ST_Objects = 2
	ST_ObjectsNone         ST_Objects = 3
)

type CT_MapInfo struct {

	// Prefix Mappings for XPath Expressions
	SelectionNamespacesAttr string

	// XML Schema
	Schema []*CT_Schema

	// XML Mapping Properties
	Map []*CT_Map
}

func (_egdfe ST_TargetScreenSize) String() string {
	switch _egdfe {
	case 0:
		return ""
	case 1:
		return "\u00354\u0034\u0078\u0033\u0037\u0036"
	case 2:
		return "\u00364\u0030\u0078\u0034\u0038\u0030"
	case 3:
		return "\u00372\u0030\u0078\u0035\u0031\u0032"
	case 4:
		return "\u00380\u0030\u0078\u0036\u0030\u0030"
	case 5:
		return "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case 6:
		return "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case 7:
		return "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case 8:
		return "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case 9:
		return "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case 10:
		return "\u00318\u0030\u0030\u0078\u0031\u0034\u00340"
	case 11:
		return "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return ""
}

type CT_RevisionHeaders struct {

	// Last Revision GUID
	GuidAttr string

	// Last GUID
	LastGuidAttr *string

	// Shared Workbook
	SharedAttr *bool

	// Disk Revisions
	DiskRevisionsAttr *bool

	// History
	HistoryAttr *bool

	// Track Revisions
	TrackRevisionsAttr *bool

	// Exclusive Mode
	ExclusiveAttr *bool

	// Revision Id
	RevisionIdAttr *uint32

	// Version
	VersionAttr *int32

	// Keep Change History
	KeepChangeHistoryAttr *bool

	// Protected
	ProtectedAttr *bool

	// Preserve History
	PreserveHistoryAttr *uint32

	// Header
	Header []*CT_RevisionHeader
}
type CT_OlapPr struct {

	// Local Cube
	LocalAttr *bool

	// Local Cube Connection
	LocalConnectionAttr *string

	// Local Refresh
	LocalRefreshAttr *bool

	// Send Locale to OLAP
	SendLocaleAttr *bool

	// Drill Through Count
	RowDrillCountAttr *uint32

	// OLAP Fill Formatting
	ServerFillAttr *bool

	// OLAP Number Format
	ServerNumberFormatAttr *bool

	// OLAP Server Font
	ServerFontAttr *bool

	// OLAP Font Formatting
	ServerFontColorAttr *bool
}
type CT_VerticalAlignFontProperty struct {

	// Value
	ValAttr _ae.ST_VerticalAlignRun
}

func (_ccbda *CT_FieldGroup) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ccbda.ParAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_ccbda.ParAttr)})
	}
	if _ccbda.BaseAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0061\u0073\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_ccbda.BaseAttr)})
	}
	e.EncodeToken(start)
	if _ccbda.RangePr != nil {
		_fadd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0061\u006e\u0067\u0065\u0050\u0072"}}
		e.EncodeElement(_ccbda.RangePr, _fadd)
	}
	if _ccbda.DiscretePr != nil {
		_agbbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}}
		e.EncodeElement(_ccbda.DiscretePr, _agbbc)
	}
	if _ccbda.GroupItems != nil {
		_cgcegb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_ccbda.GroupItems, _cgcegb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CalculatedMember and its children
func (_bed *CT_CalculatedMember) Validate() error {
	return _bed.ValidateWithPath("\u0043\u0054\u005f\u0043al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072")
}
func NewMapInfo() *MapInfo { _ggeda := &MapInfo{}; _ggeda.CT_MapInfo = *NewCT_MapInfo(); return _ggeda }

type EG_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func NewCT_QueryTableRefresh() *CT_QueryTableRefresh {
	_dadef := &CT_QueryTableRefresh{}
	_dadef.QueryTableFields = NewCT_QueryTableFields()
	return _dadef
}
func (_decae *CT_Fill) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _decae.PatternFill != nil {
		_adcec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_decae.PatternFill, _adcec)
	}
	if _decae.GradientFill != nil {
		_dgdfd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ag\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_decae.GradientFill, _dgdfd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aebdc *CT_RElt) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_cdabg:
	for {
		_bcedd, _bbgef := d.Token()
		if _bbgef != nil {
			return _bbgef
		}
		switch _ageab := _bcedd.(type) {
		case _a.StartElement:
			switch _ageab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_aebdc.RPr = NewCT_RPrElt()
				if _fcecda := d.DecodeElement(_aebdc.RPr, &_ageab); _fcecda != nil {
					return _fcecda
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _abbce := d.DecodeElement(&_aebdc.T, &_ageab); _abbce != nil {
					return _abbce
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0045\u006c\u0074\u0020\u0025\u0076", _ageab.Name)
				if _bbdgdd := d.Skip(); _bbdgdd != nil {
					return _bbdgdd
				}
			}
		case _a.EndElement:
			break _cdabg
		case _a.CharData:
		}
	}
	return nil
}

type CT_Format struct {

	// Format Action
	ActionAttr ST_FormatAction

	// Format Id
	DxfIdAttr *uint32

	// Pivot Table Location
	PivotArea *CT_PivotArea

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_cfbad *ST_DataValidationType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cfbad = 0
	case "\u006e\u006f\u006e\u0065":
		*_cfbad = 1
	case "\u0077\u0068\u006fl\u0065":
		*_cfbad = 2
	case "\u0064e\u0063\u0069\u006d\u0061\u006c":
		*_cfbad = 3
	case "\u006c\u0069\u0073\u0074":
		*_cfbad = 4
	case "\u0064\u0061\u0074\u0065":
		*_cfbad = 5
	case "\u0074\u0069\u006d\u0065":
		*_cfbad = 6
	case "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068":
		*_cfbad = 7
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_cfbad = 8
	}
	return nil
}
func (_gdge *CT_Boolean) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gcb := range start.Attr {
		if _gcb.Name.Local == "\u0076" {
			_ffbd, _aaa := _f.ParseBool(_gcb.Value)
			if _aaa != nil {
				return _aaa
			}
			_gdge.VAttr = _ffbd
			continue
		}
		if _gcb.Name.Local == "\u0075" {
			_dagb, _bfgc := _f.ParseBool(_gcb.Value)
			if _bfgc != nil {
				return _bfgc
			}
			_gdge.UAttr = &_dagb
			continue
		}
		if _gcb.Name.Local == "\u0066" {
			_fe, _afdg := _f.ParseBool(_gcb.Value)
			if _afdg != nil {
				return _afdg
			}
			_gdge.FAttr = &_fe
			continue
		}
		if _gcb.Name.Local == "\u0063" {
			_fbe, _ggfc := _gcb.Value, error(nil)
			if _ggfc != nil {
				return _ggfc
			}
			_gdge.CAttr = &_fbe
			continue
		}
		if _gcb.Name.Local == "\u0063\u0070" {
			_aedg, _gafc := _f.ParseUint(_gcb.Value, 10, 32)
			if _gafc != nil {
				return _gafc
			}
			_eeg := uint32(_aedg)
			_gdge.CpAttr = &_eeg
			continue
		}
	}
_gdbb:
	for {
		_adf, _cge := d.Token()
		if _cge != nil {
			return _cge
		}
		switch _gcc := _adf.(type) {
		case _a.StartElement:
			switch _gcc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_ccc := NewCT_X()
				if _edg := d.DecodeElement(_ccc, &_gcc); _edg != nil {
					return _edg
				}
				_gdge.X = append(_gdge.X, _ccc)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fB\u006f\u006f\u006c\u0065\u0061\u006e\u0020\u0025\u0076", _gcc.Name)
				if _fee := d.Skip(); _fee != nil {
					return _fee
				}
			}
		case _a.EndElement:
			break _gdbb
		case _a.CharData:
		}
	}
	return nil
}
func (_dfabcea ST_TotalsRowFunction) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dfabcea.String(), start)
}
func (_cgegc ST_SmartTagShow) Validate() error { return _cgegc.ValidateWithPath("") }
func NewCT_SheetPr() *CT_SheetPr               { _ddcef := &CT_SheetPr{}; return _ddcef }

// Validate validates the CT_MdxTuple and its children
func (_fffff *CT_MdxTuple) Validate() error {
	return _fffff.ValidateWithPath("C\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065")
}

type CT_OleObject struct {

	// Embedded Object ProgId
	ProgIdAttr *string

	// Data or View Aspect
	DvAspectAttr ST_DvAspect

	// Embedded Object's Link Moniker
	LinkAttr *string

	// Linked Embedded Object Update
	OleUpdateAttr ST_OleUpdate

	// Auto Load
	AutoLoadAttr *bool

	// Shape Id
	ShapeIdAttr uint32
	IdAttr      *string

	// Embedded Object Properties
	ObjectPr *CT_ObjectPr
}

func (_dfccf *CT_IndexedColors) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_bfcc:
	for {
		_ddfaf, _deac := d.Token()
		if _deac != nil {
			return _deac
		}
		switch _dabga := _ddfaf.(type) {
		case _a.StartElement:
			switch _dabga.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_gddbc := NewCT_RgbColor()
				if _agcae := d.DecodeElement(_gddbc, &_dabga); _agcae != nil {
					return _agcae
				}
				_dfccf.RgbColor = append(_dfccf.RgbColor, _gddbc)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073\u0020\u0025v", _dabga.Name)
				if _efgf := d.Skip(); _efgf != nil {
					return _efgf
				}
			}
		case _a.EndElement:
			break _bfcc
		case _a.CharData:
		}
	}
	return nil
}
func (_ceefa *CT_ObjectAnchor) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ceefa.From = _af.NewFrom()
	_ceefa.To = _af.NewTo()
	for _, _acdeb := range start.Attr {
		if _acdeb.Name.Local == "\u006d\u006f\u0076\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073" {
			_cbcbga, _fgfef := _f.ParseBool(_acdeb.Value)
			if _fgfef != nil {
				return _fgfef
			}
			_ceefa.MoveWithCellsAttr = &_cbcbga
			continue
		}
		if _acdeb.Name.Local == "\u0073\u0069\u007a\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073" {
			_ecdb, _gbdae := _f.ParseBool(_acdeb.Value)
			if _gbdae != nil {
				return _gbdae
			}
			_ceefa.SizeWithCellsAttr = &_ecdb
			continue
		}
	}
_cabfc:
	for {
		_dadgf, _bgcaef := d.Token()
		if _bgcaef != nil {
			return _bgcaef
		}
		switch _gbdbb := _dadgf.(type) {
		case _a.StartElement:
			switch _gbdbb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}, _a.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _bgecae := d.DecodeElement(_ceefa.From, &_gbdbb); _bgecae != nil {
					return _bgecae
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u006f"}, _a.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u006f"}:
				if _ffafb := d.DecodeElement(_ceefa.To, &_gbdbb); _ffafb != nil {
					return _ffafb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0062\u006ae\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025\u0076", _gbdbb.Name)
				if _cbbacfa := d.Skip(); _cbbacfa != nil {
					return _cbbacfa
				}
			}
		case _a.EndElement:
			break _cabfc
		case _a.CharData:
		}
	}
	return nil
}
func (_gcebbb *ST_SourceType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_efecc, _aaffeb := d.Token()
	if _aaffeb != nil {
		return _aaffeb
	}
	if _cbbace, _cacef := _efecc.(_a.EndElement); _cacef && _cbbace.Name == start.Name {
		*_gcebbb = 1
		return nil
	}
	if _cfgcfd, _fccea := _efecc.(_a.CharData); !_fccea {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efecc)
	} else {
		switch string(_cfgcfd) {
		case "":
			*_gcebbb = 0
		case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
			*_gcebbb = 1
		case "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c":
			*_gcebbb = 2
		case "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e":
			*_gcebbb = 3
		case "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f":
			*_gcebbb = 4
		}
	}
	_efecc, _aaffeb = d.Token()
	if _aaffeb != nil {
		return _aaffeb
	}
	if _eadece, _aedfa := _efecc.(_a.EndElement); _aedfa && _eadece.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efecc)
}
func (_cbcdec *CT_RPrElt) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gfdbg:
	for {
		_ggbbg, _gdacfc := d.Token()
		if _gdacfc != nil {
			return _gdacfc
		}
		switch _fccbb := _ggbbg.(type) {
		case _a.StartElement:
			switch _fccbb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}:
				_cbcdec.RFont = NewCT_FontName()
				if _gbedegb := d.DecodeElement(_cbcdec.RFont, &_fccbb); _gbedegb != nil {
					return _gbedegb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
				_cbcdec.Charset = NewCT_IntProperty()
				if _fbbfe := d.DecodeElement(_cbcdec.Charset, &_fccbb); _fbbfe != nil {
					return _fbbfe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
				_cbcdec.Family = NewCT_IntProperty()
				if _efgebe := d.DecodeElement(_cbcdec.Family, &_fccbb); _efgebe != nil {
					return _efgebe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_cbcdec.B = NewCT_BooleanProperty()
				if _efedd := d.DecodeElement(_cbcdec.B, &_fccbb); _efedd != nil {
					return _efedd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_cbcdec.I = NewCT_BooleanProperty()
				if _eagga := d.DecodeElement(_cbcdec.I, &_fccbb); _eagga != nil {
					return _eagga
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
				_cbcdec.Strike = NewCT_BooleanProperty()
				if _afdbg := d.DecodeElement(_cbcdec.Strike, &_fccbb); _afdbg != nil {
					return _afdbg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
				_cbcdec.Outline = NewCT_BooleanProperty()
				if _afccd := d.DecodeElement(_cbcdec.Outline, &_fccbb); _afccd != nil {
					return _afccd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_cbcdec.Shadow = NewCT_BooleanProperty()
				if _efdb := d.DecodeElement(_cbcdec.Shadow, &_fccbb); _efdb != nil {
					return _efdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
				_cbcdec.Condense = NewCT_BooleanProperty()
				if _gdfgf := d.DecodeElement(_cbcdec.Condense, &_fccbb); _gdfgf != nil {
					return _gdfgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
				_cbcdec.Extend = NewCT_BooleanProperty()
				if _edgdg := d.DecodeElement(_cbcdec.Extend, &_fccbb); _edgdg != nil {
					return _edgdg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_cbcdec.Color = NewCT_Color()
				if _gafeb := d.DecodeElement(_cbcdec.Color, &_fccbb); _gafeb != nil {
					return _gafeb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
				_cbcdec.Sz = NewCT_FontSize()
				if _acfbgf := d.DecodeElement(_cbcdec.Sz, &_fccbb); _acfbgf != nil {
					return _acfbgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
				_cbcdec.U = NewCT_UnderlineProperty()
				if _afadba := d.DecodeElement(_cbcdec.U, &_fccbb); _afadba != nil {
					return _afadba
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
				_cbcdec.VertAlign = NewCT_VerticalAlignFontProperty()
				if _aceegf := d.DecodeElement(_cbcdec.VertAlign, &_fccbb); _aceegf != nil {
					return _aceegf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
				_cbcdec.Scheme = NewCT_FontScheme()
				if _gbgbe := d.DecodeElement(_cbcdec.Scheme, &_fccbb); _gbgbe != nil {
					return _gbgbe
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0052\u0050\u0072E\u006c\u0074 \u0025\u0076", _fccbb.Name)
				if _afaef := d.Skip(); _afaef != nil {
					return _afaef
				}
			}
		case _a.EndElement:
			break _gfdbg
		case _a.CharData:
		}
	}
	return nil
}
func (_bggfg *ExternalLink) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bggfg.CT_ExternalLink = *NewCT_ExternalLink()
_degdff:
	for {
		_eagacc, _ccace := d.Token()
		if _ccace != nil {
			return _ccace
		}
		switch _daeee := _eagacc.(type) {
		case _a.StartElement:
			switch _daeee.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_bggfg.Choice = NewCT_ExternalLinkChoice()
				if _fgdab := d.DecodeElement(&_bggfg.Choice.ExternalBook, &_daeee); _fgdab != nil {
					return _fgdab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_bggfg.Choice = NewCT_ExternalLinkChoice()
				if _befdf := d.DecodeElement(&_bggfg.Choice.DdeLink, &_daeee); _befdf != nil {
					return _befdf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_bggfg.Choice = NewCT_ExternalLinkChoice()
				if _fbead := d.DecodeElement(&_bggfg.Choice.OleLink, &_daeee); _fbead != nil {
					return _fbead
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bggfg.ExtLst = NewCT_ExtensionList()
				if _fcedc := d.DecodeElement(_bggfg.ExtLst, &_daeee); _fcedc != nil {
					return _fcedc
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0078te\u0072\u006ea\u006c\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _daeee.Name)
				if _efcad := d.Skip(); _efcad != nil {
					return _efcad
				}
			}
		case _a.EndElement:
			break _degdff
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MetadataTypes and its children, prefixing error messages with path
func (_beabe *CT_MetadataTypes) ValidateWithPath(path string) error {
	for _dbbgd, _dbefg := range _beabe.MetadataType {
		if _eabbfd := _dbefg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004det\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u005b\u0025\u0064\u005d", path, _dbbgd)); _eabbfd != nil {
			return _eabbfd
		}
	}
	return nil
}
func (_deeg *CT_FunctionGroups) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _deeg.BuiltInGroupCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0075\u0069\u006c\u0074\u0049\u006e\u0047\u0072\u006f\u0075\u0070C\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_deeg.BuiltInGroupCountAttr)})
	}
	e.EncodeToken(start)
	if _deeg.FunctionGroup != nil {
		_dfaee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0066\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}}
		for _, _dcba := range _deeg.FunctionGroup {
			e.EncodeElement(_dcba, _dfaee)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dabgb *CT_Tuple) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dabgb.FldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006c\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_dabgb.FldAttr)})
	}
	if _dabgb.HierAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_dabgb.HierAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0074\u0065\u006d"}, Value: _fc.Sprintf("\u0025\u0076", _dabgb.ItemAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_SingleXmlCells struct {

	// Table Properties
	SingleXmlCell []*CT_SingleXmlCell
}

func (_abdbfd *CT_ProtectedRanges) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dggcg:
	for {
		_bbcdd, _fcabgf := d.Token()
		if _fcabgf != nil {
			return _fcabgf
		}
		switch _aceec := _bbcdd.(type) {
		case _a.StartElement:
			switch _aceec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}:
				_fabc := NewCT_ProtectedRange()
				if _aggege := d.DecodeElement(_fabc, &_aceec); _aggege != nil {
					return _aggege
				}
				_abdbfd.ProtectedRange = append(_abdbfd.ProtectedRange, _fabc)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063t\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073\u0020\u0025\u0076", _aceec.Name)
				if _begcg := d.Skip(); _begcg != nil {
					return _begcg
				}
			}
		case _a.EndElement:
			break _dggcg
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GradientStop and its children
func (_eebbd *CT_GradientStop) Validate() error {
	return _eebbd.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070")
}
func NewCT_PivotCaches() *CT_PivotCaches { _gdagf := &CT_PivotCaches{}; return _gdagf }
func (_daeba *Comments) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_daeba.CT_Comments = *NewCT_Comments()
_baefda:
	for {
		_agbfbd, _eafee := d.Token()
		if _eafee != nil {
			return _eafee
		}
		switch _beccc := _agbfbd.(type) {
		case _a.StartElement:
			switch _beccc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}:
				if _daeaba := d.DecodeElement(_daeba.Authors, &_beccc); _daeaba != nil {
					return _daeaba
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}:
				if _adaaad := d.DecodeElement(_daeba.CommentList, &_beccc); _adaaad != nil {
					return _adaaad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_daeba.ExtLst = NewCT_ExtensionList()
				if _gcfdbc := d.DecodeElement(_daeba.ExtLst, &_beccc); _gcfdbc != nil {
					return _gcfdbc
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _beccc.Name)
				if _gacce := d.Skip(); _gacce != nil {
					return _gacce
				}
			}
		case _a.EndElement:
			break _baefda
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotCacheDefinition and its children, prefixing error messages with path
func (_aabgbb *CT_PivotCacheDefinition) ValidateWithPath(path string) error {
	if _cbaab := _aabgbb.CacheSource.ValidateWithPath(path + "\u002f\u0043\u0061c\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"); _cbaab != nil {
		return _cbaab
	}
	if _eabba := _aabgbb.CacheFields.ValidateWithPath(path + "\u002f\u0043\u0061c\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"); _eabba != nil {
		return _eabba
	}
	if _aabgbb.CacheHierarchies != nil {
		if _ddaba := _aabgbb.CacheHierarchies.ValidateWithPath(path + "\u002f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072c\u0068\u0069\u0065\u0073"); _ddaba != nil {
			return _ddaba
		}
	}
	if _aabgbb.Kpis != nil {
		if _gcdbc := _aabgbb.Kpis.ValidateWithPath(path + "\u002f\u004b\u0070i\u0073"); _gcdbc != nil {
			return _gcdbc
		}
	}
	if _aabgbb.TupleCache != nil {
		if _bgaf := _aabgbb.TupleCache.ValidateWithPath(path + "/\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"); _bgaf != nil {
			return _bgaf
		}
	}
	if _aabgbb.CalculatedItems != nil {
		if _adcbga := _aabgbb.CalculatedItems.ValidateWithPath(path + "\u002f\u0043a\u006c\u0063\u0075l\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"); _adcbga != nil {
			return _adcbga
		}
	}
	if _aabgbb.CalculatedMembers != nil {
		if _gfefc := _aabgbb.CalculatedMembers.ValidateWithPath(path + "\u002fC\u0061l\u0063\u0075\u006c\u0061\u0074e\u0064\u004de\u006d\u0062\u0065\u0072\u0073"); _gfefc != nil {
			return _gfefc
		}
	}
	if _aabgbb.Dimensions != nil {
		if _bbgga := _aabgbb.Dimensions.ValidateWithPath(path + "/\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"); _bbgga != nil {
			return _bbgga
		}
	}
	if _aabgbb.MeasureGroups != nil {
		if _fbfca := _aabgbb.MeasureGroups.ValidateWithPath(path + "\u002f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0047r\u006f\u0075\u0070\u0073"); _fbfca != nil {
			return _fbfca
		}
	}
	if _aabgbb.Maps != nil {
		if _bggef := _aabgbb.Maps.ValidateWithPath(path + "\u002f\u004d\u0061p\u0073"); _bggef != nil {
			return _bggef
		}
	}
	if _aabgbb.ExtLst != nil {
		if _ccgggb := _aabgbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccgggb != nil {
			return _ccgggb
		}
	}
	return nil
}
func (_ccgeg *CT_ColHierarchiesUsage) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ccgeg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ccgeg.CountAttr)})
	}
	e.EncodeToken(start)
	_dbcfe := _a.StartElement{Name: _a.Name{Local: "m\u0061:\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061r\u0063\u0068\u0079\u0055sa\u0067\u0065"}}
	for _, _cagff := range _ccgeg.ColHierarchyUsage {
		e.EncodeElement(_cagff, _dbcfe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CacheSource and its children
func (_gaad *CT_CacheSource) Validate() error {
	return _gaad.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065")
}
func (_ebadb *CT_ConditionalFormat) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ebadb.PivotAreas = NewCT_PivotAreas()
	for _, _gddg := range start.Attr {
		if _gddg.Name.Local == "\u0073\u0063\u006fp\u0065" {
			_ebadb.ScopeAttr.UnmarshalXMLAttr(_gddg)
			continue
		}
		if _gddg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ebadb.TypeAttr.UnmarshalXMLAttr(_gddg)
			continue
		}
		if _gddg.Name.Local == "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079" {
			_addeb, _cdgd := _f.ParseUint(_gddg.Value, 10, 32)
			if _cdgd != nil {
				return _cdgd
			}
			_ebadb.PriorityAttr = uint32(_addeb)
			continue
		}
	}
_ecdf:
	for {
		_afef, _gfec := d.Token()
		if _gfec != nil {
			return _gfec
		}
		switch _gccgd := _afef.(type) {
		case _a.StartElement:
			switch _gccgd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}:
				if _accgg := d.DecodeElement(_ebadb.PivotAreas, &_gccgd); _accgg != nil {
					return _accgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebadb.ExtLst = NewCT_ExtensionList()
				if _dcdd := d.DecodeElement(_ebadb.ExtLst, &_gccgd); _dcdd != nil {
					return _dcdd
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0020\u0025\u0076", _gccgd.Name)
				if _fgab := d.Skip(); _fgab != nil {
					return _fgab
				}
			}
		case _a.EndElement:
			break _ecdf
		case _a.CharData:
		}
	}
	return nil
}

type CT_ControlPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// Recalculation Flag
	RecalcAlwaysAttr *bool

	// UI Object Flag
	UiObjectAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Automatic Size Flag
	AutoPictAttr *bool

	// Custom Function
	MacroAttr *string

	// Alternative Text
	AltTextAttr *string

	// Linked Formula
	LinkedCellAttr *string

	// List Items Source Range
	ListFillRangeAttr *string

	// Image Format
	CfAttr *string
	IdAttr *string

	// Object Cell Anchor
	Anchor *CT_ObjectAnchor
}

const (
	ST_FieldSortTypeUnset      ST_FieldSortType = 0
	ST_FieldSortTypeManual     ST_FieldSortType = 1
	ST_FieldSortTypeAscending  ST_FieldSortType = 2
	ST_FieldSortTypeDescending ST_FieldSortType = 3
)

// ValidateWithPath validates the CT_SmartTagType and its children, prefixing error messages with path
func (_fcggc *CT_SmartTagType) ValidateWithPath(path string) error { return nil }
func NewCT_WebPr() *CT_WebPr                                       { _ebcgad := &CT_WebPr{}; return _ebcgad }

// ValidateWithPath validates the CT_CalculatedItems and its children, prefixing error messages with path
func (_fggd *CT_CalculatedItems) ValidateWithPath(path string) error {
	for _bgddd, _edbf := range _fggd.CalculatedItem {
		if _dcec := _edbf.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0043\u0061lc\u0075l\u0061\u0074\u0065\u0064\u0049t\u0065\u006d\u005b\u0025\u0064\u005d", path, _bgddd)); _dcec != nil {
			return _dcec
		}
	}
	return nil
}

// Validate validates the CT_ExternalLink and its children
func (_dfgff *CT_ExternalLink) Validate() error {
	return _dfgff.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b")
}
func ParseSliceST_CellSpans(s string) (ST_CellSpans, error) { return ST_CellSpans(_e.Fields(s)), nil }

// ValidateWithPath validates the CT_QueryCache and its children, prefixing error messages with path
func (_agdec *CT_QueryCache) ValidateWithPath(path string) error {
	for _bgdce, _dcdga := range _agdec.Query {
		if _bagfg := _dcdga.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002fQ\u0075\u0065\u0072\u0079\u005b\u0025\u0064\u005d", path, _bgdce)); _bagfg != nil {
			return _bagfg
		}
	}
	return nil
}

type CT_RevisionConflict struct {

	// Sheet Id
	SheetIdAttr *uint32
	RIdAttr     *uint32
	UaAttr      *bool
	RaAttr      *bool
}

func (_efgcc *CT_RowFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _faabe := range start.Attr {
		if _faabe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bcffac, _cegdf := _f.ParseUint(_faabe.Value, 10, 32)
			if _cegdf != nil {
				return _cegdf
			}
			_feadb := uint32(_bcffac)
			_efgcc.CountAttr = &_feadb
			continue
		}
	}
_cffgf:
	for {
		_dgeee, _cbdce := d.Token()
		if _cbdce != nil {
			return _cbdce
		}
		switch _cgdeeb := _dgeee.(type) {
		case _a.StartElement:
			switch _cgdeeb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}:
				_deece := NewCT_Field()
				if _baegg := d.DecodeElement(_deece, &_cgdeeb); _baegg != nil {
					return _baegg
				}
				_efgcc.Field = append(_efgcc.Field, _deece)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u006f\u0077F\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _cgdeeb.Name)
				if _bfcge := d.Skip(); _bfcge != nil {
					return _bfcge
				}
			}
		case _a.EndElement:
			break _cffgf
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CacheHierarchies and its children, prefixing error messages with path
func (_cbgb *CT_CacheHierarchies) ValidateWithPath(path string) error {
	for _gba, _abgf := range _cbgb.CacheHierarchy {
		if _afg := _abgf.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0043\u0061ch\u0065H\u0069\u0065\u0072\u0061\u0072c\u0068\u0079\u005b\u0025\u0064\u005d", path, _gba)); _afg != nil {
			return _afg
		}
	}
	return nil
}
func (_bffead ST_MdxSetOrder) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bfbbc := _a.Attr{}
	_bfbbc.Name = name
	switch _bffead {
	case ST_MdxSetOrderUnset:
		_bfbbc.Value = ""
	case ST_MdxSetOrderU:
		_bfbbc.Value = "\u0075"
	case ST_MdxSetOrderA:
		_bfbbc.Value = "\u0061"
	case ST_MdxSetOrderD:
		_bfbbc.Value = "\u0064"
	case ST_MdxSetOrderAa:
		_bfbbc.Value = "\u0061\u0061"
	case ST_MdxSetOrderAd:
		_bfbbc.Value = "\u0061\u0064"
	case ST_MdxSetOrderNa:
		_bfbbc.Value = "\u006e\u0061"
	case ST_MdxSetOrderNd:
		_bfbbc.Value = "\u006e\u0064"
	}
	return _bfbbc, nil
}
func (_faeea *ST_Visibility) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_faeea = 0
	case "\u0076i\u0073\u0069\u0062\u006c\u0065":
		*_faeea = 1
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_faeea = 2
	case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
		*_faeea = 3
	}
	return nil
}
func (_deebd *CT_Dimensions) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _deebd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_deebd.CountAttr)})
	}
	e.EncodeToken(start)
	if _deebd.Dimension != nil {
		_ebadae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		for _, _bgaaa := range _deebd.Dimension {
			e.EncodeElement(_bgaaa, _ebadae)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_AutoFilter and its children
func (_gdg *CT_AutoFilter) Validate() error {
	return _gdg.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072")
}
func (_cddg *CT_Cols) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_fdfbb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c"}}
	for _, _efea := range _cddg.Col {
		e.EncodeElement(_efea, _fdfbb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gaggc ST_CellFormulaType) Validate() error { return _gaggc.ValidateWithPath("") }

type CT_MetadataBlocks struct {

	// Metadata Block Count
	CountAttr *uint32

	// Metadata Block
	Bk []*CT_MetadataBlock
}

func (_gacdc *ST_GroupBy) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gacdc = 0
	case "\u0072\u0061\u006eg\u0065":
		*_gacdc = 1
	case "\u0073e\u0063\u006f\u006e\u0064\u0073":
		*_gacdc = 2
	case "\u006di\u006e\u0075\u0074\u0065\u0073":
		*_gacdc = 3
	case "\u0068\u006f\u0075r\u0073":
		*_gacdc = 4
	case "\u0064\u0061\u0079\u0073":
		*_gacdc = 5
	case "\u006d\u006f\u006e\u0074\u0068\u0073":
		*_gacdc = 6
	case "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073":
		*_gacdc = 7
	case "\u0079\u0065\u0061r\u0073":
		*_gacdc = 8
	}
	return nil
}
func (_aadf *CT_BookView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bdd := range start.Attr {
		if _bdd.Name.Local == "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068" {
			_afd, _bdb := _f.ParseUint(_bdd.Value, 10, 32)
			if _bdb != nil {
				return _bdb
			}
			_ceb := uint32(_afd)
			_aadf.WindowWidthAttr = &_ceb
			continue
		}
		if _bdd.Name.Local == "\u0076\u0069\u0073\u0069\u0062\u0069\u006c\u0069\u0074\u0079" {
			_aadf.VisibilityAttr.UnmarshalXMLAttr(_bdd)
			continue
		}
		if _bdd.Name.Local == "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c" {
			_ggc, _ca := _f.ParseBool(_bdd.Value)
			if _ca != nil {
				return _ca
			}
			_aadf.ShowHorizontalScrollAttr = &_ggc
			continue
		}
		if _bdd.Name.Local == "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c" {
			_egg, _ecg := _f.ParseBool(_bdd.Value)
			if _ecg != nil {
				return _ecg
			}
			_aadf.ShowVerticalScrollAttr = &_egg
			continue
		}
		if _bdd.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073" {
			_ggfa, _eff := _f.ParseBool(_bdd.Value)
			if _eff != nil {
				return _eff
			}
			_aadf.ShowSheetTabsAttr = &_ggfa
			continue
		}
		if _bdd.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_def, _cdc := _f.ParseInt(_bdd.Value, 10, 32)
			if _cdc != nil {
				return _cdc
			}
			_afa := int32(_def)
			_aadf.XWindowAttr = &_afa
			continue
		}
		if _bdd.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_ecc, _fbb := _f.ParseInt(_bdd.Value, 10, 32)
			if _fbb != nil {
				return _fbb
			}
			_aaf := int32(_ecc)
			_aadf.YWindowAttr = &_aaf
			continue
		}
		if _bdd.Name.Local == "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d" {
			_ccd, _fgc := _f.ParseBool(_bdd.Value)
			if _fgc != nil {
				return _fgc
			}
			_aadf.MinimizedAttr = &_ccd
			continue
		}
		if _bdd.Name.Local == "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_cfe, _efa := _f.ParseUint(_bdd.Value, 10, 32)
			if _efa != nil {
				return _efa
			}
			_dag := uint32(_cfe)
			_aadf.WindowHeightAttr = &_dag
			continue
		}
		if _bdd.Name.Local == "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f" {
			_cbe, _fgb := _f.ParseUint(_bdd.Value, 10, 32)
			if _fgb != nil {
				return _fgb
			}
			_dfbf := uint32(_cbe)
			_aadf.TabRatioAttr = &_dfbf
			continue
		}
		if _bdd.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u0068\u0065\u0065\u0074" {
			_fffe, _aedf := _f.ParseUint(_bdd.Value, 10, 32)
			if _aedf != nil {
				return _aedf
			}
			_ged := uint32(_fffe)
			_aadf.FirstSheetAttr = &_ged
			continue
		}
		if _bdd.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0054\u0061b" {
			_bfb, _fad := _f.ParseUint(_bdd.Value, 10, 32)
			if _fad != nil {
				return _fad
			}
			_bbc := uint32(_bfb)
			_aadf.ActiveTabAttr = &_bbc
			continue
		}
		if _bdd.Name.Local == "\u0061\u0075\u0074\u006fFi\u006c\u0074\u0065\u0072\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0069n\u0067" {
			_eggc, _bfg := _f.ParseBool(_bdd.Value)
			if _bfg != nil {
				return _bfg
			}
			_aadf.AutoFilterDateGroupingAttr = &_eggc
			continue
		}
	}
_dfc:
	for {
		_gdga, _cff := d.Token()
		if _cff != nil {
			return _cff
		}
		switch _ffg := _gdga.(type) {
		case _a.StartElement:
			switch _ffg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aadf.ExtLst = NewCT_ExtensionList()
				if _bfc := d.DecodeElement(_aadf.ExtLst, &_ffg); _bfc != nil {
					return _bfc
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _ffg.Name)
				if _dga := d.Skip(); _dga != nil {
					return _dga
				}
			}
		case _a.EndElement:
			break _dfc
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MdxKPI and its children, prefixing error messages with path
func (_deffd *CT_MdxKPI) ValidateWithPath(path string) error {
	if _deffd.PAttr == ST_MdxKPIPropertyUnset {
		return _fc.Errorf("\u0025\u0073/\u0050\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066ie\u006c\u0064", path)
	}
	if _febed := _deffd.PAttr.ValidateWithPath(path + "\u002f\u0050\u0041\u0074\u0074\u0072"); _febed != nil {
		return _febed
	}
	return nil
}
func (_gafcc *CT_BorderPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gafcc.StyleAttr != ST_BorderStyleUnset {
		_gafec, _aee := _gafcc.StyleAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0074\u0079l\u0065"})
		if _aee != nil {
			return _aee
		}
		start.Attr = append(start.Attr, _gafec)
	}
	e.EncodeToken(start)
	if _gafcc.Color != nil {
		_dbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_gafcc.Color, _dbc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_PivotCacheRecords() *CT_PivotCacheRecords {
	_cdgec := &CT_PivotCacheRecords{}
	return _cdgec
}
func (_cdbaf ST_ExternalConnectionType) ValidateWithPath(path string) error {
	switch _cdbaf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdbaf))
	}
	return nil
}
func (_efaac *CT_VolMain) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072s\u0074"}, Value: _fc.Sprintf("\u0025\u0076", _efaac.FirstAttr)})
	e.EncodeToken(start)
	_cffdgf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003at\u0070"}}
	for _, _bbfac := range _efaac.Tp {
		e.EncodeElement(_bbfac, _cffdgf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CacheFields and its children, prefixing error messages with path
func (_daf *CT_CacheFields) ValidateWithPath(path string) error {
	for _ead, _bdcb := range _daf.CacheField {
		if _bffa := _bdcb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006cd\u005b\u0025\u0064\u005d", path, _ead)); _bffa != nil {
			return _bffa
		}
	}
	return nil
}
func NewCT_OleItem() *CT_OleItem { _dgdec := &CT_OleItem{}; return _dgdec }
func (_eaaad *CT_Chartsheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eaaad.SheetViews = NewCT_ChartsheetViews()
	_eaaad.Drawing = NewCT_Drawing()
_cbbc:
	for {
		_bdbb, _fbdc := d.Token()
		if _fbdc != nil {
			return _fbdc
		}
		switch _dee := _bdbb.(type) {
		case _a.StartElement:
			switch _dee.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_eaaad.SheetPr = NewCT_ChartsheetPr()
				if _accg := d.DecodeElement(_eaaad.SheetPr, &_dee); _accg != nil {
					return _accg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				if _facf := d.DecodeElement(_eaaad.SheetViews, &_dee); _facf != nil {
					return _facf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_eaaad.SheetProtection = NewCT_ChartsheetProtection()
				if _ddece := d.DecodeElement(_eaaad.SheetProtection, &_dee); _ddece != nil {
					return _ddece
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_eaaad.CustomSheetViews = NewCT_CustomChartsheetViews()
				if _ggb := d.DecodeElement(_eaaad.CustomSheetViews, &_dee); _ggb != nil {
					return _ggb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_eaaad.PageMargins = NewCT_PageMargins()
				if _eceb := d.DecodeElement(_eaaad.PageMargins, &_dee); _eceb != nil {
					return _eceb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_eaaad.PageSetup = NewCT_CsPageSetup()
				if _aegf := d.DecodeElement(_eaaad.PageSetup, &_dee); _aegf != nil {
					return _aegf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_eaaad.HeaderFooter = NewCT_HeaderFooter()
				if _ebfd := d.DecodeElement(_eaaad.HeaderFooter, &_dee); _ebfd != nil {
					return _ebfd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				if _dfgg := d.DecodeElement(_eaaad.Drawing, &_dee); _dfgg != nil {
					return _dfgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_eaaad.LegacyDrawing = NewCT_LegacyDrawing()
				if _agef := d.DecodeElement(_eaaad.LegacyDrawing, &_dee); _agef != nil {
					return _agef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_eaaad.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _bgbab := d.DecodeElement(_eaaad.LegacyDrawingHF, &_dee); _bgbab != nil {
					return _bgbab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_eaaad.DrawingHF = NewCT_DrawingHF()
				if _ffbc := d.DecodeElement(_eaaad.DrawingHF, &_dee); _ffbc != nil {
					return _ffbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_eaaad.Picture = NewCT_SheetBackgroundPicture()
				if _dgce := d.DecodeElement(_eaaad.Picture, &_dee); _dgce != nil {
					return _dgce
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_eaaad.WebPublishItems = NewCT_WebPublishItems()
				if _cbc := d.DecodeElement(_eaaad.WebPublishItems, &_dee); _cbc != nil {
					return _cbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eaaad.ExtLst = NewCT_ExtensionList()
				if _beea := d.DecodeElement(_eaaad.ExtLst, &_dee); _beea != nil {
					return _beea
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043h\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _dee.Name)
				if _gfbdb := d.Skip(); _gfbdb != nil {
					return _gfbdb
				}
			}
		case _a.EndElement:
			break _cbbc
		case _a.CharData:
		}
	}
	return nil
}

type ST_HtmlFmt byte

// Validate validates the CT_RevisionCellChange and its children
func (_fdbfe *CT_RevisionCellChange) Validate() error {
	return _fdbfe.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0065\u006cl\u0043\u0068\u0061\u006e\u0067\u0065")
}

// ValidateWithPath validates the CT_MetadataStringIndex and its children, prefixing error messages with path
func (_gdaa *CT_MetadataStringIndex) ValidateWithPath(path string) error { return nil }
func (_efcea *Sst) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0073\u0074"
	return _efcea.CT_Sst.MarshalXML(e, start)
}

// Validate validates the CT_Reviewed and its children
func (_ecafea *CT_Reviewed) Validate() error {
	return _ecafea.ValidateWithPath("C\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064")
}
func (_dcage ST_DataConsolidateFunction) ValidateWithPath(path string) error {
	switch _dcage {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcage))
	}
	return nil
}
func (_becae ST_TimePeriod) ValidateWithPath(path string) error {
	switch _becae {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_becae))
	}
	return nil
}
func (_bbdaa ST_SheetState) Validate() error { return _bbdaa.ValidateWithPath("") }

// ValidateWithPath validates the CT_SheetView and its children, prefixing error messages with path
func (_ecaga *CT_SheetView) ValidateWithPath(path string) error {
	if _bdbgc := _ecaga.ViewAttr.ValidateWithPath(path + "\u002fV\u0069\u0065\u0077\u0041\u0074\u0074r"); _bdbgc != nil {
		return _bdbgc
	}
	if _ecaga.Pane != nil {
		if _bfagga := _ecaga.Pane.ValidateWithPath(path + "\u002f\u0050\u0061n\u0065"); _bfagga != nil {
			return _bfagga
		}
	}
	for _efccaa, _dccce := range _ecaga.Selection {
		if _fdeea := _dccce.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0053\u0065\u006ce\u0063\u0074\u0069\u006f\u006e\u005b\u0025\u0064\u005d", path, _efccaa)); _fdeea != nil {
			return _fdeea
		}
	}
	for _agabe, _gacaa := range _ecaga.PivotSelection {
		if _eabfed := _gacaa.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0050\u0069vo\u0074S\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u005b\u0025\u0064\u005d", path, _agabe)); _eabfed != nil {
			return _eabfed
		}
	}
	if _ecaga.ExtLst != nil {
		if _ggcde := _ecaga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggcde != nil {
			return _ggcde
		}
	}
	return nil
}
func (_gffddd *CT_Parameter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gffddd.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_gffddd.NameAttr)})
	}
	if _gffddd.SqlTypeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073q\u006c\u0054\u0079\u0070\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_gffddd.SqlTypeAttr)})
	}
	if _gffddd.ParameterTypeAttr != ST_ParameterTypeUnset {
		_ebdcbe, _egfdc := _gffddd.ParameterTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0054\u0079\u0070\u0065"})
		if _egfdc != nil {
			return _egfdc
		}
		start.Attr = append(start.Attr, _ebdcbe)
	}
	if _gffddd.RefreshOnChangeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072e\u0066r\u0065\u0073\u0068\u004f\u006e\u0043\u0068\u0061\u006e\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gffddd.RefreshOnChangeAttr))})
	}
	if _gffddd.PromptAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_gffddd.PromptAttr)})
	}
	if _gffddd.BooleanAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062o\u006f\u006c\u0065\u0061\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gffddd.BooleanAttr))})
	}
	if _gffddd.DoubleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u006f\u0075\u0062\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_gffddd.DoubleAttr)})
	}
	if _gffddd.IntegerAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069n\u0074\u0065\u0067\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_gffddd.IntegerAttr)})
	}
	if _gffddd.StringAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0072\u0069\u006e\u0067"}, Value: _fc.Sprintf("\u0025\u0076", *_gffddd.StringAttr)})
	}
	if _gffddd.CellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0065\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_gffddd.CellAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the StyleSheet and its children
func (_bfagc *StyleSheet) Validate() error {
	return _bfagc.ValidateWithPath("\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074")
}

// Validate validates the CT_CellSmartTags and its children
func (_eccaa *CT_CellSmartTags) Validate() error {
	return _eccaa.ValidateWithPath("\u0043\u0054_\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

// ValidateWithPath validates the CT_ChartsheetView and its children, prefixing error messages with path
func (_efe *CT_ChartsheetView) ValidateWithPath(path string) error {
	if _efe.ExtLst != nil {
		if _afadb := _efe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afadb != nil {
			return _afadb
		}
	}
	return nil
}
func (_cbafb ST_Pane) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cfbcgg := _a.Attr{}
	_cfbcgg.Name = name
	switch _cbafb {
	case ST_PaneUnset:
		_cfbcgg.Value = ""
	case ST_PaneBottomRight:
		_cfbcgg.Value = "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case ST_PaneTopRight:
		_cfbcgg.Value = "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PaneBottomLeft:
		_cfbcgg.Value = "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case ST_PaneTopLeft:
		_cfbcgg.Value = "\u0074o\u0070\u004c\u0065\u0066\u0074"
	}
	return _cfbcgg, nil
}

// Validate validates the CT_MeasureDimensionMaps and its children
func (_cfced *CT_MeasureDimensionMaps) Validate() error {
	return _cfced.ValidateWithPath("\u0043\u0054\u005fMe\u0061\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u0073")
}
func (_adagb *ST_VolValueType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_adagb = 0
	case "\u0062":
		*_adagb = 1
	case "\u006e":
		*_adagb = 2
	case "\u0065":
		*_adagb = 3
	case "\u0073":
		*_adagb = 4
	}
	return nil
}
func NewCT_PageBreak() *CT_PageBreak { _eeeff := &CT_PageBreak{}; return _eeeff }
func (_ebcfg *ST_ItemType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eggdb, _bbfcda := d.Token()
	if _bbfcda != nil {
		return _bbfcda
	}
	if _gafcfb, _cacgf := _eggdb.(_a.EndElement); _cacgf && _gafcfb.Name == start.Name {
		*_ebcfg = 1
		return nil
	}
	if _bbcbea, _bdeef := _eggdb.(_a.CharData); !_bdeef {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eggdb)
	} else {
		switch string(_bbcbea) {
		case "":
			*_ebcfg = 0
		case "\u0064\u0061\u0074\u0061":
			*_ebcfg = 1
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_ebcfg = 2
		case "\u0073\u0075\u006d":
			*_ebcfg = 3
		case "\u0063\u006f\u0075\u006e\u0074\u0041":
			*_ebcfg = 4
		case "\u0061\u0076\u0067":
			*_ebcfg = 5
		case "\u006d\u0061\u0078":
			*_ebcfg = 6
		case "\u006d\u0069\u006e":
			*_ebcfg = 7
		case "\u0070r\u006f\u0064\u0075\u0063\u0074":
			*_ebcfg = 8
		case "\u0063\u006f\u0075n\u0074":
			*_ebcfg = 9
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_ebcfg = 10
		case "\u0073t\u0064\u0044\u0065\u0076\u0050":
			*_ebcfg = 11
		case "\u0076\u0061\u0072":
			*_ebcfg = 12
		case "\u0076\u0061\u0072\u0050":
			*_ebcfg = 13
		case "\u0067\u0072\u0061n\u0064":
			*_ebcfg = 14
		case "\u0062\u006c\u0061n\u006b":
			*_ebcfg = 15
		}
	}
	_eggdb, _bbfcda = d.Token()
	if _bbfcda != nil {
		return _bbfcda
	}
	if _badde, _acaegb := _eggdb.(_a.EndElement); _acaegb && _badde.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eggdb)
}
func (_fbbdf *ST_ExternalConnectionType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gfbgca, _ggacg := d.Token()
	if _ggacg != nil {
		return _ggacg
	}
	if _bdbbg, _bfadb := _gfbgca.(_a.EndElement); _bfadb && _bdbbg.Name == start.Name {
		*_fbbdf = 1
		return nil
	}
	if _fgeac, _fdaaa := _gfbgca.(_a.CharData); !_fdaaa {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfbgca)
	} else {
		switch string(_fgeac) {
		case "":
			*_fbbdf = 0
		case "\u0067e\u006e\u0065\u0072\u0061\u006c":
			*_fbbdf = 1
		case "\u0074\u0065\u0078\u0074":
			*_fbbdf = 2
		case "\u004d\u0044\u0059":
			*_fbbdf = 3
		case "\u0044\u004d\u0059":
			*_fbbdf = 4
		case "\u0059\u004d\u0044":
			*_fbbdf = 5
		case "\u004d\u0059\u0044":
			*_fbbdf = 6
		case "\u0044\u0059\u004d":
			*_fbbdf = 7
		case "\u0059\u0044\u004d":
			*_fbbdf = 8
		case "\u0073\u006b\u0069\u0070":
			*_fbbdf = 9
		case "\u0045\u004d\u0044":
			*_fbbdf = 10
		}
	}
	_gfbgca, _ggacg = d.Token()
	if _ggacg != nil {
		return _ggacg
	}
	if _egafg, _acdce := _gfbgca.(_a.EndElement); _acdce && _egafg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfbgca)
}

type CT_PivotAreas struct {

	// Pivot Area Count
	CountAttr *uint32

	// Pivot Area
	PivotArea []*CT_PivotArea
}

// Validate validates the CT_DataRefs and its children
func (_cdgb *CT_DataRefs) Validate() error {
	return _cdgb.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073")
}
func NewCT_QueryCache() *CT_QueryCache { _effa := &CT_QueryCache{}; return _effa }
func (_gaggba *ST_TableStyleType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eeaaf, _ffged := d.Token()
	if _ffged != nil {
		return _ffged
	}
	if _ebeabc, _dadad := _eeaaf.(_a.EndElement); _dadad && _ebeabc.Name == start.Name {
		*_gaggba = 1
		return nil
	}
	if _cafdcc, _ddacc := _eeaaf.(_a.CharData); !_ddacc {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eeaaf)
	} else {
		switch string(_cafdcc) {
		case "":
			*_gaggba = 0
		case "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065":
			*_gaggba = 1
		case "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw":
			*_gaggba = 2
		case "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_gaggba = 3
		case "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
			*_gaggba = 4
		case "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
			*_gaggba = 5
		case "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065":
			*_gaggba = 6
		case "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065":
			*_gaggba = 7
		case "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065":
			*_gaggba = 8
		case "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065":
			*_gaggba = 9
		case "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c":
			*_gaggba = 10
		case "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c":
			*_gaggba = 11
		case "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c":
			*_gaggba = 12
		case "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c":
			*_gaggba = 13
		case "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
			*_gaggba = 14
		case "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e":
			*_gaggba = 15
		case "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
			*_gaggba = 16
		case "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_gaggba = 17
		case "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077":
			*_gaggba = 18
		case "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_gaggba = 19
		case "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077":
			*_gaggba = 20
		case "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
			*_gaggba = 21
		case "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067":
			*_gaggba = 22
		case "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
			*_gaggba = 23
		case "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
			*_gaggba = 24
		case "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067":
			*_gaggba = 25
		case "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
			*_gaggba = 26
		case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073":
			*_gaggba = 27
		case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073":
			*_gaggba = 28
		}
	}
	_eeaaf, _ffged = d.Token()
	if _ffged != nil {
		return _ffged
	}
	if _bdafc, _eeaac := _eeaaf.(_a.EndElement); _eeaac && _bdafc.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eeaaf)
}

// ValidateWithPath validates the CT_OleItem and its children, prefixing error messages with path
func (_bdcdfc *CT_OleItem) ValidateWithPath(path string) error { return nil }
func (_eacgb *CT_QueryTableFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afga := range start.Attr {
		if _afga.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbbae, _gebad := _f.ParseUint(_afga.Value, 10, 32)
			if _gebad != nil {
				return _gebad
			}
			_begab := uint32(_fbbae)
			_eacgb.CountAttr = &_begab
			continue
		}
	}
_befbbd:
	for {
		_fbgcfd, _fdcde := d.Token()
		if _fdcde != nil {
			return _fdcde
		}
		switch _gedcd := _fbgcfd.(type) {
		case _a.StartElement:
			switch _gedcd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}:
				_gabfc := NewCT_QueryTableField()
				if _gdafc := d.DecodeElement(_gabfc, &_gedcd); _gdafc != nil {
					return _gdafc
				}
				_eacgb.QueryTableField = append(_eacgb.QueryTableField, _gabfc)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061bl\u0065\u0046\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _gedcd.Name)
				if _bfbbe := d.Skip(); _bfbbe != nil {
					return _bfbbe
				}
			}
		case _a.EndElement:
			break _befbbd
		case _a.CharData:
		}
	}
	return nil
}
func (_bd *CT_AutoSortScope) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_bgdd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_bd.PivotArea, _bgdd)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_RevisionSheetRename struct {

	// Sheet Id
	SheetIdAttr uint32

	// Old Sheet Name
	OldNameAttr string

	// New Sheet Name
	NewNameAttr string
	ExtLst      *CT_ExtensionList
	RIdAttr     *uint32
	UaAttr      *bool
	RaAttr      *bool
}

func (_gefgcb *CT_RgbColor) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bdcdga := range start.Attr {
		if _bdcdga.Name.Local == "\u0072\u0067\u0062" {
			_dfdd, _egbag := _bdcdga.Value, error(nil)
			if _egbag != nil {
				return _egbag
			}
			_gefgcb.RgbAttr = &_dfdd
			continue
		}
	}
	for {
		_aebgf, _gcdagc := d.Token()
		if _gcdagc != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072\u003a\u0020\u0025\u0073", _gcdagc)
		}
		if _cggde, _ffbfc := _aebgf.(_a.EndElement); _ffbfc && _cggde.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TableType byte

func NewCT_DataConsolidate() *CT_DataConsolidate { _adee := &CT_DataConsolidate{}; return _adee }
func NewCT_TableStyle() *CT_TableStyle           { _gfgdab := &CT_TableStyle{}; return _gfgdab }
func (_dcgbg ST_MdxKPIProperty) Validate() error { return _dcgbg.ValidateWithPath("") }
func NewCT_Location() *CT_Location               { _dedfb := &CT_Location{}; return _dedfb }

// Validate validates the CT_TablePart and its children
func (_ggbec *CT_TablePart) Validate() error {
	return _ggbec.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074")
}
func (_gddacg ST_TextHAlign) String() string {
	switch _gddacg {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0066\u0074"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0072\u0069\u0067h\u0074"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func (_afdaa ST_SheetViewType) String() string {
	switch _afdaa {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077"
	case 3:
		return "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074"
	}
	return ""
}

// ValidateWithPath validates the CT_CustomSheetViews and its children, prefixing error messages with path
func (_ccecb *CT_CustomSheetViews) ValidateWithPath(path string) error {
	for _ccecd, _dgdbg := range _ccecb.CustomSheetView {
		if _bgdc := _dgdbg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u005b\u0025d\u005d", path, _ccecd)); _bgdc != nil {
			return _bgdc
		}
	}
	return nil
}
func (_fcdcg *ST_FilterOperator) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fcdcg = 0
	case "\u0065\u0071\u0075a\u006c":
		*_fcdcg = 1
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_fcdcg = 2
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_fcdcg = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_fcdcg = 4
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_fcdcg = 5
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_fcdcg = 6
	}
	return nil
}

type Sst struct{ CT_Sst }

func (_caeed ST_VolValueType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_baffde := _a.Attr{}
	_baffde.Name = name
	switch _caeed {
	case ST_VolValueTypeUnset:
		_baffde.Value = ""
	case ST_VolValueTypeB:
		_baffde.Value = "\u0062"
	case ST_VolValueTypeN:
		_baffde.Value = "\u006e"
	case ST_VolValueTypeE:
		_baffde.Value = "\u0065"
	case ST_VolValueTypeS:
		_baffde.Value = "\u0073"
	}
	return _baffde, nil
}

// Validate validates the CT_Scenarios and its children
func (_dggfce *CT_Scenarios) Validate() error {
	return _dggfce.ValidateWithPath("\u0043\u0054\u005fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073")
}
func NewCT_Cols() *CT_Cols { _decdd := &CT_Cols{}; return _decdd }

// ValidateWithPath validates the CT_Scenario and its children, prefixing error messages with path
func (_bdccc *CT_Scenario) ValidateWithPath(path string) error {
	for _fbedgb, _egegec := range _bdccc.InputCells {
		if _daaag := _egegec.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006cs\u005b\u0025\u0064\u005d", path, _fbedgb)); _daaag != nil {
			return _daaag
		}
	}
	return nil
}
func NewCT_Consolidation() *CT_Consolidation {
	_baba := &CT_Consolidation{}
	_baba.RangeSets = NewCT_RangeSets()
	return _baba
}

// ValidateWithPath validates the CT_Macrosheet and its children, prefixing error messages with path
func (_fgaae *CT_Macrosheet) ValidateWithPath(path string) error {
	if _fgaae.SheetPr != nil {
		if _cebgfa := _fgaae.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _cebgfa != nil {
			return _cebgfa
		}
	}
	if _fgaae.Dimension != nil {
		if _bafdf := _fgaae.Dimension.ValidateWithPath(path + "\u002f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"); _bafdf != nil {
			return _bafdf
		}
	}
	if _fgaae.SheetViews != nil {
		if _ffdfa := _fgaae.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _ffdfa != nil {
			return _ffdfa
		}
	}
	if _fgaae.SheetFormatPr != nil {
		if _cdddf := _fgaae.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _cdddf != nil {
			return _cdddf
		}
	}
	for _ecccc, _bgecd := range _fgaae.Cols {
		if _ebcb := _bgecd.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0043\u006f\u006c\u0073\u005b\u0025\u0064\u005d", path, _ecccc)); _ebcb != nil {
			return _ebcb
		}
	}
	if _edab := _fgaae.SheetData.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"); _edab != nil {
		return _edab
	}
	if _fgaae.SheetProtection != nil {
		if _dedab := _fgaae.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _dedab != nil {
			return _dedab
		}
	}
	if _fgaae.AutoFilter != nil {
		if _dfdcb := _fgaae.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _dfdcb != nil {
			return _dfdcb
		}
	}
	if _fgaae.SortState != nil {
		if _aaeda := _fgaae.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _aaeda != nil {
			return _aaeda
		}
	}
	if _fgaae.DataConsolidate != nil {
		if _cfcb := _fgaae.DataConsolidate.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0043o\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"); _cfcb != nil {
			return _cfcb
		}
	}
	if _fgaae.CustomSheetViews != nil {
		if _acfdf := _fgaae.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _acfdf != nil {
			return _acfdf
		}
	}
	if _fgaae.PhoneticPr != nil {
		if _begcd := _fgaae.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _begcd != nil {
			return _begcd
		}
	}
	for _feae, _ddae := range _fgaae.ConditionalFormatting {
		if _gbadd := _ddae.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043o\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072m\u0061\u0074\u0074\u0069\u006e\u0067\u005b%\u0064\u005d", path, _feae)); _gbadd != nil {
			return _gbadd
		}
	}
	if _fgaae.PrintOptions != nil {
		if _gcbag := _fgaae.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _gcbag != nil {
			return _gcbag
		}
	}
	if _fgaae.PageMargins != nil {
		if _fafb := _fgaae.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _fafb != nil {
			return _fafb
		}
	}
	if _fgaae.PageSetup != nil {
		if _fdeggg := _fgaae.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _fdeggg != nil {
			return _fdeggg
		}
	}
	if _fgaae.HeaderFooter != nil {
		if _afbee := _fgaae.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _afbee != nil {
			return _afbee
		}
	}
	if _fgaae.RowBreaks != nil {
		if _gcaca := _fgaae.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _gcaca != nil {
			return _gcaca
		}
	}
	if _fgaae.ColBreaks != nil {
		if _faaea := _fgaae.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _faaea != nil {
			return _faaea
		}
	}
	if _fgaae.CustomProperties != nil {
		if _aaecb := _fgaae.CustomProperties.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"); _aaecb != nil {
			return _aaecb
		}
	}
	if _fgaae.Drawing != nil {
		if _cafeg := _fgaae.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _cafeg != nil {
			return _cafeg
		}
	}
	if _fgaae.LegacyDrawing != nil {
		if _abab := _fgaae.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _abab != nil {
			return _abab
		}
	}
	if _fgaae.LegacyDrawingHF != nil {
		if _gafdf := _fgaae.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _gafdf != nil {
			return _gafdf
		}
	}
	if _fgaae.DrawingHF != nil {
		if _bfcag := _fgaae.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _bfcag != nil {
			return _bfcag
		}
	}
	if _fgaae.Picture != nil {
		if _bcagf := _fgaae.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _bcagf != nil {
			return _bcagf
		}
	}
	if _fgaae.OleObjects != nil {
		if _fcbff := _fgaae.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _fcbff != nil {
			return _fcbff
		}
	}
	if _fgaae.ExtLst != nil {
		if _fgcgd := _fgaae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgcgd != nil {
			return _fgcgd
		}
	}
	return nil
}
func (_gddgfd *CT_RowFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gddgfd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_gddgfd.CountAttr)})
	}
	e.EncodeToken(start)
	_acgec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064"}}
	for _, _ecbgc := range _gddgfd.Field {
		e.EncodeElement(_ecbgc, _acgec)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_egef *CT_RevisionHeader) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _egef.GuidAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _egef.DateTimeAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _egef.MaxSheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _egef.UserNameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _egef.IdAttr)})
	if _egef.MinRIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e\u0052\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_egef.MinRIdAttr)})
	}
	if _egef.MaxRIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078\u0052\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_egef.MaxRIdAttr)})
	}
	e.EncodeToken(start)
	_gaebff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}}
	e.EncodeElement(_egef.SheetIdMap, _gaebff)
	if _egef.ReviewedList != nil {
		_edddea := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ar\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}}
		e.EncodeElement(_egef.ReviewedList, _edddea)
	}
	if _egef.ExtLst != nil {
		_cdbec := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_egef.ExtLst, _cdbec)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gcffa *CT_OleItem) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _gcffa.NameAttr)})
	if _gcffa.IconAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0063\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gcffa.IconAttr))})
	}
	if _gcffa.AdviseAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0064\u0076\u0069\u0073\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gcffa.AdviseAttr))})
	}
	if _gcffa.PreferPicAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gcffa.PreferPicAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_WebPublishing struct {

	// Use CSS
	CssAttr *bool

	// Thicket
	ThicketAttr *bool

	// Enable Long File Names
	LongFileNamesAttr *bool

	// VML in Browsers
	VmlAttr *bool

	// Allow PNG
	AllowPngAttr *bool

	// Target Screen Size
	TargetScreenSizeAttr ST_TargetScreenSize

	// DPI
	DpiAttr *uint32

	// Code Page
	CodePageAttr *uint32

	// Character Set
	CharacterSetAttr *string
}
type CT_CellStyles struct {

	// Style Count
	CountAttr *uint32

	// Cell Style
	CellStyle []*CT_CellStyle
}

func (_cgebf *CT_SharedItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfgdd := range start.Attr {
		if _dfgdd.Name.Local == "\u006di\u006e\u0044\u0061\u0074\u0065" {
			_ffegg, _fefafb := ParseStdlibTime(_dfgdd.Value)
			if _fefafb != nil {
				return _fefafb
			}
			_cgebf.MinDateAttr = &_ffegg
			continue
		}
		if _dfgdd.Name.Local == "\u0063\u006f\u006e\u0074ai\u006e\u0073\u0053\u0065\u006d\u0069\u004d\u0069\u0078\u0065\u0064\u0054\u0079\u0070e\u0073" {
			_eedgb, _ccafed := _f.ParseBool(_dfgdd.Value)
			if _ccafed != nil {
				return _ccafed
			}
			_cgebf.ContainsSemiMixedTypesAttr = &_eedgb
			continue
		}
		if _dfgdd.Name.Local == "\u006da\u0078\u0044\u0061\u0074\u0065" {
			_bbcee, _gadba := ParseStdlibTime(_dfgdd.Value)
			if _gadba != nil {
				return _gadba
			}
			_cgebf.MaxDateAttr = &_bbcee
			continue
		}
		if _dfgdd.Name.Local == "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0044\u0061\u0074\u0065" {
			_eagcf, _acdbba := _f.ParseBool(_dfgdd.Value)
			if _acdbba != nil {
				return _acdbba
			}
			_cgebf.ContainsDateAttr = &_eagcf
			continue
		}
		if _dfgdd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dfdgg, _fcadbg := _f.ParseUint(_dfgdd.Value, 10, 32)
			if _fcadbg != nil {
				return _fcadbg
			}
			_daccd := uint32(_dfdgg)
			_cgebf.CountAttr = &_daccd
			continue
		}
		if _dfgdd.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042\u006c\u0061\u006e\u006b" {
			_ccfgaa, _gbgdc := _f.ParseBool(_dfgdd.Value)
			if _gbgdc != nil {
				return _gbgdc
			}
			_cgebf.ContainsBlankAttr = &_ccfgaa
			continue
		}
		if _dfgdd.Name.Local == "\u006c\u006f\u006e\u0067\u0054\u0065\u0078\u0074" {
			_befcf, _cffceb := _f.ParseBool(_dfgdd.Value)
			if _cffceb != nil {
				return _cffceb
			}
			_cgebf.LongTextAttr = &_befcf
			continue
		}
		if _dfgdd.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u004eu\u006d\u0062\u0065\u0072" {
			_dfgac, _geabb := _f.ParseBool(_dfgdd.Value)
			if _geabb != nil {
				return _geabb
			}
			_cgebf.ContainsNumberAttr = &_dfgac
			continue
		}
		if _dfgdd.Name.Local == "\u006d\u0069\u006e\u0056\u0061\u006c\u0075\u0065" {
			_deeff, _fdgbb := _f.ParseFloat(_dfgdd.Value, 64)
			if _fdgbb != nil {
				return _fdgbb
			}
			_cgebf.MinValueAttr = &_deeff
			continue
		}
		if _dfgdd.Name.Local == "\u006d\u0061\u0078\u0056\u0061\u006c\u0075\u0065" {
			_eaagc, _bfbae := _f.ParseFloat(_dfgdd.Value, 64)
			if _bfbae != nil {
				return _bfbae
			}
			_cgebf.MaxValueAttr = &_eaagc
			continue
		}
		if _dfgdd.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u004e\u006f\u006e\u0044\u0061\u0074\u0065" {
			_bfdcc, _fdfbc := _f.ParseBool(_dfgdd.Value)
			if _fdfbc != nil {
				return _fdfbc
			}
			_cgebf.ContainsNonDateAttr = &_bfdcc
			continue
		}
		if _dfgdd.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0053t\u0072\u0069\u006e\u0067" {
			_bbfcc, _bdcgd := _f.ParseBool(_dfgdd.Value)
			if _bdcgd != nil {
				return _bdcgd
			}
			_cgebf.ContainsStringAttr = &_bbfcc
			continue
		}
		if _dfgdd.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u004di\u0078\u0065d\u0054\u0079\u0070\u0065\u0073" {
			_ddgdec, _aebed := _f.ParseBool(_dfgdd.Value)
			if _aebed != nil {
				return _aebed
			}
			_cgebf.ContainsMixedTypesAttr = &_ddgdec
			continue
		}
		if _dfgdd.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u0049\u006e\u0074\u0065\u0067\u0065\u0072" {
			_eaega, _gbgad := _f.ParseBool(_dfgdd.Value)
			if _gbgad != nil {
				return _gbgad
			}
			_cgebf.ContainsIntegerAttr = &_eaega
			continue
		}
	}
_fgfea:
	for {
		_abgcb, _aeefd := d.Token()
		if _aeefd != nil {
			return _aeefd
		}
		switch _decga := _abgcb.(type) {
		case _a.StartElement:
			switch _decga.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_agdecd := NewCT_Missing()
				if _gdbfc := d.DecodeElement(_agdecd, &_decga); _gdbfc != nil {
					return _gdbfc
				}
				_cgebf.M = append(_cgebf.M, _agdecd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_gbcdfe := NewCT_Number()
				if _eagac := d.DecodeElement(_gbcdfe, &_decga); _eagac != nil {
					return _eagac
				}
				_cgebf.N = append(_cgebf.N, _gbcdfe)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_affd := NewCT_Boolean()
				if _gcefg := d.DecodeElement(_affd, &_decga); _gcefg != nil {
					return _gcefg
				}
				_cgebf.B = append(_cgebf.B, _affd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_beggf := NewCT_Error()
				if _aafed := d.DecodeElement(_beggf, &_decga); _aafed != nil {
					return _aafed
				}
				_cgebf.E = append(_cgebf.E, _beggf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_cfdfe := NewCT_String()
				if _fcgcg := d.DecodeElement(_cfdfe, &_decga); _fcgcg != nil {
					return _fcgcg
				}
				_cgebf.S = append(_cgebf.S, _cfdfe)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_aefec := NewCT_DateTime()
				if _befab := d.DecodeElement(_aefec, &_decga); _befab != nil {
					return _befab
				}
				_cgebf.D = append(_cgebf.D, _aefec)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0049t\u0065m\u0073\u0020\u0025\u0076", _decga.Name)
				if _cadfca := d.Skip(); _cadfca != nil {
					return _cadfca
				}
			}
		case _a.EndElement:
			break _fgfea
		case _a.CharData:
		}
	}
	return nil
}

type CT_Schema struct {

	// Schema ID
	IDAttr string

	// Schema Reference
	SchemaRefAttr *string

	// Schema Root Namespace
	NamespaceAttr *string

	// Schema Language
	SchemaLanguageAttr *string
	Any                _fca.Any
}
type ST_FontScheme byte
type CT_ProtectedRange struct {

	// Legacy Password
	PasswordAttr *string

	// Sequence of References
	SqrefAttr ST_Sqref

	// Name
	NameAttr string

	// Security Descriptor
	SecurityDescriptorAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Security Descriptor
	SecurityDescriptor []string
}

func (_dcdf *CT_Consolidation) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dcdf.AutoPageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcdf.AutoPageAttr))})
	}
	e.EncodeToken(start)
	if _dcdf.Pages != nil {
		_gdced := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0073"}}
		e.EncodeElement(_dcdf.Pages, _gdced)
	}
	_ddad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ar\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073"}}
	e.EncodeElement(_dcdf.RangeSets, _ddad)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aebcb ST_TextVAlign) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_aebcb.String(), start)
}
func (_cgebe *CT_RangeSets) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dbfae := range start.Attr {
		if _dbfae.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_daccgd, _ecdbf := _f.ParseUint(_dbfae.Value, 10, 32)
			if _ecdbf != nil {
				return _ecdbf
			}
			_cbfbbc := uint32(_daccgd)
			_cgebe.CountAttr = &_cbfbbc
			continue
		}
	}
_eeggb:
	for {
		_fcacd, _dgegb := d.Token()
		if _dgegb != nil {
			return _dgegb
		}
		switch _dagcd := _fcacd.(type) {
		case _a.StartElement:
			switch _dagcd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}:
				_fgcgg := NewCT_RangeSet()
				if _gfdcf := d.DecodeElement(_fgcgg, &_dagcd); _gfdcf != nil {
					return _gfdcf
				}
				_cgebe.RangeSet = append(_cgebe.RangeSet, _fgcgg)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0061\u006eg\u0065\u0053\u0065\u0074\u0073\u0020\u0025\u0076", _dagcd.Name)
				if _dbggb := d.Skip(); _dbggb != nil {
					return _dbggb
				}
			}
		case _a.EndElement:
			break _eeggb
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_ExternalLinkChoice() *CT_ExternalLinkChoice {
	_edgc := &CT_ExternalLinkChoice{}
	return _edgc
}

type CT_Authors struct {

	// Author
	Author []string
}

// Validate validates the CT_MemberProperty and its children
func (_dcaf *CT_MemberProperty) Validate() error {
	return _dcaf.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}
func (_bdaba *CT_RevisionRowColumn) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bdaba.ActionAttr = ST_rwColActionType(1)
	for _, _fbccdb := range start.Attr {
		if _fbccdb.Name.Local == "\u0073\u0049\u0064" {
			_bcbcf, _cfgdc := _f.ParseUint(_fbccdb.Value, 10, 32)
			if _cfgdc != nil {
				return _cfgdc
			}
			_bdaba.SIdAttr = uint32(_bcbcf)
			continue
		}
		if _fbccdb.Name.Local == "\u0065\u006f\u006c" {
			_gfdcb, _dgbee := _f.ParseBool(_fbccdb.Value)
			if _dgbee != nil {
				return _dgbee
			}
			_bdaba.EolAttr = &_gfdcb
			continue
		}
		if _fbccdb.Name.Local == "\u0072\u0065\u0066" {
			_efddbe, _abdf := _fbccdb.Value, error(nil)
			if _abdf != nil {
				return _abdf
			}
			_bdaba.RefAttr = _efddbe
			continue
		}
		if _fbccdb.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_bdaba.ActionAttr.UnmarshalXMLAttr(_fbccdb)
			continue
		}
		if _fbccdb.Name.Local == "\u0065\u0064\u0067\u0065" {
			_ccceg, _efdaf := _f.ParseBool(_fbccdb.Value)
			if _efdaf != nil {
				return _efdaf
			}
			_bdaba.EdgeAttr = &_ccceg
			continue
		}
		if _fbccdb.Name.Local == "\u0072\u0049\u0064" {
			_affcg, _aeegg := _f.ParseUint(_fbccdb.Value, 10, 32)
			if _aeegg != nil {
				return _aeegg
			}
			_fcbaed := uint32(_affcg)
			_bdaba.RIdAttr = &_fcbaed
			continue
		}
		if _fbccdb.Name.Local == "\u0075\u0061" {
			_adgfa, _dfgag := _f.ParseBool(_fbccdb.Value)
			if _dfgag != nil {
				return _dfgag
			}
			_bdaba.UaAttr = &_adgfa
			continue
		}
		if _fbccdb.Name.Local == "\u0072\u0061" {
			_becbc, _bggfb := _f.ParseBool(_fbccdb.Value)
			if _bggfb != nil {
				return _bggfb
			}
			_bdaba.RaAttr = &_becbc
			continue
		}
	}
_ggceb:
	for {
		_faead, _gcdggd := d.Token()
		if _gcdggd != nil {
			return _gcdggd
		}
		switch _bedfg := _faead.(type) {
		case _a.StartElement:
			switch _bedfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
				_aegc := NewCT_UndoInfo()
				if _bfba := d.DecodeElement(_aegc, &_bedfg); _bfba != nil {
					return _bfba
				}
				_bdaba.Undo = append(_bdaba.Undo, _aegc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_ebfba := NewCT_RevisionCellChange()
				if _fbbfce := d.DecodeElement(_ebfba, &_bedfg); _fbbfce != nil {
					return _fbbfce
				}
				_bdaba.Rcc = append(_bdaba.Rcc, _ebfba)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_baceeb := NewCT_RevisionFormatting()
				if _caccaf := d.DecodeElement(_baceeb, &_bedfg); _caccaf != nil {
					return _caccaf
				}
				_bdaba.Rfmt = append(_bdaba.Rfmt, _baceeb)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0052\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0020\u0025\u0076", _bedfg.Name)
				if _defdb := d.Skip(); _defdb != nil {
					return _defdb
				}
			}
		case _a.EndElement:
			break _ggceb
		case _a.CharData:
		}
	}
	return nil
}

type CT_RevisionMove struct {

	// Sheet Id
	SheetIdAttr uint32

	// Source
	SourceAttr string

	// Destination
	DestinationAttr string

	// Source Sheet Id
	SourceSheetIdAttr *uint32

	// Undo
	Undo []*CT_UndoInfo

	// Revision Cell Change
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt    []*CT_RevisionFormatting
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}
type CT_VolTypes struct {

	// Volatile Dependency Type
	VolType []*CT_VolType
	ExtLst  *CT_ExtensionList
}

func (_ccfcd ST_SortMethod) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_ccbdf := _a.Attr{}
	_ccbdf.Name = name
	switch _ccfcd {
	case ST_SortMethodUnset:
		_ccbdf.Value = ""
	case ST_SortMethodStroke:
		_ccbdf.Value = "\u0073\u0074\u0072\u006f\u006b\u0065"
	case ST_SortMethodPinYin:
		_ccbdf.Value = "\u0070\u0069\u006e\u0059\u0069\u006e"
	case ST_SortMethodNone:
		_ccbdf.Value = "\u006e\u006f\u006e\u0065"
	}
	return _ccbdf, nil
}

type ST_ConditionalFormattingOperator byte

func NewCT_CustomFilters() *CT_CustomFilters { _cffee := &CT_CustomFilters{}; return _cffee }

type CT_SheetBackgroundPicture struct{ IdAttr string }

// ValidateWithPath validates the CT_Fills and its children, prefixing error messages with path
func (_eddca *CT_Fills) ValidateWithPath(path string) error {
	for _cdfbf, _ebfdbd := range _eddca.Fill {
		if _gefe := _ebfdbd.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0046\u0069\u006c\u006c\u005b\u0025\u0064\u005d", path, _cdfbf)); _gefe != nil {
			return _gefe
		}
	}
	return nil
}
func NewCT_TableStyleInfo() *CT_TableStyleInfo { _fabdf := &CT_TableStyleInfo{}; return _fabdf }

// ValidateWithPath validates the CT_SingleXmlCell and its children, prefixing error messages with path
func (_abffdd *CT_SingleXmlCell) ValidateWithPath(path string) error {
	if _begfaa := _abffdd.XmlCellPr.ValidateWithPath(path + "\u002f\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072"); _begfaa != nil {
		return _begfaa
	}
	if _abffdd.ExtLst != nil {
		if _dbgba := _abffdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbgba != nil {
			return _dbgba
		}
	}
	return nil
}
func (_gdeacb ST_HorizontalAlignment) String() string {
	switch _gdeacb {
	case 0:
		return ""
	case 1:
		return "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case 2:
		return "\u006c\u0065\u0066\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "\u0072\u0069\u0067h\u0074"
	case 5:
		return "\u0066\u0069\u006c\u006c"
	case 6:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 7:
		return "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073"
	case 8:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func NewCT_GroupItems() *CT_GroupItems { _bbfbd := &CT_GroupItems{}; return _bbfbd }
func (_bafba *ST_TotalsRowFunction) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bafba = 0
	case "\u006e\u006f\u006e\u0065":
		*_bafba = 1
	case "\u0073\u0075\u006d":
		*_bafba = 2
	case "\u006d\u0069\u006e":
		*_bafba = 3
	case "\u006d\u0061\u0078":
		*_bafba = 4
	case "\u0061v\u0065\u0072\u0061\u0067\u0065":
		*_bafba = 5
	case "\u0063\u006f\u0075n\u0074":
		*_bafba = 6
	case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
		*_bafba = 7
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_bafba = 8
	case "\u0076\u0061\u0072":
		*_bafba = 9
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_bafba = 10
	}
	return nil
}
func (_afdgag *PivotCacheRecords) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061:\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073"
	return _afdgag.CT_PivotCacheRecords.MarshalXML(e, start)
}
func (_fcgcd *CT_CustomSheetView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fcgcd.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _gcedg := range start.Attr {
		if _gcedg.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_fcgcd.StateAttr.UnmarshalXMLAttr(_gcedg)
			continue
		}
		if _gcedg.Name.Local == "\u0067\u0075\u0069\u0064" {
			_gdcf, _effda := _gcedg.Value, error(nil)
			if _effda != nil {
				return _effda
			}
			_fcgcd.GuidAttr = _gdcf
			continue
		}
		if _gcedg.Name.Local == "\u0066\u0069\u006ct\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065" {
			_adbd, _aecf := _f.ParseBool(_gcedg.Value)
			if _aecf != nil {
				return _aecf
			}
			_fcgcd.FilterUniqueAttr = &_adbd
			continue
		}
		if _gcedg.Name.Local == "\u0063o\u006c\u006f\u0072\u0049\u0064" {
			_bdag, _cceca := _f.ParseUint(_gcedg.Value, 10, 32)
			if _cceca != nil {
				return _cceca
			}
			_eecd := uint32(_bdag)
			_fcgcd.ColorIdAttr = &_eecd
			continue
		}
		if _gcedg.Name.Local == "\u0076\u0069\u0065\u0077" {
			_fcgcd.ViewAttr.UnmarshalXMLAttr(_gcedg)
			continue
		}
		if _gcedg.Name.Local == "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_bced, _fgafb := _f.ParseBool(_gcedg.Value)
			if _fgafb != nil {
				return _fgafb
			}
			_fcgcd.ShowFormulasAttr = &_bced
			continue
		}
		if _gcedg.Name.Local == "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r" {
			_cadg, _becb := _f.ParseBool(_gcedg.Value)
			if _becb != nil {
				return _becb
			}
			_fcgcd.ShowRulerAttr = &_cadg
			continue
		}
		if _gcedg.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c" {
			_gbaac, _accd := _f.ParseBool(_gcedg.Value)
			if _accd != nil {
				return _accd
			}
			_fcgcd.ShowRowColAttr = &_gbaac
			continue
		}
		if _gcedg.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_bgbg, _dcbe := _gcedg.Value, error(nil)
			if _dcbe != nil {
				return _dcbe
			}
			_fcgcd.TopLeftCellAttr = &_bgbg
			continue
		}
		if _gcedg.Name.Local == "\u007a\u0065\u0072\u006f\u0056\u0061\u006c\u0075\u0065\u0073" {
			_aefb, _fefa := _f.ParseBool(_gcedg.Value)
			if _fefa != nil {
				return _fefa
			}
			_fcgcd.ZeroValuesAttr = &_aefb
			continue
		}
		if _gcedg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_adffc, _ebgd := _f.ParseBool(_gcedg.Value)
			if _ebgd != nil {
				return _ebgd
			}
			_fcgcd.HiddenColumnsAttr = &_adffc
			continue
		}
		if _gcedg.Name.Local == "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0053\u0079m\u0062\u006f\u006c\u0073" {
			_acceg, _aaeaa := _f.ParseBool(_gcedg.Value)
			if _aaeaa != nil {
				return _aaeaa
			}
			_fcgcd.OutlineSymbolsAttr = &_acceg
			continue
		}
		if _gcedg.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072" {
			_gabcg, _dagad := _f.ParseBool(_gcedg.Value)
			if _dagad != nil {
				return _dagad
			}
			_fcgcd.FilterAttr = &_gabcg
			continue
		}
		if _gcedg.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_caf, _eadaf := _f.ParseUint(_gcedg.Value, 10, 32)
			if _eadaf != nil {
				return _eadaf
			}
			_agdgc := uint32(_caf)
			_fcgcd.ScaleAttr = &_agdgc
			continue
		}
		if _gcedg.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073" {
			_ccgec, _abcc := _f.ParseBool(_gcedg.Value)
			if _abcc != nil {
				return _abcc
			}
			_fcgcd.ShowGridLinesAttr = &_ccgec
			continue
		}
		if _gcedg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0073" {
			_aagee, _cgaea := _f.ParseBool(_gcedg.Value)
			if _cgaea != nil {
				return _cgaea
			}
			_fcgcd.HiddenRowsAttr = &_aagee
			continue
		}
		if _gcedg.Name.Local == "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e" {
			_cbef, _fbaab := _f.ParseBool(_gcedg.Value)
			if _fbaab != nil {
				return _fbaab
			}
			_fcgcd.FitToPageAttr = &_cbef
			continue
		}
		if _gcedg.Name.Local == "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a" {
			_dfbg, _cbdf := _f.ParseBool(_gcedg.Value)
			if _cbdf != nil {
				return _cbdf
			}
			_fcgcd.PrintAreaAttr = &_dfbg
			continue
		}
		if _gcedg.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072" {
			_aaeag, _fcaac := _f.ParseBool(_gcedg.Value)
			if _fcaac != nil {
				return _fcaac
			}
			_fcgcd.ShowAutoFilterAttr = &_aaeag
			continue
		}
		if _gcedg.Name.Local == "\u0073\u0068\u006f\u0077\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073" {
			_ecfb, _cbce := _f.ParseBool(_gcedg.Value)
			if _cbce != nil {
				return _cbce
			}
			_fcgcd.ShowPageBreaksAttr = &_ecfb
			continue
		}
	}
_abff:
	for {
		_bgcc, _eaadd := d.Token()
		if _eaadd != nil {
			return _eaadd
		}
		switch _ecedd := _bgcc.(type) {
		case _a.StartElement:
			switch _ecedd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}:
				_fcgcd.Pane = NewCT_Pane()
				if _aecdg := d.DecodeElement(_fcgcd.Pane, &_ecedd); _aecdg != nil {
					return _aecdg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}:
				_fcgcd.Selection = NewCT_Selection()
				if _bbge := d.DecodeElement(_fcgcd.Selection, &_ecedd); _bbge != nil {
					return _bbge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_fcgcd.RowBreaks = NewCT_PageBreak()
				if _cdge := d.DecodeElement(_fcgcd.RowBreaks, &_ecedd); _cdge != nil {
					return _cdge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_fcgcd.ColBreaks = NewCT_PageBreak()
				if _beadf := d.DecodeElement(_fcgcd.ColBreaks, &_ecedd); _beadf != nil {
					return _beadf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_fcgcd.PageMargins = NewCT_PageMargins()
				if _ccbfc := d.DecodeElement(_fcgcd.PageMargins, &_ecedd); _ccbfc != nil {
					return _ccbfc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_fcgcd.PrintOptions = NewCT_PrintOptions()
				if _ebecd := d.DecodeElement(_fcgcd.PrintOptions, &_ecedd); _ebecd != nil {
					return _ebecd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_fcgcd.PageSetup = NewCT_PageSetup()
				if _efgc := d.DecodeElement(_fcgcd.PageSetup, &_ecedd); _efgc != nil {
					return _efgc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_fcgcd.HeaderFooter = NewCT_HeaderFooter()
				if _agad := d.DecodeElement(_fcgcd.HeaderFooter, &_ecedd); _agad != nil {
					return _agad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_fcgcd.AutoFilter = NewCT_AutoFilter()
				if _adgf := d.DecodeElement(_fcgcd.AutoFilter, &_ecedd); _adgf != nil {
					return _adgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcgcd.ExtLst = NewCT_ExtensionList()
				if _cefcfc := d.DecodeElement(_fcgcd.ExtLst, &_ecedd); _cefcfc != nil {
					return _cefcfc
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _ecedd.Name)
				if _gcbad := d.Skip(); _gcbad != nil {
					return _gcbad
				}
			}
		case _a.EndElement:
			break _abff
		case _a.CharData:
		}
	}
	return nil
}
func (_cagece ST_SmartTagShow) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_ggefc := _a.Attr{}
	_ggefc.Name = name
	switch _cagece {
	case ST_SmartTagShowUnset:
		_ggefc.Value = ""
	case ST_SmartTagShowAll:
		_ggefc.Value = "\u0061\u006c\u006c"
	case ST_SmartTagShowNone:
		_ggefc.Value = "\u006e\u006f\u006e\u0065"
	case ST_SmartTagShowNoIndicator:
		_ggefc.Value = "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	}
	return _ggefc, nil
}
func NewCT_NumFmts() *CT_NumFmts { _dfafac := &CT_NumFmts{}; return _dfafac }

// ValidateWithPath validates the CT_MdxTuple and its children, prefixing error messages with path
func (_bgdda *CT_MdxTuple) ValidateWithPath(path string) error {
	for _adggf, _bbgfb := range _bgdda.N {
		if _agcgc := _bbgfb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _adggf)); _agcgc != nil {
			return _agcgc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellProtection and its children, prefixing error messages with path
func (_bcfb *CT_CellProtection) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_ProtectedRanges and its children
func (_eeccdb *CT_ProtectedRanges) Validate() error {
	return _eeccdb.ValidateWithPath("\u0043T\u005fP\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073")
}
func (_eceed *CT_XmlCellPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _eceed.IdAttr)})
	if _eceed.UniqueNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_eceed.UniqueNameAttr)})
	}
	e.EncodeToken(start)
	_bdccf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078\u006d\u006c\u0050\u0072"}}
	e.EncodeElement(_eceed.XmlPr, _bdccf)
	if _eceed.ExtLst != nil {
		_gdgf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eceed.ExtLst, _gdgf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewChartsheet() *Chartsheet {
	_ffgdg := &Chartsheet{}
	_ffgdg.CT_Chartsheet = *NewCT_Chartsheet()
	return _ffgdg
}
func (_bdaffb *CT_TableStyleInfo) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdfdf := range start.Attr {
		if _cdfdf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fadge, _gdaae := _cdfdf.Value, error(nil)
			if _gdaae != nil {
				return _gdaae
			}
			_bdaffb.NameAttr = &_fadge
			continue
		}
		if _cdfdf.Name.Local == "\u0073h\u006fw\u0046\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e" {
			_efgccb, _eddfc := _f.ParseBool(_cdfdf.Value)
			if _eddfc != nil {
				return _eddfc
			}
			_bdaffb.ShowFirstColumnAttr = &_efgccb
			continue
		}
		if _cdfdf.Name.Local == "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e" {
			_aacbbd, _cfeff := _f.ParseBool(_cdfdf.Value)
			if _cfeff != nil {
				return _cfeff
			}
			_bdaffb.ShowLastColumnAttr = &_aacbbd
			continue
		}
		if _cdfdf.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_daegeb, _ecaece := _f.ParseBool(_cdfdf.Value)
			if _ecaece != nil {
				return _ecaece
			}
			_bdaffb.ShowRowStripesAttr = &_daegeb
			continue
		}
		if _cdfdf.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_febag, _eeecab := _f.ParseBool(_cdfdf.Value)
			if _eeecab != nil {
				return _eeecab
			}
			_bdaffb.ShowColumnStripesAttr = &_febag
			continue
		}
	}
	for {
		_bceeca, _cdgfa := d.Token()
		if _cdgfa != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f: \u0025\u0073", _cdgfa)
		}
		if _fdcbg, _cdcge := _bceeca.(_a.EndElement); _cdcge && _fdcbg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Missing struct {

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Member Property Indexes
	X []*CT_X
}
type ST_DataValidationImeMode byte

func (_gcdbd *CT_MeasureGroup) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _gcdbd.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _gcdbd.CaptionAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_egadbb *CT_TextFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _egadbb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_egadbb.CountAttr)})
	}
	e.EncodeToken(start)
	_fedbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003at\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064"}}
	for _, _eceaa := range _egadbb.TextField {
		e.EncodeElement(_eceaa, _fedbc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_SortTypeUnset             ST_SortType = 0
	ST_SortTypeNone              ST_SortType = 1
	ST_SortTypeAscending         ST_SortType = 2
	ST_SortTypeDescending        ST_SortType = 3
	ST_SortTypeAscendingAlpha    ST_SortType = 4
	ST_SortTypeDescendingAlpha   ST_SortType = 5
	ST_SortTypeAscendingNatural  ST_SortType = 6
	ST_SortTypeDescendingNatural ST_SortType = 7
)

type SingleXmlCells struct{ CT_SingleXmlCells }

func NewCT_IconFilter() *CT_IconFilter {
	_gfedg := &CT_IconFilter{}
	_gfedg.IconSetAttr = ST_IconSetType(1)
	return _gfedg
}
func (_fgddag *CT_Stylesheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_ageaf:
	for {
		_agfac, _dcabd := d.Token()
		if _dcabd != nil {
			return _dcabd
		}
		switch _cfegdg := _agfac.(type) {
		case _a.StartElement:
			switch _cfegdg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}:
				_fgddag.NumFmts = NewCT_NumFmts()
				if _bddad := d.DecodeElement(_fgddag.NumFmts, &_cfegdg); _bddad != nil {
					return _bddad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}:
				_fgddag.Fonts = NewCT_Fonts()
				if _egfed := d.DecodeElement(_fgddag.Fonts, &_cfegdg); _egfed != nil {
					return _egfed
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}:
				_fgddag.Fills = NewCT_Fills()
				if _gcgcfb := d.DecodeElement(_fgddag.Fills, &_cfegdg); _gcgcfb != nil {
					return _gcgcfb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}:
				_fgddag.Borders = NewCT_Borders()
				if _bcebb := d.DecodeElement(_fgddag.Borders, &_cfegdg); _bcebb != nil {
					return _bcebb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}:
				_fgddag.CellStyleXfs = NewCT_CellStyleXfs()
				if _bdgee := d.DecodeElement(_fgddag.CellStyleXfs, &_cfegdg); _bdgee != nil {
					return _bdgee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}:
				_fgddag.CellXfs = NewCT_CellXfs()
				if _gbcad := d.DecodeElement(_fgddag.CellXfs, &_cfegdg); _gbcad != nil {
					return _gbcad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_fgddag.CellStyles = NewCT_CellStyles()
				if _fbgcff := d.DecodeElement(_fgddag.CellStyles, &_cfegdg); _fbgcff != nil {
					return _fbgcff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}:
				_fgddag.Dxfs = NewCT_Dxfs()
				if _fcebd := d.DecodeElement(_fgddag.Dxfs, &_cfegdg); _fcebd != nil {
					return _fcebd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_fgddag.TableStyles = NewCT_TableStyles()
				if _gcbaf := d.DecodeElement(_fgddag.TableStyles, &_cfegdg); _gcbaf != nil {
					return _gcbaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}:
				_fgddag.Colors = NewCT_Colors()
				if _cbcg := d.DecodeElement(_fgddag.Colors, &_cfegdg); _cbcg != nil {
					return _cbcg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgddag.ExtLst = NewCT_ExtensionList()
				if _ccgbcb := d.DecodeElement(_fgddag.ExtLst, &_cfegdg); _ccgbcb != nil {
					return _ccgbcb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053t\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _cfegdg.Name)
				if _bdabb := d.Skip(); _bdabb != nil {
					return _bdabb
				}
			}
		case _a.EndElement:
			break _ageaf
		case _a.CharData:
		}
	}
	return nil
}
func (_efdfg *CT_RevisionMove) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _efdfg.SheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _efdfg.SourceAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0073\u0074\u0069\u006e\u0061\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _efdfg.DestinationAttr)})
	if _efdfg.SourceSheetIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_efdfg.SourceSheetIdAttr)})
	}
	if _efdfg.RIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_efdfg.RIdAttr)})
	}
	if _efdfg.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efdfg.UaAttr))})
	}
	if _efdfg.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efdfg.RaAttr))})
	}
	e.EncodeToken(start)
	if _efdfg.Undo != nil {
		_abefb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0075\u006e\u0064\u006f"}}
		for _, _eaec := range _efdfg.Undo {
			e.EncodeElement(_eaec, _abefb)
		}
	}
	if _efdfg.Rcc != nil {
		_aceegg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _fecde := range _efdfg.Rcc {
			e.EncodeElement(_fecde, _aceegg)
		}
	}
	if _efdfg.Rfmt != nil {
		_bfgg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _dfbgea := range _efdfg.Rfmt {
			e.EncodeElement(_dfbgea, _bfgg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bccfgb ST_FilterOperator) Validate() error { return _bccfgb.ValidateWithPath("") }

const (
	ST_RevisionActionUnset  ST_RevisionAction = 0
	ST_RevisionActionAdd    ST_RevisionAction = 1
	ST_RevisionActionDelete ST_RevisionAction = 2
)

// Validate validates the CT_VerticalAlignFontProperty and its children
func (_cbbaec *CT_VerticalAlignFontProperty) Validate() error {
	return _cbbaec.ValidateWithPath("\u0043\u0054\u005f\u0056e\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u006c\u0069\u0067n\u0046o\u006e\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0079")
}

// Validate validates the CT_HeaderFooter and its children
func (_cfafb *CT_HeaderFooter) Validate() error {
	return _cfafb.ValidateWithPath("\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072")
}

// Validate validates the CT_RevisionQueryTableField and its children
func (_aaaeb *CT_RevisionQueryTableField) Validate() error {
	return _aaaeb.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064")
}
func (_bdegf *CT_MetadataBlocks) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bdegf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bdegf.CountAttr)})
	}
	e.EncodeToken(start)
	_dgbef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ab\u006b"}}
	for _, _gagcc := range _bdegf.Bk {
		e.EncodeElement(_gagcc, _dgbef)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_RefModeUnset ST_RefMode = 0
	ST_RefModeA1    ST_RefMode = 1
	ST_RefModeR1C1  ST_RefMode = 2
)

type CT_Members struct {

	// Item Count
	CountAttr *uint32

	// Hierarchy Level
	LevelAttr *uint32

	// Member
	Member []*CT_Member
}

// Validate validates the CT_ExternalLinkChoice and its children
func (_egde *CT_ExternalLinkChoice) Validate() error {
	return _egde.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u004c\u0069\u006ek\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_efdgd *CT_Extension) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edfb := range start.Attr {
		if _edfb.Name.Local == "\u0075\u0072\u0069" {
			_dcddee, _bege := _edfb.Value, error(nil)
			if _bege != nil {
				return _bege
			}
			_efdgd.UriAttr = &_dcddee
			continue
		}
	}
_bcddf:
	for {
		_fedc, _agfd := d.Token()
		if _agfd != nil {
			return _agfd
		}
		switch _eebgd := _fedc.(type) {
		case _a.StartElement:
			switch _eebgd.Name {
			default:
				if _cgaa, _fcafd := _fca.CreateElement(_eebgd); _fcafd != nil {
					return _fcafd
				} else {
					if _ecacg := d.DecodeElement(_cgaa, &_eebgd); _ecacg != nil {
						return _ecacg
					}
					_efdgd.Any = _cgaa
				}
			}
		case _a.EndElement:
			break _bcddf
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Sets and its children
func (_gbgba *CT_Sets) Validate() error {
	return _gbgba.ValidateWithPath("\u0043T\u005f\u0053\u0065\u0074\u0073")
}

// Validate validates the CT_ChartsheetView and its children
func (_fbbge *CT_ChartsheetView) Validate() error {
	return _fbbge.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065t\u0056\u0069\u0065\u0077")
}
func (_fgffb *EG_ExtensionList) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_cadbbd:
	for {
		_cebbea, _bdefd := d.Token()
		if _bdefd != nil {
			return _bdefd
		}
		switch _dbfdee := _cebbea.(type) {
		case _a.StartElement:
			switch _dbfdee.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_fgbdf := NewCT_Extension()
				if _dbgbg := d.DecodeElement(_fgbdf, &_dbfdee); _dbgbg != nil {
					return _dbgbg
				}
				_fgffb.Ext = append(_fgffb.Ext, _fgbdf)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _dbfdee.Name)
				if _befee := d.Skip(); _befee != nil {
					return _befee
				}
			}
		case _a.EndElement:
			break _cadbbd
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Comments and its children
func (_dfcgg *CT_Comments) Validate() error {
	return _dfcgg.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073")
}
func NewCT_OleSize() *CT_OleSize { _accca := &CT_OleSize{}; return _accca }
func (_dedbc ST_Visibility) String() string {
	switch _dedbc {
	case 0:
		return ""
	case 1:
		return "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case 2:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	case 3:
		return "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}
func NewCT_Hyperlink() *CT_Hyperlink { _ggee := &CT_Hyperlink{}; return _ggee }

// Validate validates the CT_TableStyleInfo and its children
func (_ebagg *CT_TableStyleInfo) Validate() error {
	return _ebagg.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f")
}
func (_cebacf ST_DataValidationType) String() string {
	switch _cebacf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0077\u0068\u006fl\u0065"
	case 3:
		return "\u0064e\u0063\u0069\u006d\u0061\u006c"
	case 4:
		return "\u006c\u0069\u0073\u0074"
	case 5:
		return "\u0064\u0061\u0074\u0065"
	case 6:
		return "\u0074\u0069\u006d\u0065"
	case 7:
		return "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068"
	case 8:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return ""
}
func (_ebdfb *CT_Hyperlinks) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_cgge := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ah\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b"}}
	for _, _fbacd := range _ebdfb.Hyperlink {
		e.EncodeElement(_fbacd, _cgge)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_SheetCalcPr() *CT_SheetCalcPr { _ddbff := &CT_SheetCalcPr{}; return _ddbff }

const (
	ST_DataValidationErrorStyleUnset       ST_DataValidationErrorStyle = 0
	ST_DataValidationErrorStyleStop        ST_DataValidationErrorStyle = 1
	ST_DataValidationErrorStyleWarning     ST_DataValidationErrorStyle = 2
	ST_DataValidationErrorStyleInformation ST_DataValidationErrorStyle = 3
)

func (_bcgdd *CT_Macrosheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bcgdd.SheetData = NewCT_SheetData()
_gfefg:
	for {
		_bdbea, _bbdaf := d.Token()
		if _bbdaf != nil {
			return _bbdaf
		}
		switch _efdce := _bdbea.(type) {
		case _a.StartElement:
			switch _efdce.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_bcgdd.SheetPr = NewCT_SheetPr()
				if _bdead := d.DecodeElement(_bcgdd.SheetPr, &_efdce); _bdead != nil {
					return _bdead
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_bcgdd.Dimension = NewCT_SheetDimension()
				if _dggefa := d.DecodeElement(_bcgdd.Dimension, &_efdce); _dggefa != nil {
					return _dggefa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_bcgdd.SheetViews = NewCT_SheetViews()
				if _bggdb := d.DecodeElement(_bcgdd.SheetViews, &_efdce); _bggdb != nil {
					return _bggdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_bcgdd.SheetFormatPr = NewCT_SheetFormatPr()
				if _dbbdd := d.DecodeElement(_bcgdd.SheetFormatPr, &_efdce); _dbbdd != nil {
					return _dbbdd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_agdeff := NewCT_Cols()
				if _cffef := d.DecodeElement(_agdeff, &_efdce); _cffef != nil {
					return _cffef
				}
				_bcgdd.Cols = append(_bcgdd.Cols, _agdeff)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _cbaf := d.DecodeElement(_bcgdd.SheetData, &_efdce); _cbaf != nil {
					return _cbaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_bcgdd.SheetProtection = NewCT_SheetProtection()
				if _bdeaf := d.DecodeElement(_bcgdd.SheetProtection, &_efdce); _bdeaf != nil {
					return _bdeaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_bcgdd.AutoFilter = NewCT_AutoFilter()
				if _cgdef := d.DecodeElement(_bcgdd.AutoFilter, &_efdce); _cgdef != nil {
					return _cgdef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_bcgdd.SortState = NewCT_SortState()
				if _fded := d.DecodeElement(_bcgdd.SortState, &_efdce); _fded != nil {
					return _fded
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_bcgdd.DataConsolidate = NewCT_DataConsolidate()
				if _bfbecb := d.DecodeElement(_bcgdd.DataConsolidate, &_efdce); _bfbecb != nil {
					return _bfbecb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_bcgdd.CustomSheetViews = NewCT_CustomSheetViews()
				if _bfdge := d.DecodeElement(_bcgdd.CustomSheetViews, &_efdce); _bfdge != nil {
					return _bfdge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_bcgdd.PhoneticPr = NewCT_PhoneticPr()
				if _bcbcc := d.DecodeElement(_bcgdd.PhoneticPr, &_efdce); _bcbcc != nil {
					return _bcbcc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_cdbdf := NewCT_ConditionalFormatting()
				if _defdd := d.DecodeElement(_cdbdf, &_efdce); _defdd != nil {
					return _defdd
				}
				_bcgdd.ConditionalFormatting = append(_bcgdd.ConditionalFormatting, _cdbdf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_bcgdd.PrintOptions = NewCT_PrintOptions()
				if _eadec := d.DecodeElement(_bcgdd.PrintOptions, &_efdce); _eadec != nil {
					return _eadec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_bcgdd.PageMargins = NewCT_PageMargins()
				if _afbb := d.DecodeElement(_bcgdd.PageMargins, &_efdce); _afbb != nil {
					return _afbb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_bcgdd.PageSetup = NewCT_PageSetup()
				if _ffecg := d.DecodeElement(_bcgdd.PageSetup, &_efdce); _ffecg != nil {
					return _ffecg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_bcgdd.HeaderFooter = NewCT_HeaderFooter()
				if _gcfdc := d.DecodeElement(_bcgdd.HeaderFooter, &_efdce); _gcfdc != nil {
					return _gcfdc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_bcgdd.RowBreaks = NewCT_PageBreak()
				if _fdaea := d.DecodeElement(_bcgdd.RowBreaks, &_efdce); _fdaea != nil {
					return _fdaea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_bcgdd.ColBreaks = NewCT_PageBreak()
				if _bdfgc := d.DecodeElement(_bcgdd.ColBreaks, &_efdce); _bdfgc != nil {
					return _bdfgc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_bcgdd.CustomProperties = NewCT_CustomProperties()
				if _fcggg := d.DecodeElement(_bcgdd.CustomProperties, &_efdce); _fcggg != nil {
					return _fcggg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_bcgdd.Drawing = NewCT_Drawing()
				if _daggdd := d.DecodeElement(_bcgdd.Drawing, &_efdce); _daggdd != nil {
					return _daggdd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_bcgdd.LegacyDrawing = NewCT_LegacyDrawing()
				if _acacg := d.DecodeElement(_bcgdd.LegacyDrawing, &_efdce); _acacg != nil {
					return _acacg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_bcgdd.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _bbafd := d.DecodeElement(_bcgdd.LegacyDrawingHF, &_efdce); _bbafd != nil {
					return _bbafd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_bcgdd.DrawingHF = NewCT_DrawingHF()
				if _ccgee := d.DecodeElement(_bcgdd.DrawingHF, &_efdce); _ccgee != nil {
					return _ccgee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_bcgdd.Picture = NewCT_SheetBackgroundPicture()
				if _eafca := d.DecodeElement(_bcgdd.Picture, &_efdce); _eafca != nil {
					return _eafca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_bcgdd.OleObjects = NewCT_OleObjects()
				if _cggdb := d.DecodeElement(_bcgdd.OleObjects, &_efdce); _cggdb != nil {
					return _cggdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcgdd.ExtLst = NewCT_ExtensionList()
				if _bbba := d.DecodeElement(_bcgdd.ExtLst, &_efdce); _bbba != nil {
					return _bbba
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004da\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _efdce.Name)
				if _cafe := d.Skip(); _cafe != nil {
					return _cafe
				}
			}
		case _a.EndElement:
			break _gfefg
		case _a.CharData:
		}
	}
	return nil
}
func (_abga *CT_IconSet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bfcff := range start.Attr {
		if _bfcff.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_abga.IconSetAttr.UnmarshalXMLAttr(_bfcff)
			continue
		}
		if _bfcff.Name.Local == "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e" {
			_bfefea, _gacbc := _f.ParseBool(_bfcff.Value)
			if _gacbc != nil {
				return _gacbc
			}
			_abga.ShowValueAttr = &_bfefea
			continue
		}
		if _bfcff.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_caecf, _bggfc := _f.ParseBool(_bfcff.Value)
			if _bggfc != nil {
				return _bggfc
			}
			_abga.PercentAttr = &_caecf
			continue
		}
		if _bfcff.Name.Local == "\u0072e\u0076\u0065\u0072\u0073\u0065" {
			_ccgcd, _ffegf := _f.ParseBool(_bfcff.Value)
			if _ffegf != nil {
				return _ffegf
			}
			_abga.ReverseAttr = &_ccgcd
			continue
		}
	}
_ffdgg:
	for {
		_bdaaf, _cbga := d.Token()
		if _cbga != nil {
			return _cbga
		}
		switch _gacfg := _bdaaf.(type) {
		case _a.StartElement:
			switch _gacfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_bgeab := NewCT_Cfvo()
				if _edfdb := d.DecodeElement(_bgeab, &_gacfg); _edfdb != nil {
					return _edfdb
				}
				_abga.Cfvo = append(_abga.Cfvo, _bgeab)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fI\u0063\u006f\u006e\u0053\u0065\u0074\u0020\u0025\u0076", _gacfg.Name)
				if _gcea := d.Skip(); _gcea != nil {
					return _gcea
				}
			}
		case _a.EndElement:
			break _ffdgg
		case _a.CharData:
		}
	}
	return nil
}

type CT_TableStyleInfo struct {

	// Style Name
	NameAttr *string

	// Show First Column
	ShowFirstColumnAttr *bool

	// Show Last Column
	ShowLastColumnAttr *bool

	// Show Row Stripes
	ShowRowStripesAttr *bool

	// Show Column Stripes
	ShowColumnStripesAttr *bool
}

func (_bgdfb *ST_Pane) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aeabaf, _eccge := d.Token()
	if _eccge != nil {
		return _eccge
	}
	if _dfgafd, _dfece := _aeabaf.(_a.EndElement); _dfece && _dfgafd.Name == start.Name {
		*_bgdfb = 1
		return nil
	}
	if _fcaaca, _gfdcd := _aeabaf.(_a.CharData); !_gfdcd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aeabaf)
	} else {
		switch string(_fcaaca) {
		case "":
			*_bgdfb = 0
		case "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
			*_bgdfb = 1
		case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_bgdfb = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
			*_bgdfb = 3
		case "\u0074o\u0070\u004c\u0065\u0066\u0074":
			*_bgdfb = 4
		}
	}
	_aeabaf, _eccge = d.Token()
	if _eccge != nil {
		return _eccge
	}
	if _efaef, _dcdgd := _aeabaf.(_a.EndElement); _dcdgd && _efaef.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aeabaf)
}

// Validate validates the CT_CellAlignment and its children
func (_bfab *CT_CellAlignment) Validate() error {
	return _bfab.ValidateWithPath("\u0043\u0054_\u0043\u0065\u006cl\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074")
}

type CT_Dimensions struct {

	// OLAP Dimensions Count
	CountAttr *uint32

	// OLAP Dimension
	Dimension []*CT_PivotDimension
}

func (_gdeff *SingleXmlCells) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdeff.CT_SingleXmlCells = *NewCT_SingleXmlCells()
_aebgg:
	for {
		_dfbfgd, _degfge := d.Token()
		if _degfge != nil {
			return _degfge
		}
		switch _ggaaae := _dfbfgd.(type) {
		case _a.StartElement:
			switch _ggaaae.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}:
				_fgcfeg := NewCT_SingleXmlCell()
				if _ccgbee := d.DecodeElement(_fgcfeg, &_ggaaae); _ccgbee != nil {
					return _ccgbee
				}
				_gdeff.SingleXmlCell = append(_gdeff.SingleXmlCell, _fgcfeg)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043e\u006cl\u0073\u0020\u0025\u0076", _ggaaae.Name)
				if _bacfb := d.Skip(); _bacfb != nil {
					return _bacfb
				}
			}
		case _a.EndElement:
			break _aebgg
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OleLink and its children, prefixing error messages with path
func (_ddceb *CT_OleLink) ValidateWithPath(path string) error {
	if _ddceb.OleItems != nil {
		if _edadd := _ddceb.OleItems.ValidateWithPath(path + "\u002fO\u006c\u0065\u0049\u0074\u0065\u006ds"); _edadd != nil {
			return _edadd
		}
	}
	return nil
}
func (_gbbcf *CT_VolType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_caege, _aeged := _gbbcf.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _aeged != nil {
		return _aeged
	}
	start.Attr = append(start.Attr, _caege)
	e.EncodeToken(start)
	_adeaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u006d\u0061\u0069\u006e"}}
	for _, _efeedd := range _gbbcf.Main {
		e.EncodeElement(_efeedd, _adeaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gbaded ST_DataValidationErrorStyle) ValidateWithPath(path string) error {
	switch _gbaded {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbaded))
	}
	return nil
}
func (_abdga *CT_Pane) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _abdga.XSplitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0053\u0070\u006c\u0069\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_abdga.XSplitAttr)})
	}
	if _abdga.YSplitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0079\u0053\u0070\u006c\u0069\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_abdga.YSplitAttr)})
	}
	if _abdga.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_abdga.TopLeftCellAttr)})
	}
	if _abdga.ActivePaneAttr != ST_PaneUnset {
		_aaeab, _ccaaa := _abdga.ActivePaneAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0050\u0061\u006e\u0065"})
		if _ccaaa != nil {
			return _ccaaa
		}
		start.Attr = append(start.Attr, _aaeab)
	}
	if _abdga.StateAttr != ST_PaneStateUnset {
		_fbdge, _eddeb := _abdga.StateAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _eddeb != nil {
			return _eddeb
		}
		start.Attr = append(start.Attr, _fbdge)
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Break struct {

	// Id
	IdAttr *uint32

	// Minimum
	MinAttr *uint32

	// Maximum
	MaxAttr *uint32

	// Manual Page Break
	ManAttr *bool

	// Pivot-Created Page Break
	PtAttr *bool
}

func (_gfgfa *CT_ExternalDefinedNames) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _gfgfa.DefinedName != nil {
		_aabdg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065"}}
		for _, _edgac := range _gfgfa.DefinedName {
			e.EncodeElement(_edgac, _aabdg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func _ccegbgd(_fgedf bool) uint8 {
	if _fgedf {
		return 1
	}
	return 0
}

type CT_CellSmartTagPr struct {

	// Key Name
	KeyAttr string

	// Value
	ValAttr string
}

func (_edbccf *ST_MdxFunctionType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gaaca, _agddgg := d.Token()
	if _agddgg != nil {
		return _agddgg
	}
	if _bbced, _ceggf := _gaaca.(_a.EndElement); _ceggf && _bbced.Name == start.Name {
		*_edbccf = 1
		return nil
	}
	if _babge, _cbgcb := _gaaca.(_a.CharData); !_cbgcb {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaaca)
	} else {
		switch string(_babge) {
		case "":
			*_edbccf = 0
		case "\u006d":
			*_edbccf = 1
		case "\u0076":
			*_edbccf = 2
		case "\u0073":
			*_edbccf = 3
		case "\u0063":
			*_edbccf = 4
		case "\u0072":
			*_edbccf = 5
		case "\u0070":
			*_edbccf = 6
		case "\u006b":
			*_edbccf = 7
		}
	}
	_gaaca, _agddgg = d.Token()
	if _agddgg != nil {
		return _agddgg
	}
	if _gdgbae, _faggdf := _gaaca.(_a.EndElement); _faggdf && _gdgbae.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaaca)
}
func NewCT_MergeCells() *CT_MergeCells { _gadff := &CT_MergeCells{}; return _gadff }

// ValidateWithPath validates the PivotCacheRecords and its children, prefixing error messages with path
func (_eddgcf *PivotCacheRecords) ValidateWithPath(path string) error {
	if _aacbdc := _eddgcf.CT_PivotCacheRecords.ValidateWithPath(path); _aacbdc != nil {
		return _aacbdc
	}
	return nil
}
func NewCT_FunctionGroup() *CT_FunctionGroup { _cbagd := &CT_FunctionGroup{}; return _cbagd }
func (_fbcgb *CT_Sst) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fbcgb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fbcgb.CountAttr)})
	}
	if _fbcgb.UniqueCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fbcgb.UniqueCountAttr)})
	}
	e.EncodeToken(start)
	if _fbcgb.Si != nil {
		_eabeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u0069"}}
		for _, _dcabbe := range _fbcgb.Si {
			e.EncodeElement(_dcabbe, _eabeb)
		}
	}
	if _fbcgb.ExtLst != nil {
		_dddff := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fbcgb.ExtLst, _dddff)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_UnderlineProperty and its children
func (_caggb *CT_UnderlineProperty) Validate() error {
	return _caggb.ValidateWithPath("C\u0054_\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0050\u0072\u006f\u0070er\u0074\u0079")
}
func (_bbade *CT_ColorScale) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_bedb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _dgge := range _bbade.Cfvo {
		e.EncodeElement(_dgge, _bedb)
	}
	_aaeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	for _, _gffb := range _bbade.Color {
		e.EncodeElement(_gffb, _aaeg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cdeac ST_ShowDataAs) Validate() error { return _cdeac.ValidateWithPath("") }
func (_cgcfc *CT_OleObjects) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_babfe:
	for {
		_eabae, _eedda := d.Token()
		if _eedda != nil {
			return _eedda
		}
		switch _adeea := _eabae.(type) {
		case _a.StartElement:
			switch _adeea.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004f\u0062\u006a\u0065\u0063t"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004f\u0062\u006a\u0065\u0063t"}:
				_dfafd := NewCT_OleObject()
				if _bcaeg := d.DecodeElement(_dfafd, &_adeea); _bcaeg != nil {
					return _bcaeg
				}
				_cgcfc.OleObject = append(_cgcfc.OleObject, _dfafd)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004fl\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073 \u0025\u0076", _adeea.Name)
				if _fddcef := d.Skip(); _fddcef != nil {
					return _fddcef
				}
			}
		case _a.EndElement:
			break _babfe
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_PageFields() *CT_PageFields           { _eefcdc := &CT_PageFields{}; return _eefcdc }
func NewCT_ProtectedRanges() *CT_ProtectedRanges { _efaea := &CT_ProtectedRanges{}; return _efaea }

// ValidateWithPath validates the CT_PivotArea and its children, prefixing error messages with path
func (_cecdfb *CT_PivotArea) ValidateWithPath(path string) error {
	if _bfagf := _cecdfb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bfagf != nil {
		return _bfagf
	}
	if _ccfgfd := _cecdfb.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _ccfgfd != nil {
		return _ccfgfd
	}
	if _cecdfb.References != nil {
		if _gdadd := _cecdfb.References.ValidateWithPath(path + "/\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"); _gdadd != nil {
			return _gdadd
		}
	}
	if _cecdfb.ExtLst != nil {
		if _efffa := _cecdfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efffa != nil {
			return _efffa
		}
	}
	return nil
}

type CT_QueryCache struct {

	// Cached Query Count
	CountAttr *uint32

	// Query
	Query []*CT_Query
}
type CT_RevisionHeader struct {

	// GUID
	GuidAttr string

	// Date Time
	DateTimeAttr _cd.Time

	// Last Sheet Id
	MaxSheetIdAttr uint32

	// User Name
	UserNameAttr string
	IdAttr       string

	// Minimum Revision Id
	MinRIdAttr *uint32

	// Max Revision Id
	MaxRIdAttr *uint32

	// Sheet Id Map
	SheetIdMap *CT_SheetIdMap

	// Reviewed List
	ReviewedList *CT_ReviewedRevisions
	ExtLst       *CT_ExtensionList
}

// ValidateWithPath validates the CT_IconFilter and its children, prefixing error messages with path
func (_ffcde *CT_IconFilter) ValidateWithPath(path string) error {
	if _ffcde.IconSetAttr == ST_IconSetTypeUnset {
		return _fc.Errorf("%\u0073\u002f\u0049\u0063\u006f\u006eS\u0065\u0074\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _fbdca := _ffcde.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _fbdca != nil {
		return _fbdca
	}
	return nil
}

// ValidateWithPath validates the CT_MetadataStrings and its children, prefixing error messages with path
func (_eddfa *CT_MetadataStrings) ValidateWithPath(path string) error {
	for _afaddb, _gecgb := range _eddfa.S {
		if _adae := _gecgb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _afaddb)); _adae != nil {
			return _adae
		}
	}
	return nil
}

type CT_CustomSheetViews struct {

	// Custom Sheet View
	CustomSheetView []*CT_CustomSheetView
}
type ST_GroupBy byte

func (_cdgfag ST_VolValueType) ValidateWithPath(path string) error {
	switch _cdgfag {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdgfag))
	}
	return nil
}
func (_gdbgda *ST_ConditionalFormattingOperator) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fddeg, _afgec := d.Token()
	if _afgec != nil {
		return _afgec
	}
	if _dbebd, _eeegbd := _fddeg.(_a.EndElement); _eeegbd && _dbebd.Name == start.Name {
		*_gdbgda = 1
		return nil
	}
	if _adcfe, _gaaea := _fddeg.(_a.CharData); !_gaaea {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fddeg)
	} else {
		switch string(_adcfe) {
		case "":
			*_gdbgda = 0
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_gdbgda = 1
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_gdbgda = 2
		case "\u0065\u0071\u0075a\u006c":
			*_gdbgda = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_gdbgda = 4
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_gdbgda = 5
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_gdbgda = 6
		case "\u0062e\u0074\u0077\u0065\u0065\u006e":
			*_gdbgda = 7
		case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_gdbgda = 8
		case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_gdbgda = 9
		case "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
			*_gdbgda = 10
		case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
			*_gdbgda = 11
		case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_gdbgda = 12
		}
	}
	_fddeg, _afgec = d.Token()
	if _afgec != nil {
		return _afgec
	}
	if _ffacb, _dfcff := _fddeg.(_a.EndElement); _dfcff && _ffacb.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fddeg)
}

type CT_ExternalLinkChoice struct {
	ExternalBook *CT_ExternalBook
	DdeLink      *CT_DdeLink
	OleLink      *CT_OleLink
}

// ValidateWithPath validates the CT_FilterColumn and its children, prefixing error messages with path
func (_ffbcf *CT_FilterColumn) ValidateWithPath(path string) error {
	if _ffbcf.Filters != nil {
		if _dbdff := _ffbcf.Filters.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u0073"); _dbdff != nil {
			return _dbdff
		}
	}
	if _ffbcf.Top10 != nil {
		if _gcdaa := _ffbcf.Top10.ValidateWithPath(path + "\u002f\u0054\u006f\u0070\u0031\u0030"); _gcdaa != nil {
			return _gcdaa
		}
	}
	if _ffbcf.CustomFilters != nil {
		if _dcdcg := _ffbcf.CustomFilters.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0046\u0069l\u0074\u0065\u0072\u0073"); _dcdcg != nil {
			return _dcdcg
		}
	}
	if _ffbcf.DynamicFilter != nil {
		if _dffg := _ffbcf.DynamicFilter.ValidateWithPath(path + "\u002f\u0044\u0079\u006e\u0061\u006d\u0069\u0063\u0046i\u006c\u0074\u0065\u0072"); _dffg != nil {
			return _dffg
		}
	}
	if _ffbcf.ColorFilter != nil {
		if _ddbcc := _ffbcf.ColorFilter.ValidateWithPath(path + "\u002f\u0043\u006fl\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"); _ddbcc != nil {
			return _ddbcc
		}
	}
	if _ffbcf.IconFilter != nil {
		if _baead := _ffbcf.IconFilter.ValidateWithPath(path + "/\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"); _baead != nil {
			return _baead
		}
	}
	if _ffbcf.ExtLst != nil {
		if _egffc := _ffbcf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egffc != nil {
			return _egffc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CommentPr and its children, prefixing error messages with path
func (_faeb *CT_CommentPr) ValidateWithPath(path string) error {
	if _ceea := _faeb.TextHAlignAttr.ValidateWithPath(path + "\u002fT\u0065x\u0074\u0048\u0041\u006c\u0069\u0067\u006e\u0041\u0074\u0074\u0072"); _ceea != nil {
		return _ceea
	}
	if _deab := _faeb.TextVAlignAttr.ValidateWithPath(path + "\u002fT\u0065x\u0074\u0056\u0041\u006c\u0069\u0067\u006e\u0041\u0074\u0074\u0072"); _deab != nil {
		return _deab
	}
	if _ggfdc := _faeb.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _ggfdc != nil {
		return _ggfdc
	}
	return nil
}
func NewUsers() *Users { _acgde := &Users{}; _acgde.CT_Users = *NewCT_Users(); return _acgde }

// ValidateWithPath validates the CT_Color and its children, prefixing error messages with path
func (_fgecf *CT_Color) ValidateWithPath(path string) error { return nil }
func (_fbag *CT_CommentList) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _fbag.Comment != nil {
		_agee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074"}}
		for _, _gcee := range _fbag.Comment {
			e.EncodeElement(_gcee, _agee)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Groups struct {

	// Level Group Count
	CountAttr *uint32

	// OLAP Group
	Group []*CT_LevelGroup
}

func (_abcdg ST_ShowDataAs) ValidateWithPath(path string) error {
	switch _abcdg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abcdg))
	}
	return nil
}

type CT_TextField struct {

	// Field Type
	TypeAttr ST_ExternalConnectionType

	// Position
	PositionAttr *uint32
}

func NewCT_CellSmartTags() *CT_CellSmartTags { _abad := &CT_CellSmartTags{}; return _abad }

// Validate validates the CT_DdeItems and its children
func (_ffeeg *CT_DdeItems) Validate() error {
	return _ffeeg.ValidateWithPath("C\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073")
}

type Chartsheet struct{ CT_Chartsheet }

func (_effgd *ST_rwColActionType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ccfca, _dagdde := d.Token()
	if _dagdde != nil {
		return _dagdde
	}
	if _efbgf, _feaeaa := _ccfca.(_a.EndElement); _feaeaa && _efbgf.Name == start.Name {
		*_effgd = 1
		return nil
	}
	if _acacfa, _abbfg := _ccfca.(_a.CharData); !_abbfg {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccfca)
	} else {
		switch string(_acacfa) {
		case "":
			*_effgd = 0
		case "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw":
			*_effgd = 1
		case "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw":
			*_effgd = 2
		case "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl":
			*_effgd = 3
		case "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl":
			*_effgd = 4
		}
	}
	_ccfca, _dagdde = d.Token()
	if _dagdde != nil {
		return _dagdde
	}
	if _facgd, _dagaeb := _ccfca.(_a.EndElement); _dagaeb && _facgd.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccfca)
}

// Validate validates the CT_RevisionAutoFormatting and its children
func (_agfca *CT_RevisionAutoFormatting) Validate() error {
	return _agfca.ValidateWithPath("\u0043T\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg")
}

// Validate validates the CT_WebPublishItem and its children
func (_fefdg *CT_WebPublishItem) Validate() error {
	return _fefdg.ValidateWithPath("\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d")
}
func (_cgcdg *CT_Fill) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_baefd:
	for {
		_fbfcd, _fbedcf := d.Token()
		if _fbedcf != nil {
			return _fbedcf
		}
		switch _dcgef := _fbfcd.(type) {
		case _a.StartElement:
			switch _dcgef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}:
				_cgcdg.PatternFill = NewCT_PatternFill()
				if _acfc := d.DecodeElement(_cgcdg.PatternFill, &_dcgef); _acfc != nil {
					return _acfc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}:
				_cgcdg.GradientFill = NewCT_GradientFill()
				if _cfgge := d.DecodeElement(_cgcdg.GradientFill, &_dcgef); _cfgge != nil {
					return _cfgge
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _dcgef.Name)
				if _begd := d.Skip(); _begd != nil {
					return _begd
				}
			}
		case _a.EndElement:
			break _baefd
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the VolTypes and its children
func (_bbfebd *VolTypes) Validate() error {
	return _bbfebd.ValidateWithPath("\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073")
}

// ValidateWithPath validates the CT_ControlPr and its children, prefixing error messages with path
func (_fedf *CT_ControlPr) ValidateWithPath(path string) error {
	if _gagb := _fedf.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _gagb != nil {
		return _gagb
	}
	return nil
}
func NewCT_ExternalSheetData() *CT_ExternalSheetData { _cdbc := &CT_ExternalSheetData{}; return _cdbc }

type Dialogsheet struct{ CT_Dialogsheet }

func (_bgfebe *CT_PivotField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bgfebe.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_bgfebe.NameAttr)})
	}
	if _bgfebe.AxisAttr != ST_AxisUnset {
		_ffbbe, _cfede := _bgfebe.AxisAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _cfede != nil {
			return _cfede
		}
		start.Attr = append(start.Attr, _ffbbe)
	}
	if _bgfebe.DataFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.DataFieldAttr))})
	}
	if _bgfebe.SubtotalCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073u\u0062t\u006f\u0074\u0061\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_bgfebe.SubtotalCaptionAttr)})
	}
	if _bgfebe.ShowDropDownsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.ShowDropDownsAttr))})
	}
	if _bgfebe.HiddenLevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "h\u0069\u0064\u0064\u0065\u006e\u004c\u0065\u0076\u0065\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.HiddenLevelAttr))})
	}
	if _bgfebe.UniqueMemberPropertyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "u\u006ei\u0071\u0075\u0065\u004d\u0065\u006d\u0062\u0065r\u0050\u0072\u006f\u0070er\u0074\u0079"}, Value: _fc.Sprintf("\u0025\u0076", *_bgfebe.UniqueMemberPropertyAttr)})
	}
	if _bgfebe.CompactAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u0070\u0061\u0063\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.CompactAttr))})
	}
	if _bgfebe.AllDrilledAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u006c\u0044\u0072\u0069\u006c\u006c\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.AllDrilledAttr))})
	}
	if _bgfebe.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bgfebe.NumFmtIdAttr)})
	}
	if _bgfebe.OutlineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.OutlineAttr))})
	}
	if _bgfebe.SubtotalTopAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.SubtotalTopAttr))})
	}
	if _bgfebe.DragToRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.DragToRowAttr))})
	}
	if _bgfebe.DragToColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.DragToColAttr))})
	}
	if _bgfebe.MultipleItemSelectionAllowedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.MultipleItemSelectionAllowedAttr))})
	}
	if _bgfebe.DragToPageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.DragToPageAttr))})
	}
	if _bgfebe.DragToDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.DragToDataAttr))})
	}
	if _bgfebe.DragOffAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064r\u0061\u0067\u004f\u0066\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.DragOffAttr))})
	}
	if _bgfebe.ShowAllAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0041\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.ShowAllAttr))})
	}
	if _bgfebe.InsertBlankRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0042\u006c\u0061n\u006b\u0052\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.InsertBlankRowAttr))})
	}
	if _bgfebe.ServerFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.ServerFieldAttr))})
	}
	if _bgfebe.InsertPageBreakAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069n\u0073e\u0072\u0074\u0050\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.InsertPageBreakAttr))})
	}
	if _bgfebe.AutoShowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0053\u0068\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.AutoShowAttr))})
	}
	if _bgfebe.TopAutoShowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u006f\u0070\u0041\u0075\u0074\u006f\u0053\u0068\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.TopAutoShowAttr))})
	}
	if _bgfebe.HideNewItemsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064e\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.HideNewItemsAttr))})
	}
	if _bgfebe.MeasureFilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.MeasureFilterAttr))})
	}
	if _bgfebe.IncludeNewItemsInFilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.IncludeNewItemsInFilterAttr))})
	}
	if _bgfebe.ItemPageCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0074\u0065\u006d\u0050\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bgfebe.ItemPageCountAttr)})
	}
	if _bgfebe.SortTypeAttr != ST_FieldSortTypeUnset {
		_cdfcd, _fbacg := _bgfebe.SortTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065"})
		if _fbacg != nil {
			return _fbacg
		}
		start.Attr = append(start.Attr, _cdfcd)
	}
	if _bgfebe.DataSourceSortAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061\u0053\u006f\u0075\u0072\u0063e\u0053\u006f\u0072\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.DataSourceSortAttr))})
	}
	if _bgfebe.NonAutoSortDefaultAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006eo\u006eA\u0075\u0074\u006f\u0053\u006fr\u0074\u0044e\u0066\u0061\u0075\u006c\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.NonAutoSortDefaultAttr))})
	}
	if _bgfebe.RankByAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061\u006e\u006b\u0042\u0079"}, Value: _fc.Sprintf("\u0025\u0076", *_bgfebe.RankByAttr)})
	}
	if _bgfebe.DefaultSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.DefaultSubtotalAttr))})
	}
	if _bgfebe.SumSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.SumSubtotalAttr))})
	}
	if _bgfebe.CountASubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.CountASubtotalAttr))})
	}
	if _bgfebe.AvgSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.AvgSubtotalAttr))})
	}
	if _bgfebe.MaxSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.MaxSubtotalAttr))})
	}
	if _bgfebe.MinSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.MinSubtotalAttr))})
	}
	if _bgfebe.ProductSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.ProductSubtotalAttr))})
	}
	if _bgfebe.CountSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.CountSubtotalAttr))})
	}
	if _bgfebe.StdDevSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.StdDevSubtotalAttr))})
	}
	if _bgfebe.StdDevPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.StdDevPSubtotalAttr))})
	}
	if _bgfebe.VarSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.VarSubtotalAttr))})
	}
	if _bgfebe.VarPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.VarPSubtotalAttr))})
	}
	if _bgfebe.ShowPropCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0050\u0072\u006f\u0070\u0043\u0065\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.ShowPropCellAttr))})
	}
	if _bgfebe.ShowPropTipAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0054\u0069\u0070"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.ShowPropTipAttr))})
	}
	if _bgfebe.ShowPropAsCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0041\u0073\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.ShowPropAsCaptionAttr))})
	}
	if _bgfebe.DefaultAttributeDrillStateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0041\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0044\u0072\u0069\u006c\u006c\u0053t\u0061\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgfebe.DefaultAttributeDrillStateAttr))})
	}
	e.EncodeToken(start)
	if _bgfebe.Items != nil {
		_dgceee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0069\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_bgfebe.Items, _dgceee)
	}
	if _bgfebe.AutoSortScope != nil {
		_aecfg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0061\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}}
		e.EncodeElement(_bgfebe.AutoSortScope, _aecfg)
	}
	if _bgfebe.ExtLst != nil {
		_fgfcb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bgfebe.ExtLst, _fgfcb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ffgag ST_OleUpdate) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ffgag.String(), start)
}
func NewCT_Fonts() *CT_Fonts { _facddb := &CT_Fonts{}; return _facddb }
func (_ecaedf ST_ItemType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ecaedf.String(), start)
}
func (_dffed *CT_Number) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gdbef := range start.Attr {
		if _gdbef.Name.Local == "\u0066\u0063" {
			_edaeg, _dbfeg := _gdbef.Value, error(nil)
			if _dbfeg != nil {
				return _dbfeg
			}
			_dffed.FcAttr = &_edaeg
			continue
		}
		if _gdbef.Name.Local == "\u0076" {
			_aecdc, _afebf := _f.ParseFloat(_gdbef.Value, 64)
			if _afebf != nil {
				return _afebf
			}
			_dffed.VAttr = _aecdc
			continue
		}
		if _gdbef.Name.Local == "\u0066" {
			_bfdgb, _abfdb := _f.ParseBool(_gdbef.Value)
			if _abfdb != nil {
				return _abfdb
			}
			_dffed.FAttr = &_bfdgb
			continue
		}
		if _gdbef.Name.Local == "\u0063" {
			_cddcg, _dcede := _gdbef.Value, error(nil)
			if _dcede != nil {
				return _dcede
			}
			_dffed.CAttr = &_cddcg
			continue
		}
		if _gdbef.Name.Local == "\u0063\u0070" {
			_gdbdb, _gcggf := _f.ParseUint(_gdbef.Value, 10, 32)
			if _gcggf != nil {
				return _gcggf
			}
			_gbafc := uint32(_gdbdb)
			_dffed.CpAttr = &_gbafc
			continue
		}
		if _gdbef.Name.Local == "\u0069\u006e" {
			_cagcc, _aebda := _f.ParseUint(_gdbef.Value, 10, 32)
			if _aebda != nil {
				return _aebda
			}
			_feged := uint32(_cagcc)
			_dffed.InAttr = &_feged
			continue
		}
		if _gdbef.Name.Local == "\u0062\u0063" {
			_gcdcae, _cccgg := _gdbef.Value, error(nil)
			if _cccgg != nil {
				return _cccgg
			}
			_dffed.BcAttr = &_gcdcae
			continue
		}
		if _gdbef.Name.Local == "\u0075" {
			_dffba, _eeegg := _f.ParseBool(_gdbef.Value)
			if _eeegg != nil {
				return _eeegg
			}
			_dffed.UAttr = &_dffba
			continue
		}
		if _gdbef.Name.Local == "\u0069" {
			_bbefd, _gbgge := _f.ParseBool(_gdbef.Value)
			if _gbgge != nil {
				return _gbgge
			}
			_dffed.IAttr = &_bbefd
			continue
		}
		if _gdbef.Name.Local == "\u0075\u006e" {
			_aecfde, _ecgee := _f.ParseBool(_gdbef.Value)
			if _ecgee != nil {
				return _ecgee
			}
			_dffed.UnAttr = &_aecfde
			continue
		}
		if _gdbef.Name.Local == "\u0073\u0074" {
			_fbcee, _fagdb := _f.ParseBool(_gdbef.Value)
			if _fagdb != nil {
				return _fagdb
			}
			_dffed.StAttr = &_fbcee
			continue
		}
		if _gdbef.Name.Local == "\u0062" {
			_afddd, _fgbea := _f.ParseBool(_gdbef.Value)
			if _fgbea != nil {
				return _fgbea
			}
			_dffed.BAttr = &_afddd
			continue
		}
	}
_eaff:
	for {
		_eacegf, _bdac := d.Token()
		if _bdac != nil {
			return _bdac
		}
		switch _fbfgc := _eacegf.(type) {
		case _a.StartElement:
			switch _fbfgc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_ddcc := NewCT_Tuples()
				if _febee := d.DecodeElement(_ddcc, &_fbfgc); _febee != nil {
					return _febee
				}
				_dffed.Tpls = append(_dffed.Tpls, _ddcc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_eecbcf := NewCT_X()
				if _fgccd := d.DecodeElement(_eecbcf, &_fbfgc); _fgccd != nil {
					return _fgccd
				}
				_dffed.X = append(_dffed.X, _eecbcf)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004e\u0075\u006db\u0065\u0072 \u0025\u0076", _fbfgc.Name)
				if _bfabb := d.Skip(); _bfabb != nil {
					return _bfabb
				}
			}
		case _a.EndElement:
			break _eaff
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_DdeValues and its children
func (_gcaf *CT_DdeValues) Validate() error {
	return _gcaf.ValidateWithPath("\u0043\u0054\u005fD\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0073")
}

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_agaa *CT_Extension) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_RangeSet and its children
func (_dcdfe *CT_RangeSet) Validate() error {
	return _dcdfe.ValidateWithPath("C\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074")
}
func (_ggedc ST_PivotFilterType) ValidateWithPath(path string) error {
	switch _ggedc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggedc))
	}
	return nil
}
func (_gccde *CT_RevisionSheetRename) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fcbda := range start.Attr {
		if _fcbda.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_faefd, _dgead := _f.ParseUint(_fcbda.Value, 10, 32)
			if _dgead != nil {
				return _dgead
			}
			_gccde.SheetIdAttr = uint32(_faefd)
			continue
		}
		if _fcbda.Name.Local == "\u006fl\u0064\u004e\u0061\u006d\u0065" {
			_bgbfg, _eefge := _fcbda.Value, error(nil)
			if _eefge != nil {
				return _eefge
			}
			_gccde.OldNameAttr = _bgbfg
			continue
		}
		if _fcbda.Name.Local == "\u006ee\u0077\u004e\u0061\u006d\u0065" {
			_bccga, _dacae := _fcbda.Value, error(nil)
			if _dacae != nil {
				return _dacae
			}
			_gccde.NewNameAttr = _bccga
			continue
		}
		if _fcbda.Name.Local == "\u0072\u0049\u0064" {
			_fdcee, _aedcc := _f.ParseUint(_fcbda.Value, 10, 32)
			if _aedcc != nil {
				return _aedcc
			}
			_gggef := uint32(_fdcee)
			_gccde.RIdAttr = &_gggef
			continue
		}
		if _fcbda.Name.Local == "\u0075\u0061" {
			_adafa, _badef := _f.ParseBool(_fcbda.Value)
			if _badef != nil {
				return _badef
			}
			_gccde.UaAttr = &_adafa
			continue
		}
		if _fcbda.Name.Local == "\u0072\u0061" {
			_dgedf, _gdaef := _f.ParseBool(_fcbda.Value)
			if _gdaef != nil {
				return _gdaef
			}
			_gccde.RaAttr = &_dgedf
			continue
		}
	}
_fgdgge:
	for {
		_daaced, _dbdec := d.Token()
		if _dbdec != nil {
			return _dbdec
		}
		switch _efebe := _daaced.(type) {
		case _a.StartElement:
			switch _efebe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gccde.ExtLst = NewCT_ExtensionList()
				if _ggbbc := d.DecodeElement(_gccde.ExtLst, &_efebe); _ggbbc != nil {
					return _ggbbc
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061\u006d\u0065\u0020\u0025\u0076", _efebe.Name)
				if _bdbccd := d.Skip(); _bdbccd != nil {
					return _bdbccd
				}
			}
		case _a.EndElement:
			break _fgdgge
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_SingleXmlCells() *CT_SingleXmlCells { _faaba := &CT_SingleXmlCells{}; return _faaba }
func (_eddgg *CT_Sets) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eddgg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_eddgg.CountAttr)})
	}
	e.EncodeToken(start)
	_befece := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0065\u0074"}}
	for _, _daaba := range _eddgg.Set {
		e.EncodeElement(_daaba, _befece)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BookView and its children, prefixing error messages with path
func (_gdb *CT_BookView) ValidateWithPath(path string) error {
	if _gea := _gdb.VisibilityAttr.ValidateWithPath(path + "\u002fV\u0069s\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0041\u0074\u0074\u0072"); _gea != nil {
		return _gea
	}
	if _gdb.ExtLst != nil {
		if _bff := _gdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bff != nil {
			return _bff
		}
	}
	return nil
}
func NewCT_ServerFormat() *CT_ServerFormat { _efefc := &CT_ServerFormat{}; return _efefc }

type CT_DeletedField struct {

	// Deleted Fields Name
	NameAttr string
}

func (_adfbd ST_RevisionAction) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cbdfa := _a.Attr{}
	_cbdfa.Name = name
	switch _adfbd {
	case ST_RevisionActionUnset:
		_cbdfa.Value = ""
	case ST_RevisionActionAdd:
		_cbdfa.Value = "\u0061\u0064\u0064"
	case ST_RevisionActionDelete:
		_cbdfa.Value = "\u0064\u0065\u006c\u0065\u0074\u0065"
	}
	return _cbdfa, nil
}
func (_caab *CT_CsPageSetup) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edeae := range start.Attr {
		if _edeae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _edeae.Name.Local == "\u0069\u0064" || _edeae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _edeae.Name.Local == "\u0069\u0064" {
			_geda, _dbbea := _edeae.Value, error(nil)
			if _dbbea != nil {
				return _dbbea
			}
			_caab.IdAttr = &_geda
			continue
		}
		if _edeae.Name.Local == "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae" {
			_defd, _beceb := _f.ParseUint(_edeae.Value, 10, 32)
			if _beceb != nil {
				return _beceb
			}
			_dbee := uint32(_defd)
			_caab.PaperSizeAttr = &_dbee
			continue
		}
		if _edeae.Name.Local == "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068" {
			_afcg, _ffca := _edeae.Value, error(nil)
			if _ffca != nil {
				return _ffca
			}
			_caab.PaperWidthAttr = &_afcg
			continue
		}
		if _edeae.Name.Local == "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072" {
			_fcbcb, _ebeab := _f.ParseUint(_edeae.Value, 10, 32)
			if _ebeab != nil {
				return _ebeab
			}
			_ddgb := uint32(_fcbcb)
			_caab.FirstPageNumberAttr = &_ddgb
			continue
		}
		if _edeae.Name.Local == "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e" {
			_caab.OrientationAttr.UnmarshalXMLAttr(_edeae)
			continue
		}
		if _edeae.Name.Local == "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073" {
			_abeb, _aadgc := _f.ParseBool(_edeae.Value)
			if _aadgc != nil {
				return _aadgc
			}
			_caab.UsePrinterDefaultsAttr = &_abeb
			continue
		}
		if _edeae.Name.Local == "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074" {
			_ebgf, _bfcb := _edeae.Value, error(nil)
			if _bfcb != nil {
				return _bfcb
			}
			_caab.PaperHeightAttr = &_ebgf
			continue
		}
		if _edeae.Name.Local == "\u0064\u0072\u0061f\u0074" {
			_gbfc, _bcbff := _f.ParseBool(_edeae.Value)
			if _bcbff != nil {
				return _bcbff
			}
			_caab.DraftAttr = &_gbfc
			continue
		}
		if _edeae.Name.Local == "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072" {
			_ccgf, _gaeag := _f.ParseBool(_edeae.Value)
			if _gaeag != nil {
				return _gaeag
			}
			_caab.UseFirstPageNumberAttr = &_ccgf
			continue
		}
		if _edeae.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069" {
			_gbgf, _deabe := _f.ParseUint(_edeae.Value, 10, 32)
			if _deabe != nil {
				return _deabe
			}
			_dcdfg := uint32(_gbgf)
			_caab.HorizontalDpiAttr = &_dcdfg
			continue
		}
		if _edeae.Name.Local == "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069" {
			_gggec, _aafec := _f.ParseUint(_edeae.Value, 10, 32)
			if _aafec != nil {
				return _aafec
			}
			_egbfbf := uint32(_gggec)
			_caab.VerticalDpiAttr = &_egbfbf
			continue
		}
		if _edeae.Name.Local == "\u0063\u006f\u0070\u0069\u0065\u0073" {
			_aadd, _fgfae := _f.ParseUint(_edeae.Value, 10, 32)
			if _fgfae != nil {
				return _fgfae
			}
			_bgegd := uint32(_aadd)
			_caab.CopiesAttr = &_bgegd
			continue
		}
		if _edeae.Name.Local == "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065" {
			_bdfc, _gbae := _f.ParseBool(_edeae.Value)
			if _gbae != nil {
				return _gbae
			}
			_caab.BlackAndWhiteAttr = &_bdfc
			continue
		}
	}
	for {
		_cefd, _cbdg := d.Token()
		if _cbdg != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u0073\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070:\u0020\u0025\u0073", _cbdg)
		}
		if _agbca, _adged := _cefd.(_a.EndElement); _adged && _agbca.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionFormatting and its children, prefixing error messages with path
func (_cafbdd *CT_RevisionFormatting) ValidateWithPath(path string) error {
	if _cafbdd.Dxf != nil {
		if _fagbg := _cafbdd.Dxf.ValidateWithPath(path + "\u002f\u0044\u0078\u0066"); _fagbg != nil {
			return _fagbg
		}
	}
	if _cafbdd.ExtLst != nil {
		if _cfceg := _cafbdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cfceg != nil {
			return _cfceg
		}
	}
	return nil
}

type CT_PhoneticRun struct {

	// Base Text Start Index
	SbAttr uint32

	// Base Text End Index
	EbAttr uint32

	// Text
	T string
}

func (_dabfgg ST_PaneState) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dabfgg.String(), start)
}
func (_efgee *CT_OlapPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _efgee.LocalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063a\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efgee.LocalAttr))})
	}
	if _efgee.LocalConnectionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006co\u0063a\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_efgee.LocalConnectionAttr)})
	}
	if _efgee.LocalRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063a\u006c\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efgee.LocalRefreshAttr))})
	}
	if _efgee.SendLocaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u006e\u0064\u004c\u006f\u0063\u0061\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efgee.SendLocaleAttr))})
	}
	if _efgee.RowDrillCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006f\u0077\u0044\u0072\u0069\u006c\u006c\u0043\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_efgee.RowDrillCountAttr)})
	}
	if _efgee.ServerFillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efgee.ServerFillAttr))})
	}
	if _efgee.ServerNumberFormatAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073e\u0072v\u0065\u0072\u004e\u0075\u006db\u0065\u0072F\u006f\u0072\u006d\u0061\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efgee.ServerNumberFormatAttr))})
	}
	if _efgee.ServerFontAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efgee.ServerFontAttr))})
	}
	if _efgee.ServerFontColorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073e\u0072v\u0065\u0072\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006f\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efgee.ServerFontColorAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_ColorScale struct {

	// Conditional Format Value Object
	Cfvo []*CT_Cfvo

	// Color Gradiant Interpolation
	Color []*CT_Color
}

func (_cbfa *CT_MdxMemeberProp) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cfadab := range start.Attr {
		if _cfadab.Name.Local == "\u006e" {
			_cacgb, _afgef := _f.ParseUint(_cfadab.Value, 10, 32)
			if _afgef != nil {
				return _afgef
			}
			_cbfa.NAttr = uint32(_cacgb)
			continue
		}
		if _cfadab.Name.Local == "\u006e\u0070" {
			_bfccf, _fcda := _f.ParseUint(_cfadab.Value, 10, 32)
			if _fcda != nil {
				return _fcda
			}
			_cbfa.NpAttr = uint32(_bfccf)
			continue
		}
	}
	for {
		_fafdb, _ababd := d.Token()
		if _ababd != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065\u0072\u0050\u0072\u006f\u0070: \u0025\u0073", _ababd)
		}
		if _fgba, _fgfec := _fafdb.(_a.EndElement); _fgfec && _fgba.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ChartsheetViews struct {

	// Chart Sheet View
	SheetView []*CT_ChartsheetView
	ExtLst    *CT_ExtensionList
}

func (_fgeddd ST_FileType) String() string {
	switch _fgeddd {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u0063"
	case 2:
		return "\u0077\u0069\u006e"
	case 3:
		return "\u0064\u006f\u0073"
	case 4:
		return "\u006c\u0069\u006e"
	case 5:
		return "\u006f\u0074\u0068e\u0072"
	}
	return ""
}

// Validate validates the CT_WebPublishing and its children
func (_adbfc *CT_WebPublishing) Validate() error {
	return _adbfc.ValidateWithPath("\u0043\u0054_\u0057\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067")
}
func (_gbea *CT_DataConsolidate) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ggac := range start.Attr {
		if _ggac.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_gbea.FunctionAttr.UnmarshalXMLAttr(_ggac)
			continue
		}
		if _ggac.Name.Local == "s\u0074\u0061\u0072\u0074\u004c\u0061\u0062\u0065\u006c\u0073" {
			_adcda, _dgcfb := _f.ParseBool(_ggac.Value)
			if _dgcfb != nil {
				return _dgcfb
			}
			_gbea.StartLabelsAttr = &_adcda
			continue
		}
		if _ggac.Name.Local == "\u006c\u0065\u0066\u0074\u004c\u0061\u0062\u0065\u006c\u0073" {
			_fgda, _cfbfg := _f.ParseBool(_ggac.Value)
			if _cfbfg != nil {
				return _cfbfg
			}
			_gbea.LeftLabelsAttr = &_fgda
			continue
		}
		if _ggac.Name.Local == "\u0074o\u0070\u004c\u0061\u0062\u0065\u006cs" {
			_gdac, _dfdc := _f.ParseBool(_ggac.Value)
			if _dfdc != nil {
				return _dfdc
			}
			_gbea.TopLabelsAttr = &_gdac
			continue
		}
		if _ggac.Name.Local == "\u006c\u0069\u006e\u006b" {
			_cgedg, _cgef := _f.ParseBool(_ggac.Value)
			if _cgef != nil {
				return _cgef
			}
			_gbea.LinkAttr = &_cgedg
			continue
		}
	}
_bgagd:
	for {
		_fgeca, _eeab := d.Token()
		if _eeab != nil {
			return _eeab
		}
		switch _agce := _fgeca.(type) {
		case _a.StartElement:
			switch _agce.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}:
				_gbea.DataRefs = NewCT_DataRefs()
				if _ceadf := d.DecodeElement(_gbea.DataRefs, &_agce); _ceadf != nil {
					return _ceadf
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0043\u006fn\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065\u0020\u0025\u0076", _agce.Name)
				if _gabbda := d.Skip(); _gabbda != nil {
					return _gabbda
				}
			}
		case _a.EndElement:
			break _bgagd
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_SheetDimension() *CT_SheetDimension { _edfbg := &CT_SheetDimension{}; return _edfbg }

// Validate validates the CT_DataFields and its children
func (_edba *CT_DataFields) Validate() error {
	return _edba.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073")
}

type CT_SheetIdMap struct {

	// Sheet Count
	CountAttr *uint32

	// Sheet Id
	SheetId []*CT_SheetId
}

func (_baddd *CT_FutureMetadataBlock) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _baddd.ExtLst != nil {
		_dfec := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_baddd.ExtLst, _dfec)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cedg *CT_IconFilter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_debf, _cdgag := _cedg.IconSetAttr.MarshalXMLAttr(_a.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
	if _cdgag != nil {
		return _cdgag
	}
	start.Attr = append(start.Attr, _debf)
	if _cedg.IconIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0063\u006f\u006e\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_cedg.IconIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MapInfo and its children, prefixing error messages with path
func (_gecfd *CT_MapInfo) ValidateWithPath(path string) error {
	for _dbdcf, _dbbef := range _gecfd.Schema {
		if _ccbe := _dbbef.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0061\u005b\u0025\u0064\u005d", path, _dbdcf)); _ccbe != nil {
			return _ccbe
		}
	}
	for _egaeba, _abfba := range _gecfd.Map {
		if _afdcb := _abfba.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _egaeba)); _afdcb != nil {
			return _afdcb
		}
	}
	return nil
}
func (_ec *AG_AutoFormat) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ec.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_ec.AutoFormatIdAttr)})
	}
	if _ec.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ec.ApplyNumberFormatsAttr))})
	}
	if _ec.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ec.ApplyBorderFormatsAttr))})
	}
	if _ec.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ec.ApplyFontFormatsAttr))})
	}
	if _ec.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ec.ApplyPatternFormatsAttr))})
	}
	if _ec.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ec.ApplyAlignmentFormatsAttr))})
	}
	if _ec.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ec.ApplyWidthHeightFormatsAttr))})
	}
	return nil
}
func NewCT_Formats() *CT_Formats { _cdgf := &CT_Formats{}; return _cdgf }
func (_cgagb ST_FilterOperator) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cgagb.String(), start)
}
func (_fbacdg ST_DynamicFilterType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fbacdg.String(), start)
}

// ValidateWithPath validates the CT_ObjectPr and its children, prefixing error messages with path
func (_ccede *CT_ObjectPr) ValidateWithPath(path string) error {
	if _gadg := _ccede.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _gadg != nil {
		return _gadg
	}
	return nil
}

// Validate validates the CT_MeasureGroup and its children
func (_eebfg *CT_MeasureGroup) Validate() error {
	return _eebfg.ValidateWithPath("\u0043T\u005fM\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070")
}
func (_fcdaab ST_FileType) ValidateWithPath(path string) error {
	switch _fcdaab {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcdaab))
	}
	return nil
}
func (_bgaefg *CT_PatternFill) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aagcff := range start.Attr {
		if _aagcff.Name.Local == "p\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065" {
			_bgaefg.PatternTypeAttr.UnmarshalXMLAttr(_aagcff)
			continue
		}
	}
_bfgdbf:
	for {
		_afedea, _cbffa := d.Token()
		if _cbffa != nil {
			return _cbffa
		}
		switch _adced := _afedea.(type) {
		case _a.StartElement:
			switch _adced.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066g\u0043\u006f\u006c\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066g\u0043\u006f\u006c\u006f\u0072"}:
				_bgaefg.FgColor = NewCT_Color()
				if _bggca := d.DecodeElement(_bgaefg.FgColor, &_adced); _bggca != nil {
					return _bggca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062g\u0043\u006f\u006c\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062g\u0043\u006f\u006c\u006f\u0072"}:
				_bgaefg.BgColor = NewCT_Color()
				if _eggde := d.DecodeElement(_bgaefg.BgColor, &_adced); _eggde != nil {
					return _eggde
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006eF\u0069l\u006c\u0020\u0025\u0076", _adced.Name)
				if _fcfdbf := d.Skip(); _fcfdbf != nil {
					return _fcfdbf
				}
			}
		case _a.EndElement:
			break _bfgdbf
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_IntProperty() *CT_IntProperty { _bcag := &CT_IntProperty{}; return _bcag }

// Validate validates the CT_ExternalSheetDataSet and its children
func (_fdebde *CT_ExternalSheetDataSet) Validate() error {
	return _fdebde.ValidateWithPath("\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074")
}
func NewCT_Hyperlinks() *CT_Hyperlinks { _dgdedg := &CT_Hyperlinks{}; return _dgdedg }
func (_eaga *CT_OleObjects) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_bdaac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ao\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}}
	for _, _fcdf := range _eaga.OleObject {
		e.EncodeElement(_fcdf, _bdaac)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_agddf *CT_RevisionDefinedName) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dgfca := range start.Attr {
		if _dgfca.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_cdabf, _cgbfb := _dgfca.Value, error(nil)
			if _cgbfb != nil {
				return _cgbfb
			}
			_agddf.DescriptionAttr = &_cdabf
			continue
		}
		if _dgfca.Name.Local == "\u006f\u006c\u0064\u0044\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e" {
			_eaefc, _dgdca := _dgfca.Value, error(nil)
			if _dgdca != nil {
				return _dgdca
			}
			_agddf.OldDescriptionAttr = &_eaefc
			continue
		}
		if _dgfca.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u0056\u0069\u0065\u0077" {
			_dabaaa, _ecdab := _f.ParseBool(_dgfca.Value)
			if _ecdab != nil {
				return _ecdab
			}
			_agddf.CustomViewAttr = &_dabaaa
			continue
		}
		if _dgfca.Name.Local == "\u0068\u0065\u006c\u0070" {
			_degdd, _daaff := _dgfca.Value, error(nil)
			if _daaff != nil {
				return _daaff
			}
			_agddf.HelpAttr = &_degdd
			continue
		}
		if _dgfca.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_defcb, _bbbgc := _f.ParseBool(_dgfca.Value)
			if _bbbgc != nil {
				return _bbbgc
			}
			_agddf.FunctionAttr = &_defcb
			continue
		}
		if _dgfca.Name.Local == "\u006fl\u0064\u0048\u0065\u006c\u0070" {
			_eagag, _cebbf := _dgfca.Value, error(nil)
			if _cebbf != nil {
				return _cebbf
			}
			_agddf.OldHelpAttr = &_eagag
			continue
		}
		if _dgfca.Name.Local == "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064" {
			_fdeca, _cebbe := _f.ParseUint(_dgfca.Value, 10, 8)
			if _cebbe != nil {
				return _cebbe
			}
			_gcbcd := uint8(_fdeca)
			_agddf.FunctionGroupIdAttr = &_gcbcd
			continue
		}
		if _dgfca.Name.Local == "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r" {
			_aefcg, _bebdf := _dgfca.Value, error(nil)
			if _bebdf != nil {
				return _bebdf
			}
			_agddf.StatusBarAttr = &_aefcg
			continue
		}
		if _dgfca.Name.Local == "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079" {
			_dfdbf, _cffce := _f.ParseUint(_dgfca.Value, 10, 8)
			if _cffce != nil {
				return _cffce
			}
			_eeebea := uint8(_dfdbf)
			_agddf.ShortcutKeyAttr = &_eeebea
			continue
		}
		if _dgfca.Name.Local == "\u006f\u006c\u0064S\u0074\u0061\u0074\u0075\u0073\u0042\u0061\u0072" {
			_bbead, _ggecdg := _dgfca.Value, error(nil)
			if _ggecdg != nil {
				return _ggecdg
			}
			_agddf.OldStatusBarAttr = &_bbead
			continue
		}
		if _dgfca.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_dgcbag, _fffbe := _f.ParseBool(_dgfca.Value)
			if _fffbe != nil {
				return _fffbe
			}
			_agddf.HiddenAttr = &_dgcbag
			continue
		}
		if _dgfca.Name.Local == "\u006f\u006c\u0064\u0043\u006f\u006d\u006d\u0065\u006e\u0074" {
			_ccagf, _eaaaed := _dgfca.Value, error(nil)
			if _eaaaed != nil {
				return _eaaaed
			}
			_agddf.OldCommentAttr = &_ccagf
			continue
		}
		if _dgfca.Name.Local == "\u006e\u0061\u006d\u0065" {
			_baafa, _febcf := _dgfca.Value, error(nil)
			if _febcf != nil {
				return _febcf
			}
			_agddf.NameAttr = _baafa
			continue
		}
		if _dgfca.Name.Local == "\u0072\u0061" {
			_ecaed, _ebfgd := _f.ParseBool(_dgfca.Value)
			if _ebfgd != nil {
				return _ebfgd
			}
			_agddf.RaAttr = &_ecaed
			continue
		}
		if _dgfca.Name.Local == "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_cadfec, _eagfd := _f.ParseUint(_dgfca.Value, 10, 32)
			if _eagfd != nil {
				return _eagfd
			}
			_ebacg := uint32(_cadfec)
			_agddf.LocalSheetIdAttr = &_ebacg
			continue
		}
		if _dgfca.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_aaffg, _dfeba := _dgfca.Value, error(nil)
			if _dfeba != nil {
				return _dfeba
			}
			_agddf.CommentAttr = &_aaffg
			continue
		}
		if _dgfca.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_abdgd, _baec := _dgfca.Value, error(nil)
			if _baec != nil {
				return _baec
			}
			_agddf.CustomMenuAttr = &_abdgd
			continue
		}
		if _dgfca.Name.Local == "o\u006c\u0064\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_dfcbc, _ffabda := _f.ParseBool(_dgfca.Value)
			if _ffabda != nil {
				return _ffabda
			}
			_agddf.OldFunctionAttr = &_dfcbc
			continue
		}
		if _dgfca.Name.Local == "\u0075\u0061" {
			_dadecf, _agcaf := _f.ParseBool(_dgfca.Value)
			if _agcaf != nil {
				return _agcaf
			}
			_agddf.UaAttr = &_dadecf
			continue
		}
		if _dgfca.Name.Local == "\u006f\u006c\u0064\u0053\u0068\u006f\u0072\u0074\u0063u\u0074\u004b\u0065\u0079" {
			_gaegg, _dfcbb := _f.ParseUint(_dgfca.Value, 10, 8)
			if _dfcbb != nil {
				return _dfcbb
			}
			_bcggda := uint8(_gaegg)
			_agddf.OldShortcutKeyAttr = &_bcggda
			continue
		}
		if _dgfca.Name.Local == "\u006fl\u0064\u0048\u0069\u0064\u0064\u0065n" {
			_bbdbd, _gdffae := _f.ParseBool(_dgfca.Value)
			if _gdffae != nil {
				return _gdffae
			}
			_agddf.OldHiddenAttr = &_bbdbd
			continue
		}
		if _dgfca.Name.Local == "\u006f\u006c\u0064\u0043\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_egegd, _gfdgc := _dgfca.Value, error(nil)
			if _gfdgc != nil {
				return _gfdgc
			}
			_agddf.OldCustomMenuAttr = &_egegd
			continue
		}
		if _dgfca.Name.Local == "\u006fl\u0064F\u0075\u006e\u0063\u0074\u0069o\u006e\u0047r\u006f\u0075\u0070\u0049\u0064" {
			_aeaead, _eefg := _f.ParseUint(_dgfca.Value, 10, 8)
			if _eefg != nil {
				return _eefg
			}
			_cgcceg := uint8(_aeaead)
			_agddf.OldFunctionGroupIdAttr = &_cgcceg
			continue
		}
		if _dgfca.Name.Local == "\u0072\u0049\u0064" {
			_dbecb, _cegegg := _f.ParseUint(_dgfca.Value, 10, 32)
			if _cegegg != nil {
				return _cegegg
			}
			_gbcfg := uint32(_dbecb)
			_agddf.RIdAttr = &_gbcfg
			continue
		}
	}
_egaff:
	for {
		_dgbaf, _aafcfa := d.Token()
		if _aafcfa != nil {
			return _aafcfa
		}
		switch _eabfe := _dgbaf.(type) {
		case _a.StartElement:
			switch _eabfe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}:
				_agddf.Formula = new(string)
				if _dcfgg := d.DecodeElement(_agddf.Formula, &_eabfe); _dcfgg != nil {
					return _dcfgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_agddf.OldFormula = new(string)
				if _bcbea := d.DecodeElement(_agddf.OldFormula, &_eabfe); _bcbea != nil {
					return _bcbea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agddf.ExtLst = NewCT_ExtensionList()
				if _beggg := d.DecodeElement(_agddf.ExtLst, &_eabfe); _beggg != nil {
					return _beggg
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0020\u0025\u0076", _eabfe.Name)
				if _gefdfg := d.Skip(); _gefdfg != nil {
					return _gefdfg
				}
			}
		case _a.EndElement:
			break _egaff
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_DateGroupItem and its children
func (_dfdga *CT_DateGroupItem) Validate() error {
	return _dfdga.ValidateWithPath("\u0043\u0054_\u0044\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d")
}
func (_dagadc *CT_Scenarios) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bfefa := range start.Attr {
		if _bfefa.Name.Local == "\u0063u\u0072\u0072\u0065\u006e\u0074" {
			_abddb, _gaceg := _f.ParseUint(_bfefa.Value, 10, 32)
			if _gaceg != nil {
				return _gaceg
			}
			_eddeee := uint32(_abddb)
			_dagadc.CurrentAttr = &_eddeee
			continue
		}
		if _bfefa.Name.Local == "\u0073\u0068\u006f\u0077" {
			_bcbcea, _dgcfbd := _f.ParseUint(_bfefa.Value, 10, 32)
			if _dgcfbd != nil {
				return _dgcfbd
			}
			_cgggc := uint32(_bcbcea)
			_dagadc.ShowAttr = &_cgggc
			continue
		}
		if _bfefa.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_ccfdag, _ecbfda := ParseSliceST_Sqref(_bfefa.Value)
			if _ecbfda != nil {
				return _ecbfda
			}
			_dagadc.SqrefAttr = &_ccfdag
			continue
		}
	}
_fbfbga:
	for {
		_bbfbg, _aaefe := d.Token()
		if _aaefe != nil {
			return _aaefe
		}
		switch _dafgf := _bbfbg.(type) {
		case _a.StartElement:
			switch _dafgf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}:
				_addgba := NewCT_Scenario()
				if _fdbab := d.DecodeElement(_addgba, &_dafgf); _fdbab != nil {
					return _fdbab
				}
				_dagadc.Scenario = append(_dagadc.Scenario, _addgba)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0063\u0065n\u0061\u0072\u0069\u006f\u0073\u0020\u0025\u0076", _dafgf.Name)
				if _ccafe := d.Skip(); _ccafe != nil {
					return _ccafe
				}
			}
		case _a.EndElement:
			break _fbfbga
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionCellChange and its children, prefixing error messages with path
func (_edgfbb *CT_RevisionCellChange) ValidateWithPath(path string) error {
	if _edgfbb.Oc != nil {
		if _feace := _edgfbb.Oc.ValidateWithPath(path + "\u002f\u004f\u0063"); _feace != nil {
			return _feace
		}
	}
	if _fbfbg := _edgfbb.Nc.ValidateWithPath(path + "\u002f\u004e\u0063"); _fbfbg != nil {
		return _fbfbg
	}
	if _edgfbb.Odxf != nil {
		if _dbdgb := _edgfbb.Odxf.ValidateWithPath(path + "\u002f\u004f\u0064x\u0066"); _dbdgb != nil {
			return _dbdgb
		}
	}
	if _edgfbb.Ndxf != nil {
		if _daege := _edgfbb.Ndxf.ValidateWithPath(path + "\u002f\u004e\u0064x\u0066"); _daege != nil {
			return _daege
		}
	}
	if _edgfbb.ExtLst != nil {
		if _dcabf := _edgfbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcabf != nil {
			return _dcabf
		}
	}
	return nil
}
func (_aggfd *ST_PatternType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_aggfd = 0
	case "\u006e\u006f\u006e\u0065":
		*_aggfd = 1
	case "\u0073\u006f\u006ci\u0064":
		*_aggfd = 2
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079":
		*_aggfd = 3
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
		*_aggfd = 4
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
		*_aggfd = 5
	case "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c":
		*_aggfd = 6
	case "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
		*_aggfd = 7
	case "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e":
		*_aggfd = 8
	case "\u0064\u0061\u0072\u006b\u0055\u0070":
		*_aggfd = 9
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064":
		*_aggfd = 10
	case "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
		*_aggfd = 11
	case "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":
		*_aggfd = 12
	case "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
		*_aggfd = 13
	case "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n":
		*_aggfd = 14
	case "\u006ci\u0067\u0068\u0074\u0055\u0070":
		*_aggfd = 15
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d":
		*_aggfd = 16
	case "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
		*_aggfd = 17
	case "\u0067r\u0061\u0079\u0031\u0032\u0035":
		*_aggfd = 18
	case "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035":
		*_aggfd = 19
	}
	return nil
}
func (_badag ST_Pane) Validate() error { return _badag.ValidateWithPath("") }
func (_fgbed *CT_PivotFilter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006c\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _fgbed.FldAttr)})
	if _fgbed.MpFldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0070\u0046l\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fgbed.MpFldAttr)})
	}
	_gfcef, _aedad := _fgbed.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _aedad != nil {
		return _aedad
	}
	start.Attr = append(start.Attr, _gfcef)
	if _fgbed.EvalOrderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065v\u0061\u006c\u004f\u0072\u0064\u0065r"}, Value: _fc.Sprintf("\u0025\u0076", *_fgbed.EvalOrderAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _fgbed.IdAttr)})
	if _fgbed.IMeasureHierAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u004d\u0065a\u0073\u0075\u0072\u0065\u0048\u0069\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_fgbed.IMeasureHierAttr)})
	}
	if _fgbed.IMeasureFldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "i\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u006c\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fgbed.IMeasureFldAttr)})
	}
	if _fgbed.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fgbed.NameAttr)})
	}
	if _fgbed.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fgbed.DescriptionAttr)})
	}
	if _fgbed.StringValue1Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0031"}, Value: _fc.Sprintf("\u0025\u0076", *_fgbed.StringValue1Attr)})
	}
	if _fgbed.StringValue2Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0032"}, Value: _fc.Sprintf("\u0025\u0076", *_fgbed.StringValue2Attr)})
	}
	e.EncodeToken(start)
	_fddgdg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
	e.EncodeElement(_fgbed.AutoFilter, _fddgdg)
	if _fgbed.ExtLst != nil {
		_gebaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fgbed.ExtLst, _gebaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type PivotCacheRecords struct{ CT_PivotCacheRecords }

// Validate validates the AG_AutoFormat and its children
func (_ff *AG_AutoFormat) Validate() error {
	return _ff.ValidateWithPath("\u0041\u0047\u005f\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074")
}
func NewCT_Error() *CT_Error               { _gfdce := &CT_Error{}; return _gfdce }
func NewCT_Connections() *CT_Connections   { _gdfg := &CT_Connections{}; return _gdfg }
func NewCT_GradientFill() *CT_GradientFill { _ccaag := &CT_GradientFill{}; return _ccaag }

// ValidateWithPath validates the CT_RowFields and its children, prefixing error messages with path
func (_daaebb *CT_RowFields) ValidateWithPath(path string) error {
	for _bgcdcd, _dedcc := range _daaebb.Field {
		if _eggeb := _dedcc.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002fF\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _bgcdcd)); _eggeb != nil {
			return _eggeb
		}
	}
	return nil
}

type CT_PageFields struct {

	// Page Item Count
	CountAttr *uint32

	// Page Field
	PageField []*CT_PageField
}

func (_faagf *CT_QueryTable) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _faagf.NameAttr)})
	if _faagf.HeadersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.HeadersAttr))})
	}
	if _faagf.RowNumbersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.RowNumbersAttr))})
	}
	if _faagf.DisableRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.DisableRefreshAttr))})
	}
	if _faagf.BackgroundRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.BackgroundRefreshAttr))})
	}
	if _faagf.FirstBackgroundRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.FirstBackgroundRefreshAttr))})
	}
	if _faagf.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.RefreshOnLoadAttr))})
	}
	if _faagf.GrowShrinkTypeAttr != ST_GrowShrinkTypeUnset {
		_adfdc, _becgg := _faagf.GrowShrinkTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065"})
		if _becgg != nil {
			return _becgg
		}
		start.Attr = append(start.Attr, _adfdc)
	}
	if _faagf.FillFormulasAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.FillFormulasAttr))})
	}
	if _faagf.RemoveDataOnSaveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.RemoveDataOnSaveAttr))})
	}
	if _faagf.DisableEditAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.DisableEditAttr))})
	}
	if _faagf.PreserveFormattingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.PreserveFormattingAttr))})
	}
	if _faagf.AdjustColumnWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.AdjustColumnWidthAttr))})
	}
	if _faagf.IntermediateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.IntermediateAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _faagf.ConnectionIdAttr)})
	if _faagf.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_faagf.AutoFormatIdAttr)})
	}
	if _faagf.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.ApplyNumberFormatsAttr))})
	}
	if _faagf.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.ApplyBorderFormatsAttr))})
	}
	if _faagf.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.ApplyFontFormatsAttr))})
	}
	if _faagf.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.ApplyPatternFormatsAttr))})
	}
	if _faagf.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.ApplyAlignmentFormatsAttr))})
	}
	if _faagf.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faagf.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	if _faagf.QueryTableRefresh != nil {
		_bfgeg := _a.StartElement{Name: _a.Name{Local: "m\u0061:\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068"}}
		e.EncodeElement(_faagf.QueryTableRefresh, _bfgeg)
	}
	if _faagf.ExtLst != nil {
		_ccceb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_faagf.ExtLst, _ccceb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_DynamicFilterTypeUnset        ST_DynamicFilterType = 0
	ST_DynamicFilterTypeNull         ST_DynamicFilterType = 1
	ST_DynamicFilterTypeAboveAverage ST_DynamicFilterType = 2
	ST_DynamicFilterTypeBelowAverage ST_DynamicFilterType = 3
	ST_DynamicFilterTypeTomorrow     ST_DynamicFilterType = 4
	ST_DynamicFilterTypeToday        ST_DynamicFilterType = 5
	ST_DynamicFilterTypeYesterday    ST_DynamicFilterType = 6
	ST_DynamicFilterTypeNextWeek     ST_DynamicFilterType = 7
	ST_DynamicFilterTypeThisWeek     ST_DynamicFilterType = 8
	ST_DynamicFilterTypeLastWeek     ST_DynamicFilterType = 9
	ST_DynamicFilterTypeNextMonth    ST_DynamicFilterType = 10
	ST_DynamicFilterTypeThisMonth    ST_DynamicFilterType = 11
	ST_DynamicFilterTypeLastMonth    ST_DynamicFilterType = 12
	ST_DynamicFilterTypeNextQuarter  ST_DynamicFilterType = 13
	ST_DynamicFilterTypeThisQuarter  ST_DynamicFilterType = 14
	ST_DynamicFilterTypeLastQuarter  ST_DynamicFilterType = 15
	ST_DynamicFilterTypeNextYear     ST_DynamicFilterType = 16
	ST_DynamicFilterTypeThisYear     ST_DynamicFilterType = 17
	ST_DynamicFilterTypeLastYear     ST_DynamicFilterType = 18
	ST_DynamicFilterTypeYearToDate   ST_DynamicFilterType = 19
	ST_DynamicFilterTypeQ1           ST_DynamicFilterType = 20
	ST_DynamicFilterTypeQ2           ST_DynamicFilterType = 21
	ST_DynamicFilterTypeQ3           ST_DynamicFilterType = 22
	ST_DynamicFilterTypeQ4           ST_DynamicFilterType = 23
	ST_DynamicFilterTypeM1           ST_DynamicFilterType = 24
	ST_DynamicFilterTypeM2           ST_DynamicFilterType = 25
	ST_DynamicFilterTypeM3           ST_DynamicFilterType = 26
	ST_DynamicFilterTypeM4           ST_DynamicFilterType = 27
	ST_DynamicFilterTypeM5           ST_DynamicFilterType = 28
	ST_DynamicFilterTypeM6           ST_DynamicFilterType = 29
	ST_DynamicFilterTypeM7           ST_DynamicFilterType = 30
	ST_DynamicFilterTypeM8           ST_DynamicFilterType = 31
	ST_DynamicFilterTypeM9           ST_DynamicFilterType = 32
	ST_DynamicFilterTypeM10          ST_DynamicFilterType = 33
	ST_DynamicFilterTypeM11          ST_DynamicFilterType = 34
	ST_DynamicFilterTypeM12          ST_DynamicFilterType = 35
)

type CT_Sets struct {

	// Tuple Set Count
	CountAttr *uint32

	// OLAP Set
	Set []*CT_Set
}

func (_eaaacga *ST_VolValueType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_efbfaf, _bfbbd := d.Token()
	if _bfbbd != nil {
		return _bfbbd
	}
	if _agggbf, _acbde := _efbfaf.(_a.EndElement); _acbde && _agggbf.Name == start.Name {
		*_eaaacga = 1
		return nil
	}
	if _edcgc, _ddedb := _efbfaf.(_a.CharData); !_ddedb {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efbfaf)
	} else {
		switch string(_edcgc) {
		case "":
			*_eaaacga = 0
		case "\u0062":
			*_eaaacga = 1
		case "\u006e":
			*_eaaacga = 2
		case "\u0065":
			*_eaaacga = 3
		case "\u0073":
			*_eaaacga = 4
		}
	}
	_efbfaf, _bfbbd = d.Token()
	if _bfbbd != nil {
		return _bfbbd
	}
	if _feedc, _bdbbf := _efbfaf.(_a.EndElement); _bdbbf && _feedc.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efbfaf)
}

// ValidateWithPath validates the CT_Field and its children, prefixing error messages with path
func (_ggdfb *CT_Field) ValidateWithPath(path string) error { return nil }

type CT_DataValidations struct {

	// Disable Prompts
	DisablePromptsAttr *bool

	// Top Left Corner (X Coodrinate)
	XWindowAttr *uint32

	// Top Left Corner (Y Coordinate)
	YWindowAttr *uint32

	// Data Validation Item Count
	CountAttr *uint32

	// Data Validation
	DataValidation []*CT_DataValidation
}

// ValidateWithPath validates the CT_WorksheetSource and its children, prefixing error messages with path
func (_deedd *CT_WorksheetSource) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_RevisionConflict and its children, prefixing error messages with path
func (_faafgf *CT_RevisionConflict) ValidateWithPath(path string) error { return nil }
func (_babaf *CT_I) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ffefff := range start.Attr {
		if _ffefff.Name.Local == "\u0074" {
			_babaf.TAttr.UnmarshalXMLAttr(_ffefff)
			continue
		}
		if _ffefff.Name.Local == "\u0072" {
			_aacdb, _degbe := _f.ParseUint(_ffefff.Value, 10, 32)
			if _degbe != nil {
				return _degbe
			}
			_dffga := uint32(_aacdb)
			_babaf.RAttr = &_dffga
			continue
		}
		if _ffefff.Name.Local == "\u0069" {
			_bedcc, _fcea := _f.ParseUint(_ffefff.Value, 10, 32)
			if _fcea != nil {
				return _fcea
			}
			_aeaea := uint32(_bedcc)
			_babaf.IAttr = &_aeaea
			continue
		}
	}
_eebfe:
	for {
		_cbad, _gegde := d.Token()
		if _gegde != nil {
			return _gegde
		}
		switch _aafca := _cbad.(type) {
		case _a.StartElement:
			switch _aafca.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bagdd := NewCT_X()
				if _egddd := d.DecodeElement(_bagdd, &_aafca); _egddd != nil {
					return _egddd
				}
				_babaf.X = append(_babaf.X, _bagdd)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0049\u0020\u0025\u0076", _aafca.Name)
				if _gfbfb := d.Skip(); _gfbfb != nil {
					return _gfbfb
				}
			}
		case _a.EndElement:
			break _eebfe
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SheetIdMap and its children
func (_caebaf *CT_SheetIdMap) Validate() error {
	return _caebaf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070")
}
func (_bbdd *CT_GroupLevels) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eebcbg := range start.Attr {
		if _eebcbg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_debaa, _debaaf := _f.ParseUint(_eebcbg.Value, 10, 32)
			if _debaaf != nil {
				return _debaaf
			}
			_dbcfd := uint32(_debaa)
			_bbdd.CountAttr = &_dbcfd
			continue
		}
	}
_deaec:
	for {
		_afbec, _acfcf := d.Token()
		if _acfcf != nil {
			return _acfcf
		}
		switch _effbe := _afbec.(type) {
		case _a.StartElement:
			switch _effbe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}:
				_fcdd := NewCT_GroupLevel()
				if _eecac := d.DecodeElement(_fcdd, &_effbe); _eecac != nil {
					return _eecac
				}
				_bbdd.GroupLevel = append(_bbdd.GroupLevel, _fcdd)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065v\u0065l\u0073\u0020\u0025\u0076", _effbe.Name)
				if _aaedf := d.Skip(); _aaedf != nil {
					return _aaedf
				}
			}
		case _a.EndElement:
			break _deaec
		case _a.CharData:
		}
	}
	return nil
}
func (_bdebb ST_TimePeriod) Validate() error { return _bdebb.ValidateWithPath("") }
func (_bbafa *CT_DataFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bbafa.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bbafa.CountAttr)})
	}
	e.EncodeToken(start)
	_bbcdb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ad\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064"}}
	for _, _gccd := range _bbafa.DataField {
		e.EncodeElement(_gccd, _bbcdb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_acecd *CT_Formats) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _acecd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_acecd.CountAttr)})
	}
	e.EncodeToken(start)
	_fdfd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0066\u006f\u0072\u006d\u0061t"}}
	for _, _ddcgg := range _acecd.Format {
		e.EncodeElement(_ddcgg, _fdfd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cbgd *CT_Col) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _efbgg := range start.Attr {
		if _efbgg.Name.Local == "\u006d\u0069\u006e" {
			_cefce, _cabd := _f.ParseUint(_efbgg.Value, 10, 32)
			if _cabd != nil {
				return _cabd
			}
			_cbgd.MinAttr = uint32(_cefce)
			continue
		}
		if _efbgg.Name.Local == "\u006d\u0061\u0078" {
			_dbebe, _gcgg := _f.ParseUint(_efbgg.Value, 10, 32)
			if _gcgg != nil {
				return _gcgg
			}
			_cbgd.MaxAttr = uint32(_dbebe)
			continue
		}
		if _efbgg.Name.Local == "\u0077\u0069\u0064t\u0068" {
			_cdcg, _ebea := _f.ParseFloat(_efbgg.Value, 64)
			if _ebea != nil {
				return _ebea
			}
			_cbgd.WidthAttr = &_cdcg
			continue
		}
		if _efbgg.Name.Local == "\u0073\u0074\u0079l\u0065" {
			_agae, _gbcgc := _f.ParseUint(_efbgg.Value, 10, 32)
			if _gbcgc != nil {
				return _gbcgc
			}
			_decf := uint32(_agae)
			_cbgd.StyleAttr = &_decf
			continue
		}
		if _efbgg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_cdbg, _bbdf := _f.ParseBool(_efbgg.Value)
			if _bbdf != nil {
				return _bbdf
			}
			_cbgd.HiddenAttr = &_cdbg
			continue
		}
		if _efbgg.Name.Local == "\u0062e\u0073\u0074\u0046\u0069\u0074" {
			_aace, _febe := _f.ParseBool(_efbgg.Value)
			if _febe != nil {
				return _febe
			}
			_cbgd.BestFitAttr = &_aace
			continue
		}
		if _efbgg.Name.Local == "c\u0075\u0073\u0074\u006f\u006d\u0057\u0069\u0064\u0074\u0068" {
			_efffg, _bgaec := _f.ParseBool(_efbgg.Value)
			if _bgaec != nil {
				return _bgaec
			}
			_cbgd.CustomWidthAttr = &_efffg
			continue
		}
		if _efbgg.Name.Local == "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063" {
			_dfda, _dbcf := _f.ParseBool(_efbgg.Value)
			if _dbcf != nil {
				return _dbcf
			}
			_cbgd.PhoneticAttr = &_dfda
			continue
		}
		if _efbgg.Name.Local == "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c" {
			_cgba, _bafg := _f.ParseUint(_efbgg.Value, 10, 8)
			if _bafg != nil {
				return _bafg
			}
			_egdgg := uint8(_cgba)
			_cbgd.OutlineLevelAttr = &_egdgg
			continue
		}
		if _efbgg.Name.Local == "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d" {
			_cdga, _ebeae := _f.ParseBool(_efbgg.Value)
			if _ebeae != nil {
				return _ebeae
			}
			_cbgd.CollapsedAttr = &_cdga
			continue
		}
	}
	for {
		_dbgd, _aege := d.Token()
		if _aege != nil {
			return _fc.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0043o\u006c\u003a\u0020\u0025\u0073", _aege)
		}
		if _fcab, _fcgfd := _dbgd.(_a.EndElement); _fcgfd && _fcab.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Schema and its children, prefixing error messages with path
func (_cfbbac *CT_Schema) ValidateWithPath(path string) error { return nil }

type CT_PivotTableStyle struct {

	// Table Style Name
	NameAttr *string

	// Show Row Header Formatting
	ShowRowHeadersAttr *bool

	// Show Table Style Column Header Formatting
	ShowColHeadersAttr *bool

	// Show Row Stripes
	ShowRowStripesAttr *bool

	// Show Column Stripes
	ShowColStripesAttr *bool

	// Show Last Column
	ShowLastColumnAttr *bool
}

func (_bafeb *CT_QueryTableDeletedFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bafeb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bafeb.CountAttr)})
	}
	e.EncodeToken(start)
	_fagbc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ad\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}}
	for _, _fdcff := range _bafeb.DeletedField {
		e.EncodeElement(_fdcff, _fagbc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalSheetName struct {

	// Sheet Name Value
	ValAttr *string
}

func (_cbdge *CT_SheetView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bcbfg := range start.Attr {
		if _bcbfg.Name.Local == "\u0076\u0069\u0065\u0077" {
			_cbdge.ViewAttr.UnmarshalXMLAttr(_bcbfg)
			continue
		}
		if _bcbfg.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_ecggeg, _cgfgb := _bcbfg.Value, error(nil)
			if _cgfgb != nil {
				return _cgfgb
			}
			_cbdge.TopLeftCellAttr = &_ecggeg
			continue
		}
		if _bcbfg.Name.Local == "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_fafgf, _acgfea := _f.ParseBool(_bcbfg.Value)
			if _acgfea != nil {
				return _acgfea
			}
			_cbdge.ShowFormulasAttr = &_fafgf
			continue
		}
		if _bcbfg.Name.Local == "\u0063o\u006c\u006f\u0072\u0049\u0064" {
			_eeafad, _gebdb := _f.ParseUint(_bcbfg.Value, 10, 32)
			if _gebdb != nil {
				return _gebdb
			}
			_eccee := uint32(_eeafad)
			_cbdge.ColorIdAttr = &_eccee
			continue
		}
		if _bcbfg.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_dgega, _gcge := _f.ParseBool(_bcbfg.Value)
			if _gcge != nil {
				return _gcge
			}
			_cbdge.ShowRowColHeadersAttr = &_dgega
			continue
		}
		if _bcbfg.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce" {
			_cecg, _decgcb := _f.ParseUint(_bcbfg.Value, 10, 32)
			if _decgcb != nil {
				return _decgcb
			}
			_gccgb := uint32(_cecg)
			_cbdge.ZoomScaleAttr = &_gccgb
			continue
		}
		if _bcbfg.Name.Local == "r\u0069\u0067\u0068\u0074\u0054\u006f\u004c\u0065\u0066\u0074" {
			_dcfge, _agcbb := _f.ParseBool(_bcbfg.Value)
			if _agcbb != nil {
				return _agcbb
			}
			_cbdge.RightToLeftAttr = &_dcfge
			continue
		}
		if _bcbfg.Name.Local == "\u007ao\u006fm\u0053\u0063\u0061\u006c\u0065\u004e\u006f\u0072\u006d\u0061\u006c" {
			_gabdb, _bdceg := _f.ParseUint(_bcbfg.Value, 10, 32)
			if _bdceg != nil {
				return _bdceg
			}
			_fdcfgb := uint32(_gabdb)
			_cbdge.ZoomScaleNormalAttr = &_fdcfgb
			continue
		}
		if _bcbfg.Name.Local == "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r" {
			_gbgedb, _cffcac := _f.ParseBool(_bcbfg.Value)
			if _cffcac != nil {
				return _cffcac
			}
			_cbdge.ShowRulerAttr = &_gbgedb
			continue
		}
		if _bcbfg.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006c\u0065\u0053\u0068\u0065\u0065t\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077" {
			_faege, _fcaef := _f.ParseUint(_bcbfg.Value, 10, 32)
			if _fcaef != nil {
				return _fcaef
			}
			_gegbfb := uint32(_faege)
			_cbdge.ZoomScaleSheetLayoutViewAttr = &_gegbfb
			continue
		}
		if _bcbfg.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064" {
			_ebeaed, _gfadcd := _f.ParseUint(_bcbfg.Value, 10, 32)
			if _gfadcd != nil {
				return _gfadcd
			}
			_cbdge.WorkbookViewIdAttr = uint32(_ebeaed)
			continue
		}
		if _bcbfg.Name.Local == "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_accab, _fgegd := _f.ParseBool(_bcbfg.Value)
			if _fgegd != nil {
				return _fgegd
			}
			_cbdge.TabSelectedAttr = &_accab
			continue
		}
		if _bcbfg.Name.Local == "\u007a\u006f\u006fmS\u0063\u0061\u006c\u0065\u0050\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077" {
			_gffda, _bgcgb := _f.ParseUint(_bcbfg.Value, 10, 32)
			if _bgcgb != nil {
				return _bgcgb
			}
			_cbfbe := uint32(_gffda)
			_cbdge.ZoomScalePageLayoutViewAttr = &_cbfbe
			continue
		}
		if _bcbfg.Name.Local == "\u0073h\u006f\u0077\u005a\u0065\u0072\u006fs" {
			_fbgce, _effab := _f.ParseBool(_bcbfg.Value)
			if _effab != nil {
				return _effab
			}
			_cbdge.ShowZerosAttr = &_fbgce
			continue
		}
		if _bcbfg.Name.Local == "\u0077\u0069n\u0064\u006f\u0077P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e" {
			_bdbfca, _ggbdc := _f.ParseBool(_bcbfg.Value)
			if _ggbdc != nil {
				return _ggbdc
			}
			_cbdge.WindowProtectionAttr = &_bdbfca
			continue
		}
		if _bcbfg.Name.Local == "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073" {
			_dbccca, _ebgce := _f.ParseBool(_bcbfg.Value)
			if _ebgce != nil {
				return _ebgce
			}
			_cbdge.ShowOutlineSymbolsAttr = &_dbccca
			continue
		}
		if _bcbfg.Name.Local == "\u0073\u0068\u006f\u0077\u0057\u0068\u0069\u0074\u0065S\u0070\u0061\u0063\u0065" {
			_gfdga, _fbdfe := _f.ParseBool(_bcbfg.Value)
			if _fbdfe != nil {
				return _fbdfe
			}
			_cbdge.ShowWhiteSpaceAttr = &_gfdga
			continue
		}
		if _bcbfg.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073" {
			_gbgaf, _cfgeea := _f.ParseBool(_bcbfg.Value)
			if _cfgeea != nil {
				return _cfgeea
			}
			_cbdge.ShowGridLinesAttr = &_gbgaf
			continue
		}
		if _bcbfg.Name.Local == "\u0064\u0065f\u0061\u0075\u006ct\u0047\u0072\u0069\u0064\u0043\u006f\u006c\u006f\u0072" {
			_ffcdb, _eeaga := _f.ParseBool(_bcbfg.Value)
			if _eeaga != nil {
				return _eeaga
			}
			_cbdge.DefaultGridColorAttr = &_ffcdb
			continue
		}
	}
_dddcbd:
	for {
		_abdgce, _eeaad := d.Token()
		if _eeaad != nil {
			return _eeaad
		}
		switch _aecbb := _abdgce.(type) {
		case _a.StartElement:
			switch _aecbb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}:
				_cbdge.Pane = NewCT_Pane()
				if _ebadgd := d.DecodeElement(_cbdge.Pane, &_aecbb); _ebadgd != nil {
					return _ebadgd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}:
				_fddfbg := NewCT_Selection()
				if _edaga := d.DecodeElement(_fddfbg, &_aecbb); _edaga != nil {
					return _edaga
				}
				_cbdge.Selection = append(_cbdge.Selection, _fddfbg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}:
				_cbab := NewCT_PivotSelection()
				if _agafef := d.DecodeElement(_cbab, &_aecbb); _agafef != nil {
					return _agafef
				}
				_cbdge.PivotSelection = append(_cbdge.PivotSelection, _cbab)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbdge.ExtLst = NewCT_ExtensionList()
				if _bacdb := d.DecodeElement(_cbdge.ExtLst, &_aecbb); _bacdb != nil {
					return _bacdb
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _aecbb.Name)
				if _dedbef := d.Skip(); _dedbef != nil {
					return _dedbef
				}
			}
		case _a.EndElement:
			break _dddcbd
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_FilterOperatorUnset              ST_FilterOperator = 0
	ST_FilterOperatorEqual              ST_FilterOperator = 1
	ST_FilterOperatorLessThan           ST_FilterOperator = 2
	ST_FilterOperatorLessThanOrEqual    ST_FilterOperator = 3
	ST_FilterOperatorNotEqual           ST_FilterOperator = 4
	ST_FilterOperatorGreaterThanOrEqual ST_FilterOperator = 5
	ST_FilterOperatorGreaterThan        ST_FilterOperator = 6
)

func (_cabdba *CT_PivotCacheDefinition) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cabdba.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_cabdba.IdAttr)})
	}
	if _cabdba.InvalidAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069n\u0076\u0061\u006c\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cabdba.InvalidAttr))})
	}
	if _cabdba.SaveDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cabdba.SaveDataAttr))})
	}
	if _cabdba.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cabdba.RefreshOnLoadAttr))})
	}
	if _cabdba.OptimizeMemoryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cabdba.OptimizeMemoryAttr))})
	}
	if _cabdba.EnableRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cabdba.EnableRefreshAttr))})
	}
	if _cabdba.RefreshedByAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079"}, Value: _fc.Sprintf("\u0025\u0076", *_cabdba.RefreshedByAttr)})
	}
	if _cabdba.RefreshedDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_cabdba.RefreshedDateAttr)})
	}
	if _cabdba.RefreshedDateIsoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_cabdba.RefreshedDateIsoAttr)})
	}
	if _cabdba.BackgroundQueryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cabdba.BackgroundQueryAttr))})
	}
	if _cabdba.MissingItemsLimitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cabdba.MissingItemsLimitAttr)})
	}
	if _cabdba.CreatedVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_cabdba.CreatedVersionAttr)})
	}
	if _cabdba.RefreshedVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_cabdba.RefreshedVersionAttr)})
	}
	if _cabdba.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_cabdba.MinRefreshableVersionAttr)})
	}
	if _cabdba.RecordCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cabdba.RecordCountAttr)})
	}
	if _cabdba.UpgradeOnRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cabdba.UpgradeOnRefreshAttr))})
	}
	if _cabdba.TupleCacheAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cabdba.TupleCacheAttr))})
	}
	if _cabdba.SupportSubqueryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cabdba.SupportSubqueryAttr))})
	}
	if _cabdba.SupportAdvancedDrillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cabdba.SupportAdvancedDrillAttr))})
	}
	e.EncodeToken(start)
	_gbbgac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065"}}
	e.EncodeElement(_cabdba.CacheSource, _gbbgac)
	_eacaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073"}}
	e.EncodeElement(_cabdba.CacheFields, _eacaf)
	if _cabdba.CacheHierarchies != nil {
		_cbggc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}}
		e.EncodeElement(_cabdba.CacheHierarchies, _cbggc)
	}
	if _cabdba.Kpis != nil {
		_gffc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u006b\u0070\u0069\u0073"}}
		e.EncodeElement(_cabdba.Kpis, _gffc)
	}
	if _cabdba.TupleCache != nil {
		_fbgfg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}}
		e.EncodeElement(_cabdba.TupleCache, _fbgfg)
	}
	if _cabdba.CalculatedItems != nil {
		_eegcb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ac\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_cabdba.CalculatedItems, _eegcb)
	}
	if _cabdba.CalculatedMembers != nil {
		_ecbae := _a.StartElement{Name: _a.Name{Local: "m\u0061:\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073"}}
		e.EncodeElement(_cabdba.CalculatedMembers, _ecbae)
	}
	if _cabdba.Dimensions != nil {
		_dddcab := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_cabdba.Dimensions, _dddcab)
	}
	if _cabdba.MeasureGroups != nil {
		_abdegg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_cabdba.MeasureGroups, _abdegg)
	}
	if _cabdba.Maps != nil {
		_deagf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u006d\u0061\u0070\u0073"}}
		e.EncodeElement(_cabdba.Maps, _deagf)
	}
	if _cabdba.ExtLst != nil {
		_caddc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cabdba.ExtLst, _caddc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cefg *CT_CacheField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _deg := range start.Attr {
		if _deg.Name.Local == "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y" {
			_ccf, _dbcd := _f.ParseInt(_deg.Value, 10, 32)
			if _dbcd != nil {
				return _dbcd
			}
			_dad := int32(_ccf)
			_cefg.HierarchyAttr = &_dad
			continue
		}
		if _deg.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_ecd, _gdbc := _f.ParseUint(_deg.Value, 10, 32)
			if _gdbc != nil {
				return _gdbc
			}
			_ceaf := uint32(_ecd)
			_cefg.LevelAttr = &_ceaf
			continue
		}
		if _deg.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_bccb, _gacg := _deg.Value, error(nil)
			if _gacg != nil {
				return _gacg
			}
			_cefg.CaptionAttr = &_bccb
			continue
		}
		if _deg.Name.Local == "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0046\u0069\u0065\u006c\u0064" {
			_ecf, _gec := _f.ParseBool(_deg.Value)
			if _gec != nil {
				return _gec
			}
			_cefg.DatabaseFieldAttr = &_ecf
			continue
		}
		if _deg.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064" {
			_cede, _baa := _f.ParseBool(_deg.Value)
			if _baa != nil {
				return _baa
			}
			_cefg.ServerFieldAttr = &_cede
			continue
		}
		if _deg.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_cefc, _agc := _f.ParseUint(_deg.Value, 10, 32)
			if _agc != nil {
				return _agc
			}
			_dgab := uint32(_cefc)
			_cefg.NumFmtIdAttr = &_dgab
			continue
		}
		if _deg.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_fefg, _fbeg := _deg.Value, error(nil)
			if _fbeg != nil {
				return _fbeg
			}
			_cefg.FormulaAttr = &_fefg
			continue
		}
		if _deg.Name.Local == "\u0073q\u006c\u0054\u0079\u0070\u0065" {
			_cad, _eed := _f.ParseInt(_deg.Value, 10, 32)
			if _eed != nil {
				return _eed
			}
			_gdeg := int32(_cad)
			_cefg.SqlTypeAttr = &_gdeg
			continue
		}
		if _deg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_edea, _cfaa := _deg.Value, error(nil)
			if _cfaa != nil {
				return _cfaa
			}
			_cefg.NameAttr = _edea
			continue
		}
		if _deg.Name.Local == "\u0070\u0072\u006fp\u0065\u0072\u0074\u0079\u004e\u0061\u006d\u0065" {
			_bee, _dac := _deg.Value, error(nil)
			if _dac != nil {
				return _dac
			}
			_cefg.PropertyNameAttr = &_bee
			continue
		}
		if _deg.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004c\u0069\u0073\u0074" {
			_fba, _agdd := _f.ParseBool(_deg.Value)
			if _agdd != nil {
				return _agdd
			}
			_cefg.UniqueListAttr = &_fba
			continue
		}
		if _deg.Name.Local == "\u006d\u0061\u0070p\u0069\u006e\u0067\u0043\u006f\u0075\u006e\u0074" {
			_fab, _addf := _f.ParseUint(_deg.Value, 10, 32)
			if _addf != nil {
				return _addf
			}
			_ccce := uint32(_fab)
			_cefg.MappingCountAttr = &_ccce
			continue
		}
		if _deg.Name.Local == "\u006d\u0065\u006d\u0062er\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0046\u0069\u0065\u006c\u0064" {
			_dbb, _egd := _f.ParseBool(_deg.Value)
			if _egd != nil {
				return _egd
			}
			_cefg.MemberPropertyFieldAttr = &_dbb
			continue
		}
	}
_afee:
	for {
		_cbed, _gbd := d.Token()
		if _gbd != nil {
			return _gbd
		}
		switch _cbd := _cbed.(type) {
		case _a.StartElement:
			switch _cbd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_cefg.SharedItems = NewCT_SharedItems()
				if _gaab := d.DecodeElement(_cefg.SharedItems, &_cbd); _gaab != nil {
					return _gaab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}:
				_cefg.FieldGroup = NewCT_FieldGroup()
				if _aaad := d.DecodeElement(_cefg.FieldGroup, &_cbd); _aaad != nil {
					return _aaad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u004da\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u004da\u0070"}:
				_aabe := NewCT_X()
				if _cadf := d.DecodeElement(_aabe, &_cbd); _cadf != nil {
					return _cadf
				}
				_cefg.MpMap = append(_cefg.MpMap, _aabe)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cefg.ExtLst = NewCT_ExtensionList()
				if _geb := d.DecodeElement(_cefg.ExtLst, &_cbd); _geb != nil {
					return _geb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043a\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064 \u0025\u0076", _cbd.Name)
				if _bccgd := d.Skip(); _bccgd != nil {
					return _bccgd
				}
			}
		case _a.EndElement:
			break _afee
		case _a.CharData:
		}
	}
	return nil
}
func (_defc *CT_ChartFormats) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _defc.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_defc.CountAttr)})
	}
	e.EncodeToken(start)
	_ebac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074"}}
	for _, _cec := range _defc.ChartFormat {
		e.EncodeElement(_cec, _ebac)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FontSize and its children, prefixing error messages with path
func (_gbcbf *CT_FontSize) ValidateWithPath(path string) error { return nil }
func NewSst() *Sst                                             { _bcbeeg := &Sst{}; _bcbeeg.CT_Sst = *NewCT_Sst(); return _bcbeeg }
func (_bbbgba ST_GrowShrinkType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bbbgba.String(), start)
}

// ValidateWithPath validates the CT_Table and its children, prefixing error messages with path
func (_cdfdd *CT_Table) ValidateWithPath(path string) error {
	if _bbefa := _cdfdd.TableTypeAttr.ValidateWithPath(path + "\u002f\u0054\u0061\u0062\u006c\u0065\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _bbefa != nil {
		return _bbefa
	}
	if _cdfdd.AutoFilter != nil {
		if _efaff := _cdfdd.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _efaff != nil {
			return _efaff
		}
	}
	if _cdfdd.SortState != nil {
		if _gfaac := _cdfdd.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _gfaac != nil {
			return _gfaac
		}
	}
	if _gfbcd := _cdfdd.TableColumns.ValidateWithPath(path + "\u002f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"); _gfbcd != nil {
		return _gfbcd
	}
	if _cdfdd.TableStyleInfo != nil {
		if _cafead := _cdfdd.TableStyleInfo.ValidateWithPath(path + "\u002fT\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"); _cafead != nil {
			return _cafead
		}
	}
	if _cdfdd.ExtLst != nil {
		if _baedc := _cdfdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _baedc != nil {
			return _baedc
		}
	}
	return nil
}

// Validate validates the CT_PCDSCPage and its children
func (_cgacc *CT_PCDSCPage) Validate() error {
	return _cgacc.ValidateWithPath("\u0043\u0054\u005fP\u0043\u0044\u0053\u0043\u0050\u0061\u0067\u0065")
}

type CT_WebPublishItems struct {

	// Web Publishing Items Count
	CountAttr *uint32

	// Web Publishing Item
	WebPublishItem []*CT_WebPublishItem
}

// ValidateWithPath validates the CT_FontFamily and its children, prefixing error messages with path
func (_gfef *CT_FontFamily) ValidateWithPath(path string) error {
	if _gfef.ValAttr < 0 {
		return _fc.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _gfef.ValAttr)
	}
	if _gfef.ValAttr > 14 {
		return _fc.Errorf("\u0025\u0073/m\u002e\u0056\u0061l\u0041\u0074\u0074\u0072 mu\u0073t \u0062\u0065\u0020\u003c\u003d\u0020\u00314 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _gfef.ValAttr)
	}
	return nil
}
func (_fece *CT_Fills) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fece.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fece.CountAttr)})
	}
	e.EncodeToken(start)
	if _fece.Fill != nil {
		_bdca := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u006c"}}
		for _, _edeb := range _fece.Fill {
			e.EncodeElement(_edeb, _bdca)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ChartFormat and its children, prefixing error messages with path
func (_ebfe *CT_ChartFormat) ValidateWithPath(path string) error {
	if _cdf := _ebfe.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _cdf != nil {
		return _cdf
	}
	return nil
}

const (
	ST_BorderStyleUnset            ST_BorderStyle = 0
	ST_BorderStyleNone             ST_BorderStyle = 1
	ST_BorderStyleThin             ST_BorderStyle = 2
	ST_BorderStyleMedium           ST_BorderStyle = 3
	ST_BorderStyleDashed           ST_BorderStyle = 4
	ST_BorderStyleDotted           ST_BorderStyle = 5
	ST_BorderStyleThick            ST_BorderStyle = 6
	ST_BorderStyleDouble           ST_BorderStyle = 7
	ST_BorderStyleHair             ST_BorderStyle = 8
	ST_BorderStyleMediumDashed     ST_BorderStyle = 9
	ST_BorderStyleDashDot          ST_BorderStyle = 10
	ST_BorderStyleMediumDashDot    ST_BorderStyle = 11
	ST_BorderStyleDashDotDot       ST_BorderStyle = 12
	ST_BorderStyleMediumDashDotDot ST_BorderStyle = 13
	ST_BorderStyleSlantDashDot     ST_BorderStyle = 14
)

type CT_ExternalSheetData struct {

	// Sheet Id
	SheetIdAttr uint32

	// Last Refresh Resulted in Error
	RefreshErrorAttr *bool

	// Row
	Row []*CT_ExternalRow
}

func (_cgced *CT_Dialogsheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_edcg:
	for {
		_geae, _bdfcd := d.Token()
		if _bdfcd != nil {
			return _bdfcd
		}
		switch _fcegf := _geae.(type) {
		case _a.StartElement:
			switch _fcegf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_cgced.SheetPr = NewCT_SheetPr()
				if _bedgc := d.DecodeElement(_cgced.SheetPr, &_fcegf); _bedgc != nil {
					return _bedgc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_cgced.SheetViews = NewCT_SheetViews()
				if _cgafb := d.DecodeElement(_cgced.SheetViews, &_fcegf); _cgafb != nil {
					return _cgafb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_cgced.SheetFormatPr = NewCT_SheetFormatPr()
				if _adcg := d.DecodeElement(_cgced.SheetFormatPr, &_fcegf); _adcg != nil {
					return _adcg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_cgced.SheetProtection = NewCT_SheetProtection()
				if _adgbe := d.DecodeElement(_cgced.SheetProtection, &_fcegf); _adgbe != nil {
					return _adgbe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_cgced.CustomSheetViews = NewCT_CustomSheetViews()
				if _fbdb := d.DecodeElement(_cgced.CustomSheetViews, &_fcegf); _fbdb != nil {
					return _fbdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_cgced.PrintOptions = NewCT_PrintOptions()
				if _egdbg := d.DecodeElement(_cgced.PrintOptions, &_fcegf); _egdbg != nil {
					return _egdbg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_cgced.PageMargins = NewCT_PageMargins()
				if _caef := d.DecodeElement(_cgced.PageMargins, &_fcegf); _caef != nil {
					return _caef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_cgced.PageSetup = NewCT_PageSetup()
				if _cacge := d.DecodeElement(_cgced.PageSetup, &_fcegf); _cacge != nil {
					return _cacge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_cgced.HeaderFooter = NewCT_HeaderFooter()
				if _aggcd := d.DecodeElement(_cgced.HeaderFooter, &_fcegf); _aggcd != nil {
					return _aggcd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_cgced.Drawing = NewCT_Drawing()
				if _bggc := d.DecodeElement(_cgced.Drawing, &_fcegf); _bggc != nil {
					return _bggc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_cgced.LegacyDrawing = NewCT_LegacyDrawing()
				if _afca := d.DecodeElement(_cgced.LegacyDrawing, &_fcegf); _afca != nil {
					return _afca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_cgced.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _bfbgg := d.DecodeElement(_cgced.LegacyDrawingHF, &_fcegf); _bfbgg != nil {
					return _bfbgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_cgced.DrawingHF = NewCT_DrawingHF()
				if _gaaga := d.DecodeElement(_cgced.DrawingHF, &_fcegf); _gaaga != nil {
					return _gaaga
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_cgced.OleObjects = NewCT_OleObjects()
				if _fbcag := d.DecodeElement(_cgced.OleObjects, &_fcegf); _fbcag != nil {
					return _fbcag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_cgced.Controls = NewCT_Controls()
				if _bdge := d.DecodeElement(_cgced.Controls, &_fcegf); _bdge != nil {
					return _bdge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgced.ExtLst = NewCT_ExtensionList()
				if _caad := d.DecodeElement(_cgced.ExtLst, &_fcegf); _caad != nil {
					return _caad
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067\u0073h\u0065e\u0074\u0020\u0025\u0076", _fcegf.Name)
				if _cdece := d.Skip(); _cdece != nil {
					return _cdece
				}
			}
		case _a.EndElement:
			break _edcg
		case _a.CharData:
		}
	}
	return nil
}
func (_bdfdga *ST_GroupBy) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cffadf, _fccbg := d.Token()
	if _fccbg != nil {
		return _fccbg
	}
	if _ffgdf, _fcgdc := _cffadf.(_a.EndElement); _fcgdc && _ffgdf.Name == start.Name {
		*_bdfdga = 1
		return nil
	}
	if _ageabg, _bgbec := _cffadf.(_a.CharData); !_bgbec {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cffadf)
	} else {
		switch string(_ageabg) {
		case "":
			*_bdfdga = 0
		case "\u0072\u0061\u006eg\u0065":
			*_bdfdga = 1
		case "\u0073e\u0063\u006f\u006e\u0064\u0073":
			*_bdfdga = 2
		case "\u006di\u006e\u0075\u0074\u0065\u0073":
			*_bdfdga = 3
		case "\u0068\u006f\u0075r\u0073":
			*_bdfdga = 4
		case "\u0064\u0061\u0079\u0073":
			*_bdfdga = 5
		case "\u006d\u006f\u006e\u0074\u0068\u0073":
			*_bdfdga = 6
		case "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073":
			*_bdfdga = 7
		case "\u0079\u0065\u0061r\u0073":
			*_bdfdga = 8
		}
	}
	_cffadf, _fccbg = d.Token()
	if _fccbg != nil {
		return _fccbg
	}
	if _aacefe, _eedfbc := _cffadf.(_a.EndElement); _eedfbc && _aacefe.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cffadf)
}
func NewCT_PivotArea() *CT_PivotArea { _fede := &CT_PivotArea{}; return _fede }

// Validate validates the CT_FileRecoveryPr and its children
func (_bbgdb *CT_FileRecoveryPr) Validate() error {
	return _bbgdb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072")
}
func (_abgg *CT_Col) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _abgg.MinAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078"}, Value: _fc.Sprintf("\u0025\u0076", _abgg.MaxAttr)})
	if _abgg.WidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u0069\u0064t\u0068"}, Value: _fc.Sprintf("\u0025\u0076", *_abgg.WidthAttr)})
	}
	if _abgg.StyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0079l\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_abgg.StyleAttr)})
	}
	if _abgg.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_abgg.HiddenAttr))})
	}
	if _abgg.BestFitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062e\u0073\u0074\u0046\u0069\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_abgg.BestFitAttr))})
	}
	if _abgg.CustomWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u0075\u0073\u0074\u006f\u006d\u0057\u0069\u0064\u0074\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_abgg.CustomWidthAttr))})
	}
	if _abgg.PhoneticAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_abgg.PhoneticAttr))})
	}
	if _abgg.OutlineLevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_abgg.OutlineLevelAttr)})
	}
	if _abgg.CollapsedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_abgg.CollapsedAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_WebPublishItems and its children
func (_aaadce *CT_WebPublishItems) Validate() error {
	return _aaadce.ValidateWithPath("\u0043T\u005fW\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073")
}

type CT_Borders struct {

	// Border Count
	CountAttr *uint32

	// Border
	Border []*CT_Border
}
type CT_RevisionComment struct {

	// Sheet Id
	SheetIdAttr uint32

	// Cell
	CellAttr string

	// GUID
	GuidAttr string

	// User Action
	ActionAttr ST_RevisionAction

	// Always Show Comment
	AlwaysShowAttr *bool

	// Old Comment
	OldAttr *bool

	// Comment In Hidden Row
	HiddenRowAttr *bool

	// Hidden Column
	HiddenColumnAttr *bool

	// Author
	AuthorAttr string

	// Original Comment Length
	OldLengthAttr *uint32

	// New Comment Length
	NewLengthAttr *uint32
}

// Validate validates the CT_RevisionComment and its children
func (_fbeec *CT_RevisionComment) Validate() error {
	return _fbeec.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0043o\u006d\u006d\u0065\u006e\u0074")
}

const (
	ST_CfTypeUnset             ST_CfType = 0
	ST_CfTypeExpression        ST_CfType = 1
	ST_CfTypeCellIs            ST_CfType = 2
	ST_CfTypeColorScale        ST_CfType = 3
	ST_CfTypeDataBar           ST_CfType = 4
	ST_CfTypeIconSet           ST_CfType = 5
	ST_CfTypeTop10             ST_CfType = 6
	ST_CfTypeUniqueValues      ST_CfType = 7
	ST_CfTypeDuplicateValues   ST_CfType = 8
	ST_CfTypeContainsText      ST_CfType = 9
	ST_CfTypeNotContainsText   ST_CfType = 10
	ST_CfTypeBeginsWith        ST_CfType = 11
	ST_CfTypeEndsWith          ST_CfType = 12
	ST_CfTypeContainsBlanks    ST_CfType = 13
	ST_CfTypeNotContainsBlanks ST_CfType = 14
	ST_CfTypeContainsErrors    ST_CfType = 15
	ST_CfTypeNotContainsErrors ST_CfType = 16
	ST_CfTypeTimePeriod        ST_CfType = 17
	ST_CfTypeAboveAverage      ST_CfType = 18
)

func (_cefbfc *ST_PhoneticAlignment) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cefbfc = 0
	case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
		*_cefbfc = 1
	case "\u006c\u0065\u0066\u0074":
		*_cefbfc = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_cefbfc = 3
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_cefbfc = 4
	}
	return nil
}
func NewCT_MeasureGroup() *CT_MeasureGroup { _aedb := &CT_MeasureGroup{}; return _aedb }
func (_bggbf ST_CfvoType) String() string {
	switch _bggbf {
	case 0:
		return ""
	case 1:
		return "\u006e\u0075\u006d"
	case 2:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 3:
		return "\u006d\u0061\u0078"
	case 4:
		return "\u006d\u0069\u006e"
	case 5:
		return "\u0066o\u0072\u006d\u0075\u006c\u0061"
	case 6:
		return "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065"
	}
	return ""
}
func (_cbebc *ST_DataValidationImeMode) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cbebc = 0
	case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
		*_cbebc = 1
	case "\u006f\u0066\u0066":
		*_cbebc = 2
	case "\u006f\u006e":
		*_cbebc = 3
	case "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064":
		*_cbebc = 4
	case "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
		*_cbebc = 5
	case "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
		*_cbebc = 6
	case "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
		*_cbebc = 7
	case "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a":
		*_cbebc = 8
	case "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a":
		*_cbebc = 9
	case "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c":
		*_cbebc = 10
	case "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c":
		*_cbebc = 11
	}
	return nil
}
func (_bcdce *CT_IntProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", _bcdce.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aabf *CT_CellStyle) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aabf.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_aabf.NameAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0066\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _aabf.XfIdAttr)})
	if _aabf.BuiltinIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062u\u0069\u006c\u0074\u0069\u006e\u0049d"}, Value: _fc.Sprintf("\u0025\u0076", *_aabf.BuiltinIdAttr)})
	}
	if _aabf.ILevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u004c\u0065\u0076\u0065\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_aabf.ILevelAttr)})
	}
	if _aabf.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aabf.HiddenAttr))})
	}
	if _aabf.CustomBuiltinAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0042\u0075\u0069\u006c\u0074\u0069\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aabf.CustomBuiltinAttr))})
	}
	e.EncodeToken(start)
	if _aabf.ExtLst != nil {
		_bbeaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aabf.ExtLst, _bbeaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ecdag *CT_PrintOptions) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ccdb := range start.Attr {
		if _ccdb.Name.Local == "\u0068o\u0072i\u007a\u006f\u006e\u0074\u0061l\u0043\u0065n\u0074\u0065\u0072\u0065\u0064" {
			_gabac, _geegbf := _f.ParseBool(_ccdb.Value)
			if _geegbf != nil {
				return _geegbf
			}
			_ecdag.HorizontalCenteredAttr = &_gabac
			continue
		}
		if _ccdb.Name.Local == "\u0076\u0065r\u0074\u0069\u0063a\u006c\u0043\u0065\u006e\u0074\u0065\u0072\u0065\u0064" {
			_bdcfc, _egbgc := _f.ParseBool(_ccdb.Value)
			if _egbgc != nil {
				return _egbgc
			}
			_ecdag.VerticalCenteredAttr = &_bdcfc
			continue
		}
		if _ccdb.Name.Local == "\u0068\u0065\u0061\u0064\u0069\u006e\u0067\u0073" {
			_ffdeac, _acdbb := _f.ParseBool(_ccdb.Value)
			if _acdbb != nil {
				return _acdbb
			}
			_ecdag.HeadingsAttr = &_ffdeac
			continue
		}
		if _ccdb.Name.Local == "\u0067r\u0069\u0064\u004c\u0069\u006e\u0065s" {
			_ggfdac, _gacggbg := _f.ParseBool(_ccdb.Value)
			if _gacggbg != nil {
				return _gacggbg
			}
			_ecdag.GridLinesAttr = &_ggfdac
			continue
		}
		if _ccdb.Name.Local == "\u0067\u0072\u0069d\u004c\u0069\u006e\u0065\u0073\u0053\u0065\u0074" {
			_bdgff, _gccc := _f.ParseBool(_ccdb.Value)
			if _gccc != nil {
				return _gccc
			}
			_ecdag.GridLinesSetAttr = &_bdgff
			continue
		}
	}
	for {
		_fdgcg, _begef := d.Token()
		if _begef != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0050\u0072\u0069\u006e\u0074\u004fp\u0074\u0069\u006fn\u0073:\u0020\u0025\u0073", _begef)
		}
		if _fedg, _babea := _fdgcg.(_a.EndElement); _babea && _fedg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_TableStyles() *CT_TableStyles { _dafga := &CT_TableStyles{}; return _dafga }
func NewCT_Rst() *CT_Rst                 { _dddad := &CT_Rst{}; return _dddad }

// ValidateWithPath validates the CT_CalcPr and its children, prefixing error messages with path
func (_ggeb *CT_CalcPr) ValidateWithPath(path string) error {
	if _ebbe := _ggeb.CalcModeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0063\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _ebbe != nil {
		return _ebbe
	}
	if _fceb := _ggeb.RefModeAttr.ValidateWithPath(path + "\u002f\u0052\u0065f\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _fceb != nil {
		return _fceb
	}
	return nil
}
func (_bccge *CT_Map) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0049\u0044"}, Value: _fc.Sprintf("\u0025\u0076", _bccge.IDAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _bccge.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "R\u006f\u006f\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", _bccge.RootElementAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0053\u0063\u0068\u0065\u006d\u0061\u0049\u0044"}, Value: _fc.Sprintf("\u0025\u0076", _bccge.SchemaIDAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0053\u0068\u006f\u0077\u0049\u006d\u0070\u006f\u0072\u0074\u0045\u0078\u0070\u006f\u0072t\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0045\u0072\u0072\u006f\u0072\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(_bccge.ShowImportExportValidationErrorsAttr))})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0041u\u0074\u006f\u0046\u0069\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(_bccge.AutoFitAttr))})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0041\u0070\u0070\u0065\u006e\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(_bccge.AppendAttr))})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "P\u0072e\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072t\u0041\u0046\u004c\u0061yo\u0075\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(_bccge.PreserveSortAFLayoutAttr))})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0046o\u0072\u006d\u0061\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(_bccge.PreserveFormatAttr))})
	e.EncodeToken(start)
	if _bccge.DataBinding != nil {
		_gbbga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067"}}
		e.EncodeElement(_bccge.DataBinding, _gbbga)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_RevisionInsertSheet() *CT_RevisionInsertSheet {
	_aceccd := &CT_RevisionInsertSheet{}
	return _aceccd
}
func NewCT_RevisionRowColumn() *CT_RevisionRowColumn {
	_fecee := &CT_RevisionRowColumn{}
	_fecee.ActionAttr = ST_rwColActionType(1)
	return _fecee
}

// Validate validates the CT_Controls and its children
func (_egdfg *CT_Controls) Validate() error {
	return _egdfg.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073")
}
func (_aeagbb *CT_VolTopicRef) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebddf := range start.Attr {
		if _ebddf.Name.Local == "\u0072" {
			_debfe, _dbebfb := _ebddf.Value, error(nil)
			if _dbebfb != nil {
				return _dbebfb
			}
			_aeagbb.RAttr = _debfe
			continue
		}
		if _ebddf.Name.Local == "\u0073" {
			_dcbba, _gecfdf := _f.ParseUint(_ebddf.Value, 10, 32)
			if _gecfdf != nil {
				return _gecfdf
			}
			_aeagbb.SAttr = uint32(_dcbba)
			continue
		}
	}
	for {
		_aacdbb, _fbgbaa := d.Token()
		if _fbgbaa != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fV\u006f\u006c\u0054\u006f\u0070\u0069\u0063\u0052\u0065\u0066:\u0020\u0025\u0073", _fbgbaa)
		}
		if _bdeagd, _ggdee := _aacdbb.(_a.EndElement); _ggdee && _bdeagd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Dxfs and its children, prefixing error messages with path
func (_cfgee *CT_Dxfs) ValidateWithPath(path string) error {
	for _fefab, _dbcab := range _cfgee.Dxf {
		if _cfgeb := _dbcab.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0044\u0078\u0066\u005b\u0025\u0064\u005d", path, _fefab)); _cfgeb != nil {
			return _cfgeb
		}
	}
	return nil
}
func NewCT_pivotTableDefinition() *CT_pivotTableDefinition {
	_ddcfee := &CT_pivotTableDefinition{}
	_ddcfee.Location = NewCT_Location()
	return _ddcfee
}
func (_fgbdd *ST_TimePeriod) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fgbdd = 0
	case "\u0074\u006f\u0064a\u0079":
		*_fgbdd = 1
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_fgbdd = 2
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_fgbdd = 3
	case "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s":
		*_fgbdd = 4
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_fgbdd = 5
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_fgbdd = 6
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_fgbdd = 7
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_fgbdd = 8
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_fgbdd = 9
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_fgbdd = 10
	}
	return nil
}

const (
	ST_CellTypeUnset     ST_CellType = 0
	ST_CellTypeB         ST_CellType = 1
	ST_CellTypeN         ST_CellType = 2
	ST_CellTypeE         ST_CellType = 3
	ST_CellTypeS         ST_CellType = 4
	ST_CellTypeStr       ST_CellType = 5
	ST_CellTypeInlineStr ST_CellType = 6
)

// ValidateWithPath validates the CT_CustomSheetView and its children, prefixing error messages with path
func (_fbfc *CT_CustomSheetView) ValidateWithPath(path string) error {
	if !_ae.ST_GuidPatternRe.MatchString(_fbfc.GuidAttr) {
		return _fc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ae.ST_GuidPatternRe, _fbfc.GuidAttr)
	}
	if _dbge := _fbfc.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _dbge != nil {
		return _dbge
	}
	if _gebc := _fbfc.ViewAttr.ValidateWithPath(path + "\u002fV\u0069\u0065\u0077\u0041\u0074\u0074r"); _gebc != nil {
		return _gebc
	}
	if _fbfc.Pane != nil {
		if _dgebf := _fbfc.Pane.ValidateWithPath(path + "\u002f\u0050\u0061n\u0065"); _dgebf != nil {
			return _dgebf
		}
	}
	if _fbfc.Selection != nil {
		if _bdbgb := _fbfc.Selection.ValidateWithPath(path + "\u002f\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _bdbgb != nil {
			return _bdbgb
		}
	}
	if _fbfc.RowBreaks != nil {
		if _ccfe := _fbfc.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _ccfe != nil {
			return _ccfe
		}
	}
	if _fbfc.ColBreaks != nil {
		if _eagcb := _fbfc.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _eagcb != nil {
			return _eagcb
		}
	}
	if _fbfc.PageMargins != nil {
		if _bgfba := _fbfc.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _bgfba != nil {
			return _bgfba
		}
	}
	if _fbfc.PrintOptions != nil {
		if _caabc := _fbfc.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _caabc != nil {
			return _caabc
		}
	}
	if _fbfc.PageSetup != nil {
		if _bgfee := _fbfc.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _bgfee != nil {
			return _bgfee
		}
	}
	if _fbfc.HeaderFooter != nil {
		if _ecfee := _fbfc.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _ecfee != nil {
			return _ecfee
		}
	}
	if _fbfc.AutoFilter != nil {
		if _efbb := _fbfc.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _efbb != nil {
			return _efbb
		}
	}
	if _fbfc.ExtLst != nil {
		if _cged := _fbfc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cged != nil {
			return _cged
		}
	}
	return nil
}

type CT_DataConsolidate struct {

	// Function Index
	FunctionAttr ST_DataConsolidateFunction

	// Use Starting Column Labels
	StartLabelsAttr *bool

	// Starting Column Labels
	LeftLabelsAttr *bool

	// Labels In Top Row
	TopLabelsAttr *bool

	// Link
	LinkAttr *bool

	// Data Consolidation References
	DataRefs *CT_DataRefs
}
type CT_PageSetUpPr struct {

	// Show Auto Page Breaks
	AutoPageBreaksAttr *bool

	// Fit To Page
	FitToPageAttr *bool
}

func (_egecb *CT_PageItem) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _egecb.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_WebPr and its children, prefixing error messages with path
func (_egdbb *CT_WebPr) ValidateWithPath(path string) error {
	if _gcdcff := _egdbb.HtmlFormatAttr.ValidateWithPath(path + "\u002fH\u0074m\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0041\u0074\u0074\u0072"); _gcdcff != nil {
		return _gcdcff
	}
	if _egdbb.Tables != nil {
		if _beafg := _egdbb.Tables.ValidateWithPath(path + "\u002fT\u0061\u0062\u006c\u0065\u0073"); _beafg != nil {
			return _beafg
		}
	}
	return nil
}
func (_bcfcg *CT_TableFormula) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0072\u0072a\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(_bcfcg.ArrayAttr))})
	e.EncodeElement(_bcfcg.Content, start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DataBar and its children
func (_eecgf *CT_DataBar) Validate() error {
	return _eecgf.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0061\u0072")
}
func (_cfbcb *CT_SheetProtection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dgbgc := range start.Attr {
		if _dgbgc.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0052\u006f\u0077\u0073" {
			_dbfbfg, _gdbbgc := _f.ParseBool(_dgbgc.Value)
			if _gdbbgc != nil {
				return _gdbbgc
			}
			_cfbcb.FormatRowsAttr = &_dbfbfg
			continue
		}
		if _dgbgc.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_dgbdb, _bbeee := _f.ParseBool(_dgbgc.Value)
			if _bbeee != nil {
				return _bbeee
			}
			_cfbcb.InsertColumnsAttr = &_dgbdb
			continue
		}
		if _dgbgc.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_accbcg, _effbba := _dgbgc.Value, error(nil)
			if _effbba != nil {
				return _effbba
			}
			_cfbcb.AlgorithmNameAttr = &_accbcg
			continue
		}
		if _dgbgc.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077\u0073" {
			_ccdfbe, _bfgccb := _f.ParseBool(_dgbgc.Value)
			if _bfgccb != nil {
				return _bfgccb
			}
			_cfbcb.InsertRowsAttr = &_ccdfbe
			continue
		}
		if _dgbgc.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_dgaec, _geacf := _dgbgc.Value, error(nil)
			if _geacf != nil {
				return _geacf
			}
			_cfbcb.SaltValueAttr = &_dgaec
			continue
		}
		if _dgbgc.Name.Local == "\u0069\u006es\u0065\u0072\u0074H\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073" {
			_afffaa, _fccbfb := _f.ParseBool(_dgbgc.Value)
			if _fccbfb != nil {
				return _fccbfb
			}
			_cfbcb.InsertHyperlinksAttr = &_afffaa
			continue
		}
		if _dgbgc.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_bdbaea, _bdadb := _f.ParseBool(_dgbgc.Value)
			if _bdadb != nil {
				return _bdadb
			}
			_cfbcb.SheetAttr = &_bdbaea
			continue
		}
		if _dgbgc.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_fgebc, _ffegc := _f.ParseBool(_dgbgc.Value)
			if _ffegc != nil {
				return _ffegc
			}
			_cfbcb.DeleteColumnsAttr = &_fgebc
			continue
		}
		if _dgbgc.Name.Local == "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs" {
			_cdegf, _cgdeg := _f.ParseBool(_dgbgc.Value)
			if _cgdeg != nil {
				return _cgdeg
			}
			_cfbcb.ScenariosAttr = &_cdegf
			continue
		}
		if _dgbgc.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_feab, _ccbdaef := _f.ParseBool(_dgbgc.Value)
			if _ccbdaef != nil {
				return _ccbdaef
			}
			_cfbcb.FormatColumnsAttr = &_feab
			continue
		}
		if _dgbgc.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_eafba, _bbgeaf := _dgbgc.Value, error(nil)
			if _bbgeaf != nil {
				return _bbgeaf
			}
			_cfbcb.PasswordAttr = &_eafba
			continue
		}
		if _dgbgc.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_gbcfe, _dbegf := _dgbgc.Value, error(nil)
			if _dbegf != nil {
				return _dbegf
			}
			_cfbcb.HashValueAttr = &_gbcfe
			continue
		}
		if _dgbgc.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_cagga, _fbgac := _f.ParseUint(_dgbgc.Value, 10, 32)
			if _fbgac != nil {
				return _fbgac
			}
			_fegfb := uint32(_cagga)
			_cfbcb.SpinCountAttr = &_fegfb
			continue
		}
		if _dgbgc.Name.Local == "\u006fb\u006a\u0065\u0063\u0074\u0073" {
			_eaead, _dadfc := _f.ParseBool(_dgbgc.Value)
			if _dadfc != nil {
				return _dadfc
			}
			_cfbcb.ObjectsAttr = &_eaead
			continue
		}
		if _dgbgc.Name.Local == "f\u006f\u0072\u006d\u0061\u0074\u0043\u0065\u006c\u006c\u0073" {
			_badcf, _cgfa := _f.ParseBool(_dgbgc.Value)
			if _cgfa != nil {
				return _cgfa
			}
			_cfbcb.FormatCellsAttr = &_badcf
			continue
		}
		if _dgbgc.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f\u0077\u0073" {
			_cdfgd, _gdfab := _f.ParseBool(_dgbgc.Value)
			if _gdfab != nil {
				return _gdfab
			}
			_cfbcb.DeleteRowsAttr = &_cdfgd
			continue
		}
		if _dgbgc.Name.Local == "\u0073\u0065\u006c\u0065\u0063\u0074\u004c\u006f\u0063\u006b\u0065\u0064C\u0065\u006c\u006c\u0073" {
			_faedg, _bffadf := _f.ParseBool(_dgbgc.Value)
			if _bffadf != nil {
				return _bffadf
			}
			_cfbcb.SelectLockedCellsAttr = &_faedg
			continue
		}
		if _dgbgc.Name.Local == "\u0073\u006f\u0072\u0074" {
			_bcaed, _adegf := _f.ParseBool(_dgbgc.Value)
			if _adegf != nil {
				return _adegf
			}
			_cfbcb.SortAttr = &_bcaed
			continue
		}
		if _dgbgc.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072" {
			_bffda, _dceed := _f.ParseBool(_dgbgc.Value)
			if _dceed != nil {
				return _dceed
			}
			_cfbcb.AutoFilterAttr = &_bffda
			continue
		}
		if _dgbgc.Name.Local == "p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0073" {
			_fedbb, _gfaaf := _f.ParseBool(_dgbgc.Value)
			if _gfaaf != nil {
				return _gfaaf
			}
			_cfbcb.PivotTablesAttr = &_fedbb
			continue
		}
		if _dgbgc.Name.Local == "\u0073\u0065\u006c\u0065ct\u0055\u006e\u006c\u006f\u0063\u006b\u0065\u0064\u0043\u0065\u006c\u006c\u0073" {
			_egdcbdd, _dcdgf := _f.ParseBool(_dgbgc.Value)
			if _dcdgf != nil {
				return _dcdgf
			}
			_cfbcb.SelectUnlockedCellsAttr = &_egdcbdd
			continue
		}
	}
	for {
		_ecfa, _dgdgg := d.Token()
		if _dgdgg != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u0068\u0065\u0065\u0074\u0050\u0072o\u0074\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _dgdgg)
		}
		if _feddae, _dacef := _ecfa.(_a.EndElement); _dacef && _feddae.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cbebea *CT_PivotCacheRecords) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ffbfdb := range start.Attr {
		if _ffbfdb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_acdgbd, _ecabe := _f.ParseUint(_ffbfdb.Value, 10, 32)
			if _ecabe != nil {
				return _ecabe
			}
			_bgbcgf := uint32(_acdgbd)
			_cbebea.CountAttr = &_bgbcgf
			continue
		}
	}
_cdadg:
	for {
		_dfecb, _efcda := d.Token()
		if _efcda != nil {
			return _efcda
		}
		switch _beaba := _dfecb.(type) {
		case _a.StartElement:
			switch _beaba.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_afefg := NewCT_Record()
				if _gadgee := d.DecodeElement(_afefg, &_beaba); _gadgee != nil {
					return _gadgee
				}
				_cbebea.R = append(_cbebea.R, _afefg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbebea.ExtLst = NewCT_ExtensionList()
				if _dacdd := d.DecodeElement(_cbebea.ExtLst, &_beaba); _dacdd != nil {
					return _dacdd
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065\u0063\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _beaba.Name)
				if _fdfecf := d.Skip(); _fdfecf != nil {
					return _fdfecf
				}
			}
		case _a.EndElement:
			break _cdadg
		case _a.CharData:
		}
	}
	return nil
}
func (_gae *CT_CfRule) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fefbg := range start.Attr {
		if _fefbg.Name.Local == "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064" {
			_gae.TimePeriodAttr.UnmarshalXMLAttr(_fefbg)
			continue
		}
		if _fefbg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gae.TypeAttr.UnmarshalXMLAttr(_fefbg)
			continue
		}
		if _fefbg.Name.Local == "\u0072\u0061\u006e\u006b" {
			_cffc, _ggegc := _f.ParseUint(_fefbg.Value, 10, 32)
			if _ggegc != nil {
				return _ggegc
			}
			_daea := uint32(_cffc)
			_gae.RankAttr = &_daea
			continue
		}
		if _fefbg.Name.Local == "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079" {
			_bagc, _aecd := _f.ParseInt(_fefbg.Value, 10, 32)
			if _aecd != nil {
				return _aecd
			}
			_gae.PriorityAttr = int32(_bagc)
			continue
		}
		if _fefbg.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076" {
			_aced, _aefd := _f.ParseInt(_fefbg.Value, 10, 32)
			if _aefd != nil {
				return _aefd
			}
			_fdfb := int32(_aced)
			_gae.StdDevAttr = &_fdfb
			continue
		}
		if _fefbg.Name.Local == "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065" {
			_egac, _dbefc := _f.ParseBool(_fefbg.Value)
			if _dbefc != nil {
				return _dbefc
			}
			_gae.AboveAverageAttr = &_egac
			continue
		}
		if _fefbg.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_degd, _gfddd := _f.ParseBool(_fefbg.Value)
			if _gfddd != nil {
				return _gfddd
			}
			_gae.BottomAttr = &_degd
			continue
		}
		if _fefbg.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_gae.OperatorAttr.UnmarshalXMLAttr(_fefbg)
			continue
		}
		if _fefbg.Name.Local == "\u0074\u0065\u0078\u0074" {
			_ccdf, _fdgd := _fefbg.Value, error(nil)
			if _fdgd != nil {
				return _fdgd
			}
			_gae.TextAttr = &_ccdf
			continue
		}
		if _fefbg.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_abfd, _cbbac := _f.ParseUint(_fefbg.Value, 10, 32)
			if _cbbac != nil {
				return _cbbac
			}
			_dcgbd := uint32(_abfd)
			_gae.DxfIdAttr = &_dcgbd
			continue
		}
		if _fefbg.Name.Local == "\u0073\u0074\u006f\u0070\u0049\u0066\u0054\u0072\u0075\u0065" {
			_efbg, _fbca := _f.ParseBool(_fefbg.Value)
			if _fbca != nil {
				return _fbca
			}
			_gae.StopIfTrueAttr = &_efbg
			continue
		}
		if _fefbg.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_gfgf, _dfcc := _f.ParseBool(_fefbg.Value)
			if _dfcc != nil {
				return _dfcc
			}
			_gae.PercentAttr = &_gfgf
			continue
		}
		if _fefbg.Name.Local == "\u0065\u0071\u0075a\u006c\u0041\u0076\u0065\u0072\u0061\u0067\u0065" {
			_cfcg, _aafa := _f.ParseBool(_fefbg.Value)
			if _aafa != nil {
				return _aafa
			}
			_gae.EqualAverageAttr = &_cfcg
			continue
		}
	}
_ecb:
	for {
		_cedc, _dccec := d.Token()
		if _dccec != nil {
			return _dccec
		}
		switch _ddcfe := _cedc.(type) {
		case _a.StartElement:
			switch _ddcfe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}:
				var _aeda string
				if _aabgb := d.DecodeElement(&_aeda, &_ddcfe); _aabgb != nil {
					return _aabgb
				}
				_gae.Formula = append(_gae.Formula, _aeda)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}:
				_gae.ColorScale = NewCT_ColorScale()
				if _ccegf := d.DecodeElement(_gae.ColorScale, &_ddcfe); _ccegf != nil {
					return _ccegf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0042\u0061\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0042\u0061\u0072"}:
				_gae.DataBar = NewCT_DataBar()
				if _eege := d.DecodeElement(_gae.DataBar, &_ddcfe); _eege != nil {
					return _eege
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}:
				_gae.IconSet = NewCT_IconSet()
				if _gdeac := d.DecodeElement(_gae.IconSet, &_ddcfe); _gdeac != nil {
					return _gdeac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gae.ExtLst = NewCT_ExtensionList()
				if _bdce := d.DecodeElement(_gae.ExtLst, &_ddcfe); _bdce != nil {
					return _bdce
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0066\u0052u\u006c\u0065 \u0025\u0076", _ddcfe.Name)
				if _feb := d.Skip(); _feb != nil {
					return _feb
				}
			}
		case _a.EndElement:
			break _ecb
		case _a.CharData:
		}
	}
	return nil
}
func (_fgbac *CT_TextField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ageafa := range start.Attr {
		if _ageafa.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fgbac.TypeAttr.UnmarshalXMLAttr(_ageafa)
			continue
		}
		if _ageafa.Name.Local == "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_cdfea, _bcgfg := _f.ParseUint(_ageafa.Value, 10, 32)
			if _bcgfg != nil {
				return _bcgfg
			}
			_gfadb := uint32(_cdfea)
			_fgbac.PositionAttr = &_gfadb
			continue
		}
	}
	for {
		_fagbe, _ebaegb := d.Token()
		if _ebaegb != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065x\u0074\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0073", _ebaegb)
		}
		if _gaecb, _fdafb := _fagbe.(_a.EndElement); _fdafb && _gaecb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ccgd ST_TimePeriod) String() string {
	switch _ccgd {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0064a\u0079"
	case 2:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 3:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 4:
		return "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s"
	case 5:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 6:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 7:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 8:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 9:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 10:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	}
	return ""
}
func NewCT_Tuple() *CT_Tuple { _cgdde := &CT_Tuple{}; return _cgdde }

// Validate validates the CT_MapInfo and its children
func (_gaeb *CT_MapInfo) Validate() error {
	return _gaeb.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0070\u0049\u006e\u0066\u006f")
}

type CT_QueryTableRefresh struct {

	// Preserve Sort & Filter Layout
	PreserveSortFilterLayoutAttr *bool

	// Next Field Id Wrapped
	FieldIdWrappedAttr *bool

	// Headers In Last Refresh
	HeadersInLastRefreshAttr *bool

	// Minimum Refresh Version
	MinimumVersionAttr *uint8

	// Next field id
	NextIdAttr *uint32

	// Columns Left
	UnboundColumnsLeftAttr *uint32

	// Columns Right
	UnboundColumnsRightAttr *uint32

	// Query table fields
	QueryTableFields *CT_QueryTableFields

	// Deleted Fields
	QueryTableDeletedFields *CT_QueryTableDeletedFields

	// Sort State
	SortState *CT_SortState

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_RElt struct {

	// Run Properties
	RPr *CT_RPrElt

	// Text
	T string
}
type CT_SheetData struct {

	// Row
	Row []*CT_Row
}

func NewCT_Sets() *CT_Sets { _beegc := &CT_Sets{}; return _beegc }
func (_bfdae *CT_PatternFill) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bfdae.PatternTypeAttr != ST_PatternTypeUnset {
		_abccfc, _aadea := _bfdae.PatternTypeAttr.MarshalXMLAttr(_a.Name{Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065"})
		if _aadea != nil {
			return _aadea
		}
		start.Attr = append(start.Attr, _abccfc)
	}
	e.EncodeToken(start)
	if _bfdae.FgColor != nil {
		_fdadb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0067\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_bfdae.FgColor, _fdadb)
	}
	if _bfdae.BgColor != nil {
		_bcaae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0062\u0067\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_bfdae.BgColor, _bcaae)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_daddgf *CT_ExternalBook) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _daddgf.IdAttr)})
	e.EncodeToken(start)
	if _daddgf.SheetNames != nil {
		_eeebc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_daddgf.SheetNames, _eeebc)
	}
	if _daddgf.DefinedNames != nil {
		_fcecd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ad\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_daddgf.DefinedNames, _fcecd)
	}
	if _daddgf.SheetDataSet != nil {
		_bdaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}}
		e.EncodeElement(_daddgf.SheetDataSet, _bdaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eeaa *CT_Filters) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ceccb := range start.Attr {
		if _ceccb.Name.Local == "\u0062\u006c\u0061n\u006b" {
			_dgbba, _bccab := _f.ParseBool(_ceccb.Value)
			if _bccab != nil {
				return _bccab
			}
			_eeaa.BlankAttr = &_dgbba
			continue
		}
		if _ceccb.Name.Local == "\u0063\u0061\u006ce\u006e\u0064\u0061\u0072\u0054\u0079\u0070\u0065" {
			_eeaa.CalendarTypeAttr.UnmarshalXMLAttr(_ceccb)
			continue
		}
	}
_cegeb:
	for {
		_fcbcfc, _gcgb := d.Token()
		if _gcgb != nil {
			return _gcgb
		}
		switch _cbgf := _fcbcfc.(type) {
		case _a.StartElement:
			switch _cbgf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}:
				_acedb := NewCT_Filter()
				if _bdbfd := d.DecodeElement(_acedb, &_cbgf); _bdbfd != nil {
					return _bdbfd
				}
				_eeaa.Filter = append(_eeaa.Filter, _acedb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}:
				_begc := NewCT_DateGroupItem()
				if _bdecf := d.DecodeElement(_begc, &_cbgf); _bdecf != nil {
					return _bdecf
				}
				_eeaa.DateGroupItem = append(_eeaa.DateGroupItem, _begc)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fF\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025\u0076", _cbgf.Name)
				if _eeeed := d.Skip(); _eeeed != nil {
					return _eeeed
				}
			}
		case _a.EndElement:
			break _cegeb
		case _a.CharData:
		}
	}
	return nil
}
func (_fbabf *CT_Reviewed) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bfafe := range start.Attr {
		if _bfafe.Name.Local == "\u0072\u0049\u0064" {
			_gecceb, _ggeff := _f.ParseUint(_bfafe.Value, 10, 32)
			if _ggeff != nil {
				return _ggeff
			}
			_fbabf.RIdAttr = uint32(_gecceb)
			continue
		}
	}
	for {
		_acada, _cbbcba := d.Token()
		if _cbbcba != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u003a\u0020\u0025\u0073", _cbbcba)
		}
		if _cedbe, _dgeff := _acada.(_a.EndElement); _dgeff && _cedbe.Name == start.Name {
			break
		}
	}
	return nil
}
func (_efedac ST_FormulaExpression) String() string {
	switch _efedac {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u0066"
	case 2:
		return "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072"
	case 3:
		return "\u0061\u0072\u0065\u0061"
	case 4:
		return "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr"
	case 5:
		return "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061"
	}
	return ""
}

// Validate validates the CT_CellSmartTag and its children
func (_gbed *CT_CellSmartTag) Validate() error {
	return _gbed.ValidateWithPath("\u0043T\u005fC\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067")
}

type CT_DefinedName struct {
	NameAttr              string
	CommentAttr           *string
	CustomMenuAttr        *string
	DescriptionAttr       *string
	HelpAttr              *string
	StatusBarAttr         *string
	LocalSheetIdAttr      *uint32
	HiddenAttr            *bool
	FunctionAttr          *bool
	VbProcedureAttr       *bool
	XlmAttr               *bool
	FunctionGroupIdAttr   *uint32
	ShortcutKeyAttr       *string
	PublishToServerAttr   *bool
	WorkbookParameterAttr *bool
	Content               string
}

func (_bgagcf *CT_Selection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bgagcf.PaneAttr != ST_PaneUnset {
		_efeede, _fefaf := _bgagcf.PaneAttr.MarshalXMLAttr(_a.Name{Local: "\u0070\u0061\u006e\u0065"})
		if _fefaf != nil {
			return _fefaf
		}
		start.Attr = append(start.Attr, _efeede)
	}
	if _bgagcf.ActiveCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0065\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_bgagcf.ActiveCellAttr)})
	}
	if _bgagcf.ActiveCellIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0063\u0074i\u0076\u0065\u0043\u0065\u006c\u006c\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bgagcf.ActiveCellIdAttr)})
	}
	if _bgagcf.SqrefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_bgagcf.SqrefAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PageItem and its children
func (_eafeb *CT_PageItem) Validate() error {
	return _eafeb.ValidateWithPath("C\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d")
}

// ValidateWithPath validates the CT_PivotField and its children, prefixing error messages with path
func (_dcddg *CT_PivotField) ValidateWithPath(path string) error {
	if _adecg := _dcddg.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _adecg != nil {
		return _adecg
	}
	if _ccefg := _dcddg.SortTypeAttr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _ccefg != nil {
		return _ccefg
	}
	if _dcddg.Items != nil {
		if _ccedg := _dcddg.Items.ValidateWithPath(path + "\u002f\u0049\u0074\u0065\u006d\u0073"); _ccedg != nil {
			return _ccedg
		}
	}
	if _dcddg.AutoSortScope != nil {
		if _bcdgef := _dcddg.AutoSortScope.ValidateWithPath(path + "\u002f\u0041\u0075\u0074\u006f\u0053\u006f\u0072\u0074S\u0063\u006f\u0070\u0065"); _bcdgef != nil {
			return _bcdgef
		}
	}
	if _dcddg.ExtLst != nil {
		if _caafa := _dcddg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _caafa != nil {
			return _caafa
		}
	}
	return nil
}

const (
	ST_FileTypeUnset ST_FileType = 0
	ST_FileTypeMac   ST_FileType = 1
	ST_FileTypeWin   ST_FileType = 2
	ST_FileTypeDos   ST_FileType = 3
	ST_FileTypeLin   ST_FileType = 4
	ST_FileTypeOther ST_FileType = 5
)

func (_gfcfdf *CT_PivotFilters) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gfcfdf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_gfcfdf.CountAttr)})
	}
	e.EncodeToken(start)
	if _gfcfdf.Filter != nil {
		_fcfdbfb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u0074\u0065r"}}
		for _, _bcega := range _gfcfdf.Filter {
			e.EncodeElement(_bcega, _fcfdbfb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_SmartTags() *CT_SmartTags { _ffgcf := &CT_SmartTags{}; return _ffgcf }
func NewCT_RgbColor() *CT_RgbColor   { _bbafdb := &CT_RgbColor{}; return _bbafdb }

type ST_Qualifier byte
type CT_colItems struct {

	// Column Item Count
	CountAttr *uint32

	// Column Items
	I []*CT_I
}

func (_deffa *CT_SheetBackgroundPicture) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _deffa.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cbbgg *CT_ExternalRow) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbcfg := range start.Attr {
		if _fbcfg.Name.Local == "\u0072" {
			_gafff, _eagd := _f.ParseUint(_fbcfg.Value, 10, 32)
			if _eagd != nil {
				return _eagd
			}
			_cbbgg.RAttr = uint32(_gafff)
			continue
		}
	}
_faebb:
	for {
		_gdfb, _gcgfg := d.Token()
		if _gcgfg != nil {
			return _gcgfg
		}
		switch _gagce := _gdfb.(type) {
		case _a.StartElement:
			switch _gagce.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c"}:
				_fccca := NewCT_ExternalCell()
				if _fddfg := d.DecodeElement(_fccca, &_gagce); _fddfg != nil {
					return _fddfg
				}
				_cbbgg.Cell = append(_cbbgg.Cell, _fccca)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061l\u0052o\u0077\u0020\u0025\u0076", _gagce.Name)
				if _ccaec := d.Skip(); _ccaec != nil {
					return _ccaec
				}
			}
		case _a.EndElement:
			break _faebb
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ExternalReferences and its children
func (_ffbbc *CT_ExternalReferences) Validate() error {
	return _ffbbc.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073")
}
func (_febeb *CT_PhoneticPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bedf := range start.Attr {
		if _bedf.Name.Local == "\u0066\u006f\u006e\u0074\u0049\u0064" {
			_debbe, _fadabd := _f.ParseUint(_bedf.Value, 10, 32)
			if _fadabd != nil {
				return _fadabd
			}
			_febeb.FontIdAttr = uint32(_debbe)
			continue
		}
		if _bedf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_febeb.TypeAttr.UnmarshalXMLAttr(_bedf)
			continue
		}
		if _bedf.Name.Local == "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et" {
			_febeb.AlignmentAttr.UnmarshalXMLAttr(_bedf)
			continue
		}
	}
	for {
		_bdffe, _fgdee := d.Token()
		if _fgdee != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050h\u006fn\u0065t\u0069\u0063\u0050\u0072\u003a\u0020\u0025s", _fgdee)
		}
		if _gfcbdd, _dedbb := _bdffe.(_a.EndElement); _dedbb && _gfcbdd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CellWatch struct {

	// Reference
	RAttr string
}

func (_debba *CT_Parameters) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _debba.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_debba.CountAttr)})
	}
	e.EncodeToken(start)
	_bbcc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072"}}
	for _, _baacf := range _debba.Parameter {
		e.EncodeElement(_baacf, _bbcc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_adbdg ST_ExternalConnectionType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_ddfff := _a.Attr{}
	_ddfff.Name = name
	switch _adbdg {
	case ST_ExternalConnectionTypeUnset:
		_ddfff.Value = ""
	case ST_ExternalConnectionTypeGeneral:
		_ddfff.Value = "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case ST_ExternalConnectionTypeText:
		_ddfff.Value = "\u0074\u0065\u0078\u0074"
	case ST_ExternalConnectionTypeMDY:
		_ddfff.Value = "\u004d\u0044\u0059"
	case ST_ExternalConnectionTypeDMY:
		_ddfff.Value = "\u0044\u004d\u0059"
	case ST_ExternalConnectionTypeYMD:
		_ddfff.Value = "\u0059\u004d\u0044"
	case ST_ExternalConnectionTypeMYD:
		_ddfff.Value = "\u004d\u0059\u0044"
	case ST_ExternalConnectionTypeDYM:
		_ddfff.Value = "\u0044\u0059\u004d"
	case ST_ExternalConnectionTypeYDM:
		_ddfff.Value = "\u0059\u0044\u004d"
	case ST_ExternalConnectionTypeSkip:
		_ddfff.Value = "\u0073\u006b\u0069\u0070"
	case ST_ExternalConnectionTypeEMD:
		_ddfff.Value = "\u0045\u004d\u0044"
	}
	return _ddfff, nil
}

const (
	ST_TotalsRowFunctionUnset     ST_TotalsRowFunction = 0
	ST_TotalsRowFunctionNone      ST_TotalsRowFunction = 1
	ST_TotalsRowFunctionSum       ST_TotalsRowFunction = 2
	ST_TotalsRowFunctionMin       ST_TotalsRowFunction = 3
	ST_TotalsRowFunctionMax       ST_TotalsRowFunction = 4
	ST_TotalsRowFunctionAverage   ST_TotalsRowFunction = 5
	ST_TotalsRowFunctionCount     ST_TotalsRowFunction = 6
	ST_TotalsRowFunctionCountNums ST_TotalsRowFunction = 7
	ST_TotalsRowFunctionStdDev    ST_TotalsRowFunction = 8
	ST_TotalsRowFunctionVar       ST_TotalsRowFunction = 9
	ST_TotalsRowFunctionCustom    ST_TotalsRowFunction = 10
)
const (
	ST_FormulaExpressionUnset        ST_FormulaExpression = 0
	ST_FormulaExpressionRef          ST_FormulaExpression = 1
	ST_FormulaExpressionRefError     ST_FormulaExpression = 2
	ST_FormulaExpressionArea         ST_FormulaExpression = 3
	ST_FormulaExpressionAreaError    ST_FormulaExpression = 4
	ST_FormulaExpressionComputedArea ST_FormulaExpression = 5
)

type CT_ChartFormats struct {

	// Format Count
	CountAttr *uint32

	// PivotChart Format
	ChartFormat []*CT_ChartFormat
}

// Validate validates the CT_Chartsheet and its children
func (_gdedb *CT_Chartsheet) Validate() error {
	return _gdedb.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074")
}
func NewCT_CustomChartsheetViews() *CT_CustomChartsheetViews {
	_gcdc := &CT_CustomChartsheetViews{}
	return _gcdc
}

// ValidateWithPath validates the CT_RowHierarchiesUsage and its children, prefixing error messages with path
func (_cfedd *CT_RowHierarchiesUsage) ValidateWithPath(path string) error {
	for _ggcac, _aggbc := range _cfedd.RowHierarchyUsage {
		if _defdfd := _aggbc.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0052\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _ggcac)); _defdfd != nil {
			return _defdfd
		}
	}
	return nil
}

type Headers struct{ CT_RevisionHeaders }

func (_cce *CT_CellStyle) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ecgf := range start.Attr {
		if _ecgf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gce, _cgca := _ecgf.Value, error(nil)
			if _cgca != nil {
				return _cgca
			}
			_cce.NameAttr = &_gce
			continue
		}
		if _ecgf.Name.Local == "\u0078\u0066\u0049\u0064" {
			_dgcfc, _bdab := _f.ParseUint(_ecgf.Value, 10, 32)
			if _bdab != nil {
				return _bdab
			}
			_cce.XfIdAttr = uint32(_dgcfc)
			continue
		}
		if _ecgf.Name.Local == "\u0062u\u0069\u006c\u0074\u0069\u006e\u0049d" {
			_baee, _bgaa := _f.ParseUint(_ecgf.Value, 10, 32)
			if _bgaa != nil {
				return _bgaa
			}
			_cbf := uint32(_baee)
			_cce.BuiltinIdAttr = &_cbf
			continue
		}
		if _ecgf.Name.Local == "\u0069\u004c\u0065\u0076\u0065\u006c" {
			_agfe, _ffgc := _f.ParseUint(_ecgf.Value, 10, 32)
			if _ffgc != nil {
				return _ffgc
			}
			_efae := uint32(_agfe)
			_cce.ILevelAttr = &_efae
			continue
		}
		if _ecgf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_cgfdd, _ceaa := _f.ParseBool(_ecgf.Value)
			if _ceaa != nil {
				return _ceaa
			}
			_cce.HiddenAttr = &_cgfdd
			continue
		}
		if _ecgf.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u0042\u0075\u0069\u006c\u0074\u0069\u006e" {
			_acgc, _aedc := _f.ParseBool(_ecgf.Value)
			if _aedc != nil {
				return _aedc
			}
			_cce.CustomBuiltinAttr = &_acgc
			continue
		}
	}
_cgfb:
	for {
		_bgae, _fdeg := d.Token()
		if _fdeg != nil {
			return _fdeg
		}
		switch _gaac := _bgae.(type) {
		case _a.StartElement:
			switch _gaac.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cce.ExtLst = NewCT_ExtensionList()
				if _gcca := d.DecodeElement(_cce.ExtLst, &_gaac); _gcca != nil {
					return _gcca
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _gaac.Name)
				if _gbef := d.Skip(); _gbef != nil {
					return _gbef
				}
			}
		case _a.EndElement:
			break _cgfb
		case _a.CharData:
		}
	}
	return nil
}

type ST_SourceType byte

func (_bdgga *CT_Schema) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0049\u0044"}, Value: _fc.Sprintf("\u0025\u0076", _bdgga.IDAttr)})
	if _bdgga.SchemaRefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0053c\u0068\u0065\u006d\u0061\u0052\u0065f"}, Value: _fc.Sprintf("\u0025\u0076", *_bdgga.SchemaRefAttr)})
	}
	if _bdgga.NamespaceAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u004ea\u006d\u0065\u0073\u0070\u0061\u0063e"}, Value: _fc.Sprintf("\u0025\u0076", *_bdgga.NamespaceAttr)})
	}
	if _bdgga.SchemaLanguageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_bdgga.SchemaLanguageAttr)})
	}
	e.EncodeToken(start)
	if _bdgga.Any != nil {
		_bdgga.Any.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_edgfee ST_CredMethod) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dfeca := _a.Attr{}
	_dfeca.Name = name
	switch _edgfee {
	case ST_CredMethodUnset:
		_dfeca.Value = ""
	case ST_CredMethodIntegrated:
		_dfeca.Value = "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064"
	case ST_CredMethodNone:
		_dfeca.Value = "\u006e\u006f\u006e\u0065"
	case ST_CredMethodStored:
		_dfeca.Value = "\u0073\u0074\u006f\u0072\u0065\u0064"
	case ST_CredMethodPrompt:
		_dfeca.Value = "\u0070\u0072\u006f\u006d\u0070\u0074"
	}
	return _dfeca, nil
}
func NewCT_ExternalReferences() *CT_ExternalReferences {
	_dfef := &CT_ExternalReferences{}
	return _dfef
}
func (_bbddc *CT_PageBreak) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfaegd := range start.Attr {
		if _dfaegd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccgab, _efdgg := _f.ParseUint(_dfaegd.Value, 10, 32)
			if _efdgg != nil {
				return _efdgg
			}
			_dagdd := uint32(_ccgab)
			_bbddc.CountAttr = &_dagdd
			continue
		}
		if _dfaegd.Name.Local == "\u006d\u0061n\u0075\u0061\u006cB\u0072\u0065\u0061\u006b\u0043\u006f\u0075\u006e\u0074" {
			_ecdd, _dgdbdf := _f.ParseUint(_dfaegd.Value, 10, 32)
			if _dgdbdf != nil {
				return _dgdbdf
			}
			_cabae := uint32(_ecdd)
			_bbddc.ManualBreakCountAttr = &_cabae
			continue
		}
	}
_bcffa:
	for {
		_gdceb, _agebd := d.Token()
		if _agebd != nil {
			return _agebd
		}
		switch _ffcab := _gdceb.(type) {
		case _a.StartElement:
			switch _ffcab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006b"}:
				_cfbaf := NewCT_Break()
				if _cdaggb := d.DecodeElement(_cfbaf, &_ffcab); _cdaggb != nil {
					return _cdaggb
				}
				_bbddc.Brk = append(_bbddc.Brk, _cfbaf)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0061\u0067e\u0042\u0072\u0065\u0061\u006b\u0020\u0025\u0076", _ffcab.Name)
				if _afea := d.Skip(); _afea != nil {
					return _afea
				}
			}
		case _a.EndElement:
			break _bcffa
		case _a.CharData:
		}
	}
	return nil
}

type CT_TableColumns struct {

	// Column Count
	CountAttr *uint32

	// Table Column
	TableColumn []*CT_TableColumn
}

func (_deeba *CT_GradientFill) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eddb := range start.Attr {
		if _eddb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_deeba.TypeAttr.UnmarshalXMLAttr(_eddb)
			continue
		}
		if _eddb.Name.Local == "\u0064\u0065\u0067\u0072\u0065\u0065" {
			_fcdb, _cbefa := _f.ParseFloat(_eddb.Value, 64)
			if _cbefa != nil {
				return _cbefa
			}
			_deeba.DegreeAttr = &_fcdb
			continue
		}
		if _eddb.Name.Local == "\u006c\u0065\u0066\u0074" {
			_aada, _debgc := _f.ParseFloat(_eddb.Value, 64)
			if _debgc != nil {
				return _debgc
			}
			_deeba.LeftAttr = &_aada
			continue
		}
		if _eddb.Name.Local == "\u0072\u0069\u0067h\u0074" {
			_edcff, _gbfg := _f.ParseFloat(_eddb.Value, 64)
			if _gbfg != nil {
				return _gbfg
			}
			_deeba.RightAttr = &_edcff
			continue
		}
		if _eddb.Name.Local == "\u0074\u006f\u0070" {
			_edec, _afba := _f.ParseFloat(_eddb.Value, 64)
			if _afba != nil {
				return _afba
			}
			_deeba.TopAttr = &_edec
			continue
		}
		if _eddb.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_gbafb, _gdaec := _f.ParseFloat(_eddb.Value, 64)
			if _gdaec != nil {
				return _gdaec
			}
			_deeba.BottomAttr = &_gbafb
			continue
		}
	}
_cegefg:
	for {
		_fceee, _eegbd := d.Token()
		if _eegbd != nil {
			return _eegbd
		}
		switch _ecbfd := _fceee.(type) {
		case _a.StartElement:
			switch _ecbfd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u006f\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u006f\u0070"}:
				_dcaed := NewCT_GradientStop()
				if _cccgf := d.DecodeElement(_dcaed, &_ecbfd); _cccgf != nil {
					return _cccgf
				}
				_deeba.Stop = append(_deeba.Stop, _dcaed)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _ecbfd.Name)
				if _bbdfe := d.Skip(); _bbdfe != nil {
					return _bbdfe
				}
			}
		case _a.EndElement:
			break _cegefg
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Boolean and its children, prefixing error messages with path
func (_cffb *CT_Boolean) ValidateWithPath(path string) error {
	for _dae, _ffe := range _cffb.X {
		if _fadb := _ffe.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _dae)); _fadb != nil {
			return _fadb
		}
	}
	return nil
}
func (_bcfa *CT_ChartsheetViews) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gbga:
	for {
		_gaff, _bgfa := d.Token()
		if _bgfa != nil {
			return _bgfa
		}
		switch _cfgce := _gaff.(type) {
		case _a.StartElement:
			switch _cfgce.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}:
				_bccf := NewCT_ChartsheetView()
				if _faec := d.DecodeElement(_bccf, &_cfgce); _faec != nil {
					return _faec
				}
				_bcfa.SheetView = append(_bcfa.SheetView, _bccf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcfa.ExtLst = NewCT_ExtensionList()
				if _gebf := d.DecodeElement(_bcfa.ExtLst, &_cfgce); _gebf != nil {
					return _gebf
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073h\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _cfgce.Name)
				if _dfdg := d.Skip(); _dfdg != nil {
					return _dfdg
				}
			}
		case _a.EndElement:
			break _gbga
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_PaneUnset       ST_Pane = 0
	ST_PaneBottomRight ST_Pane = 1
	ST_PaneTopRight    ST_Pane = 2
	ST_PaneBottomLeft  ST_Pane = 3
	ST_PaneTopLeft     ST_Pane = 4
)

// ValidateWithPath validates the CT_Comments and its children, prefixing error messages with path
func (_cgaf *CT_Comments) ValidateWithPath(path string) error {
	if _dbga := _cgaf.Authors.ValidateWithPath(path + "\u002f\u0041\u0075\u0074\u0068\u006f\u0072\u0073"); _dbga != nil {
		return _dbga
	}
	if _bfffa := _cgaf.CommentList.ValidateWithPath(path + "\u002f\u0043\u006fm\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"); _bfffa != nil {
		return _bfffa
	}
	if _cgaf.ExtLst != nil {
		if _bgecc := _cgaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgecc != nil {
			return _bgecc
		}
	}
	return nil
}
func (_dbefe *CT_MetadataRecord) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dgfccd := range start.Attr {
		if _dgfccd.Name.Local == "\u0074" {
			_bfcaa, _gafae := _f.ParseUint(_dgfccd.Value, 10, 32)
			if _gafae != nil {
				return _gafae
			}
			_dbefe.TAttr = uint32(_bfcaa)
			continue
		}
		if _dgfccd.Name.Local == "\u0076" {
			_ccbdae, _fceeb := _f.ParseUint(_dgfccd.Value, 10, 32)
			if _fceeb != nil {
				return _fceeb
			}
			_dbefe.VAttr = uint32(_ccbdae)
			continue
		}
	}
	for {
		_edfgf, _ffeec := d.Token()
		if _ffeec != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052\u0065\u0063\u006f\u0072\u0064: \u0025\u0073", _ffeec)
		}
		if _dfecd, _bgdcf := _edfgf.(_a.EndElement); _bgdcf && _dfecd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_debfd ST_Objects) ValidateWithPath(path string) error {
	switch _debfd {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_debfd))
	}
	return nil
}

// Validate validates the CT_PageSetUpPr and its children
func (_aeefg *CT_PageSetUpPr) Validate() error {
	return _aeefg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072")
}

// Validate validates the CT_SheetBackgroundPicture and its children
func (_egafcg *CT_SheetBackgroundPicture) Validate() error {
	return _egafcg.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0065e\u0074\u0042\u0061\u0063\u006bg\u0072o\u0075n\u0064\u0050\u0069\u0063\u0074\u0075\u0072e")
}
func (_cebbff *CT_SheetData) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_eegae:
	for {
		_gdgca, _cbbdfc := d.Token()
		if _cbbdfc != nil {
			return _cbbdfc
		}
		switch _dffbf := _gdgca.(type) {
		case _a.StartElement:
			switch _dffbf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}:
				_gfagbb := NewCT_Row()
				if _ebaac := d.DecodeElement(_gfagbb, &_dffbf); _ebaac != nil {
					return _ebaac
				}
				_cebbff.Row = append(_cebbff.Row, _gfagbb)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _dffbf.Name)
				if _fffcb := d.Skip(); _fffcb != nil {
					return _fffcb
				}
			}
		case _a.EndElement:
			break _eegae
		case _a.CharData:
		}
	}
	return nil
}
func (_dcfc *CT_DataBar) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dcfc.MinLengthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006di\u006e\u004c\u0065\u006e\u0067\u0074h"}, Value: _fc.Sprintf("\u0025\u0076", *_dcfc.MinLengthAttr)})
	}
	if _dcfc.MaxLengthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006da\u0078\u004c\u0065\u006e\u0067\u0074h"}, Value: _fc.Sprintf("\u0025\u0076", *_dcfc.MaxLengthAttr)})
	}
	if _dcfc.ShowValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcfc.ShowValueAttr))})
	}
	e.EncodeToken(start)
	_bada := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _fbbe := range _dcfc.Cfvo {
		e.EncodeElement(_fbbe, _bada)
	}
	_bacbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	e.EncodeElement(_dcfc.Color, _bacbe)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fbcge *CT_Control) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _fbcge.ShapeIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _fbcge.IdAttr)})
	if _fbcge.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fbcge.NameAttr)})
	}
	e.EncodeToken(start)
	if _fbcge.ControlPr != nil {
		_dgcfg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ac\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072"}}
		e.EncodeElement(_fbcge.ControlPr, _dgcfg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_egcdf ST_GroupBy) String() string {
	switch _egcdf {
	case 0:
		return ""
	case 1:
		return "\u0072\u0061\u006eg\u0065"
	case 2:
		return "\u0073e\u0063\u006f\u006e\u0064\u0073"
	case 3:
		return "\u006di\u006e\u0075\u0074\u0065\u0073"
	case 4:
		return "\u0068\u006f\u0075r\u0073"
	case 5:
		return "\u0064\u0061\u0079\u0073"
	case 6:
		return "\u006d\u006f\u006e\u0074\u0068\u0073"
	case 7:
		return "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073"
	case 8:
		return "\u0079\u0065\u0061r\u0073"
	}
	return ""
}
func (_gccb *CT_ExternalDefinedName) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _gccb.NameAttr)})
	if _gccb.RefersToAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066\u0065\u0072\u0073\u0054\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_gccb.RefersToAttr)})
	}
	if _gccb.SheetIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_gccb.SheetIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_ReviewedRevisions struct {

	// Reviewed Revisions Count
	CountAttr *uint32

	// Reviewed
	Reviewed []*CT_Reviewed
}
type CT_GroupMember struct {

	// Group Member Unique Name
	UniqueNameAttr string

	// Group
	GroupAttr *bool
}

func (_ggdbdg *CT_ServerFormats) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dddacf := range start.Attr {
		if _dddacf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebfec, _gbecg := _f.ParseUint(_dddacf.Value, 10, 32)
			if _gbecg != nil {
				return _gbecg
			}
			_ecgaa := uint32(_ebfec)
			_ggdbdg.CountAttr = &_ecgaa
			continue
		}
	}
_acbgb:
	for {
		_dcebeg, _degbc := d.Token()
		if _degbc != nil {
			return _degbc
		}
		switch _fbgcg := _dcebeg.(type) {
		case _a.StartElement:
			switch _fbgcg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}:
				_ddefca := NewCT_ServerFormat()
				if _cceddd := d.DecodeElement(_ddefca, &_fbgcg); _cceddd != nil {
					return _cceddd
				}
				_ggdbdg.ServerFormat = append(_ggdbdg.ServerFormat, _ddefca)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025v", _fbgcg.Name)
				if _gagdg := d.Skip(); _gagdg != nil {
					return _gagdg
				}
			}
		case _a.EndElement:
			break _acbgb
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionRowColumn and its children, prefixing error messages with path
func (_dcebag *CT_RevisionRowColumn) ValidateWithPath(path string) error {
	if _dcebag.ActionAttr == ST_rwColActionTypeUnset {
		return _fc.Errorf("\u0025\u0073\u002fAc\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072\u0020i\u0073 \u0061 \u006da\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fdbcg := _dcebag.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _fdbcg != nil {
		return _fdbcg
	}
	for _gfgdbg, _decfa := range _dcebag.Undo {
		if _abcdb := _decfa.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0055\u006e\u0064\u006f\u005b\u0025\u0064\u005d", path, _gfgdbg)); _abcdb != nil {
			return _abcdb
		}
	}
	for _dcgff, _gafb := range _dcebag.Rcc {
		if _befbd := _gafb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _dcgff)); _befbd != nil {
			return _befbd
		}
	}
	for _bccee, _aecccb := range _dcebag.Rfmt {
		if _efefgg := _aecccb.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _bccee)); _efefgg != nil {
			return _efefgg
		}
	}
	return nil
}
func NewCT_RowHierarchiesUsage() *CT_RowHierarchiesUsage {
	_bagfga := &CT_RowHierarchiesUsage{}
	return _bagfga
}

type CT_SheetViews struct {

	// Worksheet View
	SheetView []*CT_SheetView

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_caeb *CT_PivotDimension) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bcdae := range start.Attr {
		if _bcdae.Name.Local == "\u006de\u0061\u0073\u0075\u0072\u0065" {
			_bccbe, _ceagf := _f.ParseBool(_bcdae.Value)
			if _ceagf != nil {
				return _ceagf
			}
			_caeb.MeasureAttr = &_bccbe
			continue
		}
		if _bcdae.Name.Local == "\u006e\u0061\u006d\u0065" {
			_badad, _dddde := _bcdae.Value, error(nil)
			if _dddde != nil {
				return _dddde
			}
			_caeb.NameAttr = _badad
			continue
		}
		if _bcdae.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_babgd, _gefdfd := _bcdae.Value, error(nil)
			if _gefdfd != nil {
				return _gefdfd
			}
			_caeb.UniqueNameAttr = _babgd
			continue
		}
		if _bcdae.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_fade, _dfgfa := _bcdae.Value, error(nil)
			if _dfgfa != nil {
				return _dfgfa
			}
			_caeb.CaptionAttr = _fade
			continue
		}
	}
	for {
		_cbgfg, _cfeafg := d.Token()
		if _cfeafg != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e: \u0025\u0073", _cfeafg)
		}
		if _fbeeda, _ccefb := _cbgfg.(_a.EndElement); _ccefb && _fbeeda.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Hyperlink and its children, prefixing error messages with path
func (_acdac *CT_Hyperlink) ValidateWithPath(path string) error { return nil }

type CT_Cfvo struct {

	// Type
	TypeAttr ST_CfvoType

	// Value
	ValAttr *string

	// Greater Than Or Equal
	GteAttr *bool
	ExtLst  *CT_ExtensionList
}

func (_gaedaa ST_GradientType) ValidateWithPath(path string) error {
	switch _gaedaa {
	case 0, 1, 2:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gaedaa))
	}
	return nil
}

// Validate validates the CT_Row and its children
func (_bagff *CT_Row) Validate() error {
	return _bagff.ValidateWithPath("\u0043\u0054\u005f\u0052\u006f\u0077")
}

type CT_Tuple struct {

	// Field Index
	FldAttr *uint32

	// Hierarchy Index
	HierAttr *uint32

	// Item Index
	ItemAttr uint32
}
type CT_PivotArea struct {

	// Field Index
	FieldAttr *int32

	// Rule Type
	TypeAttr ST_PivotAreaType

	// Data Only
	DataOnlyAttr *bool

	// Labels Only
	LabelOnlyAttr *bool

	// Include Row Grand Total
	GrandRowAttr *bool

	// Include Column Grand Total
	GrandColAttr *bool

	// Cache Index
	CacheIndexAttr *bool

	// Outline
	OutlineAttr *bool

	// Offset Reference
	OffsetAttr *string

	// Collapsed Levels Are Subtotals
	CollapsedLevelsAreSubtotalsAttr *bool

	// Axis
	AxisAttr ST_Axis

	// Field Position
	FieldPositionAttr *uint32

	// References
	References *CT_PivotAreaReferences

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ecdge *Metadata) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"
	return _ecdge.CT_Metadata.MarshalXML(e, start)
}
func (_acgff *CT_NumFmt) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aedbdd := range start.Attr {
		if _aedbdd.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_ggeae, _cgdgcg := _f.ParseUint(_aedbdd.Value, 10, 32)
			if _cgdgcg != nil {
				return _cgdgcg
			}
			_acgff.NumFmtIdAttr = uint32(_ggeae)
			continue
		}
		if _aedbdd.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u0064\u0065" {
			_cafaf, _dcbgb := _aedbdd.Value, error(nil)
			if _dcbgb != nil {
				return _dcbgb
			}
			_acgff.FormatCodeAttr = _cafaf
			continue
		}
	}
	for {
		_cbgbf, _ccfae := d.Token()
		if _ccfae != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004e\u0075\u006dF\u006d\u0074\u003a\u0020\u0025\u0073", _ccfae)
		}
		if _affc, _cgee := _cbgbf.(_a.EndElement); _cgee && _affc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdegb *CT_TableParts) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bdegb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bdegb.CountAttr)})
	}
	e.EncodeToken(start)
	if _bdegb.TablePart != nil {
		_egeebf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003at\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074"}}
		for _, _agda := range _bdegb.TablePart {
			e.EncodeElement(_agda, _egeebf)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotFilters and its children, prefixing error messages with path
func (_cgfgc *CT_PivotFilters) ValidateWithPath(path string) error {
	for _cbbcae, _ceaec := range _cgfgc.Filter {
		if _ffdggg := _ceaec.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _cbbcae)); _ffdggg != nil {
			return _ffdggg
		}
	}
	return nil
}
func (_bgffb *CT_SheetBackgroundPicture) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gcgfb := range start.Attr {
		if _gcgfb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gcgfb.Name.Local == "\u0069\u0064" || _gcgfb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gcgfb.Name.Local == "\u0069\u0064" {
			_gfcaa, _gaccf := _gcgfb.Value, error(nil)
			if _gaccf != nil {
				return _gaccf
			}
			_bgffb.IdAttr = _gfcaa
			continue
		}
	}
	for {
		_bdfba, _cabcc := d.Token()
		if _cabcc != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0053\u0068\u0065\u0065\u0074\u0042\u0061\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0069\u0063\u0074\u0075\u0072e\u003a\u0020\u0025\u0073", _cabcc)
		}
		if _bagdc, _ababb := _bdfba.(_a.EndElement); _ababb && _bagdc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adcdf *CT_MdxTuple) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _adcdf.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_adcdf.CAttr)})
	}
	if _adcdf.CtAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_adcdf.CtAttr)})
	}
	if _adcdf.SiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0069"}, Value: _fc.Sprintf("\u0025\u0076", *_adcdf.SiAttr)})
	}
	if _adcdf.FiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069"}, Value: _fc.Sprintf("\u0025\u0076", *_adcdf.FiAttr)})
	}
	if _adcdf.BcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_adcdf.BcAttr)})
	}
	if _adcdf.FcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_adcdf.FcAttr)})
	}
	if _adcdf.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adcdf.IAttr))})
	}
	if _adcdf.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adcdf.UAttr))})
	}
	if _adcdf.StAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adcdf.StAttr))})
	}
	if _adcdf.BAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adcdf.BAttr))})
	}
	e.EncodeToken(start)
	if _adcdf.N != nil {
		_adcbg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _bfbbb := range _adcdf.N {
			e.EncodeElement(_bfbbb, _adcbg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_GradientTypeUnset  ST_GradientType = 0
	ST_GradientTypeLinear ST_GradientType = 1
	ST_GradientTypePath   ST_GradientType = 2
)

func (_cfebb ST_ParameterType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cgdcg := _a.Attr{}
	_cgdcg.Name = name
	switch _cfebb {
	case ST_ParameterTypeUnset:
		_cgdcg.Value = ""
	case ST_ParameterTypePrompt:
		_cgdcg.Value = "\u0070\u0072\u006f\u006d\u0070\u0074"
	case ST_ParameterTypeValue:
		_cgdcg.Value = "\u0076\u0061\u006cu\u0065"
	case ST_ParameterTypeCell:
		_cgdcg.Value = "\u0063\u0065\u006c\u006c"
	}
	return _cgdcg, nil
}
func (_bbdda ST_GradientType) Validate() error { return _bbdda.ValidateWithPath("") }

type CT_WebPublishItem struct {

	// Id
	IdAttr uint32

	// Destination Bookmark
	DivIdAttr string

	// Web Source Type
	SourceTypeAttr ST_WebSourceType

	// Source Id
	SourceRefAttr *string

	// Source Object Name
	SourceObjectAttr *string

	// Destination File Name
	DestinationFileAttr string

	// Title
	TitleAttr *string

	// Automatically Publish
	AutoRepublishAttr *bool
}

func (_ffcba *CT_SingleXmlCell) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ffcba.XmlCellPr = NewCT_XmlCellPr()
	for _, _caafb := range start.Attr {
		if _caafb.Name.Local == "\u0069\u0064" {
			_decaf, _gdaea := _f.ParseUint(_caafb.Value, 10, 32)
			if _gdaea != nil {
				return _gdaea
			}
			_ffcba.IdAttr = uint32(_decaf)
			continue
		}
		if _caafb.Name.Local == "\u0072" {
			_ebagee, _cedgc := _caafb.Value, error(nil)
			if _cedgc != nil {
				return _cedgc
			}
			_ffcba.RAttr = _ebagee
			continue
		}
		if _caafb.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_eacffc, _eagaf := _f.ParseUint(_caafb.Value, 10, 32)
			if _eagaf != nil {
				return _eagaf
			}
			_ffcba.ConnectionIdAttr = uint32(_eacffc)
			continue
		}
	}
_cbcbee:
	for {
		_fgccg, _ebgad := d.Token()
		if _ebgad != nil {
			return _ebgad
		}
		switch _bcgdg := _fgccg.(type) {
		case _a.StartElement:
			switch _bcgdg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078m\u006c\u0043\u0065\u006c\u006c\u0050r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078m\u006c\u0043\u0065\u006c\u006c\u0050r"}:
				if _gbegc := d.DecodeElement(_ffcba.XmlCellPr, &_bcgdg); _gbegc != nil {
					return _gbegc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffcba.ExtLst = NewCT_ExtensionList()
				if _gaadg := d.DecodeElement(_ffcba.ExtLst, &_bcgdg); _gaadg != nil {
					return _gaadg
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0020\u0025v", _bcgdg.Name)
				if _adgfd := d.Skip(); _adgfd != nil {
					return _adgfd
				}
			}
		case _a.EndElement:
			break _cbcbee
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DataBar and its children, prefixing error messages with path
func (_gcfc *CT_DataBar) ValidateWithPath(path string) error {
	for _cfaac, _dadc := range _gcfc.Cfvo {
		if _ebfag := _dadc.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _cfaac)); _ebfag != nil {
			return _ebfag
		}
	}
	if _bfeb := _gcfc.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _bfeb != nil {
		return _bfeb
	}
	return nil
}

// ValidateWithPath validates the CT_CacheSource and its children, prefixing error messages with path
func (_gefb *CT_CacheSource) ValidateWithPath(path string) error {
	if _gefb.TypeAttr == ST_SourceTypeUnset {
		return _fc.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cbec := _gefb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cbec != nil {
		return _cbec
	}
	if _gefb.WorksheetSource != nil {
		if _fbed := _gefb.WorksheetSource.ValidateWithPath(path + "\u002f\u0057o\u0072\u006b\u0073h\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"); _fbed != nil {
			return _fbed
		}
	}
	if _gefb.Consolidation != nil {
		if _aeg := _gefb.Consolidation.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"); _aeg != nil {
			return _aeg
		}
	}
	if _gefb.ExtLst != nil {
		if _fbedc := _gefb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbedc != nil {
			return _fbedc
		}
	}
	return nil
}
func (_agdab ST_CfType) Validate() error { return _agdab.ValidateWithPath("") }

// Validate validates the CT_Number and its children
func (_babfg *CT_Number) Validate() error {
	return _babfg.ValidateWithPath("\u0043T\u005f\u004e\u0075\u006d\u0062\u0065r")
}
func (_eeefa *CT_String) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fc.Sprintf("\u0025\u0076", _eeefa.VAttr)})
	if _eeefa.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eeefa.UAttr))})
	}
	if _eeefa.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eeefa.FAttr))})
	}
	if _eeefa.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_eeefa.CAttr)})
	}
	if _eeefa.CpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_eeefa.CpAttr)})
	}
	if _eeefa.InAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_eeefa.InAttr)})
	}
	if _eeefa.BcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_eeefa.BcAttr)})
	}
	if _eeefa.FcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_eeefa.FcAttr)})
	}
	if _eeefa.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eeefa.IAttr))})
	}
	if _eeefa.UnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eeefa.UnAttr))})
	}
	if _eeefa.StAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eeefa.StAttr))})
	}
	if _eeefa.BAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eeefa.BAttr))})
	}
	e.EncodeToken(start)
	if _eeefa.Tpls != nil {
		_bdegfg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _gfdbc := range _eeefa.Tpls {
			e.EncodeElement(_gfdbc, _bdegfg)
		}
	}
	if _eeefa.X != nil {
		_edbcc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _fadffc := range _eeefa.X {
			e.EncodeElement(_fadffc, _edbcc)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ReviewedRevisions and its children
func (_fcgfb *CT_ReviewedRevisions) Validate() error {
	return _fcgfb.ValidateWithPath("C\u0054_\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064R\u0065\u0076\u0069\u0073io\u006e\u0073")
}
func (_abd *CT_CacheHierarchy) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dgbc := range start.Attr {
		if _dgbc.Name.Local == "\u0064\u0069\u006d\u0065ns\u0069\u006f\u006e\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_ebd, _cdeb := _dgbc.Value, error(nil)
			if _cdeb != nil {
				return _cdeb
			}
			_abd.DimensionUniqueNameAttr = &_ebd
			continue
		}
		if _dgbc.Name.Local == "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072" {
			_beed, _abfcb := _dgbc.Value, error(nil)
			if _abfcb != nil {
				return _abfcb
			}
			_abd.DisplayFolderAttr = &_beed
			continue
		}
		if _dgbc.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_cbbg, _dfaf := _dgbc.Value, error(nil)
			if _dfaf != nil {
				return _dfaf
			}
			_abd.CaptionAttr = &_cbbg
			continue
		}
		if _dgbc.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_dgdb, _cgf := _dgbc.Value, error(nil)
			if _cgf != nil {
				return _cgf
			}
			_abd.MeasureGroupAttr = &_dgdb
			continue
		}
		if _dgbc.Name.Local == "\u0073\u0065\u0074" {
			_eeba, _egfd := _f.ParseBool(_dgbc.Value)
			if _egfd != nil {
				return _egfd
			}
			_abd.SetAttr = &_eeba
			continue
		}
		if _dgbc.Name.Local == "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0073" {
			_dcg, _bca := _f.ParseBool(_dgbc.Value)
			if _bca != nil {
				return _bca
			}
			_abd.MeasuresAttr = &_dcg
			continue
		}
		if _dgbc.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_daa, _fdcab := _f.ParseInt(_dgbc.Value, 10, 32)
			if _fdcab != nil {
				return _fdcab
			}
			_abc := int32(_daa)
			_abd.IconSetAttr = &_abc
			continue
		}
		if _dgbc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_feeec, _fbba := _f.ParseUint(_dgbc.Value, 10, 32)
			if _fbba != nil {
				return _fbba
			}
			_abd.CountAttr = uint32(_feeec)
			continue
		}
		if _dgbc.Name.Local == "\u0074\u0069\u006d\u0065" {
			_gace, _fda := _f.ParseBool(_dgbc.Value)
			if _fda != nil {
				return _fda
			}
			_abd.TimeAttr = &_gace
			continue
		}
		if _dgbc.Name.Local == "\u006f\u006e\u0065\u0046\u0069\u0065\u006c\u0064" {
			_cfg, _fcba := _f.ParseBool(_dgbc.Value)
			if _fcba != nil {
				return _fcba
			}
			_abd.OneFieldAttr = &_cfg
			continue
		}
		if _dgbc.Name.Local == "\u006d\u0065\u006d\u0062er\u0056\u0061\u006c\u0075\u0065\u0044\u0061\u0074\u0061\u0074\u0079\u0070\u0065" {
			_gcfd, _ffea := _f.ParseUint(_dgbc.Value, 10, 16)
			if _ffea != nil {
				return _ffea
			}
			_bcbg := uint16(_gcfd)
			_abd.MemberValueDatatypeAttr = &_bcbg
			continue
		}
		if _dgbc.Name.Local == "\u0075n\u0062a\u006c\u0061\u006e\u0063\u0065\u0064\u0047\u0072\u006f\u0075\u0070" {
			_edb, _gdgg := _f.ParseBool(_dgbc.Value)
			if _gdgg != nil {
				return _gdgg
			}
			_abd.UnbalancedGroupAttr = &_edb
			continue
		}
		if _dgbc.Name.Local == "\u0070a\u0072\u0065\u006e\u0074\u0053\u0065t" {
			_fgce, _ebad := _f.ParseUint(_dgbc.Value, 10, 32)
			if _ebad != nil {
				return _ebad
			}
			_egdg := uint32(_fgce)
			_abd.ParentSetAttr = &_egdg
			continue
		}
		if _dgbc.Name.Local == "\u0064\u0065\u0066au\u006c\u0074\u004d\u0065\u006d\u0062\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_bddf, _acge := _dgbc.Value, error(nil)
			if _acge != nil {
				return _acge
			}
			_abd.DefaultMemberUniqueNameAttr = &_bddf
			continue
		}
		if _dgbc.Name.Local == "\u006de\u0061\u0073\u0075\u0072\u0065" {
			_cgfc, _cefcf := _f.ParseBool(_dgbc.Value)
			if _cefcf != nil {
				return _cefcf
			}
			_abd.MeasureAttr = &_cgfc
			continue
		}
		if _dgbc.Name.Local == "\u0075\u006e\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064" {
			_cae, _cbge := _f.ParseBool(_dgbc.Value)
			if _cbge != nil {
				return _cbge
			}
			_abd.UnbalancedAttr = &_cae
			continue
		}
		if _dgbc.Name.Local == "\u0061\u006c\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_bgea, _acgdg := _dgbc.Value, error(nil)
			if _acgdg != nil {
				return _acgdg
			}
			_abd.AllCaptionAttr = &_bgea
			continue
		}
		if _dgbc.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_dbgf, _eegdb := _f.ParseBool(_dgbc.Value)
			if _eegdb != nil {
				return _eegdb
			}
			_abd.HiddenAttr = &_dbgf
			continue
		}
		if _dgbc.Name.Local == "\u0061t\u0074\u0072\u0069\u0062\u0075\u0074e" {
			_ecgd, _gebd := _f.ParseBool(_dgbc.Value)
			if _gebd != nil {
				return _gebd
			}
			_abd.AttributeAttr = &_ecgd
			continue
		}
		if _dgbc.Name.Local == "\u0061\u006c\u006c\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_dde, _agde := _dgbc.Value, error(nil)
			if _agde != nil {
				return _agde
			}
			_abd.AllUniqueNameAttr = &_dde
			continue
		}
		if _dgbc.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_gdd, _fcf := _dgbc.Value, error(nil)
			if _fcf != nil {
				return _fcf
			}
			_abd.UniqueNameAttr = _gdd
			continue
		}
		if _dgbc.Name.Local == "\u006b\u0065\u0079A\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065" {
			_eddf, _cbdd := _f.ParseBool(_dgbc.Value)
			if _cbdd != nil {
				return _cbdd
			}
			_abd.KeyAttributeAttr = &_eddf
			continue
		}
	}
_dfbfa:
	for {
		_dbfe, _bgff := d.Token()
		if _bgff != nil {
			return _bgff
		}
		switch _cdbd := _dbfe.(type) {
		case _a.StartElement:
			switch _cdbd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_abd.FieldsUsage = NewCT_FieldsUsage()
				if _aaef := d.DecodeElement(_abd.FieldsUsage, &_cdbd); _aaef != nil {
					return _aaef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}:
				_abd.GroupLevels = NewCT_GroupLevels()
				if _afbe := d.DecodeElement(_abd.GroupLevels, &_cdbd); _afbe != nil {
					return _afbe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abd.ExtLst = NewCT_ExtensionList()
				if _dbcdc := d.DecodeElement(_abd.ExtLst, &_cdbd); _dbcdc != nil {
					return _dbcdc
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0020\u0025\u0076", _cdbd.Name)
				if _cgd := d.Skip(); _cgd != nil {
					return _cgd
				}
			}
		case _a.EndElement:
			break _dfbfa
		case _a.CharData:
		}
	}
	return nil
}
func (_aabece ST_CfType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_baegee := _a.Attr{}
	_baegee.Name = name
	switch _aabece {
	case ST_CfTypeUnset:
		_baegee.Value = ""
	case ST_CfTypeExpression:
		_baegee.Value = "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e"
	case ST_CfTypeCellIs:
		_baegee.Value = "\u0063\u0065\u006c\u006c\u0049\u0073"
	case ST_CfTypeColorScale:
		_baegee.Value = "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"
	case ST_CfTypeDataBar:
		_baegee.Value = "\u0064a\u0074\u0061\u0042\u0061\u0072"
	case ST_CfTypeIconSet:
		_baegee.Value = "\u0069c\u006f\u006e\u0053\u0065\u0074"
	case ST_CfTypeTop10:
		_baegee.Value = "\u0074\u006f\u00701\u0030"
	case ST_CfTypeUniqueValues:
		_baegee.Value = "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case ST_CfTypeDuplicateValues:
		_baegee.Value = "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case ST_CfTypeContainsText:
		_baegee.Value = "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_CfTypeNotContainsText:
		_baegee.Value = "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_CfTypeBeginsWith:
		_baegee.Value = "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case ST_CfTypeEndsWith:
		_baegee.Value = "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case ST_CfTypeContainsBlanks:
		_baegee.Value = "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case ST_CfTypeNotContainsBlanks:
		_baegee.Value = "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case ST_CfTypeContainsErrors:
		_baegee.Value = "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case ST_CfTypeNotContainsErrors:
		_baegee.Value = "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case ST_CfTypeTimePeriod:
		_baegee.Value = "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_CfTypeAboveAverage:
		_baegee.Value = "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	}
	return _baegee, nil
}

const (
	ST_VolValueTypeUnset ST_VolValueType = 0
	ST_VolValueTypeB     ST_VolValueType = 1
	ST_VolValueTypeN     ST_VolValueType = 2
	ST_VolValueTypeE     ST_VolValueType = 3
	ST_VolValueTypeS     ST_VolValueType = 4
)

func NewCT_MetadataStrings() *CT_MetadataStrings { _gfegb := &CT_MetadataStrings{}; return _gfegb }

type CT_CellSmartTag struct {

	// Smart Tag Type Index
	TypeAttr uint32

	// Deleted
	DeletedAttr *bool

	// XML Based
	XmlBasedAttr *bool

	// Smart Tag Properties
	CellSmartTagPr []*CT_CellSmartTagPr
}

// ValidateWithPath validates the CT_SmartTagTypes and its children, prefixing error messages with path
func (_bfacb *CT_SmartTagTypes) ValidateWithPath(path string) error {
	for _gccgba, _afabf := range _bfacb.SmartTagType {
		if _dcdaea := _afabf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053ma\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u005b\u0025\u0064\u005d", path, _gccgba)); _dcdaea != nil {
			return _dcdaea
		}
	}
	return nil
}
func NewCT_MeasureDimensionMap() *CT_MeasureDimensionMap {
	_cfde := &CT_MeasureDimensionMap{}
	return _cfde
}
func (_ffec *CT_CellXfs) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ffec.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ffec.CountAttr)})
	}
	e.EncodeToken(start)
	_gegbf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ax\u0066"}}
	for _, _bgbf := range _ffec.Xf {
		e.EncodeElement(_bgbf, _gegbf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gdagfb ST_SheetViewType) ValidateWithPath(path string) error {
	switch _gdagfb {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdagfb))
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalRow and its children, prefixing error messages with path
func (_egcfa *CT_ExternalRow) ValidateWithPath(path string) error {
	for _ebeeg, _cbfcd := range _egcfa.Cell {
		if _eccf := _cbfcd.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0043\u0065\u006c\u006c\u005b\u0025\u0064\u005d", path, _ebeeg)); _eccf != nil {
			return _eccf
		}
	}
	return nil
}
func (_fddgb *ST_TextVAlign) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fddgb = 0
	case "\u0074\u006f\u0070":
		*_fddgb = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_fddgb = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d":
		*_fddgb = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_fddgb = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_fddgb = 5
	}
	return nil
}
func (_agddef ST_CellFormulaType) ValidateWithPath(path string) error {
	switch _agddef {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agddef))
	}
	return nil
}

const (
	ST_PatternTypeUnset           ST_PatternType = 0
	ST_PatternTypeNone            ST_PatternType = 1
	ST_PatternTypeSolid           ST_PatternType = 2
	ST_PatternTypeMediumGray      ST_PatternType = 3
	ST_PatternTypeDarkGray        ST_PatternType = 4
	ST_PatternTypeLightGray       ST_PatternType = 5
	ST_PatternTypeDarkHorizontal  ST_PatternType = 6
	ST_PatternTypeDarkVertical    ST_PatternType = 7
	ST_PatternTypeDarkDown        ST_PatternType = 8
	ST_PatternTypeDarkUp          ST_PatternType = 9
	ST_PatternTypeDarkGrid        ST_PatternType = 10
	ST_PatternTypeDarkTrellis     ST_PatternType = 11
	ST_PatternTypeLightHorizontal ST_PatternType = 12
	ST_PatternTypeLightVertical   ST_PatternType = 13
	ST_PatternTypeLightDown       ST_PatternType = 14
	ST_PatternTypeLightUp         ST_PatternType = 15
	ST_PatternTypeLightGrid       ST_PatternType = 16
	ST_PatternTypeLightTrellis    ST_PatternType = 17
	ST_PatternTypeGray125         ST_PatternType = 18
	ST_PatternTypeGray0625        ST_PatternType = 19
)

func (_ffbfe *CT_Set) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aeeab := range start.Attr {
		if _aeeab.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dagdgc, _ccdbb := _f.ParseUint(_aeeab.Value, 10, 32)
			if _ccdbb != nil {
				return _ccdbb
			}
			_ceebg := uint32(_dagdgc)
			_ffbfe.CountAttr = &_ceebg
			continue
		}
		if _aeeab.Name.Local == "\u006da\u0078\u0052\u0061\u006e\u006b" {
			_cdabgd, _ececeb := _f.ParseInt(_aeeab.Value, 10, 32)
			if _ececeb != nil {
				return _ececeb
			}
			_ffbfe.MaxRankAttr = int32(_cdabgd)
			continue
		}
		if _aeeab.Name.Local == "\u0073\u0065\u0074\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e" {
			_cdcc, _befdcc := _aeeab.Value, error(nil)
			if _befdcc != nil {
				return _befdcc
			}
			_ffbfe.SetDefinitionAttr = _cdcc
			continue
		}
		if _aeeab.Name.Local == "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065" {
			_ffbfe.SortTypeAttr.UnmarshalXMLAttr(_aeeab)
			continue
		}
		if _aeeab.Name.Local == "q\u0075\u0065\u0072\u0079\u0046\u0061\u0069\u006c\u0065\u0064" {
			_bdgfee, _dbfgb := _f.ParseBool(_aeeab.Value)
			if _dbfgb != nil {
				return _dbfgb
			}
			_ffbfe.QueryFailedAttr = &_bdgfee
			continue
		}
	}
_dgbdg:
	for {
		_dcebagf, _febaf := d.Token()
		if _febaf != nil {
			return _febaf
		}
		switch _ebbgb := _dcebagf.(type) {
		case _a.StartElement:
			switch _ebbgb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_aaecg := NewCT_Tuples()
				if _edffcad := d.DecodeElement(_aaecg, &_ebbgb); _edffcad != nil {
					return _edffcad
				}
				_ffbfe.Tpls = append(_ffbfe.Tpls, _aaecg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}:
				_ffbfe.SortByTuple = NewCT_Tuples()
				if _ccbbd := d.DecodeElement(_ffbfe.SortByTuple, &_ebbgb); _ccbbd != nil {
					return _ccbbd
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0065\u0074\u0020\u0025\u0076", _ebbgb.Name)
				if _cdcede := d.Skip(); _cdcede != nil {
					return _cdcede
				}
			}
		case _a.EndElement:
			break _dgbdg
		case _a.CharData:
		}
	}
	return nil
}

type CT_TableStyleElement struct {

	// Table Style Type
	TypeAttr ST_TableStyleType

	// Band Size
	SizeAttr *uint32

	// Formatting Id
	DxfIdAttr *uint32
}

func NewCT_Comment() *CT_Comment     { _afafb := &CT_Comment{}; _afafb.Text = NewCT_Rst(); return _afafb }
func NewCT_Revisions() *CT_Revisions { _ecffgd := &CT_Revisions{}; return _ecffgd }
func (_dfdf *ST_FileType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dfdf = 0
	case "\u006d\u0061\u0063":
		*_dfdf = 1
	case "\u0077\u0069\u006e":
		*_dfdf = 2
	case "\u0064\u006f\u0073":
		*_dfdf = 3
	case "\u006c\u0069\u006e":
		*_dfdf = 4
	case "\u006f\u0074\u0068e\u0072":
		*_dfdf = 5
	}
	return nil
}
func (_cdbca ST_DvAspect) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cdbca.String(), start)
}
func NewCT_DataValidation() *CT_DataValidation { _beafb := &CT_DataValidation{}; return _beafb }

// Validate validates the CT_CellProtection and its children
func (_gafdd *CT_CellProtection) Validate() error {
	return _gafdd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e")
}
func (_bfdg *CT_BorderPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebc := range start.Attr {
		if _ebc.Name.Local == "\u0073\u0074\u0079l\u0065" {
			_bfdg.StyleAttr.UnmarshalXMLAttr(_ebc)
			continue
		}
	}
_bdf:
	for {
		_fgf, _geg := d.Token()
		if _geg != nil {
			return _geg
		}
		switch _ebf := _fgf.(type) {
		case _a.StartElement:
			switch _ebf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_bfdg.Color = NewCT_Color()
				if _bccg := d.DecodeElement(_bfdg.Color, &_ebf); _bccg != nil {
					return _bccg
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072\u0020\u0025\u0076", _ebf.Name)
				if _cgac := d.Skip(); _cgac != nil {
					return _cgac
				}
			}
		case _a.EndElement:
			break _bdf
		case _a.CharData:
		}
	}
	return nil
}
func (_ecedb *ST_GradientType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ecedb = 0
	case "\u006c\u0069\u006e\u0065\u0061\u0072":
		*_ecedb = 1
	case "\u0070\u0061\u0074\u0068":
		*_ecedb = 2
	}
	return nil
}

// Validate validates the CT_NumFmts and its children
func (_bgaeg *CT_NumFmts) Validate() error {
	return _bgaeg.ValidateWithPath("\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006d\u0074\u0073")
}

const (
	ST_TextHAlignUnset       ST_TextHAlign = 0
	ST_TextHAlignLeft        ST_TextHAlign = 1
	ST_TextHAlignCenter      ST_TextHAlign = 2
	ST_TextHAlignRight       ST_TextHAlign = 3
	ST_TextHAlignJustify     ST_TextHAlign = 4
	ST_TextHAlignDistributed ST_TextHAlign = 5
)

type ST_TotalsRowFunction byte

func (_fbfag ST_Comments) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fbfag.String(), start)
}

// ValidateWithPath validates the Worksheet and its children, prefixing error messages with path
func (_fcebgc *Worksheet) ValidateWithPath(path string) error {
	if _dfgagg := _fcebgc.CT_Worksheet.ValidateWithPath(path); _dfgagg != nil {
		return _dfgagg
	}
	return nil
}
func (_eegbcc ST_CalcMode) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dceeca := _a.Attr{}
	_dceeca.Name = name
	switch _eegbcc {
	case ST_CalcModeUnset:
		_dceeca.Value = ""
	case ST_CalcModeManual:
		_dceeca.Value = "\u006d\u0061\u006e\u0075\u0061\u006c"
	case ST_CalcModeAuto:
		_dceeca.Value = "\u0061\u0075\u0074\u006f"
	case ST_CalcModeAutoNoTable:
		_dceeca.Value = "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065"
	}
	return _dceeca, nil
}
func (_ggadcf ST_CellType) String() string {
	switch _ggadcf {
	case 0:
		return ""
	case 1:
		return "\u0062"
	case 2:
		return "\u006e"
	case 3:
		return "\u0065"
	case 4:
		return "\u0073"
	case 5:
		return "\u0073\u0074\u0072"
	case 6:
		return "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r"
	}
	return ""
}
func (_agccb *CT_FieldUsage) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ecad := range start.Attr {
		if _ecad.Name.Local == "\u0078" {
			_abcbf, _gffbgg := _f.ParseInt(_ecad.Value, 10, 32)
			if _gffbgg != nil {
				return _gffbgg
			}
			_agccb.XAttr = int32(_abcbf)
			continue
		}
	}
	for {
		_becf, _dbbf := d.Token()
		if _dbbf != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046i\u0065l\u0064U\u0073\u0061\u0067\u0065\u003a\u0020\u0025s", _dbbf)
		}
		if _cedb, _afagg := _becf.(_a.EndElement); _afagg && _cedb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetCalcPr and its children, prefixing error messages with path
func (_dffda *CT_SheetCalcPr) ValidateWithPath(path string) error { return nil }

type CT_PivotFilters struct {

	// Pivot Filter Count
	CountAttr *uint32

	// PivotTable Advanced Filter
	Filter []*CT_PivotFilter
}
type CT_PivotAreaReference struct {

	// Field Index
	FieldAttr *uint32

	// Item Index Count
	CountAttr *uint32

	// Selected
	SelectedAttr *bool

	// Positional Reference
	ByPositionAttr *bool

	// Relative Reference
	RelativeAttr *bool

	// Include Default Filter
	DefaultSubtotalAttr *bool

	// Include Sum Filter
	SumSubtotalAttr *bool

	// Include CountA Filter
	CountASubtotalAttr *bool

	// Include Average Filter
	AvgSubtotalAttr *bool

	// Include Maximum Filter
	MaxSubtotalAttr *bool

	// Include Minimum Filter
	MinSubtotalAttr *bool

	// Include Product Filter
	ProductSubtotalAttr *bool

	// Include Count Subtotal
	CountSubtotalAttr *bool

	// Include StdDev Filter
	StdDevSubtotalAttr *bool

	// Include StdDevP Filter
	StdDevPSubtotalAttr *bool

	// Include Var Filter
	VarSubtotalAttr *bool

	// Include VarP Filter
	VarPSubtotalAttr *bool

	// Field Item
	X      []*CT_Index
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the Users and its children, prefixing error messages with path
func (_ebcfc *Users) ValidateWithPath(path string) error {
	if _bcaddd := _ebcfc.CT_Users.ValidateWithPath(path); _bcaddd != nil {
		return _bcaddd
	}
	return nil
}

const (
	ST_CredMethodUnset      ST_CredMethod = 0
	ST_CredMethodIntegrated ST_CredMethod = 1
	ST_CredMethodNone       ST_CredMethod = 2
	ST_CredMethodStored     ST_CredMethod = 3
	ST_CredMethodPrompt     ST_CredMethod = 4
)

type CT_CacheFields struct {

	// Field Count
	CountAttr *uint32

	// PivotCache Field
	CacheField []*CT_CacheField
}

// Validate validates the CT_OleObjects and its children
func (_dfafb *CT_OleObjects) Validate() error {
	return _dfafb.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073")
}
func (_edfdg *CT_DdeLink) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0064\u0065\u0053\u0065\u0072\u0076\u0069\u0063\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _edfdg.DdeServiceAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0064\u0065\u0054\u006f\u0070\u0069\u0063"}, Value: _fc.Sprintf("\u0025\u0076", _edfdg.DdeTopicAttr)})
	e.EncodeToken(start)
	if _edfdg.DdeItems != nil {
		_baga := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_edfdg.DdeItems, _baga)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fedbba *StyleSheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fedbba.CT_Stylesheet = *NewCT_Stylesheet()
_caffc:
	for {
		_bcdeaa, _beeece := d.Token()
		if _beeece != nil {
			return _beeece
		}
		switch _acafe := _bcdeaa.(type) {
		case _a.StartElement:
			switch _acafe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}:
				_fedbba.NumFmts = NewCT_NumFmts()
				if _dbedc := d.DecodeElement(_fedbba.NumFmts, &_acafe); _dbedc != nil {
					return _dbedc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}:
				_fedbba.Fonts = NewCT_Fonts()
				if _dcdefe := d.DecodeElement(_fedbba.Fonts, &_acafe); _dcdefe != nil {
					return _dcdefe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}:
				_fedbba.Fills = NewCT_Fills()
				if _bfgba := d.DecodeElement(_fedbba.Fills, &_acafe); _bfgba != nil {
					return _bfgba
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}:
				_fedbba.Borders = NewCT_Borders()
				if _ecaba := d.DecodeElement(_fedbba.Borders, &_acafe); _ecaba != nil {
					return _ecaba
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}:
				_fedbba.CellStyleXfs = NewCT_CellStyleXfs()
				if _dbebc := d.DecodeElement(_fedbba.CellStyleXfs, &_acafe); _dbebc != nil {
					return _dbebc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}:
				_fedbba.CellXfs = NewCT_CellXfs()
				if _bggbd := d.DecodeElement(_fedbba.CellXfs, &_acafe); _bggbd != nil {
					return _bggbd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_fedbba.CellStyles = NewCT_CellStyles()
				if _bdbggd := d.DecodeElement(_fedbba.CellStyles, &_acafe); _bdbggd != nil {
					return _bdbggd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}:
				_fedbba.Dxfs = NewCT_Dxfs()
				if _gbcea := d.DecodeElement(_fedbba.Dxfs, &_acafe); _gbcea != nil {
					return _gbcea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_fedbba.TableStyles = NewCT_TableStyles()
				if _bcbceg := d.DecodeElement(_fedbba.TableStyles, &_acafe); _bcbceg != nil {
					return _bcbceg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}:
				_fedbba.Colors = NewCT_Colors()
				if _geddge := d.DecodeElement(_fedbba.Colors, &_acafe); _geddge != nil {
					return _geddge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fedbba.ExtLst = NewCT_ExtensionList()
				if _gdfge := d.DecodeElement(_fedbba.ExtLst, &_acafe); _gdfge != nil {
					return _gdfge
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0053\u0074\u0079l\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _acafe.Name)
				if _acbef := d.Skip(); _acbef != nil {
					return _acbef
				}
			}
		case _a.EndElement:
			break _caffc
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_Record() *CT_Record { _gffcc := &CT_Record{}; return _gffcc }

// ValidateWithPath validates the CT_PageFields and its children, prefixing error messages with path
func (_caceb *CT_PageFields) ValidateWithPath(path string) error {
	for _dcebb, _afabc := range _caceb.PageField {
		if _dbacb := _afabc.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0050\u0061\u0067e\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _dcebb)); _dbacb != nil {
			return _dbacb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Parameter and its children, prefixing error messages with path
func (_cbcfa *CT_Parameter) ValidateWithPath(path string) error {
	if _gcde := _cbcfa.ParameterTypeAttr.ValidateWithPath(path + "\u002fP\u0061r\u0061\u006d\u0065\u0074\u0065r\u0054\u0079p\u0065\u0041\u0074\u0074\u0072"); _gcde != nil {
		return _gcde
	}
	return nil
}
func NewPivotTableDefinition() *PivotTableDefinition {
	_aeebc := &PivotTableDefinition{}
	_aeebc.CT_pivotTableDefinition = *NewCT_pivotTableDefinition()
	return _aeebc
}
func (_fgfgdc *CT_Tables) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fgfgdc.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fgfgdc.CountAttr)})
	}
	e.EncodeToken(start)
	if _fgfgdc.M != nil {
		_caacb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _dadac := range _fgfgdc.M {
			e.EncodeElement(_dadac, _caacb)
		}
	}
	if _fgfgdc.S != nil {
		_cgfff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _cgceb := range _fgfgdc.S {
			e.EncodeElement(_cgceb, _cgfff)
		}
	}
	if _fgfgdc.X != nil {
		_gccdgf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _aggbb := range _fgfgdc.X {
			e.EncodeElement(_aggbb, _gccdgf)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DataField and its children
func (_daggc *CT_DataField) Validate() error {
	return _daggc.ValidateWithPath("\u0043\u0054\u005fD\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064")
}
func NewCT_SmartTagPr() *CT_SmartTagPr { _edfbga := &CT_SmartTagPr{}; return _edfbga }
func (_bafdac *CT_RevisionFormatting) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebffg := range start.Attr {
		if _ebffg.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_eabff, _gfggc := _f.ParseUint(_ebffg.Value, 10, 32)
			if _gfggc != nil {
				return _gfggc
			}
			_bafdac.SheetIdAttr = uint32(_eabff)
			continue
		}
		if _ebffg.Name.Local == "\u0078\u0066\u0044x\u0066" {
			_dgadb, _cfabf := _f.ParseBool(_ebffg.Value)
			if _cfabf != nil {
				return _cfabf
			}
			_bafdac.XfDxfAttr = &_dgadb
			continue
		}
		if _ebffg.Name.Local == "\u0073" {
			_feacb, _fdggd := _f.ParseBool(_ebffg.Value)
			if _fdggd != nil {
				return _fdggd
			}
			_bafdac.SAttr = &_feacb
			continue
		}
		if _ebffg.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_fcbaf, _acebf := ParseSliceST_Sqref(_ebffg.Value)
			if _acebf != nil {
				return _acebf
			}
			_bafdac.SqrefAttr = _fcbaf
			continue
		}
		if _ebffg.Name.Local == "\u0073\u0074\u0061r\u0074" {
			_deacf, _baedg := _f.ParseUint(_ebffg.Value, 10, 32)
			if _baedg != nil {
				return _baedg
			}
			_dbdgbc := uint32(_deacf)
			_bafdac.StartAttr = &_dbdgbc
			continue
		}
		if _ebffg.Name.Local == "\u006c\u0065\u006e\u0067\u0074\u0068" {
			_bbceb, _acbbba := _f.ParseUint(_ebffg.Value, 10, 32)
			if _acbbba != nil {
				return _acbbba
			}
			_agcfc := uint32(_bbceb)
			_bafdac.LengthAttr = &_agcfc
			continue
		}
	}
_bcggag:
	for {
		_gddgd, _ggbda := d.Token()
		if _ggbda != nil {
			return _ggbda
		}
		switch _cdbfb := _gddgd.(type) {
		case _a.StartElement:
			switch _cdbfb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}:
				_bafdac.Dxf = NewCT_Dxf()
				if _ecgge := d.DecodeElement(_bafdac.Dxf, &_cdbfb); _ecgge != nil {
					return _ecgge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bafdac.ExtLst = NewCT_ExtensionList()
				if _gfecg := d.DecodeElement(_bafdac.ExtLst, &_cdbfb); _gfecg != nil {
					return _gfecg
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067\u0020\u0025\u0076", _cdbfb.Name)
				if _efdcee := d.Skip(); _efdcee != nil {
					return _efdcee
				}
			}
		case _a.EndElement:
			break _bcggag
		case _a.CharData:
		}
	}
	return nil
}
func (_ddef *CT_ConditionalFormats) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ddef.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ddef.CountAttr)})
	}
	e.EncodeToken(start)
	_abdeg := _a.StartElement{Name: _a.Name{Local: "m\u0061:\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074"}}
	for _, _cecb := range _ddef.ConditionalFormat {
		e.EncodeElement(_cecb, _abdeg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cadaec *CT_TextFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dadeg := range start.Attr {
		if _dadeg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aecbg, _fddfbb := _f.ParseUint(_dadeg.Value, 10, 32)
			if _fddfbb != nil {
				return _fddfbb
			}
			_babfag := uint32(_aecbg)
			_cadaec.CountAttr = &_babfag
			continue
		}
	}
_bcedg:
	for {
		_gebgf, _aacee := d.Token()
		if _aacee != nil {
			return _aacee
		}
		switch _dfgdfe := _gebgf.(type) {
		case _a.StartElement:
			switch _dfgdfe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074e\u0078\u0074\u0046\u0069\u0065\u006cd"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074e\u0078\u0074\u0046\u0069\u0065\u006cd"}:
				_cgdca := NewCT_TextField()
				if _bccfe := d.DecodeElement(_cgdca, &_dfgdfe); _bccfe != nil {
					return _bccfe
				}
				_cadaec.TextField = append(_cadaec.TextField, _cgdca)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054e\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _dfgdfe.Name)
				if _beadff := d.Skip(); _beadff != nil {
					return _beadff
				}
			}
		case _a.EndElement:
			break _bcedg
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_VolMain and its children
func (_gdecc *CT_VolMain) Validate() error {
	return _gdecc.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u004d\u0061\u0069\u006e")
}
func NewCT_ExternalDefinedNames() *CT_ExternalDefinedNames {
	_cecd := &CT_ExternalDefinedNames{}
	return _cecd
}

// ValidateWithPath validates the CT_GroupMember and its children, prefixing error messages with path
func (_ceceg *CT_GroupMember) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_QueryCache and its children
func (_aeggc *CT_QueryCache) Validate() error {
	return _aeggc.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065")
}

const (
	ST_VisibilityUnset      ST_Visibility = 0
	ST_VisibilityVisible    ST_Visibility = 1
	ST_VisibilityHidden     ST_Visibility = 2
	ST_VisibilityVeryHidden ST_Visibility = 3
)

func (_afdbgc *CT_SheetProtection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _afdbgc.PasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_afdbgc.PasswordAttr)})
	}
	if _afdbgc.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_afdbgc.AlgorithmNameAttr)})
	}
	if _afdbgc.HashValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _fc.Sprintf("\u0025\u0076", *_afdbgc.HashValueAttr)})
	}
	if _afdbgc.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _fc.Sprintf("\u0025\u0076", *_afdbgc.SaltValueAttr)})
	}
	if _afdbgc.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _fc.Sprintf("\u0025\u0076", *_afdbgc.SpinCountAttr)})
	}
	if _afdbgc.SheetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.SheetAttr))})
	}
	if _afdbgc.ObjectsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fb\u006a\u0065\u0063\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.ObjectsAttr))})
	}
	if _afdbgc.ScenariosAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.ScenariosAttr))})
	}
	if _afdbgc.FormatCellsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "f\u006f\u0072\u006d\u0061\u0074\u0043\u0065\u006c\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.FormatCellsAttr))})
	}
	if _afdbgc.FormatColumnsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.FormatColumnsAttr))})
	}
	if _afdbgc.FormatRowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0052\u006f\u0077\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.FormatRowsAttr))})
	}
	if _afdbgc.InsertColumnsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.InsertColumnsAttr))})
	}
	if _afdbgc.InsertRowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.InsertRowsAttr))})
	}
	if _afdbgc.InsertHyperlinksAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006es\u0065\u0072\u0074H\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.InsertHyperlinksAttr))})
	}
	if _afdbgc.DeleteColumnsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.DeleteColumnsAttr))})
	}
	if _afdbgc.DeleteRowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f\u0077\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.DeleteRowsAttr))})
	}
	if _afdbgc.SelectLockedCellsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u006c\u0065\u0063\u0074\u004c\u006f\u0063\u006b\u0065\u0064C\u0065\u006c\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.SelectLockedCellsAttr))})
	}
	if _afdbgc.SortAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0072\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.SortAttr))})
	}
	if _afdbgc.AutoFilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.AutoFilterAttr))})
	}
	if _afdbgc.PivotTablesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.PivotTablesAttr))})
	}
	if _afdbgc.SelectUnlockedCellsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u006c\u0065ct\u0055\u006e\u006c\u006f\u0063\u006b\u0065\u0064\u0043\u0065\u006c\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdbgc.SelectUnlockedCellsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bacac ST_SortMethod) ValidateWithPath(path string) error {
	switch _bacac {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bacac))
	}
	return nil
}
func (_deaeg ST_FieldSortType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_deaeg.String(), start)
}
func (_gcedge ST_VolDepType) ValidateWithPath(path string) error {
	switch _gcedge {
	case 0, 1, 2:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcedge))
	}
	return nil
}
func (_afeeb ST_DataValidationOperator) ValidateWithPath(path string) error {
	switch _afeeb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afeeb))
	}
	return nil
}
func (_cafcab *CT_TableColumns) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ccggd := range start.Attr {
		if _ccggd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_edebe, _gdaff := _f.ParseUint(_ccggd.Value, 10, 32)
			if _gdaff != nil {
				return _gdaff
			}
			_dbebg := uint32(_edebe)
			_cafcab.CountAttr = &_dbebg
			continue
		}
	}
_dcfda:
	for {
		_aadgac, _ebacae := d.Token()
		if _ebacae != nil {
			return _ebacae
		}
		switch _dggae := _aadgac.(type) {
		case _a.StartElement:
			switch _dggae.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}:
				_fbcbfd := NewCT_TableColumn()
				if _gcdagf := d.DecodeElement(_fbcbfd, &_dggae); _gcdagf != nil {
					return _gcdagf
				}
				_cafcab.TableColumn = append(_cafcab.TableColumn, _fbcbfd)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0020\u0025\u0076", _dggae.Name)
				if _agfgc := d.Skip(); _agfgc != nil {
					return _agfgc
				}
			}
		case _a.EndElement:
			break _dcfda
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_QueryTableDeletedFields and its children, prefixing error messages with path
func (_gdfcb *CT_QueryTableDeletedFields) ValidateWithPath(path string) error {
	for _bddfd, _fdecd := range _gdfcb.DeletedField {
		if _cgdbab := _fdecd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0044el\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _bddfd)); _cgdbab != nil {
			return _cgdbab
		}
	}
	return nil
}
func (_bagfb ST_Scope) Validate() error { return _bagfb.ValidateWithPath("") }

// ValidateWithPath validates the CT_GroupLevels and its children, prefixing error messages with path
func (_bcaf *CT_GroupLevels) ValidateWithPath(path string) error {
	for _cdebf, _cfece := range _bcaf.GroupLevel {
		if _dgffd := _cfece.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065l\u005b\u0025\u0064\u005d", path, _cdebf)); _dgffd != nil {
			return _dgffd
		}
	}
	return nil
}

type CT_FieldUsage struct {

	// Field Index
	XAttr int32
}

func NewCT_Reviewed() *CT_Reviewed { _gbbgaf := &CT_Reviewed{}; return _gbbgaf }
func (_gbeaa *ST_Type) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fdaedf, _aabbe := d.Token()
	if _aabbe != nil {
		return _aabbe
	}
	if _ggfbe, _fecge := _fdaedf.(_a.EndElement); _fecge && _ggfbe.Name == start.Name {
		*_gbeaa = 1
		return nil
	}
	if _agega, _fgeccb := _fdaedf.(_a.CharData); !_fgeccb {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdaedf)
	} else {
		switch string(_agega) {
		case "":
			*_gbeaa = 0
		case "\u006e\u006f\u006e\u0065":
			*_gbeaa = 1
		case "\u0061\u006c\u006c":
			*_gbeaa = 2
		case "\u0072\u006f\u0077":
			*_gbeaa = 3
		case "\u0063\u006f\u006c\u0075\u006d\u006e":
			*_gbeaa = 4
		}
	}
	_fdaedf, _aabbe = d.Token()
	if _aabbe != nil {
		return _aabbe
	}
	if _gaccgg, _dafea := _fdaedf.(_a.EndElement); _dafea && _gaccgg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdaedf)
}
func (_cfff *CT_Comment) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _cfff.RefAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _cfff.AuthorIdAttr)})
	if _cfff.GuidAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_cfff.GuidAttr)})
	}
	if _cfff.ShapeIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_cfff.ShapeIdAttr)})
	}
	e.EncodeToken(start)
	_baabg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0074\u0065\u0078\u0074"}}
	e.EncodeElement(_cfff.Text, _baabg)
	if _cfff.CommentPr != nil {
		_abba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ac\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072"}}
		e.EncodeElement(_cfff.CommentPr, _abba)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the Table and its children
func (_eagfff *Table) Validate() error { return _eagfff.ValidateWithPath("\u0054\u0061\u0062l\u0065") }
func (_agcgb *CT_OutlinePr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afcfb := range start.Attr {
		if _afcfb.Name.Local == "a\u0070\u0070\u006c\u0079\u0053\u0074\u0079\u006c\u0065\u0073" {
			_daeec, _aagbd := _f.ParseBool(_afcfb.Value)
			if _aagbd != nil {
				return _aagbd
			}
			_agcgb.ApplyStylesAttr = &_daeec
			continue
		}
		if _afcfb.Name.Local == "\u0073\u0075\u006dm\u0061\u0072\u0079\u0042\u0065\u006c\u006f\u0077" {
			_cbbcg, _gddca := _f.ParseBool(_afcfb.Value)
			if _gddca != nil {
				return _gddca
			}
			_agcgb.SummaryBelowAttr = &_cbbcg
			continue
		}
		if _afcfb.Name.Local == "\u0073\u0075\u006dm\u0061\u0072\u0079\u0052\u0069\u0067\u0068\u0074" {
			_edfdbb, _aedbb := _f.ParseBool(_afcfb.Value)
			if _aedbb != nil {
				return _aedbb
			}
			_agcgb.SummaryRightAttr = &_edfdbb
			continue
		}
		if _afcfb.Name.Local == "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073" {
			_gedeg, _dcgde := _f.ParseBool(_afcfb.Value)
			if _dcgde != nil {
				return _dcgde
			}
			_agcgb.ShowOutlineSymbolsAttr = &_gedeg
			continue
		}
	}
	for {
		_abgac, _gddab := d.Token()
		if _gddab != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0075t\u006c\u0069\u006e\u0065\u0050\u0072\u003a\u0020\u0025\u0073", _gddab)
		}
		if _bcgb, _accfa := _abgac.(_a.EndElement); _accfa && _bcgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aabfa *CT_Fonts) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aabfa.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_aabfa.CountAttr)})
	}
	e.EncodeToken(start)
	if _aabfa.Font != nil {
		_gdaed := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0066\u006f\u006e\u0074"}}
		for _, _gcfb := range _aabfa.Font {
			e.EncodeElement(_gcfb, _gdaed)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_feaga ST_PhoneticType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_feaga.String(), start)
}
func (_bedge *CT_WorksheetSource) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bedge.RefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_bedge.RefAttr)})
	}
	if _bedge.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_bedge.NameAttr)})
	}
	if _bedge.SheetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bedge.SheetAttr)})
	}
	if _bedge.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bedge.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cbffc ST_MdxSetOrder) ValidateWithPath(path string) error {
	switch _cbffc {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbffc))
	}
	return nil
}
func (_begdgf *CT_PivotAreaReferences) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _begdgf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_begdgf.CountAttr)})
	}
	e.EncodeToken(start)
	_cbded := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ar\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065"}}
	for _, _cceeca := range _begdgf.Reference {
		e.EncodeElement(_cceeca, _cbded)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the Chartsheet and its children
func (_fabecf *Chartsheet) Validate() error {
	return _fabecf.ValidateWithPath("\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074")
}

// Validate validates the CT_PageSetup and its children
func (_ecceg *CT_PageSetup) Validate() error {
	return _ecceg.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070")
}
func NewCT_PageSetUpPr() *CT_PageSetUpPr { _bffdb := &CT_PageSetUpPr{}; return _bffdb }
func (_dedcg ST_Pane) ValidateWithPath(path string) error {
	switch _dedcg {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dedcg))
	}
	return nil
}
func NewCT_Metadata() *CT_Metadata         { _cegee := &CT_Metadata{}; return _cegee }
func NewCT_CustomFilter() *CT_CustomFilter { _gbab := &CT_CustomFilter{}; return _gbab }

type CT_Metadata struct {

	// Metadata Types Collection
	MetadataTypes *CT_MetadataTypes

	// Metadata String Store
	MetadataStrings *CT_MetadataStrings

	// MDX Metadata Information
	MdxMetadata *CT_MdxMetadata

	// Future Metadata
	FutureMetadata []*CT_FutureMetadata

	// Cell Metadata
	CellMetadata *CT_MetadataBlocks

	// Value Metadata
	ValueMetadata *CT_MetadataBlocks

	// Future Feature Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_SheetData() *CT_SheetData { _ebfbad := &CT_SheetData{}; return _ebfbad }

// ValidateWithPath validates the Comments and its children, prefixing error messages with path
func (_abeaf *Comments) ValidateWithPath(path string) error {
	if _cffeb := _abeaf.CT_Comments.ValidateWithPath(path); _cffeb != nil {
		return _cffeb
	}
	return nil
}

// Validate validates the CT_ExtensionList and its children
func (_bbgdg *CT_ExtensionList) Validate() error {
	return _bbgdg.ValidateWithPath("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_PhoneticRun and its children
func (_ffbaa *CT_PhoneticRun) Validate() error {
	return _ffbaa.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074i\u0063\u0052\u0075\u006e")
}

type CT_PivotHierarchies struct {

	// OLAP Hierarchy Count
	CountAttr *uint32

	// OLAP Hierarchy
	PivotHierarchy []*CT_PivotHierarchy
}

func NewCT_Filter() *CT_Filter { _gbbg := &CT_Filter{}; return _gbbg }

// ValidateWithPath validates the CT_DefinedNames and its children, prefixing error messages with path
func (_fddf *CT_DefinedNames) ValidateWithPath(path string) error {
	for _fabef, _gecfc := range _fddf.DefinedName {
		if _bccgc := _gecfc.ValidateWithPath(_fc.Sprintf("\u0025s\u002fD\u0065\u0066\u0069\u006e\u0065d\u004e\u0061m\u0065\u005b\u0025\u0064\u005d", path, _fabef)); _bccgc != nil {
			return _bccgc
		}
	}
	return nil
}

// Validate validates the CT_PivotCaches and its children
func (_afeff *CT_PivotCaches) Validate() error {
	return _afeff.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073")
}
func (_abebb *CT_DrawingHF) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _abebb.IdAttr)})
	if _abebb.LhoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0068\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.LhoAttr)})
	}
	if _abebb.LheAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0068\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.LheAttr)})
	}
	if _abebb.LhfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0068\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.LhfAttr)})
	}
	if _abebb.ChoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0068\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.ChoAttr)})
	}
	if _abebb.CheAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0068\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.CheAttr)})
	}
	if _abebb.ChfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0068\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.ChfAttr)})
	}
	if _abebb.RhoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0068\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.RhoAttr)})
	}
	if _abebb.RheAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0068\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.RheAttr)})
	}
	if _abebb.RhfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0068\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.RhfAttr)})
	}
	if _abebb.LfoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0066\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.LfoAttr)})
	}
	if _abebb.LfeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0066\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.LfeAttr)})
	}
	if _abebb.LffAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0066\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.LffAttr)})
	}
	if _abebb.CfoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0066\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.CfoAttr)})
	}
	if _abebb.CfeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0066\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.CfeAttr)})
	}
	if _abebb.CffAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0066\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.CffAttr)})
	}
	if _abebb.RfoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0066\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.RfoAttr)})
	}
	if _abebb.RfeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0066\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.RfeAttr)})
	}
	if _abebb.RffAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0066\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_abebb.RffAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_FutureMetadataBlock() *CT_FutureMetadataBlock {
	_eedac := &CT_FutureMetadataBlock{}
	return _eedac
}

type CT_BooleanProperty struct {

	// Value
	ValAttr *bool
}

func (_aagccc *CT_ServerFormat) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aagccc.CultureAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063u\u006c\u0074\u0075\u0072\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_aagccc.CultureAttr)})
	}
	if _aagccc.FormatAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_aagccc.FormatAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dcbbc *CT_TablePart) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _dcbbc.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Color and its children
func (_bgec *CT_Color) Validate() error {
	return _bgec.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072")
}

type CT_I struct {

	// Item Type
	TAttr ST_ItemType

	// Repeated Items Count
	RAttr *uint32

	// Data Field Index
	IAttr *uint32

	// Row / Column Item Index
	X []*CT_X
}

// Validate validates the CT_TableStyle and its children
func (_ebcfa *CT_TableStyle) Validate() error {
	return _ebcfa.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065")
}
func (_baeb *CT_CacheSource) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_baeb.TypeAttr = ST_SourceType(1)
	for _, _ebab := range start.Attr {
		if _ebab.Name.Local == "\u0074\u0079\u0070\u0065" {
			_baeb.TypeAttr.UnmarshalXMLAttr(_ebab)
			continue
		}
		if _ebab.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_afgf, _beg := _f.ParseUint(_ebab.Value, 10, 32)
			if _beg != nil {
				return _beg
			}
			_dgg := uint32(_afgf)
			_baeb.ConnectionIdAttr = &_dgg
			continue
		}
	}
_dcb:
	for {
		_ecdc, _gdf := d.Token()
		if _gdf != nil {
			return _gdf
		}
		switch _gcgf := _ecdc.(type) {
		case _a.StartElement:
			switch _gcgf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}:
				_baeb.WorksheetSource = NewCT_WorksheetSource()
				if _edga := d.DecodeElement(_baeb.WorksheetSource, &_gcgf); _edga != nil {
					return _edga
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}:
				_baeb.Consolidation = NewCT_Consolidation()
				if _egbf := d.DecodeElement(_baeb.Consolidation, &_gcgf); _egbf != nil {
					return _egbf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_baeb.ExtLst = NewCT_ExtensionList()
				if _fcgc := d.DecodeElement(_baeb.ExtLst, &_gcgf); _fcgc != nil {
					return _fcgc
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053\u006fu\u0072c\u0065\u0020\u0025\u0076", _gcgf.Name)
				if _gbdg := d.Skip(); _gbdg != nil {
					return _gbdg
				}
			}
		case _a.EndElement:
			break _dcb
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_Borders() *CT_Borders       { _abe := &CT_Borders{}; return _abe }
func NewCT_GroupLevel() *CT_GroupLevel { _fbff := &CT_GroupLevel{}; return _fbff }

// Validate validates the CT_ConditionalFormat and its children
func (_fbcb *CT_ConditionalFormat) Validate() error {
	return _fbcb.ValidateWithPath("C\u0054_\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074")
}

type ST_SheetViewType byte

// Validate validates the CT_IconFilter and its children
func (_gccdg *CT_IconFilter) Validate() error {
	return _gccdg.ValidateWithPath("\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072")
}
func (_aebbgc ST_MdxSetOrder) Validate() error { return _aebbgc.ValidateWithPath("") }

// ValidateWithPath validates the CT_VolTopic and its children, prefixing error messages with path
func (_gcdfg *CT_VolTopic) ValidateWithPath(path string) error {
	if _ceega := _gcdfg.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _ceega != nil {
		return _ceega
	}
	for _ebadc, _ebfadc := range _gcdfg.Tr {
		if _eeddd := _ebfadc.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0054\u0072\u005b\u0025\u0064]", path, _ebadc)); _eeddd != nil {
			return _eeddd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotTableStyle and its children, prefixing error messages with path
func (_cdbeb *CT_PivotTableStyle) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_XmlColumnPr and its children, prefixing error messages with path
func (_bggea *CT_XmlColumnPr) ValidateWithPath(path string) error {
	if _bggea.ExtLst != nil {
		if _dcagd := _bggea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcagd != nil {
			return _dcagd
		}
	}
	return nil
}

type CT_PrintOptions struct {

	// Horizontal Centered
	HorizontalCenteredAttr *bool

	// Vertical Centered
	VerticalCenteredAttr *bool

	// Print Headings
	HeadingsAttr *bool

	// Print Grid Lines
	GridLinesAttr *bool

	// Grid Lines Set
	GridLinesSetAttr *bool
}

const (
	ST_DataValidationImeModeUnset        ST_DataValidationImeMode = 0
	ST_DataValidationImeModeNoControl    ST_DataValidationImeMode = 1
	ST_DataValidationImeModeOff          ST_DataValidationImeMode = 2
	ST_DataValidationImeModeOn           ST_DataValidationImeMode = 3
	ST_DataValidationImeModeDisabled     ST_DataValidationImeMode = 4
	ST_DataValidationImeModeHiragana     ST_DataValidationImeMode = 5
	ST_DataValidationImeModeFullKatakana ST_DataValidationImeMode = 6
	ST_DataValidationImeModeHalfKatakana ST_DataValidationImeMode = 7
	ST_DataValidationImeModeFullAlpha    ST_DataValidationImeMode = 8
	ST_DataValidationImeModeHalfAlpha    ST_DataValidationImeMode = 9
	ST_DataValidationImeModeFullHangul   ST_DataValidationImeMode = 10
	ST_DataValidationImeModeHalfHangul   ST_DataValidationImeMode = 11
)

func (_adgcd *ST_PrintError) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_adgcd = 0
	case "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d":
		*_adgcd = 1
	case "\u0062\u006c\u0061n\u006b":
		*_adgcd = 2
	case "\u0064\u0061\u0073\u0068":
		*_adgcd = 3
	case "\u004e\u0041":
		*_adgcd = 4
	}
	return nil
}

// ValidateWithPath validates the CT_CfRule and its children, prefixing error messages with path
func (_gadf *CT_CfRule) ValidateWithPath(path string) error {
	if _gfdb := _gadf.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gfdb != nil {
		return _gfdb
	}
	if _ggec := _gadf.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _ggec != nil {
		return _ggec
	}
	if _adga := _gadf.TimePeriodAttr.ValidateWithPath(path + "\u002fT\u0069m\u0065\u0050\u0065\u0072\u0069\u006f\u0064\u0041\u0074\u0074\u0072"); _adga != nil {
		return _adga
	}
	if _gadf.ColorScale != nil {
		if _fgcc := _gadf.ColorScale.ValidateWithPath(path + "/\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"); _fgcc != nil {
			return _fgcc
		}
	}
	if _gadf.DataBar != nil {
		if _cdbf := _gadf.DataBar.ValidateWithPath(path + "\u002f\u0044\u0061\u0074\u0061\u0042\u0061\u0072"); _cdbf != nil {
			return _cdbf
		}
	}
	if _gadf.IconSet != nil {
		if _bcdd := _gadf.IconSet.ValidateWithPath(path + "\u002f\u0049\u0063\u006f\u006e\u0053\u0065\u0074"); _bcdd != nil {
			return _bcdd
		}
	}
	if _gadf.ExtLst != nil {
		if _fccd := _gadf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fccd != nil {
			return _fccd
		}
	}
	return nil
}

// Validate validates the CT_DbPr and its children
func (_gfff *CT_DbPr) Validate() error {
	return _gfff.ValidateWithPath("\u0043T\u005f\u0044\u0062\u0050\u0072")
}
func (_badgd ST_VerticalAlignment) String() string {
	switch _badgd {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func NewCT_RElt() *CT_RElt { _aggae := &CT_RElt{}; return _aggae }

type ST_Sqref []string

// Validate validates the CT_RangeSets and its children
func (_beec *CT_RangeSets) Validate() error {
	return _beec.ValidateWithPath("\u0043\u0054\u005fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073")
}
func (_gceed *CT_LegacyDrawing) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbcec := range start.Attr {
		if _fbcec.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fbcec.Name.Local == "\u0069\u0064" || _fbcec.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fbcec.Name.Local == "\u0069\u0064" {
			_fdbee, _fabg := _fbcec.Value, error(nil)
			if _fabg != nil {
				return _fabg
			}
			_gceed.IdAttr = _fdbee
			continue
		}
	}
	for {
		_cebgf, _ggbb := d.Token()
		if _ggbb != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0065\u0067\u0061c\u0079D\u0072\u0061\u0077\u0069\u006e\u0067\u003a \u0025\u0073", _ggbb)
		}
		if _ccccc, _bdaf := _cebgf.(_a.EndElement); _bdaf && _ccccc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_RgbColor and its children
func (_daefg *CT_RgbColor) Validate() error {
	return _daefg.ValidateWithPath("C\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}
func (_fcbec ST_PhoneticType) Validate() error { return _fcbec.ValidateWithPath("") }

// Validate validates the Headers and its children
func (_fabge *Headers) Validate() error {
	return _fabge.ValidateWithPath("\u0048e\u0061\u0064\u0065\u0072\u0073")
}

type PivotCacheDefinition struct{ CT_PivotCacheDefinition }

// ValidateWithPath validates the CT_RevisionCustomView and its children, prefixing error messages with path
func (_fafaf *CT_RevisionCustomView) ValidateWithPath(path string) error {
	if !_ae.ST_GuidPatternRe.MatchString(_fafaf.GuidAttr) {
		return _fc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ae.ST_GuidPatternRe, _fafaf.GuidAttr)
	}
	if _fafaf.ActionAttr == ST_RevisionActionUnset {
		return _fc.Errorf("\u0025\u0073\u002fAc\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072\u0020i\u0073 \u0061 \u006da\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _begde := _fafaf.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _begde != nil {
		return _begde
	}
	return nil
}
func (_gfaaa ST_PhoneticAlignment) ValidateWithPath(path string) error {
	switch _gfaaa {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfaaa))
	}
	return nil
}

// Validate validates the CT_RElt and its children
func (_acaef *CT_RElt) Validate() error {
	return _acaef.ValidateWithPath("\u0043T\u005f\u0052\u0045\u006c\u0074")
}

// Validate validates the CT_Connections and its children
func (_fafg *CT_Connections) Validate() error {
	return _fafg.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073")
}
func NewCT_CalculatedItem() *CT_CalculatedItem {
	_gagg := &CT_CalculatedItem{}
	_gagg.PivotArea = NewCT_PivotArea()
	return _gagg
}

type CT_XmlPr struct {

	// XML Map Id
	MapIdAttr uint32

	// XPath
	XpathAttr string

	// XML Data Type
	XmlDataTypeAttr string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_fedef *CT_Xf) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fedef.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fedef.NumFmtIdAttr)})
	}
	if _fedef.FontIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u006e\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fedef.FontIdAttr)})
	}
	if _fedef.FillIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006c\u006c\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fedef.FillIdAttr)})
	}
	if _fedef.BorderIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006f\u0072\u0064\u0065\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fedef.BorderIdAttr)})
	}
	if _fedef.XfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0066\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fedef.XfIdAttr)})
	}
	if _fedef.QuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fedef.QuotePrefixAttr))})
	}
	if _fedef.PivotButtonAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0069\u0076\u006f\u0074\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fedef.PivotButtonAttr))})
	}
	if _fedef.ApplyNumberFormatAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070\u006c\u0079\u004e\u0075\u006d\u0062\u0065\u0072\u0046o\u0072\u006d\u0061\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fedef.ApplyNumberFormatAttr))})
	}
	if _fedef.ApplyFontAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070\u006c\u0079\u0046\u006f\u006et"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fedef.ApplyFontAttr))})
	}
	if _fedef.ApplyFillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070\u006c\u0079\u0046\u0069\u006cl"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fedef.ApplyFillAttr))})
	}
	if _fedef.ApplyBorderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0070\u0070\u006c\u0079\u0042\u006f\u0072\u0064\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fedef.ApplyBorderAttr))})
	}
	if _fedef.ApplyAlignmentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070\u006c\u0079\u0041\u006c\u0069\u0067n\u006d\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fedef.ApplyAlignmentAttr))})
	}
	if _fedef.ApplyProtectionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fedef.ApplyProtectionAttr))})
	}
	e.EncodeToken(start)
	if _fedef.Alignment != nil {
		_fegfa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003aa\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"}}
		e.EncodeElement(_fedef.Alignment, _fegfa)
	}
	if _fedef.Protection != nil {
		_gfbac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_fedef.Protection, _gfbac)
	}
	if _fedef.ExtLst != nil {
		_gebdaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fedef.ExtLst, _gebdaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Connection and its children, prefixing error messages with path
func (_bgcff *CT_Connection) ValidateWithPath(path string) error {
	if _cgeb := _bgcff.CredentialsAttr.ValidateWithPath(path + "\u002f\u0043r\u0065\u0064\u0065n\u0074\u0069\u0061\u006c\u0073\u0041\u0074\u0074\u0072"); _cgeb != nil {
		return _cgeb
	}
	if _bgcff.DbPr != nil {
		if _aedcg := _bgcff.DbPr.ValidateWithPath(path + "\u002f\u0044\u0062P\u0072"); _aedcg != nil {
			return _aedcg
		}
	}
	if _bgcff.OlapPr != nil {
		if _eabb := _bgcff.OlapPr.ValidateWithPath(path + "\u002fO\u006c\u0061\u0070\u0050\u0072"); _eabb != nil {
			return _eabb
		}
	}
	if _bgcff.WebPr != nil {
		if _ggab := _bgcff.WebPr.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0072"); _ggab != nil {
			return _ggab
		}
	}
	if _bgcff.TextPr != nil {
		if _dgcfaf := _bgcff.TextPr.ValidateWithPath(path + "\u002fT\u0065\u0078\u0074\u0050\u0072"); _dgcfaf != nil {
			return _dgcfaf
		}
	}
	if _bgcff.Parameters != nil {
		if _ceccd := _bgcff.Parameters.ValidateWithPath(path + "/\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"); _ceccd != nil {
			return _ceccd
		}
	}
	if _bgcff.ExtLst != nil {
		if _bfefe := _bgcff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfefe != nil {
			return _bfefe
		}
	}
	return nil
}
func (_dccbb *ST_VerticalAlignment) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dccbb = 0
	case "\u0074\u006f\u0070":
		*_dccbb = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_dccbb = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d":
		*_dccbb = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_dccbb = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_dccbb = 5
	}
	return nil
}

type CT_CustomSheetView struct {

	// GUID
	GuidAttr string

	// Print Scale
	ScaleAttr *uint32

	// Color Id
	ColorIdAttr *uint32

	// Show Page Breaks
	ShowPageBreaksAttr *bool

	// Show Formulas
	ShowFormulasAttr *bool

	// Show Grid Lines
	ShowGridLinesAttr *bool

	// Show Headers
	ShowRowColAttr *bool

	// Show Outline Symbols
	OutlineSymbolsAttr *bool

	// Show Zero Values
	ZeroValuesAttr *bool

	// Fit To Page
	FitToPageAttr *bool

	// Print Area Defined
	PrintAreaAttr *bool

	// Filtered List
	FilterAttr *bool

	// Show AutoFitler Drop Down Controls
	ShowAutoFilterAttr *bool

	// Hidden Rows
	HiddenRowsAttr *bool

	// Hidden Columns
	HiddenColumnsAttr *bool

	// Visible State
	StateAttr ST_SheetState

	// Filter
	FilterUniqueAttr *bool

	// View Type
	ViewAttr ST_SheetViewType

	// Show Ruler
	ShowRulerAttr *bool

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Pane Split Information
	Pane *CT_Pane

	// Selection
	Selection *CT_Selection

	// Horizontal Page Breaks
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Page Margins
	PageMargins *CT_PageMargins

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header Footer Settings
	HeaderFooter *CT_HeaderFooter

	// AutoFilter Settings
	AutoFilter *CT_AutoFilter
	ExtLst     *CT_ExtensionList
}

func (_faffe *CT_WebPublishObject) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _faffe.IdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0076I\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _faffe.DivIdAttr)})
	if _faffe.SourceObjectAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_faffe.SourceObjectAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _faffe.DestinationFileAttr)})
	if _faffe.TitleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_faffe.TitleAttr)})
	}
	if _faffe.AutoRepublishAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_faffe.AutoRepublishAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TablePart and its children, prefixing error messages with path
func (_acgfag *CT_TablePart) ValidateWithPath(path string) error { return nil }

type CT_CellSmartTags struct {

	// Reference
	RAttr string

	// Cell Smart Tag
	CellSmartTag []*CT_CellSmartTag
}

func (_bbegf *CT_PivotArea) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgfgd := range start.Attr {
		if _fgfgd.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_bfeee, _ccbga := _f.ParseBool(_fgfgd.Value)
			if _ccbga != nil {
				return _ccbga
			}
			_bbegf.OutlineAttr = &_bfeee
			continue
		}
		if _fgfgd.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_gfeaa, _afgca := _f.ParseInt(_fgfgd.Value, 10, 32)
			if _afgca != nil {
				return _afgca
			}
			_caceba := int32(_gfeaa)
			_bbegf.FieldAttr = &_caceba
			continue
		}
		if _fgfgd.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u006c\u0079" {
			_cbaff, _abefgd := _f.ParseBool(_fgfgd.Value)
			if _abefgd != nil {
				return _abefgd
			}
			_bbegf.DataOnlyAttr = &_cbaff
			continue
		}
		if _fgfgd.Name.Local == "\u006ca\u0062\u0065\u006c\u004f\u006e\u006cy" {
			_aaacb, _gcbcb := _f.ParseBool(_fgfgd.Value)
			if _gcbcb != nil {
				return _gcbcb
			}
			_bbegf.LabelOnlyAttr = &_aaacb
			continue
		}
		if _fgfgd.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0052\u006f\u0077" {
			_dgfdg, _ecgbg := _f.ParseBool(_fgfgd.Value)
			if _ecgbg != nil {
				return _ecgbg
			}
			_bbegf.GrandRowAttr = &_dgfdg
			continue
		}
		if _fgfgd.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0043\u006f\u006c" {
			_ggcab, _dgdef := _f.ParseBool(_fgfgd.Value)
			if _dgdef != nil {
				return _dgdef
			}
			_bbegf.GrandColAttr = &_ggcab
			continue
		}
		if _fgfgd.Name.Local == "\u0063\u0061\u0063\u0068\u0065\u0049\u006e\u0064\u0065\u0078" {
			_cecdf, _ffecge := _f.ParseBool(_fgfgd.Value)
			if _ffecge != nil {
				return _ffecge
			}
			_bbegf.CacheIndexAttr = &_cecdf
			continue
		}
		if _fgfgd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bbegf.TypeAttr.UnmarshalXMLAttr(_fgfgd)
			continue
		}
		if _fgfgd.Name.Local == "\u006f\u0066\u0066\u0073\u0065\u0074" {
			_acagd, _babfa := _fgfgd.Value, error(nil)
			if _babfa != nil {
				return _babfa
			}
			_bbegf.OffsetAttr = &_acagd
			continue
		}
		if _fgfgd.Name.Local == "c\u006f\u006c\u006c\u0061\u0070\u0073e\u0064\u004c\u0065\u0076\u0065\u006c\u0073\u0041\u0072e\u0053\u0075\u0062t\u006ft\u0061\u006c\u0073" {
			_dadbg, _bgcfb := _f.ParseBool(_fgfgd.Value)
			if _bgcfb != nil {
				return _bgcfb
			}
			_bbegf.CollapsedLevelsAreSubtotalsAttr = &_dadbg
			continue
		}
		if _fgfgd.Name.Local == "\u0061\u0078\u0069\u0073" {
			_bbegf.AxisAttr.UnmarshalXMLAttr(_fgfgd)
			continue
		}
		if _fgfgd.Name.Local == "\u0066\u0069\u0065\u006c\u0064\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_ebeda, _aefcf := _f.ParseUint(_fgfgd.Value, 10, 32)
			if _aefcf != nil {
				return _aefcf
			}
			_ebafd := uint32(_ebeda)
			_bbegf.FieldPositionAttr = &_ebafd
			continue
		}
	}
_ffbbf:
	for {
		_eaefb, _fffg := d.Token()
		if _fffg != nil {
			return _fffg
		}
		switch _gabd := _eaefb.(type) {
		case _a.StartElement:
			switch _gabd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}:
				_bbegf.References = NewCT_PivotAreaReferences()
				if _dagcf := d.DecodeElement(_bbegf.References, &_gabd); _dagcf != nil {
					return _dagcf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbegf.ExtLst = NewCT_ExtensionList()
				if _dgfg := d.DecodeElement(_bbegf.ExtLst, &_gabd); _dgfg != nil {
					return _dgfg
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0069\u0076o\u0074\u0041\u0072\u0065\u0061\u0020\u0025\u0076", _gabd.Name)
				if _adggbe := d.Skip(); _adggbe != nil {
					return _adggbe
				}
			}
		case _a.EndElement:
			break _ffbbf
		case _a.CharData:
		}
	}
	return nil
}
func (_fdde *CT_Connection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _fdde.IdAttr)})
	if _fdde.SourceFileAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fdde.SourceFileAttr)})
	}
	if _fdde.OdcFileAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fd\u0063\u0046\u0069\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fdde.OdcFileAttr)})
	}
	if _fdde.KeepAliveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006be\u0065\u0070\u0041\u006c\u0069\u0076e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdde.KeepAliveAttr))})
	}
	if _fdde.IntervalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_fdde.IntervalAttr)})
	}
	if _fdde.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fdde.NameAttr)})
	}
	if _fdde.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fdde.DescriptionAttr)})
	}
	if _fdde.TypeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fdde.TypeAttr)})
	}
	if _fdde.ReconnectionMethodAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072e\u0063o\u006e\u006e\u0065\u0063\u0074i\u006f\u006eM\u0065\u0074\u0068\u006f\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fdde.ReconnectionMethodAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _fdde.RefreshedVersionAttr)})
	if _fdde.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_fdde.MinRefreshableVersionAttr)})
	}
	if _fdde.SavePasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0061\u0076e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdde.SavePasswordAttr))})
	}
	if _fdde.NewAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0065\u0077"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdde.NewAttr))})
	}
	if _fdde.DeletedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdde.DeletedAttr))})
	}
	if _fdde.OnlyUseConnectionFileAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "o\u006e\u006c\u0079\u0055se\u0043o\u006e\u006e\u0065\u0063\u0074i\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdde.OnlyUseConnectionFileAttr))})
	}
	if _fdde.BackgroundAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdde.BackgroundAttr))})
	}
	if _fdde.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdde.RefreshOnLoadAttr))})
	}
	if _fdde.SaveDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdde.SaveDataAttr))})
	}
	if _fdde.CredentialsAttr != ST_CredMethodUnset {
		_fcbd, _fbbb := _fdde.CredentialsAttr.MarshalXMLAttr(_a.Name{Local: "c\u0072\u0065\u0064\u0065\u006e\u0074\u0069\u0061\u006c\u0073"})
		if _fbbb != nil {
			return _fbbb
		}
		start.Attr = append(start.Attr, _fcbd)
	}
	if _fdde.SingleSignOnIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0053\u0069\u0067n\u004f\u006e\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fdde.SingleSignOnIdAttr)})
	}
	e.EncodeToken(start)
	if _fdde.DbPr != nil {
		_ecab := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0064\u0062\u0050\u0072"}}
		e.EncodeElement(_fdde.DbPr, _ecab)
	}
	if _fdde.OlapPr != nil {
		_gbdaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u006f\u006c\u0061\u0070\u0050r"}}
		e.EncodeElement(_fdde.OlapPr, _gbdaa)
	}
	if _fdde.WebPr != nil {
		_bbeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0077\u0065\u0062\u0050\u0072"}}
		e.EncodeElement(_fdde.WebPr, _bbeg)
	}
	if _fdde.TextPr != nil {
		_abbd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0074\u0065\u0078\u0074\u0050r"}}
		e.EncodeElement(_fdde.TextPr, _abbd)
	}
	if _fdde.Parameters != nil {
		_fegeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_fdde.Parameters, _fegeb)
	}
	if _fdde.ExtLst != nil {
		_bebf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fdde.ExtLst, _bebf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_acbae ST_CfvoType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_acbae.String(), start)
}
func (_egacb ST_Type) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cefeg := _a.Attr{}
	_cefeg.Name = name
	switch _egacb {
	case ST_TypeUnset:
		_cefeg.Value = ""
	case ST_TypeNone:
		_cefeg.Value = "\u006e\u006f\u006e\u0065"
	case ST_TypeAll:
		_cefeg.Value = "\u0061\u006c\u006c"
	case ST_TypeRow:
		_cefeg.Value = "\u0072\u006f\u0077"
	case ST_TypeColumn:
		_cefeg.Value = "\u0063\u006f\u006c\u0075\u006d\u006e"
	}
	return _cefeg, nil
}

// ValidateWithPath validates the CT_RevisionSheetRename and its children, prefixing error messages with path
func (_ddbdb *CT_RevisionSheetRename) ValidateWithPath(path string) error {
	if _ddbdb.ExtLst != nil {
		if _ebfgc := _ddbdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebfgc != nil {
			return _ebfgc
		}
	}
	return nil
}

// Validate validates the CT_SheetView and its children
func (_fbgdg *CT_SheetView) Validate() error {
	return _fbgdg.ValidateWithPath("\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077")
}
func NewCT_TableColumns() *CT_TableColumns { _fggcb := &CT_TableColumns{}; return _fggcb }
func NewCT_OutlinePr() *CT_OutlinePr       { _bfaf := &CT_OutlinePr{}; return _bfaf }

type CT_Users struct {

	// Active User Count
	CountAttr *uint32

	// User Information
	UserInfo []*CT_SharedUser
}

func (_ccadc *Users) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0075\u0073\u0065\u0072\u0073"
	return _ccadc.CT_Users.MarshalXML(e, start)
}

type CT_Extension struct {

	// URI
	UriAttr *string
	Any     _fca.Any
}

// Validate validates the CT_Fill and its children
func (_dbega *CT_Fill) Validate() error {
	return _dbega.ValidateWithPath("\u0043T\u005f\u0046\u0069\u006c\u006c")
}
func (_cbeag *CT_DataValidation) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfegb := range start.Attr {
		if _dfegb.Name.Local == "\u0073\u0068o\u0077\u0045\u0072r\u006f\u0072\u004d\u0065\u0073\u0073\u0061\u0067\u0065" {
			_egcfb, _aefe := _f.ParseBool(_dfegb.Value)
			if _aefe != nil {
				return _aefe
			}
			_cbeag.ShowErrorMessageAttr = &_egcfb
			continue
		}
		if _dfegb.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0054\u0069\u0074\u006c\u0065" {
			_ffeg, _gdfdg := _dfegb.Value, error(nil)
			if _gdfdg != nil {
				return _gdfdg
			}
			_cbeag.ErrorTitleAttr = &_ffeg
			continue
		}
		if _dfegb.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0053\u0074\u0079\u006c\u0065" {
			_cbeag.ErrorStyleAttr.UnmarshalXMLAttr(_dfegb)
			continue
		}
		if _dfegb.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_cbeag.OperatorAttr.UnmarshalXMLAttr(_dfegb)
			continue
		}
		if _dfegb.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0042\u006c\u0061\u006e\u006b" {
			_eacd, _egbg := _f.ParseBool(_dfegb.Value)
			if _egbg != nil {
				return _egbg
			}
			_cbeag.AllowBlankAttr = &_eacd
			continue
		}
		if _dfegb.Name.Local == "\u0073\u0068\u006fw\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_bdec, _fgdc := _f.ParseBool(_dfegb.Value)
			if _fgdc != nil {
				return _fgdc
			}
			_cbeag.ShowDropDownAttr = &_bdec
			continue
		}
		if _dfegb.Name.Local == "\u0073\u0068o\u0077\u0049\u006ep\u0075\u0074\u004d\u0065\u0073\u0073\u0061\u0067\u0065" {
			_adbbb, _ebbd := _f.ParseBool(_dfegb.Value)
			if _ebbd != nil {
				return _ebbd
			}
			_cbeag.ShowInputMessageAttr = &_adbbb
			continue
		}
		if _dfegb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cbeag.TypeAttr.UnmarshalXMLAttr(_dfegb)
			continue
		}
		if _dfegb.Name.Local == "\u0069m\u0065\u004d\u006f\u0064\u0065" {
			_cbeag.ImeModeAttr.UnmarshalXMLAttr(_dfegb)
			continue
		}
		if _dfegb.Name.Local == "\u0065\u0072\u0072o\u0072" {
			_agfeg, _eafga := _dfegb.Value, error(nil)
			if _eafga != nil {
				return _eafga
			}
			_cbeag.ErrorAttr = &_agfeg
			continue
		}
		if _dfegb.Name.Local == "p\u0072\u006f\u006d\u0070\u0074\u0054\u0069\u0074\u006c\u0065" {
			_fbcf, _fdbf := _dfegb.Value, error(nil)
			if _fdbf != nil {
				return _fdbf
			}
			_cbeag.PromptTitleAttr = &_fbcf
			continue
		}
		if _dfegb.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_abafb, _dfcdc := _dfegb.Value, error(nil)
			if _dfcdc != nil {
				return _dfcdc
			}
			_cbeag.PromptAttr = &_abafb
			continue
		}
		if _dfegb.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_abbb, _agcg := ParseSliceST_Sqref(_dfegb.Value)
			if _agcg != nil {
				return _agcg
			}
			_cbeag.SqrefAttr = _abbb
			continue
		}
	}
_cacb:
	for {
		_fefc, _egab := d.Token()
		if _egab != nil {
			return _egab
		}
		switch _abfga := _fefc.(type) {
		case _a.StartElement:
			switch _abfga.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}:
				_cbeag.Formula1 = new(string)
				if _gbead := d.DecodeElement(_cbeag.Formula1, &_abfga); _gbead != nil {
					return _gbead
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}:
				_cbeag.Formula2 = new(string)
				if _ddbbf := d.DecodeElement(_cbeag.Formula2, &_abfga); _ddbbf != nil {
					return _ddbbf
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _abfga.Name)
				if _faef := d.Skip(); _faef != nil {
					return _faef
				}
			}
		case _a.EndElement:
			break _cacb
		case _a.CharData:
		}
	}
	return nil
}

type ST_FileType byte
type CT_FunctionGroups struct {

	// Built-in Function Group Count
	BuiltInGroupCountAttr *uint32

	// Function Group
	FunctionGroup []*CT_FunctionGroup
}
type CT_Control struct {

	// Shape Id
	ShapeIdAttr uint32
	IdAttr      string

	// Control Name
	NameAttr *string

	// Embedded Control Properties
	ControlPr *CT_ControlPr
}

func (_gbfd *CT_CacheSource) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_dba, _cbee := _gbfd.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _cbee != nil {
		return _cbee
	}
	start.Attr = append(start.Attr, _dba)
	if _gbfd.ConnectionIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_gbfd.ConnectionIdAttr)})
	}
	e.EncodeToken(start)
	if _gbfd.WorksheetSource != nil {
		_afaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003aw\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065"}}
		e.EncodeElement(_gbfd.WorksheetSource, _afaa)
	}
	if _gbfd.Consolidation != nil {
		_gacf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0063\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gbfd.Consolidation, _gacf)
	}
	if _gbfd.ExtLst != nil {
		_adge := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gbfd.ExtLst, _adge)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomSheetView and its children
func (_aaagg *CT_CustomSheetView) Validate() error {
	return _aaagg.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077")
}
func NewCT_MemberProperty() *CT_MemberProperty { _fcebe := &CT_MemberProperty{}; return _fcebe }
func (_dgbfc ST_FilterOperator) ValidateWithPath(path string) error {
	switch _dgbfc {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgbfc))
	}
	return nil
}

// ValidateWithPath validates the CT_IconSet and its children, prefixing error messages with path
func (_befga *CT_IconSet) ValidateWithPath(path string) error {
	if _acbge := _befga.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _acbge != nil {
		return _acbge
	}
	for _fcacc, _bfabd := range _befga.Cfvo {
		if _agbcgf := _bfabd.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _fcacc)); _agbcgf != nil {
			return _agbcgf
		}
	}
	return nil
}

// Validate validates the CT_pivotTableDefinition and its children
func (_bgcdea *CT_pivotTableDefinition) Validate() error {
	return _bgcdea.ValidateWithPath("\u0043\u0054\u005fpi\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e")
}
func (_egade *CT_RevisionComment) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_egade.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _ecaea := range start.Attr {
		if _ecaea.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_faffa, _efcdfd := _f.ParseUint(_ecaea.Value, 10, 32)
			if _efcdfd != nil {
				return _efcdfd
			}
			_egade.SheetIdAttr = uint32(_faffa)
			continue
		}
		if _ecaea.Name.Local == "\u0063\u0065\u006c\u006c" {
			_ggged, _fdbed := _ecaea.Value, error(nil)
			if _fdbed != nil {
				return _fdbed
			}
			_egade.CellAttr = _ggged
			continue
		}
		if _ecaea.Name.Local == "\u0067\u0075\u0069\u0064" {
			_cfdea, _bfgeag := _ecaea.Value, error(nil)
			if _bfgeag != nil {
				return _bfgeag
			}
			_egade.GuidAttr = _cfdea
			continue
		}
		if _ecaea.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_egade.ActionAttr.UnmarshalXMLAttr(_ecaea)
			continue
		}
		if _ecaea.Name.Local == "\u0061\u006c\u0077\u0061\u0079\u0073\u0053\u0068\u006f\u0077" {
			_gccdgg, _egged := _f.ParseBool(_ecaea.Value)
			if _egged != nil {
				return _egged
			}
			_egade.AlwaysShowAttr = &_gccdgg
			continue
		}
		if _ecaea.Name.Local == "\u006f\u006c\u0064" {
			_addbg, _dcacg := _f.ParseBool(_ecaea.Value)
			if _dcacg != nil {
				return _dcacg
			}
			_egade.OldAttr = &_addbg
			continue
		}
		if _ecaea.Name.Local == "\u0068i\u0064\u0064\u0065\u006e\u0052\u006fw" {
			_cadfge, _caffb := _f.ParseBool(_ecaea.Value)
			if _caffb != nil {
				return _caffb
			}
			_egade.HiddenRowAttr = &_cadfge
			continue
		}
		if _ecaea.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e" {
			_edgaaef, _aefgc := _f.ParseBool(_ecaea.Value)
			if _aefgc != nil {
				return _aefgc
			}
			_egade.HiddenColumnAttr = &_edgaaef
			continue
		}
		if _ecaea.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072" {
			_efafg, _ddaec := _ecaea.Value, error(nil)
			if _ddaec != nil {
				return _ddaec
			}
			_egade.AuthorAttr = _efafg
			continue
		}
		if _ecaea.Name.Local == "\u006fl\u0064\u004c\u0065\u006e\u0067\u0074h" {
			_dcaea, _ggcdf := _f.ParseUint(_ecaea.Value, 10, 32)
			if _ggcdf != nil {
				return _ggcdf
			}
			_edcge := uint32(_dcaea)
			_egade.OldLengthAttr = &_edcge
			continue
		}
		if _ecaea.Name.Local == "\u006ee\u0077\u004c\u0065\u006e\u0067\u0074h" {
			_fefca, _ffbgd := _f.ParseUint(_ecaea.Value, 10, 32)
			if _ffbgd != nil {
				return _ffbgd
			}
			_ecacba := uint32(_fefca)
			_egade.NewLengthAttr = &_ecacba
			continue
		}
	}
	for {
		_aebefg, _aebff := d.Token()
		if _aebff != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006fn\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _aebff)
		}
		if _cbffd, _cfcag := _aebefg.(_a.EndElement); _cfcag && _cbffd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_QueryTableDeletedFields struct {

	// Deleted Fields Count
	CountAttr *uint32

	// Deleted Field
	DeletedField []*CT_DeletedField
}
type CT_SheetView struct {

	// Window Protection
	WindowProtectionAttr *bool

	// Show Formulas
	ShowFormulasAttr *bool

	// Show Grid Lines
	ShowGridLinesAttr *bool

	// Show Headers
	ShowRowColHeadersAttr *bool

	// Show Zero Values
	ShowZerosAttr *bool

	// Right To Left
	RightToLeftAttr *bool

	// Sheet Tab Selected
	TabSelectedAttr *bool

	// Show Ruler
	ShowRulerAttr *bool

	// Show Outline Symbols
	ShowOutlineSymbolsAttr *bool

	// Default Grid Color
	DefaultGridColorAttr *bool

	// Show White Space
	ShowWhiteSpaceAttr *bool

	// View Type
	ViewAttr ST_SheetViewType

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Color Id
	ColorIdAttr *uint32

	// Zoom Scale
	ZoomScaleAttr *uint32

	// Zoom Scale Normal View
	ZoomScaleNormalAttr *uint32

	// Zoom Scale Page Break Preview
	ZoomScaleSheetLayoutViewAttr *uint32

	// Zoom Scale Page Layout View
	ZoomScalePageLayoutViewAttr *uint32

	// Workbook View Index
	WorkbookViewIdAttr uint32

	// View Pane
	Pane *CT_Pane

	// Selection
	Selection []*CT_Selection

	// PivotTable Selection
	PivotSelection []*CT_PivotSelection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_RevisionAutoFormatting struct {

	// Sheet Id
	SheetIdAttr uint32

	// Reference
	RefAttr                     string
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

func (_acfe *CT_MetadataType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dedde := range start.Attr {
		if _dedde.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006c\u0057i\u0064\u0074\u0068\u0073" {
			_dfege, _fdeed := _f.ParseBool(_dedde.Value)
			if _fdeed != nil {
				return _fdeed
			}
			_acfe.PasteColWidthsAttr = &_dfege
			continue
		}
		if _dedde.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cfca, _begdg := _dedde.Value, error(nil)
			if _begdg != nil {
				return _begdg
			}
			_acfe.NameAttr = _cfca
			continue
		}
		if _dedde.Name.Local == "\u0070a\u0073t\u0065\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_agceg, _gbdb := _f.ParseBool(_dedde.Value)
			if _gbdb != nil {
				return _gbdb
			}
			_acfe.PasteNumberFormatsAttr = &_agceg
			continue
		}
		if _dedde.Name.Local == "\u0067\u0068\u006f\u0073\u0074\u0052\u006f\u0077" {
			_dabaa, _efbcb := _f.ParseBool(_dedde.Value)
			if _efbcb != nil {
				return _efbcb
			}
			_acfe.GhostRowAttr = &_dabaa
			continue
		}
		if _dedde.Name.Local == "\u006d\u0065\u0072g\u0065" {
			_aagca, _aeadb := _f.ParseBool(_dedde.Value)
			if _aeadb != nil {
				return _aeadb
			}
			_acfe.MergeAttr = &_aagca
			continue
		}
		if _dedde.Name.Local == "\u0065\u0064\u0069\u0074" {
			_edccf, _agefg := _f.ParseBool(_dedde.Value)
			if _agefg != nil {
				return _agefg
			}
			_acfe.EditAttr = &_edccf
			continue
		}
		if _dedde.Name.Local == "\u0073\u0070\u006c\u0069\u0074\u0046\u0069\u0072\u0073\u0074" {
			_gcefcd, _fgead := _f.ParseBool(_dedde.Value)
			if _fgead != nil {
				return _fgead
			}
			_acfe.SplitFirstAttr = &_gcefcd
			continue
		}
		if _dedde.Name.Local == "\u0063\u006f\u0070\u0079" {
			_dfaad, _dcdef := _f.ParseBool(_dedde.Value)
			if _dcdef != nil {
				return _dcdef
			}
			_acfe.CopyAttr = &_dfaad
			continue
		}
		if _dedde.Name.Local == "\u0073\u0070\u006c\u0069\u0074\u0041\u006c\u006c" {
			_affa, _aade := _f.ParseBool(_dedde.Value)
			if _aade != nil {
				return _aade
			}
			_acfe.SplitAllAttr = &_affa
			continue
		}
		if _dedde.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_efegc, _dbdae := _f.ParseBool(_dedde.Value)
			if _dbdae != nil {
				return _dbdae
			}
			_acfe.PasteFormulasAttr = &_efegc
			continue
		}
		if _dedde.Name.Local == "\u0063\u0065\u006c\u006c\u004d\u0065\u0074\u0061" {
			_acfgd, _cebac := _f.ParseBool(_dedde.Value)
			if _cebac != nil {
				return _cebac
			}
			_acfe.CellMetaAttr = &_acfgd
			continue
		}
		if _dedde.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0041\u006c\u006c" {
			_febge, _cdecf := _f.ParseBool(_dedde.Value)
			if _cdecf != nil {
				return _cdecf
			}
			_acfe.ClearAllAttr = &_febge
			continue
		}
		if _dedde.Name.Local == "\u006d\u0069\u006e\u0053up\u0070\u006f\u0072\u0074\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_deage, _bgdcd := _f.ParseUint(_dedde.Value, 10, 32)
			if _bgdcd != nil {
				return _bgdcd
			}
			_acfe.MinSupportedVersionAttr = uint32(_deage)
			continue
		}
		if _dedde.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074" {
			_gdcfg, _edgb := _f.ParseBool(_dedde.Value)
			if _edgb != nil {
				return _edgb
			}
			_acfe.AdjustAttr = &_gdcfg
			continue
		}
		if _dedde.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073" {
			_bdega, _caeeb := _f.ParseBool(_dedde.Value)
			if _caeeb != nil {
				return _caeeb
			}
			_acfe.ClearContentsAttr = &_bdega
			continue
		}
		if _dedde.Name.Local == "p\u0061\u0073\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073" {
			_daggcf, _baeag := _f.ParseBool(_dedde.Value)
			if _baeag != nil {
				return _baeag
			}
			_acfe.PasteValuesAttr = &_daggcf
			continue
		}
		if _dedde.Name.Local == "r\u006f\u0077\u0043\u006f\u006c\u0053\u0068\u0069\u0066\u0074" {
			_bdfea, _cecca := _f.ParseBool(_dedde.Value)
			if _cecca != nil {
				return _cecca
			}
			_acfe.RowColShiftAttr = &_bdfea
			continue
		}
		if _dedde.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_beacdf, _eegbg := _f.ParseBool(_dedde.Value)
			if _eegbg != nil {
				return _eegbg
			}
			_acfe.PasteCommentsAttr = &_beacdf
			continue
		}
		if _dedde.Name.Local == "\u0063\u006c\u0065a\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_eeffb, _bcecf := _f.ParseBool(_dedde.Value)
			if _bcecf != nil {
				return _bcecf
			}
			_acfe.ClearFormatsAttr = &_eeffb
			continue
		}
		if _dedde.Name.Local == "\u0067\u0068\u006f\u0073\u0074\u0043\u006f\u006c" {
			_ebbbc, _bgddcb := _f.ParseBool(_dedde.Value)
			if _bgddcb != nil {
				return _bgddcb
			}
			_acfe.GhostColAttr = &_ebbbc
			continue
		}
		if _dedde.Name.Local == "\u0063\u006f\u0065\u0072\u0063\u0065" {
			_fgcac, _aacgg := _f.ParseBool(_dedde.Value)
			if _aacgg != nil {
				return _aacgg
			}
			_acfe.CoerceAttr = &_fgcac
			continue
		}
		if _dedde.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_baafc, _cagec := _f.ParseBool(_dedde.Value)
			if _cagec != nil {
				return _cagec
			}
			_acfe.ClearCommentsAttr = &_baafc
			continue
		}
		if _dedde.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0041\u006c\u006c" {
			_cdbcc, _bdgb := _f.ParseBool(_dedde.Value)
			if _bdgb != nil {
				return _bdgb
			}
			_acfe.PasteAllAttr = &_cdbcc
			continue
		}
		if _dedde.Name.Local == "\u0070\u0061\u0073t\u0065\u0042\u006f\u0072\u0064\u0065\u0072\u0073" {
			_cbagg, _gdcc := _f.ParseBool(_dedde.Value)
			if _gdcc != nil {
				return _gdcc
			}
			_acfe.PasteBordersAttr = &_cbagg
			continue
		}
		if _dedde.Name.Local == "\u0070\u0061\u0073t\u0065\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bcef, _ffgge := _f.ParseBool(_dedde.Value)
			if _ffgge != nil {
				return _ffgge
			}
			_acfe.PasteFormatsAttr = &_bcef
			continue
		}
		if _dedde.Name.Local == "\u0070\u0061\u0073\u0074eD\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e" {
			_aaffc, _cccec := _f.ParseBool(_dedde.Value)
			if _cccec != nil {
				return _cccec
			}
			_acfe.PasteDataValidationAttr = &_aaffc
			continue
		}
		if _dedde.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065" {
			_ecdae, _fcffb := _f.ParseBool(_dedde.Value)
			if _fcffb != nil {
				return _fcffb
			}
			_acfe.DeleteAttr = &_ecdae
			continue
		}
		if _dedde.Name.Local == "\u0061\u0073\u0073\u0069\u0067\u006e" {
			_ceegf, _fbdgf := _f.ParseBool(_dedde.Value)
			if _fbdgf != nil {
				return _fbdgf
			}
			_acfe.AssignAttr = &_ceegf
			continue
		}
	}
	for {
		_afeea, _agcaeb := d.Token()
		if _agcaeb != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0054\u0079p\u0065:\u0020\u0025\u0073", _agcaeb)
		}
		if _cfdb, _afafa := _afeea.(_a.EndElement); _afafa && _cfdb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eebcb *CT_ExternalLinkChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eebcb.ExternalBook != nil {
		_edfba := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ae\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}}
		e.EncodeElement(_eebcb.ExternalBook, _edfba)
	}
	if _eebcb.DdeLink != nil {
		_fffc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0064\u0065\u004c\u0069\u006e\u006b"}}
		e.EncodeElement(_eebcb.DdeLink, _fffc)
	}
	if _eebcb.OleLink != nil {
		_aabcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004c\u0069\u006e\u006b"}}
		e.EncodeElement(_eebcb.OleLink, _aabcg)
	}
	return nil
}
func (_fdfbd *Chartsheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074"
	return _fdfbd.CT_Chartsheet.MarshalXML(e, start)
}
func (_agcge ST_PatternType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_agcge.String(), start)
}

// Validate validates the CT_ChartsheetProtection and its children
func (_dgfd *CT_ChartsheetProtection) Validate() error {
	return _dgfd.ValidateWithPath("\u0043\u0054\u005fCh\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e")
}
func (_gdadb *CT_Revisions) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _gdadb.Rrc != nil {
		_dfegba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0072\u0063"}}
		for _, _afdfe := range _gdadb.Rrc {
			e.EncodeElement(_afdfe, _dfegba)
		}
	}
	if _gdadb.Rm != nil {
		_fdgff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ar\u006d"}}
		for _, _afddac := range _gdadb.Rm {
			e.EncodeElement(_afddac, _fdgff)
		}
	}
	if _gdadb.Rcv != nil {
		_bcdbbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0076"}}
		for _, _befde := range _gdadb.Rcv {
			e.EncodeElement(_befde, _bcdbbd)
		}
	}
	if _gdadb.Rsnm != nil {
		_eedba := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0072\u0073\u006e\u006d"}}
		for _, _bdebef := range _gdadb.Rsnm {
			e.EncodeElement(_bdebef, _eedba)
		}
	}
	if _gdadb.Ris != nil {
		_bdcaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0069\u0073"}}
		for _, _fedee := range _gdadb.Ris {
			e.EncodeElement(_fedee, _bdcaf)
		}
	}
	if _gdadb.Rcc != nil {
		_gedgcf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _gfdgd := range _gdadb.Rcc {
			e.EncodeElement(_gfdgd, _gedgcf)
		}
	}
	if _gdadb.Rfmt != nil {
		_ebddc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _gebeg := range _gdadb.Rfmt {
			e.EncodeElement(_gebeg, _ebddc)
		}
	}
	if _gdadb.Raf != nil {
		_faaad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0061\u0066"}}
		for _, _gcbdb := range _gdadb.Raf {
			e.EncodeElement(_gcbdb, _faaad)
		}
	}
	if _gdadb.Rdn != nil {
		_cddce := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0064\u006e"}}
		for _, _bbeecb := range _gdadb.Rdn {
			e.EncodeElement(_bbeecb, _cddce)
		}
	}
	if _gdadb.Rcmt != nil {
		_agdeaf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0072\u0063\u006d\u0074"}}
		for _, _aecae := range _gdadb.Rcmt {
			e.EncodeElement(_aecae, _agdeaf)
		}
	}
	if _gdadb.Rqt != nil {
		_gceaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0071\u0074"}}
		for _, _cdcff := range _gdadb.Rqt {
			e.EncodeElement(_cdcff, _gceaa)
		}
	}
	if _gdadb.Rcft != nil {
		_daacda := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0072\u0063\u0066\u0074"}}
		for _, _edecb := range _gdadb.Rcft {
			e.EncodeElement(_edecb, _daacda)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_IconSetType byte

func (_cdedac ST_RevisionAction) ValidateWithPath(path string) error {
	switch _cdedac {
	case 0, 1, 2:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdedac))
	}
	return nil
}
func NewCT_WorkbookProtection() *CT_WorkbookProtection {
	_ccddecg := &CT_WorkbookProtection{}
	return _ccddecg
}
func (_gbegb *ST_ItemType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gbegb = 0
	case "\u0064\u0061\u0074\u0061":
		*_gbegb = 1
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_gbegb = 2
	case "\u0073\u0075\u006d":
		*_gbegb = 3
	case "\u0063\u006f\u0075\u006e\u0074\u0041":
		*_gbegb = 4
	case "\u0061\u0076\u0067":
		*_gbegb = 5
	case "\u006d\u0061\u0078":
		*_gbegb = 6
	case "\u006d\u0069\u006e":
		*_gbegb = 7
	case "\u0070r\u006f\u0064\u0075\u0063\u0074":
		*_gbegb = 8
	case "\u0063\u006f\u0075n\u0074":
		*_gbegb = 9
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_gbegb = 10
	case "\u0073t\u0064\u0044\u0065\u0076\u0050":
		*_gbegb = 11
	case "\u0076\u0061\u0072":
		*_gbegb = 12
	case "\u0076\u0061\u0072\u0050":
		*_gbegb = 13
	case "\u0067\u0072\u0061n\u0064":
		*_gbegb = 14
	case "\u0062\u006c\u0061n\u006b":
		*_gbegb = 15
	}
	return nil
}

// ValidateWithPath validates the CT_Pages and its children, prefixing error messages with path
func (_gddaa *CT_Pages) ValidateWithPath(path string) error {
	for _bgbbe, _gdfad := range _gddaa.Page {
		if _caeee := _gdfad.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0050\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _bgbbe)); _caeee != nil {
			return _caeee
		}
	}
	return nil
}
func (_dbce *CT_PCDKPI) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebcec := range start.Attr {
		if _ebcec.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_ggcfb, _cgged := _ebcec.Value, error(nil)
			if _cgged != nil {
				return _cgged
			}
			_dbce.UniqueNameAttr = _ggcfb
			continue
		}
		if _ebcec.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_bacea, _bccdb := _ebcec.Value, error(nil)
			if _bccdb != nil {
				return _bccdb
			}
			_dbce.CaptionAttr = &_bacea
			continue
		}
		if _ebcec.Name.Local == "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072" {
			_bcfdb, _fadab := _ebcec.Value, error(nil)
			if _fadab != nil {
				return _fadab
			}
			_dbce.DisplayFolderAttr = &_bcfdb
			continue
		}
		if _ebcec.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_efbfa, _daade := _ebcec.Value, error(nil)
			if _daade != nil {
				return _daade
			}
			_dbce.MeasureGroupAttr = &_efbfa
			continue
		}
		if _ebcec.Name.Local == "\u0070\u0061\u0072\u0065\u006e\u0074" {
			_afgebb, _bcfdbd := _ebcec.Value, error(nil)
			if _bcfdbd != nil {
				return _bcfdbd
			}
			_dbce.ParentAttr = &_afgebb
			continue
		}
		if _ebcec.Name.Local == "\u0076\u0061\u006cu\u0065" {
			_bcfbdd, _gbggg := _ebcec.Value, error(nil)
			if _gbggg != nil {
				return _gbggg
			}
			_dbce.ValueAttr = _bcfbdd
			continue
		}
		if _ebcec.Name.Local == "\u0067\u006f\u0061\u006c" {
			_aggd, _daagd := _ebcec.Value, error(nil)
			if _daagd != nil {
				return _daagd
			}
			_dbce.GoalAttr = &_aggd
			continue
		}
		if _ebcec.Name.Local == "\u0073\u0074\u0061\u0074\u0075\u0073" {
			_acega, _fbgabd := _ebcec.Value, error(nil)
			if _fbgabd != nil {
				return _fbgabd
			}
			_dbce.StatusAttr = &_acega
			continue
		}
		if _ebcec.Name.Local == "\u0074\u0072\u0065n\u0064" {
			_bcagc, _dfbcb := _ebcec.Value, error(nil)
			if _dfbcb != nil {
				return _dfbcb
			}
			_dbce.TrendAttr = &_bcagc
			continue
		}
		if _ebcec.Name.Local == "\u0077\u0065\u0069\u0067\u0068\u0074" {
			_gdfac, _cgdd := _ebcec.Value, error(nil)
			if _cgdd != nil {
				return _cgdd
			}
			_dbce.WeightAttr = &_gdfac
			continue
		}
		if _ebcec.Name.Local == "\u0074\u0069\u006d\u0065" {
			_abdae, _fdgad := _ebcec.Value, error(nil)
			if _fdgad != nil {
				return _fdgad
			}
			_dbce.TimeAttr = &_abdae
			continue
		}
	}
	for {
		_bfeac, _cgabb := d.Token()
		if _cgabb != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0050\u0043\u0044K\u0050\u0049\u003a\u0020\u0025\u0073", _cgabb)
		}
		if _cbbd, _ddbcb := _bfeac.(_a.EndElement); _ddbcb && _cbbd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aebdf *CT_QueryTableFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aebdf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_aebdf.CountAttr)})
	}
	e.EncodeToken(start)
	if _aebdf.QueryTableField != nil {
		_egafe := _a.StartElement{Name: _a.Name{Local: "\u006da\u003aq\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064"}}
		for _, _bbdca := range _aebdf.QueryTableField {
			e.EncodeElement(_bbdca, _egafe)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_BorderPr() *CT_BorderPr { _cfec := &CT_BorderPr{}; return _cfec }
func (_ccgbgf *CalcChain) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003ac\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e"
	return _ccgbgf.CT_CalcChain.MarshalXML(e, start)
}
func NewCT_SheetFormatPr() *CT_SheetFormatPr { _gfcae := &CT_SheetFormatPr{}; return _gfcae }

// ValidateWithPath validates the QueryTable and its children, prefixing error messages with path
func (_eaaab *QueryTable) ValidateWithPath(path string) error {
	if _dececd := _eaaab.CT_QueryTable.ValidateWithPath(path); _dececd != nil {
		return _dececd
	}
	return nil
}

type CT_SharedItems struct {

	// Contains Semi Mixed Data Types
	ContainsSemiMixedTypesAttr *bool

	// Contains Non Date
	ContainsNonDateAttr *bool

	// Contains Date
	ContainsDateAttr *bool

	// Contains String
	ContainsStringAttr *bool

	// Contains Blank
	ContainsBlankAttr *bool

	// Contains Mixed Data Types
	ContainsMixedTypesAttr *bool

	// Contains Numbers
	ContainsNumberAttr *bool

	// Contains Integer
	ContainsIntegerAttr *bool

	// Minimum Numeric Value
	MinValueAttr *float64

	// Maximum Numeric Value
	MaxValueAttr *float64

	// Minimum Date Time
	MinDateAttr *_cd.Time

	// Maximum Date Time Value
	MaxDateAttr *_cd.Time

	// Shared Items Count
	CountAttr *uint32

	// Long Text
	LongTextAttr *bool

	// No Value
	M []*CT_Missing

	// Numeric
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime
}

// Validate validates the CT_Tuples and its children
func (_bcgede *CT_Tuples) Validate() error {
	return _bcgede.ValidateWithPath("\u0043T\u005f\u0054\u0075\u0070\u006c\u0065s")
}

type ST_ShowDataAs byte

func (_dfbgg *CT_PivotAreaReference) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dfbgg.FieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_dfbgg.FieldAttr)})
	}
	if _dfbgg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_dfbgg.CountAttr)})
	}
	if _dfbgg.SelectedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.SelectedAttr))})
	}
	if _dfbgg.ByPositionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0079\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.ByPositionAttr))})
	}
	if _dfbgg.RelativeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.RelativeAttr))})
	}
	if _dfbgg.DefaultSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.DefaultSubtotalAttr))})
	}
	if _dfbgg.SumSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.SumSubtotalAttr))})
	}
	if _dfbgg.CountASubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.CountASubtotalAttr))})
	}
	if _dfbgg.AvgSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.AvgSubtotalAttr))})
	}
	if _dfbgg.MaxSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.MaxSubtotalAttr))})
	}
	if _dfbgg.MinSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.MinSubtotalAttr))})
	}
	if _dfbgg.ProductSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.ProductSubtotalAttr))})
	}
	if _dfbgg.CountSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.CountSubtotalAttr))})
	}
	if _dfbgg.StdDevSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.StdDevSubtotalAttr))})
	}
	if _dfbgg.StdDevPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.StdDevPSubtotalAttr))})
	}
	if _dfbgg.VarSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.VarSubtotalAttr))})
	}
	if _dfbgg.VarPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dfbgg.VarPSubtotalAttr))})
	}
	e.EncodeToken(start)
	if _dfbgg.X != nil {
		_aagad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _babdc := range _dfbgg.X {
			e.EncodeElement(_babdc, _aagad)
		}
	}
	if _dfbgg.ExtLst != nil {
		_cdgfe := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dfbgg.ExtLst, _cdgfe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_FileRecoveryPr() *CT_FileRecoveryPr { _cdbef := &CT_FileRecoveryPr{}; return _cdbef }
func (_cedgcg ST_CellComments) String() string {
	switch _cedgcg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064"
	case 3:
		return "\u0061\u0074\u0045n\u0064"
	}
	return ""
}

// Validate validates the Comments and its children
func (_dadfcb *Comments) Validate() error {
	return _dadfcb.ValidateWithPath("\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073")
}

// ValidateWithPath validates the CT_Format and its children, prefixing error messages with path
func (_egdcb *CT_Format) ValidateWithPath(path string) error {
	if _bedab := _egdcb.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _bedab != nil {
		return _bedab
	}
	if _ddab := _egdcb.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _ddab != nil {
		return _ddab
	}
	if _egdcb.ExtLst != nil {
		if _gecba := _egdcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gecba != nil {
			return _gecba
		}
	}
	return nil
}
func (_eagdec ST_RefMode) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_eagdec.String(), start)
}
func (_dggeeg *ST_OleUpdate) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dggeeg = 0
	case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053":
		*_dggeeg = 1
	case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c":
		*_dggeeg = 2
	}
	return nil
}
func NewCT_CellStyleXfs() *CT_CellStyleXfs { _gdeaf := &CT_CellStyleXfs{}; return _gdeaf }
func NewCT_QueryTableFields() *CT_QueryTableFields {
	_gabbdac := &CT_QueryTableFields{}
	return _gabbdac
}

type CT_RangeSets struct {

	// Reference and Page Item Count
	CountAttr *uint32

	// Range Set
	RangeSet []*CT_RangeSet
}
type CT_IgnoredErrors struct {

	// Ignored Error
	IgnoredError []*CT_IgnoredError
	ExtLst       *CT_ExtensionList
}

// ValidateWithPath validates the CT_RevisionComment and its children, prefixing error messages with path
func (_ccdcfb *CT_RevisionComment) ValidateWithPath(path string) error {
	if !_ae.ST_GuidPatternRe.MatchString(_ccdcfb.GuidAttr) {
		return _fc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ae.ST_GuidPatternRe, _ccdcfb.GuidAttr)
	}
	if _acef := _ccdcfb.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _acef != nil {
		return _acef
	}
	return nil
}
func (_ceagc *ST_GradientType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gedcg, _caece := d.Token()
	if _caece != nil {
		return _caece
	}
	if _agbfdcg, _bdggb := _gedcg.(_a.EndElement); _bdggb && _agbfdcg.Name == start.Name {
		*_ceagc = 1
		return nil
	}
	if _cgagdb, _eefbf := _gedcg.(_a.CharData); !_eefbf {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gedcg)
	} else {
		switch string(_cgagdb) {
		case "":
			*_ceagc = 0
		case "\u006c\u0069\u006e\u0065\u0061\u0072":
			*_ceagc = 1
		case "\u0070\u0061\u0074\u0068":
			*_ceagc = 2
		}
	}
	_gedcg, _caece = d.Token()
	if _caece != nil {
		return _caece
	}
	if _bfgec, _bddff := _gedcg.(_a.EndElement); _bddff && _bfgec.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gedcg)
}
func (_ggfab *CT_MdxKPI) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ggfab.PAttr = ST_MdxKPIProperty(1)
	for _, _bdgfc := range start.Attr {
		if _bdgfc.Name.Local == "\u006e" {
			_fbgeb, _becc := _f.ParseUint(_bdgfc.Value, 10, 32)
			if _becc != nil {
				return _becc
			}
			_ggfab.NAttr = uint32(_fbgeb)
			continue
		}
		if _bdgfc.Name.Local == "\u006e\u0070" {
			_gcedea, _fcgce := _f.ParseUint(_bdgfc.Value, 10, 32)
			if _fcgce != nil {
				return _fcgce
			}
			_ggfab.NpAttr = uint32(_gcedea)
			continue
		}
		if _bdgfc.Name.Local == "\u0070" {
			_ggfab.PAttr.UnmarshalXMLAttr(_bdgfc)
			continue
		}
	}
	for {
		_cebbcg, _bafb := d.Token()
		if _bafb != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004d\u0064\u0078K\u0050\u0049\u003a\u0020\u0025\u0073", _bafb)
		}
		if _cdebg, _fecd := _cebbcg.(_a.EndElement); _fecd && _cdebg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_febb *CT_ExternalBook) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dbdag := range start.Attr {
		if _dbdag.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dbdag.Name.Local == "\u0069\u0064" || _dbdag.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dbdag.Name.Local == "\u0069\u0064" {
			_eaeff, _cabdga := _dbdag.Value, error(nil)
			if _cabdga != nil {
				return _cabdga
			}
			_febb.IdAttr = _eaeff
			continue
		}
	}
_adgd:
	for {
		_bgbe, _accf := d.Token()
		if _accf != nil {
			return _accf
		}
		switch _eaaag := _bgbe.(type) {
		case _a.StartElement:
			switch _eaaag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}:
				_febb.SheetNames = NewCT_ExternalSheetNames()
				if _cdfg := d.DecodeElement(_febb.SheetNames, &_eaaag); _cdfg != nil {
					return _cdfg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_febb.DefinedNames = NewCT_ExternalDefinedNames()
				if _gedgc := d.DecodeElement(_febb.DefinedNames, &_eaaag); _gedgc != nil {
					return _gedgc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}:
				_febb.SheetDataSet = NewCT_ExternalSheetDataSet()
				if _dagf := d.DecodeElement(_febb.SheetDataSet, &_eaaag); _dagf != nil {
					return _dagf
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b\u0020\u0025\u0076", _eaaag.Name)
				if _dedd := d.Skip(); _dedd != nil {
					return _dedd
				}
			}
		case _a.EndElement:
			break _adgd
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_XmlPr() *CT_XmlPr { _aegce := &CT_XmlPr{}; return _aegce }
func (_bgeabb *CT_RangeSets) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bgeabb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bgeabb.CountAttr)})
	}
	e.EncodeToken(start)
	_dgfgg := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}}
	for _, _bdfec := range _bgeabb.RangeSet {
		e.EncodeElement(_bdfec, _dgfgg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eagceg *ST_WebSourceType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_acgbag, _decbd := d.Token()
	if _decbd != nil {
		return _decbd
	}
	if _ggcacff, _cedbfg := _acgbag.(_a.EndElement); _cedbfg && _ggcacff.Name == start.Name {
		*_eagceg = 1
		return nil
	}
	if _edebg, _bfgca := _acgbag.(_a.CharData); !_bfgca {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acgbag)
	} else {
		switch string(_edebg) {
		case "":
			*_eagceg = 0
		case "\u0073\u0068\u0065e\u0074":
			*_eagceg = 1
		case "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a":
			*_eagceg = 2
		case "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072":
			*_eagceg = 3
		case "\u0072\u0061\u006eg\u0065":
			*_eagceg = 4
		case "\u0063\u0068\u0061r\u0074":
			*_eagceg = 5
		case "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065":
			*_eagceg = 6
		case "\u0071\u0075\u0065r\u0079":
			*_eagceg = 7
		case "\u006c\u0061\u0062e\u006c":
			*_eagceg = 8
		}
	}
	_acgbag, _decbd = d.Token()
	if _decbd != nil {
		return _decbd
	}
	if _ccbfcf, _acabea := _acgbag.(_a.EndElement); _acabea && _ccbfcf.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acgbag)
}

type CT_ServerFormat struct {

	// Culture
	CultureAttr *string

	// Format
	FormatAttr *string
}

func (_eggcgfg ST_TotalsRowFunction) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dcgfc := _a.Attr{}
	_dcgfc.Name = name
	switch _eggcgfg {
	case ST_TotalsRowFunctionUnset:
		_dcgfc.Value = ""
	case ST_TotalsRowFunctionNone:
		_dcgfc.Value = "\u006e\u006f\u006e\u0065"
	case ST_TotalsRowFunctionSum:
		_dcgfc.Value = "\u0073\u0075\u006d"
	case ST_TotalsRowFunctionMin:
		_dcgfc.Value = "\u006d\u0069\u006e"
	case ST_TotalsRowFunctionMax:
		_dcgfc.Value = "\u006d\u0061\u0078"
	case ST_TotalsRowFunctionAverage:
		_dcgfc.Value = "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case ST_TotalsRowFunctionCount:
		_dcgfc.Value = "\u0063\u006f\u0075n\u0074"
	case ST_TotalsRowFunctionCountNums:
		_dcgfc.Value = "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case ST_TotalsRowFunctionStdDev:
		_dcgfc.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_TotalsRowFunctionVar:
		_dcgfc.Value = "\u0076\u0061\u0072"
	case ST_TotalsRowFunctionCustom:
		_dcgfc.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return _dcgfc, nil
}
func (_dcdbf *CT_RevisionInsertSheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edfaa := range start.Attr {
		if _edfaa.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_fcccf, _bdgc := _f.ParseUint(_edfaa.Value, 10, 32)
			if _bdgc != nil {
				return _bdgc
			}
			_dcdbf.SheetIdAttr = uint32(_fcccf)
			continue
		}
		if _edfaa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eabad, _fbceec := _edfaa.Value, error(nil)
			if _fbceec != nil {
				return _fbceec
			}
			_dcdbf.NameAttr = _eabad
			continue
		}
		if _edfaa.Name.Local == "\u0073\u0068\u0065\u0065\u0074\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_adfaf, _dafb := _f.ParseUint(_edfaa.Value, 10, 32)
			if _dafb != nil {
				return _dafb
			}
			_dcdbf.SheetPositionAttr = uint32(_adfaf)
			continue
		}
		if _edfaa.Name.Local == "\u0072\u0049\u0064" {
			_acddc, _gaaa := _f.ParseUint(_edfaa.Value, 10, 32)
			if _gaaa != nil {
				return _gaaa
			}
			_fggga := uint32(_acddc)
			_dcdbf.RIdAttr = &_fggga
			continue
		}
		if _edfaa.Name.Local == "\u0075\u0061" {
			_defbf, _afacag := _f.ParseBool(_edfaa.Value)
			if _afacag != nil {
				return _afacag
			}
			_dcdbf.UaAttr = &_defbf
			continue
		}
		if _edfaa.Name.Local == "\u0072\u0061" {
			_bfcce, _adfed := _f.ParseBool(_edfaa.Value)
			if _adfed != nil {
				return _adfed
			}
			_dcdbf.RaAttr = &_bfcce
			continue
		}
	}
	for {
		_cebcf, _dabba := d.Token()
		if _dabba != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076i\u0073i\u006fn\u0049n\u0073\u0065\u0072\u0074\u0053\u0068\u0065\u0065\u0074\u003a\u0020\u0025\u0073", _dabba)
		}
		if _cfgde, _ccegb := _cebcf.(_a.EndElement); _ccegb && _cfgde.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_OleItem struct {

	// Object Name
	NameAttr string

	// Icon
	IconAttr *bool

	// Advise
	AdviseAttr *bool

	// Object is an Image
	PreferPicAttr *bool
}
type CT_Hyperlink struct {

	// Reference
	RefAttr string
	IdAttr  *string

	// Location
	LocationAttr *string

	// Tool Tip
	TooltipAttr *string

	// Display String
	DisplayAttr *string
}

func (_dagfc *CT_HeaderFooter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dagfc.DifferentOddEvenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069f\u0066\u0065\u0072e\u006e\u0074\u004f\u0064\u0064\u0045\u0076\u0065\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dagfc.DifferentOddEvenAttr))})
	}
	if _dagfc.DifferentFirstAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074F\u0069\u0072\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dagfc.DifferentFirstAttr))})
	}
	if _dagfc.ScaleWithDocAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0063\u0061l\u0065\u0057\u0069\u0074\u0068\u0044\u006f\u0063"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dagfc.ScaleWithDocAttr))})
	}
	if _dagfc.AlignWithMarginsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006ci\u0067\u006e\u0057i\u0074\u0068\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dagfc.AlignWithMarginsAttr))})
	}
	e.EncodeToken(start)
	if _dagfc.OddHeader != nil {
		_bdaee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ao\u0064\u0064\u0048\u0065\u0061\u0064\u0065\u0072"}}
		_fca.AddPreserveSpaceAttr(&_bdaee, *_dagfc.OddHeader)
		e.EncodeElement(_dagfc.OddHeader, _bdaee)
	}
	if _dagfc.OddFooter != nil {
		_bfce := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ao\u0064\u0064\u0046\u006f\u006f\u0074\u0065\u0072"}}
		_fca.AddPreserveSpaceAttr(&_bfce, *_dagfc.OddFooter)
		e.EncodeElement(_dagfc.OddFooter, _bfce)
	}
	if _dagfc.EvenHeader != nil {
		_faaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}}
		_fca.AddPreserveSpaceAttr(&_faaa, *_dagfc.EvenHeader)
		e.EncodeElement(_dagfc.EvenHeader, _faaa)
	}
	if _dagfc.EvenFooter != nil {
		_aaaee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}}
		_fca.AddPreserveSpaceAttr(&_aaaee, *_dagfc.EvenFooter)
		e.EncodeElement(_dagfc.EvenFooter, _aaaee)
	}
	if _dagfc.FirstHeader != nil {
		_bebga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0048e\u0061\u0064\u0065\u0072"}}
		_fca.AddPreserveSpaceAttr(&_bebga, *_dagfc.FirstHeader)
		e.EncodeElement(_dagfc.FirstHeader, _bebga)
	}
	if _dagfc.FirstFooter != nil {
		_bbfgd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0046o\u006f\u0074\u0065\u0072"}}
		_fca.AddPreserveSpaceAttr(&_bbfgd, *_dagfc.FirstFooter)
		e.EncodeElement(_dagfc.FirstFooter, _bbfgd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Macrosheet and its children
func (_ecffd *CT_Macrosheet) Validate() error {
	return _ecffd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074")
}
func (_adadaf ST_ItemType) ValidateWithPath(path string) error {
	switch _adadaf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_adadaf))
	}
	return nil
}
func (_ffbbg *Table) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ffbbg.CT_Table = *NewCT_Table()
	for _, _eafec := range start.Attr {
		if _eafec.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_fdcef, _dbfeb := _f.ParseUint(_eafec.Value, 10, 32)
			if _dbfeb != nil {
				return _dbfeb
			}
			_ceced := uint32(_fdcef)
			_ffbbg.DataDxfIdAttr = &_ceced
			continue
		}
		if _eafec.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_ggffc, _bccggg := _f.ParseUint(_eafec.Value, 10, 32)
			if _bccggg != nil {
				return _bccggg
			}
			_aeeeca := uint32(_ggffc)
			_ffbbg.TotalsRowDxfIdAttr = &_aeeeca
			continue
		}
		if _eafec.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ggdgdc, _bfeec := _eafec.Value, error(nil)
			if _bfeec != nil {
				return _bfeec
			}
			_ffbbg.NameAttr = &_ggdgdc
			continue
		}
		if _eafec.Name.Local == "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_egcacc, _gfaee := _f.ParseUint(_eafec.Value, 10, 32)
			if _gfaee != nil {
				return _gfaee
			}
			_gcgac := uint32(_egcacc)
			_ffbbg.HeaderRowBorderDxfIdAttr = &_gcgac
			continue
		}
		if _eafec.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_aaacbe, _efeeba := _eafec.Value, error(nil)
			if _efeeba != nil {
				return _efeeba
			}
			_ffbbg.CommentAttr = &_aaacbe
			continue
		}
		if _eafec.Name.Local == "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064" {
			_ddfdf, _dcfdab := _f.ParseUint(_eafec.Value, 10, 32)
			if _dcfdab != nil {
				return _dcfdab
			}
			_ddgcg := uint32(_ddfdf)
			_ffbbg.TableBorderDxfIdAttr = &_ddgcg
			continue
		}
		if _eafec.Name.Local == "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e" {
			_ffbbg.TableTypeAttr.UnmarshalXMLAttr(_eafec)
			continue
		}
		if _eafec.Name.Local == "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_geabe, _eagcc := _f.ParseUint(_eafec.Value, 10, 32)
			if _eagcc != nil {
				return _eagcc
			}
			_fcfdc := uint32(_geabe)
			_ffbbg.TotalsRowBorderDxfIdAttr = &_fcfdc
			continue
		}
		if _eafec.Name.Local == "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw" {
			_daacbb, _dgdcag := _f.ParseBool(_eafec.Value)
			if _dgdcag != nil {
				return _dgdcag
			}
			_ffbbg.InsertRowAttr = &_daacbb
			continue
		}
		if _eafec.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_fabffa, _agbab := _eafec.Value, error(nil)
			if _agbab != nil {
				return _agbab
			}
			_ffbbg.HeaderRowCellStyleAttr = &_fabffa
			continue
		}
		if _eafec.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_acfba, _gdeef := _f.ParseUint(_eafec.Value, 10, 32)
			if _gdeef != nil {
				return _gdeef
			}
			_gaabb := uint32(_acfba)
			_ffbbg.TotalsRowCountAttr = &_gaabb
			continue
		}
		if _eafec.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_adbfcg, _ebggad := _eafec.Value, error(nil)
			if _ebggad != nil {
				return _ebggad
			}
			_ffbbg.TotalsRowCellStyleAttr = &_adbfcg
			continue
		}
		if _eafec.Name.Local == "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065" {
			_gabeb, _gcfca := _eafec.Value, error(nil)
			if _gcfca != nil {
				return _gcfca
			}
			_ffbbg.DisplayNameAttr = _gabeb
			continue
		}
		if _eafec.Name.Local == "\u0069\u0064" {
			_becfg, _gdbfd := _f.ParseUint(_eafec.Value, 10, 32)
			if _gdbfd != nil {
				return _gdbfd
			}
			_ffbbg.IdAttr = uint32(_becfg)
			continue
		}
		if _eafec.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_ddbafa, _aaebc := _eafec.Value, error(nil)
			if _aaebc != nil {
				return _aaebc
			}
			_ffbbg.DataCellStyleAttr = &_ddbafa
			continue
		}
		if _eafec.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_faaggd, _aegfe := _f.ParseBool(_eafec.Value)
			if _aegfe != nil {
				return _aegfe
			}
			_ffbbg.PublishedAttr = &_faaggd
			continue
		}
		if _eafec.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_egagb, _befgfe := _f.ParseUint(_eafec.Value, 10, 32)
			if _befgfe != nil {
				return _befgfe
			}
			_bffbc := uint32(_egagb)
			_ffbbg.ConnectionIdAttr = &_bffbc
			continue
		}
		if _eafec.Name.Local == "\u0072\u0065\u0066" {
			_ggbcgd, _abeeb := _eafec.Value, error(nil)
			if _abeeb != nil {
				return _abeeb
			}
			_ffbbg.RefAttr = _ggbcgd
			continue
		}
		if _eafec.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074" {
			_dcbgbd, _dcdfdc := _f.ParseBool(_eafec.Value)
			if _dcdfdc != nil {
				return _dcdfdc
			}
			_ffbbg.InsertRowShiftAttr = &_dcbgbd
			continue
		}
		if _eafec.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e" {
			_fgecef, _ceded := _f.ParseBool(_eafec.Value)
			if _ceded != nil {
				return _ceded
			}
			_ffbbg.TotalsRowShownAttr = &_fgecef
			continue
		}
		if _eafec.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_ddbegg, _cggcdff := _f.ParseUint(_eafec.Value, 10, 32)
			if _cggcdff != nil {
				return _cggcdff
			}
			_efbdg := uint32(_ddbegg)
			_ffbbg.HeaderRowDxfIdAttr = &_efbdg
			continue
		}
		if _eafec.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_ecdadb, _adbgc := _f.ParseUint(_eafec.Value, 10, 32)
			if _adbgc != nil {
				return _adbgc
			}
			_gedbeg := uint32(_ecdadb)
			_ffbbg.HeaderRowCountAttr = &_gedbeg
			continue
		}
	}
_affae:
	for {
		_bgddca, _edgae := d.Token()
		if _edgae != nil {
			return _edgae
		}
		switch _ggdcf := _bgddca.(type) {
		case _a.StartElement:
			switch _ggdcf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_ffbbg.AutoFilter = NewCT_AutoFilter()
				if _ebeege := d.DecodeElement(_ffbbg.AutoFilter, &_ggdcf); _ebeege != nil {
					return _ebeege
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_ffbbg.SortState = NewCT_SortState()
				if _gdfbb := d.DecodeElement(_ffbbg.SortState, &_ggdcf); _gdfbb != nil {
					return _gdfbb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}:
				if _abaac := d.DecodeElement(_ffbbg.TableColumns, &_ggdcf); _abaac != nil {
					return _abaac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}:
				_ffbbg.TableStyleInfo = NewCT_TableStyleInfo()
				if _fgbbf := d.DecodeElement(_ffbbg.TableStyleInfo, &_ggdcf); _fgbbf != nil {
					return _fgbbf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffbbg.ExtLst = NewCT_ExtensionList()
				if _gbdab := d.DecodeElement(_ffbbg.ExtLst, &_ggdcf); _gbdab != nil {
					return _gbdab
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0061\u0062l\u0065 \u0025\u0076", _ggdcf.Name)
				if _debeg := d.Skip(); _debeg != nil {
					return _debeg
				}
			}
		case _a.EndElement:
			break _affae
		case _a.CharData:
		}
	}
	return nil
}
func (_beaaa ST_PivotFilterType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_geggd := _a.Attr{}
	_geggd.Name = name
	switch _beaaa {
	case ST_PivotFilterTypeUnset:
		_geggd.Value = ""
	case ST_PivotFilterTypeUnknown:
		_geggd.Value = "\u0075n\u006b\u006e\u006f\u0077\u006e"
	case ST_PivotFilterTypeCount:
		_geggd.Value = "\u0063\u006f\u0075n\u0074"
	case ST_PivotFilterTypePercent:
		_geggd.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_PivotFilterTypeSum:
		_geggd.Value = "\u0073\u0075\u006d"
	case ST_PivotFilterTypeCaptionEqual:
		_geggd.Value = "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeCaptionNotEqual:
		_geggd.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeCaptionBeginsWith:
		_geggd.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionNotBeginsWith:
		_geggd.Value = "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068"
	case ST_PivotFilterTypeCaptionEndsWith:
		_geggd.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionNotEndsWith:
		_geggd.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionContains:
		_geggd.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case ST_PivotFilterTypeCaptionNotContains:
		_geggd.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073"
	case ST_PivotFilterTypeCaptionGreaterThan:
		_geggd.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeCaptionGreaterThanOrEqual:
		_geggd.Value = "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l"
	case ST_PivotFilterTypeCaptionLessThan:
		_geggd.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeCaptionLessThanOrEqual:
		_geggd.Value = "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c"
	case ST_PivotFilterTypeCaptionBetween:
		_geggd.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeCaptionNotBetween:
		_geggd.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeValueEqual:
		_geggd.Value = "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueNotEqual:
		_geggd.Value = "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueGreaterThan:
		_geggd.Value = "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeValueGreaterThanOrEqual:
		_geggd.Value = "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueLessThan:
		_geggd.Value = "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeValueLessThanOrEqual:
		_geggd.Value = "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeValueBetween:
		_geggd.Value = "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeValueNotBetween:
		_geggd.Value = "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeDateEqual:
		_geggd.Value = "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l"
	case ST_PivotFilterTypeDateNotEqual:
		_geggd.Value = "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeDateOlderThan:
		_geggd.Value = "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeDateOlderThanOrEqual:
		_geggd.Value = "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeDateNewerThan:
		_geggd.Value = "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeDateNewerThanOrEqual:
		_geggd.Value = "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeDateBetween:
		_geggd.Value = "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeDateNotBetween:
		_geggd.Value = "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeTomorrow:
		_geggd.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_PivotFilterTypeToday:
		_geggd.Value = "\u0074\u006f\u0064a\u0079"
	case ST_PivotFilterTypeYesterday:
		_geggd.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_PivotFilterTypeNextWeek:
		_geggd.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeThisWeek:
		_geggd.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeLastWeek:
		_geggd.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeNextMonth:
		_geggd.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeThisMonth:
		_geggd.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeLastMonth:
		_geggd.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeNextQuarter:
		_geggd.Value = "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeThisQuarter:
		_geggd.Value = "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeLastQuarter:
		_geggd.Value = "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeNextYear:
		_geggd.Value = "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeThisYear:
		_geggd.Value = "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeLastYear:
		_geggd.Value = "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeYearToDate:
		_geggd.Value = "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case ST_PivotFilterTypeQ1:
		_geggd.Value = "\u0051\u0031"
	case ST_PivotFilterTypeQ2:
		_geggd.Value = "\u0051\u0032"
	case ST_PivotFilterTypeQ3:
		_geggd.Value = "\u0051\u0033"
	case ST_PivotFilterTypeQ4:
		_geggd.Value = "\u0051\u0034"
	case ST_PivotFilterTypeM1:
		_geggd.Value = "\u004d\u0031"
	case ST_PivotFilterTypeM2:
		_geggd.Value = "\u004d\u0032"
	case ST_PivotFilterTypeM3:
		_geggd.Value = "\u004d\u0033"
	case ST_PivotFilterTypeM4:
		_geggd.Value = "\u004d\u0034"
	case ST_PivotFilterTypeM5:
		_geggd.Value = "\u004d\u0035"
	case ST_PivotFilterTypeM6:
		_geggd.Value = "\u004d\u0036"
	case ST_PivotFilterTypeM7:
		_geggd.Value = "\u004d\u0037"
	case ST_PivotFilterTypeM8:
		_geggd.Value = "\u004d\u0038"
	case ST_PivotFilterTypeM9:
		_geggd.Value = "\u004d\u0039"
	case ST_PivotFilterTypeM10:
		_geggd.Value = "\u004d\u0031\u0030"
	case ST_PivotFilterTypeM11:
		_geggd.Value = "\u004d\u0031\u0031"
	case ST_PivotFilterTypeM12:
		_geggd.Value = "\u004d\u0031\u0032"
	}
	return _geggd, nil
}

type CT_SheetPr struct {

	// Synch Horizontal
	SyncHorizontalAttr *bool

	// Synch Vertical
	SyncVerticalAttr *bool

	// Synch Reference
	SyncRefAttr *string

	// Transition Formula Evaluation
	TransitionEvaluationAttr *bool

	// Transition Formula Entry
	TransitionEntryAttr *bool

	// Published
	PublishedAttr *bool

	// Code Name
	CodeNameAttr *string

	// Filter Mode
	FilterModeAttr *bool

	// Enable Conditional Formatting Calculations
	EnableFormatConditionsCalculationAttr *bool

	// Sheet Tab Color
	TabColor *CT_Color

	// Outline Properties
	OutlinePr *CT_OutlinePr

	// Page Setup Properties
	PageSetUpPr *CT_PageSetUpPr
}

// ValidateWithPath validates the CT_SheetIdMap and its children, prefixing error messages with path
func (_bbdefd *CT_SheetIdMap) ValidateWithPath(path string) error {
	for _ddggba, _fgdaaa := range _bbdefd.SheetId {
		if _egeceb := _fgdaaa.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053\u0068\u0065\u0065\u0074\u0049d\u005b\u0025\u0064\u005d", path, _ddggba)); _egeceb != nil {
			return _egeceb
		}
	}
	return nil
}
func (_bgeac *CT_ExtensionList) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _bgeac.Ext != nil {
		_afgg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0065\u0078\u0074"}}
		for _, _egeaa := range _bgeac.Ext {
			e.EncodeElement(_egeaa, _afgg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SheetDimension and its children
func (_ddbac *CT_SheetDimension) Validate() error {
	return _ddbac.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e")
}
func (_dcdbg *CT_PivotTableStyle) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dcdbg.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_dcdbg.NameAttr)})
	}
	if _dcdbg.ShowRowHeadersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcdbg.ShowRowHeadersAttr))})
	}
	if _dcdbg.ShowColHeadersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcdbg.ShowColHeadersAttr))})
	}
	if _dcdbg.ShowRowStripesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcdbg.ShowRowStripesAttr))})
	}
	if _dcdbg.ShowColStripesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcdbg.ShowColStripesAttr))})
	}
	if _dcdbg.ShowLastColumnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dcdbg.ShowLastColumnAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Sets and its children, prefixing error messages with path
func (_cgbea *CT_Sets) ValidateWithPath(path string) error {
	for _ccddec, _edddfa := range _cgbea.Set {
		if _aaffe := _edddfa.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _ccddec)); _aaffe != nil {
			return _aaffe
		}
	}
	return nil
}
func (_dgceef *CT_XmlCellPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dgceef.XmlPr = NewCT_XmlPr()
	for _, _fgcfbb := range start.Attr {
		if _fgcfbb.Name.Local == "\u0069\u0064" {
			_eeeffe, _gfdac := _f.ParseUint(_fgcfbb.Value, 10, 32)
			if _gfdac != nil {
				return _gfdac
			}
			_dgceef.IdAttr = uint32(_eeeffe)
			continue
		}
		if _fgcfbb.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_ccgaf, _bgegdb := _fgcfbb.Value, error(nil)
			if _bgegdb != nil {
				return _bgegdb
			}
			_dgceef.UniqueNameAttr = &_ccgaf
			continue
		}
	}
_fbfeb:
	for {
		_cffafc, _ggccf := d.Token()
		if _ggccf != nil {
			return _ggccf
		}
		switch _eebabbg := _cffafc.(type) {
		case _a.StartElement:
			switch _eebabbg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u006d\u006cP\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u006d\u006cP\u0072"}:
				if _fcafa := d.DecodeElement(_dgceef.XmlPr, &_eebabbg); _fcafa != nil {
					return _fcafa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgceef.ExtLst = NewCT_ExtensionList()
				if _cagccc := d.DecodeElement(_dgceef.ExtLst, &_eebabbg); _cagccc != nil {
					return _cagccc
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_X\u006d\u006cC\u0065\u006c\u006c\u0050\u0072\u0020\u0025\u0076", _eebabbg.Name)
				if _febfc := d.Skip(); _febfc != nil {
					return _febfc
				}
			}
		case _a.EndElement:
			break _fbfeb
		case _a.CharData:
		}
	}
	return nil
}
func (_gcdbf *CT_OutlinePr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gcdbf.ApplyStylesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0070\u0070\u006c\u0079\u0053\u0074\u0079\u006c\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gcdbf.ApplyStylesAttr))})
	}
	if _gcdbf.SummaryBelowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0075\u006dm\u0061\u0072\u0079\u0042\u0065\u006c\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gcdbf.SummaryBelowAttr))})
	}
	if _gcdbf.SummaryRightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0075\u006dm\u0061\u0072\u0079\u0052\u0069\u0067\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gcdbf.SummaryRightAttr))})
	}
	if _gcdbf.ShowOutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gcdbf.ShowOutlineSymbolsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_FileSharing() *CT_FileSharing { _fbgb := &CT_FileSharing{}; return _fbgb }
func (_dbdcec *CT_XmlColumnPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bdfaa := range start.Attr {
		if _bdfaa.Name.Local == "\u006d\u0061\u0070I\u0064" {
			_bbbea, _gbdccg := _f.ParseUint(_bdfaa.Value, 10, 32)
			if _gbdccg != nil {
				return _gbdccg
			}
			_dbdcec.MapIdAttr = uint32(_bbbea)
			continue
		}
		if _bdfaa.Name.Local == "\u0078\u0070\u0061t\u0068" {
			_ebgbfc, _ggecc := _bdfaa.Value, error(nil)
			if _ggecc != nil {
				return _ggecc
			}
			_dbdcec.XpathAttr = _ebgbfc
			continue
		}
		if _bdfaa.Name.Local == "\u0064\u0065\u006eo\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0064" {
			_gacfcg, _adfcd := _f.ParseBool(_bdfaa.Value)
			if _adfcd != nil {
				return _adfcd
			}
			_dbdcec.DenormalizedAttr = &_gacfcg
			continue
		}
		if _bdfaa.Name.Local == "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065" {
			_feadda, _bbffe := _bdfaa.Value, error(nil)
			if _bbffe != nil {
				return _bbffe
			}
			_dbdcec.XmlDataTypeAttr = _feadda
			continue
		}
	}
_dcdeg:
	for {
		_dagcb, _defbd := d.Token()
		if _defbd != nil {
			return _defbd
		}
		switch _cadec := _dagcb.(type) {
		case _a.StartElement:
			switch _cadec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbdcec.ExtLst = NewCT_ExtensionList()
				if _dfge := d.DecodeElement(_dbdcec.ExtLst, &_cadec); _dfge != nil {
					return _dfge
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006c\u0075m\u006eP\u0072\u0020\u0025\u0076", _cadec.Name)
				if _cbcded := d.Skip(); _cbcded != nil {
					return _cbcded
				}
			}
		case _a.EndElement:
			break _dcdeg
		case _a.CharData:
		}
	}
	return nil
}
func (_deada *Workbook) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_deada.CT_Workbook = *NewCT_Workbook()
	for _, _gbdf := range start.Attr {
		if _gbdf.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_deada.ConformanceAttr.UnmarshalXMLAttr(_gbdf)
			continue
		}
	}
_aaaed:
	for {
		_eafdd, _dccgc := d.Token()
		if _dccgc != nil {
			return _dccgc
		}
		switch _bebdga := _eafdd.(type) {
		case _a.StartElement:
			switch _bebdga.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}:
				_deada.FileVersion = NewCT_FileVersion()
				if _eeddb := d.DecodeElement(_deada.FileVersion, &_bebdga); _eeddb != nil {
					return _eeddb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}:
				_deada.FileSharing = NewCT_FileSharing()
				if _eacdb := d.DecodeElement(_deada.FileSharing, &_bebdga); _eacdb != nil {
					return _eacdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}:
				_deada.WorkbookPr = NewCT_WorkbookPr()
				if _aacgc := d.DecodeElement(_deada.WorkbookPr, &_bebdga); _aacgc != nil {
					return _aacgc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}:
				_deada.WorkbookProtection = NewCT_WorkbookProtection()
				if _aefdc := d.DecodeElement(_deada.WorkbookProtection, &_bebdga); _aefdc != nil {
					return _aefdc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}:
				_deada.BookViews = NewCT_BookViews()
				if _eagde := d.DecodeElement(_deada.BookViews, &_bebdga); _eagde != nil {
					return _eagde
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}:
				if _dfadf := d.DecodeElement(_deada.Sheets, &_bebdga); _dfadf != nil {
					return _dfadf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}:
				_deada.FunctionGroups = NewCT_FunctionGroups()
				if _ceecc := d.DecodeElement(_deada.FunctionGroups, &_bebdga); _ceecc != nil {
					return _ceecc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}:
				_deada.ExternalReferences = NewCT_ExternalReferences()
				if _fafcb := d.DecodeElement(_deada.ExternalReferences, &_bebdga); _fafcb != nil {
					return _fafcb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_deada.DefinedNames = NewCT_DefinedNames()
				if _aaagbf := d.DecodeElement(_deada.DefinedNames, &_bebdga); _aaagbf != nil {
					return _aaagbf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}:
				_deada.CalcPr = NewCT_CalcPr()
				if _acfgb := d.DecodeElement(_deada.CalcPr, &_bebdga); _acfgb != nil {
					return _acfgb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}:
				_deada.OleSize = NewCT_OleSize()
				if _adegg := d.DecodeElement(_deada.OleSize, &_bebdga); _adegg != nil {
					return _adegg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}:
				_deada.CustomWorkbookViews = NewCT_CustomWorkbookViews()
				if _gdfed := d.DecodeElement(_deada.CustomWorkbookViews, &_bebdga); _gdfed != nil {
					return _gdfed
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}:
				_deada.PivotCaches = NewCT_PivotCaches()
				if _ebbagb := d.DecodeElement(_deada.PivotCaches, &_bebdga); _ebbagb != nil {
					return _ebbagb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}:
				_deada.SmartTagPr = NewCT_SmartTagPr()
				if _eacdcf := d.DecodeElement(_deada.SmartTagPr, &_bebdga); _eacdcf != nil {
					return _eacdcf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}:
				_deada.SmartTagTypes = NewCT_SmartTagTypes()
				if _efacg := d.DecodeElement(_deada.SmartTagTypes, &_bebdga); _efacg != nil {
					return _efacg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}:
				_deada.WebPublishing = NewCT_WebPublishing()
				if _bdaffg := d.DecodeElement(_deada.WebPublishing, &_bebdga); _bdaffg != nil {
					return _bdaffg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}:
				_gdfege := NewCT_FileRecoveryPr()
				if _dabde := d.DecodeElement(_gdfege, &_bebdga); _dabde != nil {
					return _dabde
				}
				_deada.FileRecoveryPr = append(_deada.FileRecoveryPr, _gdfege)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}:
				_deada.WebPublishObjects = NewCT_WebPublishObjects()
				if _ecdaef := d.DecodeElement(_deada.WebPublishObjects, &_bebdga); _ecdaef != nil {
					return _ecdaef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_deada.ExtLst = NewCT_ExtensionList()
				if _gdegef := d.DecodeElement(_deada.ExtLst, &_bebdga); _gdegef != nil {
					return _gdegef
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0020\u0025\u0076", _bebdga.Name)
				if _fbcdea := d.Skip(); _fbcdea != nil {
					return _fbcdea
				}
			}
		case _a.EndElement:
			break _aaaed
		case _a.CharData:
		}
	}
	return nil
}
func (_bbfca ST_DateTimeGrouping) Validate() error { return _bbfca.ValidateWithPath("") }
func NewCT_DdeItems() *CT_DdeItems                 { _fgdgg := &CT_DdeItems{}; return _fgdgg }
func (_dddcbdf ST_FieldSortType) String() string {
	switch _dddcbdf {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006e\u0075\u0061\u006c"
	case 2:
		return "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case 3:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	}
	return ""
}

// ValidateWithPath validates the CT_TableColumn and its children, prefixing error messages with path
func (_bfdcbf *CT_TableColumn) ValidateWithPath(path string) error {
	if _gacggab := _bfdcbf.TotalsRowFunctionAttr.ValidateWithPath(path + "\u002f\u0054\u006f\u0074al\u0073\u0052\u006f\u0077\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0041\u0074t\u0072"); _gacggab != nil {
		return _gacggab
	}
	if _bfdcbf.CalculatedColumnFormula != nil {
		if _ceabf := _bfdcbf.CalculatedColumnFormula.ValidateWithPath(path + "\u002fC\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0043\u006fl\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"); _ceabf != nil {
			return _ceabf
		}
	}
	if _bfdcbf.TotalsRowFormula != nil {
		if _ceggd := _bfdcbf.TotalsRowFormula.ValidateWithPath(path + "\u002f\u0054\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u006fr\u006d\u0075\u006c\u0061"); _ceggd != nil {
			return _ceggd
		}
	}
	if _bfdcbf.XmlColumnPr != nil {
		if _debcgb := _bfdcbf.XmlColumnPr.ValidateWithPath(path + "\u002f\u0058\u006dl\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"); _debcgb != nil {
			return _debcgb
		}
	}
	if _bfdcbf.ExtLst != nil {
		if _bebdg := _bfdcbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bebdg != nil {
			return _bebdg
		}
	}
	return nil
}
func (_efbcf *CT_DiscretePr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _efbcf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_efbcf.CountAttr)})
	}
	e.EncodeToken(start)
	_aecfb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078"}}
	for _, _daeab := range _efbcf.X {
		e.EncodeElement(_daeab, _aecfb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Comment and its children, prefixing error messages with path
func (_gcbe *CT_Comment) ValidateWithPath(path string) error {
	if _gcbe.GuidAttr != nil {
		if !_ae.ST_GuidPatternRe.MatchString(*_gcbe.GuidAttr) {
			return _fc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ae.ST_GuidPatternRe, *_gcbe.GuidAttr)
		}
	}
	if _dacff := _gcbe.Text.ValidateWithPath(path + "\u002f\u0054\u0065x\u0074"); _dacff != nil {
		return _dacff
	}
	if _gcbe.CommentPr != nil {
		if _bbbd := _gcbe.CommentPr.ValidateWithPath(path + "\u002f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072"); _bbbd != nil {
			return _bbbd
		}
	}
	return nil
}
func (_gdebc *ST_GrowShrinkType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gdebc = 0
	case "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065":
		*_gdebc = 1
	case "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072":
		*_gdebc = 2
	case "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072":
		*_gdebc = 3
	}
	return nil
}
func (_affbb *CT_Font) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gcbg:
	for {
		_eaddf, _cceed := d.Token()
		if _cceed != nil {
			return _cceed
		}
		switch _eabe := _eaddf.(type) {
		case _a.StartElement:
			switch _eabe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}:
				_ecda := NewCT_FontName()
				if _efcc := d.DecodeElement(_ecda, &_eabe); _efcc != nil {
					return _efcc
				}
				_affbb.Name = append(_affbb.Name, _ecda)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
				_gegaf := NewCT_IntProperty()
				if _dbegaf := d.DecodeElement(_gegaf, &_eabe); _dbegaf != nil {
					return _dbegaf
				}
				_affbb.Charset = append(_affbb.Charset, _gegaf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
				_egdc := NewCT_FontFamily()
				if _fbece := d.DecodeElement(_egdc, &_eabe); _fbece != nil {
					return _fbece
				}
				_affbb.Family = append(_affbb.Family, _egdc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_faed := NewCT_BooleanProperty()
				if _abdbe := d.DecodeElement(_faed, &_eabe); _abdbe != nil {
					return _abdbe
				}
				_affbb.B = append(_affbb.B, _faed)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_cdce := NewCT_BooleanProperty()
				if _gaafe := d.DecodeElement(_cdce, &_eabe); _gaafe != nil {
					return _gaafe
				}
				_affbb.I = append(_affbb.I, _cdce)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
				_abegg := NewCT_BooleanProperty()
				if _ddcb := d.DecodeElement(_abegg, &_eabe); _ddcb != nil {
					return _ddcb
				}
				_affbb.Strike = append(_affbb.Strike, _abegg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
				_ffacd := NewCT_BooleanProperty()
				if _fdaed := d.DecodeElement(_ffacd, &_eabe); _fdaed != nil {
					return _fdaed
				}
				_affbb.Outline = append(_affbb.Outline, _ffacd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_febcc := NewCT_BooleanProperty()
				if _ggfbda := d.DecodeElement(_febcc, &_eabe); _ggfbda != nil {
					return _ggfbda
				}
				_affbb.Shadow = append(_affbb.Shadow, _febcc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
				_eeef := NewCT_BooleanProperty()
				if _gabf := d.DecodeElement(_eeef, &_eabe); _gabf != nil {
					return _gabf
				}
				_affbb.Condense = append(_affbb.Condense, _eeef)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
				_ccdfc := NewCT_BooleanProperty()
				if _eddee := d.DecodeElement(_ccdfc, &_eabe); _eddee != nil {
					return _eddee
				}
				_affbb.Extend = append(_affbb.Extend, _ccdfc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_aegfb := NewCT_Color()
				if _gaed := d.DecodeElement(_aegfb, &_eabe); _gaed != nil {
					return _gaed
				}
				_affbb.Color = append(_affbb.Color, _aegfb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
				_fcagd := NewCT_FontSize()
				if _ffce := d.DecodeElement(_fcagd, &_eabe); _ffce != nil {
					return _ffce
				}
				_affbb.Sz = append(_affbb.Sz, _fcagd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
				_cbegb := NewCT_UnderlineProperty()
				if _agdfb := d.DecodeElement(_cbegb, &_eabe); _agdfb != nil {
					return _agdfb
				}
				_affbb.U = append(_affbb.U, _cbegb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
				_ggbg := NewCT_VerticalAlignFontProperty()
				if _fefe := d.DecodeElement(_ggbg, &_eabe); _fefe != nil {
					return _fefe
				}
				_affbb.VertAlign = append(_affbb.VertAlign, _ggbg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
				_bcbee := NewCT_FontScheme()
				if _bfdbf := d.DecodeElement(_bcbee, &_eabe); _bfdbf != nil {
					return _bfdbf
				}
				_affbb.Scheme = append(_affbb.Scheme, _bcbee)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u006f\u006e\u0074\u0020\u0025\u0076", _eabe.Name)
				if _bgaef := d.Skip(); _bgaef != nil {
					return _bgaef
				}
			}
		case _a.EndElement:
			break _gcbg
		case _a.CharData:
		}
	}
	return nil
}
func (_edddc *CT_RevisionDefinedName) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _edddc.LocalSheetIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.LocalSheetIdAttr)})
	}
	if _edddc.CustomViewAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0056\u0069\u0065\u0077"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_edddc.CustomViewAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _edddc.NameAttr)})
	if _edddc.FunctionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_edddc.FunctionAttr))})
	}
	if _edddc.OldFunctionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "o\u006c\u0064\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_edddc.OldFunctionAttr))})
	}
	if _edddc.FunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.FunctionGroupIdAttr)})
	}
	if _edddc.OldFunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fl\u0064F\u0075\u006e\u0063\u0074\u0069o\u006e\u0047r\u006f\u0075\u0070\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.OldFunctionGroupIdAttr)})
	}
	if _edddc.ShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.ShortcutKeyAttr)})
	}
	if _edddc.OldShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064\u0053\u0068\u006f\u0072\u0074\u0063u\u0074\u004b\u0065\u0079"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.OldShortcutKeyAttr)})
	}
	if _edddc.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_edddc.HiddenAttr))})
	}
	if _edddc.OldHiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fl\u0064\u0048\u0069\u0064\u0064\u0065n"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_edddc.OldHiddenAttr))})
	}
	if _edddc.CustomMenuAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.CustomMenuAttr)})
	}
	if _edddc.OldCustomMenuAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064\u0043\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.OldCustomMenuAttr)})
	}
	if _edddc.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.DescriptionAttr)})
	}
	if _edddc.OldDescriptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064\u0044\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.OldDescriptionAttr)})
	}
	if _edddc.HelpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u006c\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.HelpAttr)})
	}
	if _edddc.OldHelpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fl\u0064\u0048\u0065\u006c\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.OldHelpAttr)})
	}
	if _edddc.StatusBarAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.StatusBarAttr)})
	}
	if _edddc.OldStatusBarAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064S\u0074\u0061\u0074\u0075\u0073\u0042\u0061\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.OldStatusBarAttr)})
	}
	if _edddc.CommentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.CommentAttr)})
	}
	if _edddc.OldCommentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064\u0043\u006f\u006d\u006d\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.OldCommentAttr)})
	}
	if _edddc.RIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_edddc.RIdAttr)})
	}
	if _edddc.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_edddc.UaAttr))})
	}
	if _edddc.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_edddc.RaAttr))})
	}
	e.EncodeToken(start)
	if _edddc.Formula != nil {
		_bcaage := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061"}}
		_fca.AddPreserveSpaceAttr(&_bcaage, *_edddc.Formula)
		e.EncodeElement(_edddc.Formula, _bcaage)
	}
	if _edddc.OldFormula != nil {
		_bdggc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}}
		_fca.AddPreserveSpaceAttr(&_bdggc, *_edddc.OldFormula)
		e.EncodeElement(_edddc.OldFormula, _bdggc)
	}
	if _edddc.ExtLst != nil {
		_egabb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_edddc.ExtLst, _egabb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_agaf *CT_MetadataBlock) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_bdbgd:
	for {
		_ffdc, _ageba := d.Token()
		if _ageba != nil {
			return _ageba
		}
		switch _abfde := _ffdc.(type) {
		case _a.StartElement:
			switch _abfde.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063"}:
				_aeefce := NewCT_MetadataRecord()
				if _badce := d.DecodeElement(_aeefce, &_abfde); _badce != nil {
					return _badce
				}
				_agaf.Rc = append(_agaf.Rc, _aeefce)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0020\u0025v", _abfde.Name)
				if _bcda := d.Skip(); _bcda != nil {
					return _bcda
				}
			}
		case _a.EndElement:
			break _bdbgd
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_DynamicFilter and its children
func (_cfea *CT_DynamicFilter) Validate() error {
	return _cfea.ValidateWithPath("\u0043\u0054_\u0044\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072")
}

type CT_Field struct {

	// Field Index
	XAttr int32
}

func (_ecee *CT_Cfvo) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ecee.TypeAttr = ST_CfvoType(1)
	for _, _bffag := range start.Attr {
		if _bffag.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ecee.TypeAttr.UnmarshalXMLAttr(_bffag)
			continue
		}
		if _bffag.Name.Local == "\u0076\u0061\u006c" {
			_afbg, _cgfcb := _bffag.Value, error(nil)
			if _cgfcb != nil {
				return _cgfcb
			}
			_ecee.ValAttr = &_afbg
			continue
		}
		if _bffag.Name.Local == "\u0067\u0074\u0065" {
			_bdbc, _dfcd := _f.ParseBool(_bffag.Value)
			if _dfcd != nil {
				return _dfcd
			}
			_ecee.GteAttr = &_bdbc
			continue
		}
	}
_eegg:
	for {
		_gebg, _fbbc := d.Token()
		if _fbbc != nil {
			return _fbbc
		}
		switch _eag := _gebg.(type) {
		case _a.StartElement:
			switch _eag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecee.ExtLst = NewCT_ExtensionList()
				if _adbg := d.DecodeElement(_ecee.ExtLst, &_eag); _adbg != nil {
					return _adbg
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0066\u0076\u006f\u0020\u0025\u0076", _eag.Name)
				if _ggcc := d.Skip(); _ggcc != nil {
					return _ggcc
				}
			}
		case _a.EndElement:
			break _eegg
		case _a.CharData:
		}
	}
	return nil
}
func (_fedfb *CT_FontSize) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ddgef := range start.Attr {
		if _ddgef.Name.Local == "\u0076\u0061\u006c" {
			_bacde, _baacb := _f.ParseFloat(_ddgef.Value, 64)
			if _baacb != nil {
				return _baacb
			}
			_fedfb.ValAttr = _bacde
			continue
		}
	}
	for {
		_aaaafg, _agea := d.Token()
		if _agea != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0073", _agea)
		}
		if _gagca, _cagda := _aaaafg.(_a.EndElement); _cagda && _gagca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_babada ST_PhoneticAlignment) String() string {
	switch _babada {
	case 0:
		return ""
	case 1:
		return "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case 2:
		return "\u006c\u0065\u0066\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func (_ddccbf *CT_SheetData) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _ddccbf.Row != nil {
		_dggac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u006f\u0077"}}
		for _, _debcdg := range _ddccbf.Row {
			e.EncodeElement(_debcdg, _dggac)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_CacheField() *CT_CacheField { _adcd := &CT_CacheField{}; return _adcd }

type ST_PhoneticAlignment byte

func NewCT_DiscretePr() *CT_DiscretePr { _ebeea := &CT_DiscretePr{}; return _ebeea }
func NewCT_Xf() *CT_Xf                 { _befbga := &CT_Xf{}; return _befbga }

const (
	ST_TextVAlignUnset       ST_TextVAlign = 0
	ST_TextVAlignTop         ST_TextVAlign = 1
	ST_TextVAlignCenter      ST_TextVAlign = 2
	ST_TextVAlignBottom      ST_TextVAlign = 3
	ST_TextVAlignJustify     ST_TextVAlign = 4
	ST_TextVAlignDistributed ST_TextVAlign = 5
)

func NewCT_WorkbookPr() *CT_WorkbookPr { _gcfgda := &CT_WorkbookPr{}; return _gcfgda }
func (_caadf *CT_Index) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afbae := range start.Attr {
		if _afbae.Name.Local == "\u0076" {
			_deecf, _ggcag := _f.ParseUint(_afbae.Value, 10, 32)
			if _ggcag != nil {
				return _ggcag
			}
			_caadf.VAttr = uint32(_deecf)
			continue
		}
	}
	for {
		_edafb, _fgagfe := d.Token()
		if _fgagfe != nil {
			return _fc.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fI\u006e\u0064\u0065\u0078: \u0025\u0073", _fgagfe)
		}
		if _aagcf, _gbced := _edafb.(_a.EndElement); _gbced && _aagcf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_RevisionInsertSheet and its children
func (_egdaf *CT_RevisionInsertSheet) Validate() error {
	return _egdaf.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0049\u006e\u0073\u0065\u0072\u0074\u0053\u0068\u0065e\u0074")
}
func NewCT_OleObjects() *CT_OleObjects { _faea := &CT_OleObjects{}; return _faea }
func (_abggc *CT_CustomProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _abggc.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _abggc.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bbabe *CT_Users) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bbabe.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_bbabe.CountAttr)})
	}
	e.EncodeToken(start)
	if _bbabe.UserInfo != nil {
		_addada := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}}
		for _, _bfgcg := range _bbabe.UserInfo {
			e.EncodeElement(_bfgcg, _addada)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_HeaderFooter() *CT_HeaderFooter { _addc := &CT_HeaderFooter{}; return _addc }
func (_gdfdab *CT_TableStyleInfo) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gdfdab.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_gdfdab.NameAttr)})
	}
	if _gdfdab.ShowFirstColumnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006fw\u0046\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gdfdab.ShowFirstColumnAttr))})
	}
	if _gdfdab.ShowLastColumnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gdfdab.ShowLastColumnAttr))})
	}
	if _gdfdab.ShowRowStripesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gdfdab.ShowRowStripesAttr))})
	}
	if _gdfdab.ShowColumnStripesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gdfdab.ShowColumnStripesAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_LevelGroup struct {

	// Group Name
	NameAttr string

	// Unique Group Name
	UniqueNameAttr string

	// Group Caption
	CaptionAttr string

	// Parent Unique Name
	UniqueParentAttr *string

	// Group Id
	IdAttr *int32

	// OLAP Group Members
	GroupMembers *CT_GroupMembers
}

// Validate validates the CT_Sst and its children
func (_cbdfcb *CT_Sst) Validate() error {
	return _cbdfcb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0073\u0074")
}
func (_cbcde *CT_PivotFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fedeg := range start.Attr {
		if _fedeg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dcfdg, _cbdc := _f.ParseUint(_fedeg.Value, 10, 32)
			if _cbdc != nil {
				return _cbdc
			}
			_ffcfc := uint32(_dcfdg)
			_cbcde.CountAttr = &_ffcfc
			continue
		}
	}
_bfbbg:
	for {
		_ffadb, _ccca := d.Token()
		if _ccca != nil {
			return _ccca
		}
		switch _edacdd := _ffadb.(type) {
		case _a.StartElement:
			switch _edacdd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}:
				_aadgbe := NewCT_PivotField()
				if _dfee := d.DecodeElement(_aadgbe, &_edacdd); _dfee != nil {
					return _dfee
				}
				_cbcde.PivotField = append(_cbcde.PivotField, _aadgbe)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069e\u006cd\u0073\u0020\u0025\u0076", _edacdd.Name)
				if _cdeag := d.Skip(); _cdeag != nil {
					return _cdeag
				}
			}
		case _a.EndElement:
			break _bfbbg
		case _a.CharData:
		}
	}
	return nil
}
func (_ebfdb *CT_CustomFilter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ebfdb.OperatorAttr != ST_FilterOperatorUnset {
		_cgde, _ccee := _ebfdb.OperatorAttr.MarshalXMLAttr(_a.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _ccee != nil {
			return _ccee
		}
		start.Attr = append(start.Attr, _cgde)
	}
	if _ebfdb.ValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_ebfdb.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_agf *CT_BooleanProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _agf.ValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_agf.ValAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cdebd ST_WebSourceType) Validate() error { return _cdebd.ValidateWithPath("") }
func (_efbcfc *CT_RevisionConflict) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _efbcfc.SheetIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_efbcfc.SheetIdAttr)})
	}
	if _efbcfc.RIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_efbcfc.RIdAttr)})
	}
	if _efbcfc.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efbcfc.UaAttr))})
	}
	if _efbcfc.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efbcfc.RaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ffaed ST_PatternType) Validate() error { return _ffaed.ValidateWithPath("") }
func (_ggfccb *CT_RangeSet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ggfccb.I1Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0031"}, Value: _fc.Sprintf("\u0025\u0076", *_ggfccb.I1Attr)})
	}
	if _ggfccb.I2Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0032"}, Value: _fc.Sprintf("\u0025\u0076", *_ggfccb.I2Attr)})
	}
	if _ggfccb.I3Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0033"}, Value: _fc.Sprintf("\u0025\u0076", *_ggfccb.I3Attr)})
	}
	if _ggfccb.I4Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0034"}, Value: _fc.Sprintf("\u0025\u0076", *_ggfccb.I4Attr)})
	}
	if _ggfccb.RefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_ggfccb.RefAttr)})
	}
	if _ggfccb.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_ggfccb.NameAttr)})
	}
	if _ggfccb.SheetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ggfccb.SheetAttr)})
	}
	if _ggfccb.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_ggfccb.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_DateTimeGrouping byte

// ValidateWithPath validates the Sst and its children, prefixing error messages with path
func (_acaac *Sst) ValidateWithPath(path string) error {
	if _ecccgd := _acaac.CT_Sst.ValidateWithPath(path); _ecccgd != nil {
		return _ecccgd
	}
	return nil
}

// Validate validates the CT_SmartTagPr and its children
func (_aadgbd *CT_SmartTagPr) Validate() error {
	return _aadgbd.ValidateWithPath("\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072")
}
func (_eefbc *CT_SheetDimension) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _eefbc.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ccdfgd *ST_CredMethod) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cdeefb, _cggdef := d.Token()
	if _cggdef != nil {
		return _cggdef
	}
	if _acadd, _cgdbb := _cdeefb.(_a.EndElement); _cgdbb && _acadd.Name == start.Name {
		*_ccdfgd = 1
		return nil
	}
	if _eedag, _faefc := _cdeefb.(_a.CharData); !_faefc {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdeefb)
	} else {
		switch string(_eedag) {
		case "":
			*_ccdfgd = 0
		case "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064":
			*_ccdfgd = 1
		case "\u006e\u006f\u006e\u0065":
			*_ccdfgd = 2
		case "\u0073\u0074\u006f\u0072\u0065\u0064":
			*_ccdfgd = 3
		case "\u0070\u0072\u006f\u006d\u0070\u0074":
			*_ccdfgd = 4
		}
	}
	_cdeefb, _cggdef = d.Token()
	if _cggdef != nil {
		return _cggdef
	}
	if _ecagb, _cffad := _cdeefb.(_a.EndElement); _cffad && _ecagb.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdeefb)
}

// Validate validates the CT_PivotDimension and its children
func (_geeba *CT_PivotDimension) Validate() error {
	return _geeba.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e")
}
func (_bcaad *CT_Mdx) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bcaad.FAttr = ST_MdxFunctionType(1)
	for _, _abaee := range start.Attr {
		if _abaee.Name.Local == "\u006e" {
			_edaeb, _fcabg := _f.ParseUint(_abaee.Value, 10, 32)
			if _fcabg != nil {
				return _fcabg
			}
			_bcaad.NAttr = uint32(_edaeb)
			continue
		}
		if _abaee.Name.Local == "\u0066" {
			_bcaad.FAttr.UnmarshalXMLAttr(_abaee)
			continue
		}
	}
_agbec:
	for {
		_dgef, _gfcdc := d.Token()
		if _gfcdc != nil {
			return _gfcdc
		}
		switch _fgad := _dgef.(type) {
		case _a.StartElement:
			switch _fgad.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_bcaad.T = NewCT_MdxTuple()
				if _bddgc := d.DecodeElement(_bcaad.T, &_fgad); _bddgc != nil {
					return _bddgc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}:
				_bcaad.Ms = NewCT_MdxSet()
				if _befef := d.DecodeElement(_bcaad.Ms, &_fgad); _befef != nil {
					return _befef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}:
				_bcaad.P = NewCT_MdxMemeberProp()
				if _bcgda := d.DecodeElement(_bcaad.P, &_fgad); _bcgda != nil {
					return _bcgda
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}:
				_bcaad.K = NewCT_MdxKPI()
				if _gdbfb := d.DecodeElement(_bcaad.K, &_fgad); _gdbfb != nil {
					return _gdbfb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u0020\u0025\u0076", _fgad.Name)
				if _dgaef := d.Skip(); _dgaef != nil {
					return _dgaef
				}
			}
		case _a.EndElement:
			break _agbec
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_PivotFilter() *CT_PivotFilter {
	_gefaf := &CT_PivotFilter{}
	_gefaf.TypeAttr = ST_PivotFilterType(1)
	_gefaf.AutoFilter = NewCT_AutoFilter()
	return _gefaf
}

// Validate validates the CT_CalcPr and its children
func (_dfabc *CT_CalcPr) Validate() error {
	return _dfabc.ValidateWithPath("\u0043T\u005f\u0043\u0061\u006c\u0063\u0050r")
}
func NewCT_IgnoredError() *CT_IgnoredError { _dfgdg := &CT_IgnoredError{}; return _dfgdg }

type CT_FutureMetadataBlock struct {

	// Future Feature Storage Area
	ExtLst *CT_ExtensionList
}

func (_eece *CT_DiscretePr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ecgfe := range start.Attr {
		if _ecgfe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cdbe, _bfgea := _f.ParseUint(_ecgfe.Value, 10, 32)
			if _bfgea != nil {
				return _bfgea
			}
			_fabag := uint32(_cdbe)
			_eece.CountAttr = &_fabag
			continue
		}
	}
_bdcge:
	for {
		_aaee, _eadce := d.Token()
		if _eadce != nil {
			return _eadce
		}
		switch _gbeae := _aaee.(type) {
		case _a.StartElement:
			switch _gbeae.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_cgacf := NewCT_Index()
				if _aegg := d.DecodeElement(_cgacf, &_gbeae); _aegg != nil {
					return _aegg
				}
				_eece.X = append(_eece.X, _cgacf)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044i\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072 \u0025\u0076", _gbeae.Name)
				if _dbefaf := d.Skip(); _dbefaf != nil {
					return _dbefaf
				}
			}
		case _a.EndElement:
			break _bdcge
		case _a.CharData:
		}
	}
	return nil
}
func (_afdcg *CT_FontScheme) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_afdcg.ValAttr = ST_FontScheme(1)
	for _, _bgedc := range start.Attr {
		if _bgedc.Name.Local == "\u0076\u0061\u006c" {
			_afdcg.ValAttr.UnmarshalXMLAttr(_bgedc)
			continue
		}
	}
	for {
		_gbgg, _aacf := d.Token()
		if _aacf != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046o\u006et\u0053c\u0068\u0065\u006d\u0065\u003a\u0020\u0025s", _aacf)
		}
		if _aefbf, _gdae := _gbgg.(_a.EndElement); _gdae && _aefbf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ebdad *CT_Items) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acdad := range start.Attr {
		if _acdad.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_efba, _agfg := _f.ParseUint(_acdad.Value, 10, 32)
			if _agfg != nil {
				return _agfg
			}
			_fdfec := uint32(_efba)
			_ebdad.CountAttr = &_fdfec
			continue
		}
	}
_fcga:
	for {
		_ggffd, _cdeee := d.Token()
		if _cdeee != nil {
			return _cdeee
		}
		switch _beegbd := _ggffd.(type) {
		case _a.StartElement:
			switch _beegbd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065\u006d"}:
				_caae := NewCT_Item()
				if _bbff := d.DecodeElement(_caae, &_beegbd); _bbff != nil {
					return _bbff
				}
				_ebdad.Item = append(_ebdad.Item, _caae)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _beegbd.Name)
				if _fdgag := d.Skip(); _fdgag != nil {
					return _fdgag
				}
			}
		case _a.EndElement:
			break _fcga
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_FontScheme and its children
func (_bggfde *CT_FontScheme) Validate() error {
	return _bggfde.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065")
}
func (_ggag *CT_ConditionalFormatting) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ggag.PivotAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0069\u0076o\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ggag.PivotAttr))})
	}
	if _ggag.SqrefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_ggag.SqrefAttr)})
	}
	e.EncodeToken(start)
	_eaedg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0063\u0066\u0052\u0075\u006ce"}}
	for _, _fbfa := range _ggag.CfRule {
		e.EncodeElement(_fbfa, _eaedg)
	}
	if _ggag.ExtLst != nil {
		_fgdd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ggag.ExtLst, _fgdd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ebgdf ST_DataValidationImeMode) ValidateWithPath(path string) error {
	switch _ebgdf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebgdf))
	}
	return nil
}
func (_bebfac ST_TableType) String() string {
	switch _bebfac {
	case 0:
		return ""
	case 1:
		return "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case 2:
		return "\u0078\u006d\u006c"
	case 3:
		return "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	}
	return ""
}

// Validate validates the CT_TableColumns and its children
func (_bggbb *CT_TableColumns) Validate() error {
	return _bggbb.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073")
}

type ST_ExternalConnectionType byte

func (_eaabbf *CT_WorksheetSource) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebcgc := range start.Attr {
		if _ebcgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ebcgc.Name.Local == "\u0069\u0064" || _ebcgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ebcgc.Name.Local == "\u0069\u0064" {
			_bcbed, _abegc := _ebcgc.Value, error(nil)
			if _abegc != nil {
				return _abegc
			}
			_eaabbf.IdAttr = &_bcbed
			continue
		}
		if _ebcgc.Name.Local == "\u0072\u0065\u0066" {
			_egecf, _bfbfef := _ebcgc.Value, error(nil)
			if _bfbfef != nil {
				return _bfbfef
			}
			_eaabbf.RefAttr = &_egecf
			continue
		}
		if _ebcgc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dfbgde, _dfecc := _ebcgc.Value, error(nil)
			if _dfecc != nil {
				return _dfecc
			}
			_eaabbf.NameAttr = &_dfbgde
			continue
		}
		if _ebcgc.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_dcdff, _gebbbg := _ebcgc.Value, error(nil)
			if _gebbbg != nil {
				return _gebbbg
			}
			_eaabbf.SheetAttr = &_dcdff
			continue
		}
	}
	for {
		_dfdac, _dfefd := d.Token()
		if _dfefd != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0057\u006f\u0072\u006b\u0073\u0068\u0065e\u0074\u0053\u006f\u0075\u0072\u0063\u0065\u003a\u0020\u0025\u0073", _dfefd)
		}
		if _ggffb, _ccaaac := _dfdac.(_a.EndElement); _ccaaac && _ggffb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ServerFormats struct {

	// Format Count
	CountAttr *uint32

	// Server Format
	ServerFormat []*CT_ServerFormat
}

// ValidateWithPath validates the Metadata and its children, prefixing error messages with path
func (_abacef *Metadata) ValidateWithPath(path string) error {
	if _ecegc := _abacef.CT_Metadata.ValidateWithPath(path); _ecegc != nil {
		return _ecegc
	}
	return nil
}

// Validate validates the CT_CfRule and its children
func (_cagf *CT_CfRule) Validate() error {
	return _cagf.ValidateWithPath("\u0043T\u005f\u0043\u0066\u0052\u0075\u006ce")
}
func (_dfgaf *CT_RevisionHeader) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dfgaf.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_dfgaf.SheetIdMap = NewCT_SheetIdMap()
	for _, _gfeef := range start.Attr {
		if _gfeef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gfeef.Name.Local == "\u0069\u0064" || _gfeef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gfeef.Name.Local == "\u0069\u0064" {
			_babgfb, _dcbde := _gfeef.Value, error(nil)
			if _dcbde != nil {
				return _dcbde
			}
			_dfgaf.IdAttr = _babgfb
			continue
		}
		if _gfeef.Name.Local == "\u0067\u0075\u0069\u0064" {
			_cfeea, _feeee := _gfeef.Value, error(nil)
			if _feeee != nil {
				return _feeee
			}
			_dfgaf.GuidAttr = _cfeea
			continue
		}
		if _gfeef.Name.Local == "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065" {
			_cacca, _fedb := ParseStdlibTime(_gfeef.Value)
			if _fedb != nil {
				return _fedb
			}
			_dfgaf.DateTimeAttr = _cacca
			continue
		}
		if _gfeef.Name.Local == "\u006d\u0061\u0078\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_ffffdb, _fggegga := _f.ParseUint(_gfeef.Value, 10, 32)
			if _fggegga != nil {
				return _fggegga
			}
			_dfgaf.MaxSheetIdAttr = uint32(_ffffdb)
			continue
		}
		if _gfeef.Name.Local == "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065" {
			_ffbbb, _febfg := _gfeef.Value, error(nil)
			if _febfg != nil {
				return _febfg
			}
			_dfgaf.UserNameAttr = _ffbbb
			continue
		}
		if _gfeef.Name.Local == "\u006d\u0069\u006e\u0052\u0049\u0064" {
			_ccffe, _fgfad := _f.ParseUint(_gfeef.Value, 10, 32)
			if _fgfad != nil {
				return _fgfad
			}
			_ccaab := uint32(_ccffe)
			_dfgaf.MinRIdAttr = &_ccaab
			continue
		}
		if _gfeef.Name.Local == "\u006d\u0061\u0078\u0052\u0049\u0064" {
			_gagbe, _cgfbb := _f.ParseUint(_gfeef.Value, 10, 32)
			if _cgfbb != nil {
				return _cgfbb
			}
			_adcecbc := uint32(_gagbe)
			_dfgaf.MaxRIdAttr = &_adcecbc
			continue
		}
	}
_egafc:
	for {
		_gcbae, _ffbbcd := d.Token()
		if _ffbbcd != nil {
			return _ffbbcd
		}
		switch _agbff := _gcbae.(type) {
		case _a.StartElement:
			switch _agbff.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}:
				if _fadae := d.DecodeElement(_dfgaf.SheetIdMap, &_agbff); _fadae != nil {
					return _fadae
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076i\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076i\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}:
				_dfgaf.ReviewedList = NewCT_ReviewedRevisions()
				if _cdbcd := d.DecodeElement(_dfgaf.ReviewedList, &_agbff); _cdbcd != nil {
					return _cdbcd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfgaf.ExtLst = NewCT_ExtensionList()
				if _feggdb := d.DecodeElement(_dfgaf.ExtLst, &_agbff); _feggdb != nil {
					return _feggdb
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048\u0065\u0061\u0064\u0065\u0072\u0020\u0025\u0076", _agbff.Name)
				if _aadcbe := d.Skip(); _aadcbe != nil {
					return _aadcbe
				}
			}
		case _a.EndElement:
			break _egafc
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_MdxMemeberProp() *CT_MdxMemeberProp { _gbbfc := &CT_MdxMemeberProp{}; return _gbbfc }
func (_debcb *CT_IndexedColors) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_ddfa := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}}
	for _, _agbfd := range _debcb.RgbColor {
		e.EncodeElement(_agbfd, _ddfa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Scenarios struct {

	// Current Scenario
	CurrentAttr *uint32

	// Last Shown Scenario
	ShowAttr *uint32

	// Sequence of References
	SqrefAttr *ST_Sqref

	// Scenario
	Scenario []*CT_Scenario
}

func (_edgga *Metadata) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_edgga.CT_Metadata = *NewCT_Metadata()
_cagggd:
	for {
		_daebg, _gfggf := d.Token()
		if _gfggf != nil {
			return _gfggf
		}
		switch _eegdfg := _daebg.(type) {
		case _a.StartElement:
			switch _eegdfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}:
				_edgga.MetadataTypes = NewCT_MetadataTypes()
				if _efdcg := d.DecodeElement(_edgga.MetadataTypes, &_eegdfg); _efdcg != nil {
					return _efdcg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}:
				_edgga.MetadataStrings = NewCT_MetadataStrings()
				if _eeaegb := d.DecodeElement(_edgga.MetadataStrings, &_eegdfg); _eeaegb != nil {
					return _eeaegb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_edgga.MdxMetadata = NewCT_MdxMetadata()
				if _gbbadf := d.DecodeElement(_edgga.MdxMetadata, &_eegdfg); _gbbadf != nil {
					return _gbbadf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}:
				_aefgf := NewCT_FutureMetadata()
				if _fafc := d.DecodeElement(_aefgf, &_eegdfg); _fafc != nil {
					return _fafc
				}
				_edgga.FutureMetadata = append(_edgga.FutureMetadata, _aefgf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_edgga.CellMetadata = NewCT_MetadataBlocks()
				if _bgegb := d.DecodeElement(_edgga.CellMetadata, &_eegdfg); _bgegb != nil {
					return _bgegb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_edgga.ValueMetadata = NewCT_MetadataBlocks()
				if _egbc := d.DecodeElement(_edgga.ValueMetadata, &_eegdfg); _egbc != nil {
					return _egbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edgga.ExtLst = NewCT_ExtensionList()
				if _ccaecf := d.DecodeElement(_edgga.ExtLst, &_eegdfg); _ccaecf != nil {
					return _ccaecf
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _eegdfg.Name)
				if _eeefeg := d.Skip(); _eeefeg != nil {
					return _eeefeg
				}
			}
		case _a.EndElement:
			break _cagggd
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_Scenario() *CT_Scenario { _fabfec := &CT_Scenario{}; return _fabfec }
func (_babae ST_GradientType) String() string {
	switch _babae {
	case 0:
		return ""
	case 1:
		return "\u006c\u0069\u006e\u0065\u0061\u0072"
	case 2:
		return "\u0070\u0061\u0074\u0068"
	}
	return ""
}

// Validate validates the CT_TableMissing and its children
func (_agcee *CT_TableMissing) Validate() error {
	return _agcee.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u004d\u0069\u0073\u0073\u0069\u006e\u0067")
}
func NewCT_RangePr() *CT_RangePr { _agegb := &CT_RangePr{}; return _agegb }
func (_eaeab *CT_PivotAreaReference) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _egabg := range start.Attr {
		if _egabg.Name.Local == "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_feafd, _babff := _f.ParseBool(_egabg.Value)
			if _babff != nil {
				return _babff
			}
			_eaeab.MaxSubtotalAttr = &_feafd
			continue
		}
		if _egabg.Name.Local == "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_afbcd, _cbbcb := _f.ParseBool(_egabg.Value)
			if _cbbcb != nil {
				return _cbbcb
			}
			_eaeab.MinSubtotalAttr = &_afbcd
			continue
		}
		if _egabg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cfdec, _geed := _f.ParseUint(_egabg.Value, 10, 32)
			if _geed != nil {
				return _geed
			}
			_gfgdg := uint32(_cfdec)
			_eaeab.CountAttr = &_gfgdg
			continue
		}
		if _egabg.Name.Local == "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_ecfbe, _adcedf := _f.ParseBool(_egabg.Value)
			if _adcedf != nil {
				return _adcedf
			}
			_eaeab.ProductSubtotalAttr = &_ecfbe
			continue
		}
		if _egabg.Name.Local == "\u0062\u0079\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_fgbbe, _gfagb := _f.ParseBool(_egabg.Value)
			if _gfagb != nil {
				return _gfagb
			}
			_eaeab.ByPositionAttr = &_fgbbe
			continue
		}
		if _egabg.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cceff, _eeffg := _f.ParseBool(_egabg.Value)
			if _eeffg != nil {
				return _eeffg
			}
			_eaeab.CountSubtotalAttr = &_cceff
			continue
		}
		if _egabg.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bggb, _bbaeb := _f.ParseBool(_egabg.Value)
			if _bbaeb != nil {
				return _bbaeb
			}
			_eaeab.DefaultSubtotalAttr = &_bggb
			continue
		}
		if _egabg.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_efbge, _cgefe := _f.ParseBool(_egabg.Value)
			if _cgefe != nil {
				return _cgefe
			}
			_eaeab.CountASubtotalAttr = &_efbge
			continue
		}
		if _egabg.Name.Local == "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bfdf, _dcecc := _f.ParseBool(_egabg.Value)
			if _dcecc != nil {
				return _dcecc
			}
			_eaeab.AvgSubtotalAttr = &_bfdf
			continue
		}
		if _egabg.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_agcgcf, _cggdbg := _f.ParseUint(_egabg.Value, 10, 32)
			if _cggdbg != nil {
				return _cggdbg
			}
			_gddgaf := uint32(_agcgcf)
			_eaeab.FieldAttr = &_gddgaf
			continue
		}
		if _egabg.Name.Local == "\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_gbgcge, _eeccdd := _f.ParseBool(_egabg.Value)
			if _eeccdd != nil {
				return _eeccdd
			}
			_eaeab.SelectedAttr = &_gbgcge
			continue
		}
		if _egabg.Name.Local == "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065" {
			_ccfga, _ggcbb := _f.ParseBool(_egabg.Value)
			if _ggcbb != nil {
				return _ggcbb
			}
			_eaeab.RelativeAttr = &_ccfga
			continue
		}
		if _egabg.Name.Local == "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gebec, _abbdag := _f.ParseBool(_egabg.Value)
			if _abbdag != nil {
				return _abbdag
			}
			_eaeab.SumSubtotalAttr = &_gebec
			continue
		}
		if _egabg.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_gedfg, _fdgebd := _f.ParseBool(_egabg.Value)
			if _fdgebd != nil {
				return _fdgebd
			}
			_eaeab.StdDevSubtotalAttr = &_gedfg
			continue
		}
		if _egabg.Name.Local == "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_ffaea, _daged := _f.ParseBool(_egabg.Value)
			if _daged != nil {
				return _daged
			}
			_eaeab.StdDevPSubtotalAttr = &_ffaea
			continue
		}
		if _egabg.Name.Local == "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_abegb, _eeaef := _f.ParseBool(_egabg.Value)
			if _eeaef != nil {
				return _eeaef
			}
			_eaeab.VarSubtotalAttr = &_abegb
			continue
		}
		if _egabg.Name.Local == "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_ddedeb, _degac := _f.ParseBool(_egabg.Value)
			if _degac != nil {
				return _degac
			}
			_eaeab.VarPSubtotalAttr = &_ddedeb
			continue
		}
	}
_abfgae:
	for {
		_bedfb, _dgeag := d.Token()
		if _dgeag != nil {
			return _dgeag
		}
		switch _baadd := _bedfb.(type) {
		case _a.StartElement:
			switch _baadd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bgdcb := NewCT_Index()
				if _dcebe := d.DecodeElement(_bgdcb, &_baadd); _dcebe != nil {
					return _dcebe
				}
				_eaeab.X = append(_eaeab.X, _bgdcb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eaeab.ExtLst = NewCT_ExtensionList()
				if _afadbf := d.DecodeElement(_eaeab.ExtLst, &_baadd); _afadbf != nil {
					return _afadbf
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0025\u0076", _baadd.Name)
				if _gbeee := d.Skip(); _gbeee != nil {
					return _gbeee
				}
			}
		case _a.EndElement:
			break _abfgae
		case _a.CharData:
		}
	}
	return nil
}
func (_gbgcga *CT_MeasureGroups) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gbgcga.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_gbgcga.CountAttr)})
	}
	e.EncodeToken(start)
	if _gbgcga.MeasureGroup != nil {
		_fabeb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003am\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}}
		for _, _aagcc := range _gbgcga.MeasureGroup {
			e.EncodeElement(_aagcc, _fabeb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_ConditionalFormattingOperatorUnset              ST_ConditionalFormattingOperator = 0
	ST_ConditionalFormattingOperatorLessThan           ST_ConditionalFormattingOperator = 1
	ST_ConditionalFormattingOperatorLessThanOrEqual    ST_ConditionalFormattingOperator = 2
	ST_ConditionalFormattingOperatorEqual              ST_ConditionalFormattingOperator = 3
	ST_ConditionalFormattingOperatorNotEqual           ST_ConditionalFormattingOperator = 4
	ST_ConditionalFormattingOperatorGreaterThanOrEqual ST_ConditionalFormattingOperator = 5
	ST_ConditionalFormattingOperatorGreaterThan        ST_ConditionalFormattingOperator = 6
	ST_ConditionalFormattingOperatorBetween            ST_ConditionalFormattingOperator = 7
	ST_ConditionalFormattingOperatorNotBetween         ST_ConditionalFormattingOperator = 8
	ST_ConditionalFormattingOperatorContainsText       ST_ConditionalFormattingOperator = 9
	ST_ConditionalFormattingOperatorNotContains        ST_ConditionalFormattingOperator = 10
	ST_ConditionalFormattingOperatorBeginsWith         ST_ConditionalFormattingOperator = 11
	ST_ConditionalFormattingOperatorEndsWith           ST_ConditionalFormattingOperator = 12
)

// Validate validates the CT_QueryTableFields and its children
func (_gfeded *CT_QueryTableFields) Validate() error {
	return _gfeded.ValidateWithPath("\u0043\u0054\u005f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073")
}

type CT_Member struct {

	// Hidden Item Name
	NameAttr string
}
type Comments struct{ CT_Comments }

func (_bfcg *CT_Location) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cbgac := range start.Attr {
		if _cbgac.Name.Local == "\u0072\u0065\u0066" {
			_cbedg, _abcdd := _cbgac.Value, error(nil)
			if _abcdd != nil {
				return _abcdd
			}
			_bfcg.RefAttr = _cbedg
			continue
		}
		if _cbgac.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064e\u0072\u0052\u006f\u0077" {
			_eccac, _dagec := _f.ParseUint(_cbgac.Value, 10, 32)
			if _dagec != nil {
				return _dagec
			}
			_bfcg.FirstHeaderRowAttr = uint32(_eccac)
			continue
		}
		if _cbgac.Name.Local == "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0052\u006f\u0077" {
			_gfebdc, _cdacc := _f.ParseUint(_cbgac.Value, 10, 32)
			if _cdacc != nil {
				return _cdacc
			}
			_bfcg.FirstDataRowAttr = uint32(_gfebdc)
			continue
		}
		if _cbgac.Name.Local == "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0043\u006f\u006c" {
			_caagc, _gebcgd := _f.ParseUint(_cbgac.Value, 10, 32)
			if _gebcgd != nil {
				return _gebcgd
			}
			_bfcg.FirstDataColAttr = uint32(_caagc)
			continue
		}
		if _cbgac.Name.Local == "\u0072\u006f\u0077P\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_dfac, _gfac := _f.ParseUint(_cbgac.Value, 10, 32)
			if _gfac != nil {
				return _gfac
			}
			_cgcdd := uint32(_dfac)
			_bfcg.RowPageCountAttr = &_cgcdd
			continue
		}
		if _cbgac.Name.Local == "\u0063\u006f\u006cP\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_cfag, _ggedd := _f.ParseUint(_cbgac.Value, 10, 32)
			if _ggedd != nil {
				return _ggedd
			}
			_gfbe := uint32(_cfag)
			_bfcg.ColPageCountAttr = &_gfbe
			continue
		}
	}
	for {
		_gbgcb, _cbbbf := d.Token()
		if _cbbbf != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _cbbbf)
		}
		if _bbfaf, _ffebf := _gbgcb.(_a.EndElement); _ffebf && _bbfaf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PCDKPIs and its children, prefixing error messages with path
func (_cbfbfa *CT_PCDKPIs) ValidateWithPath(path string) error {
	for _fecba, _dcaeg := range _cbfbfa.Kpi {
		if _ffae := _dcaeg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004b\u0070\u0069\u005b\u0025\u0064\u005d", path, _fecba)); _ffae != nil {
			return _ffae
		}
	}
	return nil
}

type CT_Connections struct {

	// Connection
	Connection []*CT_Connection
}

func (_cdgce ST_IconSetType) ValidateWithPath(path string) error {
	switch _cdgce {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdgce))
	}
	return nil
}
func (_dbcdd *CT_PivotFilter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dbcdd.TypeAttr = ST_PivotFilterType(1)
	_dbcdd.AutoFilter = NewCT_AutoFilter()
	for _, _faace := range start.Attr {
		if _faace.Name.Local == "i\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u006c\u0064" {
			_cbefag, _dabdd := _f.ParseUint(_faace.Value, 10, 32)
			if _dabdd != nil {
				return _dabdd
			}
			_cbggd := uint32(_cbefag)
			_dbcdd.IMeasureFldAttr = &_cbggd
			continue
		}
		if _faace.Name.Local == "\u006d\u0070\u0046l\u0064" {
			_cdafg, _dbgaad := _f.ParseUint(_faace.Value, 10, 32)
			if _dbgaad != nil {
				return _dbgaad
			}
			_fgcfc := uint32(_cdafg)
			_dbcdd.MpFldAttr = &_fgcfc
			continue
		}
		if _faace.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dbcdd.TypeAttr.UnmarshalXMLAttr(_faace)
			continue
		}
		if _faace.Name.Local == "\u0065v\u0061\u006c\u004f\u0072\u0064\u0065r" {
			_cfeafa, _cafbe := _f.ParseInt(_faace.Value, 10, 32)
			if _cafbe != nil {
				return _cafbe
			}
			_aeebg := int32(_cfeafa)
			_dbcdd.EvalOrderAttr = &_aeebg
			continue
		}
		if _faace.Name.Local == "\u0069\u0064" {
			_ffade, _ebbcd := _f.ParseUint(_faace.Value, 10, 32)
			if _ebbcd != nil {
				return _ebbcd
			}
			_dbcdd.IdAttr = uint32(_ffade)
			continue
		}
		if _faace.Name.Local == "\u0069\u004d\u0065a\u0073\u0075\u0072\u0065\u0048\u0069\u0065\u0072" {
			_cfbda, _egddc := _f.ParseUint(_faace.Value, 10, 32)
			if _egddc != nil {
				return _egddc
			}
			_dddcf := uint32(_cfbda)
			_dbcdd.IMeasureHierAttr = &_dddcf
			continue
		}
		if _faace.Name.Local == "\u0066\u006c\u0064" {
			_bbdee, _afcd := _f.ParseUint(_faace.Value, 10, 32)
			if _afcd != nil {
				return _afcd
			}
			_dbcdd.FldAttr = uint32(_bbdee)
			continue
		}
		if _faace.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bebcf, _bfdcg := _faace.Value, error(nil)
			if _bfdcg != nil {
				return _bfdcg
			}
			_dbcdd.NameAttr = &_bebcf
			continue
		}
		if _faace.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_fgadc, _gbeagac := _faace.Value, error(nil)
			if _gbeagac != nil {
				return _gbeagac
			}
			_dbcdd.DescriptionAttr = &_fgadc
			continue
		}
		if _faace.Name.Local == "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0031" {
			_cgaccd, _bcbda := _faace.Value, error(nil)
			if _bcbda != nil {
				return _bcbda
			}
			_dbcdd.StringValue1Attr = &_cgaccd
			continue
		}
		if _faace.Name.Local == "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0032" {
			_agcbfd, _beaee := _faace.Value, error(nil)
			if _beaee != nil {
				return _beaee
			}
			_dbcdd.StringValue2Attr = &_agcbfd
			continue
		}
	}
_fdbeeb:
	for {
		_bgbeg, _bbbgd := d.Token()
		if _bbbgd != nil {
			return _bbbgd
		}
		switch _eeegaa := _bgbeg.(type) {
		case _a.StartElement:
			switch _eeegaa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				if _dcecg := d.DecodeElement(_dbcdd.AutoFilter, &_eeegaa); _dcecg != nil {
					return _dcecg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbcdd.ExtLst = NewCT_ExtensionList()
				if _gcbfdc := d.DecodeElement(_dbcdd.ExtLst, &_eeegaa); _gcbfdc != nil {
					return _gcbfdc
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069l\u0074e\u0072\u0020\u0025\u0076", _eeegaa.Name)
				if _aadce := d.Skip(); _aadce != nil {
					return _aadce
				}
			}
		case _a.EndElement:
			break _fdbeeb
		case _a.CharData:
		}
	}
	return nil
}

type CT_RevisionRowColumn struct {

	// Sheet Id
	SIdAttr uint32

	// End Of List
	EolAttr *bool

	// Reference
	RefAttr string

	// User Action
	ActionAttr ST_rwColActionType

	// Edge Deleted
	EdgeAttr *bool

	// Undo
	Undo []*CT_UndoInfo

	// Revised Row Column
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt    []*CT_RevisionFormatting
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

func (_gbf *AG_RevData) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ef := range start.Attr {
		if _ef.Name.Local == "\u0072\u0049\u0064" {
			_cc, _eb := _f.ParseUint(_ef.Value, 10, 32)
			if _eb != nil {
				return _eb
			}
			_ddg := uint32(_cc)
			_gbf.RIdAttr = &_ddg
			continue
		}
		if _ef.Name.Local == "\u0075\u0061" {
			_dfe, _ge := _f.ParseBool(_ef.Value)
			if _ge != nil {
				return _ge
			}
			_gbf.UaAttr = &_dfe
			continue
		}
		if _ef.Name.Local == "\u0072\u0061" {
			_ga, _dc := _f.ParseBool(_ef.Value)
			if _dc != nil {
				return _dc
			}
			_gbf.RaAttr = &_ga
			continue
		}
	}
	for {
		_fg, _gef := d.Token()
		if _gef != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061\u003a\u0020%\u0073", _gef)
		}
		if _ggdf, _eebc := _fg.(_a.EndElement); _eebc && _ggdf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_beggfd *CT_TupleCache) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _beggfd.Entries != nil {
		_dgegae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0065\u006e\u0074\u0072\u0069\u0065\u0073"}}
		e.EncodeElement(_beggfd.Entries, _dgegae)
	}
	if _beggfd.Sets != nil {
		_cdae := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0073\u0065\u0074\u0073"}}
		e.EncodeElement(_beggfd.Sets, _cdae)
	}
	if _beggfd.QueryCache != nil {
		_defbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}}
		e.EncodeElement(_beggfd.QueryCache, _defbe)
	}
	if _beggfd.ServerFormats != nil {
		_bcgff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_beggfd.ServerFormats, _bcgff)
	}
	if _beggfd.ExtLst != nil {
		_gbfdc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_beggfd.ExtLst, _gbfdc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Location struct {

	// Reference
	RefAttr string

	// First Header Row
	FirstHeaderRowAttr uint32

	// PivotTable Data First Row
	FirstDataRowAttr uint32

	// First Data Column
	FirstDataColAttr uint32

	// Rows Per Page Count
	RowPageCountAttr *uint32

	// Columns Per Page
	ColPageCountAttr *uint32
}
type ST_CfvoType byte

func (_ggfcg *ST_GrowShrinkType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fbbga, _eeecg := d.Token()
	if _eeecg != nil {
		return _eeecg
	}
	if _bcacdc, _gdebdc := _fbbga.(_a.EndElement); _gdebdc && _bcacdc.Name == start.Name {
		*_ggfcg = 1
		return nil
	}
	if _gbbdff, _fdegc := _fbbga.(_a.CharData); !_fdegc {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbbga)
	} else {
		switch string(_gbbdff) {
		case "":
			*_ggfcg = 0
		case "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065":
			*_ggfcg = 1
		case "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072":
			*_ggfcg = 2
		case "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072":
			*_ggfcg = 3
		}
	}
	_fbbga, _eeecg = d.Token()
	if _eeecg != nil {
		return _eeecg
	}
	if _fdabf, _bgbae := _fbbga.(_a.EndElement); _bgbae && _fdabf.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbbga)
}
func NewCT_PivotCache() *CT_PivotCache { _egcb := &CT_PivotCache{}; return _egcb }

// ValidateWithPath validates the CT_ProtectedRanges and its children, prefixing error messages with path
func (_eacc *CT_ProtectedRanges) ValidateWithPath(path string) error {
	for _dedfc, _ffecc := range _eacc.ProtectedRange {
		if _bgdfc := _ffecc.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0050\u0072ot\u0065c\u0074\u0065\u0064\u0052\u0061n\u0067\u0065\u005b\u0025\u0064\u005d", path, _dedfc)); _bgdfc != nil {
			return _bgdfc
		}
	}
	return nil
}
func (_eefcd *CT_FunctionGroup) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gbbff := range start.Attr {
		if _gbbff.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fcefb, _cgbbe := _gbbff.Value, error(nil)
			if _cgbbe != nil {
				return _cgbbe
			}
			_eefcd.NameAttr = &_fcefb
			continue
		}
	}
	for {
		_bgeag, _eebba := d.Token()
		if _eebba != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u0075\u006e\u0063t\u0069o\u006e\u0047\u0072\u006f\u0075\u0070\u003a \u0025\u0073", _eebba)
		}
		if _abge, _cgdfe := _bgeag.(_a.EndElement); _cgdfe && _abge.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_IgnoredErrors() *CT_IgnoredErrors { _bdcd := &CT_IgnoredErrors{}; return _bdcd }

// Validate validates the CT_SheetProtection and its children
func (_gffef *CT_SheetProtection) Validate() error {
	return _gffef.ValidateWithPath("\u0043T\u005fS\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e")
}

type CT_VolTopicRef struct {

	// Reference
	RAttr string

	// Sheet Id
	SAttr uint32
}

// ValidateWithPath validates the CT_CalculatedMember and its children, prefixing error messages with path
func (_dgc *CT_CalculatedMember) ValidateWithPath(path string) error {
	if _dgc.ExtLst != nil {
		if _ece := _dgc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ece != nil {
			return _ece
		}
	}
	return nil
}
func (_eefab *CT_CalcCell) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eefab.RAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_eefab.RAttr)})
	}
	if _eefab.RefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_eefab.RefAttr)})
	}
	if _eefab.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fc.Sprintf("\u0025\u0076", *_eefab.IAttr)})
	}
	if _eefab.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eefab.SAttr))})
	}
	if _eefab.LAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eefab.LAttr))})
	}
	if _eefab.TAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eefab.TAttr))})
	}
	if _eefab.AAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eefab.AAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_edca *CT_DataValidations) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _edca.DisablePromptsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0050\u0072o\u006d\u0070\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_edca.DisablePromptsAttr))})
	}
	if _edca.XWindowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0076", *_edca.XWindowAttr)})
	}
	if _edca.YWindowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0076", *_edca.YWindowAttr)})
	}
	if _edca.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_edca.CountAttr)})
	}
	e.EncodeToken(start)
	_dgcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}}
	for _, _gaecg := range _edca.DataValidation {
		e.EncodeElement(_gaecg, _dgcg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_OleItems() *CT_OleItems { _ceegbg := &CT_OleItems{}; return _ceegbg }

// Validate validates the CT_RevisionSheetRename and its children
func (_fffgg *CT_RevisionSheetRename) Validate() error {
	return _fffgg.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061m\u0065")
}

// Validate validates the CT_Filter and its children
func (_facdd *CT_Filter) Validate() error {
	return _facdd.ValidateWithPath("\u0043T\u005f\u0046\u0069\u006c\u0074\u0065r")
}
func (_ffgbf *CT_Sheets) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_bbeca:
	for {
		_bfbea, _gefbce := d.Token()
		if _gefbce != nil {
			return _gefbce
		}
		switch _cegdfb := _bfbea.(type) {
		case _a.StartElement:
			switch _cegdfb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074"}:
				_aeacb := NewCT_Sheet()
				if _adfedd := d.DecodeElement(_aeacb, &_cegdfb); _adfedd != nil {
					return _adfedd
				}
				_ffgbf.Sheet = append(_ffgbf.Sheet, _aeacb)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0068\u0065e\u0074\u0073 \u0025\u0076", _cegdfb.Name)
				if _gdgcaa := d.Skip(); _gdgcaa != nil {
					return _gdgcaa
				}
			}
		case _a.EndElement:
			break _bbeca
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_PhoneticTypeUnset             ST_PhoneticType = 0
	ST_PhoneticTypeHalfwidthKatakana ST_PhoneticType = 1
	ST_PhoneticTypeFullwidthKatakana ST_PhoneticType = 2
	ST_PhoneticTypeHiragana          ST_PhoneticType = 3
	ST_PhoneticTypeNoConversion      ST_PhoneticType = 4
)

func (_ggabdb *ST_ConditionalFormattingOperator) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ggabdb = 0
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_ggabdb = 1
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_ggabdb = 2
	case "\u0065\u0071\u0075a\u006c":
		*_ggabdb = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_ggabdb = 4
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_ggabdb = 5
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_ggabdb = 6
	case "\u0062e\u0074\u0077\u0065\u0065\u006e":
		*_ggabdb = 7
	case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_ggabdb = 8
	case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_ggabdb = 9
	case "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
		*_ggabdb = 10
	case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
		*_ggabdb = 11
	case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_ggabdb = 12
	}
	return nil
}

// ValidateWithPath validates the CT_TableStyles and its children, prefixing error messages with path
func (_deefb *CT_TableStyles) ValidateWithPath(path string) error {
	for _edcbdc, _cddge := range _deefb.TableStyle {
		if _bgffg := _cddge.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u005b\u0025\u0064\u005d", path, _edcbdc)); _bgffg != nil {
			return _bgffg
		}
	}
	return nil
}
func NewCT_Sheets() *CT_Sheets { _fdgfg := &CT_Sheets{}; return _fdgfg }

// Validate validates the CT_OleSize and its children
func (_fcdae *CT_OleSize) Validate() error {
	return _fcdae.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065")
}
func NewCT_IconSet() *CT_IconSet     { _gcddd := &CT_IconSet{}; return _gcddd }
func NewCT_MergeCell() *CT_MergeCell { _dcaef := &CT_MergeCell{}; return _dcaef }
func NewCT_PCDSCPage() *CT_PCDSCPage { _gacca := &CT_PCDSCPage{}; return _gacca }
func (_bbafb *CT_GroupLevel) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _bbafb.UniqueNameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _bbafb.CaptionAttr)})
	if _bbafb.UserAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0073\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafb.UserAttr))})
	}
	if _bbafb.CustomRollUpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0052\u006f\u006c\u006c\u0055\u0070"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafb.CustomRollUpAttr))})
	}
	e.EncodeToken(start)
	if _bbafb.Groups != nil {
		_gbbd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0067\u0072\u006f\u0075\u0070s"}}
		e.EncodeElement(_bbafb.Groups, _gbbd)
	}
	if _bbafb.ExtLst != nil {
		_bdecg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bbafb.ExtLst, _bdecg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_TableStyleElement() *CT_TableStyleElement {
	_facffd := &CT_TableStyleElement{}
	_facffd.TypeAttr = ST_TableStyleType(1)
	return _facffd
}

// ValidateWithPath validates the CT_Record and its children, prefixing error messages with path
func (_edfcb *CT_Record) ValidateWithPath(path string) error {
	for _bcegc, _bccaa := range _edfcb.M {
		if _eccgcc := _bccaa.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _bcegc)); _eccgcc != nil {
			return _eccgcc
		}
	}
	for _eebec, _cgegfg := range _edfcb.N {
		if _cacbg := _cgegfg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _eebec)); _cacbg != nil {
			return _cacbg
		}
	}
	for _aaagb, _cceeb := range _edfcb.B {
		if _cfdbf := _cceeb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _aaagb)); _cfdbf != nil {
			return _cfdbf
		}
	}
	for _baeada, _gabff := range _edfcb.E {
		if _gdgbd := _gabff.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _baeada)); _gdgbd != nil {
			return _gdgbd
		}
	}
	for _geddgf, _efcf := range _edfcb.S {
		if _debfc := _efcf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _geddgf)); _debfc != nil {
			return _debfc
		}
	}
	for _cdbbea, _abcgd := range _edfcb.D {
		if _dbeag := _abcgd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _cdbbea)); _dbeag != nil {
			return _dbeag
		}
	}
	for _gaaefg, _gbbgb := range _edfcb.X {
		if _cabdd := _gbbgb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _gaaefg)); _cabdd != nil {
			return _cabdd
		}
	}
	return nil
}

type CT_CellStyleXfs struct {

	// Style Count
	CountAttr *uint32

	// Formatting Elements
	Xf []*CT_Xf
}

// Validate validates the CT_RevisionFormatting and its children
func (_cbagb *CT_RevisionFormatting) Validate() error {
	return _cbagb.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067")
}
func NewCT_WebPublishObjects() *CT_WebPublishObjects {
	_bedfgc := &CT_WebPublishObjects{}
	return _bedfgc
}
func NewCT_Sst() *CT_Sst { _efbdbc := &CT_Sst{}; return _efbdbc }

type CT_ObjectAnchor struct {

	// Move With Cells
	MoveWithCellsAttr *bool

	// Size With Cells
	SizeWithCellsAttr *bool
	From              *_af.From
	To                *_af.To
}

func (_eebce *CT_Members) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eebce.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_eebce.CountAttr)})
	}
	if _eebce.LevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_eebce.LevelAttr)})
	}
	e.EncodeToken(start)
	_cgebcb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u006d\u0065\u006d\u0062\u0065r"}}
	for _, _cbffg := range _eebce.Member {
		e.EncodeElement(_cbffg, _cgebcb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ddfde ST_Pane) String() string {
	switch _ddfde {
	case 0:
		return ""
	case 1:
		return "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case 2:
		return "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case 4:
		return "\u0074o\u0070\u004c\u0065\u0066\u0074"
	}
	return ""
}

type CT_RPrElt struct {

	// Font
	RFont *CT_FontName

	// Character Set
	Charset *CT_IntProperty

	// Font Family
	Family *CT_IntProperty

	// Bold
	B *CT_BooleanProperty

	// Italic
	I *CT_BooleanProperty

	// Strike Through
	Strike *CT_BooleanProperty

	// Outline
	Outline *CT_BooleanProperty

	// Shadow
	Shadow *CT_BooleanProperty

	// Condense
	Condense *CT_BooleanProperty

	// Extend
	Extend *CT_BooleanProperty

	// Text Color
	Color *CT_Color

	// Font Size
	Sz *CT_FontSize

	// Underline
	U *CT_UnderlineProperty

	// Vertical Alignment
	VertAlign *CT_VerticalAlignFontProperty

	// Font Scheme
	Scheme *CT_FontScheme
}
type CT_Reviewed struct {

	// revision Id
	RIdAttr uint32
}

func (_gfacd *CT_SheetId) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebaab := range start.Attr {
		if _ebaab.Name.Local == "\u0076\u0061\u006c" {
			_ccadg, _cfbbfe := _f.ParseUint(_ebaab.Value, 10, 32)
			if _cfbbfe != nil {
				return _cfbbfe
			}
			_gfacd.ValAttr = uint32(_ccadg)
			continue
		}
	}
	for {
		_fdfc, _cecdd := d.Token()
		if _cecdd != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u003a\u0020%\u0073", _cecdd)
		}
		if _fccf, _eggaf := _fdfc.(_a.EndElement); _eggaf && _fccf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cgfag ST_rwColActionType) ValidateWithPath(path string) error {
	switch _cgfag {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgfag))
	}
	return nil
}

type CT_PivotCache struct {

	// PivotCache Id
	CacheIdAttr uint32
	IdAttr      string
}

func (_cebde *CT_RowHierarchiesUsage) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdceg := range start.Attr {
		if _cdceg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_defea, _gbfda := _f.ParseUint(_cdceg.Value, 10, 32)
			if _gbfda != nil {
				return _gbfda
			}
			_bcgcgb := uint32(_defea)
			_cebde.CountAttr = &_bcgcgb
			continue
		}
	}
_ceffc:
	for {
		_bcaba, _agbfb := d.Token()
		if _agbfb != nil {
			return _agbfb
		}
		switch _ebafe := _bcaba.(type) {
		case _a.StartElement:
			switch _ebafe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}:
				_bfbeb := NewCT_HierarchyUsage()
				if _bbacge := d.DecodeElement(_bfbeb, &_ebafe); _bbacge != nil {
					return _bbacge
				}
				_cebde.RowHierarchyUsage = append(_cebde.RowHierarchyUsage, _bfbeb)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u006f\u0077\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065\u0020\u0025\u0076", _ebafe.Name)
				if _bgcdf := d.Skip(); _bgcdf != nil {
					return _bgcdf
				}
			}
		case _a.EndElement:
			break _ceffc
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_CellCommentsUnset       ST_CellComments = 0
	ST_CellCommentsNone        ST_CellComments = 1
	ST_CellCommentsAsDisplayed ST_CellComments = 2
	ST_CellCommentsAtEnd       ST_CellComments = 3
)

func (_efaa *CT_DataRefs) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _efaa.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_efaa.CountAttr)})
	}
	e.EncodeToken(start)
	if _efaa.DataRef != nil {
		_dgcfcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0052\u0065\u0066"}}
		for _, _faga := range _efaa.DataRef {
			e.EncodeElement(_faga, _dgcfcg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupLevel and its children, prefixing error messages with path
func (_ggbge *CT_GroupLevel) ValidateWithPath(path string) error {
	if _ggbge.Groups != nil {
		if _fbfaf := _ggbge.Groups.ValidateWithPath(path + "\u002fG\u0072\u006f\u0075\u0070\u0073"); _fbfaf != nil {
			return _fbfaf
		}
	}
	if _ggbge.ExtLst != nil {
		if _aggaa := _ggbge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aggaa != nil {
			return _aggaa
		}
	}
	return nil
}
func (_cddfdf *ST_TimePeriod) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eaaed, _afcdg := d.Token()
	if _afcdg != nil {
		return _afcdg
	}
	if _bgdbb, _fdcc := _eaaed.(_a.EndElement); _fdcc && _bgdbb.Name == start.Name {
		*_cddfdf = 1
		return nil
	}
	if _ebeebb, _bdgbc := _eaaed.(_a.CharData); !_bdgbc {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eaaed)
	} else {
		switch string(_ebeebb) {
		case "":
			*_cddfdf = 0
		case "\u0074\u006f\u0064a\u0079":
			*_cddfdf = 1
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_cddfdf = 2
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_cddfdf = 3
		case "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s":
			*_cddfdf = 4
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_cddfdf = 5
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_cddfdf = 6
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_cddfdf = 7
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_cddfdf = 8
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_cddfdf = 9
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_cddfdf = 10
		}
	}
	_eaaed, _afcdg = d.Token()
	if _afcdg != nil {
		return _afcdg
	}
	if _fgdfe, _bgffbb := _eaaed.(_a.EndElement); _bgffbb && _fgdfe.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eaaed)
}
func (_bbbbf *CT_X) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gbgca := range start.Attr {
		if _gbgca.Name.Local == "\u0076" {
			_eacffb, _fdagbc := _f.ParseInt(_gbgca.Value, 10, 32)
			if _fdagbc != nil {
				return _fdagbc
			}
			_aeceb := int32(_eacffb)
			_bbbbf.VAttr = &_aeceb
			continue
		}
	}
	for {
		_cccfff, _eeacb := d.Token()
		if _eeacb != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0058\u003a\u0020\u0025\u0073", _eeacb)
		}
		if _ccbeda, _bcfgg := _cccfff.(_a.EndElement); _bcfgg && _ccbeda.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ggcd *CT_IntProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dddfg := range start.Attr {
		if _dddfg.Name.Local == "\u0076\u0061\u006c" {
			_ebdge, _ffeeea := _f.ParseInt(_dddfg.Value, 10, 32)
			if _ffeeea != nil {
				return _ffeeea
			}
			_ggcd.ValAttr = int32(_ebdge)
			continue
		}
	}
	for {
		_ggffa, _egaea := d.Token()
		if _egaea != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fI\u006e\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079:\u0020\u0025\u0073", _egaea)
		}
		if _geefg, _egbde := _ggffa.(_a.EndElement); _egbde && _geefg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdebd *ST_SmartTagShow) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdcea, _fdfaf := d.Token()
	if _fdfaf != nil {
		return _fdfaf
	}
	if _gegaec, _gdcge := _gdcea.(_a.EndElement); _gdcge && _gegaec.Name == start.Name {
		*_bdebd = 1
		return nil
	}
	if _eeeeb, _cbece := _gdcea.(_a.CharData); !_cbece {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdcea)
	} else {
		switch string(_eeeeb) {
		case "":
			*_bdebd = 0
		case "\u0061\u006c\u006c":
			*_bdebd = 1
		case "\u006e\u006f\u006e\u0065":
			*_bdebd = 2
		case "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
			*_bdebd = 3
		}
	}
	_gdcea, _fdfaf = d.Token()
	if _fdfaf != nil {
		return _fdfaf
	}
	if _cedbeg, _dddfga := _gdcea.(_a.EndElement); _dddfga && _cedbeg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdcea)
}
func (_geecg ST_CalcMode) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_geecg.String(), start)
}

type CT_CalculatedMembers struct {

	// Calculated Members Count
	CountAttr *uint32

	// Calculated Member
	CalculatedMember []*CT_CalculatedMember
}
type CT_RevisionDefinedName struct {

	// Local Name Sheet Id
	LocalSheetIdAttr *uint32

	// Custom View
	CustomViewAttr *bool

	// Name
	NameAttr string

	// Function
	FunctionAttr *bool

	// Old Function
	OldFunctionAttr *bool

	// Function Group Id
	FunctionGroupIdAttr *uint8

	// Old Function Group Id
	OldFunctionGroupIdAttr *uint8

	// Shortcut Key
	ShortcutKeyAttr *uint8

	// Old Short Cut Key
	OldShortcutKeyAttr *uint8

	// Named Range Hidden
	HiddenAttr *bool

	// Old Hidden
	OldHiddenAttr *bool

	// New Custom Menu
	CustomMenuAttr *string

	// Old Custom Menu Text
	OldCustomMenuAttr *string

	// Description
	DescriptionAttr *string

	// Old Description
	OldDescriptionAttr *string

	// New Help Topic
	HelpAttr *string

	// Old Help Topic
	OldHelpAttr *string

	// Status Bar
	StatusBarAttr *string

	// Old Status Bar
	OldStatusBarAttr *string

	// Name Comment
	CommentAttr *string

	// Old Name Comment
	OldCommentAttr *string

	// Formula
	Formula *string

	// Old Formula
	OldFormula *string
	ExtLst     *CT_ExtensionList
	RIdAttr    *uint32
	UaAttr     *bool
	RaAttr     *bool
}
type CT_PivotSelection struct {

	// Pane
	PaneAttr ST_Pane

	// Show Header
	ShowHeaderAttr *bool

	// Label
	LabelAttr *bool

	// Data Selection
	DataAttr *bool

	// Extendable
	ExtendableAttr *bool

	// Selection Count
	CountAttr *uint32

	// Axis
	AxisAttr ST_Axis

	// Dimension
	DimensionAttr *uint32

	// Start
	StartAttr *uint32

	// Minimum
	MinAttr *uint32

	// Maximum
	MaxAttr *uint32

	// Active Row
	ActiveRowAttr *uint32

	// Active Column
	ActiveColAttr *uint32

	// Previous Row
	PreviousRowAttr *uint32

	// Previous Column Selection
	PreviousColAttr *uint32

	// Click Count
	ClickAttr *uint32
	IdAttr    *string

	// Pivot Area
	PivotArea *CT_PivotArea
}

func NewCT_RevisionSheetRename() *CT_RevisionSheetRename {
	_dfgda := &CT_RevisionSheetRename{}
	return _dfgda
}

type CT_ColHierarchiesUsage struct {

	// Items Count
	CountAttr *uint32

	// Column OLAP Hierarchies
	ColHierarchyUsage []*CT_HierarchyUsage
}

const (
	ST_CalcModeUnset       ST_CalcMode = 0
	ST_CalcModeManual      ST_CalcMode = 1
	ST_CalcModeAuto        ST_CalcMode = 2
	ST_CalcModeAutoNoTable ST_CalcMode = 3
)

func NewCT_MRUColors() *CT_MRUColors { _aacac := &CT_MRUColors{}; return _aacac }
func (_ffbb *CT_CellFormula) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ffbb.TAttr != ST_CellFormulaTypeUnset {
		_fcd, _acdg := _ffbb.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _acdg != nil {
			return _acdg
		}
		start.Attr = append(start.Attr, _fcd)
	}
	if _ffbb.AcaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0063\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ffbb.AcaAttr))})
	}
	if _ffbb.RefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_ffbb.RefAttr)})
	}
	if _ffbb.Dt2DAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0074\u0032\u0044"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ffbb.Dt2DAttr))})
	}
	if _ffbb.DtrAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0074\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ffbb.DtrAttr))})
	}
	if _ffbb.Del1Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u006c\u0031"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ffbb.Del1Attr))})
	}
	if _ffbb.Del2Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u006c\u0032"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ffbb.Del2Attr))})
	}
	if _ffbb.R1Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0031"}, Value: _fc.Sprintf("\u0025\u0076", *_ffbb.R1Attr)})
	}
	if _ffbb.R2Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0032"}, Value: _fc.Sprintf("\u0025\u0076", *_ffbb.R2Attr)})
	}
	if _ffbb.CaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ffbb.CaAttr))})
	}
	if _ffbb.SiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0069"}, Value: _fc.Sprintf("\u0025\u0076", *_ffbb.SiAttr)})
	}
	if _ffbb.BxAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0078"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ffbb.BxAttr))})
	}
	e.EncodeElement(_ffbb.Content, start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aaceac *CT_Table) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aaceac.TableColumns = NewCT_TableColumns()
	for _, _afacba := range start.Attr {
		if _afacba.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_cfeag, _bfdca := _f.ParseUint(_afacba.Value, 10, 32)
			if _bfdca != nil {
				return _bfdca
			}
			_bgdea := uint32(_cfeag)
			_aaceac.DataDxfIdAttr = &_bgdea
			continue
		}
		if _afacba.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_bbbaa, _aaedff := _f.ParseUint(_afacba.Value, 10, 32)
			if _aaedff != nil {
				return _aaedff
			}
			_cfdfec := uint32(_bbbaa)
			_aaceac.TotalsRowDxfIdAttr = &_cfdfec
			continue
		}
		if _afacba.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cgec, _ffgaad := _afacba.Value, error(nil)
			if _ffgaad != nil {
				return _ffgaad
			}
			_aaceac.NameAttr = &_cgec
			continue
		}
		if _afacba.Name.Local == "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_dccfad, _cfabb := _f.ParseUint(_afacba.Value, 10, 32)
			if _cfabb != nil {
				return _cfabb
			}
			_decca := uint32(_dccfad)
			_aaceac.HeaderRowBorderDxfIdAttr = &_decca
			continue
		}
		if _afacba.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_bagca, _cdgaab := _afacba.Value, error(nil)
			if _cdgaab != nil {
				return _cdgaab
			}
			_aaceac.CommentAttr = &_bagca
			continue
		}
		if _afacba.Name.Local == "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064" {
			_gdbdcf, _aafaa := _f.ParseUint(_afacba.Value, 10, 32)
			if _aafaa != nil {
				return _aafaa
			}
			_efgde := uint32(_gdbdcf)
			_aaceac.TableBorderDxfIdAttr = &_efgde
			continue
		}
		if _afacba.Name.Local == "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e" {
			_aaceac.TableTypeAttr.UnmarshalXMLAttr(_afacba)
			continue
		}
		if _afacba.Name.Local == "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_gcbbb, _ababc := _f.ParseUint(_afacba.Value, 10, 32)
			if _ababc != nil {
				return _ababc
			}
			_adedf := uint32(_gcbbb)
			_aaceac.TotalsRowBorderDxfIdAttr = &_adedf
			continue
		}
		if _afacba.Name.Local == "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw" {
			_daacdag, _feefd := _f.ParseBool(_afacba.Value)
			if _feefd != nil {
				return _feefd
			}
			_aaceac.InsertRowAttr = &_daacdag
			continue
		}
		if _afacba.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_cbfec, _abgdda := _afacba.Value, error(nil)
			if _abgdda != nil {
				return _abgdda
			}
			_aaceac.HeaderRowCellStyleAttr = &_cbfec
			continue
		}
		if _afacba.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_bcdab, _fcabc := _f.ParseUint(_afacba.Value, 10, 32)
			if _fcabc != nil {
				return _fcabc
			}
			_cebee := uint32(_bcdab)
			_aaceac.TotalsRowCountAttr = &_cebee
			continue
		}
		if _afacba.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_dfeegg, _fgcacg := _afacba.Value, error(nil)
			if _fgcacg != nil {
				return _fgcacg
			}
			_aaceac.TotalsRowCellStyleAttr = &_dfeegg
			continue
		}
		if _afacba.Name.Local == "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065" {
			_bddef, _bggge := _afacba.Value, error(nil)
			if _bggge != nil {
				return _bggge
			}
			_aaceac.DisplayNameAttr = _bddef
			continue
		}
		if _afacba.Name.Local == "\u0069\u0064" {
			_ccaacc, _eaddg := _f.ParseUint(_afacba.Value, 10, 32)
			if _eaddg != nil {
				return _eaddg
			}
			_aaceac.IdAttr = uint32(_ccaacc)
			continue
		}
		if _afacba.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_gcfbg, _dbaba := _afacba.Value, error(nil)
			if _dbaba != nil {
				return _dbaba
			}
			_aaceac.DataCellStyleAttr = &_gcfbg
			continue
		}
		if _afacba.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_dbgae, _gedef := _f.ParseBool(_afacba.Value)
			if _gedef != nil {
				return _gedef
			}
			_aaceac.PublishedAttr = &_dbgae
			continue
		}
		if _afacba.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_ebgec, _fcffg := _f.ParseUint(_afacba.Value, 10, 32)
			if _fcffg != nil {
				return _fcffg
			}
			_gegbfa := uint32(_ebgec)
			_aaceac.ConnectionIdAttr = &_gegbfa
			continue
		}
		if _afacba.Name.Local == "\u0072\u0065\u0066" {
			_fabgdb, _adfbf := _afacba.Value, error(nil)
			if _adfbf != nil {
				return _adfbf
			}
			_aaceac.RefAttr = _fabgdb
			continue
		}
		if _afacba.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074" {
			_dacca, _eaeaf := _f.ParseBool(_afacba.Value)
			if _eaeaf != nil {
				return _eaeaf
			}
			_aaceac.InsertRowShiftAttr = &_dacca
			continue
		}
		if _afacba.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e" {
			_gfaeb, _ebfgde := _f.ParseBool(_afacba.Value)
			if _ebfgde != nil {
				return _ebfgde
			}
			_aaceac.TotalsRowShownAttr = &_gfaeb
			continue
		}
		if _afacba.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_dcffd, _ccffg := _f.ParseUint(_afacba.Value, 10, 32)
			if _ccffg != nil {
				return _ccffg
			}
			_feagg := uint32(_dcffd)
			_aaceac.HeaderRowDxfIdAttr = &_feagg
			continue
		}
		if _afacba.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_bbabd, _cfdac := _f.ParseUint(_afacba.Value, 10, 32)
			if _cfdac != nil {
				return _cfdac
			}
			_gggcfc := uint32(_bbabd)
			_aaceac.HeaderRowCountAttr = &_gggcfc
			continue
		}
	}
_gbcbfb:
	for {
		_febde, _cgagfe := d.Token()
		if _cgagfe != nil {
			return _cgagfe
		}
		switch _cgbba := _febde.(type) {
		case _a.StartElement:
			switch _cgbba.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_aaceac.AutoFilter = NewCT_AutoFilter()
				if _gbgdgf := d.DecodeElement(_aaceac.AutoFilter, &_cgbba); _gbgdgf != nil {
					return _gbgdgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_aaceac.SortState = NewCT_SortState()
				if _dgbaa := d.DecodeElement(_aaceac.SortState, &_cgbba); _dgbaa != nil {
					return _dgbaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}:
				if _afbefa := d.DecodeElement(_aaceac.TableColumns, &_cgbba); _afbefa != nil {
					return _afbefa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}:
				_aaceac.TableStyleInfo = NewCT_TableStyleInfo()
				if _eaege := d.DecodeElement(_aaceac.TableStyleInfo, &_cgbba); _eaege != nil {
					return _eaege
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aaceac.ExtLst = NewCT_ExtensionList()
				if _afdga := d.DecodeElement(_aaceac.ExtLst, &_cgbba); _afdga != nil {
					return _afdga
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _cgbba.Name)
				if _eaeeb := d.Skip(); _eaeeb != nil {
					return _eaeeb
				}
			}
		case _a.EndElement:
			break _gbcbfb
		case _a.CharData:
		}
	}
	return nil
}
func (_ebddcf *CT_Schema) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ffdba := range start.Attr {
		if _ffdba.Name.Local == "\u0049\u0044" {
			_cfagc, _ceccbc := _ffdba.Value, error(nil)
			if _ceccbc != nil {
				return _ceccbc
			}
			_ebddcf.IDAttr = _cfagc
			continue
		}
		if _ffdba.Name.Local == "\u0053c\u0068\u0065\u006d\u0061\u0052\u0065f" {
			_cgfgf, _dadgd := _ffdba.Value, error(nil)
			if _dadgd != nil {
				return _dadgd
			}
			_ebddcf.SchemaRefAttr = &_cgfgf
			continue
		}
		if _ffdba.Name.Local == "\u004ea\u006d\u0065\u0073\u0070\u0061\u0063e" {
			_ggbbf, _gdbdg := _ffdba.Value, error(nil)
			if _gdbdg != nil {
				return _gdbdg
			}
			_ebddcf.NamespaceAttr = &_ggbbf
			continue
		}
		if _ffdba.Name.Local == "\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065" {
			_adbbbb, _fffegd := _ffdba.Value, error(nil)
			if _fffegd != nil {
				return _fffegd
			}
			_ebddcf.SchemaLanguageAttr = &_adbbbb
			continue
		}
	}
_gcbcg:
	for {
		_dafba, _aabfg := d.Token()
		if _aabfg != nil {
			return _aabfg
		}
		switch _beeda := _dafba.(type) {
		case _a.StartElement:
			switch _beeda.Name {
			default:
				if _cbbec, _abccfe := _fca.CreateElement(_beeda); _abccfe != nil {
					return _abccfe
				} else {
					if _abcfbe := d.DecodeElement(_cbbec, &_beeda); _abcfbe != nil {
						return _abcfbe
					}
					_ebddcf.Any = _cbbec
				}
			}
		case _a.EndElement:
			break _gcbcg
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_VolType() *CT_VolType {
	_fffab := &CT_VolType{}
	_fffab.TypeAttr = ST_VolDepType(1)
	return _fffab
}
func (_ceeab ST_TargetScreenSize) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_egddbg := _a.Attr{}
	_egddbg.Name = name
	switch _ceeab {
	case ST_TargetScreenSizeUnset:
		_egddbg.Value = ""
	case ST_TargetScreenSize544x376:
		_egddbg.Value = "\u00354\u0034\u0078\u0033\u0037\u0036"
	case ST_TargetScreenSize640x480:
		_egddbg.Value = "\u00364\u0030\u0078\u0034\u0038\u0030"
	case ST_TargetScreenSize720x512:
		_egddbg.Value = "\u00372\u0030\u0078\u0035\u0031\u0032"
	case ST_TargetScreenSize800x600:
		_egddbg.Value = "\u00380\u0030\u0078\u0036\u0030\u0030"
	case ST_TargetScreenSize1024x768:
		_egddbg.Value = "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case ST_TargetScreenSize1152x882:
		_egddbg.Value = "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case ST_TargetScreenSize1152x900:
		_egddbg.Value = "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case ST_TargetScreenSize1280x1024:
		_egddbg.Value = "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case ST_TargetScreenSize1600x1200:
		_egddbg.Value = "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case ST_TargetScreenSize1800x1440:
		_egddbg.Value = "\u00318\u0030\u0030\u0078\u0031\u0034\u00340"
	case ST_TargetScreenSize1920x1200:
		_egddbg.Value = "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return _egddbg, nil
}
func NewCT_ExtensionList() *CT_ExtensionList    { _fdbe := &CT_ExtensionList{}; return _fdbe }
func (_fdddeca ST_Orientation) Validate() error { return _fdddeca.ValidateWithPath("") }

// ValidateWithPath validates the CT_Formats and its children, prefixing error messages with path
func (_gdegb *CT_Formats) ValidateWithPath(path string) error {
	for _ffdaf, _deec := range _gdegb.Format {
		if _ddbfe := _deec.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _ffdaf)); _ddbfe != nil {
			return _ddbfe
		}
	}
	return nil
}
func (_ebagf *CT_TableStyleElement) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ebagf.TypeAttr = ST_TableStyleType(1)
	for _, _dffbfd := range start.Attr {
		if _dffbfd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ebagf.TypeAttr.UnmarshalXMLAttr(_dffbfd)
			continue
		}
		if _dffbfd.Name.Local == "\u0073\u0069\u007a\u0065" {
			_gfeeef, _daeeg := _f.ParseUint(_dffbfd.Value, 10, 32)
			if _daeeg != nil {
				return _daeeg
			}
			_fbfbe := uint32(_gfeeef)
			_ebagf.SizeAttr = &_fbfbe
			continue
		}
		if _dffbfd.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_bcged, _eagdg := _f.ParseUint(_dffbfd.Value, 10, 32)
			if _eagdg != nil {
				return _eagdg
			}
			_cfef := uint32(_bcged)
			_ebagf.DxfIdAttr = &_cfef
			continue
		}
	}
	for {
		_cbcbc, _ecdcdb := d.Token()
		if _ecdcdb != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006ce\u0053t\u0079\u006c\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _ecdcdb)
		}
		if _efcce, _bdbfcc := _cbcbc.(_a.EndElement); _bdbfcc && _efcce.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cdeeeda ST_HorizontalAlignment) Validate() error { return _cdeeeda.ValidateWithPath("") }
func (_agbd *CT_MdxSet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0073"}, Value: _fc.Sprintf("\u0025\u0076", _agbd.NsAttr)})
	if _agbd.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_agbd.CAttr)})
	}
	if _agbd.OAttr != ST_MdxSetOrderUnset {
		_ccegg, _dgegg := _agbd.OAttr.MarshalXMLAttr(_a.Name{Local: "\u006f"})
		if _dgegg != nil {
			return _dgegg
		}
		start.Attr = append(start.Attr, _ccegg)
	}
	e.EncodeToken(start)
	if _agbd.N != nil {
		_aaega := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _fdaac := range _agbd.N {
			e.EncodeElement(_fdaac, _aaega)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_PivotTableStyle() *CT_PivotTableStyle { _affaa := &CT_PivotTableStyle{}; return _affaa }

type Metadata struct{ CT_Metadata }

// Validate validates the CT_DataRef and its children
func (_gfcf *CT_DataRef) Validate() error {
	return _gfcf.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066")
}
func (_fccb *CT_Color) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fccb.AutoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fccb.AutoAttr))})
	}
	if _fccb.IndexedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069n\u0064\u0065\u0078\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fccb.IndexedAttr)})
	}
	if _fccb.RgbAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0067\u0062"}, Value: _fc.Sprintf("\u0025\u0076", *_fccb.RgbAttr)})
	}
	if _fccb.ThemeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0068\u0065m\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fccb.ThemeAttr)})
	}
	if _fccb.TintAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0069\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fccb.TintAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cbbga ST_PivotAreaType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dfcgb := _a.Attr{}
	_dfcgb.Name = name
	switch _cbbga {
	case ST_PivotAreaTypeUnset:
		_dfcgb.Value = ""
	case ST_PivotAreaTypeNone:
		_dfcgb.Value = "\u006e\u006f\u006e\u0065"
	case ST_PivotAreaTypeNormal:
		_dfcgb.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_PivotAreaTypeData:
		_dfcgb.Value = "\u0064\u0061\u0074\u0061"
	case ST_PivotAreaTypeAll:
		_dfcgb.Value = "\u0061\u006c\u006c"
	case ST_PivotAreaTypeOrigin:
		_dfcgb.Value = "\u006f\u0072\u0069\u0067\u0069\u006e"
	case ST_PivotAreaTypeButton:
		_dfcgb.Value = "\u0062\u0075\u0074\u0074\u006f\u006e"
	case ST_PivotAreaTypeTopEnd:
		_dfcgb.Value = "\u0074\u006f\u0070\u0045\u006e\u0064"
	case ST_PivotAreaTypeTopRight:
		_dfcgb.Value = "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	}
	return _dfcgb, nil
}
func (_fdcaea ST_CredMethod) String() string {
	switch _fdcaea {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064"
	case 2:
		return "\u006e\u006f\u006e\u0065"
	case 3:
		return "\u0073\u0074\u006f\u0072\u0065\u0064"
	case 4:
		return "\u0070\u0072\u006f\u006d\u0070\u0074"
	}
	return ""
}

type ST_DataValidationOperator byte

// Validate validates the CT_PageBreak and its children
func (_fbccd *CT_PageBreak) Validate() error {
	return _fbccd.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b")
}
func (_ecgdf ST_TableType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ecgdf.String(), start)
}
func (_effafd *CT_TableStyles) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _effafd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_effafd.CountAttr)})
	}
	if _effafd.DefaultTableStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_effafd.DefaultTableStyleAttr)})
	}
	if _effafd.DefaultPivotStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0050\u0069\u0076\u006f\u0074S\u0074\u0079\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_effafd.DefaultPivotStyleAttr)})
	}
	e.EncodeToken(start)
	if _effafd.TableStyle != nil {
		_ceefb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		for _, _aegee := range _effafd.TableStyle {
			e.EncodeElement(_aegee, _ceefb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_CustomChartsheetView() *CT_CustomChartsheetView {
	_beff := &CT_CustomChartsheetView{}
	_beff.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _beff
}
func NewCT_Break() *CT_Break             { _ggda := &CT_Break{}; return _ggda }
func NewCT_PhoneticRun() *CT_PhoneticRun { _cfeaaa := &CT_PhoneticRun{}; return _cfeaaa }

// Validate validates the CT_I and its children
func (_bfbec *CT_I) Validate() error { return _bfbec.ValidateWithPath("\u0043\u0054\u005f\u0049") }
func (_gaecc *CT_rowItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bddgg := range start.Attr {
		if _bddgg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_feacag, _bfagd := _f.ParseUint(_bddgg.Value, 10, 32)
			if _bfagd != nil {
				return _bfagd
			}
			_abeff := uint32(_feacag)
			_gaecc.CountAttr = &_abeff
			continue
		}
	}
_bcggg:
	for {
		_ffccb, _gbff := d.Token()
		if _gbff != nil {
			return _gbff
		}
		switch _cgbaf := _ffccb.(type) {
		case _a.StartElement:
			switch _cgbaf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_addebg := NewCT_I()
				if _gbccec := d.DecodeElement(_addebg, &_cgbaf); _gbccec != nil {
					return _gbccec
				}
				_gaecc.I = append(_gaecc.I, _addebg)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _cgbaf.Name)
				if _gdabeg := d.Skip(); _gdabeg != nil {
					return _gdabeg
				}
			}
		case _a.EndElement:
			break _bcggg
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_colItems and its children, prefixing error messages with path
func (_efdda *CT_colItems) ValidateWithPath(path string) error {
	for _fbfged, _bgace := range _efdda.I {
		if _degcc := _bgace.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _fbfged)); _degcc != nil {
			return _degcc
		}
	}
	return nil
}
func NewCT_Cfvo() *CT_Cfvo                    { _aaead := &CT_Cfvo{}; _aaead.TypeAttr = ST_CfvoType(1); return _aaead }
func (_gceedd ST_VolDepType) Validate() error { return _gceedd.ValidateWithPath("") }
func (_ggfbb *CT_MetadataTypes) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ggfbb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ggfbb.CountAttr)})
	}
	e.EncodeToken(start)
	_fbffg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003am\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}}
	for _, _dgdbc := range _ggfbb.MetadataType {
		e.EncodeElement(_dgdbc, _fbffg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewPivotCacheDefinition() *PivotCacheDefinition {
	_facgcg := &PivotCacheDefinition{}
	_facgcg.CT_PivotCacheDefinition = *NewCT_PivotCacheDefinition()
	return _facgcg
}

// ValidateWithPath validates the CT_DataValidation and its children, prefixing error messages with path
func (_dgded *CT_DataValidation) ValidateWithPath(path string) error {
	if _dgdfga := _dgded.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _dgdfga != nil {
		return _dgdfga
	}
	if _dgfcb := _dgded.ErrorStyleAttr.ValidateWithPath(path + "\u002fE\u0072r\u006f\u0072\u0053\u0074\u0079\u006c\u0065\u0041\u0074\u0074\u0072"); _dgfcb != nil {
		return _dgfcb
	}
	if _efdg := _dgded.ImeModeAttr.ValidateWithPath(path + "\u002f\u0049\u006de\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _efdg != nil {
		return _efdg
	}
	if _cfge := _dgded.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _cfge != nil {
		return _cfge
	}
	return nil
}

type CT_CustomFilter struct {

	// Filter Comparison Operator
	OperatorAttr ST_FilterOperator

	// Top or Bottom Value
	ValAttr *string
}

// ValidateWithPath validates the CT_DataBinding and its children, prefixing error messages with path
func (_gcdcf *CT_DataBinding) ValidateWithPath(path string) error { return nil }
func (_fddab *CT_SheetId) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", _fddab.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eagccc *ST_IconSetType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bdgdf, _geedd := d.Token()
	if _geedd != nil {
		return _geedd
	}
	if _bagec, _agdfc := _bdgdf.(_a.EndElement); _agdfc && _bagec.Name == start.Name {
		*_eagccc = 1
		return nil
	}
	if _eceddf, _fabffc := _bdgdf.(_a.CharData); !_fabffc {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdgdf)
	} else {
		switch string(_eceddf) {
		case "":
			*_eagccc = 0
		case "\u0033A\u0072\u0072\u006f\u0077\u0073":
			*_eagccc = 1
		case "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_eagccc = 2
		case "\u0033\u0046\u006c\u0061\u0067\u0073":
			*_eagccc = 3
		case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031":
			*_eagccc = 4
		case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032":
			*_eagccc = 5
		case "\u0033\u0053\u0069\u0067\u006e\u0073":
			*_eagccc = 6
		case "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073":
			*_eagccc = 7
		case "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732":
			*_eagccc = 8
		case "\u0034A\u0072\u0072\u006f\u0077\u0073":
			*_eagccc = 9
		case "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_eagccc = 10
		case "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b":
			*_eagccc = 11
		case "\u0034R\u0061\u0074\u0069\u006e\u0067":
			*_eagccc = 12
		case "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073":
			*_eagccc = 13
		case "\u0035A\u0072\u0072\u006f\u0077\u0073":
			*_eagccc = 14
		case "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_eagccc = 15
		case "\u0035R\u0061\u0074\u0069\u006e\u0067":
			*_eagccc = 16
		case "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s":
			*_eagccc = 17
		}
	}
	_bdgdf, _geedd = d.Token()
	if _geedd != nil {
		return _geedd
	}
	if _bacbc, _bggfbd := _bdgdf.(_a.EndElement); _bggfbd && _bacbc.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdgdf)
}
func (_adeef ST_SheetState) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cagcdf := _a.Attr{}
	_cagcdf.Name = name
	switch _adeef {
	case ST_SheetStateUnset:
		_cagcdf.Value = ""
	case ST_SheetStateVisible:
		_cagcdf.Value = "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case ST_SheetStateHidden:
		_cagcdf.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	case ST_SheetStateVeryHidden:
		_cagcdf.Value = "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return _cagcdf, nil
}
func (_beedd *CT_RevisionMove) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dbfaee := range start.Attr {
		if _dbfaee.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_geaec, _geaecc := _f.ParseUint(_dbfaee.Value, 10, 32)
			if _geaecc != nil {
				return _geaecc
			}
			_beedd.SheetIdAttr = uint32(_geaec)
			continue
		}
		if _dbfaee.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065" {
			_edaff, _cbgga := _dbfaee.Value, error(nil)
			if _cbgga != nil {
				return _cbgga
			}
			_beedd.SourceAttr = _edaff
			continue
		}
		if _dbfaee.Name.Local == "d\u0065\u0073\u0074\u0069\u006e\u0061\u0074\u0069\u006f\u006e" {
			_aacgaf, _bfccd := _dbfaee.Value, error(nil)
			if _bfccd != nil {
				return _bfccd
			}
			_beedd.DestinationAttr = _aacgaf
			continue
		}
		if _dbfaee.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_dgffdb, _aeeec := _f.ParseUint(_dbfaee.Value, 10, 32)
			if _aeeec != nil {
				return _aeeec
			}
			_bcadg := uint32(_dgffdb)
			_beedd.SourceSheetIdAttr = &_bcadg
			continue
		}
		if _dbfaee.Name.Local == "\u0072\u0049\u0064" {
			_efeed, _bcfbe := _f.ParseUint(_dbfaee.Value, 10, 32)
			if _bcfbe != nil {
				return _bcfbe
			}
			_egdec := uint32(_efeed)
			_beedd.RIdAttr = &_egdec
			continue
		}
		if _dbfaee.Name.Local == "\u0075\u0061" {
			_bcadf, _cfgff := _f.ParseBool(_dbfaee.Value)
			if _cfgff != nil {
				return _cfgff
			}
			_beedd.UaAttr = &_bcadf
			continue
		}
		if _dbfaee.Name.Local == "\u0072\u0061" {
			_gbdgb, _aafdg := _f.ParseBool(_dbfaee.Value)
			if _aafdg != nil {
				return _aafdg
			}
			_beedd.RaAttr = &_gbdgb
			continue
		}
	}
_edccfd:
	for {
		_efbed, _gaegc := d.Token()
		if _gaegc != nil {
			return _gaegc
		}
		switch _ffbfdc := _efbed.(type) {
		case _a.StartElement:
			switch _ffbfdc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
				_aabec := NewCT_UndoInfo()
				if _cggfef := d.DecodeElement(_aabec, &_ffbfdc); _cggfef != nil {
					return _cggfef
				}
				_beedd.Undo = append(_beedd.Undo, _aabec)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_ecebd := NewCT_RevisionCellChange()
				if _ccbcdb := d.DecodeElement(_ecebd, &_ffbfdc); _ccbcdb != nil {
					return _ccbcdb
				}
				_beedd.Rcc = append(_beedd.Rcc, _ecebd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_cddag := NewCT_RevisionFormatting()
				if _ccagd := d.DecodeElement(_cddag, &_ffbfdc); _ccagd != nil {
					return _ccagd
				}
				_beedd.Rfmt = append(_beedd.Rfmt, _cddag)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065\u0020\u0025\u0076", _ffbfdc.Name)
				if _abec := d.Skip(); _abec != nil {
					return _abec
				}
			}
		case _a.EndElement:
			break _edccfd
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OleSize and its children, prefixing error messages with path
func (_fdcag *CT_OleSize) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_FutureMetadata and its children
func (_bcfbg *CT_FutureMetadata) Validate() error {
	return _bcfbg.ValidateWithPath("\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061")
}
func NewCT_ConditionalFormats() *CT_ConditionalFormats {
	_cbgdbg := &CT_ConditionalFormats{}
	return _cbgdbg
}

type CT_FunctionGroup struct {

	// Name
	NameAttr *string
}

func (_fbccab ST_PageOrder) String() string {
	switch _fbccab {
	case 0:
		return ""
	case 1:
		return "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072"
	case 2:
		return "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"
	}
	return ""
}

type ST_rwColActionType byte
type CT_WorkbookProtection struct {

	// Legacy Workbook Password
	WorkbookPasswordAttr *string

	// Workbook Password Character Set
	WorkbookPasswordCharacterSetAttr *string

	// Legacy Revisions Password
	RevisionsPasswordAttr *string

	// Revisions Password Character Set
	RevisionsPasswordCharacterSetAttr *string

	// Lock Structure
	LockStructureAttr *bool

	// Lock Windows
	LockWindowsAttr *bool

	// Lock Revisions
	LockRevisionAttr *bool

	// Cryptographic Algorithm Name
	RevisionsAlgorithmNameAttr *string

	// Password Hash Value
	RevisionsHashValueAttr *string

	// Salt Value for Password Verifier
	RevisionsSaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	RevisionsSpinCountAttr *uint32

	// Cryptographic Algorithm Name
	WorkbookAlgorithmNameAttr *string

	// Password Hash Value
	WorkbookHashValueAttr *string

	// Salt Value for Password Verifier
	WorkbookSaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	WorkbookSpinCountAttr *uint32
}

// ValidateWithPath validates the CT_FontScheme and its children, prefixing error messages with path
func (_daaeb *CT_FontScheme) ValidateWithPath(path string) error {
	if _daaeb.ValAttr == ST_FontSchemeUnset {
		return _fc.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cbfbb := _daaeb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cbfbb != nil {
		return _cbfbb
	}
	return nil
}
func (_bcfbb *ST_FieldSortType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fbagb, _fdggbb := d.Token()
	if _fdggbb != nil {
		return _fdggbb
	}
	if _ceffg, _fgcfa := _fbagb.(_a.EndElement); _fgcfa && _ceffg.Name == start.Name {
		*_bcfbb = 1
		return nil
	}
	if _aedfe, _fbfafd := _fbagb.(_a.CharData); !_fbfafd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbagb)
	} else {
		switch string(_aedfe) {
		case "":
			*_bcfbb = 0
		case "\u006d\u0061\u006e\u0075\u0061\u006c":
			*_bcfbb = 1
		case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
			*_bcfbb = 2
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
			*_bcfbb = 3
		}
	}
	_fbagb, _fdggbb = d.Token()
	if _fdggbb != nil {
		return _fdggbb
	}
	if _edadg, _edcaf := _fbagb.(_a.EndElement); _edcaf && _edadg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbagb)
}
func NewCT_PrintOptions() *CT_PrintOptions { _ccfc := &CT_PrintOptions{}; return _ccfc }

type CT_PageItem struct {

	// Page Item Name
	NameAttr string
}

// Validate validates the CT_QueryTableRefresh and its children
func (_ggbbd *CT_QueryTableRefresh) Validate() error {
	return _ggbbd.ValidateWithPath("C\u0054_\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068")
}
func NewCT_SheetProtection() *CT_SheetProtection { _ebage := &CT_SheetProtection{}; return _ebage }

// Validate validates the CT_WebPublishObject and its children
func (_cfbcgb *CT_WebPublishObject) Validate() error {
	return _cfbcgb.ValidateWithPath("\u0043\u0054\u005f\u0057eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_RevisionDefinedName and its children, prefixing error messages with path
func (_cfgcee *CT_RevisionDefinedName) ValidateWithPath(path string) error {
	if _cfgcee.ExtLst != nil {
		if _gccbd := _cfgcee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gccbd != nil {
			return _gccbd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_VerticalAlignFontProperty and its children, prefixing error messages with path
func (_cdfbg *CT_VerticalAlignFontProperty) ValidateWithPath(path string) error {
	if _cdfbg.ValAttr == _ae.ST_VerticalAlignRunUnset {
		return _fc.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fdgcb := _cdfbg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fdgcb != nil {
		return _fdgcb
	}
	return nil
}
func (_bdafd *CT_SingleXmlCells) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_cfbfgc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0073\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}}
	for _, _cbggdb := range _bdafd.SingleXmlCell {
		e.EncodeElement(_cbggdb, _cfbfgc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cdfeb *CT_ReviewedRevisions) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gcbfdd := range start.Attr {
		if _gcbfdd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_badced, _fgagede := _f.ParseUint(_gcbfdd.Value, 10, 32)
			if _fgagede != nil {
				return _fgagede
			}
			_gfbcf := uint32(_badced)
			_cdfeb.CountAttr = &_gfbcf
			continue
		}
	}
_ccfead:
	for {
		_fbaee, _efcfg := d.Token()
		if _efcfg != nil {
			return _efcfg
		}
		switch _gcbbcc := _fbaee.(type) {
		case _a.StartElement:
			switch _gcbbcc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}:
				_caed := NewCT_Reviewed()
				if _cegbda := d.DecodeElement(_caed, &_gcbbcc); _cegbda != nil {
					return _cegbda
				}
				_cdfeb.Reviewed = append(_cdfeb.Reviewed, _caed)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _gcbbcc.Name)
				if _ffdbb := d.Skip(); _ffdbb != nil {
					return _ffdbb
				}
			}
		case _a.EndElement:
			break _ccfead
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PCDSDTCEntries and its children, prefixing error messages with path
func (_agaec *CT_PCDSDTCEntries) ValidateWithPath(path string) error {
	for _baegb, _abea := range _agaec.M {
		if _dafae := _abea.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _baegb)); _dafae != nil {
			return _dafae
		}
	}
	for _abbg, _gbece := range _agaec.N {
		if _addeed := _gbece.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _abbg)); _addeed != nil {
			return _addeed
		}
	}
	for _aebac, _bgaac := range _agaec.E {
		if _ecafd := _bgaac.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _aebac)); _ecafd != nil {
			return _ecafd
		}
	}
	for _feac, _bgbdca := range _agaec.S {
		if _ebdcg := _bgbdca.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _feac)); _ebdcg != nil {
			return _ebdcg
		}
	}
	return nil
}

// Validate validates the CT_CacheFields and its children
func (_edc *CT_CacheFields) Validate() error {
	return _edc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073")
}

// Validate validates the CT_Table and its children
func (_cdde *CT_Table) Validate() error {
	return _cdde.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065")
}

type CT_TableColumn struct {

	// Table Field Id
	IdAttr uint32

	// Unique Name
	UniqueNameAttr *string

	// Column name
	NameAttr string

	// Totals Row Function
	TotalsRowFunctionAttr ST_TotalsRowFunction

	// Totals Row Label
	TotalsRowLabelAttr *string

	// Query Table Field Id
	QueryTableFieldIdAttr *uint32

	// Header Row Cell Format Id
	HeaderRowDxfIdAttr *uint32

	// Data & Insert Row Format Id
	DataDxfIdAttr *uint32

	// Totals Row Format Id
	TotalsRowDxfIdAttr *uint32

	// Header Row Cell Style
	HeaderRowCellStyleAttr *string

	// Data Area Style Name
	DataCellStyleAttr *string

	// Totals Row Style Name
	TotalsRowCellStyleAttr *string

	// Calculated Column Formula
	CalculatedColumnFormula *CT_TableFormula

	// Totals Row Formula
	TotalsRowFormula *CT_TableFormula

	// XML Column Properties
	XmlColumnPr *CT_XmlColumnPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_DataField and its children, prefixing error messages with path
func (_bbda *CT_DataField) ValidateWithPath(path string) error {
	if _fbggaa := _bbda.SubtotalAttr.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0041\u0074\u0074\u0072"); _fbggaa != nil {
		return _fbggaa
	}
	if _dgbg := _bbda.ShowDataAsAttr.ValidateWithPath(path + "\u002fS\u0068o\u0077\u0044\u0061\u0074\u0061\u0041\u0073\u0041\u0074\u0074\u0072"); _dgbg != nil {
		return _dgbg
	}
	if _bbda.ExtLst != nil {
		if _gfaab := _bbda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfaab != nil {
			return _gfaab
		}
	}
	return nil
}

type CT_Revisions struct {

	// Revision Row Column Insert Delete
	Rrc []*CT_RevisionRowColumn

	// Revision Cell Move
	Rm []*CT_RevisionMove

	// Revision Custom View
	Rcv []*CT_RevisionCustomView

	// Revision Sheet Name
	Rsnm []*CT_RevisionSheetRename

	// Revision Insert Sheet
	Ris []*CT_RevisionInsertSheet

	// Revision Cell Change
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt []*CT_RevisionFormatting

	// Revision AutoFormat
	Raf []*CT_RevisionAutoFormatting

	// Revision Defined Name
	Rdn []*CT_RevisionDefinedName

	// Revision Cell Comment
	Rcmt []*CT_RevisionComment

	// Revision Query Table
	Rqt []*CT_RevisionQueryTableField

	// Revision Merge Conflict
	Rcft []*CT_RevisionConflict
}
type CT_Tables struct {

	// Count of Tables
	CountAttr *uint32

	// No Value
	M []*CT_TableMissing

	// Character Value
	S []*CT_XStringElement

	// Index
	X []*CT_Index
}

func (_efadg ST_FontScheme) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_efadg.String(), start)
}
func (_cffbg *ST_PivotAreaType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gfcad, _bcggaa := d.Token()
	if _bcggaa != nil {
		return _bcggaa
	}
	if _bcccf, _bcgebb := _gfcad.(_a.EndElement); _bcgebb && _bcccf.Name == start.Name {
		*_cffbg = 1
		return nil
	}
	if _bagga, _dfggd := _gfcad.(_a.CharData); !_dfggd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfcad)
	} else {
		switch string(_bagga) {
		case "":
			*_cffbg = 0
		case "\u006e\u006f\u006e\u0065":
			*_cffbg = 1
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_cffbg = 2
		case "\u0064\u0061\u0074\u0061":
			*_cffbg = 3
		case "\u0061\u006c\u006c":
			*_cffbg = 4
		case "\u006f\u0072\u0069\u0067\u0069\u006e":
			*_cffbg = 5
		case "\u0062\u0075\u0074\u0074\u006f\u006e":
			*_cffbg = 6
		case "\u0074\u006f\u0070\u0045\u006e\u0064":
			*_cffbg = 7
		case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_cffbg = 8
		}
	}
	_gfcad, _bcggaa = d.Token()
	if _bcggaa != nil {
		return _bcggaa
	}
	if _fcgebc, _aeggaa := _gfcad.(_a.EndElement); _aeggaa && _fcgebc.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfcad)
}

// Validate validates the CT_DdeLink and its children
func (_gecc *CT_DdeLink) Validate() error {
	return _gecc.ValidateWithPath("\u0043\u0054\u005f\u0044\u0064\u0065\u004c\u0069\u006e\u006b")
}
func (_gaeada ST_SourceType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gaeada.String(), start)
}
func (_adda *CT_ChartsheetPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _caaf := range start.Attr {
		if _caaf.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_dagg, _daga := _f.ParseBool(_caaf.Value)
			if _daga != nil {
				return _daga
			}
			_adda.PublishedAttr = &_dagg
			continue
		}
		if _caaf.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_fbcg, _gabc := _caaf.Value, error(nil)
			if _gabc != nil {
				return _gabc
			}
			_adda.CodeNameAttr = &_fbcg
			continue
		}
	}
_ccba:
	for {
		_geeb, _aafg := d.Token()
		if _aafg != nil {
			return _aafg
		}
		switch _defb := _geeb.(type) {
		case _a.StartElement:
			switch _defb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_adda.TabColor = NewCT_Color()
				if _bdee := d.DecodeElement(_adda.TabColor, &_defb); _bdee != nil {
					return _bdee
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u0020\u0025\u0076", _defb.Name)
				if _bbeb := d.Skip(); _bbeb != nil {
					return _bbeb
				}
			}
		case _a.EndElement:
			break _ccba
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_CellStyle() *CT_CellStyle { _cdad := &CT_CellStyle{}; return _cdad }
func (_eabac *CT_PivotCaches) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_edgcb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}}
	for _, _afffe := range _eabac.PivotCache {
		e.EncodeElement(_afffe, _edgcb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_Item() *CT_Item             { _eddfgf := &CT_Item{}; return _eddfgf }
func NewCT_FontFamily() *CT_FontFamily { _cfbgg := &CT_FontFamily{}; _cfbgg.ValAttr = 0; return _cfbgg }

// Validate validates the CT_ColFields and its children
func (_daac *CT_ColFields) Validate() error {
	return _daac.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073")
}
func NewCT_Connection() *CT_Connection { _cffba := &CT_Connection{}; return _cffba }
func NewCT_RangeSet() *CT_RangeSet     { _eaaae := &CT_RangeSet{}; return _eaaae }

// Validate validates the CT_Cols and its children
func (_cee *CT_Cols) Validate() error {
	return _cee.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u0073")
}

// Validate validates the CT_RowHierarchiesUsage and its children
func (_cgggb *CT_RowHierarchiesUsage) Validate() error {
	return _cgggb.ValidateWithPath("\u0043\u0054\u005f\u0052ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065")
}

// ValidateWithPath validates the CT_Metadata and its children, prefixing error messages with path
func (_ecffg *CT_Metadata) ValidateWithPath(path string) error {
	if _ecffg.MetadataTypes != nil {
		if _cgaegd := _ecffg.MetadataTypes.ValidateWithPath(path + "\u002f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061T\u0079\u0070\u0065\u0073"); _cgaegd != nil {
			return _cgaegd
		}
	}
	if _ecffg.MetadataStrings != nil {
		if _aaedd := _ecffg.MetadataStrings.ValidateWithPath(path + "\u002f\u004de\u0074\u0061\u0064a\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"); _aaedd != nil {
			return _aaedd
		}
	}
	if _ecffg.MdxMetadata != nil {
		if _bbffb := _ecffg.MdxMetadata.ValidateWithPath(path + "\u002f\u004d\u0064x\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"); _bbffb != nil {
			return _bbffb
		}
	}
	for _baaga, _eebcg := range _ecffg.FutureMetadata {
		if _gcade := _eebcg.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0046\u0075tu\u0072e\u004d\u0065\u0074\u0061\u0064a\u0074\u0061\u005b\u0025\u0064\u005d", path, _baaga)); _gcade != nil {
			return _gcade
		}
	}
	if _ecffg.CellMetadata != nil {
		if _cdcga := _ecffg.CellMetadata.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"); _cdcga != nil {
			return _cdcga
		}
	}
	if _ecffg.ValueMetadata != nil {
		if _fbebd := _ecffg.ValueMetadata.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0075\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"); _fbebd != nil {
			return _fbebd
		}
	}
	if _ecffg.ExtLst != nil {
		if _geac := _ecffg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _geac != nil {
			return _geac
		}
	}
	return nil
}
func (_ddbde ST_DataValidationType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bdadf := _a.Attr{}
	_bdadf.Name = name
	switch _ddbde {
	case ST_DataValidationTypeUnset:
		_bdadf.Value = ""
	case ST_DataValidationTypeNone:
		_bdadf.Value = "\u006e\u006f\u006e\u0065"
	case ST_DataValidationTypeWhole:
		_bdadf.Value = "\u0077\u0068\u006fl\u0065"
	case ST_DataValidationTypeDecimal:
		_bdadf.Value = "\u0064e\u0063\u0069\u006d\u0061\u006c"
	case ST_DataValidationTypeList:
		_bdadf.Value = "\u006c\u0069\u0073\u0074"
	case ST_DataValidationTypeDate:
		_bdadf.Value = "\u0064\u0061\u0074\u0065"
	case ST_DataValidationTypeTime:
		_bdadf.Value = "\u0074\u0069\u006d\u0065"
	case ST_DataValidationTypeTextLength:
		_bdadf.Value = "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068"
	case ST_DataValidationTypeCustom:
		_bdadf.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return _bdadf, nil
}

type CT_PivotFields struct {

	// Field Count
	CountAttr *uint32

	// PivotTable Field
	PivotField []*CT_PivotField
}

// Validate validates the CT_CustomWorkbookView and its children
func (_dagae *CT_CustomWorkbookView) Validate() error {
	return _dagae.ValidateWithPath("C\u0054\u005f\u0043\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077")
}
func (_bgde *CT_CustomFilters) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bgde.AndAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006e\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bgde.AndAttr))})
	}
	e.EncodeToken(start)
	_fgdg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}}
	for _, _ffcfg := range _bgde.CustomFilter {
		e.EncodeElement(_ffcfg, _fgdg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_Users() *CT_Users { _caddcd := &CT_Users{}; return _caddcd }
func (_bagea ST_DataConsolidateFunction) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bagea.String(), start)
}

// Validate validates the CT_Cell and its children
func (_bfge *CT_Cell) Validate() error {
	return _bfge.ValidateWithPath("\u0043T\u005f\u0043\u0065\u006c\u006c")
}
func (_cebb *CT_CalculatedItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eddfe := range start.Attr {
		if _eddfe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ffee, _daag := _f.ParseUint(_eddfe.Value, 10, 32)
			if _daag != nil {
				return _daag
			}
			_dbdc := uint32(_ffee)
			_cebb.CountAttr = &_dbdc
			continue
		}
	}
_abb:
	for {
		_eggbe, _bbgb := d.Token()
		if _bbgb != nil {
			return _bbgb
		}
		switch _aaaa := _eggbe.(type) {
		case _a.StartElement:
			switch _aaaa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}:
				_gfdc := NewCT_CalculatedItem()
				if _cccf := d.DecodeElement(_gfdc, &_aaaa); _cccf != nil {
					return _cccf
				}
				_cebb.CalculatedItem = append(_cebb.CalculatedItem, _gfdc)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _aaaa.Name)
				if _efca := d.Skip(); _efca != nil {
					return _efca
				}
			}
		case _a.EndElement:
			break _abb
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RangePr and its children
func (_aceegfe *CT_RangePr) Validate() error {
	return _aceegfe.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072")
}
func (_eaaaga ST_Qualifier) ValidateWithPath(path string) error {
	switch _eaaaga {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eaaaga))
	}
	return nil
}
func (_gaaefgb *CT_TableFormula) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dccdbf := range start.Attr {
		if _dccdbf.Name.Local == "\u0061\u0072\u0072a\u0079" {
			_dceab, _abefee := _f.ParseBool(_dccdbf.Value)
			if _abefee != nil {
				return _abefee
			}
			_gaaefgb.ArrayAttr = _dceab
			continue
		}
	}
	for {
		_abccd, _eaaea := d.Token()
		if _eaaea != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0046o\u0072\u006d\u0075l\u0061:\u0020\u0025\u0073", _eaaea)
		}
		if _cbcgc, _bbagd := _abccd.(_a.CharData); _bbagd {
			_gaaefgb.Content = string(_cbcgc)
		}
		if _cgegfa, _bgfge := _abccd.(_a.EndElement); _bgfge && _cgegfa.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_PageOrderUnset        ST_PageOrder = 0
	ST_PageOrderDownThenOver ST_PageOrder = 1
	ST_PageOrderOverThenDown ST_PageOrder = 2
)

func NewCT_Pane() *CT_Pane { _fadgg := &CT_Pane{}; return _fadgg }
func (_ecgaf ST_TextHAlign) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_afbadf := _a.Attr{}
	_afbadf.Name = name
	switch _ecgaf {
	case ST_TextHAlignUnset:
		_afbadf.Value = ""
	case ST_TextHAlignLeft:
		_afbadf.Value = "\u006c\u0065\u0066\u0074"
	case ST_TextHAlignCenter:
		_afbadf.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_TextHAlignRight:
		_afbadf.Value = "\u0072\u0069\u0067h\u0074"
	case ST_TextHAlignJustify:
		_afbadf.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_TextHAlignDistributed:
		_afbadf.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _afbadf, nil
}
func (_abecd *StyleSheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074"
	return _abecd.CT_Stylesheet.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_SortState and its children, prefixing error messages with path
func (_cdfee *CT_SortState) ValidateWithPath(path string) error {
	if _bccgdc := _cdfee.SortMethodAttr.ValidateWithPath(path + "\u002fS\u006fr\u0074\u004d\u0065\u0074\u0068\u006f\u0064\u0041\u0074\u0074\u0072"); _bccgdc != nil {
		return _bccgdc
	}
	for _bbccf, _bgdba := range _cdfee.SortCondition {
		if _eagbb := _bgdba.ValidateWithPath(_fc.Sprintf("%\u0073/\u0053\u006f\u0072\u0074\u0043\u006f\u006e\u0064i\u0074\u0069\u006f\u006e[%\u0064\u005d", path, _bbccf)); _eagbb != nil {
			return _eagbb
		}
	}
	if _cdfee.ExtLst != nil {
		if _bgcafg := _cdfee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgcafg != nil {
			return _bgcafg
		}
	}
	return nil
}
func (_bdbdcg *ST_TextHAlign) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bdbdcg = 0
	case "\u006c\u0065\u0066\u0074":
		*_bdbdcg = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_bdbdcg = 2
	case "\u0072\u0069\u0067h\u0074":
		*_bdbdcg = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_bdbdcg = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_bdbdcg = 5
	}
	return nil
}
func (_adbb *CT_CacheHierarchy) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _adbb.UniqueNameAttr)})
	if _adbb.CaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_adbb.CaptionAttr)})
	}
	if _adbb.MeasureAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006de\u0061\u0073\u0075\u0072\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbb.MeasureAttr))})
	}
	if _adbb.SetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbb.SetAttr))})
	}
	if _adbb.ParentSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070a\u0072\u0065\u006e\u0074\u0053\u0065t"}, Value: _fc.Sprintf("\u0025\u0076", *_adbb.ParentSetAttr)})
	}
	if _adbb.IconSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_adbb.IconSetAttr)})
	}
	if _adbb.AttributeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061t\u0074\u0072\u0069\u0062\u0075\u0074e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbb.AttributeAttr))})
	}
	if _adbb.TimeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbb.TimeAttr))})
	}
	if _adbb.KeyAttributeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006b\u0065\u0079A\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbb.KeyAttributeAttr))})
	}
	if _adbb.DefaultMemberUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0066au\u006c\u0074\u004d\u0065\u006d\u0062\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_adbb.DefaultMemberUniqueNameAttr)})
	}
	if _adbb.AllUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u006c\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_adbb.AllUniqueNameAttr)})
	}
	if _adbb.AllCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_adbb.AllCaptionAttr)})
	}
	if _adbb.DimensionUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u006d\u0065ns\u0069\u006f\u006e\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_adbb.DimensionUniqueNameAttr)})
	}
	if _adbb.DisplayFolderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_adbb.DisplayFolderAttr)})
	}
	if _adbb.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_adbb.MeasureGroupAttr)})
	}
	if _adbb.MeasuresAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbb.MeasuresAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", _adbb.CountAttr)})
	if _adbb.OneFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006e\u0065\u0046\u0069\u0065\u006c\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbb.OneFieldAttr))})
	}
	if _adbb.MemberValueDatatypeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u006d\u0062er\u0056\u0061\u006c\u0075\u0065\u0044\u0061\u0074\u0061\u0074\u0079\u0070\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_adbb.MemberValueDatatypeAttr)})
	}
	if _adbb.UnbalancedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbb.UnbalancedAttr))})
	}
	if _adbb.UnbalancedGroupAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075n\u0062a\u006c\u0061\u006e\u0063\u0065\u0064\u0047\u0072\u006f\u0075\u0070"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbb.UnbalancedGroupAttr))})
	}
	if _adbb.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbb.HiddenAttr))})
	}
	e.EncodeToken(start)
	if _adbb.FieldsUsage != nil {
		_deag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065"}}
		e.EncodeElement(_adbb.FieldsUsage, _deag)
	}
	if _adbb.GroupLevels != nil {
		_gdbbg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073"}}
		e.EncodeElement(_adbb.GroupLevels, _gdbbg)
	}
	if _adbb.ExtLst != nil {
		_beeb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_adbb.ExtLst, _beeb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cbbbba ST_ConditionalFormattingOperator) Validate() error { return _cbbbba.ValidateWithPath("") }

// Validate validates the CT_ExternalSheetData and its children
func (_ggef *CT_ExternalSheetData) Validate() error {
	return _ggef.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Da\u0074\u0061")
}
func NewConnections() *Connections {
	_fcffc := &Connections{}
	_fcffc.CT_Connections = *NewCT_Connections()
	return _fcffc
}
func (_edgfe *CT_WebPublishObjects) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _edgfe.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_edgfe.CountAttr)})
	}
	e.EncodeToken(start)
	_gcbfgb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0077eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}}
	for _, _ggfde := range _edgfe.WebPublishObject {
		e.EncodeElement(_ggfde, _gcbfgb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_ServerFormats() *CT_ServerFormats { _dcbed := &CT_ServerFormats{}; return _dcbed }

// Validate validates the CT_Record and its children
func (_eaeef *CT_Record) Validate() error {
	return _eaeef.ValidateWithPath("\u0043T\u005f\u0052\u0065\u0063\u006f\u0072d")
}

// ValidateWithPath validates the CT_TableParts and its children, prefixing error messages with path
func (_aeddg *CT_TableParts) ValidateWithPath(path string) error {
	for _cegegb, _eacde := range _aeddg.TablePart {
		if _fafbb := _eacde.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0054\u0061\u0062l\u0065\u0050\u0061\u0072\u0074\u005b\u0025\u0064\u005d", path, _cegegb)); _fafbb != nil {
			return _fafbb
		}
	}
	return nil
}
func (_eaegd *CT_QueryTableDeletedFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afcc := range start.Attr {
		if _afcc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dfcb, _bgbfad := _f.ParseUint(_afcc.Value, 10, 32)
			if _bgbfad != nil {
				return _bgbfad
			}
			_cbcbgf := uint32(_dfcb)
			_eaegd.CountAttr = &_cbcbgf
			continue
		}
	}
_dagedd:
	for {
		_ecgdb, _ggcbd := d.Token()
		if _ggcbd != nil {
			return _ggcbd
		}
		switch _bffggf := _ecgdb.(type) {
		case _a.StartElement:
			switch _bffggf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u006ce\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u006ce\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}:
				_bddgab := NewCT_DeletedField()
				if _dacdc := d.DecodeElement(_bddgab, &_bffggf); _dacdc != nil {
					return _dacdc
				}
				_eaegd.DeletedField = append(_eaegd.DeletedField, _bddgab)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0051\u0075e\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _bffggf.Name)
				if _dfceb := d.Skip(); _dfceb != nil {
					return _dfceb
				}
			}
		case _a.EndElement:
			break _dagedd
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_SortState() *CT_SortState { _febegd := &CT_SortState{}; return _febegd }

const (
	ST_TimePeriodUnset     ST_TimePeriod = 0
	ST_TimePeriodToday     ST_TimePeriod = 1
	ST_TimePeriodYesterday ST_TimePeriod = 2
	ST_TimePeriodTomorrow  ST_TimePeriod = 3
	ST_TimePeriodLast7Days ST_TimePeriod = 4
	ST_TimePeriodThisMonth ST_TimePeriod = 5
	ST_TimePeriodLastMonth ST_TimePeriod = 6
	ST_TimePeriodNextMonth ST_TimePeriod = 7
	ST_TimePeriodThisWeek  ST_TimePeriod = 8
	ST_TimePeriodLastWeek  ST_TimePeriod = 9
	ST_TimePeriodNextWeek  ST_TimePeriod = 10
)

func (_aaedad *CT_PageItem) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bafaa := range start.Attr {
		if _bafaa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cfdfg, _bcbbg := _bafaa.Value, error(nil)
			if _bcbbg != nil {
				return _bcbbg
			}
			_aaedad.NameAttr = _cfdfg
			continue
		}
	}
	for {
		_cdbfd, _feaaf := d.Token()
		if _feaaf != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _feaaf)
		}
		if _egbfd, _gccbe := _cdbfd.(_a.EndElement); _gccbe && _egbfd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CacheField and its children, prefixing error messages with path
func (_aaeb *CT_CacheField) ValidateWithPath(path string) error {
	if _aaeb.SharedItems != nil {
		if _agcd := _aaeb.SharedItems.ValidateWithPath(path + "\u002f\u0053\u0068a\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"); _agcd != nil {
			return _agcd
		}
	}
	if _aaeb.FieldGroup != nil {
		if _fdg := _aaeb.FieldGroup.ValidateWithPath(path + "/\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"); _fdg != nil {
			return _fdg
		}
	}
	for _bae, _efbe := range _aaeb.MpMap {
		if _dbg := _efbe.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002fM\u0070\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _bae)); _dbg != nil {
			return _dbg
		}
	}
	if _aaeb.ExtLst != nil {
		if _faf := _aaeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _faf != nil {
			return _faf
		}
	}
	return nil
}
func NewCT_QueryTableDeletedFields() *CT_QueryTableDeletedFields {
	_gddbb := &CT_QueryTableDeletedFields{}
	return _gddbb
}
func (_ebbde ST_GrowShrinkType) String() string {
	switch _ebbde {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065"
	case 2:
		return "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072"
	case 3:
		return "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072"
	}
	return ""
}
func (_aegga *CT_IgnoredError) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _aegga.SqrefAttr)})
	if _aegga.EvalErrorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065v\u0061\u006c\u0045\u0072\u0072\u006fr"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aegga.EvalErrorAttr))})
	}
	if _aegga.TwoDigitTextYearAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0077o\u0044\u0069\u0067i\u0074\u0054\u0065\u0078\u0074\u0059\u0065\u0061\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aegga.TwoDigitTextYearAttr))})
	}
	if _aegga.NumberStoredAsTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006eu\u006db\u0065\u0072\u0053\u0074\u006fr\u0065\u0064A\u0073\u0054\u0065\u0078\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aegga.NumberStoredAsTextAttr))})
	}
	if _aegga.FormulaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aegga.FormulaAttr))})
	}
	if _aegga.FormulaRangeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072m\u0075\u006c\u0061\u0052\u0061\u006e\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aegga.FormulaRangeAttr))})
	}
	if _aegga.UnlockedFormulaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075n\u006co\u0063\u006b\u0065\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aegga.UnlockedFormulaAttr))})
	}
	if _aegga.EmptyCellReferenceAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065m\u0070t\u0079\u0043\u0065\u006c\u006cR\u0065\u0066e\u0072\u0065\u006e\u0063\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aegga.EmptyCellReferenceAttr))})
	}
	if _aegga.ListDataValidationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006ci\u0073t\u0044\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aegga.ListDataValidationAttr))})
	}
	if _aegga.CalculatedColumnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aegga.CalculatedColumnAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bcdag ST_DataValidationImeMode) Validate() error { return _bcdag.ValidateWithPath("") }

const (
	ST_CellFormulaTypeUnset     ST_CellFormulaType = 0
	ST_CellFormulaTypeNormal    ST_CellFormulaType = 1
	ST_CellFormulaTypeArray     ST_CellFormulaType = 2
	ST_CellFormulaTypeDataTable ST_CellFormulaType = 3
	ST_CellFormulaTypeShared    ST_CellFormulaType = 4
)

type ST_SortBy byte

func (_eecde *CT_Scenario) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dbaca := range start.Attr {
		if _dbaca.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gdadg, _fffae := _dbaca.Value, error(nil)
			if _fffae != nil {
				return _fffae
			}
			_eecde.NameAttr = _gdadg
			continue
		}
		if _dbaca.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_caddd, _agffe := _f.ParseBool(_dbaca.Value)
			if _agffe != nil {
				return _agffe
			}
			_eecde.LockedAttr = &_caddd
			continue
		}
		if _dbaca.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_gdcag, _bcfbdg := _f.ParseBool(_dbaca.Value)
			if _bcfbdg != nil {
				return _bcfbdg
			}
			_eecde.HiddenAttr = &_gdcag
			continue
		}
		if _dbaca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dcaa, _defbc := _f.ParseUint(_dbaca.Value, 10, 32)
			if _defbc != nil {
				return _defbc
			}
			_fdddec := uint32(_dcaa)
			_eecde.CountAttr = &_fdddec
			continue
		}
		if _dbaca.Name.Local == "\u0075\u0073\u0065\u0072" {
			_bbadec, _bbfcdd := _dbaca.Value, error(nil)
			if _bbfcdd != nil {
				return _bbfcdd
			}
			_eecde.UserAttr = &_bbadec
			continue
		}
		if _dbaca.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_bagac, _eadfa := _dbaca.Value, error(nil)
			if _eadfa != nil {
				return _eadfa
			}
			_eecde.CommentAttr = &_bagac
			continue
		}
	}
_bdaca:
	for {
		_aceff, _caecb := d.Token()
		if _caecb != nil {
			return _caecb
		}
		switch _dgebb := _aceff.(type) {
		case _a.StartElement:
			switch _dgebb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}:
				_gdggga := NewCT_InputCells()
				if _egfcfc := d.DecodeElement(_gdggga, &_dgebb); _egfcfc != nil {
					return _egfcfc
				}
				_eecde.InputCells = append(_eecde.InputCells, _gdggga)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0020\u0025\u0076", _dgebb.Name)
				if _geabg := d.Skip(); _geabg != nil {
					return _geabg
				}
			}
		case _a.EndElement:
			break _bdaca
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ReviewedRevisions and its children, prefixing error messages with path
func (_fcffd *CT_ReviewedRevisions) ValidateWithPath(path string) error {
	for _ffgce, _gedgef := range _fcffd.Reviewed {
		if _abefe := _gedgef.ValidateWithPath(_fc.Sprintf("\u0025s\u002fR\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u005b\u0025\u0064\u005d", path, _ffgce)); _abefe != nil {
			return _abefe
		}
	}
	return nil
}
func (_cbeed ST_UpdateLinks) Validate() error { return _cbeed.ValidateWithPath("") }
func (_fdcgb *CT_DataBinding) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fdcgb.DataBindingNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0044a\u0074a\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fdcgb.DataBindingNameAttr)})
	}
	if _fdcgb.FileBindingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "F\u0069\u006c\u0065\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdcgb.FileBindingAttr))})
	}
	if _fdcgb.ConnectionIDAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0043\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0044"}, Value: _fc.Sprintf("\u0025\u0076", *_fdcgb.ConnectionIDAttr)})
	}
	if _fdcgb.FileBindingNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0046i\u006ce\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fdcgb.FileBindingNameAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0044\u0061\u0074\u0061Bi\u006e\u0064\u0069\u006e\u0067\u004c\u006f\u0061\u0064\u004d\u006f\u0064\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _fdcgb.DataBindingLoadModeAttr)})
	e.EncodeToken(start)
	if _fdcgb.Any != nil {
		_fdcgb.Any.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CalcChain struct{ CT_CalcChain }

func (_egegg ST_Visibility) Validate() error { return _egegg.ValidateWithPath("") }

type CT_FilterColumn struct {

	// Filter Column Data
	ColIdAttr uint32

	// Hidden AutoFilter Button
	HiddenButtonAttr *bool

	// Show Filter Button
	ShowButtonAttr *bool

	// Filter Criteria
	Filters *CT_Filters

	// Top 10
	Top10 *CT_Top10

	// Custom Filters
	CustomFilters *CT_CustomFilters

	// Dynamic Filter
	DynamicFilter *CT_DynamicFilter

	// Color Filter Criteria
	ColorFilter *CT_ColorFilter

	// Icon Filter
	IconFilter *CT_IconFilter
	ExtLst     *CT_ExtensionList
}

func (_gdca *CT_ControlPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdca.Anchor = NewCT_ObjectAnchor()
	for _, _agbe := range start.Attr {
		if _agbe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _agbe.Name.Local == "\u0069\u0064" || _agbe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _agbe.Name.Local == "\u0069\u0064" {
			_gdfa, _gaea := _agbe.Value, error(nil)
			if _gaea != nil {
				return _gaea
			}
			_gdca.IdAttr = &_gdfa
			continue
		}
		if _agbe.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074" {
			_becea, _abagc := _f.ParseBool(_agbe.Value)
			if _abagc != nil {
				return _abagc
			}
			_gdca.AutoPictAttr = &_becea
			continue
		}
		if _agbe.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_dgdd, _fbcgc := _agbe.Value, error(nil)
			if _fbcgc != nil {
				return _fbcgc
			}
			_gdca.MacroAttr = &_dgdd
			continue
		}
		if _agbe.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_eede, _ggcef := _f.ParseBool(_agbe.Value)
			if _ggcef != nil {
				return _ggcef
			}
			_gdca.PrintAttr = &_eede
			continue
		}
		if _agbe.Name.Local == "\u0072\u0065\u0063a\u006c\u0063\u0041\u006c\u0077\u0061\u0079\u0073" {
			_ddde, _gefg := _f.ParseBool(_agbe.Value)
			if _gefg != nil {
				return _gefg
			}
			_gdca.RecalcAlwaysAttr = &_ddde
			continue
		}
		if _agbe.Name.Local == "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074" {
			_ffdg, _gfad := _f.ParseBool(_agbe.Value)
			if _gfad != nil {
				return _gfad
			}
			_gdca.UiObjectAttr = &_ffdg
			continue
		}
		if _agbe.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_fadcg, _ebadg := _f.ParseBool(_agbe.Value)
			if _ebadg != nil {
				return _ebadg
			}
			_gdca.AutoFillAttr = &_fadcg
			continue
		}
		if _agbe.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_acffg, _beegb := _f.ParseBool(_agbe.Value)
			if _beegb != nil {
				return _beegb
			}
			_gdca.AutoLineAttr = &_acffg
			continue
		}
		if _agbe.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_daec, _dceg := _f.ParseBool(_agbe.Value)
			if _dceg != nil {
				return _dceg
			}
			_gdca.LockedAttr = &_daec
			continue
		}
		if _agbe.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_gffbb, _edeaf := _f.ParseBool(_agbe.Value)
			if _edeaf != nil {
				return _edeaf
			}
			_gdca.DisabledAttr = &_gffbb
			continue
		}
		if _agbe.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_dbcb, _bbfa := _agbe.Value, error(nil)
			if _bbfa != nil {
				return _bbfa
			}
			_gdca.AltTextAttr = &_dbcb
			continue
		}
		if _agbe.Name.Local == "\u006c\u0069\u006e\u006b\u0065\u0064\u0043\u0065\u006c\u006c" {
			_fea, _gadee := _agbe.Value, error(nil)
			if _gadee != nil {
				return _gadee
			}
			_gdca.LinkedCellAttr = &_fea
			continue
		}
		if _agbe.Name.Local == "\u006c\u0069\u0073\u0074\u0046\u0069\u006c\u006c\u0052\u0061\u006e\u0067\u0065" {
			_dbfed, _gbce := _agbe.Value, error(nil)
			if _gbce != nil {
				return _gbce
			}
			_gdca.ListFillRangeAttr = &_dbfed
			continue
		}
		if _agbe.Name.Local == "\u0063\u0066" {
			_ggebe, _agabc := _agbe.Value, error(nil)
			if _agabc != nil {
				return _agabc
			}
			_gdca.CfAttr = &_ggebe
			continue
		}
		if _agbe.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_aaga, _dcefe := _f.ParseBool(_agbe.Value)
			if _dcefe != nil {
				return _dcefe
			}
			_gdca.DefaultSizeAttr = &_aaga
			continue
		}
	}
_bffgf:
	for {
		_egeaf, _edaf := d.Token()
		if _edaf != nil {
			return _edaf
		}
		switch _afcf := _egeaf.(type) {
		case _a.StartElement:
			switch _afcf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _gefaa := d.DecodeElement(_gdca.Anchor, &_afcf); _gefaa != nil {
					return _gefaa
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006et\u0072\u006f\u006c\u0050\u0072\u0020\u0025\u0076", _afcf.Name)
				if _fcff := d.Skip(); _fcff != nil {
					return _fcff
				}
			}
		case _a.EndElement:
			break _bffgf
		case _a.CharData:
		}
	}
	return nil
}
func NewAG_AutoFormat() *AG_AutoFormat { _fa := &AG_AutoFormat{}; return _fa }

type CT_FontSize struct {

	// Value
	ValAttr float64
}
type CT_Border struct {

	// Diagonal Up
	DiagonalUpAttr *bool

	// Diagonal Down
	DiagonalDownAttr *bool

	// Outline
	OutlineAttr *bool

	// Leading Edge Border
	Start *CT_BorderPr

	// Trailing Edge Border
	End *CT_BorderPr

	// Leading Edge Border
	Left *CT_BorderPr

	// Trailing Edge Border
	Right *CT_BorderPr

	// Top Border
	Top *CT_BorderPr

	// Bottom Border
	Bottom *CT_BorderPr

	// Diagonal
	Diagonal *CT_BorderPr

	// Vertical Inner Border
	Vertical *CT_BorderPr

	// Horizontal Inner Borders
	Horizontal *CT_BorderPr
}
type ST_TextHAlign byte

func (_efafag *Dialogsheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0064\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074"
	return _efafag.CT_Dialogsheet.MarshalXML(e, start)
}
func (_dfadd ST_DataValidationImeMode) String() string {
	switch _dfadd {
	case 0:
		return ""
	case 1:
		return "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case 2:
		return "\u006f\u0066\u0066"
	case 3:
		return "\u006f\u006e"
	case 4:
		return "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"
	case 5:
		return "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case 6:
		return "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case 7:
		return "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case 8:
		return "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a"
	case 9:
		return "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a"
	case 10:
		return "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c"
	case 11:
		return "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c"
	}
	return ""
}

// ValidateWithPath validates the CT_WorkbookPr and its children, prefixing error messages with path
func (_faeee *CT_WorkbookPr) ValidateWithPath(path string) error {
	if _egdgde := _faeee.ShowObjectsAttr.ValidateWithPath(path + "\u002f\u0053h\u006f\u0077\u004fb\u006a\u0065\u0063\u0074\u0073\u0041\u0074\u0074\u0072"); _egdgde != nil {
		return _egdgde
	}
	if _gfeefc := _faeee.UpdateLinksAttr.ValidateWithPath(path + "\u002f\u0055p\u0064\u0061\u0074e\u004c\u0069\u006e\u006b\u0073\u0041\u0074\u0074\u0072"); _gfeefc != nil {
		return _gfeefc
	}
	return nil
}

// ValidateWithPath validates the PivotTableDefinition and its children, prefixing error messages with path
func (_ddgbc *PivotTableDefinition) ValidateWithPath(path string) error {
	if _fbgcgb := _ddgbc.CT_pivotTableDefinition.ValidateWithPath(path); _fbgcgb != nil {
		return _fbgcgb
	}
	return nil
}
func (_bcfbbc ST_Comments) Validate() error { return _bcfbbc.ValidateWithPath("") }
func (_dfbec *CT_MetadataStrings) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gdebf := range start.Attr {
		if _gdebf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbef, _feggd := _f.ParseUint(_gdebf.Value, 10, 32)
			if _feggd != nil {
				return _feggd
			}
			_ecadf := uint32(_bbef)
			_dfbec.CountAttr = &_ecadf
			continue
		}
	}
_fedce:
	for {
		_gabfe, _cdagg := d.Token()
		if _cdagg != nil {
			return _cdagg
		}
		switch _cefcda := _gabfe.(type) {
		case _a.StartElement:
			switch _cefcda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_cfgcg := NewCT_XStringElement()
				if _dfaege := d.DecodeElement(_cfgcg, &_cefcda); _dfaege != nil {
					return _dfaege
				}
				_dfbec.S = append(_dfbec.S, _cfgcg)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073\u0020\u0025\u0076", _cefcda.Name)
				if _ccdgb := d.Skip(); _ccdgb != nil {
					return _ccdgb
				}
			}
		case _a.EndElement:
			break _fedce
		case _a.CharData:
		}
	}
	return nil
}

type CT_RevisionFormatting struct {

	// Sheet Id
	SheetIdAttr uint32

	// Row or Column Formatting Change
	XfDxfAttr *bool

	// Style
	SAttr *bool

	// Sequence Of References
	SqrefAttr ST_Sqref

	// Start index
	StartAttr *uint32

	// Length
	LengthAttr *uint32

	// Formatting
	Dxf    *CT_Dxf
	ExtLst *CT_ExtensionList
}

// Validate validates the Revisions and its children
func (_bdaace *Revisions) Validate() error {
	return _bdaace.ValidateWithPath("\u0052e\u0076\u0069\u0073\u0069\u006f\u006es")
}
func (_bccfbb ST_HtmlFmt) Validate() error { return _bccfbb.ValidateWithPath("") }

// Validate validates the CT_XStringElement and its children
func (_gccafd *CT_XStringElement) Validate() error {
	return _gccafd.ValidateWithPath("\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006ce\u006d\u0065\u006e\u0074")
}
func NewCT_MapInfo() *CT_MapInfo { _afbcb := &CT_MapInfo{}; return _afbcb }

type ST_PivotAreaType byte

func (_ccbg *CT_CalcPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cadd := range start.Attr {
		if _cadd.Name.Local == "\u0069\u0074\u0065r\u0061\u0074\u0065\u0044\u0065\u006c\u0074\u0061" {
			_bcac, _abcb := _f.ParseFloat(_cadd.Value, 64)
			if _abcb != nil {
				return _abcb
			}
			_ccbg.IterateDeltaAttr = &_bcac
			continue
		}
		if _cadd.Name.Local == "\u0063\u0061\u006c\u0063\u004d\u006f\u0064\u0065" {
			_ccbg.CalcModeAttr.UnmarshalXMLAttr(_cadd)
			continue
		}
		if _cadd.Name.Local == "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064" {
			_dacf, _dbad := _f.ParseBool(_cadd.Value)
			if _dbad != nil {
				return _dbad
			}
			_ccbg.FullCalcOnLoadAttr = &_dacf
			continue
		}
		if _cadd.Name.Local == "\u0072e\u0066\u004d\u006f\u0064\u0065" {
			_ccbg.RefModeAttr.UnmarshalXMLAttr(_cadd)
			continue
		}
		if _cadd.Name.Local == "\u0069t\u0065\u0072\u0061\u0074\u0065" {
			_gdef, _cdcd := _f.ParseBool(_cadd.Value)
			if _cdcd != nil {
				return _cdcd
			}
			_ccbg.IterateAttr = &_gdef
			continue
		}
		if _cadd.Name.Local == "\u0069\u0074\u0065r\u0061\u0074\u0065\u0043\u006f\u0075\u006e\u0074" {
			_fcgg, _aagb := _f.ParseUint(_cadd.Value, 10, 32)
			if _aagb != nil {
				return _aagb
			}
			_ffeab := uint32(_fcgg)
			_ccbg.IterateCountAttr = &_ffeab
			continue
		}
		if _cadd.Name.Local == "\u0063\u0061\u006c\u0063\u0049\u0064" {
			_eecg, _egdgd := _f.ParseUint(_cadd.Value, 10, 32)
			if _egdgd != nil {
				return _egdgd
			}
			_fga := uint32(_eecg)
			_ccbg.CalcIdAttr = &_fga
			continue
		}
		if _cadd.Name.Local == "\u0066\u0075\u006c\u006c\u0050\u0072\u0065\u0063\u0069\u0073\u0069\u006f\u006e" {
			_daddg, _gdgb := _f.ParseBool(_cadd.Value)
			if _gdgb != nil {
				return _gdgb
			}
			_ccbg.FullPrecisionAttr = &_daddg
			continue
		}
		if _cadd.Name.Local == "\u0063\u0061\u006c\u0063\u0043\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0064" {
			_ggdfd, _efaf := _f.ParseBool(_cadd.Value)
			if _efaf != nil {
				return _efaf
			}
			_ccbg.CalcCompletedAttr = &_ggdfd
			continue
		}
		if _cadd.Name.Local == "\u0063\u0061\u006c\u0063\u004f\u006e\u0053\u0061\u0076\u0065" {
			_gdgc, _caeg := _f.ParseBool(_cadd.Value)
			if _caeg != nil {
				return _caeg
			}
			_ccbg.CalcOnSaveAttr = &_gdgc
			continue
		}
		if _cadd.Name.Local == "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006et\u0043\u0061\u006c\u0063" {
			_daeb, _cdcdc := _f.ParseBool(_cadd.Value)
			if _cdcdc != nil {
				return _cdcdc
			}
			_ccbg.ConcurrentCalcAttr = &_daeb
			continue
		}
		if _cadd.Name.Local == "c\u006f\u006e\u0063\u0075rr\u0065n\u0074\u004d\u0061\u006e\u0075a\u006c\u0043\u006f\u0075\u006e\u0074" {
			_baab, _gbfdd := _f.ParseUint(_cadd.Value, 10, 32)
			if _gbfdd != nil {
				return _gbfdd
			}
			_fec := uint32(_baab)
			_ccbg.ConcurrentManualCountAttr = &_fec
			continue
		}
		if _cadd.Name.Local == "\u0066\u006f\u0072\u0063\u0065\u0046\u0075\u006c\u006c\u0043\u0061\u006c\u0063" {
			_dbdg, _baf := _f.ParseBool(_cadd.Value)
			if _baf != nil {
				return _baf
			}
			_ccbg.ForceFullCalcAttr = &_dbdg
			continue
		}
	}
	for {
		_cfgg, _aeeb := d.Token()
		if _aeeb != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0043\u0061\u006cc\u0050\u0072\u003a\u0020\u0025\u0073", _aeeb)
		}
		if _eeec, _cdbb := _cfgg.(_a.EndElement); _cdbb && _eeec.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aecgde *PivotCacheRecords) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aecgde.CT_PivotCacheRecords = *NewCT_PivotCacheRecords()
	for _, _dfdcg := range start.Attr {
		if _dfdcg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fdff, _debad := _f.ParseUint(_dfdcg.Value, 10, 32)
			if _debad != nil {
				return _debad
			}
			_dbceb := uint32(_fdff)
			_aecgde.CountAttr = &_dbceb
			continue
		}
	}
_effac:
	for {
		_bfbggf, _bbbed := d.Token()
		if _bbbed != nil {
			return _bbbed
		}
		switch _ccfgfe := _bfbggf.(type) {
		case _a.StartElement:
			switch _ccfgfe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_ccagb := NewCT_Record()
				if _eadff := d.DecodeElement(_ccagb, &_ccfgfe); _eadff != nil {
					return _eadff
				}
				_aecgde.R = append(_aecgde.R, _ccagb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aecgde.ExtLst = NewCT_ExtensionList()
				if _feeca := d.DecodeElement(_aecgde.ExtLst, &_ccfgfe); _feeca != nil {
					return _feeca
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065\u0063\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _ccfgfe.Name)
				if _eagbfe := d.Skip(); _eagbfe != nil {
					return _eagbfe
				}
			}
		case _a.EndElement:
			break _effac
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_FontName and its children
func (_gebfe *CT_FontName) Validate() error {
	return _gebfe.ValidateWithPath("C\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065")
}
func (_befeg ST_SortType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_eagdbf := _a.Attr{}
	_eagdbf.Name = name
	switch _befeg {
	case ST_SortTypeUnset:
		_eagdbf.Value = ""
	case ST_SortTypeNone:
		_eagdbf.Value = "\u006e\u006f\u006e\u0065"
	case ST_SortTypeAscending:
		_eagdbf.Value = "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case ST_SortTypeDescending:
		_eagdbf.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	case ST_SortTypeAscendingAlpha:
		_eagdbf.Value = "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061"
	case ST_SortTypeDescendingAlpha:
		_eagdbf.Value = "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061"
	case ST_SortTypeAscendingNatural:
		_eagdbf.Value = "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c"
	case ST_SortTypeDescendingNatural:
		_eagdbf.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c"
	}
	return _eagdbf, nil
}
func (_abebeb *CT_TextField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _abebeb.TypeAttr != ST_ExternalConnectionTypeUnset {
		_eefgf, _caggg := _abebeb.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _caggg != nil {
			return _caggg
		}
		start.Attr = append(start.Attr, _eefgf)
	}
	if _abebeb.PositionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_abebeb.PositionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_faaagb *ST_DateTimeGrouping) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_faaagb = 0
	case "\u0079\u0065\u0061\u0072":
		*_faaagb = 1
	case "\u006d\u006f\u006et\u0068":
		*_faaagb = 2
	case "\u0064\u0061\u0079":
		*_faaagb = 3
	case "\u0068\u006f\u0075\u0072":
		*_faaagb = 4
	case "\u006d\u0069\u006e\u0075\u0074\u0065":
		*_faaagb = 5
	case "\u0073\u0065\u0063\u006f\u006e\u0064":
		*_faaagb = 6
	}
	return nil
}
func (_cbbdc ST_CellFormulaType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cbbdc.String(), start)
}

type CT_CustomChartsheetView struct {

	// GUID
	GuidAttr string

	// Print Scale
	ScaleAttr *uint32

	// Visible State
	StateAttr ST_SheetState

	// Zoom To Fit
	ZoomToFitAttr *bool
	PageMargins   *CT_PageMargins

	// Chart Sheet Page Setup
	PageSetup    *CT_CsPageSetup
	HeaderFooter *CT_HeaderFooter
}

func (_cgcf *CT_Consolidation) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cgcf.RangeSets = NewCT_RangeSets()
	for _, _aagea := range start.Attr {
		if _aagea.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065" {
			_gabg, _cdbbg := _f.ParseBool(_aagea.Value)
			if _cdbbg != nil {
				return _cdbbg
			}
			_cgcf.AutoPageAttr = &_gabg
			continue
		}
	}
_gfbc:
	for {
		_bbbg, _cagd := d.Token()
		if _cagd != nil {
			return _cagd
		}
		switch _dega := _bbbg.(type) {
		case _a.StartElement:
			switch _dega.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067e\u0073"}:
				_cgcf.Pages = NewCT_Pages()
				if _bdba := d.DecodeElement(_cgcf.Pages, &_dega); _bdba != nil {
					return _bdba
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0053\u0065\u0074s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0053\u0065\u0074s"}:
				if _aeecb := d.DecodeElement(_cgcf.RangeSets, &_dega); _aeecb != nil {
					return _aeecb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0025v", _dega.Name)
				if _dcgeg := d.Skip(); _dcgeg != nil {
					return _dcgeg
				}
			}
		case _a.EndElement:
			break _gfbc
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_rwColActionTypeUnset     ST_rwColActionType = 0
	ST_rwColActionTypeInsertRow ST_rwColActionType = 1
	ST_rwColActionTypeDeleteRow ST_rwColActionType = 2
	ST_rwColActionTypeInsertCol ST_rwColActionType = 3
	ST_rwColActionTypeDeleteCol ST_rwColActionType = 4
)

func (_bcfdf *CT_SingleXmlCell) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _bcfdf.IdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fc.Sprintf("\u0025\u0076", _bcfdf.RAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _bcfdf.ConnectionIdAttr)})
	e.EncodeToken(start)
	_agcgcb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ax\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072"}}
	e.EncodeElement(_bcfdf.XmlCellPr, _agcgcb)
	if _bcfdf.ExtLst != nil {
		_dgedc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bcfdf.ExtLst, _dgedc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Hyperlinks struct {

	// Hyperlink
	Hyperlink []*CT_Hyperlink
}
type CT_TablePart struct{ IdAttr string }

func (_bcbgc ST_WebSourceType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bcbgc.String(), start)
}
func (_cadba *CT_RevisionFormatting) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _cadba.SheetIdAttr)})
	if _cadba.XfDxfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0066\u0044x\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cadba.XfDxfAttr))})
	}
	if _cadba.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cadba.SAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _cadba.SqrefAttr)})
	if _cadba.StartAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0061r\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cadba.StartAttr)})
	}
	if _cadba.LengthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u006e\u0067\u0074\u0068"}, Value: _fc.Sprintf("\u0025\u0076", *_cadba.LengthAttr)})
	}
	e.EncodeToken(start)
	if _cadba.Dxf != nil {
		_faafa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0078\u0066"}}
		e.EncodeElement(_cadba.Dxf, _faafa)
	}
	if _cadba.ExtLst != nil {
		_ceeed := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cadba.ExtLst, _ceeed)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dfegg ST_BorderStyle) Validate() error { return _dfegg.ValidateWithPath("") }

type ST_RevisionAction byte

// Validate validates the CT_MetadataStrings and its children
func (_bgccce *CT_MetadataStrings) Validate() error {
	return _bgccce.ValidateWithPath("\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073")
}

type CT_VolTopic struct {

	// Type
	TAttr ST_VolValueType

	// Topic Value
	V string

	// Strings in Subtopic
	Stp []string

	// References
	Tr []*CT_VolTopicRef
}

func NewStyleSheet() *StyleSheet {
	_eedced := &StyleSheet{}
	_eedced.CT_Stylesheet = *NewCT_Stylesheet()
	return _eedced
}
func (_agaab ST_SortBy) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cgbca := _a.Attr{}
	_cgbca.Name = name
	switch _agaab {
	case ST_SortByUnset:
		_cgbca.Value = ""
	case ST_SortByValue:
		_cgbca.Value = "\u0076\u0061\u006cu\u0065"
	case ST_SortByCellColor:
		_cgbca.Value = "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"
	case ST_SortByFontColor:
		_cgbca.Value = "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr"
	case ST_SortByIcon:
		_cgbca.Value = "\u0069\u0063\u006f\u006e"
	}
	return _cgbca, nil
}
func NewCT_AutoSortScope() *CT_AutoSortScope {
	_abf := &CT_AutoSortScope{}
	_abf.PivotArea = NewCT_PivotArea()
	return _abf
}
func (_adbee ST_PatternType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_ffgbdc := _a.Attr{}
	_ffgbdc.Name = name
	switch _adbee {
	case ST_PatternTypeUnset:
		_ffgbdc.Value = ""
	case ST_PatternTypeNone:
		_ffgbdc.Value = "\u006e\u006f\u006e\u0065"
	case ST_PatternTypeSolid:
		_ffgbdc.Value = "\u0073\u006f\u006ci\u0064"
	case ST_PatternTypeMediumGray:
		_ffgbdc.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079"
	case ST_PatternTypeDarkGray:
		_ffgbdc.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case ST_PatternTypeLightGray:
		_ffgbdc.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case ST_PatternTypeDarkHorizontal:
		_ffgbdc.Value = "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"
	case ST_PatternTypeDarkVertical:
		_ffgbdc.Value = "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case ST_PatternTypeDarkDown:
		_ffgbdc.Value = "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e"
	case ST_PatternTypeDarkUp:
		_ffgbdc.Value = "\u0064\u0061\u0072\u006b\u0055\u0070"
	case ST_PatternTypeDarkGrid:
		_ffgbdc.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064"
	case ST_PatternTypeDarkTrellis:
		_ffgbdc.Value = "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case ST_PatternTypeLightHorizontal:
		_ffgbdc.Value = "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"
	case ST_PatternTypeLightVertical:
		_ffgbdc.Value = "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case ST_PatternTypeLightDown:
		_ffgbdc.Value = "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n"
	case ST_PatternTypeLightUp:
		_ffgbdc.Value = "\u006ci\u0067\u0068\u0074\u0055\u0070"
	case ST_PatternTypeLightGrid:
		_ffgbdc.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d"
	case ST_PatternTypeLightTrellis:
		_ffgbdc.Value = "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case ST_PatternTypeGray125:
		_ffgbdc.Value = "\u0067r\u0061\u0079\u0031\u0032\u0035"
	case ST_PatternTypeGray0625:
		_ffgbdc.Value = "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035"
	}
	return _ffgbdc, nil
}

type CT_DataValidation struct {

	// Data Validation Type
	TypeAttr ST_DataValidationType

	// Data Validation Error Style
	ErrorStyleAttr ST_DataValidationErrorStyle

	// IME Mode Enforced
	ImeModeAttr ST_DataValidationImeMode

	// Operator
	OperatorAttr ST_DataValidationOperator

	// Allow Blank
	AllowBlankAttr *bool

	// Show Drop Down
	ShowDropDownAttr *bool

	// Show Input Message
	ShowInputMessageAttr *bool

	// Show Error Message
	ShowErrorMessageAttr *bool

	// Error Alert Text
	ErrorTitleAttr *string

	// Error Message
	ErrorAttr *string

	// Prompt Title
	PromptTitleAttr *string

	// Input Prompt
	PromptAttr *string

	// Sequence of References
	SqrefAttr ST_Sqref

	// Formula 1
	Formula1 *string

	// Formula 2
	Formula2 *string
}

func NewCT_DdeItem() *CT_DdeItem { _daed := &CT_DdeItem{}; return _daed }
func (_gcaed *CT_DefinedName) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gecf := range start.Attr {
		if _gecf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_ecfed, _dgdeb := _f.ParseBool(_gecf.Value)
			if _dgdeb != nil {
				return _dgdeb
			}
			_gcaed.HiddenAttr = &_ecfed
			continue
		}
		if _gecf.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_bbgfg, _cdgc := _f.ParseBool(_gecf.Value)
			if _cdgc != nil {
				return _cdgc
			}
			_gcaed.FunctionAttr = &_bbgfg
			continue
		}
		if _gecf.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_ggacd, _dedb := _gecf.Value, error(nil)
			if _dedb != nil {
				return _dedb
			}
			_gcaed.CommentAttr = &_ggacd
			continue
		}
		if _gecf.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_dcbg, _eefag := _gecf.Value, error(nil)
			if _eefag != nil {
				return _eefag
			}
			_gcaed.DescriptionAttr = &_dcbg
			continue
		}
		if _gecf.Name.Local == "\u0068\u0065\u006c\u0070" {
			_eggcg, _dgged := _gecf.Value, error(nil)
			if _dgged != nil {
				return _dgged
			}
			_gcaed.HelpAttr = &_eggcg
			continue
		}
		if _gecf.Name.Local == "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r" {
			_edge, _ccgg := _gecf.Value, error(nil)
			if _ccgg != nil {
				return _ccgg
			}
			_gcaed.StatusBarAttr = &_edge
			continue
		}
		if _gecf.Name.Local == "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_fffb, _abccf := _f.ParseUint(_gecf.Value, 10, 32)
			if _abccf != nil {
				return _abccf
			}
			_bcdbc := uint32(_fffb)
			_gcaed.LocalSheetIdAttr = &_bcdbc
			continue
		}
		if _gecf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ebcdb, _cece := _gecf.Value, error(nil)
			if _cece != nil {
				return _cece
			}
			_gcaed.NameAttr = _ebcdb
			continue
		}
		if _gecf.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_bdefe, _bgcad := _gecf.Value, error(nil)
			if _bgcad != nil {
				return _bgcad
			}
			_gcaed.CustomMenuAttr = &_bdefe
			continue
		}
		if _gecf.Name.Local == "v\u0062\u0050\u0072\u006f\u0063\u0065\u0064\u0075\u0072\u0065" {
			_gbdde, _bfbc := _f.ParseBool(_gecf.Value)
			if _bfbc != nil {
				return _bfbc
			}
			_gcaed.VbProcedureAttr = &_gbdde
			continue
		}
		if _gecf.Name.Local == "\u0078\u006c\u006d" {
			_ggcb, _fbgag := _f.ParseBool(_gecf.Value)
			if _fbgag != nil {
				return _fbgag
			}
			_gcaed.XlmAttr = &_ggcb
			continue
		}
		if _gecf.Name.Local == "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064" {
			_abdece, _dggeda := _f.ParseUint(_gecf.Value, 10, 32)
			if _dggeda != nil {
				return _dggeda
			}
			_dcbgd := uint32(_abdece)
			_gcaed.FunctionGroupIdAttr = &_dcbgd
			continue
		}
		if _gecf.Name.Local == "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079" {
			_babc, _bega := _gecf.Value, error(nil)
			if _bega != nil {
				return _bega
			}
			_gcaed.ShortcutKeyAttr = &_babc
			continue
		}
		if _gecf.Name.Local == "\u0070u\u0062l\u0069\u0073\u0068\u0054\u006f\u0053\u0065\u0072\u0076\u0065\u0072" {
			_acbf, _eacef := _f.ParseBool(_gecf.Value)
			if _eacef != nil {
				return _eacef
			}
			_gcaed.PublishToServerAttr = &_acbf
			continue
		}
		if _gecf.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0061\u0072\u0061m\u0065\u0074\u0065\u0072" {
			_cgege, _ada := _f.ParseBool(_gecf.Value)
			if _ada != nil {
				return _ada
			}
			_gcaed.WorkbookParameterAttr = &_cgege
			continue
		}
	}
	for {
		_fbcaa, _abdad := d.Token()
		if _abdad != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065:\u0020\u0025\u0073", _abdad)
		}
		if _eccgg, _gacfc := _fbcaa.(_a.CharData); _gacfc {
			_gcaed.Content = string(_eccgg)
		}
		if _gaabac, _eedef := _fbcaa.(_a.EndElement); _eedef && _gaabac.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aecff *CT_Groups) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cegdd := range start.Attr {
		if _cegdd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gfceb, _fefd := _f.ParseUint(_cegdd.Value, 10, 32)
			if _fefd != nil {
				return _fefd
			}
			_fbeed := uint32(_gfceb)
			_aecff.CountAttr = &_fbeed
			continue
		}
	}
_bdfcf:
	for {
		_cffca, _bcdfa := d.Token()
		if _bcdfa != nil {
			return _bcdfa
		}
		switch _gaagf := _cffca.(type) {
		case _a.StartElement:
			switch _gaagf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070"}:
				_geee := NewCT_LevelGroup()
				if _eefbdc := d.DecodeElement(_geee, &_gaagf); _eefbdc != nil {
					return _eefbdc
				}
				_aecff.Group = append(_aecff.Group, _geee)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u0073 \u0025\u0076", _gaagf.Name)
				if _aaebd := d.Skip(); _aaebd != nil {
					return _aaebd
				}
			}
		case _a.EndElement:
			break _bdfcf
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MRUColors and its children
func (_gecdea *CT_MRUColors) Validate() error {
	return _gecdea.ValidateWithPath("\u0043\u0054\u005fM\u0052\u0055\u0043\u006f\u006c\u006f\u0072\u0073")
}

type CT_IconFilter struct {

	// Icon Set
	IconSetAttr ST_IconSetType

	// Icon Id
	IconIdAttr *uint32
}

// Validate validates the CT_Cfvo and its children
func (_dage *CT_Cfvo) Validate() error {
	return _dage.ValidateWithPath("\u0043T\u005f\u0043\u0066\u0076\u006f")
}
func (_cdgeg ST_VolDepType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cdgeg.String(), start)
}
func (_fbgbe *CT_I) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fbgbe.TAttr != ST_ItemTypeUnset {
		_bfcab, _ddadbd := _fbgbe.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _ddadbd != nil {
			return _ddadbd
		}
		start.Attr = append(start.Attr, _bfcab)
	}
	if _fbgbe.RAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_fbgbe.RAttr)})
	}
	if _fbgbe.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fc.Sprintf("\u0025\u0076", *_fbgbe.IAttr)})
	}
	e.EncodeToken(start)
	if _fbgbe.X != nil {
		_gbedee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _cadfa := range _fbgbe.X {
			e.EncodeElement(_cadfa, _gbedee)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bedea ST_PhoneticType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fcgffc := _a.Attr{}
	_fcgffc.Name = name
	switch _bedea {
	case ST_PhoneticTypeUnset:
		_fcgffc.Value = ""
	case ST_PhoneticTypeHalfwidthKatakana:
		_fcgffc.Value = "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case ST_PhoneticTypeFullwidthKatakana:
		_fcgffc.Value = "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case ST_PhoneticTypeHiragana:
		_fcgffc.Value = "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case ST_PhoneticTypeNoConversion:
		_fcgffc.Value = "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e"
	}
	return _fcgffc, nil
}
func (_cffaec *PivotCacheDefinition) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003api\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"
	return _cffaec.CT_PivotCacheDefinition.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_FieldsUsage and its children, prefixing error messages with path
func (_dfgfe *CT_FieldsUsage) ValidateWithPath(path string) error {
	for _bdfab, _adeee := range _dfgfe.FieldUsage {
		if _gged := _adeee.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067e\u005b\u0025\u0064\u005d", path, _bdfab)); _gged != nil {
			return _gged
		}
	}
	return nil
}
func (_gfdbfc ST_MdxFunctionType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_efeac := _a.Attr{}
	_efeac.Name = name
	switch _gfdbfc {
	case ST_MdxFunctionTypeUnset:
		_efeac.Value = ""
	case ST_MdxFunctionTypeM:
		_efeac.Value = "\u006d"
	case ST_MdxFunctionTypeV:
		_efeac.Value = "\u0076"
	case ST_MdxFunctionTypeS:
		_efeac.Value = "\u0073"
	case ST_MdxFunctionTypeC:
		_efeac.Value = "\u0063"
	case ST_MdxFunctionTypeR:
		_efeac.Value = "\u0072"
	case ST_MdxFunctionTypeP:
		_efeac.Value = "\u0070"
	case ST_MdxFunctionTypeK:
		_efeac.Value = "\u006b"
	}
	return _efeac, nil
}

// Validate validates the EG_ExtensionList and its children
func (_bgefb *EG_ExtensionList) Validate() error {
	return _bgefb.ValidateWithPath("\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_Break and its children, prefixing error messages with path
func (_fbea *CT_Break) ValidateWithPath(path string) error { return nil }
func (_dcdea *ST_ParameterType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ffagb, _bdgbb := d.Token()
	if _bdgbb != nil {
		return _bdgbb
	}
	if _edcec, _gacdae := _ffagb.(_a.EndElement); _gacdae && _edcec.Name == start.Name {
		*_dcdea = 1
		return nil
	}
	if _bfdfd, _efgaed := _ffagb.(_a.CharData); !_efgaed {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffagb)
	} else {
		switch string(_bfdfd) {
		case "":
			*_dcdea = 0
		case "\u0070\u0072\u006f\u006d\u0070\u0074":
			*_dcdea = 1
		case "\u0076\u0061\u006cu\u0065":
			*_dcdea = 2
		case "\u0063\u0065\u006c\u006c":
			*_dcdea = 3
		}
	}
	_ffagb, _bdgbb = d.Token()
	if _bdgbb != nil {
		return _bdgbb
	}
	if _ddddee, _decag := _ffagb.(_a.EndElement); _decag && _ddddee.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffagb)
}
func (_bffgd *CT_MetadataBlock) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_afgfc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ar\u0063"}}
	for _, _acagb := range _bffgd.Rc {
		e.EncodeElement(_acagb, _afgfc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotSelection and its children, prefixing error messages with path
func (_bbbgdf *CT_PivotSelection) ValidateWithPath(path string) error {
	if _degbag := _bbbgdf.PaneAttr.ValidateWithPath(path + "\u002fP\u0061\u006e\u0065\u0041\u0074\u0074r"); _degbag != nil {
		return _degbag
	}
	if _gddgf := _bbbgdf.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _gddgf != nil {
		return _gddgf
	}
	if _afcaf := _bbbgdf.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _afcaf != nil {
		return _afcaf
	}
	return nil
}

type CT_Comment struct {

	// Cell Reference
	RefAttr string

	// Author Id
	AuthorIdAttr uint32

	// Unique Identifier for Comment
	GuidAttr *string

	// Shape ID
	ShapeIdAttr *uint32

	// Comment Text
	Text *CT_Rst

	// Comment Properties
	CommentPr *CT_CommentPr
}

// Validate validates the CT_CellStyles and its children
func (_gfaf *CT_CellStyles) Validate() error {
	return _gfaf.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073")
}
func NewCT_VolMain() *CT_VolMain { _cdegd := &CT_VolMain{}; return _cdegd }
func (_efgec ST_ParameterType) ValidateWithPath(path string) error {
	switch _efgec {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efgec))
	}
	return nil
}
func NewCT_TextField() *CT_TextField { _ffagff := &CT_TextField{}; return _ffagff }
func (_gege *CT_ExternalLink) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_eeeg:
	for {
		_bgddc, _fgeag := d.Token()
		if _fgeag != nil {
			return _fgeag
		}
		switch _gfgfb := _bgddc.(type) {
		case _a.StartElement:
			switch _gfgfb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_gege.Choice = NewCT_ExternalLinkChoice()
				if _cefaf := d.DecodeElement(&_gege.Choice.ExternalBook, &_gfgfb); _cefaf != nil {
					return _cefaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_gege.Choice = NewCT_ExternalLinkChoice()
				if _gabec := d.DecodeElement(&_gege.Choice.DdeLink, &_gfgfb); _gabec != nil {
					return _gabec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_gege.Choice = NewCT_ExternalLinkChoice()
				if _efdec := d.DecodeElement(&_gege.Choice.OleLink, &_gfgfb); _efdec != nil {
					return _efdec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gege.ExtLst = NewCT_ExtensionList()
				if _gffffa := d.DecodeElement(_gege.ExtLst, &_gfgfb); _gffffa != nil {
					return _gffffa
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _gfgfb.Name)
				if _cfae := d.Skip(); _cfae != nil {
					return _cfae
				}
			}
		case _a.EndElement:
			break _eeeg
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_Fill() *CT_Fill { _bffad := &CT_Fill{}; return _bffad }

// ValidateWithPath validates the CT_FunctionGroups and its children, prefixing error messages with path
func (_adfc *CT_FunctionGroups) ValidateWithPath(path string) error {
	for _efcbb, _babdd := range _adfc.FunctionGroup {
		if _gcef := _babdd.ValidateWithPath(_fc.Sprintf("%\u0073/\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006eG\u0072\u006f\u0075\u0070[%\u0064\u005d", path, _efcbb)); _gcef != nil {
			return _gcef
		}
	}
	return nil
}

type ST_Scope byte
type ST_SortMethod byte

func NewCT_RevisionConflict() *CT_RevisionConflict { _cbbfa := &CT_RevisionConflict{}; return _cbbfa }

type CT_VolType struct {

	// Type
	TypeAttr ST_VolDepType

	// Main
	Main []*CT_VolMain
}

func (_beeecg *CT_CustomProperties) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_gebgg := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}}
	for _, _dbdgf := range _beeecg.CustomPr {
		e.EncodeElement(_dbdgf, _gebgg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_XStringElement struct {

	// Value
	VAttr string
}

func (_cecfc *CT_MdxMetadata) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gbbcc := range start.Attr {
		if _gbbcc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecbfb, _eagfc := _f.ParseUint(_gbbcc.Value, 10, 32)
			if _eagfc != nil {
				return _eagfc
			}
			_acgcg := uint32(_ecbfb)
			_cecfc.CountAttr = &_acgcg
			continue
		}
	}
_aadfd:
	for {
		_gaedg, _deabg := d.Token()
		if _deabg != nil {
			return _deabg
		}
		switch _abffa := _gaedg.(type) {
		case _a.StartElement:
			switch _abffa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0064\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0064\u0078"}:
				_feef := NewCT_Mdx()
				if _dfedd := d.DecodeElement(_feef, &_abffa); _dfedd != nil {
					return _dfedd
				}
				_cecfc.Mdx = append(_cecfc.Mdx, _feef)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074\u0061d\u0061t\u0061\u0020\u0025\u0076", _abffa.Name)
				if _bbdgd := d.Skip(); _bbdgd != nil {
					return _bbdgd
				}
			}
		case _a.EndElement:
			break _aadfd
		case _a.CharData:
		}
	}
	return nil
}

type CT_MdxMetadata struct {

	// MDX Metadata Record Count
	CountAttr *uint32

	// MDX Metadata Record
	Mdx []*CT_Mdx
}

func NewCT_ProtectedRange() *CT_ProtectedRange { _deded := &CT_ProtectedRange{}; return _deded }
func (_dedfdg *ST_PivotFilterType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_agfbde, _eacbg := d.Token()
	if _eacbg != nil {
		return _eacbg
	}
	if _bbgggcb, _aefcgf := _agfbde.(_a.EndElement); _aefcgf && _bbgggcb.Name == start.Name {
		*_dedfdg = 1
		return nil
	}
	if _dagaga, _ffdgc := _agfbde.(_a.CharData); !_ffdgc {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agfbde)
	} else {
		switch string(_dagaga) {
		case "":
			*_dedfdg = 0
		case "\u0075n\u006b\u006e\u006f\u0077\u006e":
			*_dedfdg = 1
		case "\u0063\u006f\u0075n\u0074":
			*_dedfdg = 2
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_dedfdg = 3
		case "\u0073\u0075\u006d":
			*_dedfdg = 4
		case "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c":
			*_dedfdg = 5
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_dedfdg = 6
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068":
			*_dedfdg = 7
		case "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068":
			*_dedfdg = 8
		case "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_dedfdg = 9
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068":
			*_dedfdg = 10
		case "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
			*_dedfdg = 11
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073":
			*_dedfdg = 12
		case "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e":
			*_dedfdg = 13
		case "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l":
			*_dedfdg = 14
		case "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_dedfdg = 15
		case "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c":
			*_dedfdg = 16
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_dedfdg = 17
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_dedfdg = 18
		case "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c":
			*_dedfdg = 19
		case "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_dedfdg = 20
		case "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_dedfdg = 21
		case "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_dedfdg = 22
		case "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_dedfdg = 23
		case "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_dedfdg = 24
		case "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_dedfdg = 25
		case "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_dedfdg = 26
		case "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l":
			*_dedfdg = 27
		case "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_dedfdg = 28
		case "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e":
			*_dedfdg = 29
		case "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_dedfdg = 30
		case "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e":
			*_dedfdg = 31
		case "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_dedfdg = 32
		case "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_dedfdg = 33
		case "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_dedfdg = 34
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_dedfdg = 35
		case "\u0074\u006f\u0064a\u0079":
			*_dedfdg = 36
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_dedfdg = 37
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_dedfdg = 38
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_dedfdg = 39
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_dedfdg = 40
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_dedfdg = 41
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_dedfdg = 42
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_dedfdg = 43
		case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_dedfdg = 44
		case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_dedfdg = 45
		case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_dedfdg = 46
		case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
			*_dedfdg = 47
		case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
			*_dedfdg = 48
		case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
			*_dedfdg = 49
		case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
			*_dedfdg = 50
		case "\u0051\u0031":
			*_dedfdg = 51
		case "\u0051\u0032":
			*_dedfdg = 52
		case "\u0051\u0033":
			*_dedfdg = 53
		case "\u0051\u0034":
			*_dedfdg = 54
		case "\u004d\u0031":
			*_dedfdg = 55
		case "\u004d\u0032":
			*_dedfdg = 56
		case "\u004d\u0033":
			*_dedfdg = 57
		case "\u004d\u0034":
			*_dedfdg = 58
		case "\u004d\u0035":
			*_dedfdg = 59
		case "\u004d\u0036":
			*_dedfdg = 60
		case "\u004d\u0037":
			*_dedfdg = 61
		case "\u004d\u0038":
			*_dedfdg = 62
		case "\u004d\u0039":
			*_dedfdg = 63
		case "\u004d\u0031\u0030":
			*_dedfdg = 64
		case "\u004d\u0031\u0031":
			*_dedfdg = 65
		case "\u004d\u0031\u0032":
			*_dedfdg = 66
		}
	}
	_agfbde, _eacbg = d.Token()
	if _eacbg != nil {
		return _eacbg
	}
	if _bdcgge, _acceag := _agfbde.(_a.EndElement); _acceag && _bdcgge.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agfbde)
}
func NewCT_XmlCellPr() *CT_XmlCellPr {
	_bbdce := &CT_XmlCellPr{}
	_bbdce.XmlPr = NewCT_XmlPr()
	return _bbdce
}
func (_fafbf *CT_NumFmts) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gbded := range start.Attr {
		if _gbded.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ggbba, _eabgc := _f.ParseUint(_gbded.Value, 10, 32)
			if _eabgc != nil {
				return _eabgc
			}
			_cdfc := uint32(_ggbba)
			_fafbf.CountAttr = &_cdfc
			continue
		}
	}
_eabda:
	for {
		_gddea, _dfff := d.Token()
		if _dfff != nil {
			return _dfff
		}
		switch _edfef := _gddea.(type) {
		case _a.StartElement:
			switch _edfef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}:
				_afcad := NewCT_NumFmt()
				if _bdgafd := d.DecodeElement(_afcad, &_edfef); _bdgafd != nil {
					return _bdgafd
				}
				_fafbf.NumFmt = append(_fafbf.NumFmt, _afcad)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fN\u0075\u006d\u0046\u006d\u0074\u0073\u0020\u0025\u0076", _edfef.Name)
				if _aedge := d.Skip(); _aedge != nil {
					return _aedge
				}
			}
		case _a.EndElement:
			break _eabda
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CalcChain and its children
func (_bcca *CT_CalcChain) Validate() error {
	return _bcca.ValidateWithPath("\u0043\u0054\u005fC\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e")
}

// Validate validates the CT_Dxfs and its children
func (_cfafc *CT_Dxfs) Validate() error {
	return _cfafc.ValidateWithPath("\u0043T\u005f\u0044\u0078\u0066\u0073")
}
func (_bfdfb *CT_TableColumn) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _bfdfb.IdAttr)})
	if _bfdfb.UniqueNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_bfdfb.UniqueNameAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _bfdfb.NameAttr)})
	if _bfdfb.TotalsRowFunctionAttr != ST_TotalsRowFunctionUnset {
		_baafe, _abgeb := _bfdfb.TotalsRowFunctionAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u0075\u006ec\u0074\u0069\u006f\u006e"})
		if _abgeb != nil {
			return _abgeb
		}
		start.Attr = append(start.Attr, _baafe)
	}
	if _bfdfb.TotalsRowLabelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077L\u0061\u0062\u0065\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_bfdfb.TotalsRowLabelAttr)})
	}
	if _bfdfb.QueryTableFieldIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069e\u006c\u0064\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bfdfb.QueryTableFieldIdAttr)})
	}
	if _bfdfb.HeaderRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bfdfb.HeaderRowDxfIdAttr)})
	}
	if _bfdfb.DataDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d"}, Value: _fc.Sprintf("\u0025\u0076", *_bfdfb.DataDxfIdAttr)})
	}
	if _bfdfb.TotalsRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bfdfb.TotalsRowDxfIdAttr)})
	}
	if _bfdfb.HeaderRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_bfdfb.HeaderRowCellStyleAttr)})
	}
	if _bfdfb.DataCellStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_bfdfb.DataCellStyleAttr)})
	}
	if _bfdfb.TotalsRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_bfdfb.TotalsRowCellStyleAttr)})
	}
	e.EncodeToken(start)
	if _bfdfb.CalculatedColumnFormula != nil {
		_egfag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072m\u0075\u006c\u0061"}}
		e.EncodeElement(_bfdfb.CalculatedColumnFormula, _egfag)
	}
	if _bfdfb.TotalsRowFormula != nil {
		_bgafb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074ot\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}}
		e.EncodeElement(_bfdfb.TotalsRowFormula, _bgafb)
	}
	if _bfdfb.XmlColumnPr != nil {
		_dgbgg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072"}}
		e.EncodeElement(_bfdfb.XmlColumnPr, _dgbgg)
	}
	if _bfdfb.ExtLst != nil {
		_bdbcb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bfdfb.ExtLst, _bdbcb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableStyleElement and its children
func (_gacff *CT_TableStyleElement) Validate() error {
	return _gacff.ValidateWithPath("C\u0054_\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074")
}
func (_aagcae ST_SortBy) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_aagcae.String(), start)
}
func (_gggf ST_BorderStyle) String() string {
	switch _gggf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0074\u0068\u0069\u006e"
	case 3:
		return "\u006d\u0065\u0064\u0069\u0075\u006d"
	case 4:
		return "\u0064\u0061\u0073\u0068\u0065\u0064"
	case 5:
		return "\u0064\u006f\u0074\u0074\u0065\u0064"
	case 6:
		return "\u0074\u0068\u0069c\u006b"
	case 7:
		return "\u0064\u006f\u0075\u0062\u006c\u0065"
	case 8:
		return "\u0068\u0061\u0069\u0072"
	case 9:
		return "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064"
	case 10:
		return "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case 11:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case 12:
		return "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 13:
		return "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 14:
		return "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	}
	return ""
}
func (_fead *CT_Controls) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_cfgae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c"}}
	for _, _eagc := range _fead.Control {
		e.EncodeElement(_eagc, _cfgae)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_TupleCache struct {

	// Entries
	Entries *CT_PCDSDTCEntries

	// Sets
	Sets *CT_Sets

	// OLAP Query Cache
	QueryCache *CT_QueryCache

	// Server Formats
	ServerFormats *CT_ServerFormats

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_cggfe *CT_QueryTableRefresh) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cggfe.PreserveSortFilterLayoutAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0065\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072\u0074\u0046i\u006c\u0074\u0065\u0072\u004c\u0061\u0079\u006f\u0075\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cggfe.PreserveSortFilterLayoutAttr))})
	}
	if _cggfe.FieldIdWrappedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065\u006c\u0064\u0049\u0064\u0057\u0072a\u0070\u0070\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cggfe.FieldIdWrappedAttr))})
	}
	if _cggfe.HeadersInLastRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "h\u0065a\u0064\u0065\u0072\u0073\u0049\u006e\u004c\u0061s\u0074\u0052\u0065\u0066re\u0073\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cggfe.HeadersInLastRefreshAttr))})
	}
	if _cggfe.MinimumVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e\u0069\u006d\u0075\u006d\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_cggfe.MinimumVersionAttr)})
	}
	if _cggfe.NextIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0065\u0078\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_cggfe.NextIdAttr)})
	}
	if _cggfe.UnboundColumnsLeftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075n\u0062o\u0075\u006e\u0064\u0043\u006fl\u0075\u006dn\u0073\u004c\u0065\u0066\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cggfe.UnboundColumnsLeftAttr)})
	}
	if _cggfe.UnboundColumnsRightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0062\u006fun\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0052\u0069\u0067\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cggfe.UnboundColumnsRightAttr)})
	}
	e.EncodeToken(start)
	_ffgca := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0071ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}}
	e.EncodeElement(_cggfe.QueryTableFields, _ffgca)
	if _cggfe.QueryTableDeletedFields != nil {
		_abegf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073"}}
		e.EncodeElement(_cggfe.QueryTableDeletedFields, _abegf)
	}
	if _cggfe.SortState != nil {
		_dgedeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_cggfe.SortState, _dgedeb)
	}
	if _cggfe.ExtLst != nil {
		_gaeg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cggfe.ExtLst, _gaeg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_abddg *CT_ReviewedRevisions) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _abddg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_abddg.CountAttr)})
	}
	e.EncodeToken(start)
	_begda := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}}
	for _, _aabgf := range _abddg.Reviewed {
		e.EncodeElement(_aabgf, _begda)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Items and its children
func (_baaag *CT_Items) Validate() error {
	return _baaag.ValidateWithPath("\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073")
}
func (_bgbccb *Worksheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003aw\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074"
	return _bgbccb.CT_Worksheet.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_DdeValues and its children, prefixing error messages with path
func (_eagg *CT_DdeValues) ValidateWithPath(path string) error {
	for _ddddc, _bbeeb := range _eagg.Value {
		if _ebegb := _bbeeb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002fV\u0061\u006c\u0075\u0065\u005b\u0025\u0064\u005d", path, _ddddc)); _ebegb != nil {
			return _ebegb
		}
	}
	return nil
}

// Validate validates the CT_Tables and its children
func (_acadgb *CT_Tables) Validate() error {
	return _acadgb.ValidateWithPath("\u0043T\u005f\u0054\u0061\u0062\u006c\u0065s")
}

// ValidateWithPath validates the CT_SingleXmlCells and its children, prefixing error messages with path
func (_feeae *CT_SingleXmlCells) ValidateWithPath(path string) error {
	for _cebe, _fagfea := range _feeae.SingleXmlCell {
		if _dbcbe := _fagfea.ValidateWithPath(_fc.Sprintf("%\u0073/\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006dl\u0043\u0065\u006c\u006c[%\u0064\u005d", path, _cebe)); _dbcbe != nil {
			return _dbcbe
		}
	}
	return nil
}
func NewCT_Fills() *CT_Fills { _dfbd := &CT_Fills{}; return _dfbd }
func (_bfadg *CT_DdeItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _bfadg.DdeItem != nil {
		_dccb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0064\u0065\u0049\u0074\u0065\u006d"}}
		for _, _ggcee := range _bfadg.DdeItem {
			e.EncodeElement(_ggcee, _dccb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BooleanProperty and its children, prefixing error messages with path
func (_dfea *CT_BooleanProperty) ValidateWithPath(path string) error { return nil }

type CT_IconSet struct {

	// Icon Set
	IconSetAttr ST_IconSetType

	// Show Value
	ShowValueAttr *bool

	// Percent
	PercentAttr *bool

	// Reverse Icons
	ReverseAttr *bool

	// Conditional Formatting Object
	Cfvo []*CT_Cfvo
}

// Validate validates the CT_Dimensions and its children
func (_degc *CT_Dimensions) Validate() error {
	return _degc.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073")
}
func (_dbdfd *ST_Orientation) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aaedae, _bbcac := d.Token()
	if _bbcac != nil {
		return _bbcac
	}
	if _fbbfa, _fefgbb := _aaedae.(_a.EndElement); _fefgbb && _fbbfa.Name == start.Name {
		*_dbdfd = 1
		return nil
	}
	if _bgefg, _edgfc := _aaedae.(_a.CharData); !_edgfc {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aaedae)
	} else {
		switch string(_bgefg) {
		case "":
			*_dbdfd = 0
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_dbdfd = 1
		case "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074":
			*_dbdfd = 2
		case "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e":
			*_dbdfd = 3
		}
	}
	_aaedae, _bbcac = d.Token()
	if _bbcac != nil {
		return _bbcac
	}
	if _gbdeb, _aabbf := _aaedae.(_a.EndElement); _aabbf && _gbdeb.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aaedae)
}

type CT_DynamicFilter struct {

	// Dynamic filter type
	TypeAttr ST_DynamicFilterType

	// Value
	ValAttr *float64

	// ISO Value
	ValIsoAttr *_cd.Time

	// Max Value
	MaxValAttr *float64

	// Max ISO Value
	MaxValIsoAttr *_cd.Time
}

func (_afgac ST_SortType) String() string {
	switch _afgac {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case 3:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	case 4:
		return "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061"
	case 5:
		return "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061"
	case 6:
		return "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c"
	case 7:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c"
	}
	return ""
}
func (_gfc *CT_CalcPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gfc.CalcIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061\u006c\u0063\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_gfc.CalcIdAttr)})
	}
	if _gfc.CalcModeAttr != ST_CalcModeUnset {
		_dagc, _ecgdc := _gfc.CalcModeAttr.MarshalXMLAttr(_a.Name{Local: "\u0063\u0061\u006c\u0063\u004d\u006f\u0064\u0065"})
		if _ecgdc != nil {
			return _ecgdc
		}
		start.Attr = append(start.Attr, _dagc)
	}
	if _gfc.FullCalcOnLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gfc.FullCalcOnLoadAttr))})
	}
	if _gfc.RefModeAttr != ST_RefModeUnset {
		_gafg, _dadd := _gfc.RefModeAttr.MarshalXMLAttr(_a.Name{Local: "\u0072e\u0066\u004d\u006f\u0064\u0065"})
		if _dadd != nil {
			return _dadd
		}
		start.Attr = append(start.Attr, _gafg)
	}
	if _gfc.IterateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gfc.IterateAttr))})
	}
	if _gfc.IterateCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0074\u0065r\u0061\u0074\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_gfc.IterateCountAttr)})
	}
	if _gfc.IterateDeltaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0074\u0065r\u0061\u0074\u0065\u0044\u0065\u006c\u0074\u0061"}, Value: _fc.Sprintf("\u0025\u0076", *_gfc.IterateDeltaAttr)})
	}
	if _gfc.FullPrecisionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0075\u006c\u006c\u0050\u0072\u0065\u0063\u0069\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gfc.FullPrecisionAttr))})
	}
	if _gfc.CalcCompletedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061\u006c\u0063\u0043\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gfc.CalcCompletedAttr))})
	}
	if _gfc.CalcOnSaveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061\u006c\u0063\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gfc.CalcOnSaveAttr))})
	}
	if _gfc.ConcurrentCalcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006et\u0043\u0061\u006c\u0063"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gfc.ConcurrentCalcAttr))})
	}
	if _gfc.ConcurrentManualCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u006f\u006e\u0063\u0075rr\u0065n\u0074\u004d\u0061\u006e\u0075a\u006c\u0043\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_gfc.ConcurrentManualCountAttr)})
	}
	if _gfc.ForceFullCalcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072\u0063\u0065\u0046\u0075\u006c\u006c\u0043\u0061\u006c\u0063"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gfc.ForceFullCalcAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MergeCell and its children, prefixing error messages with path
func (_eebda *CT_MergeCell) ValidateWithPath(path string) error { return nil }
func NewCT_HierarchyUsage() *CT_HierarchyUsage                  { _ccdde := &CT_HierarchyUsage{}; return _ccdde }
func (_dbadf ST_TotalsRowFunction) Validate() error             { return _dbadf.ValidateWithPath("") }
func NewCT_PivotHierarchies() *CT_PivotHierarchies              { _aafd := &CT_PivotHierarchies{}; return _aafd }
func (_fgeadd *CT_PivotCaches) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dbgggf:
	for {
		_cbedc, _daecaa := d.Token()
		if _daecaa != nil {
			return _daecaa
		}
		switch _dedaa := _cbedc.(type) {
		case _a.StartElement:
			switch _dedaa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}:
				_fggbf := NewCT_PivotCache()
				if _bdgeg := d.DecodeElement(_fggbf, &_dedaa); _bdgeg != nil {
					return _bdgeg
				}
				_fgeadd.PivotCache = append(_fgeadd.PivotCache, _fggbf)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061c\u0068e\u0073\u0020\u0025\u0076", _dedaa.Name)
				if _gbdbd := d.Skip(); _gbdbd != nil {
					return _gbdbd
				}
			}
		case _a.EndElement:
			break _dbgggf
		case _a.CharData:
		}
	}
	return nil
}
func (_bcfdag *CT_OleObject) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bcfdag.ProgIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bcfdag.ProgIdAttr)})
	}
	if _bcfdag.DvAspectAttr != ST_DvAspectUnset {
		_gadae, _eddef := _bcfdag.DvAspectAttr.MarshalXMLAttr(_a.Name{Local: "\u0064\u0076\u0041\u0073\u0070\u0065\u0063\u0074"})
		if _eddef != nil {
			return _eddef
		}
		start.Attr = append(start.Attr, _gadae)
	}
	if _bcfdag.LinkAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0069\u006e\u006b"}, Value: _fc.Sprintf("\u0025\u0076", *_bcfdag.LinkAttr)})
	}
	if _bcfdag.OleUpdateAttr != ST_OleUpdateUnset {
		_fcgb, _egfae := _bcfdag.OleUpdateAttr.MarshalXMLAttr(_a.Name{Local: "\u006fl\u0065\u0055\u0070\u0064\u0061\u0074e"})
		if _egfae != nil {
			return _egfae
		}
		start.Attr = append(start.Attr, _fcgb)
	}
	if _bcfdag.AutoLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u006f\u0061\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcfdag.AutoLoadAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _bcfdag.ShapeIdAttr)})
	if _bcfdag.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bcfdag.IdAttr)})
	}
	e.EncodeToken(start)
	if _bcfdag.ObjectPr != nil {
		_ebgab := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}}
		e.EncodeElement(_bcfdag.ObjectPr, _ebgab)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ggcfc *CT_MergeCells) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ggcfc.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ggcfc.CountAttr)})
	}
	e.EncodeToken(start)
	_fgfeef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003am\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c"}}
	for _, _efed := range _ggcfc.MergeCell {
		e.EncodeElement(_efed, _fgfeef)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextFields and its children, prefixing error messages with path
func (_fdgcd *CT_TextFields) ValidateWithPath(path string) error {
	for _eddcb, _bdedgba := range _fdgcd.TextField {
		if _eacfe := _bdedgba.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0054\u0065\u0078t\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _eddcb)); _eacfe != nil {
			return _eacfe
		}
	}
	return nil
}
func (_acb *CT_Border) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aeab := range start.Attr {
		if _aeab.Name.Local == "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c\u0055\u0070" {
			_abfc, _ceg := _f.ParseBool(_aeab.Value)
			if _ceg != nil {
				return _ceg
			}
			_acb.DiagonalUpAttr = &_abfc
			continue
		}
		if _aeab.Name.Local == "\u0064\u0069\u0061g\u006f\u006e\u0061\u006c\u0044\u006f\u0077\u006e" {
			_bga, _fbee := _f.ParseBool(_aeab.Value)
			if _fbee != nil {
				return _fbee
			}
			_acb.DiagonalDownAttr = &_bga
			continue
		}
		if _aeab.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_aga, _fdc := _f.ParseBool(_aeab.Value)
			if _fdc != nil {
				return _fdc
			}
			_acb.OutlineAttr = &_aga
			continue
		}
	}
_fbcd:
	for {
		_deaa, _eba := d.Token()
		if _eba != nil {
			return _eba
		}
		switch _bbf := _deaa.(type) {
		case _a.StartElement:
			switch _bbf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0061r\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0061r\u0074"}:
				_acb.Start = NewCT_BorderPr()
				if _cdab := d.DecodeElement(_acb.Start, &_bbf); _cdab != nil {
					return _cdab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}:
				_acb.End = NewCT_BorderPr()
				if _fgcb := d.DecodeElement(_acb.End, &_bbf); _fgcb != nil {
					return _fgcb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}:
				_acb.Left = NewCT_BorderPr()
				if _dcd := d.DecodeElement(_acb.Left, &_bbf); _dcd != nil {
					return _dcd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}:
				_acb.Right = NewCT_BorderPr()
				if _cgad := d.DecodeElement(_acb.Right, &_bbf); _cgad != nil {
					return _cgad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}:
				_acb.Top = NewCT_BorderPr()
				if _ecgeg := d.DecodeElement(_acb.Top, &_bbf); _ecgeg != nil {
					return _ecgeg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}:
				_acb.Bottom = NewCT_BorderPr()
				if _gde := d.DecodeElement(_acb.Bottom, &_bbf); _gde != nil {
					return _gde
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}:
				_acb.Diagonal = NewCT_BorderPr()
				if _cffbc := d.DecodeElement(_acb.Diagonal, &_bbf); _cffbc != nil {
					return _cffbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}:
				_acb.Vertical = NewCT_BorderPr()
				if _ade := d.DecodeElement(_acb.Vertical, &_bbf); _ade != nil {
					return _ade
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}:
				_acb.Horizontal = NewCT_BorderPr()
				if _adg := d.DecodeElement(_acb.Horizontal, &_bbf); _adg != nil {
					return _adg
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0042\u006f\u0072d\u0065\u0072 \u0025\u0076", _bbf.Name)
				if _cead := d.Skip(); _cead != nil {
					return _cead
				}
			}
		case _a.EndElement:
			break _fbcd
		case _a.CharData:
		}
	}
	return nil
}

type CT_PageSetup struct {

	// Paper Size
	PaperSizeAttr *uint32

	// Paper Height
	PaperHeightAttr *string

	// Paper Width
	PaperWidthAttr *string

	// Print Scale
	ScaleAttr *uint32

	// First Page Number
	FirstPageNumberAttr *uint32

	// Fit To Width
	FitToWidthAttr *uint32

	// Fit To Height
	FitToHeightAttr *uint32

	// Page Order
	PageOrderAttr ST_PageOrder

	// Orientation
	OrientationAttr ST_Orientation

	// Use Printer Defaults
	UsePrinterDefaultsAttr *bool

	// Black And White
	BlackAndWhiteAttr *bool

	// Draft
	DraftAttr *bool

	// Print Cell Comments
	CellCommentsAttr ST_CellComments

	// Use First Page Number
	UseFirstPageNumberAttr *bool

	// Print Error Handling
	ErrorsAttr ST_PrintError

	// Horizontal DPI
	HorizontalDpiAttr *uint32

	// Vertical DPI
	VerticalDpiAttr *uint32

	// Number Of Copies
	CopiesAttr *uint32
	IdAttr     *string
}
type CT_CalculatedItem struct {

	// Field Index
	FieldAttr *uint32

	// Calculated Item Formula
	FormulaAttr *string

	// Calculated Item Location
	PivotArea *CT_PivotArea

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ffgg *CT_CsPageSetup) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ffgg.PaperSizeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae"}, Value: _fc.Sprintf("\u0025\u0076", *_ffgg.PaperSizeAttr)})
	}
	if _ffgg.PaperHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ffgg.PaperHeightAttr)})
	}
	if _ffgg.PaperWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068"}, Value: _fc.Sprintf("\u0025\u0076", *_ffgg.PaperWidthAttr)})
	}
	if _ffgg.FirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_ffgg.FirstPageNumberAttr)})
	}
	if _ffgg.OrientationAttr != ST_OrientationUnset {
		_cdea, _ceec := _ffgg.OrientationAttr.MarshalXMLAttr(_a.Name{Local: "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e"})
		if _ceec != nil {
			return _ceec
		}
		start.Attr = append(start.Attr, _cdea)
	}
	if _ffgg.UsePrinterDefaultsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ffgg.UsePrinterDefaultsAttr))})
	}
	if _ffgg.BlackAndWhiteAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ffgg.BlackAndWhiteAttr))})
	}
	if _ffgg.DraftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072\u0061f\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ffgg.DraftAttr))})
	}
	if _ffgg.UseFirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ffgg.UseFirstPageNumberAttr))})
	}
	if _ffgg.HorizontalDpiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069"}, Value: _fc.Sprintf("\u0025\u0076", *_ffgg.HorizontalDpiAttr)})
	}
	if _ffgg.VerticalDpiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069"}, Value: _fc.Sprintf("\u0025\u0076", *_ffgg.VerticalDpiAttr)})
	}
	if _ffgg.CopiesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0070\u0069\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0076", *_ffgg.CopiesAttr)})
	}
	if _ffgg.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_ffgg.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_afbfce *CT_WebPublishItem) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _afbfce.IdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0076I\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _afbfce.DivIdAttr)})
	_gadbad, _bbffd := _afbfce.SourceTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065"})
	if _bbffd != nil {
		return _bbffd
	}
	start.Attr = append(start.Attr, _gadbad)
	if _afbfce.SourceRefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073o\u0075\u0072\u0063\u0065\u0052\u0065f"}, Value: _fc.Sprintf("\u0025\u0076", *_afbfce.SourceRefAttr)})
	}
	if _afbfce.SourceObjectAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_afbfce.SourceObjectAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _afbfce.DestinationFileAttr)})
	if _afbfce.TitleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_afbfce.TitleAttr)})
	}
	if _afbfce.AutoRepublishAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afbfce.AutoRepublishAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OleObjects and its children, prefixing error messages with path
func (_fbad *CT_OleObjects) ValidateWithPath(path string) error {
	for _cfgcge, _afcac := range _fbad.OleObject {
		if _cgabc := _afcac.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u005b\u0025\u0064\u005d", path, _cfgcge)); _cgabc != nil {
			return _cgabc
		}
	}
	return nil
}

// Validate validates the CT_PCDKPIs and its children
func (_eacff *CT_PCDKPIs) Validate() error {
	return _eacff.ValidateWithPath("\u0043\u0054\u005f\u0050\u0043\u0044\u004b\u0050\u0049\u0073")
}
func NewCT_Dxf() *CT_Dxf { _efece := &CT_Dxf{}; return _efece }
func (_gafd *CT_Boolean) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(_gafd.VAttr))})
	if _gafd.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gafd.UAttr))})
	}
	if _gafd.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gafd.FAttr))})
	}
	if _gafd.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_gafd.CAttr)})
	}
	if _gafd.CpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_gafd.CpAttr)})
	}
	e.EncodeToken(start)
	if _gafd.X != nil {
		_bbcf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _gca := range _gafd.X {
			e.EncodeElement(_gca, _bbcf)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ChartsheetViews and its children
func (_gaaf *CT_ChartsheetViews) Validate() error {
	return _gaaf.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073h\u0065\u0065t\u0056\u0069\u0065\u0077\u0073")
}
func (_aaffb *CT_GradientStop) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _aaffb.PositionAttr)})
	e.EncodeToken(start)
	_fecbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	e.EncodeElement(_aaffb.Color, _fecbd)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_CellFormula struct {
	TAttr    ST_CellFormulaType
	AcaAttr  *bool
	RefAttr  *string
	Dt2DAttr *bool
	DtrAttr  *bool
	Del1Attr *bool
	Del2Attr *bool
	R1Attr   *string
	R2Attr   *string
	CaAttr   *bool
	SiAttr   *uint32
	BxAttr   *bool
	Content  string
}

func (_ccbdd *CT_Revisions) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_bgdeef:
	for {
		_bbecg, _ggdbd := d.Token()
		if _ggdbd != nil {
			return _ggdbd
		}
		switch _fffebb := _bbecg.(type) {
		case _a.StartElement:
			switch _fffebb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
				_faebg := NewCT_RevisionRowColumn()
				if _geeef := d.DecodeElement(_faebg, &_fffebb); _geeef != nil {
					return _geeef
				}
				_ccbdd.Rrc = append(_ccbdd.Rrc, _faebg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
				_acbbac := NewCT_RevisionMove()
				if _aaeffa := d.DecodeElement(_acbbac, &_fffebb); _aaeffa != nil {
					return _aaeffa
				}
				_ccbdd.Rm = append(_ccbdd.Rm, _acbbac)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
				_gdeee := NewCT_RevisionCustomView()
				if _cdagb := d.DecodeElement(_gdeee, &_fffebb); _cdagb != nil {
					return _cdagb
				}
				_ccbdd.Rcv = append(_ccbdd.Rcv, _gdeee)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
				_degfae := NewCT_RevisionSheetRename()
				if _dcdcgc := d.DecodeElement(_degfae, &_fffebb); _dcdcgc != nil {
					return _dcdcgc
				}
				_ccbdd.Rsnm = append(_ccbdd.Rsnm, _degfae)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
				_acecca := NewCT_RevisionInsertSheet()
				if _adadd := d.DecodeElement(_acecca, &_fffebb); _adadd != nil {
					return _adadd
				}
				_ccbdd.Ris = append(_ccbdd.Ris, _acecca)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_bebdd := NewCT_RevisionCellChange()
				if _begeff := d.DecodeElement(_bebdd, &_fffebb); _begeff != nil {
					return _begeff
				}
				_ccbdd.Rcc = append(_ccbdd.Rcc, _bebdd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_dbbbd := NewCT_RevisionFormatting()
				if _ffgaa := d.DecodeElement(_dbbbd, &_fffebb); _ffgaa != nil {
					return _ffgaa
				}
				_ccbdd.Rfmt = append(_ccbdd.Rfmt, _dbbbd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
				_bcafc := NewCT_RevisionAutoFormatting()
				if _aegb := d.DecodeElement(_bcafc, &_fffebb); _aegb != nil {
					return _aegb
				}
				_ccbdd.Raf = append(_ccbdd.Raf, _bcafc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
				_ccbcc := NewCT_RevisionDefinedName()
				if _gfgcc := d.DecodeElement(_ccbcc, &_fffebb); _gfgcc != nil {
					return _gfgcc
				}
				_ccbdd.Rdn = append(_ccbdd.Rdn, _ccbcc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
				_gcgdf := NewCT_RevisionComment()
				if _ccgbb := d.DecodeElement(_gcgdf, &_fffebb); _ccgbb != nil {
					return _ccgbb
				}
				_ccbdd.Rcmt = append(_ccbdd.Rcmt, _gcgdf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
				_ebdbb := NewCT_RevisionQueryTableField()
				if _cacdcc := d.DecodeElement(_ebdbb, &_fffebb); _cacdcc != nil {
					return _cacdcc
				}
				_ccbdd.Rqt = append(_ccbdd.Rqt, _ebdbb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
				_addea := NewCT_RevisionConflict()
				if _aeeaa := d.DecodeElement(_addea, &_fffebb); _aeeaa != nil {
					return _aeeaa
				}
				_ccbdd.Rcft = append(_ccbdd.Rcft, _addea)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0065\u0076i\u0073\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _fffebb.Name)
				if _cbgcg := d.Skip(); _cbgcg != nil {
					return _cbgcg
				}
			}
		case _a.EndElement:
			break _bgdeef
		case _a.CharData:
		}
	}
	return nil
}
func (_gbccg ST_DdeValueType) String() string {
	switch _gbccg {
	case 0:
		return ""
	case 1:
		return "\u006e\u0069\u006c"
	case 2:
		return "\u0062"
	case 3:
		return "\u006e"
	case 4:
		return "\u0065"
	case 5:
		return "\u0073\u0074\u0072"
	}
	return ""
}
func (_acdbe ST_FilterOperator) String() string {
	switch _acdbe {
	case 0:
		return ""
	case 1:
		return "\u0065\u0071\u0075a\u006c"
	case 2:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 3:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	}
	return ""
}
func (_gabce *CT_Cols) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_aggg:
	for {
		_gbfaeg, _gbfaef := d.Token()
		if _gbfaef != nil {
			return _gbfaef
		}
		switch _gcab := _gbfaeg.(type) {
		case _a.StartElement:
			switch _gcab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c"}:
				_cada := NewCT_Col()
				if _egee := d.DecodeElement(_cada, &_gcab); _egee != nil {
					return _egee
				}
				_gabce.Col = append(_gabce.Col, _cada)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006f\u006c\u0073\u0020\u0025\u0076", _gcab.Name)
				if _gfcbd := d.Skip(); _gfcbd != nil {
					return _gfcbd
				}
			}
		case _a.EndElement:
			break _aggg
		case _a.CharData:
		}
	}
	return nil
}
func (_abcbbge ST_FormatAction) String() string {
	switch _abcbbge {
	case 0:
		return ""
	case 1:
		return "\u0062\u006c\u0061n\u006b"
	case 2:
		return "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"
	case 3:
		return "\u0064\u0072\u0069l\u006c"
	case 4:
		return "\u0066o\u0072\u006d\u0075\u006c\u0061"
	}
	return ""
}

// Validate validates the CT_ServerFormat and its children
func (_aafda *CT_ServerFormat) Validate() error {
	return _aafda.ValidateWithPath("\u0043T\u005fS\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074")
}

type CT_PivotCaches struct {

	// PivotCache
	PivotCache []*CT_PivotCache
}
type CT_WebPublishObjects struct {

	// Count
	CountAttr *uint32

	// Web Publishing Object
	WebPublishObject []*CT_WebPublishObject
}

// Validate validates the CT_SheetPr and its children
func (_caagb *CT_SheetPr) Validate() error {
	return _caagb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0050\u0072")
}

// Validate validates the CT_Comment and its children
func (_cgbb *CT_Comment) Validate() error {
	return _cgbb.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074")
}
func NewCT_MdxTuple() *CT_MdxTuple                         { _cbecb := &CT_MdxTuple{}; return _cbecb }
func (_gdgda ST_DataValidationErrorStyle) Validate() error { return _gdgda.ValidateWithPath("") }

// Validate validates the CT_PhoneticPr and its children
func (_cagfg *CT_PhoneticPr) Validate() error {
	return _cagfg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072")
}
func (_gcafa *CT_PhoneticPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u006e\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _gcafa.FontIdAttr)})
	if _gcafa.TypeAttr != ST_PhoneticTypeUnset {
		_abdd, _adaf := _gcafa.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _adaf != nil {
			return _adaf
		}
		start.Attr = append(start.Attr, _abdd)
	}
	if _gcafa.AlignmentAttr != ST_PhoneticAlignmentUnset {
		_dbged, _abgdc := _gcafa.AlignmentAttr.MarshalXMLAttr(_a.Name{Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"})
		if _abgdc != nil {
			return _abgdc
		}
		start.Attr = append(start.Attr, _dbged)
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Selection struct {

	// Pane
	PaneAttr ST_Pane

	// Active Cell Location
	ActiveCellAttr *string

	// Active Cell Index
	ActiveCellIdAttr *uint32

	// Sequence of References
	SqrefAttr *ST_Sqref
}
type CT_MetadataType struct {

	// Metadata Type Name
	NameAttr string

	// Minimum Supported Version
	MinSupportedVersionAttr uint32

	// Metadata Ghost Row
	GhostRowAttr *bool

	// Metadata Ghost Column
	GhostColAttr *bool

	// Metadata Edit
	EditAttr *bool

	// Metadata Cell Value Delete
	DeleteAttr *bool

	// Metadata Copy
	CopyAttr *bool

	// Metadata Paste All
	PasteAllAttr *bool

	// Metadata Paste Formulas
	PasteFormulasAttr *bool

	// Metadata Paste Special Values
	PasteValuesAttr *bool

	// Metadata Paste Formats
	PasteFormatsAttr *bool

	// Metadata Paste Comments
	PasteCommentsAttr *bool

	// Metadata Paste Data Validation
	PasteDataValidationAttr *bool

	// Metadata Paste Borders
	PasteBordersAttr *bool

	// Metadata Paste Column Widths
	PasteColWidthsAttr *bool

	// Metadata Paste Number Formats
	PasteNumberFormatsAttr *bool

	// Metadata Merge
	MergeAttr *bool

	// Meatadata Split First
	SplitFirstAttr *bool

	// Metadata Split All
	SplitAllAttr *bool

	// Metadata Insert Delete
	RowColShiftAttr *bool

	// Metadata Clear All
	ClearAllAttr *bool

	// Metadata Clear Formats
	ClearFormatsAttr *bool

	// Metadata Clear Contents
	ClearContentsAttr *bool

	// Metadata Clear Comments
	ClearCommentsAttr *bool

	// Metadata Formula Assignment
	AssignAttr *bool

	// Metadata Coercion
	CoerceAttr *bool

	// Adjust Metadata
	AdjustAttr *bool

	// Cell Metadata
	CellMetaAttr *bool
}

func NewCT_PatternFill() *CT_PatternFill   { _fbdaa := &CT_PatternFill{}; return _fbdaa }
func NewCT_ChartsheetPr() *CT_ChartsheetPr { _deff := &CT_ChartsheetPr{}; return _deff }

// ValidateWithPath validates the CT_FileSharing and its children, prefixing error messages with path
func (_adggc *CT_FileSharing) ValidateWithPath(path string) error { return nil }
func (_eafaa ST_VerticalAlignment) ValidateWithPath(path string) error {
	switch _eafaa {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eafaa))
	}
	return nil
}
func NewCT_CacheSource() *CT_CacheSource {
	_cegba := &CT_CacheSource{}
	_cegba.TypeAttr = ST_SourceType(1)
	return _cegba
}
func (_efcdea ST_WebSourceType) ValidateWithPath(path string) error {
	switch _efcdea {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efcdea))
	}
	return nil
}
func (_aebbe *CT_Record) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_bcfff:
	for {
		_gcegd, _fgabf := d.Token()
		if _fgabf != nil {
			return _fgabf
		}
		switch _eeaddc := _gcegd.(type) {
		case _a.StartElement:
			switch _eeaddc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_ddffb := NewCT_Missing()
				if _ffgcd := d.DecodeElement(_ddffb, &_eeaddc); _ffgcd != nil {
					return _ffgcd
				}
				_aebbe.M = append(_aebbe.M, _ddffb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_gefeb := NewCT_Number()
				if _dfcfga := d.DecodeElement(_gefeb, &_eeaddc); _dfcfga != nil {
					return _dfcfga
				}
				_aebbe.N = append(_aebbe.N, _gefeb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_bdafe := NewCT_Boolean()
				if _dedaag := d.DecodeElement(_bdafe, &_eeaddc); _dedaag != nil {
					return _dedaag
				}
				_aebbe.B = append(_aebbe.B, _bdafe)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_efgae := NewCT_Error()
				if _ddea := d.DecodeElement(_efgae, &_eeaddc); _ddea != nil {
					return _ddea
				}
				_aebbe.E = append(_aebbe.E, _efgae)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_eagfe := NewCT_String()
				if _agadf := d.DecodeElement(_eagfe, &_eeaddc); _agadf != nil {
					return _agadf
				}
				_aebbe.S = append(_aebbe.S, _eagfe)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_abdcc := NewCT_DateTime()
				if _ffbgg := d.DecodeElement(_abdcc, &_eeaddc); _ffbgg != nil {
					return _ffbgg
				}
				_aebbe.D = append(_aebbe.D, _abdcc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_acace := NewCT_Index()
				if _cafbd := d.DecodeElement(_acace, &_eeaddc); _cafbd != nil {
					return _cafbd
				}
				_aebbe.X = append(_aebbe.X, _acace)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0052\u0065\u0063o\u0072\u0064 \u0025\u0076", _eeaddc.Name)
				if _fagacc := d.Skip(); _fagacc != nil {
					return _fagacc
				}
			}
		case _a.EndElement:
			break _bcfff
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ChartsheetProtection and its children, prefixing error messages with path
func (_gdfc *CT_ChartsheetProtection) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Tuples and its children, prefixing error messages with path
func (_bbfgbb *CT_Tuples) ValidateWithPath(path string) error {
	for _fefac, _eccfc := range _bbfgbb.Tpl {
		if _efgbbg := _eccfc.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0054\u0070\u006c\u005b\u0025\u0064\u005d", path, _fefac)); _efgbbg != nil {
			return _efgbbg
		}
	}
	return nil
}
func NewCT_Tables() *CT_Tables { _gdaaee := &CT_Tables{}; return _gdaaee }
func (_fbga *CT_DataBinding) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ddeba := range start.Attr {
		if _ddeba.Name.Local == "\u0044a\u0074a\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_faadb, _edgg := _ddeba.Value, error(nil)
			if _edgg != nil {
				return _edgg
			}
			_fbga.DataBindingNameAttr = &_faadb
			continue
		}
		if _ddeba.Name.Local == "F\u0069\u006c\u0065\u0042\u0069\u006e\u0064\u0069\u006e\u0067" {
			_bcgc, _eegf := _f.ParseBool(_ddeba.Value)
			if _eegf != nil {
				return _eegf
			}
			_fbga.FileBindingAttr = &_bcgc
			continue
		}
		if _ddeba.Name.Local == "\u0043\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0044" {
			_dfbcf, _agfae := _f.ParseUint(_ddeba.Value, 10, 32)
			if _agfae != nil {
				return _agfae
			}
			_beaed := uint32(_dfbcf)
			_fbga.ConnectionIDAttr = &_beaed
			continue
		}
		if _ddeba.Name.Local == "\u0046i\u006ce\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_ceaff, _cfda := _ddeba.Value, error(nil)
			if _cfda != nil {
				return _cfda
			}
			_fbga.FileBindingNameAttr = &_ceaff
			continue
		}
		if _ddeba.Name.Local == "\u0044\u0061\u0074\u0061Bi\u006e\u0064\u0069\u006e\u0067\u004c\u006f\u0061\u0064\u004d\u006f\u0064\u0065" {
			_cccg, _cafg := _f.ParseUint(_ddeba.Value, 10, 32)
			if _cafg != nil {
				return _cafg
			}
			_fbga.DataBindingLoadModeAttr = uint32(_cccg)
			continue
		}
	}
_aabba:
	for {
		_dabf, _ebge := d.Token()
		if _ebge != nil {
			return _ebge
		}
		switch _ecff := _dabf.(type) {
		case _a.StartElement:
			switch _ecff.Name {
			default:
				if _beacd, _feca := _fca.CreateElement(_ecff); _feca != nil {
					return _feca
				} else {
					if _dfgc := d.DecodeElement(_beacd, &_ecff); _dfgc != nil {
						return _dfgc
					}
					_fbga.Any = _beacd
				}
			}
		case _a.EndElement:
			break _aabba
		case _a.CharData:
		}
	}
	return nil
}

type CT_Sheet struct {

	// Sheet Name
	NameAttr string

	// Sheet Tab Id
	SheetIdAttr uint32

	// Visible State
	StateAttr ST_SheetState
	IdAttr    string
}

func NewCT_CalculatedMember() *CT_CalculatedMember { _cgag := &CT_CalculatedMember{}; return _cgag }

// ValidateWithPath validates the CT_DataRefs and its children, prefixing error messages with path
func (_dfeg *CT_DataRefs) ValidateWithPath(path string) error {
	for _cccc, _dcedc := range _dfeg.DataRef {
		if _ebabd := _dcedc.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0044\u0061\u0074\u0061\u0052\u0065f\u005b\u0025\u0064\u005d", path, _cccc)); _ebabd != nil {
			return _ebabd
		}
	}
	return nil
}
func (_cacba ST_UpdateLinks) String() string {
	switch _cacba {
	case 0:
		return ""
	case 1:
		return "\u0075s\u0065\u0072\u0053\u0065\u0074"
	case 2:
		return "\u006e\u0065\u0076e\u0072"
	case 3:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return ""
}
func (_abcff ST_TextVAlign) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dbecg := _a.Attr{}
	_dbecg.Name = name
	switch _abcff {
	case ST_TextVAlignUnset:
		_dbecg.Value = ""
	case ST_TextVAlignTop:
		_dbecg.Value = "\u0074\u006f\u0070"
	case ST_TextVAlignCenter:
		_dbecg.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_TextVAlignBottom:
		_dbecg.Value = "\u0062\u006f\u0074\u0074\u006f\u006d"
	case ST_TextVAlignJustify:
		_dbecg.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_TextVAlignDistributed:
		_dbecg.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _dbecg, nil
}

// Validate validates the CT_SmartTagType and its children
func (_dffcb *CT_SmartTagType) Validate() error {
	return _dffcb.ValidateWithPath("\u0043T\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065")
}
func (_cgfdda ST_Axis) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dbbaa := _a.Attr{}
	_dbbaa.Name = name
	switch _cgfdda {
	case ST_AxisUnset:
		_dbbaa.Value = ""
	case ST_AxisAxisRow:
		_dbbaa.Value = "\u0061x\u0069\u0073\u0052\u006f\u0077"
	case ST_AxisAxisCol:
		_dbbaa.Value = "\u0061x\u0069\u0073\u0043\u006f\u006c"
	case ST_AxisAxisPage:
		_dbbaa.Value = "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065"
	case ST_AxisAxisValues:
		_dbbaa.Value = "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return _dbbaa, nil
}

// Validate validates the CT_RPrElt and its children
func (_acbba *CT_RPrElt) Validate() error {
	return _acbba.ValidateWithPath("\u0043T\u005f\u0052\u0050\u0072\u0045\u006ct")
}
func NewCT_MetadataBlocks() *CT_MetadataBlocks { _abbbb := &CT_MetadataBlocks{}; return _abbbb }
func (_cgcfd *CT_Filter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cgcfd.ValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_cgcfd.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cdfb *CT_ExternalSheetName) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cdfb.ValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_cdfb.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cbgfcd ST_DataValidationErrorStyle) String() string {
	switch _cbgfcd {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u006f\u0070"
	case 2:
		return "\u0077a\u0072\u006e\u0069\u006e\u0067"
	case 3:
		return "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	}
	return ""
}
func (_ffgad *CT_TableColumns) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ffgad.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ffgad.CountAttr)})
	}
	e.EncodeToken(start)
	_egega := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e"}}
	for _, _fgbba := range _ffgad.TableColumn {
		e.EncodeElement(_fgbba, _egega)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_adedc *CT_XStringElement) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bcgfb := range start.Attr {
		if _bcgfb.Name.Local == "\u0076" {
			_aeaeb, _gggdf := _bcgfb.Value, error(nil)
			if _gggdf != nil {
				return _gggdf
			}
			_adedc.VAttr = _aeaeb
			continue
		}
	}
	for {
		_gcefd, _cdefc := d.Token()
		if _cdefc != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006c\u0065\u006d\u0065\u006e\u0074: \u0025\u0073", _cdefc)
		}
		if _eggee, _gcgcb := _gcefd.(_a.EndElement); _gcgcb && _eggee.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CommentList struct {

	// Comment
	Comment []*CT_Comment
}
type CT_MetadataTypes struct {

	// Metadata Type Count
	CountAttr *uint32

	// Metadata Type Information
	MetadataType []*CT_MetadataType
}
type CT_Tuples struct {

	// Member Name Count
	CAttr *uint32

	// Tuple
	Tpl []*CT_Tuple
}

func (_aaaagf *ST_HorizontalAlignment) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_aaaagf = 0
	case "\u0067e\u006e\u0065\u0072\u0061\u006c":
		*_aaaagf = 1
	case "\u006c\u0065\u0066\u0074":
		*_aaaagf = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_aaaagf = 3
	case "\u0072\u0069\u0067h\u0074":
		*_aaaagf = 4
	case "\u0066\u0069\u006c\u006c":
		*_aaaagf = 5
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_aaaagf = 6
	case "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073":
		*_aaaagf = 7
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_aaaagf = 8
	}
	return nil
}

// ValidateWithPath validates the CT_QueryTableFields and its children, prefixing error messages with path
func (_cbdde *CT_QueryTableFields) ValidateWithPath(path string) error {
	for _edaegb, _fdaf := range _cbdde.QueryTableField {
		if _defe := _fdaf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u005b\u0025d\u005d", path, _edaegb)); _defe != nil {
			return _defe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Sst and its children, prefixing error messages with path
func (_bbbff *CT_Sst) ValidateWithPath(path string) error {
	for _ecgeef, _ccdad := range _bbbff.Si {
		if _ccbge := _ccdad.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0053\u0069\u005b\u0025\u0064]", path, _ecgeef)); _ccbge != nil {
			return _ccbge
		}
	}
	if _bbbff.ExtLst != nil {
		if _fbfde := _bbbff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbfde != nil {
			return _fbfde
		}
	}
	return nil
}
func NewCT_Font() *CT_Font { _fbgee := &CT_Font{}; return _fbgee }

type CT_RevisionInsertSheet struct {

	// Sheet Id
	SheetIdAttr uint32

	// Sheet Name
	NameAttr string

	// Sheet Position
	SheetPositionAttr uint32
	RIdAttr           *uint32
	UaAttr            *bool
	RaAttr            *bool
}

// Validate validates the CT_Tuple and its children
func (_dbcg *CT_Tuple) Validate() error {
	return _dbcg.ValidateWithPath("\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065")
}

// ValidateWithPath validates the CT_DataFields and its children, prefixing error messages with path
func (_babd *CT_DataFields) ValidateWithPath(path string) error {
	for _daggd, _cggf := range _babd.DataField {
		if _acege := _cggf.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0044\u0061\u0074a\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _daggd)); _acege != nil {
			return _acege
		}
	}
	return nil
}
func NewCT_RevisionComment() *CT_RevisionComment {
	_fafdc := &CT_RevisionComment{}
	_fafdc.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _fafdc
}

// ValidateWithPath validates the CT_MetadataBlocks and its children, prefixing error messages with path
func (_bceca *CT_MetadataBlocks) ValidateWithPath(path string) error {
	for _acced, _acdgb := range _bceca.Bk {
		if _eceg := _acdgb.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0042\u006b\u005b\u0025\u0064]", path, _acced)); _eceg != nil {
			return _eceg
		}
	}
	return nil
}

// Validate validates the CT_TextField and its children
func (_cefbe *CT_TextField) Validate() error {
	return _cefbe.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064")
}

// Validate validates the CT_Member and its children
func (_gagdb *CT_Member) Validate() error {
	return _gagdb.ValidateWithPath("\u0043T\u005f\u004d\u0065\u006d\u0062\u0065r")
}

type CT_WorkbookPr struct {

	// Date 1904
	Date1904Attr *bool

	// Show Objects
	ShowObjectsAttr ST_Objects

	// Show Border Unselected Table
	ShowBorderUnselectedTablesAttr *bool

	// Filter Privacy
	FilterPrivacyAttr *bool

	// Prompted Solutions
	PromptedSolutionsAttr *bool

	// Show Ink Annotations
	ShowInkAnnotationAttr *bool

	// Create Backup File
	BackupFileAttr *bool

	// Save External Link Values
	SaveExternalLinkValuesAttr *bool

	// Update Links Behavior
	UpdateLinksAttr ST_UpdateLinks

	// Code Name
	CodeNameAttr *string

	// Hide Pivot Field List
	HidePivotFieldListAttr *bool

	// Show Pivot Chart Filter
	ShowPivotChartFilterAttr *bool

	// Allow Refresh Query
	AllowRefreshQueryAttr *bool

	// Publish Items
	PublishItemsAttr *bool

	// Check Compatibility On Save
	CheckCompatibilityAttr *bool

	// Auto Compress Pictures
	AutoCompressPicturesAttr *bool

	// Refresh all Connections on Open
	RefreshAllConnectionsAttr *bool

	// Default Theme Version
	DefaultThemeVersionAttr *uint32
}

func NewCT_SmartTagTypes() *CT_SmartTagTypes { _fadcgf := &CT_SmartTagTypes{}; return _fadcgf }
func (_egdag *CT_PivotHierarchies) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _egdag.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_egdag.CountAttr)})
	}
	e.EncodeToken(start)
	_cabga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}}
	for _, _aeceea := range _egdag.PivotHierarchy {
		e.EncodeElement(_aeceea, _cabga)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_MeasureDimensionMap struct {

	// Measure Group Id
	MeasureGroupAttr *uint32

	// Dimension Id
	DimensionAttr *uint32
}

func (_dcdeb *CT_MetadataStrings) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dcdeb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_dcdeb.CountAttr)})
	}
	e.EncodeToken(start)
	_fcbcbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073"}}
	for _, _bdaff := range _dcdeb.S {
		e.EncodeElement(_bdaff, _fcbcbd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Comments struct {

	// Authors
	Authors *CT_Authors

	// List of Comments
	CommentList *CT_CommentList
	ExtLst      *CT_ExtensionList
}

func (_eabafe ST_ExternalConnectionType) Validate() error { return _eabafe.ValidateWithPath("") }
func (_ggacfc *ST_FormatAction) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ggacfc = 0
	case "\u0062\u006c\u0061n\u006b":
		*_ggacfc = 1
	case "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067":
		*_ggacfc = 2
	case "\u0064\u0072\u0069l\u006c":
		*_ggacfc = 3
	case "\u0066o\u0072\u006d\u0075\u006c\u0061":
		*_ggacfc = 4
	}
	return nil
}
func (_bffaa *CT_CellStyleXfs) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bgcf := range start.Attr {
		if _bgcf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bddg, _aaff := _f.ParseUint(_bgcf.Value, 10, 32)
			if _aaff != nil {
				return _aaff
			}
			_dfeb := uint32(_bddg)
			_bffaa.CountAttr = &_dfeb
			continue
		}
	}
_egaec:
	for {
		_gabb, _cefgc := d.Token()
		if _cefgc != nil {
			return _cefgc
		}
		switch _ddec := _gabb.(type) {
		case _a.StartElement:
			switch _ddec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}:
				_agbbb := NewCT_Xf()
				if _fgec := d.DecodeElement(_agbbb, &_ddec); _fgec != nil {
					return _fgec
				}
				_bffaa.Xf = append(_bffaa.Xf, _agbbb)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073\u0020\u0025\u0076", _ddec.Name)
				if _bddga := d.Skip(); _bddga != nil {
					return _bddga
				}
			}
		case _a.EndElement:
			break _egaec
		case _a.CharData:
		}
	}
	return nil
}
func (_bffcbg *CT_Sets) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgfece := range start.Attr {
		if _fgfece.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bebcc, _acbfd := _f.ParseUint(_fgfece.Value, 10, 32)
			if _acbfd != nil {
				return _acbfd
			}
			_ceebd := uint32(_bebcc)
			_bffcbg.CountAttr = &_ceebd
			continue
		}
	}
_fcebc:
	for {
		_gfdec, _dffad := d.Token()
		if _dffad != nil {
			return _dffad
		}
		switch _adaga := _gfdec.(type) {
		case _a.StartElement:
			switch _adaga.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
				_fbedca := NewCT_Set()
				if _bbbgg := d.DecodeElement(_fbedca, &_adaga); _bbbgg != nil {
					return _bbbgg
				}
				_bffcbg.Set = append(_bffcbg.Set, _fbedca)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0065\u0074\u0073\u0020\u0025\u0076", _adaga.Name)
				if _fcgac := d.Skip(); _fcgac != nil {
					return _fcgac
				}
			}
		case _a.EndElement:
			break _fcebc
		case _a.CharData:
		}
	}
	return nil
}
func (_cafgb *CT_SheetViews) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_cfgfg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _gefdfgc := range _cafgb.SheetView {
		e.EncodeElement(_gefdfgc, _cfgfg)
	}
	if _cafgb.ExtLst != nil {
		_bdbaee := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cafgb.ExtLst, _bdbaee)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_GroupMembers() *CT_GroupMembers { _egfe := &CT_GroupMembers{}; return _egfe }
func (_aecgb ST_UnderlineValues) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_aecgb.String(), start)
}
func (_eddgce ST_PivotFilterType) String() string {
	switch _eddgce {
	case 0:
		return ""
	case 1:
		return "\u0075n\u006b\u006e\u006f\u0077\u006e"
	case 2:
		return "\u0063\u006f\u0075n\u0074"
	case 3:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 4:
		return "\u0073\u0075\u006d"
	case 5:
		return "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 7:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068"
	case 8:
		return "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068"
	case 9:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case 10:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068"
	case 11:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case 12:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073"
	case 13:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e"
	case 14:
		return "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l"
	case 15:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 16:
		return "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c"
	case 17:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 18:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 19:
		return "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c"
	case 20:
		return "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 21:
		return "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 22:
		return "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 23:
		return "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 24:
		return "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 25:
		return "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 26:
		return "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 27:
		return "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l"
	case 28:
		return "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 29:
		return "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e"
	case 30:
		return "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 31:
		return "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e"
	case 32:
		return "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 33:
		return "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 34:
		return "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 35:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 36:
		return "\u0074\u006f\u0064a\u0079"
	case 37:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 38:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case 39:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 40:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 41:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 42:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 43:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 44:
		return "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 45:
		return "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 46:
		return "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 47:
		return "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case 48:
		return "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case 49:
		return "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case 50:
		return "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case 51:
		return "\u0051\u0031"
	case 52:
		return "\u0051\u0032"
	case 53:
		return "\u0051\u0033"
	case 54:
		return "\u0051\u0034"
	case 55:
		return "\u004d\u0031"
	case 56:
		return "\u004d\u0032"
	case 57:
		return "\u004d\u0033"
	case 58:
		return "\u004d\u0034"
	case 59:
		return "\u004d\u0035"
	case 60:
		return "\u004d\u0036"
	case 61:
		return "\u004d\u0037"
	case 62:
		return "\u004d\u0038"
	case 63:
		return "\u004d\u0039"
	case 64:
		return "\u004d\u0031\u0030"
	case 65:
		return "\u004d\u0031\u0031"
	case 66:
		return "\u004d\u0031\u0032"
	}
	return ""
}

// Validate validates the CT_CalcCell and its children
func (_fde *CT_CalcCell) Validate() error {
	return _fde.ValidateWithPath("C\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c")
}

type CT_MetadataRecord struct {

	// Metadata Record Type Index
	TAttr uint32

	// Metadata Record Value Index
	VAttr uint32
}

func (_afdfb ST_rwColActionType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_ggcdad := _a.Attr{}
	_ggcdad.Name = name
	switch _afdfb {
	case ST_rwColActionTypeUnset:
		_ggcdad.Value = ""
	case ST_rwColActionTypeInsertRow:
		_ggcdad.Value = "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"
	case ST_rwColActionTypeDeleteRow:
		_ggcdad.Value = "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw"
	case ST_rwColActionTypeInsertCol:
		_ggcdad.Value = "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl"
	case ST_rwColActionTypeDeleteCol:
		_ggcdad.Value = "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl"
	}
	return _ggcdad, nil
}
func (_cfffd *EG_ExtensionList) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cfffd.Ext != nil {
		_acaaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0065\u0078\u0074"}}
		for _, _cfabe := range _cfffd.Ext {
			e.EncodeElement(_cfabe, _acaaf)
		}
	}
	return nil
}
func (_fbggff ST_DynamicFilterType) ValidateWithPath(path string) error {
	switch _fbggff {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbggff))
	}
	return nil
}
func (_becgc ST_ShowDataAs) String() string {
	switch _becgc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065"
	case 3:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 4:
		return "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066"
	case 5:
		return "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c"
	case 6:
		return "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077"
	case 7:
		return "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c"
	case 8:
		return "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c"
	case 9:
		return "\u0069\u006e\u0064e\u0078"
	}
	return ""
}

// ValidateWithPath validates the CT_GradientFill and its children, prefixing error messages with path
func (_ggcefg *CT_GradientFill) ValidateWithPath(path string) error {
	if _gdde := _ggcefg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gdde != nil {
		return _gdde
	}
	for _aabdgae, _ffag := range _ggcefg.Stop {
		if _gcaff := _ffag.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0053\u0074\u006f\u0070\u005b\u0025\u0064\u005d", path, _aabdgae)); _gcaff != nil {
			return _gcaff
		}
	}
	return nil
}

type CT_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}
type CT_CellXfs struct {

	// Format Count
	CountAttr *uint32

	// Format
	Xf []*CT_Xf
}

func (_dgcdc ST_Visibility) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dgcdc.String(), start)
}
func (_eccff *CT_Sheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _eccff.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _eccff.SheetIdAttr)})
	if _eccff.StateAttr != ST_SheetStateUnset {
		_decgc, _cdeeed := _eccff.StateAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _cdeeed != nil {
			return _cdeeed
		}
		start.Attr = append(start.Attr, _decgc)
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _eccff.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_CacheHierarchy() *CT_CacheHierarchy { _dgac := &CT_CacheHierarchy{}; return _dgac }

type CT_PhoneticPr struct {

	// Font Id
	FontIdAttr uint32

	// Character Type
	TypeAttr ST_PhoneticType

	// Alignment
	AlignmentAttr ST_PhoneticAlignment
}

// Validate validates the CT_ControlPr and its children
func (_eeeb *CT_ControlPr) Validate() error {
	return _eeeb.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072")
}
func (_bgcbf *ST_PivotAreaType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bgcbf = 0
	case "\u006e\u006f\u006e\u0065":
		*_bgcbf = 1
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_bgcbf = 2
	case "\u0064\u0061\u0074\u0061":
		*_bgcbf = 3
	case "\u0061\u006c\u006c":
		*_bgcbf = 4
	case "\u006f\u0072\u0069\u0067\u0069\u006e":
		*_bgcbf = 5
	case "\u0062\u0075\u0074\u0074\u006f\u006e":
		*_bgcbf = 6
	case "\u0074\u006f\u0070\u0045\u006e\u0064":
		*_bgcbf = 7
	case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_bgcbf = 8
	}
	return nil
}

type CT_WebPr struct {

	// XML Source
	XmlAttr *bool

	// Import XML Source Data
	SourceDataAttr *bool

	// Parse PRE
	ParsePreAttr *bool

	// Consecutive Delimiters
	ConsecutiveAttr *bool

	// Use First Row
	FirstRowAttr *bool

	// Created in Excel 97
	Xl97Attr *bool

	// Dates as Text
	TextDatesAttr *bool

	// Refreshed in Excel 2000
	Xl2000Attr *bool

	// URL
	UrlAttr *string

	// Web Post
	PostAttr *string

	// HTML Tables Only
	HtmlTablesAttr *bool

	// HTML Formatting Handling
	HtmlFormatAttr ST_HtmlFmt

	// Edit Query URL
	EditPageAttr *string

	// Tables
	Tables *CT_Tables
}

func (_ebdfc *ST_CellType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_decfe, _abbec := d.Token()
	if _abbec != nil {
		return _abbec
	}
	if _ffadg, _adaggf := _decfe.(_a.EndElement); _adaggf && _ffadg.Name == start.Name {
		*_ebdfc = 1
		return nil
	}
	if _ggebd, _egebe := _decfe.(_a.CharData); !_egebe {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _decfe)
	} else {
		switch string(_ggebd) {
		case "":
			*_ebdfc = 0
		case "\u0062":
			*_ebdfc = 1
		case "\u006e":
			*_ebdfc = 2
		case "\u0065":
			*_ebdfc = 3
		case "\u0073":
			*_ebdfc = 4
		case "\u0073\u0074\u0072":
			*_ebdfc = 5
		case "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r":
			*_ebdfc = 6
		}
	}
	_decfe, _abbec = d.Token()
	if _abbec != nil {
		return _abbec
	}
	if _cabgg, _bcabbb := _decfe.(_a.EndElement); _bcabbb && _cabgg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _decfe)
}

// Validate validates the CT_GradientFill and its children
func (_gdddbg *CT_GradientFill) Validate() error {
	return _gdddbg.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c")
}
func (_gfaed *Comments) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073"
	return _gfaed.CT_Comments.MarshalXML(e, start)
}

type ST_BorderStyle byte
type CT_PivotCacheRecords struct {

	// PivotCache Records Count
	CountAttr *uint32

	// PivotCache Record
	R []*CT_Record

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_fgega *CT_ColFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fgega.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fgega.CountAttr)})
	}
	e.EncodeToken(start)
	_gcbaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064"}}
	for _, _ffdb := range _fgega.Field {
		e.EncodeElement(_ffdb, _gcbaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dffca *ST_TotalsRowFunction) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bcbcfa, _cdged := d.Token()
	if _cdged != nil {
		return _cdged
	}
	if _geaegg, _fgfdb := _bcbcfa.(_a.EndElement); _fgfdb && _geaegg.Name == start.Name {
		*_dffca = 1
		return nil
	}
	if _ebbdc, _gcaagg := _bcbcfa.(_a.CharData); !_gcaagg {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcbcfa)
	} else {
		switch string(_ebbdc) {
		case "":
			*_dffca = 0
		case "\u006e\u006f\u006e\u0065":
			*_dffca = 1
		case "\u0073\u0075\u006d":
			*_dffca = 2
		case "\u006d\u0069\u006e":
			*_dffca = 3
		case "\u006d\u0061\u0078":
			*_dffca = 4
		case "\u0061v\u0065\u0072\u0061\u0067\u0065":
			*_dffca = 5
		case "\u0063\u006f\u0075n\u0074":
			*_dffca = 6
		case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
			*_dffca = 7
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_dffca = 8
		case "\u0076\u0061\u0072":
			*_dffca = 9
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_dffca = 10
		}
	}
	_bcbcfa, _cdged = d.Token()
	if _cdged != nil {
		return _cdged
	}
	if _geeab, _eedggc := _bcbcfa.(_a.EndElement); _eedggc && _geeab.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcbcfa)
}
func (_baaffc ST_RevisionAction) Validate() error { return _baaffc.ValidateWithPath("") }
func (_aaeff *CT_ExternalSheetDataSet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dbec:
	for {
		_fggea, _dgcb := d.Token()
		if _dgcb != nil {
			return _dgcb
		}
		switch _beabb := _fggea.(type) {
		case _a.StartElement:
			switch _beabb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				_faffd := NewCT_ExternalSheetData()
				if _cabg := d.DecodeElement(_faffd, &_beabb); _cabg != nil {
					return _cabg
				}
				_aaeff.SheetData = append(_aaeff.SheetData, _faffd)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053h\u0065\u0065\u0074\u0044\u0061\u0074a\u0053\u0065\u0074 \u0025\u0076", _beabb.Name)
				if _eddab := d.Skip(); _eddab != nil {
					return _eddab
				}
			}
		case _a.EndElement:
			break _dbec
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ChartsheetPr and its children
func (_eacf *CT_ChartsheetPr) Validate() error {
	return _eacf.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072")
}
func (_bacab *ST_FontScheme) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bacab = 0
	case "\u006e\u006f\u006e\u0065":
		*_bacab = 1
	case "\u006d\u0061\u006ao\u0072":
		*_bacab = 2
	case "\u006d\u0069\u006eo\u0072":
		*_bacab = 3
	}
	return nil
}

// Validate validates the CT_TextPr and its children
func (_gaabcga *CT_TextPr) Validate() error {
	return _gaabcga.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074\u0050r")
}

// ValidateWithPath validates the CT_PivotAreas and its children, prefixing error messages with path
func (_dgcee *CT_PivotAreas) ValidateWithPath(path string) error {
	for _aedaa, _fggab := range _dgcee.PivotArea {
		if _bgbcg := _fggab.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0050\u0069\u0076o\u0074\u0041\u0072\u0065\u0061\u005b\u0025\u0064\u005d", path, _aedaa)); _bgbcg != nil {
			return _bgbcg
		}
	}
	return nil
}
func (_ggacca *CT_PageField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acead := range start.Attr {
		if _acead.Name.Local == "\u0066\u006c\u0064" {
			_cbfbc, _deacb := _f.ParseInt(_acead.Value, 10, 32)
			if _deacb != nil {
				return _deacb
			}
			_ggacca.FldAttr = int32(_cbfbc)
			continue
		}
		if _acead.Name.Local == "\u0069\u0074\u0065\u006d" {
			_eeecb, _ddabe := _f.ParseUint(_acead.Value, 10, 32)
			if _ddabe != nil {
				return _ddabe
			}
			_bbgdc := uint32(_eeecb)
			_ggacca.ItemAttr = &_bbgdc
			continue
		}
		if _acead.Name.Local == "\u0068\u0069\u0065\u0072" {
			_ebabe, _ecfd := _f.ParseInt(_acead.Value, 10, 32)
			if _ecfd != nil {
				return _ecfd
			}
			_baefc := int32(_ebabe)
			_ggacca.HierAttr = &_baefc
			continue
		}
		if _acead.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ecdea, _cbgece := _acead.Value, error(nil)
			if _cbgece != nil {
				return _cbgece
			}
			_ggacca.NameAttr = &_ecdea
			continue
		}
		if _acead.Name.Local == "\u0063\u0061\u0070" {
			_gcdf, _ggdbb := _acead.Value, error(nil)
			if _ggdbb != nil {
				return _ggdbb
			}
			_ggacca.CapAttr = &_gcdf
			continue
		}
	}
_cgagf:
	for {
		_ecaffg, _eabgcb := d.Token()
		if _eabgcb != nil {
			return _eabgcb
		}
		switch _cgccd := _ecaffg.(type) {
		case _a.StartElement:
			switch _cgccd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggacca.ExtLst = NewCT_ExtensionList()
				if _aafff := d.DecodeElement(_ggacca.ExtLst, &_cgccd); _aafff != nil {
					return _aafff
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0061\u0067e\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _cgccd.Name)
				if _edbaf := d.Skip(); _edbaf != nil {
					return _edbaf
				}
			}
		case _a.EndElement:
			break _cgagf
		case _a.CharData:
		}
	}
	return nil
}
func (_fagcca ST_SortMethod) String() string {
	switch _fagcca {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u0072\u006f\u006b\u0065"
	case 2:
		return "\u0070\u0069\u006e\u0059\u0069\u006e"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

// ValidateWithPath validates the CT_ObjectAnchor and its children, prefixing error messages with path
func (_feeed *CT_ObjectAnchor) ValidateWithPath(path string) error {
	if _ecafe := _feeed.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _ecafe != nil {
		return _ecafe
	}
	if _bdedc := _feeed.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _bdedc != nil {
		return _bdedc
	}
	return nil
}
func (_cecc *CT_Chartsheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _cecc.SheetPr != nil {
		_eccd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_cecc.SheetPr, _eccd)
	}
	_dgfe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
	e.EncodeElement(_cecc.SheetViews, _dgfe)
	if _cecc.SheetProtection != nil {
		_aabbg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cecc.SheetProtection, _aabbg)
	}
	if _cecc.CustomSheetViews != nil {
		_cdacbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_cecc.CustomSheetViews, _cdacbd)
	}
	if _cecc.PageMargins != nil {
		_afgb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_cecc.PageMargins, _afgb)
	}
	if _cecc.PageSetup != nil {
		_beaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_cecc.PageSetup, _beaf)
	}
	if _cecc.HeaderFooter != nil {
		_edgaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_cecc.HeaderFooter, _edgaa)
	}
	_gfba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
	e.EncodeElement(_cecc.Drawing, _gfba)
	if _cecc.LegacyDrawing != nil {
		_bfag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_cecc.LegacyDrawing, _bfag)
	}
	if _cecc.LegacyDrawingHF != nil {
		_bfcd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_cecc.LegacyDrawingHF, _bfcd)
	}
	if _cecc.DrawingHF != nil {
		_ecbb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_cecc.DrawingHF, _ecbb)
	}
	if _cecc.Picture != nil {
		_cca := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_cecc.Picture, _cca)
	}
	if _cecc.WebPublishItems != nil {
		_baef := _a.StartElement{Name: _a.Name{Local: "\u006da\u003aw\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_cecc.WebPublishItems, _baef)
	}
	if _cecc.ExtLst != nil {
		_adff := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cecc.ExtLst, _adff)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ccagc *CT_SheetFormatPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ggfacf := range start.Attr {
		if _ggfacf.Name.Local == "\u0062\u0061\u0073e\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068" {
			_gffe, _adagae := _f.ParseUint(_ggfacf.Value, 10, 32)
			if _adagae != nil {
				return _adagae
			}
			_cfbca := uint32(_gffe)
			_ccagc.BaseColWidthAttr = &_cfbca
			continue
		}
		if _ggfacf.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068" {
			_gfdecg, _eebac := _f.ParseFloat(_ggfacf.Value, 64)
			if _eebac != nil {
				return _eebac
			}
			_ccagc.DefaultColWidthAttr = &_gfdecg
			continue
		}
		if _ggfacf.Name.Local == "\u0064\u0065f\u0061\u0075\u006ct\u0052\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_egdfgb, _agddg := _f.ParseFloat(_ggfacf.Value, 64)
			if _agddg != nil {
				return _agddg
			}
			_ccagc.DefaultRowHeightAttr = _egdfgb
			continue
		}
		if _ggfacf.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074" {
			_edbae, _fefef := _f.ParseBool(_ggfacf.Value)
			if _fefef != nil {
				return _fefef
			}
			_ccagc.CustomHeightAttr = &_edbae
			continue
		}
		if _ggfacf.Name.Local == "\u007a\u0065\u0072\u006f\u0048\u0065\u0069\u0067\u0068\u0074" {
			_dbgfdg, _afbcbd := _f.ParseBool(_ggfacf.Value)
			if _afbcbd != nil {
				return _afbcbd
			}
			_ccagc.ZeroHeightAttr = &_dbgfdg
			continue
		}
		if _ggfacf.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070" {
			_cdbdff, _bdcbd := _f.ParseBool(_ggfacf.Value)
			if _bdcbd != nil {
				return _bdcbd
			}
			_ccagc.ThickTopAttr = &_cdbdff
			continue
		}
		if _ggfacf.Name.Local == "t\u0068\u0069\u0063\u006b\u0042\u006f\u0074\u0074\u006f\u006d" {
			_agfad, _dffgg := _f.ParseBool(_ggfacf.Value)
			if _dffgg != nil {
				return _dffgg
			}
			_ccagc.ThickBottomAttr = &_agfad
			continue
		}
		if _ggfacf.Name.Local == "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0052\u006f\u0077" {
			_gfdef, _cecfg := _f.ParseUint(_ggfacf.Value, 10, 8)
			if _cecfg != nil {
				return _cecfg
			}
			_dgdaa := uint8(_gfdef)
			_ccagc.OutlineLevelRowAttr = &_dgdaa
			continue
		}
		if _ggfacf.Name.Local == "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006c" {
			_dcddb, _dgaad := _f.ParseUint(_ggfacf.Value, 10, 8)
			if _dgaad != nil {
				return _dgaad
			}
			_gaccg := uint8(_dcddb)
			_ccagc.OutlineLevelColAttr = &_gaccg
			continue
		}
	}
	for {
		_cebf, _fgcegb := d.Token()
		if _fgcegb != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065t\u0046o\u0072\u006d\u0061\u0074\u0050\u0072\u003a \u0025\u0073", _fgcegb)
		}
		if _cccab, _agbafg := _cebf.(_a.EndElement); _agbafg && _cccab.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_ExternalConnectionTypeUnset   ST_ExternalConnectionType = 0
	ST_ExternalConnectionTypeGeneral ST_ExternalConnectionType = 1
	ST_ExternalConnectionTypeText    ST_ExternalConnectionType = 2
	ST_ExternalConnectionTypeMDY     ST_ExternalConnectionType = 3
	ST_ExternalConnectionTypeDMY     ST_ExternalConnectionType = 4
	ST_ExternalConnectionTypeYMD     ST_ExternalConnectionType = 5
	ST_ExternalConnectionTypeMYD     ST_ExternalConnectionType = 6
	ST_ExternalConnectionTypeDYM     ST_ExternalConnectionType = 7
	ST_ExternalConnectionTypeYDM     ST_ExternalConnectionType = 8
	ST_ExternalConnectionTypeSkip    ST_ExternalConnectionType = 9
	ST_ExternalConnectionTypeEMD     ST_ExternalConnectionType = 10
)

func (_debdc *CT_SheetPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _debdc.SyncHorizontalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0079\u006e\u0063\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_debdc.SyncHorizontalAttr))})
	}
	if _debdc.SyncVerticalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0079\u006ec\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_debdc.SyncVerticalAttr))})
	}
	if _debdc.SyncRefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073y\u006e\u0063\u0052\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_debdc.SyncRefAttr)})
	}
	if _debdc.TransitionEvaluationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0045v\u0061\u006c\u0075\u0061ti\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_debdc.TransitionEvaluationAttr))})
	}
	if _debdc.TransitionEntryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074r\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0045\u006e\u0074\u0072\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_debdc.TransitionEntryAttr))})
	}
	if _debdc.PublishedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_debdc.PublishedAttr))})
	}
	if _debdc.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_debdc.CodeNameAttr)})
	}
	if _debdc.FilterModeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072\u004d\u006f\u0064\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_debdc.FilterModeAttr))})
	}
	if _debdc.EnableFormatConditionsCalculationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006e\u0061\u0062\u006c\u0065F\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0073\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_debdc.EnableFormatConditionsCalculationAttr))})
	}
	e.EncodeToken(start)
	if _debdc.TabColor != nil {
		_ddcca := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_debdc.TabColor, _ddcca)
	}
	if _debdc.OutlinePr != nil {
		_gdfada := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ao\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072"}}
		e.EncodeElement(_debdc.OutlinePr, _gdfada)
	}
	if _debdc.PageSetUpPr != nil {
		_aeaae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072"}}
		e.EncodeElement(_debdc.PageSetUpPr, _aeaae)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MdxSet and its children
func (_cdfgf *CT_MdxSet) Validate() error {
	return _cdfgf.ValidateWithPath("\u0043T\u005f\u004d\u0064\u0078\u0053\u0065t")
}

// ValidateWithPath validates the CT_CalcCell and its children, prefixing error messages with path
func (_bbea *CT_CalcCell) ValidateWithPath(path string) error { return nil }
func (_bcbad *ST_PageOrder) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bfgbad, _ddbfee := d.Token()
	if _ddbfee != nil {
		return _ddbfee
	}
	if _edadf, _aabbab := _bfgbad.(_a.EndElement); _aabbab && _edadf.Name == start.Name {
		*_bcbad = 1
		return nil
	}
	if _ceadcd, _accbce := _bfgbad.(_a.CharData); !_accbce {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfgbad)
	} else {
		switch string(_ceadcd) {
		case "":
			*_bcbad = 0
		case "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072":
			*_bcbad = 1
		case "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e":
			*_bcbad = 2
		}
	}
	_bfgbad, _ddbfee = d.Token()
	if _ddbfee != nil {
		return _ddbfee
	}
	if _eccccc, _cdbce := _bfgbad.(_a.EndElement); _cdbce && _eccccc.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfgbad)
}
func (_gecfdg *CT_PageSetup) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _beffa := range start.Attr {
		if _beffa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _beffa.Name.Local == "\u0069\u0064" || _beffa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _beffa.Name.Local == "\u0069\u0064" {
			_ecbcd, _ebaeg := _beffa.Value, error(nil)
			if _ebaeg != nil {
				return _ebaeg
			}
			_gecfdg.IdAttr = &_ecbcd
			continue
		}
		if _beffa.Name.Local == "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae" {
			_bbebd, _fgeb := _f.ParseUint(_beffa.Value, 10, 32)
			if _fgeb != nil {
				return _fgeb
			}
			_acgab := uint32(_bbebd)
			_gecfdg.PaperSizeAttr = &_acgab
			continue
		}
		if _beffa.Name.Local == "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065" {
			_cdefe, _fccddc := _f.ParseBool(_beffa.Value)
			if _fccddc != nil {
				return _fccddc
			}
			_gecfdg.BlackAndWhiteAttr = &_cdefe
			continue
		}
		if _beffa.Name.Local == "\u0064\u0072\u0061f\u0074" {
			_efedg, _cegac := _f.ParseBool(_beffa.Value)
			if _cegac != nil {
				return _cegac
			}
			_gecfdg.DraftAttr = &_efedg
			continue
		}
		if _beffa.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_accfe, _bbaba := _f.ParseUint(_beffa.Value, 10, 32)
			if _bbaba != nil {
				return _bbaba
			}
			_befa := uint32(_accfe)
			_gecfdg.ScaleAttr = &_befa
			continue
		}
		if _beffa.Name.Local == "\u0063\u0065\u006cl\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_gecfdg.CellCommentsAttr.UnmarshalXMLAttr(_beffa)
			continue
		}
		if _beffa.Name.Local == "\u0066\u0069\u0074\u0054\u006f\u0057\u0069\u0064\u0074\u0068" {
			_gfcbf, _gfeeg := _f.ParseUint(_beffa.Value, 10, 32)
			if _gfeeg != nil {
				return _gfeeg
			}
			_ecdcb := uint32(_gfcbf)
			_gecfdg.FitToWidthAttr = &_ecdcb
			continue
		}
		if _beffa.Name.Local == "\u0070a\u0067\u0065\u004f\u0072\u0064\u0065r" {
			_gecfdg.PageOrderAttr.UnmarshalXMLAttr(_beffa)
			continue
		}
		if _beffa.Name.Local == "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e" {
			_gecfdg.OrientationAttr.UnmarshalXMLAttr(_beffa)
			continue
		}
		if _beffa.Name.Local == "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074" {
			_gceedg, _ddccb := _beffa.Value, error(nil)
			if _ddccb != nil {
				return _ddccb
			}
			_gecfdg.PaperHeightAttr = &_gceedg
			continue
		}
		if _beffa.Name.Local == "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068" {
			_gddcae, _gecef := _beffa.Value, error(nil)
			if _gecef != nil {
				return _gecef
			}
			_gecfdg.PaperWidthAttr = &_gddcae
			continue
		}
		if _beffa.Name.Local == "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072" {
			_aagfcf, _gdfce := _f.ParseUint(_beffa.Value, 10, 32)
			if _gdfce != nil {
				return _gdfce
			}
			_gcbab := uint32(_aagfcf)
			_gecfdg.FirstPageNumberAttr = &_gcbab
			continue
		}
		if _beffa.Name.Local == "f\u0069\u0074\u0054\u006f\u0048\u0065\u0069\u0067\u0068\u0074" {
			_aeccc, _fcegd := _f.ParseUint(_beffa.Value, 10, 32)
			if _fcegd != nil {
				return _fcegd
			}
			_acbag := uint32(_aeccc)
			_gecfdg.FitToHeightAttr = &_acbag
			continue
		}
		if _beffa.Name.Local == "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072" {
			_bfcga, _egbeg := _f.ParseBool(_beffa.Value)
			if _egbeg != nil {
				return _egbeg
			}
			_gecfdg.UseFirstPageNumberAttr = &_bfcga
			continue
		}
		if _beffa.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0073" {
			_gecfdg.ErrorsAttr.UnmarshalXMLAttr(_beffa)
			continue
		}
		if _beffa.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069" {
			_gdcaac, _faaebg := _f.ParseUint(_beffa.Value, 10, 32)
			if _faaebg != nil {
				return _faaebg
			}
			_gfegd := uint32(_gdcaac)
			_gecfdg.HorizontalDpiAttr = &_gfegd
			continue
		}
		if _beffa.Name.Local == "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069" {
			_cfdeg, _beabf := _f.ParseUint(_beffa.Value, 10, 32)
			if _beabf != nil {
				return _beabf
			}
			_fdcdg := uint32(_cfdeg)
			_gecfdg.VerticalDpiAttr = &_fdcdg
			continue
		}
		if _beffa.Name.Local == "\u0063\u006f\u0070\u0069\u0065\u0073" {
			_abgfc, _gedbb := _f.ParseUint(_beffa.Value, 10, 32)
			if _gedbb != nil {
				return _gedbb
			}
			_gdbde := uint32(_abgfc)
			_gecfdg.CopiesAttr = &_gdbde
			continue
		}
		if _beffa.Name.Local == "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073" {
			_cfbag, _dgfdf := _f.ParseBool(_beffa.Value)
			if _dgfdf != nil {
				return _dgfdf
			}
			_gecfdg.UsePrinterDefaultsAttr = &_cfbag
			continue
		}
	}
	for {
		_gdgeaa, _debcf := d.Token()
		if _debcf != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061g\u0065\u0053\u0065\u0074\u0075\u0070\u003a\u0020\u0025\u0073", _debcf)
		}
		if _abaa, _bbgff := _gdgeaa.(_a.EndElement); _bbgff && _abaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_acddg ST_MdxKPIProperty) String() string {
	switch _acddg {
	case 0:
		return ""
	case 1:
		return "\u0076"
	case 2:
		return "\u0067"
	case 3:
		return "\u0073"
	case 4:
		return "\u0074"
	case 5:
		return "\u0077"
	case 6:
		return "\u006d"
	}
	return ""
}

type CT_ConditionalFormat struct {

	// Conditional Formatting Scope
	ScopeAttr ST_Scope

	// Conditional Formatting Rule Type
	TypeAttr ST_Type

	// Priority
	PriorityAttr uint32

	// Pivot Areas
	PivotAreas *CT_PivotAreas
	ExtLst     *CT_ExtensionList
}

func (_adcecb *CT_PCDSCPage) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cgbe := range start.Attr {
		if _cgbe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gfeab, _cfbbf := _f.ParseUint(_cgbe.Value, 10, 32)
			if _cfbbf != nil {
				return _cfbbf
			}
			_dbbed := uint32(_gfeab)
			_adcecb.CountAttr = &_dbbed
			continue
		}
	}
_fagac:
	for {
		_fdeedd, _bbgec := d.Token()
		if _bbgec != nil {
			return _bbgec
		}
		switch _gbbe := _fdeedd.(type) {
		case _a.StartElement:
			switch _gbbe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}:
				_gaded := NewCT_PageItem()
				if _gccaf := d.DecodeElement(_gaded, &_gbbe); _gccaf != nil {
					return _gccaf
				}
				_adcecb.PageItem = append(_adcecb.PageItem, _gaded)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0043\u0044S\u0043\u0050\u0061\u0067\u0065\u0020\u0025\u0076", _gbbe.Name)
				if _affca := d.Skip(); _affca != nil {
					return _affca
				}
			}
		case _a.EndElement:
			break _fagac
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_BooleanProperty and its children
func (_bfd *CT_BooleanProperty) Validate() error {
	return _bfd.ValidateWithPath("\u0043T\u005fB\u006f\u006f\u006c\u0065\u0061n\u0050\u0072o\u0070\u0065\u0072\u0074\u0079")
}
func NewSingleXmlCells() *SingleXmlCells {
	_eeadcd := &SingleXmlCells{}
	_eeadcd.CT_SingleXmlCells = *NewCT_SingleXmlCells()
	return _eeadcd
}

// ValidateWithPath validates the CT_IgnoredError and its children, prefixing error messages with path
func (_dfcfg *CT_IgnoredError) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Pages and its children
func (_beada *CT_Pages) Validate() error {
	return _beada.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073")
}
func (_begdf *CT_RevisionCustomView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _begdf.GuidAttr)})
	_bcade, _edgffb := _begdf.ActionAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
	if _edgffb != nil {
		return _edgffb
	}
	start.Attr = append(start.Attr, _bcade)
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ebdfdf ST_ItemType) String() string {
	switch _ebdfdf {
	case 0:
		return ""
	case 1:
		return "\u0064\u0061\u0074\u0061"
	case 2:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 3:
		return "\u0073\u0075\u006d"
	case 4:
		return "\u0063\u006f\u0075\u006e\u0074\u0041"
	case 5:
		return "\u0061\u0076\u0067"
	case 6:
		return "\u006d\u0061\u0078"
	case 7:
		return "\u006d\u0069\u006e"
	case 8:
		return "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case 9:
		return "\u0063\u006f\u0075n\u0074"
	case 10:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 11:
		return "\u0073t\u0064\u0044\u0065\u0076\u0050"
	case 12:
		return "\u0076\u0061\u0072"
	case 13:
		return "\u0076\u0061\u0072\u0050"
	case 14:
		return "\u0067\u0072\u0061n\u0064"
	case 15:
		return "\u0062\u006c\u0061n\u006b"
	}
	return ""
}

// ValidateWithPath validates the CT_PivotFilter and its children, prefixing error messages with path
func (_eafcb *CT_PivotFilter) ValidateWithPath(path string) error {
	if _eafcb.TypeAttr == ST_PivotFilterTypeUnset {
		return _fc.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bbefb := _eafcb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bbefb != nil {
		return _bbefb
	}
	if _acggg := _eafcb.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _acggg != nil {
		return _acggg
	}
	if _eafcb.ExtLst != nil {
		if _eacee := _eafcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eacee != nil {
			return _eacee
		}
	}
	return nil
}
func (_fdaad ST_GroupBy) ValidateWithPath(path string) error {
	switch _fdaad {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdaad))
	}
	return nil
}
func (_efabe *CT_RevisionHeaders) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _efabe.GuidAttr)})
	if _efabe.LastGuidAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_efabe.LastGuidAttr)})
	}
	if _efabe.SharedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u0061\u0072\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efabe.SharedAttr))})
	}
	if _efabe.DiskRevisionsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efabe.DiskRevisionsAttr))})
	}
	if _efabe.HistoryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068i\u0073\u0074\u006f\u0072\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efabe.HistoryAttr))})
	}
	if _efabe.TrackRevisionsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efabe.TrackRevisionsAttr))})
	}
	if _efabe.ExclusiveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efabe.ExclusiveAttr))})
	}
	if _efabe.RevisionIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_efabe.RevisionIdAttr)})
	}
	if _efabe.VersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076e\u0072\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_efabe.VersionAttr)})
	}
	if _efabe.KeepChangeHistoryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efabe.KeepChangeHistoryAttr))})
	}
	if _efabe.ProtectedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_efabe.ProtectedAttr))})
	}
	if _efabe.PreserveHistoryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079"}, Value: _fc.Sprintf("\u0025\u0076", *_efabe.PreserveHistoryAttr)})
	}
	e.EncodeToken(start)
	_bfbed := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0068\u0065\u0061\u0064\u0065r"}}
	for _, _ffeac := range _efabe.Header {
		e.EncodeElement(_ffeac, _bfbed)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_DbPr struct {

	// Connection String
	ConnectionAttr string

	// Command Text
	CommandAttr *string

	// Command Text
	ServerCommandAttr *string

	// OLE DB Command Type
	CommandTypeAttr *uint32
}

func (_ebdcb *CT_GroupItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gdee := range start.Attr {
		if _gdee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebbec, _abcd := _f.ParseUint(_gdee.Value, 10, 32)
			if _abcd != nil {
				return _abcd
			}
			_ceead := uint32(_ebbec)
			_ebdcb.CountAttr = &_ceead
			continue
		}
	}
_bebfb:
	for {
		_daccg, _gcff := d.Token()
		if _gcff != nil {
			return _gcff
		}
		switch _eddg := _daccg.(type) {
		case _a.StartElement:
			switch _eddg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_afda := NewCT_Missing()
				if _facbe := d.DecodeElement(_afda, &_eddg); _facbe != nil {
					return _facbe
				}
				_ebdcb.M = append(_ebdcb.M, _afda)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_eegc := NewCT_Number()
				if _cced := d.DecodeElement(_eegc, &_eddg); _cced != nil {
					return _cced
				}
				_ebdcb.N = append(_ebdcb.N, _eegc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_ffdfg := NewCT_Boolean()
				if _abbee := d.DecodeElement(_ffdfg, &_eddg); _abbee != nil {
					return _abbee
				}
				_ebdcb.B = append(_ebdcb.B, _ffdfg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_afabde := NewCT_Error()
				if _adfbg := d.DecodeElement(_afabde, &_eddg); _adfbg != nil {
					return _adfbg
				}
				_ebdcb.E = append(_ebdcb.E, _afabde)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_bbgbd := NewCT_String()
				if _bfaga := d.DecodeElement(_bbgbd, &_eddg); _bfaga != nil {
					return _bfaga
				}
				_ebdcb.S = append(_ebdcb.S, _bbgbd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_gadef := NewCT_DateTime()
				if _bcdc := d.DecodeElement(_gadef, &_eddg); _bcdc != nil {
					return _bcdc
				}
				_ebdcb.D = append(_ebdcb.D, _gadef)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073 \u0025\u0076", _eddg.Name)
				if _ebdf := d.Skip(); _ebdf != nil {
					return _ebdf
				}
			}
		case _a.EndElement:
			break _bebfb
		case _a.CharData:
		}
	}
	return nil
}
func (_aafb *CT_MetadataStringIndex) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078"}, Value: _fc.Sprintf("\u0025\u0076", _aafb.XAttr)})
	if _aafb.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aafb.SAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eebebe *CT_XmlPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0070I\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _eebebe.MapIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0070\u0061t\u0068"}, Value: _fc.Sprintf("\u0025\u0076", _eebebe.XpathAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _eebebe.XmlDataTypeAttr)})
	e.EncodeToken(start)
	if _eebebe.ExtLst != nil {
		_aaddc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eebebe.ExtLst, _aaddc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DiscretePr and its children
func (_eabf *CT_DiscretePr) Validate() error {
	return _eabf.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072")
}
func (_aagedc *CT_Top10) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aagedc.TopAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0070"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aagedc.TopAttr))})
	}
	if _aagedc.PercentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_aagedc.PercentAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", _aagedc.ValAttr)})
	if _aagedc.FilterValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066i\u006c\u0074\u0065\u0072\u0056\u0061l"}, Value: _fc.Sprintf("\u0025\u0076", *_aagedc.FilterValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MemberProperties and its children, prefixing error messages with path
func (_bccd *CT_MemberProperties) ValidateWithPath(path string) error {
	for _beaec, _eadee := range _bccd.Mp {
		if _edaccf := _eadee.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u004d\u0070\u005b\u0025\u0064]", path, _beaec)); _edaccf != nil {
			return _edaccf
		}
	}
	return nil
}
func (_cbaac *CT_LevelGroup) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _cbaac.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _cbaac.UniqueNameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _cbaac.CaptionAttr)})
	if _cbaac.UniqueParentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069q\u0075\u0065\u0050\u0061\u0072\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cbaac.UniqueParentAttr)})
	}
	if _cbaac.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_cbaac.IdAttr)})
	}
	e.EncodeToken(start)
	_eedb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ag\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}}
	e.EncodeElement(_cbaac.GroupMembers, _eedb)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gdbbb ST_PrintError) String() string {
	switch _gdbbb {
	case 0:
		return ""
	case 1:
		return "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d"
	case 2:
		return "\u0062\u006c\u0061n\u006b"
	case 3:
		return "\u0064\u0061\u0073\u0068"
	case 4:
		return "\u004e\u0041"
	}
	return ""
}
func (_afbcf *CT_CalculatedItem) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _afbcf.FieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_afbcf.FieldAttr)})
	}
	if _afbcf.FormulaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _fc.Sprintf("\u0025\u0076", *_afbcf.FormulaAttr)})
	}
	e.EncodeToken(start)
	_eace := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_afbcf.PivotArea, _eace)
	if _afbcf.ExtLst != nil {
		_cgb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_afbcf.ExtLst, _cgb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_GradientStop() *CT_GradientStop {
	_fbfg := &CT_GradientStop{}
	_fbfg.Color = NewCT_Color()
	return _fbfg
}
func (_afcea *ST_HorizontalAlignment) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bfeeb, _ffbcc := d.Token()
	if _ffbcc != nil {
		return _ffbcc
	}
	if _geeec, _dgdedd := _bfeeb.(_a.EndElement); _dgdedd && _geeec.Name == start.Name {
		*_afcea = 1
		return nil
	}
	if _dfdff, _ggddea := _bfeeb.(_a.CharData); !_ggddea {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfeeb)
	} else {
		switch string(_dfdff) {
		case "":
			*_afcea = 0
		case "\u0067e\u006e\u0065\u0072\u0061\u006c":
			*_afcea = 1
		case "\u006c\u0065\u0066\u0074":
			*_afcea = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_afcea = 3
		case "\u0072\u0069\u0067h\u0074":
			*_afcea = 4
		case "\u0066\u0069\u006c\u006c":
			*_afcea = 5
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_afcea = 6
		case "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073":
			*_afcea = 7
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_afcea = 8
		}
	}
	_bfeeb, _ffbcc = d.Token()
	if _ffbcc != nil {
		return _ffbcc
	}
	if _bggdc, _cgdcga := _bfeeb.(_a.EndElement); _cgdcga && _bggdc.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfeeb)
}

// Validate validates the CT_SheetViews and its children
func (_cdeff *CT_SheetViews) Validate() error {
	return _cdeff.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}
func NewCT_TableFormula() *CT_TableFormula { _cbbeab := &CT_TableFormula{}; return _cbbeab }

type CT_ConditionalFormats struct {

	// Conditional Format Count
	CountAttr *uint32

	// Conditional Formatting
	ConditionalFormat []*CT_ConditionalFormat
}

func (_eeddad ST_TargetScreenSize) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_eeddad.String(), start)
}

// Validate validates the CT_Hyperlinks and its children
func (_dcdcaa *CT_Hyperlinks) Validate() error {
	return _dcdcaa.ValidateWithPath("\u0043\u0054\u005f\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073")
}

type CT_MergeCells struct {

	// Count
	CountAttr *uint32

	// Merged Cell
	MergeCell []*CT_MergeCell
}

func (_egdcbe ST_TableType) ValidateWithPath(path string) error {
	switch _egdcbe {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egdcbe))
	}
	return nil
}
func NewCT_Row() *CT_Row { _gagae := &CT_Row{}; return _gagae }

type ST_CellType byte

func (_acaea ST_ShowDataAs) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dccfac := _a.Attr{}
	_dccfac.Name = name
	switch _acaea {
	case ST_ShowDataAsUnset:
		_dccfac.Value = ""
	case ST_ShowDataAsNormal:
		_dccfac.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_ShowDataAsDifference:
		_dccfac.Value = "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065"
	case ST_ShowDataAsPercent:
		_dccfac.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_ShowDataAsPercentDiff:
		_dccfac.Value = "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066"
	case ST_ShowDataAsRunTotal:
		_dccfac.Value = "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c"
	case ST_ShowDataAsPercentOfRow:
		_dccfac.Value = "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077"
	case ST_ShowDataAsPercentOfCol:
		_dccfac.Value = "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c"
	case ST_ShowDataAsPercentOfTotal:
		_dccfac.Value = "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c"
	case ST_ShowDataAsIndex:
		_dccfac.Value = "\u0069\u006e\u0064e\u0078"
	}
	return _dccfac, nil
}

// Validate validates the CT_MetadataStringIndex and its children
func (_bgbad *CT_MetadataStringIndex) Validate() error {
	return _bgbad.ValidateWithPath("\u0043\u0054\u005f\u004det\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0049\u006e\u0064e\u0078")
}
func (_fbdgeg *ST_Axis) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gfbdg, _daebea := d.Token()
	if _daebea != nil {
		return _daebea
	}
	if _abgdg, _gaefd := _gfbdg.(_a.EndElement); _gaefd && _abgdg.Name == start.Name {
		*_fbdgeg = 1
		return nil
	}
	if _bcbeab, _gfecb := _gfbdg.(_a.CharData); !_gfecb {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfbdg)
	} else {
		switch string(_bcbeab) {
		case "":
			*_fbdgeg = 0
		case "\u0061x\u0069\u0073\u0052\u006f\u0077":
			*_fbdgeg = 1
		case "\u0061x\u0069\u0073\u0043\u006f\u006c":
			*_fbdgeg = 2
		case "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065":
			*_fbdgeg = 3
		case "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073":
			*_fbdgeg = 4
		}
	}
	_gfbdg, _daebea = d.Token()
	if _daebea != nil {
		return _daebea
	}
	if _afdad, _accgd := _gfbdg.(_a.EndElement); _accgd && _afdad.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfbdg)
}
func (_bbebdd *ST_RevisionAction) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bbebdd = 0
	case "\u0061\u0064\u0064":
		*_bbebdd = 1
	case "\u0064\u0065\u006c\u0065\u0074\u0065":
		*_bbebdd = 2
	}
	return nil
}

// ValidateWithPath validates the CT_Pane and its children, prefixing error messages with path
func (_aadff *CT_Pane) ValidateWithPath(path string) error {
	if _bcecfd := _aadff.ActivePaneAttr.ValidateWithPath(path + "\u002fA\u0063t\u0069\u0076\u0065\u0050\u0061\u006e\u0065\u0041\u0074\u0074\u0072"); _bcecfd != nil {
		return _bcecfd
	}
	if _eedce := _aadff.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _eedce != nil {
		return _eedce
	}
	return nil
}

// Validate validates the CT_MergeCell and its children
func (_fceef *CT_MergeCell) Validate() error {
	return _fceef.ValidateWithPath("\u0043\u0054\u005fM\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c")
}

// ValidateWithPath validates the CT_AutoFilter and its children, prefixing error messages with path
func (_dgd *CT_AutoFilter) ValidateWithPath(path string) error {
	for _gc, _adc := range _dgd.FilterColumn {
		if _dea := _adc.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0046il\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u005b\u0025\u0064\u005d", path, _gc)); _dea != nil {
			return _dea
		}
	}
	if _dgd.SortState != nil {
		if _aec := _dgd.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _aec != nil {
			return _aec
		}
	}
	if _dgd.ExtLst != nil {
		if _eef := _dgd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eef != nil {
			return _eef
		}
	}
	return nil
}

type CT_CellProtection struct {

	// Cell Locked
	LockedAttr *bool

	// Hidden Cell
	HiddenAttr *bool
}

func (_aefa *CT_SmartTags) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_abfcge:
	for {
		_fcefgb, _afdba := d.Token()
		if _afdba != nil {
			return _afdba
		}
		switch _ggdda := _fcefgb.(type) {
		case _a.StartElement:
			switch _ggdda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}:
				_ecfab := NewCT_CellSmartTags()
				if _gecbg := d.DecodeElement(_ecfab, &_ggdda); _gecbg != nil {
					return _gecbg
				}
				_aefa.CellSmartTags = append(_aefa.CellSmartTags, _ecfab)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u006d\u0061r\u0074\u0054\u0061\u0067\u0073\u0020\u0025\u0076", _ggdda.Name)
				if _fbadg := d.Skip(); _fbadg != nil {
					return _fbadg
				}
			}
		case _a.EndElement:
			break _abfcge
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the PivotTableDefinition and its children
func (_bdadbe *PivotTableDefinition) Validate() error {
	return _bdadbe.ValidateWithPath("P\u0069v\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e")
}
func (_dbccd ST_VerticalAlignment) Validate() error { return _dbccd.ValidateWithPath("") }
func (_edadff ST_GradientType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_abgcba := _a.Attr{}
	_abgcba.Name = name
	switch _edadff {
	case ST_GradientTypeUnset:
		_abgcba.Value = ""
	case ST_GradientTypeLinear:
		_abgcba.Value = "\u006c\u0069\u006e\u0065\u0061\u0072"
	case ST_GradientTypePath:
		_abgcba.Value = "\u0070\u0061\u0074\u0068"
	}
	return _abgcba, nil
}
func NewCT_ColorScale() *CT_ColorScale { _bggf := &CT_ColorScale{}; return _bggf }

type CT_FontScheme struct {

	// Font Scheme
	ValAttr ST_FontScheme
}

// ValidateWithPath validates the CT_ExternalLinkChoice and its children, prefixing error messages with path
func (_fcfab *CT_ExternalLinkChoice) ValidateWithPath(path string) error {
	if _fcfab.ExternalBook != nil {
		if _eebf := _fcfab.ExternalBook.ValidateWithPath(path + "\u002f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"); _eebf != nil {
			return _eebf
		}
	}
	if _fcfab.DdeLink != nil {
		if _aefdd := _fcfab.DdeLink.ValidateWithPath(path + "\u002f\u0044\u0064\u0065\u004c\u0069\u006e\u006b"); _aefdd != nil {
			return _aefdd
		}
	}
	if _fcfab.OleLink != nil {
		if _faggc := _fcfab.OleLink.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u004c\u0069\u006e\u006b"); _faggc != nil {
			return _faggc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Filter and its children, prefixing error messages with path
func (_dedgg *CT_Filter) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_SheetFormatPr and its children
func (_ddcfa *CT_SheetFormatPr) Validate() error {
	return _ddcfa.ValidateWithPath("\u0043\u0054_\u0053\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072")
}
func (_fdaab ST_MdxKPIProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fdaab.String(), start)
}

type CT_Connection struct {

	// Connection Id
	IdAttr uint32

	// Source Database File
	SourceFileAttr *string

	// Connection File
	OdcFileAttr *string

	// Keep Connection Open
	KeepAliveAttr *bool

	// Automatic Refresh Interval
	IntervalAttr *uint32

	// Connection Name
	NameAttr *string

	// Connection Description
	DescriptionAttr *string

	// Database Source Type
	TypeAttr *uint32

	// Reconnection Method
	ReconnectionMethodAttr *uint32

	// Last Refresh Version
	RefreshedVersionAttr uint8

	// Minimum Version Required for Refresh
	MinRefreshableVersionAttr *uint8

	// Save Password
	SavePasswordAttr *bool

	// New Connection
	NewAttr *bool

	// Deleted Connection
	DeletedAttr *bool

	// Only Use Connection File
	OnlyUseConnectionFileAttr *bool

	// Background Refresh
	BackgroundAttr *bool

	// Refresh on Open
	RefreshOnLoadAttr *bool

	// Save Data
	SaveDataAttr *bool

	// Reconnection Method
	CredentialsAttr ST_CredMethod

	// SSO Id
	SingleSignOnIdAttr *string

	// Database Properties
	DbPr *CT_DbPr

	// OLAP Properties
	OlapPr *CT_OlapPr

	// Web Query Properties
	WebPr *CT_WebPr

	// Text Import Settings
	TextPr *CT_TextPr

	// Query Parameters
	Parameters *CT_Parameters

	// Future Feature Data Storage
	ExtLst *CT_ExtensionList
}
type CT_DdeValue struct {

	// DDE Value Type
	TAttr ST_DdeValueType

	// DDE Link Value
	Val string
}

// Validate validates the CT_MetadataBlock and its children
func (_fedab *CT_MetadataBlock) Validate() error {
	return _fedab.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b")
}

const (
	ST_FontSchemeUnset ST_FontScheme = 0
	ST_FontSchemeNone  ST_FontScheme = 1
	ST_FontSchemeMajor ST_FontScheme = 2
	ST_FontSchemeMinor ST_FontScheme = 3
)

// ValidateWithPath validates the CT_PageItem and its children, prefixing error messages with path
func (_bbebc *CT_PageItem) ValidateWithPath(path string) error { return nil }
func (_fcebg *CT_ExternalRow) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fc.Sprintf("\u0025\u0076", _fcebg.RAttr)})
	e.EncodeToken(start)
	if _fcebg.Cell != nil {
		_aggfa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0063\u0065\u006c\u006c"}}
		for _, _fbfbd := range _fcebg.Cell {
			e.EncodeElement(_fbfbd, _aggfa)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gegabe ST_CellFormulaType) String() string {
	switch _gegabe {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0061\u0072\u0072a\u0079"
	case 3:
		return "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce"
	case 4:
		return "\u0073\u0068\u0061\u0072\u0065\u0064"
	}
	return ""
}
func (_ggdfdf *Sst) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ggdfdf.CT_Sst = *NewCT_Sst()
	for _, _fggfg := range start.Attr {
		if _fggfg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dbbaf, _ebbddb := _f.ParseUint(_fggfg.Value, 10, 32)
			if _ebbddb != nil {
				return _ebbddb
			}
			_eaegaa := uint32(_dbbaf)
			_ggdfdf.CountAttr = &_eaegaa
			continue
		}
		if _fggfg.Name.Local == "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074" {
			_adbfd, _ceddc := _f.ParseUint(_fggfg.Value, 10, 32)
			if _ceddc != nil {
				return _ceddc
			}
			_cbabd := uint32(_adbfd)
			_ggdfdf.UniqueCountAttr = &_cbabd
			continue
		}
	}
_ccddea:
	for {
		_ffdge, _affdd := d.Token()
		if _affdd != nil {
			return _affdd
		}
		switch _cdcfg := _ffdge.(type) {
		case _a.StartElement:
			switch _cdcfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}:
				_eaeae := NewCT_Rst()
				if _dbbccf := d.DecodeElement(_eaeae, &_cdcfg); _dbbccf != nil {
					return _dbbccf
				}
				_ggdfdf.Si = append(_ggdfdf.Si, _eaeae)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggdfdf.ExtLst = NewCT_ExtensionList()
				if _efefcg := d.DecodeElement(_ggdfdf.ExtLst, &_cdcfg); _efefcg != nil {
					return _efefcg
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0053s\u0074\u0020\u0025\u0076", _cdcfg.Name)
				if _ggefbg := d.Skip(); _ggefbg != nil {
					return _ggefbg
				}
			}
		case _a.EndElement:
			break _ccddea
		case _a.CharData:
		}
	}
	return nil
}
func (_fbab *CT_CalculatedItem) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fbab.PivotArea = NewCT_PivotArea()
	for _, _ecfe := range start.Attr {
		if _ecfe.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_bce, _baad := _f.ParseUint(_ecfe.Value, 10, 32)
			if _baad != nil {
				return _baad
			}
			_eada := uint32(_bce)
			_fbab.FieldAttr = &_eada
			continue
		}
		if _ecfe.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_ffab, _fcfe := _ecfe.Value, error(nil)
			if _fcfe != nil {
				return _fcfe
			}
			_fbab.FormulaAttr = &_ffab
			continue
		}
	}
_bcf:
	for {
		_fcefg, _ffef := d.Token()
		if _ffef != nil {
			return _ffef
		}
		switch _fdgb := _fcefg.(type) {
		case _a.StartElement:
			switch _fdgb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _dbed := d.DecodeElement(_fbab.PivotArea, &_fdgb); _dbed != nil {
					return _dbed
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbab.ExtLst = NewCT_ExtensionList()
				if _fgge := d.DecodeElement(_fbab.ExtLst, &_fdgb); _fgge != nil {
					return _fgge
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _fdgb.Name)
				if _gdec := d.Skip(); _gdec != nil {
					return _gdec
				}
			}
		case _a.EndElement:
			break _bcf
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomChartsheetViews and its children, prefixing error messages with path
func (_bfeff *CT_CustomChartsheetViews) ValidateWithPath(path string) error {
	for _ddca, _fbcdb := range _bfeff.CustomSheetView {
		if _fabbb := _fbcdb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u005b\u0025d\u005d", path, _ddca)); _fabbb != nil {
			return _fabbb
		}
	}
	return nil
}
func (_daagb *CT_Colors) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _daagb.IndexedColors != nil {
		_gfcb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0069\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_daagb.IndexedColors, _gfcb)
	}
	if _daagb.MruColors != nil {
		_cbgc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003am\u0072\u0075\u0043\u006f\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_daagb.MruColors, _cbgc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fge *CT_BookViews) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_dfbc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003aw\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}}
	for _, _ecge := range _fge.WorkbookView {
		e.EncodeElement(_ecge, _dfbc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fccba *CT_Connection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ecgdcb := range start.Attr {
		if _ecgdcb.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_bdbd, _fbafb := _f.ParseBool(_ecgdcb.Value)
			if _fbafb != nil {
				return _fbafb
			}
			_fccba.DeletedAttr = &_bdbd
			continue
		}
		if _ecgdcb.Name.Local == "\u0069\u0064" {
			_acag, _bcaa := _f.ParseUint(_ecgdcb.Value, 10, 32)
			if _bcaa != nil {
				return _bcaa
			}
			_fccba.IdAttr = uint32(_acag)
			continue
		}
		if _ecgdcb.Name.Local == "o\u006e\u006c\u0079\u0055se\u0043o\u006e\u006e\u0065\u0063\u0074i\u006f\u006e\u0046\u0069\u006c\u0065" {
			_aacc, _cegg := _f.ParseBool(_ecgdcb.Value)
			if _cegg != nil {
				return _cegg
			}
			_fccba.OnlyUseConnectionFileAttr = &_aacc
			continue
		}
		if _ecgdcb.Name.Local == "\u006fd\u0063\u0046\u0069\u006c\u0065" {
			_cefb, _eggbbg := _ecgdcb.Value, error(nil)
			if _eggbbg != nil {
				return _eggbbg
			}
			_fccba.OdcFileAttr = &_cefb
			continue
		}
		if _ecgdcb.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064" {
			_bdfa, _ededc := _f.ParseBool(_ecgdcb.Value)
			if _ededc != nil {
				return _ededc
			}
			_fccba.BackgroundAttr = &_bdfa
			continue
		}
		if _ecgdcb.Name.Local == "\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_bgcd, _ddbbg := _f.ParseUint(_ecgdcb.Value, 10, 32)
			if _ddbbg != nil {
				return _ddbbg
			}
			_bebb := uint32(_bgcd)
			_fccba.IntervalAttr = &_bebb
			continue
		}
		if _ecgdcb.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_bdgf, _cfbcd := _f.ParseBool(_ecgdcb.Value)
			if _cfbcd != nil {
				return _cfbcd
			}
			_fccba.RefreshOnLoadAttr = &_bdgf
			continue
		}
		if _ecgdcb.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_cbeb, _gdgba := _ecgdcb.Value, error(nil)
			if _gdgba != nil {
				return _gdgba
			}
			_fccba.DescriptionAttr = &_cbeb
			continue
		}
		if _ecgdcb.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_eced, _daebd := _f.ParseBool(_ecgdcb.Value)
			if _daebd != nil {
				return _daebd
			}
			_fccba.SaveDataAttr = &_eced
			continue
		}
		if _ecgdcb.Name.Local == "\u0072e\u0063o\u006e\u006e\u0065\u0063\u0074i\u006f\u006eM\u0065\u0074\u0068\u006f\u0064" {
			_bbgbf, _gfgdd := _f.ParseUint(_ecgdcb.Value, 10, 32)
			if _gfgdd != nil {
				return _gfgdd
			}
			_bafdg := uint32(_bbgbf)
			_fccba.ReconnectionMethodAttr = &_bafdg
			continue
		}
		if _ecgdcb.Name.Local == "c\u0072\u0065\u0064\u0065\u006e\u0074\u0069\u0061\u006c\u0073" {
			_fccba.CredentialsAttr.UnmarshalXMLAttr(_ecgdcb)
			continue
		}
		if _ecgdcb.Name.Local == "\u006be\u0065\u0070\u0041\u006c\u0069\u0076e" {
			_gced, _cfbf := _f.ParseBool(_ecgdcb.Value)
			if _cfbf != nil {
				return _cfbf
			}
			_fccba.KeepAliveAttr = &_gced
			continue
		}
		if _ecgdcb.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065" {
			_agbf, _bgeb := _ecgdcb.Value, error(nil)
			if _bgeb != nil {
				return _bgeb
			}
			_fccba.SourceFileAttr = &_agbf
			continue
		}
		if _ecgdcb.Name.Local == "\u0073\u0069\u006e\u0067\u006c\u0065\u0053\u0069\u0067n\u004f\u006e\u0049\u0064" {
			_degf, _face := _ecgdcb.Value, error(nil)
			if _face != nil {
				return _face
			}
			_fccba.SingleSignOnIdAttr = &_degf
			continue
		}
		if _ecgdcb.Name.Local == "\u0073\u0061\u0076e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_efdde, _daagf := _f.ParseBool(_ecgdcb.Value)
			if _daagf != nil {
				return _daagf
			}
			_fccba.SavePasswordAttr = &_efdde
			continue
		}
		if _ecgdcb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ecebc, _bece := _ecgdcb.Value, error(nil)
			if _bece != nil {
				return _bece
			}
			_fccba.NameAttr = &_ecebc
			continue
		}
		if _ecgdcb.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_fgfd, _feffe := _f.ParseUint(_ecgdcb.Value, 10, 8)
			if _feffe != nil {
				return _feffe
			}
			_fccba.RefreshedVersionAttr = uint8(_fgfd)
			continue
		}
		if _ecgdcb.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_fcce, _cgae := _f.ParseUint(_ecgdcb.Value, 10, 8)
			if _cgae != nil {
				return _cgae
			}
			_acgf := uint8(_fcce)
			_fccba.MinRefreshableVersionAttr = &_acgf
			continue
		}
		if _ecgdcb.Name.Local == "\u006e\u0065\u0077" {
			_aabdb, _agdf := _f.ParseBool(_ecgdcb.Value)
			if _agdf != nil {
				return _agdf
			}
			_fccba.NewAttr = &_aabdb
			continue
		}
		if _ecgdcb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bdbgg, _gffbg := _f.ParseUint(_ecgdcb.Value, 10, 32)
			if _gffbg != nil {
				return _gffbg
			}
			_gcgff := uint32(_bdbgg)
			_fccba.TypeAttr = &_gcgff
			continue
		}
	}
_aaged:
	for {
		_eggeg, _bcff := d.Token()
		if _bcff != nil {
			return _bcff
		}
		switch _abcbb := _eggeg.(type) {
		case _a.StartElement:
			switch _abcbb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0062\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0062\u0050\u0072"}:
				_fccba.DbPr = NewCT_DbPr()
				if _bagcd := d.DecodeElement(_fccba.DbPr, &_abcbb); _bagcd != nil {
					return _bagcd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0061\u0070\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0061\u0070\u0050\u0072"}:
				_fccba.OlapPr = NewCT_OlapPr()
				if _gaaba := d.DecodeElement(_fccba.OlapPr, &_abcbb); _gaaba != nil {
					return _gaaba
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_fccba.WebPr = NewCT_WebPr()
				if _bcgg := d.DecodeElement(_fccba.WebPr, &_abcbb); _bcgg != nil {
					return _bcgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0050\u0072"}:
				_fccba.TextPr = NewCT_TextPr()
				if _fbdg := d.DecodeElement(_fccba.TextPr, &_abcbb); _fbdg != nil {
					return _fbdg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}:
				_fccba.Parameters = NewCT_Parameters()
				if _fdaa := d.DecodeElement(_fccba.Parameters, &_abcbb); _fdaa != nil {
					return _fdaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fccba.ExtLst = NewCT_ExtensionList()
				if _cbecg := d.DecodeElement(_fccba.ExtLst, &_abcbb); _cbecg != nil {
					return _cbecg
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e \u0025\u0076", _abcbb.Name)
				if _fbgga := d.Skip(); _fbgga != nil {
					return _fbgga
				}
			}
		case _a.EndElement:
			break _aaged
		case _a.CharData:
		}
	}
	return nil
}
func (_ggbe *CT_Filter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _agddc := range start.Attr {
		if _agddc.Name.Local == "\u0076\u0061\u006c" {
			_cadc, _eccggd := _agddc.Value, error(nil)
			if _eccggd != nil {
				return _eccggd
			}
			_ggbe.ValAttr = &_cadc
			continue
		}
	}
	for {
		_gcfef, _adefg := d.Token()
		if _adefg != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0046\u0069\u006ct\u0065\u0072\u003a\u0020\u0025\u0073", _adefg)
		}
		if _bdfe, _cgccc := _gcfef.(_a.EndElement); _cgccc && _bdfe.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eggbaf *ST_TableType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cgdbee, _fbega := d.Token()
	if _fbega != nil {
		return _fbega
	}
	if _abaaba, _cdaag := _cgdbee.(_a.EndElement); _cdaag && _abaaba.Name == start.Name {
		*_eggbaf = 1
		return nil
	}
	if _bcafag, _fbeece := _cgdbee.(_a.CharData); !_fbeece {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgdbee)
	} else {
		switch string(_bcafag) {
		case "":
			*_eggbaf = 0
		case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
			*_eggbaf = 1
		case "\u0078\u006d\u006c":
			*_eggbaf = 2
		case "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065":
			*_eggbaf = 3
		}
	}
	_cgdbee, _fbega = d.Token()
	if _fbega != nil {
		return _fbega
	}
	if _gbbcgg, _aedga := _cgdbee.(_a.EndElement); _aedga && _gbbcgg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgdbee)
}
func (_abcbbf *CT_MetadataStringIndex) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gbefa := range start.Attr {
		if _gbefa.Name.Local == "\u0078" {
			_fdcdf, _cdgage := _f.ParseUint(_gbefa.Value, 10, 32)
			if _cdgage != nil {
				return _cdgage
			}
			_abcbbf.XAttr = uint32(_fdcdf)
			continue
		}
		if _gbefa.Name.Local == "\u0073" {
			_bdafb, _dbggg := _f.ParseBool(_gbefa.Value)
			if _dbggg != nil {
				return _dbggg
			}
			_abcbbf.SAttr = &_bdafb
			continue
		}
	}
	for {
		_dabce, _dgcaa := d.Token()
		if _dgcaa != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0074a\u0064a\u0074a\u0053t\u0072\u0069\u006e\u0067\u0049\u006e\u0064\u0065\u0078\u003a\u0020\u0025\u0073", _dgcaa)
		}
		if _ebafg, _bfecf := _dabce.(_a.EndElement); _bfecf && _ebafg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eaedfe *CT_RevisionCustomView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eaedfe.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_eaedfe.ActionAttr = ST_RevisionAction(1)
	for _, _gabca := range start.Attr {
		if _gabca.Name.Local == "\u0067\u0075\u0069\u0064" {
			_fefed, _gcadd := _gabca.Value, error(nil)
			if _gcadd != nil {
				return _gcadd
			}
			_eaedfe.GuidAttr = _fefed
			continue
		}
		if _gabca.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_eaedfe.ActionAttr.UnmarshalXMLAttr(_gabca)
			continue
		}
	}
	for {
		_ggfag, _gdgcfa := d.Token()
		if _gdgcfa != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0043u\u0073\u0074\u006f\u006d\u0056\u0069\u0065w\u003a\u0020\u0025\u0073", _gdgcfa)
		}
		if _ceecd, _cfafdb := _ggfag.(_a.EndElement); _cfafdb && _ceecd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fdfa *CT_PivotCache) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0063\u0068\u0065\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _fdfa.CacheIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _fdfa.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the MapInfo and its children
func (_acaed *MapInfo) Validate() error {
	return _acaed.ValidateWithPath("\u004da\u0070\u0049\u006e\u0066\u006f")
}

// ValidateWithPath validates the CT_CellStyle and its children, prefixing error messages with path
func (_eaed *CT_CellStyle) ValidateWithPath(path string) error {
	if _eaed.ExtLst != nil {
		if _fagf := _eaed.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fagf != nil {
			return _fagf
		}
	}
	return nil
}

type CT_WorksheetSource struct {

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

func (_aeaf *CT_WorkbookPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _daecfa := range start.Attr {
		if _daecfa.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_fgcab, _gfgad := _daecfa.Value, error(nil)
			if _gfgad != nil {
				return _gfgad
			}
			_aeaf.CodeNameAttr = &_fgcab
			continue
		}
		if _daecfa.Name.Local == "\u0064\u0061\u0074\u0065\u0031\u0039\u0030\u0034" {
			_dbbab, _fdaceg := _f.ParseBool(_daecfa.Value)
			if _fdaceg != nil {
				return _fdaceg
			}
			_aeaf.Date1904Attr = &_dbbab
			continue
		}
		if _daecfa.Name.Local == "\u0068i\u0064e\u0050\u0069\u0076\u006f\u0074F\u0069\u0065l\u0064\u004c\u0069\u0073\u0074" {
			_dgddae, _cabeb := _f.ParseBool(_daecfa.Value)
			if _cabeb != nil {
				return _cabeb
			}
			_aeaf.HidePivotFieldListAttr = &_dgddae
			continue
		}
		if _daecfa.Name.Local == "\u0073\u0068\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0055n\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0054\u0061b\u006c\u0065\u0073" {
			_cggaad, _afcba := _f.ParseBool(_daecfa.Value)
			if _afcba != nil {
				return _afcba
			}
			_aeaf.ShowBorderUnselectedTablesAttr = &_cggaad
			continue
		}
		if _daecfa.Name.Local == "s\u0068o\u0077\u0050\u0069\u0076\u006f\u0074\u0043\u0068a\u0072\u0074\u0046\u0069lt\u0065\u0072" {
			_ggbca, _afgefc := _f.ParseBool(_daecfa.Value)
			if _afgefc != nil {
				return _afgefc
			}
			_aeaf.ShowPivotChartFilterAttr = &_ggbca
			continue
		}
		if _daecfa.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074\u0065\u0064\u0053\u006f\u006c\u0075t\u0069\u006f\u006e\u0073" {
			_cfbgf, _dggcb := _f.ParseBool(_daecfa.Value)
			if _dggcb != nil {
				return _dggcb
			}
			_aeaf.PromptedSolutionsAttr = &_cfbgf
			continue
		}
		if _daecfa.Name.Local == "\u0062\u0061\u0063\u006b\u0075\u0070\u0046\u0069\u006c\u0065" {
			_acegf, _gcbcgf := _f.ParseBool(_daecfa.Value)
			if _gcbcgf != nil {
				return _gcbcgf
			}
			_aeaf.BackupFileAttr = &_acegf
			continue
		}
		if _daecfa.Name.Local == "\u0073\u0061\u0076\u0065Ex\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0056\u0061\u006c\u0075e\u0073" {
			_geabdg, _gbgdb := _f.ParseBool(_daecfa.Value)
			if _gbgdb != nil {
				return _gbgdb
			}
			_aeaf.SaveExternalLinkValuesAttr = &_geabdg
			continue
		}
		if _daecfa.Name.Local == "u\u0070\u0064\u0061\u0074\u0065\u004c\u0069\u006e\u006b\u0073" {
			_aeaf.UpdateLinksAttr.UnmarshalXMLAttr(_daecfa)
			continue
		}
		if _daecfa.Name.Local == "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_aeaf.ShowObjectsAttr.UnmarshalXMLAttr(_daecfa)
			continue
		}
		if _daecfa.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072\u0050\u0072\u0069\u0076\u0061\u0063\u0079" {
			_dfffa, _gfcfe := _f.ParseBool(_daecfa.Value)
			if _gfcfe != nil {
				return _gfcfe
			}
			_aeaf.FilterPrivacyAttr = &_dfffa
			continue
		}
		if _daecfa.Name.Local == "\u0073\u0068\u006f\u0077\u0049\u006e\u006b\u0041\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e" {
			_gebbfb, _fgafe := _f.ParseBool(_daecfa.Value)
			if _fgafe != nil {
				return _fgafe
			}
			_aeaf.ShowInkAnnotationAttr = &_gebbfb
			continue
		}
		if _daecfa.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0052\u0065\u0066\u0072\u0065\u0073\u0068Q\u0075\u0065\u0072\u0079" {
			_egffad, _deaeda := _f.ParseBool(_daecfa.Value)
			if _deaeda != nil {
				return _deaeda
			}
			_aeaf.AllowRefreshQueryAttr = &_egffad
			continue
		}
		if _daecfa.Name.Local == "\u0070\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073" {
			_eceag, _gcfba := _f.ParseBool(_daecfa.Value)
			if _gcfba != nil {
				return _gcfba
			}
			_aeaf.PublishItemsAttr = &_eceag
			continue
		}
		if _daecfa.Name.Local == "\u0063h\u0065c\u006b\u0043\u006f\u006d\u0070a\u0074\u0069b\u0069\u006c\u0069\u0074\u0079" {
			_ffeda, _fdcddc := _f.ParseBool(_daecfa.Value)
			if _fdcddc != nil {
				return _fdcddc
			}
			_aeaf.CheckCompatibilityAttr = &_ffeda
			continue
		}
		if _daecfa.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_beead, _ccgfd := _f.ParseBool(_daecfa.Value)
			if _ccgfd != nil {
				return _ccgfd
			}
			_aeaf.AutoCompressPicturesAttr = &_beead
			continue
		}
		if _daecfa.Name.Local == "r\u0065\u0066\u0072\u0065sh\u0041l\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u0069\u006f\u006e\u0073" {
			_dadde, _cfeef := _f.ParseBool(_daecfa.Value)
			if _cfeef != nil {
				return _cfeef
			}
			_aeaf.RefreshAllConnectionsAttr = &_dadde
			continue
		}
		if _daecfa.Name.Local == "\u0064\u0065\u0066\u0061ul\u0074\u0054\u0068\u0065\u006d\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_gdccb, _ceabc := _f.ParseUint(_daecfa.Value, 10, 32)
			if _ceabc != nil {
				return _ceabc
			}
			_aebeg := uint32(_gdccb)
			_aeaf.DefaultThemeVersionAttr = &_aebeg
			continue
		}
	}
	for {
		_bdeae, _gcadf := d.Token()
		if _gcadf != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0057o\u0072k\u0062o\u006f\u006b\u0050\u0072\u003a\u0020\u0025s", _gcadf)
		}
		if _bbaaf, _eaadcf := _bdeae.(_a.EndElement); _eaadcf && _bbaaf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Fill and its children, prefixing error messages with path
func (_fgfge *CT_Fill) ValidateWithPath(path string) error {
	if _fgfge.PatternFill != nil {
		if _geddg := _fgfge.PatternFill.ValidateWithPath(path + "\u002f\u0050\u0061t\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"); _geddg != nil {
			return _geddg
		}
	}
	if _fgfge.GradientFill != nil {
		if _eggbf := _fgfge.GradientFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"); _eggbf != nil {
			return _eggbf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Cfvo and its children, prefixing error messages with path
func (_gegbe *CT_Cfvo) ValidateWithPath(path string) error {
	if _gegbe.TypeAttr == ST_CfvoTypeUnset {
		return _fc.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cbbge := _gegbe.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cbbge != nil {
		return _cbbge
	}
	if _gegbe.ExtLst != nil {
		if _feg := _gegbe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _feg != nil {
			return _feg
		}
	}
	return nil
}
func (_gab *CT_BookViews) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_acg:
	for {
		_egf, _add := d.Token()
		if _add != nil {
			return _add
		}
		switch _bef := _egf.(type) {
		case _a.StartElement:
			switch _bef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072k\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072k\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}:
				_bfbe := NewCT_BookView()
				if _cebd := d.DecodeElement(_bfbe, &_bef); _cebd != nil {
					return _cebd
				}
				_gab.WorkbookView = append(_gab.WorkbookView, _bfbe)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u006f\u006fk\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _bef.Name)
				if _fce := d.Skip(); _fce != nil {
					return _fce
				}
			}
		case _a.EndElement:
			break _acg
		case _a.CharData:
		}
	}
	return nil
}
func (_dbfaeea ST_DvAspect) String() string {
	switch _dbfaeea {
	case 0:
		return ""
	case 1:
		return "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054"
	case 2:
		return "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e"
	}
	return ""
}
func (_agbeeg *ST_RevisionAction) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ddeab, _adegb := d.Token()
	if _adegb != nil {
		return _adegb
	}
	if _fcadbf, _cabcg := _ddeab.(_a.EndElement); _cabcg && _fcadbf.Name == start.Name {
		*_agbeeg = 1
		return nil
	}
	if _faccg, _fgdefg := _ddeab.(_a.CharData); !_fgdefg {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddeab)
	} else {
		switch string(_faccg) {
		case "":
			*_agbeeg = 0
		case "\u0061\u0064\u0064":
			*_agbeeg = 1
		case "\u0064\u0065\u006c\u0065\u0074\u0065":
			*_agbeeg = 2
		}
	}
	_ddeab, _adegb = d.Token()
	if _adegb != nil {
		return _adegb
	}
	if _cdffa, _ecfbg := _ddeab.(_a.EndElement); _ecfbg && _cdffa.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddeab)
}
func (_dafgeb *CT_WebPublishObject) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eecfb := range start.Attr {
		if _eecfb.Name.Local == "\u0069\u0064" {
			_gfbbcd, _eddff := _f.ParseUint(_eecfb.Value, 10, 32)
			if _eddff != nil {
				return _eddff
			}
			_dafgeb.IdAttr = uint32(_gfbbcd)
			continue
		}
		if _eecfb.Name.Local == "\u0064\u0069\u0076I\u0064" {
			_befgb, _cbcba := _eecfb.Value, error(nil)
			if _cbcba != nil {
				return _cbcba
			}
			_dafgeb.DivIdAttr = _befgb
			continue
		}
		if _eecfb.Name.Local == "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074" {
			_dccba, _fdgbg := _eecfb.Value, error(nil)
			if _fdgbg != nil {
				return _fdgbg
			}
			_dafgeb.SourceObjectAttr = &_dccba
			continue
		}
		if _eecfb.Name.Local == "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065" {
			_adfec, _dfcdf := _eecfb.Value, error(nil)
			if _dfcdf != nil {
				return _dfcdf
			}
			_dafgeb.DestinationFileAttr = _adfec
			continue
		}
		if _eecfb.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_bbfccf, _efded := _eecfb.Value, error(nil)
			if _efded != nil {
				return _efded
			}
			_dafgeb.TitleAttr = &_bbfccf
			continue
		}
		if _eecfb.Name.Local == "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068" {
			_abeca, _cfaaeg := _f.ParseBool(_eecfb.Value)
			if _cfaaeg != nil {
				return _cfaaeg
			}
			_dafgeb.AutoRepublishAttr = &_abeca
			continue
		}
	}
	for {
		_deafe, _fgggc := d.Token()
		if _fgggc != nil {
			return _fc.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0057\u0065\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _fgggc)
		}
		if _gebde, _efcga := _deafe.(_a.EndElement); _efcga && _gebde.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eeceb *CT_RgbColor) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eeceb.RgbAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0067\u0062"}, Value: _fc.Sprintf("\u0025\u0076", *_eeceb.RgbAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MetadataBlock and its children, prefixing error messages with path
func (_ebgfb *CT_MetadataBlock) ValidateWithPath(path string) error {
	for _dbbg, _ffcag := range _ebgfb.Rc {
		if _ecdcdf := _ffcag.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0052\u0063\u005b\u0025\u0064]", path, _dbbg)); _ecdcdf != nil {
			return _ecdcdf
		}
	}
	return nil
}
func NewCT_CalculatedItems() *CT_CalculatedItems { _cfbb := &CT_CalculatedItems{}; return _cfbb }
func (_aecfgd ST_rwColActionType) String() string {
	switch _aecfgd {
	case 0:
		return ""
	case 1:
		return "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"
	case 2:
		return "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw"
	case 3:
		return "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl"
	case 4:
		return "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl"
	}
	return ""
}

// Validate validates the CT_TableStyles and its children
func (_bfbad *CT_TableStyles) Validate() error {
	return _bfbad.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073")
}

// Validate validates the SingleXmlCells and its children
func (_agffbc *SingleXmlCells) Validate() error {
	return _agffbc.ValidateWithPath("\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073")
}

// ValidateWithPath validates the EG_ExtensionList and its children, prefixing error messages with path
func (_gddaad *EG_ExtensionList) ValidateWithPath(path string) error {
	for _gagdbf, _eeabf := range _gddaad.Ext {
		if _cbdcc := _eeabf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _gagdbf)); _cbdcc != nil {
			return _cbdcc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellSmartTagPr and its children, prefixing error messages with path
func (_dbafe *CT_CellSmartTagPr) ValidateWithPath(path string) error { return nil }
func (_bacca ST_SheetViewType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bacca.String(), start)
}
func NewCT_Selection() *CT_Selection { _bcgcbc := &CT_Selection{}; return _bcgcbc }
func (_cbfga ST_TableStyleType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fbgffd := _a.Attr{}
	_fbgffd.Name = name
	switch _cbfga {
	case ST_TableStyleTypeUnset:
		_fbgffd.Value = ""
	case ST_TableStyleTypeWholeTable:
		_fbgffd.Value = "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065"
	case ST_TableStyleTypeHeaderRow:
		_fbgffd.Value = "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw"
	case ST_TableStyleTypeTotalRow:
		_fbgffd.Value = "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeFirstColumn:
		_fbgffd.Value = "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeLastColumn:
		_fbgffd.Value = "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeFirstRowStripe:
		_fbgffd.Value = "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeSecondRowStripe:
		_fbgffd.Value = "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeFirstColumnStripe:
		_fbgffd.Value = "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeSecondColumnStripe:
		_fbgffd.Value = "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeFirstHeaderCell:
		_fbgffd.Value = "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeLastHeaderCell:
		_fbgffd.Value = "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeFirstTotalCell:
		_fbgffd.Value = "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeLastTotalCell:
		_fbgffd.Value = "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeFirstSubtotalColumn:
		_fbgffd.Value = "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeSecondSubtotalColumn:
		_fbgffd.Value = "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e"
	case ST_TableStyleTypeThirdSubtotalColumn:
		_fbgffd.Value = "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeFirstSubtotalRow:
		_fbgffd.Value = "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeSecondSubtotalRow:
		_fbgffd.Value = "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeThirdSubtotalRow:
		_fbgffd.Value = "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeBlankRow:
		_fbgffd.Value = "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077"
	case ST_TableStyleTypeFirstColumnSubheading:
		_fbgffd.Value = "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeSecondColumnSubheading:
		_fbgffd.Value = "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067"
	case ST_TableStyleTypeThirdColumnSubheading:
		_fbgffd.Value = "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeFirstRowSubheading:
		_fbgffd.Value = "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeSecondRowSubheading:
		_fbgffd.Value = "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeThirdRowSubheading:
		_fbgffd.Value = "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypePageFieldLabels:
		_fbgffd.Value = "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073"
	case ST_TableStyleTypePageFieldValues:
		_fbgffd.Value = "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return _fbgffd, nil
}

type CT_MeasureGroup struct {

	// Measure Group Name
	NameAttr string

	// Measure Group Display Name
	CaptionAttr string
}

func (_debed ST_IconSetType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bfedbb := _a.Attr{}
	_bfedbb.Name = name
	switch _debed {
	case ST_IconSetTypeUnset:
		_bfedbb.Value = ""
	case ST_IconSetType3Arrows:
		_bfedbb.Value = "\u0033A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType3ArrowsGray:
		_bfedbb.Value = "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType3Flags:
		_bfedbb.Value = "\u0033\u0046\u006c\u0061\u0067\u0073"
	case ST_IconSetType3TrafficLights1:
		_bfedbb.Value = "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031"
	case ST_IconSetType3TrafficLights2:
		_bfedbb.Value = "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032"
	case ST_IconSetType3Signs:
		_bfedbb.Value = "\u0033\u0053\u0069\u0067\u006e\u0073"
	case ST_IconSetType3Symbols:
		_bfedbb.Value = "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073"
	case ST_IconSetType3Symbols2:
		_bfedbb.Value = "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732"
	case ST_IconSetType4Arrows:
		_bfedbb.Value = "\u0034A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType4ArrowsGray:
		_bfedbb.Value = "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType4RedToBlack:
		_bfedbb.Value = "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b"
	case ST_IconSetType4Rating:
		_bfedbb.Value = "\u0034R\u0061\u0074\u0069\u006e\u0067"
	case ST_IconSetType4TrafficLights:
		_bfedbb.Value = "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073"
	case ST_IconSetType5Arrows:
		_bfedbb.Value = "\u0035A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType5ArrowsGray:
		_bfedbb.Value = "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType5Rating:
		_bfedbb.Value = "\u0035R\u0061\u0074\u0069\u006e\u0067"
	case ST_IconSetType5Quarters:
		_bfedbb.Value = "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s"
	}
	return _bfedbb, nil
}

const (
	ST_HorizontalAlignmentUnset            ST_HorizontalAlignment = 0
	ST_HorizontalAlignmentGeneral          ST_HorizontalAlignment = 1
	ST_HorizontalAlignmentLeft             ST_HorizontalAlignment = 2
	ST_HorizontalAlignmentCenter           ST_HorizontalAlignment = 3
	ST_HorizontalAlignmentRight            ST_HorizontalAlignment = 4
	ST_HorizontalAlignmentFill             ST_HorizontalAlignment = 5
	ST_HorizontalAlignmentJustify          ST_HorizontalAlignment = 6
	ST_HorizontalAlignmentCenterContinuous ST_HorizontalAlignment = 7
	ST_HorizontalAlignmentDistributed      ST_HorizontalAlignment = 8
)

func (_baae *CT_CellProtection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _baae.LockedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_baae.LockedAttr))})
	}
	if _baae.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_baae.HiddenAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_X and its children, prefixing error messages with path
func (_ggcad *CT_X) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_SheetId and its children, prefixing error messages with path
func (_cfegg *CT_SheetId) ValidateWithPath(path string) error { return nil }
func (_ccbgg *CT_RevisionComment) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _ccbgg.SheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0065\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0076", _ccbgg.CellAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _ccbgg.GuidAttr)})
	if _ccbgg.ActionAttr != ST_RevisionActionUnset {
		_fcbcc, _egege := _ccbgg.ActionAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
		if _egege != nil {
			return _egege
		}
		start.Attr = append(start.Attr, _fcbcc)
	}
	if _ccbgg.AlwaysShowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u0077\u0061\u0079\u0073\u0053\u0068\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ccbgg.AlwaysShowAttr))})
	}
	if _ccbgg.OldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ccbgg.OldAttr))})
	}
	if _ccbgg.HiddenRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068i\u0064\u0064\u0065\u006e\u0052\u006fw"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ccbgg.HiddenRowAttr))})
	}
	if _ccbgg.HiddenColumnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ccbgg.HiddenColumnAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}, Value: _fc.Sprintf("\u0025\u0076", _ccbgg.AuthorAttr)})
	if _ccbgg.OldLengthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fl\u0064\u004c\u0065\u006e\u0067\u0074h"}, Value: _fc.Sprintf("\u0025\u0076", *_ccbgg.OldLengthAttr)})
	}
	if _ccbgg.NewLengthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006ee\u0077\u004c\u0065\u006e\u0067\u0074h"}, Value: _fc.Sprintf("\u0025\u0076", *_ccbgg.NewLengthAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eegb *CT_FutureMetadata) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _eegb.NameAttr)})
	if _eegb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_eegb.CountAttr)})
	}
	e.EncodeToken(start)
	if _eegb.Bk != nil {
		_dbcabd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ab\u006b"}}
		for _, _cgaff := range _eegb.Bk {
			e.EncodeElement(_cgaff, _dbcabd)
		}
	}
	if _eegb.ExtLst != nil {
		_badee := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eegb.ExtLst, _badee)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aefff *ST_TextVAlign) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gead, _ddgaf := d.Token()
	if _ddgaf != nil {
		return _ddgaf
	}
	if _bddeb, _ccdff := _gead.(_a.EndElement); _ccdff && _bddeb.Name == start.Name {
		*_aefff = 1
		return nil
	}
	if _aebdb, _dgcbe := _gead.(_a.CharData); !_dgcbe {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gead)
	} else {
		switch string(_aebdb) {
		case "":
			*_aefff = 0
		case "\u0074\u006f\u0070":
			*_aefff = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_aefff = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d":
			*_aefff = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_aefff = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_aefff = 5
		}
	}
	_gead, _ddgaf = d.Token()
	if _ddgaf != nil {
		return _ddgaf
	}
	if _fggcga, _ecfdb := _gead.(_a.EndElement); _ecfdb && _fggcga.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gead)
}

// ValidateWithPath validates the CT_SheetPr and its children, prefixing error messages with path
func (_bebae *CT_SheetPr) ValidateWithPath(path string) error {
	if _bebae.TabColor != nil {
		if _facbfa := _bebae.TabColor.ValidateWithPath(path + "\u002fT\u0061\u0062\u0043\u006f\u006c\u006fr"); _facbfa != nil {
			return _facbfa
		}
	}
	if _bebae.OutlinePr != nil {
		if _bgefd := _bebae.OutlinePr.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072"); _bgefd != nil {
			return _bgefd
		}
	}
	if _bebae.PageSetUpPr != nil {
		if _dafbg := _bebae.PageSetUpPr.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"); _dafbg != nil {
			return _dafbg
		}
	}
	return nil
}
func (_febccc ST_SheetViewType) Validate() error { return _febccc.ValidateWithPath("") }

type CT_Filter struct {

	// Filter Value
	ValAttr *string
}

func (_baaae *ST_CfType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_baaae = 0
	case "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e":
		*_baaae = 1
	case "\u0063\u0065\u006c\u006c\u0049\u0073":
		*_baaae = 2
	case "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065":
		*_baaae = 3
	case "\u0064a\u0074\u0061\u0042\u0061\u0072":
		*_baaae = 4
	case "\u0069c\u006f\u006e\u0053\u0065\u0074":
		*_baaae = 5
	case "\u0074\u006f\u00701\u0030":
		*_baaae = 6
	case "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
		*_baaae = 7
	case "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
		*_baaae = 8
	case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_baaae = 9
	case "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_baaae = 10
	case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
		*_baaae = 11
	case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_baaae = 12
	case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
		*_baaae = 13
	case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
		*_baaae = 14
	case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
		*_baaae = 15
	case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
		*_baaae = 16
	case "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064":
		*_baaae = 17
	case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_baaae = 18
	}
	return nil
}
func (_abfgg *ST_FontScheme) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cfgga, _fdcagb := d.Token()
	if _fdcagb != nil {
		return _fdcagb
	}
	if _dacbg, _gbgac := _cfgga.(_a.EndElement); _gbgac && _dacbg.Name == start.Name {
		*_abfgg = 1
		return nil
	}
	if _ceeeab, _cagdf := _cfgga.(_a.CharData); !_cagdf {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cfgga)
	} else {
		switch string(_ceeeab) {
		case "":
			*_abfgg = 0
		case "\u006e\u006f\u006e\u0065":
			*_abfgg = 1
		case "\u006d\u0061\u006ao\u0072":
			*_abfgg = 2
		case "\u006d\u0069\u006eo\u0072":
			*_abfgg = 3
		}
	}
	_cfgga, _fdcagb = d.Token()
	if _fdcagb != nil {
		return _fdcagb
	}
	if _gafbg, _fgcgbf := _cfgga.(_a.EndElement); _fgcgbf && _gafbg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cfgga)
}

type CT_Font struct {

	// Font Name
	Name []*CT_FontName

	// Character Set
	Charset []*CT_IntProperty

	// Font Family
	Family []*CT_FontFamily

	// Bold
	B []*CT_BooleanProperty

	// Italic
	I []*CT_BooleanProperty

	// Strike Through
	Strike []*CT_BooleanProperty

	// Outline
	Outline []*CT_BooleanProperty

	// Shadow
	Shadow []*CT_BooleanProperty

	// Condense
	Condense []*CT_BooleanProperty

	// Extend
	Extend []*CT_BooleanProperty

	// Text Color
	Color []*CT_Color

	// Font Size
	Sz []*CT_FontSize

	// Underline
	U []*CT_UnderlineProperty

	// Text Vertical Alignment
	VertAlign []*CT_VerticalAlignFontProperty

	// Scheme
	Scheme []*CT_FontScheme
}

func (_dfbae ST_PageOrder) Validate() error { return _dfbae.ValidateWithPath("") }
func (_fbgbg *CT_SortState) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bffgc := range start.Attr {
		if _bffgc.Name.Local == "\u0063\u006f\u006c\u0075\u006d\u006e\u0053\u006f\u0072\u0074" {
			_eggfaf, _cdbeg := _f.ParseBool(_bffgc.Value)
			if _cdbeg != nil {
				return _cdbeg
			}
			_fbgbg.ColumnSortAttr = &_eggfaf
			continue
		}
		if _bffgc.Name.Local == "\u0063\u0061\u0073\u0065\u0053\u0065\u006e\u0073\u0069\u0074\u0069\u0076\u0065" {
			_ebgda, _ffebe := _f.ParseBool(_bffgc.Value)
			if _ffebe != nil {
				return _ffebe
			}
			_fbgbg.CaseSensitiveAttr = &_ebgda
			continue
		}
		if _bffgc.Name.Local == "\u0073\u006f\u0072\u0074\u004d\u0065\u0074\u0068\u006f\u0064" {
			_fbgbg.SortMethodAttr.UnmarshalXMLAttr(_bffgc)
			continue
		}
		if _bffgc.Name.Local == "\u0072\u0065\u0066" {
			_adaea, _fbgbec := _bffgc.Value, error(nil)
			if _fbgbec != nil {
				return _fbgbec
			}
			_fbgbg.RefAttr = _adaea
			continue
		}
	}
_dedcb:
	for {
		_cdbfda, _decgb := d.Token()
		if _decgb != nil {
			return _decgb
		}
		switch _fgfdf := _cdbfda.(type) {
		case _a.StartElement:
			switch _fgfdf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}:
				_efdbe := NewCT_SortCondition()
				if _dcefa := d.DecodeElement(_efdbe, &_fgfdf); _dcefa != nil {
					return _dcefa
				}
				_fbgbg.SortCondition = append(_fbgbg.SortCondition, _efdbe)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbgbg.ExtLst = NewCT_ExtensionList()
				if _dgfbd := d.DecodeElement(_fbgbg.ExtLst, &_fgfdf); _dgfbd != nil {
					return _dgfbd
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u006f\u0072t\u0053\u0074\u0061\u0074\u0065\u0020\u0025\u0076", _fgfdf.Name)
				if _aebdac := d.Skip(); _aebdac != nil {
					return _aebdac
				}
			}
		case _a.EndElement:
			break _dedcb
		case _a.CharData:
		}
	}
	return nil
}
func (_dbbc *CT_RevisionRowColumn) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _dbbc.SIdAttr)})
	if _dbbc.EolAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006f\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dbbc.EolAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _dbbc.RefAttr)})
	_ecdcca, _gagcd := _dbbc.ActionAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
	if _gagcd != nil {
		return _gagcd
	}
	start.Attr = append(start.Attr, _ecdcca)
	if _dbbc.EdgeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0064\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dbbc.EdgeAttr))})
	}
	if _dbbc.RIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_dbbc.RIdAttr)})
	}
	if _dbbc.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dbbc.UaAttr))})
	}
	if _dbbc.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dbbc.RaAttr))})
	}
	e.EncodeToken(start)
	if _dbbc.Undo != nil {
		_ffefa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0075\u006e\u0064\u006f"}}
		for _, _gbeagg := range _dbbc.Undo {
			e.EncodeElement(_gbeagg, _ffefa)
		}
	}
	if _dbbc.Rcc != nil {
		_fadfad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _efggd := range _dbbc.Rcc {
			e.EncodeElement(_efggd, _fadfad)
		}
	}
	if _dbbc.Rfmt != nil {
		_cgfgg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _gabcbd := range _dbbc.Rfmt {
			e.EncodeElement(_gabcbd, _cgfgg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ProtectedRange and its children, prefixing error messages with path
func (_cceffc *CT_ProtectedRange) ValidateWithPath(path string) error { return nil }
func (_ceabdg ST_DataValidationOperator) String() string {
	switch _ceabdg {
	case 0:
		return ""
	case 1:
		return "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case 2:
		return "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 3:
		return "\u0065\u0071\u0075a\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 6:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 7:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 8:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	}
	return ""
}
func NewCT_Schema() *CT_Schema { _aadab := &CT_Schema{}; return _aadab }

// Validate validates the CT_CustomProperty and its children
func (_egcd *CT_CustomProperty) Validate() error {
	return _egcd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}

type ST_TargetScreenSize byte
type CT_DdeItems struct {

	// DDE Item definition
	DdeItem []*CT_DdeItem
}

func (_fgcbea *CT_SheetViews) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gafgd:
	for {
		_bbfegd, _dadff := d.Token()
		if _dadff != nil {
			return _dadff
		}
		switch _dcdfd := _bbfegd.(type) {
		case _a.StartElement:
			switch _dcdfd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}:
				_dfgfb := NewCT_SheetView()
				if _agcaa := d.DecodeElement(_dfgfb, &_dcdfd); _agcaa != nil {
					return _agcaa
				}
				_fgcbea.SheetView = append(_fgcbea.SheetView, _dfgfb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgcbea.ExtLst = NewCT_ExtensionList()
				if _bebdb := d.DecodeElement(_fgcbea.ExtLst, &_dcdfd); _bebdb != nil {
					return _bebdb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073 \u0025\u0076", _dcdfd.Name)
				if _bdecde := d.Skip(); _bdecde != nil {
					return _bdecde
				}
			}
		case _a.EndElement:
			break _gafgd
		case _a.CharData:
		}
	}
	return nil
}
func (_dbbfe ST_DateTimeGrouping) ValidateWithPath(path string) error {
	switch _dbbfe {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbbfe))
	}
	return nil
}
func (_cebaf ST_DataValidationErrorStyle) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_egdfad := _a.Attr{}
	_egdfad.Name = name
	switch _cebaf {
	case ST_DataValidationErrorStyleUnset:
		_egdfad.Value = ""
	case ST_DataValidationErrorStyleStop:
		_egdfad.Value = "\u0073\u0074\u006f\u0070"
	case ST_DataValidationErrorStyleWarning:
		_egdfad.Value = "\u0077a\u0072\u006e\u0069\u006e\u0067"
	case ST_DataValidationErrorStyleInformation:
		_egdfad.Value = "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	}
	return _egdfad, nil
}
func (_fddgc *ST_SheetState) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ecadg, _fgace := d.Token()
	if _fgace != nil {
		return _fgace
	}
	if _deffdc, _badbag := _ecadg.(_a.EndElement); _badbag && _deffdc.Name == start.Name {
		*_fddgc = 1
		return nil
	}
	if _gebdac, _geeag := _ecadg.(_a.CharData); !_geeag {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ecadg)
	} else {
		switch string(_gebdac) {
		case "":
			*_fddgc = 0
		case "\u0076i\u0073\u0069\u0062\u006c\u0065":
			*_fddgc = 1
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_fddgc = 2
		case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
			*_fddgc = 3
		}
	}
	_ecadg, _fgace = d.Token()
	if _fgace != nil {
		return _fgace
	}
	if _eedbad, _aeagbf := _ecadg.(_a.EndElement); _aeagbf && _eedbad.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ecadg)
}

// ValidateWithPath validates the CT_WorkbookProtection and its children, prefixing error messages with path
func (_eaacf *CT_WorkbookProtection) ValidateWithPath(path string) error { return nil }

type ST_OleUpdate byte

func (_bfaed ST_PhoneticType) String() string {
	switch _bfaed {
	case 0:
		return ""
	case 1:
		return "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case 2:
		return "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case 3:
		return "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case 4:
		return "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e"
	}
	return ""
}
func (_fegg *CT_DataValidation) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fegg.TypeAttr != ST_DataValidationTypeUnset {
		_dgcec, _ebcda := _fegg.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ebcda != nil {
			return _ebcda
		}
		start.Attr = append(start.Attr, _dgcec)
	}
	if _fegg.ErrorStyleAttr != ST_DataValidationErrorStyleUnset {
		_gebgc, _geff := _fegg.ErrorStyleAttr.MarshalXMLAttr(_a.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0053\u0074\u0079\u006c\u0065"})
		if _geff != nil {
			return _geff
		}
		start.Attr = append(start.Attr, _gebgc)
	}
	if _fegg.ImeModeAttr != ST_DataValidationImeModeUnset {
		_efcac, _agdb := _fegg.ImeModeAttr.MarshalXMLAttr(_a.Name{Local: "\u0069m\u0065\u004d\u006f\u0064\u0065"})
		if _agdb != nil {
			return _agdb
		}
		start.Attr = append(start.Attr, _efcac)
	}
	if _fegg.OperatorAttr != ST_DataValidationOperatorUnset {
		_egcf, _edccd := _fegg.OperatorAttr.MarshalXMLAttr(_a.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _edccd != nil {
			return _edccd
		}
		start.Attr = append(start.Attr, _egcf)
	}
	if _fegg.AllowBlankAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0042\u006c\u0061\u006e\u006b"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fegg.AllowBlankAttr))})
	}
	if _fegg.ShowDropDownAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fegg.ShowDropDownAttr))})
	}
	if _fegg.ShowInputMessageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068o\u0077\u0049\u006ep\u0075\u0074\u004d\u0065\u0073\u0073\u0061\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fegg.ShowInputMessageAttr))})
	}
	if _fegg.ShowErrorMessageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068o\u0077\u0045\u0072r\u006f\u0072\u004d\u0065\u0073\u0073\u0061\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fegg.ShowErrorMessageAttr))})
	}
	if _fegg.ErrorTitleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0054\u0069\u0074\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fegg.ErrorTitleAttr)})
	}
	if _fegg.ErrorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0072\u0072o\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_fegg.ErrorAttr)})
	}
	if _fegg.PromptTitleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0072\u006f\u006d\u0070\u0074\u0054\u0069\u0074\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fegg.PromptTitleAttr)})
	}
	if _fegg.PromptAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fegg.PromptAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _fegg.SqrefAttr)})
	e.EncodeToken(start)
	if _fegg.Formula1 != nil {
		_fafec := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}}
		_fca.AddPreserveSpaceAttr(&_fafec, *_fegg.Formula1)
		e.EncodeElement(_fegg.Formula1, _fafec)
	}
	if _fegg.Formula2 != nil {
		_aggef := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}}
		_fca.AddPreserveSpaceAttr(&_aggef, *_fegg.Formula2)
		e.EncodeElement(_fegg.Formula2, _aggef)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fccgf *CT_SmartTagType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eabfd := range start.Attr {
		if _eabfd.Name.Local == "\u006e\u0061\u006de\u0073\u0070\u0061\u0063\u0065\u0055\u0072\u0069" {
			_gabba, _cgcef := _eabfd.Value, error(nil)
			if _cgcef != nil {
				return _cgcef
			}
			_fccgf.NamespaceUriAttr = &_gabba
			continue
		}
		if _eabfd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_daaee, _agcff := _eabfd.Value, error(nil)
			if _agcff != nil {
				return _agcff
			}
			_fccgf.NameAttr = &_daaee
			continue
		}
		if _eabfd.Name.Local == "\u0075\u0072\u006c" {
			_cbdgb, _faggg := _eabfd.Value, error(nil)
			if _faggg != nil {
				return _faggg
			}
			_fccgf.UrlAttr = &_cbdgb
			continue
		}
	}
	for {
		_gegaee, _dbbeb := d.Token()
		if _dbbeb != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054a\u0067\u0054\u0079p\u0065:\u0020\u0025\u0073", _dbbeb)
		}
		if _cegfd, _gebab := _gegaee.(_a.EndElement); _gebab && _cegfd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_PivotCacheDefinition and its children
func (_fegd *CT_PivotCacheDefinition) Validate() error {
	return _fegd.ValidateWithPath("\u0043\u0054\u005fPi\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e")
}
func (_badacf *CT_MemberProperties) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gcgggd := range start.Attr {
		if _gcgggd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dccc, _bfdbe := _f.ParseUint(_gcgggd.Value, 10, 32)
			if _bfdbe != nil {
				return _bfdbe
			}
			_dfdgb := uint32(_dccc)
			_badacf.CountAttr = &_dfdgb
			continue
		}
	}
_dcgec:
	for {
		_gfgeg, _dbdfa := d.Token()
		if _dbdfa != nil {
			return _dbdfa
		}
		switch _deaad := _gfgeg.(type) {
		case _a.StartElement:
			switch _deaad.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070"}:
				_dbag := NewCT_MemberProperty()
				if _gefege := d.DecodeElement(_dbag, &_deaad); _gefege != nil {
					return _gefege
				}
				_badacf.Mp = append(_badacf.Mp, _dbag)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _deaad.Name)
				if _cfeaa := d.Skip(); _cfeaa != nil {
					return _cfeaa
				}
			}
		case _a.EndElement:
			break _dcgec
		case _a.CharData:
		}
	}
	return nil
}
func (_egbfga *ST_CfType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ddfag, _gadgf := d.Token()
	if _gadgf != nil {
		return _gadgf
	}
	if _fdabd, _fgbff := _ddfag.(_a.EndElement); _fgbff && _fdabd.Name == start.Name {
		*_egbfga = 1
		return nil
	}
	if _eabgf, _babffd := _ddfag.(_a.CharData); !_babffd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddfag)
	} else {
		switch string(_eabgf) {
		case "":
			*_egbfga = 0
		case "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e":
			*_egbfga = 1
		case "\u0063\u0065\u006c\u006c\u0049\u0073":
			*_egbfga = 2
		case "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065":
			*_egbfga = 3
		case "\u0064a\u0074\u0061\u0042\u0061\u0072":
			*_egbfga = 4
		case "\u0069c\u006f\u006e\u0053\u0065\u0074":
			*_egbfga = 5
		case "\u0074\u006f\u00701\u0030":
			*_egbfga = 6
		case "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
			*_egbfga = 7
		case "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
			*_egbfga = 8
		case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_egbfga = 9
		case "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_egbfga = 10
		case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
			*_egbfga = 11
		case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_egbfga = 12
		case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
			*_egbfga = 13
		case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
			*_egbfga = 14
		case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
			*_egbfga = 15
		case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
			*_egbfga = 16
		case "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064":
			*_egbfga = 17
		case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_egbfga = 18
		}
	}
	_ddfag, _gadgf = d.Token()
	if _gadgf != nil {
		return _gadgf
	}
	if _ddfefa, _bbbfb := _ddfag.(_a.EndElement); _bbbfb && _ddfefa.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddfag)
}

// Validate validates the CT_WebPr and its children
func (_gcccf *CT_WebPr) Validate() error {
	return _gcccf.ValidateWithPath("\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072")
}

// ValidateWithPath validates the AG_AutoFormat and its children, prefixing error messages with path
func (_bf *AG_AutoFormat) ValidateWithPath(path string) error { return nil }
func NewCT_ExternalSheetNames() *CT_ExternalSheetNames {
	_gdcee := &CT_ExternalSheetNames{}
	return _gdcee
}
func (_ccac *CT_ExternalReference) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebaba := range start.Attr {
		if _ebaba.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ebaba.Name.Local == "\u0069\u0064" || _ebaba.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ebaba.Name.Local == "\u0069\u0064" {
			_gfebd, _ddgda := _ebaba.Value, error(nil)
			if _ddgda != nil {
				return _ddgda
			}
			_ccac.IdAttr = _gfebd
			continue
		}
	}
	for {
		_bbaa, _gcabc := d.Token()
		if _gcabc != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065r\u006ea\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u003a\u0020\u0025\u0073", _gcabc)
		}
		if _cddb, _addg := _bbaa.(_a.EndElement); _addg && _cddb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gfcc *CT_MeasureGroup) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gcaag := range start.Attr {
		if _gcaag.Name.Local == "\u006e\u0061\u006d\u0065" {
			_begaf, _afage := _gcaag.Value, error(nil)
			if _afage != nil {
				return _afage
			}
			_gfcc.NameAttr = _begaf
			continue
		}
		if _gcaag.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_ccccb, _aadgbc := _gcaag.Value, error(nil)
			if _aadgbc != nil {
				return _aadgbc
			}
			_gfcc.CaptionAttr = _ccccb
			continue
		}
	}
	for {
		_baddg, _gbgea := d.Token()
		if _gbgea != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072e\u0047\u0072\u006fu\u0070:\u0020\u0025\u0073", _gbgea)
		}
		if _afede, _afcegf := _baddg.(_a.EndElement); _afcegf && _afede.Name == start.Name {
			break
		}
	}
	return nil
}
func (_baedga ST_ConditionalFormattingOperator) String() string {
	switch _baedga {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 2:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 3:
		return "\u0065\u0071\u0075a\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 7:
		return "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case 8:
		return "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 9:
		return "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 10:
		return "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case 11:
		return "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case 12:
		return "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	}
	return ""
}

const (
	ST_QualifierUnset       ST_Qualifier = 0
	ST_QualifierDoubleQuote ST_Qualifier = 1
	ST_QualifierSingleQuote ST_Qualifier = 2
	ST_QualifierNone        ST_Qualifier = 3
)

// Validate validates the QueryTable and its children
func (_baacg *QueryTable) Validate() error {
	return _baacg.ValidateWithPath("\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065")
}
func (_daaebbb ST_PrintError) ValidateWithPath(path string) error {
	switch _daaebbb {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_daaebbb))
	}
	return nil
}
func NewCT_Worksheet() *CT_Worksheet {
	_facag := &CT_Worksheet{}
	_facag.SheetData = NewCT_SheetData()
	return _facag
}
func (_gaeagb *ST_UpdateLinks) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gaeagb = 0
	case "\u0075s\u0065\u0072\u0053\u0065\u0074":
		*_gaeagb = 1
	case "\u006e\u0065\u0076e\u0072":
		*_gaeagb = 2
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_gaeagb = 3
	}
	return nil
}
func (_egcbg *ST_ExternalConnectionType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_egcbg = 0
	case "\u0067e\u006e\u0065\u0072\u0061\u006c":
		*_egcbg = 1
	case "\u0074\u0065\u0078\u0074":
		*_egcbg = 2
	case "\u004d\u0044\u0059":
		*_egcbg = 3
	case "\u0044\u004d\u0059":
		*_egcbg = 4
	case "\u0059\u004d\u0044":
		*_egcbg = 5
	case "\u004d\u0059\u0044":
		*_egcbg = 6
	case "\u0044\u0059\u004d":
		*_egcbg = 7
	case "\u0059\u0044\u004d":
		*_egcbg = 8
	case "\u0073\u006b\u0069\u0070":
		*_egcbg = 9
	case "\u0045\u004d\u0044":
		*_egcbg = 10
	}
	return nil
}
func (_bfgfc *ST_SortBy) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bfgfc = 0
	case "\u0076\u0061\u006cu\u0065":
		*_bfgfc = 1
	case "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr":
		*_bfgfc = 2
	case "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr":
		*_bfgfc = 3
	case "\u0069\u0063\u006f\u006e":
		*_bfgfc = 4
	}
	return nil
}
func (_faaf *CT_CustomWorkbookView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_faaf.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _ddadf := range start.Attr {
		if _ddadf.Name.Local == "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c" {
			_cgceg, _ecaa := _f.ParseBool(_ddadf.Value)
			if _ecaa != nil {
				return _ecaa
			}
			_faaf.ShowVerticalScrollAttr = &_cgceg
			continue
		}
		if _ddadf.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073" {
			_egda, _baedd := _f.ParseBool(_ddadf.Value)
			if _baedd != nil {
				return _baedd
			}
			_faaf.ShowSheetTabsAttr = &_egda
			continue
		}
		if _ddadf.Name.Local == "\u0067\u0075\u0069\u0064" {
			_dfafa, _dcgg := _ddadf.Value, error(nil)
			if _dcgg != nil {
				return _dcgg
			}
			_faaf.GuidAttr = _dfafa
			continue
		}
		if _ddadf.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_fegc, _gega := _f.ParseInt(_ddadf.Value, 10, 32)
			if _gega != nil {
				return _gega
			}
			_aeaa := int32(_fegc)
			_faaf.XWindowAttr = &_aeaa
			continue
		}
		if _ddadf.Name.Local == "\u006d\u0065\u0072\u0067\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_gfegf, _dcfb := _f.ParseUint(_ddadf.Value, 10, 32)
			if _dcfb != nil {
				return _dcfb
			}
			_fdeb := uint32(_gfegf)
			_faaf.MergeIntervalAttr = &_fdeb
			continue
		}
		if _ddadf.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_aacaf, _cbbf := _f.ParseInt(_ddadf.Value, 10, 32)
			if _cbbf != nil {
				return _cbbf
			}
			_bgdf := int32(_aacaf)
			_faaf.YWindowAttr = &_bgdf
			continue
		}
		if _ddadf.Name.Local == "\u006f\u006e\u006c\u0079\u0053\u0079\u006e\u0063" {
			_aagf, _bgcfc := _f.ParseBool(_ddadf.Value)
			if _bgcfc != nil {
				return _bgcfc
			}
			_faaf.OnlySyncAttr = &_aagf
			continue
		}
		if _ddadf.Name.Local == "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068" {
			_caeec, _cegf := _f.ParseUint(_ddadf.Value, 10, 32)
			if _cegf != nil {
				return _cegf
			}
			_faaf.WindowWidthAttr = uint32(_caeec)
			continue
		}
		if _ddadf.Name.Local == "i\u006ec\u006c\u0075\u0064\u0065\u0050\u0072\u0069\u006et\u0053\u0065\u0074\u0074in\u0067\u0073" {
			_eacg, _eadc := _f.ParseBool(_ddadf.Value)
			if _eadc != nil {
				return _eadc
			}
			_faaf.IncludePrintSettingsAttr = &_eacg
			continue
		}
		if _ddadf.Name.Local == "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_dcgab, _gedb := _f.ParseUint(_ddadf.Value, 10, 32)
			if _gedb != nil {
				return _gedb
			}
			_faaf.WindowHeightAttr = uint32(_dcgab)
			continue
		}
		if _ddadf.Name.Local == "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f" {
			_dgdbgd, _ddeg := _f.ParseUint(_ddadf.Value, 10, 32)
			if _ddeg != nil {
				return _ddeg
			}
			_ggga := uint32(_dgdbgd)
			_faaf.TabRatioAttr = &_ggga
			continue
		}
		if _ddadf.Name.Local == "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0075l\u0061\u0042\u0061\u0072" {
			_fdegg, _efada := _f.ParseBool(_ddadf.Value)
			if _efada != nil {
				return _efada
			}
			_faaf.ShowFormulaBarAttr = &_fdegg
			continue
		}
		if _ddadf.Name.Local == "\u0063h\u0061n\u0067\u0065\u0073\u0053\u0061\u0076\u0065\u0064\u0057\u0069\u006e" {
			_debe, _ddbc := _f.ParseBool(_ddadf.Value)
			if _ddbc != nil {
				return _ddbc
			}
			_faaf.ChangesSavedWinAttr = &_debe
			continue
		}
		if _ddadf.Name.Local == "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d" {
			_cedf, _bgca := _f.ParseBool(_ddadf.Value)
			if _bgca != nil {
				return _bgca
			}
			_faaf.MaximizedAttr = &_cedf
			continue
		}
		if _ddadf.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_faaf.ShowCommentsAttr.UnmarshalXMLAttr(_ddadf)
			continue
		}
		if _ddadf.Name.Local == "\u0061\u0075\u0074\u006f\u0055\u0070\u0064\u0061\u0074\u0065" {
			_fecc, _fgbe := _f.ParseBool(_ddadf.Value)
			if _fgbe != nil {
				return _fgbe
			}
			_faaf.AutoUpdateAttr = &_fecc
			continue
		}
		if _ddadf.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_efcb, _addee := _f.ParseUint(_ddadf.Value, 10, 32)
			if _addee != nil {
				return _addee
			}
			_faaf.ActiveSheetIdAttr = uint32(_efcb)
			continue
		}
		if _ddadf.Name.Local == "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c" {
			_bcfg, _befbe := _f.ParseBool(_ddadf.Value)
			if _befbe != nil {
				return _befbe
			}
			_faaf.ShowHorizontalScrollAttr = &_bcfg
			continue
		}
		if _ddadf.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0074\u0061\u0074\u0075\u0073\u0062\u0061\u0072" {
			_bcbfe, _aacafe := _f.ParseBool(_ddadf.Value)
			if _aacafe != nil {
				return _aacafe
			}
			_faaf.ShowStatusbarAttr = &_bcbfe
			continue
		}
		if _ddadf.Name.Local == "\u0070\u0065\u0072s\u006f\u006e\u0061\u006c\u0056\u0069\u0065\u0077" {
			_fcegb, _gdag := _f.ParseBool(_ddadf.Value)
			if _gdag != nil {
				return _gdag
			}
			_faaf.PersonalViewAttr = &_fcegb
			continue
		}
		if _ddadf.Name.Local == "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d" {
			_eefe, _ddbbb := _f.ParseBool(_ddadf.Value)
			if _ddbbb != nil {
				return _ddbbb
			}
			_faaf.MinimizedAttr = &_eefe
			continue
		}
		if _ddadf.Name.Local == "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_faaf.ShowObjectsAttr.UnmarshalXMLAttr(_ddadf)
			continue
		}
		if _ddadf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aecb, _bacb := _ddadf.Value, error(nil)
			if _bacb != nil {
				return _bacb
			}
			_faaf.NameAttr = _aecb
			continue
		}
		if _ddadf.Name.Local == "\u0069\u006e\u0063\u006cud\u0065\u0048\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0043\u006f\u006c" {
			_faafc, _dfgbb := _f.ParseBool(_ddadf.Value)
			if _dfgbb != nil {
				return _dfgbb
			}
			_faaf.IncludeHiddenRowColAttr = &_faafc
			continue
		}
	}
_gfcga:
	for {
		_gaggb, _gabcb := d.Token()
		if _gabcb != nil {
			return _gabcb
		}
		switch _begfd := _gaggb.(type) {
		case _a.StartElement:
			switch _begfd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_faaf.ExtLst = NewCT_ExtensionList()
				if _abbdc := d.DecodeElement(_faaf.ExtLst, &_begfd); _abbdc != nil {
					return _abbdc
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _begfd.Name)
				if _ebcge := d.Skip(); _ebcge != nil {
					return _ebcge
				}
			}
		case _a.EndElement:
			break _gfcga
		case _a.CharData:
		}
	}
	return nil
}
func (_cbdgbc *CT_Worksheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _cbdgbc.SheetPr != nil {
		_eggge := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_cbdgbc.SheetPr, _eggge)
	}
	if _cbdgbc.Dimension != nil {
		_aagge := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_cbdgbc.Dimension, _aagge)
	}
	if _cbdgbc.SheetViews != nil {
		_bfdfcf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_cbdgbc.SheetViews, _bfdfcf)
	}
	if _cbdgbc.SheetFormatPr != nil {
		_bcedc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_cbdgbc.SheetFormatPr, _bcedc)
	}
	if _cbdgbc.Cols != nil {
		_deffg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u0073"}}
		for _, _bgecdb := range _cbdgbc.Cols {
			e.EncodeElement(_bgecdb, _deffg)
		}
	}
	_ebdef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_cbdgbc.SheetData, _ebdef)
	if _cbdgbc.SheetCalcPr != nil {
		_geefb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072"}}
		e.EncodeElement(_cbdgbc.SheetCalcPr, _geefb)
	}
	if _cbdgbc.SheetProtection != nil {
		_cgafae := _a.StartElement{Name: _a.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cbdgbc.SheetProtection, _cgafae)
	}
	if _cbdgbc.ProtectedRanges != nil {
		_ccbdda := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ap\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073"}}
		e.EncodeElement(_cbdgbc.ProtectedRanges, _ccbdda)
	}
	if _cbdgbc.Scenarios != nil {
		_dgbggd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073"}}
		e.EncodeElement(_cbdgbc.Scenarios, _dgbggd)
	}
	if _cbdgbc.AutoFilter != nil {
		_fgbaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_cbdgbc.AutoFilter, _fgbaa)
	}
	if _cbdgbc.SortState != nil {
		_gbdcff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_cbdgbc.SortState, _gbdcff)
	}
	if _cbdgbc.DataConsolidate != nil {
		_agedf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065"}}
		e.EncodeElement(_cbdgbc.DataConsolidate, _agedf)
	}
	if _cbdgbc.CustomSheetViews != nil {
		_fbdag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_cbdgbc.CustomSheetViews, _fbdag)
	}
	if _cbdgbc.MergeCells != nil {
		_ddagd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}}
		e.EncodeElement(_cbdgbc.MergeCells, _ddagd)
	}
	if _cbdgbc.PhoneticPr != nil {
		_efeeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_cbdgbc.PhoneticPr, _efeeb)
	}
	if _cbdgbc.ConditionalFormatting != nil {
		_dgbed := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"}}
		for _, _agafd := range _cbdgbc.ConditionalFormatting {
			e.EncodeElement(_agafd, _dgbed)
		}
	}
	if _cbdgbc.DataValidations != nil {
		_cffeg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_cbdgbc.DataValidations, _cffeg)
	}
	if _cbdgbc.Hyperlinks != nil {
		_baaaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}}
		e.EncodeElement(_cbdgbc.Hyperlinks, _baaaa)
	}
	if _cbdgbc.PrintOptions != nil {
		_gbaag := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_cbdgbc.PrintOptions, _gbaag)
	}
	if _cbdgbc.PageMargins != nil {
		_agdcf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_cbdgbc.PageMargins, _agdcf)
	}
	if _cbdgbc.PageSetup != nil {
		_ecbca := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_cbdgbc.PageSetup, _ecbca)
	}
	if _cbdgbc.HeaderFooter != nil {
		_acadb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_cbdgbc.HeaderFooter, _acadb)
	}
	if _cbdgbc.RowBreaks != nil {
		_bebad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_cbdgbc.RowBreaks, _bebad)
	}
	if _cbdgbc.ColBreaks != nil {
		_aeagbbg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_cbdgbc.ColBreaks, _aeagbbg)
	}
	if _cbdgbc.CustomProperties != nil {
		_eeedc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}}
		e.EncodeElement(_cbdgbc.CustomProperties, _eeedc)
	}
	if _cbdgbc.CellWatches != nil {
		_aafba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073"}}
		e.EncodeElement(_cbdgbc.CellWatches, _aafba)
	}
	if _cbdgbc.IgnoredErrors != nil {
		_edeccd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}}
		e.EncodeElement(_cbdgbc.IgnoredErrors, _edeccd)
	}
	if _cbdgbc.SmartTags != nil {
		_dedge := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
		e.EncodeElement(_cbdgbc.SmartTags, _dedge)
	}
	if _cbdgbc.Drawing != nil {
		_baeda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_cbdgbc.Drawing, _baeda)
	}
	if _cbdgbc.LegacyDrawing != nil {
		_efffe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_cbdgbc.LegacyDrawing, _efffe)
	}
	if _cbdgbc.LegacyDrawingHF != nil {
		_dbdac := _a.StartElement{Name: _a.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_cbdgbc.LegacyDrawingHF, _dbdac)
	}
	if _cbdgbc.DrawingHF != nil {
		_faeefc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_cbdgbc.DrawingHF, _faeefc)
	}
	if _cbdgbc.Picture != nil {
		_cdegdc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_cbdgbc.Picture, _cdegdc)
	}
	if _cbdgbc.OleObjects != nil {
		_cfcaef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_cbdgbc.OleObjects, _cfcaef)
	}
	if _cbdgbc.Controls != nil {
		_accfd := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_cbdgbc.Controls, _accfd)
	}
	if _cbdgbc.WebPublishItems != nil {
		_faecd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003aw\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_cbdgbc.WebPublishItems, _faecd)
	}
	if _cbdgbc.TableParts != nil {
		_degea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}}
		e.EncodeElement(_cbdgbc.TableParts, _degea)
	}
	if _cbdgbc.ExtLst != nil {
		_cfggd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cbdgbc.ExtLst, _cfggd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_TablePart() *CT_TablePart { _ecaadf := &CT_TablePart{}; return _ecaadf }
func (_bbgd *CT_Color) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cega := range start.Attr {
		if _cega.Name.Local == "\u0061\u0075\u0074\u006f" {
			_egdgdc, _gfce := _f.ParseBool(_cega.Value)
			if _gfce != nil {
				return _gfce
			}
			_bbgd.AutoAttr = &_egdgdc
			continue
		}
		if _cega.Name.Local == "\u0069n\u0064\u0065\u0078\u0065\u0064" {
			_bacd, _cdec := _f.ParseUint(_cega.Value, 10, 32)
			if _cdec != nil {
				return _cdec
			}
			_dcbf := uint32(_bacd)
			_bbgd.IndexedAttr = &_dcbf
			continue
		}
		if _cega.Name.Local == "\u0072\u0067\u0062" {
			_gdgcc, _dfga := _cega.Value, error(nil)
			if _dfga != nil {
				return _dfga
			}
			_bbgd.RgbAttr = &_gdgcc
			continue
		}
		if _cega.Name.Local == "\u0074\u0068\u0065m\u0065" {
			_bcg, _bffb := _f.ParseUint(_cega.Value, 10, 32)
			if _bffb != nil {
				return _bffb
			}
			_bbaf := uint32(_bcg)
			_bbgd.ThemeAttr = &_bbaf
			continue
		}
		if _cega.Name.Local == "\u0074\u0069\u006e\u0074" {
			_fafe, _cabdg := _f.ParseFloat(_cega.Value, 64)
			if _cabdg != nil {
				return _cabdg
			}
			_bbgd.TintAttr = &_fafe
			continue
		}
	}
	for {
		_ceff, _efga := d.Token()
		if _efga != nil {
			return _fc.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u006f\u006c\u006f\u0072: \u0025\u0073", _efga)
		}
		if _gdcd, _dgacg := _ceff.(_a.EndElement); _dgacg && _gdcd.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_FieldUsage() *CT_FieldUsage { _cfdaf := &CT_FieldUsage{}; return _cfdaf }
func (_edacd *CT_MdxTuple) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eceea := range start.Attr {
		if _eceea.Name.Local == "\u0063" {
			_abdcd, _ccdce := _f.ParseUint(_eceea.Value, 10, 32)
			if _ccdce != nil {
				return _ccdce
			}
			_bagcda := uint32(_abdcd)
			_edacd.CAttr = &_bagcda
			continue
		}
		if _eceea.Name.Local == "\u0063\u0074" {
			_bcfcb, _dbgaa := _eceea.Value, error(nil)
			if _dbgaa != nil {
				return _dbgaa
			}
			_edacd.CtAttr = &_bcfcb
			continue
		}
		if _eceea.Name.Local == "\u0073\u0069" {
			_cedcg, _bcfag := _f.ParseUint(_eceea.Value, 10, 32)
			if _bcfag != nil {
				return _bcfag
			}
			_acga := uint32(_cedcg)
			_edacd.SiAttr = &_acga
			continue
		}
		if _eceea.Name.Local == "\u0066\u0069" {
			_dfbeg, _caeab := _f.ParseUint(_eceea.Value, 10, 32)
			if _caeab != nil {
				return _caeab
			}
			_ebgff := uint32(_dfbeg)
			_edacd.FiAttr = &_ebgff
			continue
		}
		if _eceea.Name.Local == "\u0062\u0063" {
			_fgbgd, _edbfa := _eceea.Value, error(nil)
			if _edbfa != nil {
				return _edbfa
			}
			_edacd.BcAttr = &_fgbgd
			continue
		}
		if _eceea.Name.Local == "\u0066\u0063" {
			_egdgdb, _gfeeea := _eceea.Value, error(nil)
			if _gfeeea != nil {
				return _gfeeea
			}
			_edacd.FcAttr = &_egdgdb
			continue
		}
		if _eceea.Name.Local == "\u0069" {
			_dgfcc, _fdacd := _f.ParseBool(_eceea.Value)
			if _fdacd != nil {
				return _fdacd
			}
			_edacd.IAttr = &_dgfcc
			continue
		}
		if _eceea.Name.Local == "\u0075" {
			_defca, _fffeg := _f.ParseBool(_eceea.Value)
			if _fffeg != nil {
				return _fffeg
			}
			_edacd.UAttr = &_defca
			continue
		}
		if _eceea.Name.Local == "\u0073\u0074" {
			_bagbac, _acdafd := _f.ParseBool(_eceea.Value)
			if _acdafd != nil {
				return _acdafd
			}
			_edacd.StAttr = &_bagbac
			continue
		}
		if _eceea.Name.Local == "\u0062" {
			_agfgd, _gedff := _f.ParseBool(_eceea.Value)
			if _gedff != nil {
				return _gedff
			}
			_edacd.BAttr = &_agfgd
			continue
		}
	}
_dgdeab:
	for {
		_fbddd, _eecbc := d.Token()
		if _eecbc != nil {
			return _eecbc
		}
		switch _ccda := _fbddd.(type) {
		case _a.StartElement:
			switch _ccda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_aadfg := NewCT_MetadataStringIndex()
				if _ccdgd := d.DecodeElement(_aadfg, &_ccda); _ccdgd != nil {
					return _ccdgd
				}
				_edacd.N = append(_edacd.N, _aadfg)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065\u0020\u0025\u0076", _ccda.Name)
				if _gagd := d.Skip(); _gagd != nil {
					return _gagd
				}
			}
		case _a.EndElement:
			break _dgdeab
		case _a.CharData:
		}
	}
	return nil
}

type CT_Sst struct {

	// String Count
	CountAttr *uint32

	// Unique String Count
	UniqueCountAttr *uint32

	// String Item
	Si     []*CT_Rst
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_ColorFilter and its children
func (_dgeb *CT_ColorFilter) Validate() error {
	return _dgeb.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072")
}

// ValidateWithPath validates the CT_FieldUsage and its children, prefixing error messages with path
func (_gebcg *CT_FieldUsage) ValidateWithPath(path string) error { return nil }
func (_dcf *CT_CalculatedItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dcf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_dcf.CountAttr)})
	}
	e.EncodeToken(start)
	_cdba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}}
	for _, _dccf := range _dcf.CalculatedItem {
		e.EncodeElement(_dccf, _cdba)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bcdfd ST_FieldSortType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gfaae := _a.Attr{}
	_gfaae.Name = name
	switch _bcdfd {
	case ST_FieldSortTypeUnset:
		_gfaae.Value = ""
	case ST_FieldSortTypeManual:
		_gfaae.Value = "\u006d\u0061\u006e\u0075\u0061\u006c"
	case ST_FieldSortTypeAscending:
		_gfaae.Value = "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case ST_FieldSortTypeDescending:
		_gfaae.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	}
	return _gfaae, nil
}
func NewCT_TableColumn() *CT_TableColumn { _fgaec := &CT_TableColumn{}; return _fgaec }

type CT_ColFields struct {

	// Repeated Items Count
	CountAttr *uint32

	// Field
	Field []*CT_Field
}

func NewCT_MetadataType() *CT_MetadataType { _cbdb := &CT_MetadataType{}; return _cbdb }

// Validate validates the CT_ServerFormats and its children
func (_bgafe *CT_ServerFormats) Validate() error {
	return _bgafe.ValidateWithPath("\u0043\u0054_\u0053\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}
func NewCT_ControlPr() *CT_ControlPr {
	_facbf := &CT_ControlPr{}
	_facbf.Anchor = NewCT_ObjectAnchor()
	return _facbf
}

// ValidateWithPath validates the CT_PageSetUpPr and its children, prefixing error messages with path
func (_cgfbc *CT_PageSetUpPr) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_PivotField and its children
func (_bccdc *CT_PivotField) Validate() error {
	return _bccdc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064")
}
func (_afcggd ST_DynamicFilterType) Validate() error { return _afcggd.ValidateWithPath("") }

type CT_RevisionCustomView struct {

	// GUID
	GuidAttr string

	// User Action
	ActionAttr ST_RevisionAction
}

func NewCT_RPrElt() *CT_RPrElt { _feaeb := &CT_RPrElt{}; return _feaeb }

// Validate validates the CT_PivotCache and its children
func (_edbd *CT_PivotCache) Validate() error {
	return _edbd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065")
}
func (_baabc *CT_Item) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ffcfd := range start.Attr {
		if _ffcfd.Name.Local == "\u006e" {
			_afbef, _eafb := _ffcfd.Value, error(nil)
			if _eafb != nil {
				return _eafb
			}
			_baabc.NAttr = &_afbef
			continue
		}
		if _ffcfd.Name.Local == "\u0074" {
			_baabc.TAttr.UnmarshalXMLAttr(_ffcfd)
			continue
		}
		if _ffcfd.Name.Local == "\u0068" {
			_fgdf, _febeg := _f.ParseBool(_ffcfd.Value)
			if _febeg != nil {
				return _febeg
			}
			_baabc.HAttr = &_fgdf
			continue
		}
		if _ffcfd.Name.Local == "\u0073" {
			_cgccce, _fgbec := _f.ParseBool(_ffcfd.Value)
			if _fgbec != nil {
				return _fgbec
			}
			_baabc.SAttr = &_cgccce
			continue
		}
		if _ffcfd.Name.Local == "\u0073\u0064" {
			_ccbcd, _eegfcf := _f.ParseBool(_ffcfd.Value)
			if _eegfcf != nil {
				return _eegfcf
			}
			_baabc.SdAttr = &_ccbcd
			continue
		}
		if _ffcfd.Name.Local == "\u0066" {
			_ebca, _ddgdb := _f.ParseBool(_ffcfd.Value)
			if _ddgdb != nil {
				return _ddgdb
			}
			_baabc.FAttr = &_ebca
			continue
		}
		if _ffcfd.Name.Local == "\u006d" {
			_cfgad, _cbgbc := _f.ParseBool(_ffcfd.Value)
			if _cbgbc != nil {
				return _cbgbc
			}
			_baabc.MAttr = &_cfgad
			continue
		}
		if _ffcfd.Name.Local == "\u0063" {
			_edgcd, _edgaf := _f.ParseBool(_ffcfd.Value)
			if _edgaf != nil {
				return _edgaf
			}
			_baabc.CAttr = &_edgcd
			continue
		}
		if _ffcfd.Name.Local == "\u0078" {
			_fafgc, _egfa := _f.ParseUint(_ffcfd.Value, 10, 32)
			if _egfa != nil {
				return _egfa
			}
			_dccefa := uint32(_fafgc)
			_baabc.XAttr = &_dccefa
			continue
		}
		if _ffcfd.Name.Local == "\u0064" {
			_edgfb, _aecea := _f.ParseBool(_ffcfd.Value)
			if _aecea != nil {
				return _aecea
			}
			_baabc.DAttr = &_edgfb
			continue
		}
		if _ffcfd.Name.Local == "\u0065" {
			_debb, _adcgg := _f.ParseBool(_ffcfd.Value)
			if _adcgg != nil {
				return _adcgg
			}
			_baabc.EAttr = &_debb
			continue
		}
	}
	for {
		_eddfee, _fagae := d.Token()
		if _fagae != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _fagae)
		}
		if _acdgf, _ccaagb := _eddfee.(_a.EndElement); _ccaagb && _acdgf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_WebPublishItem() *CT_WebPublishItem {
	_cdfac := &CT_WebPublishItem{}
	_cdfac.SourceTypeAttr = ST_WebSourceType(1)
	return _cdfac
}
func (_dgbagg *ST_VolDepType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aeccb, _cegadb := d.Token()
	if _cegadb != nil {
		return _cegadb
	}
	if _fcedcf, _fddbd := _aeccb.(_a.EndElement); _fddbd && _fcedcf.Name == start.Name {
		*_dgbagg = 1
		return nil
	}
	if _ccaeg, _bdbdd := _aeccb.(_a.CharData); !_bdbdd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aeccb)
	} else {
		switch string(_ccaeg) {
		case "":
			*_dgbagg = 0
		case "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061":
			*_dgbagg = 1
		case "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073":
			*_dgbagg = 2
		}
	}
	_aeccb, _cegadb = d.Token()
	if _cegadb != nil {
		return _cegadb
	}
	if _abcgf, _abcdbc := _aeccb.(_a.EndElement); _abcdbc && _abcgf.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aeccb)
}
func (_faeba *Workbook) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b"
	return _faeba.CT_Workbook.MarshalXML(e, start)
}

type CT_CalculatedItems struct {

	// Calculated Item Formula Count
	CountAttr *uint32

	// Calculated Item
	CalculatedItem []*CT_CalculatedItem
}

func (_fbddf *CT_VolTopic) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fbddf.TAttr != ST_VolValueTypeUnset {
		_abgcbf, _bggbg := _fbddf.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _bggbg != nil {
			return _bggbg
		}
		start.Attr = append(start.Attr, _abgcbf)
	}
	e.EncodeToken(start)
	_fgfede := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0076"}}
	_fca.AddPreserveSpaceAttr(&_fgfede, _fbddf.V)
	e.EncodeElement(_fbddf.V, _fgfede)
	if _fbddf.Stp != nil {
		_accdad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0074\u0070"}}
		for _, _gccbaf := range _fbddf.Stp {
			e.EncodeElement(_gccbaf, _accdad)
		}
	}
	_aceegb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003at\u0072"}}
	for _, _bdedca := range _fbddf.Tr {
		e.EncodeElement(_bdedca, _aceegb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Groups and its children
func (_cggdg *CT_Groups) Validate() error {
	return _cggdg.ValidateWithPath("\u0043T\u005f\u0047\u0072\u006f\u0075\u0070s")
}
func (_defbee ST_CellComments) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_defbee.String(), start)
}
func (_ffbce *ST_TableType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ffbce = 0
	case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
		*_ffbce = 1
	case "\u0078\u006d\u006c":
		*_ffbce = 2
	case "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065":
		*_ffbce = 3
	}
	return nil
}
func (_ggadg *CT_OleObject) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dbgfe := range start.Attr {
		if _dbgfe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dbgfe.Name.Local == "\u0069\u0064" || _dbgfe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dbgfe.Name.Local == "\u0069\u0064" {
			_cbca, _dggfc := _dbgfe.Value, error(nil)
			if _dggfc != nil {
				return _dggfc
			}
			_ggadg.IdAttr = &_cbca
			continue
		}
		if _dbgfe.Name.Local == "\u0064\u0076\u0041\u0073\u0070\u0065\u0063\u0074" {
			_ggadg.DvAspectAttr.UnmarshalXMLAttr(_dbgfe)
			continue
		}
		if _dbgfe.Name.Local == "\u006c\u0069\u006e\u006b" {
			_cdddb, _ccbcb := _dbgfe.Value, error(nil)
			if _ccbcb != nil {
				return _ccbcb
			}
			_ggadg.LinkAttr = &_cdddb
			continue
		}
		if _dbgfe.Name.Local == "\u006fl\u0065\u0055\u0070\u0064\u0061\u0074e" {
			_ggadg.OleUpdateAttr.UnmarshalXMLAttr(_dbgfe)
			continue
		}
		if _dbgfe.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u006f\u0061\u0064" {
			_eecef, _geaeg := _f.ParseBool(_dbgfe.Value)
			if _geaeg != nil {
				return _geaeg
			}
			_ggadg.AutoLoadAttr = &_eecef
			continue
		}
		if _dbgfe.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_afgeg, _cfead := _f.ParseUint(_dbgfe.Value, 10, 32)
			if _cfead != nil {
				return _cfead
			}
			_ggadg.ShapeIdAttr = uint32(_afgeg)
			continue
		}
		if _dbgfe.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_affec, _cfggea := _dbgfe.Value, error(nil)
			if _cfggea != nil {
				return _cfggea
			}
			_ggadg.ProgIdAttr = &_affec
			continue
		}
	}
_dagacd:
	for {
		_feddab, _befgf := d.Token()
		if _befgf != nil {
			return _befgf
		}
		switch _ceddf := _feddab.(type) {
		case _a.StartElement:
			switch _ceddf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}:
				_ggadg.ObjectPr = NewCT_ObjectPr()
				if _gfgbab := d.DecodeElement(_ggadg.ObjectPr, &_ceddf); _gfgbab != nil {
					return _gfgbab
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _ceddf.Name)
				if _dcceec := d.Skip(); _dcceec != nil {
					return _dcceec
				}
			}
		case _a.EndElement:
			break _dagacd
		case _a.CharData:
		}
	}
	return nil
}
func (_agfgcec ST_MdxFunctionType) Validate() error { return _agfgcec.ValidateWithPath("") }
func (_baaad *VolTypes) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_baaad.CT_VolTypes = *NewCT_VolTypes()
_beggb:
	for {
		_dbage, _gcbbe := d.Token()
		if _gcbbe != nil {
			return _gcbbe
		}
		switch _debcgc := _dbage.(type) {
		case _a.StartElement:
			switch _debcgc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}:
				_gaedag := NewCT_VolType()
				if _gfgfg := d.DecodeElement(_gaedag, &_debcgc); _gfgfg != nil {
					return _gfgfg
				}
				_baaad.VolType = append(_baaad.VolType, _gaedag)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_baaad.ExtLst = NewCT_ExtensionList()
				if _edeee := d.DecodeElement(_baaad.ExtLst, &_debcgc); _edeee != nil {
					return _edeee
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076", _debcgc.Name)
				if _bgeebe := d.Skip(); _bgeebe != nil {
					return _bgeebe
				}
			}
		case _a.EndElement:
			break _beggb
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_Table() *CT_Table {
	_bcffeg := &CT_Table{}
	_bcffeg.TableColumns = NewCT_TableColumns()
	return _bcffeg
}
func (_ag *AG_RevData) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ag.RIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_ag.RIdAttr)})
	}
	if _ag.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ag.UaAttr))})
	}
	if _ag.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ag.RaAttr))})
	}
	return nil
}
func NewCT_GroupMember() *CT_GroupMember { _fcadd := &CT_GroupMember{}; return _fcadd }

// ValidateWithPath validates the CT_Users and its children, prefixing error messages with path
func (_cfcae *CT_Users) ValidateWithPath(path string) error {
	for _ccbfa, _bgfeea := range _cfcae.UserInfo {
		if _agfgce := _bgfeea.ValidateWithPath(_fc.Sprintf("\u0025s\u002fU\u0073\u0065\u0072\u0049\u006e\u0066\u006f\u005b\u0025\u0064\u005d", path, _ccbfa)); _agfgce != nil {
			return _agfgce
		}
	}
	return nil
}
func (_gbfb *CT_ExternalLinkChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_ebabdc:
	for {
		_fffdg, _afabd := d.Token()
		if _afabd != nil {
			return _afabd
		}
		switch _fbac := _fffdg.(type) {
		case _a.StartElement:
			switch _fbac.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_gbfb.ExternalBook = NewCT_ExternalBook()
				if _eead := d.DecodeElement(_gbfb.ExternalBook, &_fbac); _eead != nil {
					return _eead
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_gbfb.DdeLink = NewCT_DdeLink()
				if _dgbfg := d.DecodeElement(_gbfb.DdeLink, &_fbac); _dgbfg != nil {
					return _dgbfg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_gbfb.OleLink = NewCT_OleLink()
				if _ffcfa := d.DecodeElement(_gbfb.OleLink, &_fbac); _ffcfa != nil {
					return _ffcfa
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _fbac.Name)
				if _ccgba := d.Skip(); _ccgba != nil {
					return _ccgba
				}
			}
		case _a.EndElement:
			break _ebabdc
		case _a.CharData:
		}
	}
	return nil
}
func (_fgddc *CT_PageMargins) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u0066\u0074"}, Value: _fc.Sprintf("\u0025\u0076", _fgddc.LeftAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0069\u0067h\u0074"}, Value: _fc.Sprintf("\u0025\u0076", _fgddc.RightAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0070"}, Value: _fc.Sprintf("\u0025\u0076", _fgddc.TopAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _fc.Sprintf("\u0025\u0076", _fgddc.BottomAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", _fgddc.HeaderAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u006f\u0074\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", _fgddc.FooterAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PageField and its children
func (_bfdefa *CT_PageField) Validate() error {
	return _bfdefa.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064")
}
func (_dcbdec *ST_PhoneticType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dcbdec = 0
	case "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
		*_dcbdec = 1
	case "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
		*_dcbdec = 2
	case "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
		*_dcbdec = 3
	case "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e":
		*_dcbdec = 4
	}
	return nil
}
func (_eaaee *CT_Item) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eaaee.NAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_eaaee.NAttr)})
	}
	if _eaaee.TAttr != ST_ItemTypeUnset {
		_ggaa, _afec := _eaaee.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _afec != nil {
			return _afec
		}
		start.Attr = append(start.Attr, _ggaa)
	}
	if _eaaee.HAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eaaee.HAttr))})
	}
	if _eaaee.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eaaee.SAttr))})
	}
	if _eaaee.SdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eaaee.SdAttr))})
	}
	if _eaaee.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eaaee.FAttr))})
	}
	if _eaaee.MAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eaaee.MAttr))})
	}
	if _eaaee.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eaaee.CAttr))})
	}
	if _eaaee.XAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078"}, Value: _fc.Sprintf("\u0025\u0076", *_eaaee.XAttr)})
	}
	if _eaaee.DAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eaaee.DAttr))})
	}
	if _eaaee.EAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eaaee.EAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gdeag ST_Sqref) String() string { return _e.Join(_gdeag, "\u0020") }
func (_ccgc *CT_Dxfs) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ccgc.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ccgc.CountAttr)})
	}
	e.EncodeToken(start)
	if _ccgc.Dxf != nil {
		_fdab := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0078\u0066"}}
		for _, _daagbc := range _ccgc.Dxf {
			e.EncodeElement(_daagbc, _fdab)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_afffg *ST_WebSourceType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_afffg = 0
	case "\u0073\u0068\u0065e\u0074":
		*_afffg = 1
	case "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a":
		*_afffg = 2
	case "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072":
		*_afffg = 3
	case "\u0072\u0061\u006eg\u0065":
		*_afffg = 4
	case "\u0063\u0068\u0061r\u0074":
		*_afffg = 5
	case "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065":
		*_afffg = 6
	case "\u0071\u0075\u0065r\u0079":
		*_afffg = 7
	case "\u006c\u0061\u0062e\u006c":
		*_afffg = 8
	}
	return nil
}
func (_fgbde ST_ItemType) Validate() error { return _fgbde.ValidateWithPath("") }
func (_bcdcba *ST_MdxSetOrder) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bcdcba = 0
	case "\u0075":
		*_bcdcba = 1
	case "\u0061":
		*_bcdcba = 2
	case "\u0064":
		*_bcdcba = 3
	case "\u0061\u0061":
		*_bcdcba = 4
	case "\u0061\u0064":
		*_bcdcba = 5
	case "\u006e\u0061":
		*_bcdcba = 6
	case "\u006e\u0064":
		*_bcdcba = 7
	}
	return nil
}
func (_fffef ST_FormulaExpression) ValidateWithPath(path string) error {
	switch _fffef {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fffef))
	}
	return nil
}
func (_ffacf *CT_Macrosheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Name.Local = "\u006d\u0061:\u0043\u0054\u005fM\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074"
	e.EncodeToken(start)
	if _ffacf.SheetPr != nil {
		_cbefd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_ffacf.SheetPr, _cbefd)
	}
	if _ffacf.Dimension != nil {
		_fcafe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_ffacf.Dimension, _fcafe)
	}
	if _ffacf.SheetViews != nil {
		_fbaec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_ffacf.SheetViews, _fbaec)
	}
	if _ffacf.SheetFormatPr != nil {
		_feffc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_ffacf.SheetFormatPr, _feffc)
	}
	if _ffacf.Cols != nil {
		_afgffe := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u0073"}}
		for _, _fcbcef := range _ffacf.Cols {
			e.EncodeElement(_fcbcef, _afgffe)
		}
	}
	_eggbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_ffacf.SheetData, _eggbd)
	if _ffacf.SheetProtection != nil {
		_dcgd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_ffacf.SheetProtection, _dcgd)
	}
	if _ffacf.AutoFilter != nil {
		_agaca := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_ffacf.AutoFilter, _agaca)
	}
	if _ffacf.SortState != nil {
		_dagga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_ffacf.SortState, _dagga)
	}
	if _ffacf.DataConsolidate != nil {
		_cdgee := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065"}}
		e.EncodeElement(_ffacf.DataConsolidate, _cdgee)
	}
	if _ffacf.CustomSheetViews != nil {
		_gaedc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_ffacf.CustomSheetViews, _gaedc)
	}
	if _ffacf.PhoneticPr != nil {
		_ccfff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_ffacf.PhoneticPr, _ccfff)
	}
	if _ffacf.ConditionalFormatting != nil {
		_bafe := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"}}
		for _, _acebd := range _ffacf.ConditionalFormatting {
			e.EncodeElement(_acebd, _bafe)
		}
	}
	if _ffacf.PrintOptions != nil {
		_acabd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_ffacf.PrintOptions, _acabd)
	}
	if _ffacf.PageMargins != nil {
		_gadeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_ffacf.PageMargins, _gadeg)
	}
	if _ffacf.PageSetup != nil {
		_becfd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_ffacf.PageSetup, _becfd)
	}
	if _ffacf.HeaderFooter != nil {
		_ddbe := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_ffacf.HeaderFooter, _ddbe)
	}
	if _ffacf.RowBreaks != nil {
		_fedfa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_ffacf.RowBreaks, _fedfa)
	}
	if _ffacf.ColBreaks != nil {
		_aacgad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_ffacf.ColBreaks, _aacgad)
	}
	if _ffacf.CustomProperties != nil {
		_fgfac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}}
		e.EncodeElement(_ffacf.CustomProperties, _fgfac)
	}
	if _ffacf.Drawing != nil {
		_baeef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_ffacf.Drawing, _baeef)
	}
	if _ffacf.LegacyDrawing != nil {
		_bccgdg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_ffacf.LegacyDrawing, _bccgdg)
	}
	if _ffacf.LegacyDrawingHF != nil {
		_cddc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_ffacf.LegacyDrawingHF, _cddc)
	}
	if _ffacf.DrawingHF != nil {
		_fgbdb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_ffacf.DrawingHF, _fgbdb)
	}
	if _ffacf.Picture != nil {
		_deedf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_ffacf.Picture, _deedf)
	}
	if _ffacf.OleObjects != nil {
		_beege := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_ffacf.OleObjects, _beege)
	}
	if _ffacf.ExtLst != nil {
		_agdc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ffacf.ExtLst, _agdc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Index and its children
func (_eedfe *CT_Index) Validate() error {
	return _eedfe.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078")
}

type ST_PhoneticType byte
type ST_GrowShrinkType byte

// ValidateWithPath validates the CT_Controls and its children, prefixing error messages with path
func (_begbb *CT_Controls) ValidateWithPath(path string) error {
	for _agca, _agff := range _begbb.Control {
		if _fcbag := _agff.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u0074\u0072\u006fl\u005b\u0025\u0064\u005d", path, _agca)); _fcbag != nil {
			return _fcbag
		}
	}
	return nil
}
func (_dafaf *CT_Set) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dafaf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_dafaf.CountAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006da\u0078\u0052\u0061\u006e\u006b"}, Value: _fc.Sprintf("\u0025\u0076", _dafaf.MaxRankAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0074\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _dafaf.SetDefinitionAttr)})
	if _dafaf.SortTypeAttr != ST_SortTypeUnset {
		_ebbge, _fgbga := _dafaf.SortTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065"})
		if _fgbga != nil {
			return _fgbga
		}
		start.Attr = append(start.Attr, _ebbge)
	}
	if _dafaf.QueryFailedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "q\u0075\u0065\u0072\u0079\u0046\u0061\u0069\u006c\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dafaf.QueryFailedAttr))})
	}
	e.EncodeToken(start)
	if _dafaf.Tpls != nil {
		_cgegd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _ceceece := range _dafaf.Tpls {
			e.EncodeElement(_ceceece, _cgegd)
		}
	}
	if _dafaf.SortByTuple != nil {
		_baege := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u006f\u0072\u0074\u0042\u0079T\u0075\u0070\u006c\u0065"}}
		e.EncodeElement(_dafaf.SortByTuple, _baege)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fegf *CT_MdxMemeberProp) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _fegf.NAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0070"}, Value: _fc.Sprintf("\u0025\u0076", _fegf.NpAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_WebPublishing and its children, prefixing error messages with path
func (_cbbba *CT_WebPublishing) ValidateWithPath(path string) error {
	if _bcbec := _cbbba.TargetScreenSizeAttr.ValidateWithPath(path + "/\u0054\u0061\u0072\u0067et\u0053c\u0072\u0065\u0065\u006e\u0053i\u007a\u0065\u0041\u0074\u0074\u0072"); _bcbec != nil {
		return _bcbec
	}
	return nil
}

type CT_ExternalSheetNames struct {

	// Sheet Name
	SheetName []*CT_ExternalSheetName
}

const (
	ST_DataConsolidateFunctionUnset     ST_DataConsolidateFunction = 0
	ST_DataConsolidateFunctionAverage   ST_DataConsolidateFunction = 1
	ST_DataConsolidateFunctionCount     ST_DataConsolidateFunction = 2
	ST_DataConsolidateFunctionCountNums ST_DataConsolidateFunction = 3
	ST_DataConsolidateFunctionMax       ST_DataConsolidateFunction = 4
	ST_DataConsolidateFunctionMin       ST_DataConsolidateFunction = 5
	ST_DataConsolidateFunctionProduct   ST_DataConsolidateFunction = 6
	ST_DataConsolidateFunctionStdDev    ST_DataConsolidateFunction = 7
	ST_DataConsolidateFunctionStdDevp   ST_DataConsolidateFunction = 8
	ST_DataConsolidateFunctionSum       ST_DataConsolidateFunction = 9
	ST_DataConsolidateFunctionVar       ST_DataConsolidateFunction = 10
	ST_DataConsolidateFunctionVarp      ST_DataConsolidateFunction = 11
)

func (_edddec *ST_SourceType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_edddec = 0
	case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
		*_edddec = 1
	case "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c":
		*_edddec = 2
	case "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e":
		*_edddec = 3
	case "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f":
		*_edddec = 4
	}
	return nil
}

// Validate validates the Users and its children
func (_egfdeb *Users) Validate() error { return _egfdeb.ValidateWithPath("\u0055\u0073\u0065r\u0073") }

type CT_SortState struct {

	// Sort by Columns
	ColumnSortAttr *bool

	// Case Sensitive
	CaseSensitiveAttr *bool

	// Sort Method
	SortMethodAttr ST_SortMethod

	// Sort Range
	RefAttr string

	// Sort Condition
	SortCondition []*CT_SortCondition
	ExtLst        *CT_ExtensionList
}
type CT_PCDSCPage struct {

	// Page Item String Count
	CountAttr *uint32

	// Page Item
	PageItem []*CT_PageItem
}

// Validate validates the CT_TableFormula and its children
func (_bdbcgd *CT_TableFormula) Validate() error {
	return _bdbcgd.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061")
}

// Validate validates the CT_QueryTableDeletedFields and its children
func (_aeagg *CT_QueryTableDeletedFields) Validate() error {
	return _aeagg.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073")
}
func (_egcg *CT_MapInfo) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0076", _egcg.SelectionNamespacesAttr)})
	e.EncodeToken(start)
	_gffbbd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0053\u0063\u0068\u0065\u006da"}}
	for _, _eadcdf := range _egcg.Schema {
		e.EncodeElement(_eadcdf, _gffbbd)
	}
	_ddbda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u004d\u0061\u0070"}}
	for _, _decea := range _egcg.Map {
		e.EncodeElement(_decea, _ddbda)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_SheetDimension struct {

	// Reference
	RefAttr string
}

func (_adage *CT_VolTopicRef) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fc.Sprintf("\u0025\u0076", _adage.RAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fc.Sprintf("\u0025\u0076", _adage.SAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eagb *CT_ColorScale) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_cedd:
	for {
		_fdae, _cffbe := d.Token()
		if _cffbe != nil {
			return _cffbe
		}
		switch _acea := _fdae.(type) {
		case _a.StartElement:
			switch _acea.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_cdgg := NewCT_Cfvo()
				if _fgca := d.DecodeElement(_cdgg, &_acea); _fgca != nil {
					return _fgca
				}
				_eagb.Cfvo = append(_eagb.Cfvo, _cdgg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_dccdc := NewCT_Color()
				if _egfc := d.DecodeElement(_dccdc, &_acea); _egfc != nil {
					return _egfc
				}
				_eagb.Color = append(_eagb.Color, _dccdc)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065 \u0025\u0076", _acea.Name)
				if _beac := d.Skip(); _beac != nil {
					return _beac
				}
			}
		case _a.EndElement:
			break _cedd
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_ExternalRow() *CT_ExternalRow { _gbba := &CT_ExternalRow{}; return _gbba }
func (_gfd *CT_AutoSortScope) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gfd.PivotArea = NewCT_PivotArea()
_agb:
	for {
		_eebd, _cf := d.Token()
		if _cf != nil {
			return _cf
		}
		switch _gfg := _eebd.(type) {
		case _a.StartElement:
			switch _gfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _abfe := d.DecodeElement(_gfd.PivotArea, &_gfg); _abfe != nil {
					return _abfe
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065\u0020\u0025v", _gfg.Name)
				if _cbg := d.Skip(); _cbg != nil {
					return _cbg
				}
			}
		case _a.EndElement:
			break _agb
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_MdxFunctionTypeUnset ST_MdxFunctionType = 0
	ST_MdxFunctionTypeM     ST_MdxFunctionType = 1
	ST_MdxFunctionTypeV     ST_MdxFunctionType = 2
	ST_MdxFunctionTypeS     ST_MdxFunctionType = 3
	ST_MdxFunctionTypeC     ST_MdxFunctionType = 4
	ST_MdxFunctionTypeR     ST_MdxFunctionType = 5
	ST_MdxFunctionTypeP     ST_MdxFunctionType = 6
	ST_MdxFunctionTypeK     ST_MdxFunctionType = 7
)

// ValidateWithPath validates the CT_ColorFilter and its children, prefixing error messages with path
func (_bfad *CT_ColorFilter) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_MRUColors and its children, prefixing error messages with path
func (_gbgdfa *CT_MRUColors) ValidateWithPath(path string) error {
	for _dfebcb, _cedea := range _gbgdfa.Color {
		if _efadb := _cedea.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _dfebcb)); _efadb != nil {
			return _efadb
		}
	}
	return nil
}
func (_efdfgb *CT_SmartTagType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _efdfgb.NamespaceUriAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006de\u0073\u0070\u0061\u0063\u0065\u0055\u0072\u0069"}, Value: _fc.Sprintf("\u0025\u0076", *_efdfgb.NamespaceUriAttr)})
	}
	if _efdfgb.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_efdfgb.NameAttr)})
	}
	if _efdfgb.UrlAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0072\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_efdfgb.UrlAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gdaecd ST_CfType) ValidateWithPath(path string) error {
	switch _gdaecd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdaecd))
	}
	return nil
}

type ST_DynamicFilterType byte

func (_cfefd ST_ExternalConnectionType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cfefd.String(), start)
}

const (
	ST_DataValidationTypeUnset      ST_DataValidationType = 0
	ST_DataValidationTypeNone       ST_DataValidationType = 1
	ST_DataValidationTypeWhole      ST_DataValidationType = 2
	ST_DataValidationTypeDecimal    ST_DataValidationType = 3
	ST_DataValidationTypeList       ST_DataValidationType = 4
	ST_DataValidationTypeDate       ST_DataValidationType = 5
	ST_DataValidationTypeTime       ST_DataValidationType = 6
	ST_DataValidationTypeTextLength ST_DataValidationType = 7
	ST_DataValidationTypeCustom     ST_DataValidationType = 8
)

// Validate validates the CT_FieldUsage and its children
func (_abgge *CT_FieldUsage) Validate() error {
	return _abgge.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065")
}
func (_bbafad *CT_MetadataType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _bbafad.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e\u0053up\u0070\u006f\u0072\u0074\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _bbafad.MinSupportedVersionAttr)})
	if _bbafad.GhostRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0068\u006f\u0073\u0074\u0052\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.GhostRowAttr))})
	}
	if _bbafad.GhostColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0068\u006f\u0073\u0074\u0043\u006f\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.GhostColAttr))})
	}
	if _bbafad.EditAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0064\u0069\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.EditAttr))})
	}
	if _bbafad.DeleteAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.DeleteAttr))})
	}
	if _bbafad.CopyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0070\u0079"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.CopyAttr))})
	}
	if _bbafad.PasteAllAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0041\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.PasteAllAttr))})
	}
	if _bbafad.PasteFormulasAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.PasteFormulasAttr))})
	}
	if _bbafad.PasteValuesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0061\u0073\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.PasteValuesAttr))})
	}
	if _bbafad.PasteFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073t\u0065\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.PasteFormatsAttr))})
	}
	if _bbafad.PasteCommentsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.PasteCommentsAttr))})
	}
	if _bbafad.PasteDataValidationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0074eD\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.PasteDataValidationAttr))})
	}
	if _bbafad.PasteBordersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073t\u0065\u0042\u006f\u0072\u0064\u0065\u0072\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.PasteBordersAttr))})
	}
	if _bbafad.PasteColWidthsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006c\u0057i\u0064\u0074\u0068\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.PasteColWidthsAttr))})
	}
	if _bbafad.PasteNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070a\u0073t\u0065\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.PasteNumberFormatsAttr))})
	}
	if _bbafad.MergeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0072g\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.MergeAttr))})
	}
	if _bbafad.SplitFirstAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0070\u006c\u0069\u0074\u0046\u0069\u0072\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.SplitFirstAttr))})
	}
	if _bbafad.SplitAllAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0070\u006c\u0069\u0074\u0041\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.SplitAllAttr))})
	}
	if _bbafad.RowColShiftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "r\u006f\u0077\u0043\u006f\u006c\u0053\u0068\u0069\u0066\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.RowColShiftAttr))})
	}
	if _bbafad.ClearAllAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0041\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.ClearAllAttr))})
	}
	if _bbafad.ClearFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006c\u0065a\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.ClearFormatsAttr))})
	}
	if _bbafad.ClearContentsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.ClearContentsAttr))})
	}
	if _bbafad.ClearCommentsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.ClearCommentsAttr))})
	}
	if _bbafad.AssignAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0073\u0073\u0069\u0067\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.AssignAttr))})
	}
	if _bbafad.CoerceAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0065\u0072\u0063\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.CoerceAttr))})
	}
	if _bbafad.AdjustAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0064\u006a\u0075\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.AdjustAttr))})
	}
	if _bbafad.CellMetaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0065\u006c\u006c\u004d\u0065\u0074\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbafad.CellMetaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dbgbf *CT_ExtensionList) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_ggacc:
	for {
		_egdgb, _bggg := d.Token()
		if _bggg != nil {
			return _bggg
		}
		switch _dgdda := _egdgb.(type) {
		case _a.StartElement:
			switch _dgdda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_aagd := NewCT_Extension()
				if _daded := d.DecodeElement(_aagd, &_dgdda); _daded != nil {
					return _daded
				}
				_dbgbf.Ext = append(_dbgbf.Ext, _aagd)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _dgdda.Name)
				if _ddff := d.Skip(); _ddff != nil {
					return _ddff
				}
			}
		case _a.EndElement:
			break _ggacc
		case _a.CharData:
		}
	}
	return nil
}
func (_bggdfc *CT_MdxSet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cgaac := range start.Attr {
		if _cgaac.Name.Local == "\u006e\u0073" {
			_dfce, _fceca := _f.ParseUint(_cgaac.Value, 10, 32)
			if _fceca != nil {
				return _fceca
			}
			_bggdfc.NsAttr = uint32(_dfce)
			continue
		}
		if _cgaac.Name.Local == "\u0063" {
			_bgacd, _egec := _f.ParseUint(_cgaac.Value, 10, 32)
			if _egec != nil {
				return _egec
			}
			_bgdeg := uint32(_bgacd)
			_bggdfc.CAttr = &_bgdeg
			continue
		}
		if _cgaac.Name.Local == "\u006f" {
			_bggdfc.OAttr.UnmarshalXMLAttr(_cgaac)
			continue
		}
	}
_bcfge:
	for {
		_cbbea, _cgagg := d.Token()
		if _cgagg != nil {
			return _cgagg
		}
		switch _gfbdf := _cbbea.(type) {
		case _a.StartElement:
			switch _gfbdf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_fcffe := NewCT_MetadataStringIndex()
				if _gacgc := d.DecodeElement(_fcffe, &_gfbdf); _gacgc != nil {
					return _gacgc
				}
				_bggdfc.N = append(_bggdfc.N, _fcffe)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0064\u0078S\u0065\u0074 \u0025\u0076", _gfbdf.Name)
				if _gadda := d.Skip(); _gadda != nil {
					return _gadda
				}
			}
		case _a.EndElement:
			break _bcfge
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_DeletedField() *CT_DeletedField { _eggd := &CT_DeletedField{}; return _eggd }
func (_gade *CT_ChartFormats) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edfe := range start.Attr {
		if _edfe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bffae, _edef := _f.ParseUint(_edfe.Value, 10, 32)
			if _edef != nil {
				return _edef
			}
			_acaa := uint32(_bffae)
			_gade.CountAttr = &_acaa
			continue
		}
	}
_caee:
	for {
		_ggfb, _aggbf := d.Token()
		if _aggbf != nil {
			return _aggbf
		}
		switch _fcaf := _ggfb.(type) {
		case _a.StartElement:
			switch _fcaf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}:
				_bbfg := NewCT_ChartFormat()
				if _bffea := d.DecodeElement(_bbfg, &_fcaf); _bffea != nil {
					return _bffea
				}
				_gade.ChartFormat = append(_gade.ChartFormat, _bbfg)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _fcaf.Name)
				if _dbgfg := d.Skip(); _dbgfg != nil {
					return _dbgfg
				}
			}
		case _a.EndElement:
			break _caee
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_RevisionHeader() *CT_RevisionHeader {
	_fgfaef := &CT_RevisionHeader{}
	_fgfaef.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_fgfaef.SheetIdMap = NewCT_SheetIdMap()
	return _fgfaef
}

// Validate validates the CT_CalculatedItems and its children
func (_fdf *CT_CalculatedItems) Validate() error {
	return _fdf.ValidateWithPath("\u0043T\u005fC\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073")
}
func (_debee *CT_SmartTags) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_adfcb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
	for _, _ggeaead := range _debee.CellSmartTags {
		e.EncodeElement(_ggeaead, _adfcb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_colItems and its children
func (_bfbgfc *CT_colItems) Validate() error {
	return _bfbgfc.ValidateWithPath("C\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073")
}
func (_fdeeg ST_GroupBy) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_ggdffa := _a.Attr{}
	_ggdffa.Name = name
	switch _fdeeg {
	case ST_GroupByUnset:
		_ggdffa.Value = ""
	case ST_GroupByRange:
		_ggdffa.Value = "\u0072\u0061\u006eg\u0065"
	case ST_GroupBySeconds:
		_ggdffa.Value = "\u0073e\u0063\u006f\u006e\u0064\u0073"
	case ST_GroupByMinutes:
		_ggdffa.Value = "\u006di\u006e\u0075\u0074\u0065\u0073"
	case ST_GroupByHours:
		_ggdffa.Value = "\u0068\u006f\u0075r\u0073"
	case ST_GroupByDays:
		_ggdffa.Value = "\u0064\u0061\u0079\u0073"
	case ST_GroupByMonths:
		_ggdffa.Value = "\u006d\u006f\u006e\u0074\u0068\u0073"
	case ST_GroupByQuarters:
		_ggdffa.Value = "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073"
	case ST_GroupByYears:
		_ggdffa.Value = "\u0079\u0065\u0061r\u0073"
	}
	return _ggdffa, nil
}
func (_cddgec ST_ConditionalFormattingOperator) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cddgec.String(), start)
}

type CT_CacheHierarchies struct {

	// Hierarchy Count
	CountAttr *uint32

	// PivotCache Hierarchy
	CacheHierarchy []*CT_CacheHierarchy
}

// Validate validates the CT_PageMargins and its children
func (_gcag *CT_PageMargins) Validate() error {
	return _gcag.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073")
}
func (_fgdec ST_rwColActionType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fgdec.String(), start)
}
func (_afaec *CT_FunctionGroup) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _afaec.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_afaec.NameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the StyleSheet and its children, prefixing error messages with path
func (_cfcgea *StyleSheet) ValidateWithPath(path string) error {
	if _dfaab := _cfcgea.CT_Stylesheet.ValidateWithPath(path); _dfaab != nil {
		return _dfaab
	}
	return nil
}
func (_dcadf *CT_CustomWorkbookViews) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_fgceb := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0063\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077"}}
	for _, _bdea := range _dcadf.CustomWorkbookView {
		e.EncodeElement(_bdea, _fgceb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dbgg *CT_MRUColors) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_aebag:
	for {
		_caada, _gbbgg := d.Token()
		if _gbbgg != nil {
			return _gbbgg
		}
		switch _gacgga := _caada.(type) {
		case _a.StartElement:
			switch _gacgga.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_ffbab := NewCT_Color()
				if _ecade := d.DecodeElement(_ffbab, &_gacgga); _ecade != nil {
					return _ecade
				}
				_dbgg.Color = append(_dbgg.Color, _ffbab)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_M\u0052\u0055C\u006f\u006c\u006f\u0072\u0073\u0020\u0025\u0076", _gacgga.Name)
				if _gdfdb := d.Skip(); _gdfdb != nil {
					return _gdfdb
				}
			}
		case _a.EndElement:
			break _aebag
		case _a.CharData:
		}
	}
	return nil
}
func (_abdcde *ST_SortMethod) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_abdcde = 0
	case "\u0073\u0074\u0072\u006f\u006b\u0065":
		*_abdcde = 1
	case "\u0070\u0069\u006e\u0059\u0069\u006e":
		*_abdcde = 2
	case "\u006e\u006f\u006e\u0065":
		*_abdcde = 3
	}
	return nil
}

// ValidateWithPath validates the CT_DateGroupItem and its children, prefixing error messages with path
func (_fedaa *CT_DateGroupItem) ValidateWithPath(path string) error {
	if _fedaa.DateTimeGroupingAttr == ST_DateTimeGroupingUnset {
		return _fc.Errorf("\u0025s\u002f\u0044a\u0074\u0065\u0054\u0069m\u0065\u0047\u0072o\u0075\u0070\u0069\u006e\u0067\u0041\u0074\u0074\u0072 i\u0073\u0020\u0061 \u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079 \u0066\u0069e\u006c\u0064", path)
	}
	if _eaba := _fedaa.DateTimeGroupingAttr.ValidateWithPath(path + "/\u0044\u0061\u0074\u0065Ti\u006de\u0047\u0072\u006f\u0075\u0070i\u006e\u0067\u0041\u0074\u0074\u0072"); _eaba != nil {
		return _eaba
	}
	return nil
}
func NewCT_DrawingHF() *CT_DrawingHF { _dcae := &CT_DrawingHF{}; return _dcae }
func NewHeaders() *Headers {
	_gacec := &Headers{}
	_gacec.CT_RevisionHeaders = *NewCT_RevisionHeaders()
	return _gacec
}

// Validate validates the CT_Drawing and its children
func (_bdebe *CT_Drawing) Validate() error {
	return _bdebe.ValidateWithPath("\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}
func NewCT_ExternalDefinedName() *CT_ExternalDefinedName {
	_edbc := &CT_ExternalDefinedName{}
	return _edbc
}
func (_cdcgc *ST_Comments) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cdcgc = 0
	case "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065":
		*_cdcgc = 1
	case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
		*_cdcgc = 2
	case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074":
		*_cdcgc = 3
	}
	return nil
}

type CT_SheetFormatPr struct {

	// Base Column Width
	BaseColWidthAttr *uint32

	// Default Column Width
	DefaultColWidthAttr *float64

	// Default Row Height
	DefaultRowHeightAttr float64

	// Custom Height
	CustomHeightAttr *bool

	// Hidden By Default
	ZeroHeightAttr *bool

	// Thick Top Border
	ThickTopAttr *bool

	// Thick Bottom Border
	ThickBottomAttr *bool

	// Maximum Outline Row
	OutlineLevelRowAttr *uint8

	// Column Outline Level
	OutlineLevelColAttr *uint8
}

func NewCT_CellProtection() *CT_CellProtection { _gbcf := &CT_CellProtection{}; return _gbcf }
func (_bgfbc ST_SortBy) String() string {
	switch _bgfbc {
	case 0:
		return ""
	case 1:
		return "\u0076\u0061\u006cu\u0065"
	case 2:
		return "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"
	case 3:
		return "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr"
	case 4:
		return "\u0069\u0063\u006f\u006e"
	}
	return ""
}
func NewCT_MdxMetadata() *CT_MdxMetadata { _eggdc := &CT_MdxMetadata{}; return _eggdc }
func NewCT_Authors() *CT_Authors         { _aae := &CT_Authors{}; return _aae }

// ValidateWithPath validates the CT_DataValidations and its children, prefixing error messages with path
func (_gcda *CT_DataValidations) ValidateWithPath(path string) error {
	for _abcf, _gdgea := range _gcda.DataValidation {
		if _dabd := _gdgea.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0044\u0061ta\u0056a\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u005b\u0025\u0064\u005d", path, _abcf)); _dabd != nil {
			return _dabd
		}
	}
	return nil
}
func (_bdgaf *CT_ExternalDefinedName) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dcdc := range start.Attr {
		if _dcdc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cefca, _fbbff := _dcdc.Value, error(nil)
			if _fbbff != nil {
				return _fbbff
			}
			_bdgaf.NameAttr = _cefca
			continue
		}
		if _dcdc.Name.Local == "\u0072\u0065\u0066\u0065\u0072\u0073\u0054\u006f" {
			_dafge, _gdcfc := _dcdc.Value, error(nil)
			if _gdcfc != nil {
				return _gdcfc
			}
			_bdgaf.RefersToAttr = &_dafge
			continue
		}
		if _dcdc.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_dbabe, _aega := _f.ParseUint(_dcdc.Value, 10, 32)
			if _aega != nil {
				return _aega
			}
			_dggd := uint32(_dbabe)
			_bdgaf.SheetIdAttr = &_dggd
			continue
		}
	}
	for {
		_cdbdca, _affb := d.Token()
		if _affb != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072n\u0061l\u0044e\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _affb)
		}
		if _fdfe, _bcgd := _cdbdca.(_a.EndElement); _bcgd && _fdfe.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Query struct {

	// MDX Query String
	MdxAttr string

	// Tuples
	Tpls *CT_Tuples
}

func NewCT_PCDKPI() *CT_PCDKPI { _dacad := &CT_PCDKPI{}; return _dacad }

// ValidateWithPath validates the CT_ExternalSheetDataSet and its children, prefixing error messages with path
func (_fedaab *CT_ExternalSheetDataSet) ValidateWithPath(path string) error {
	for _dcea, _dgbga := range _fedaab.SheetData {
		if _bagcc := _dgbga.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u005b\u0025\u0064\u005d", path, _dcea)); _bagcc != nil {
			return _bagcc
		}
	}
	return nil
}
func NewCT_CellWatch() *CT_CellWatch { _beb := &CT_CellWatch{}; return _beb }

type CT_UnderlineProperty struct {

	// Underline Value
	ValAttr ST_UnderlineValues
}

func (_bbbdf ST_ConditionalFormattingOperator) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gfcdb := _a.Attr{}
	_gfcdb.Name = name
	switch _bbbdf {
	case ST_ConditionalFormattingOperatorUnset:
		_gfcdb.Value = ""
	case ST_ConditionalFormattingOperatorLessThan:
		_gfcdb.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_ConditionalFormattingOperatorLessThanOrEqual:
		_gfcdb.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorEqual:
		_gfcdb.Value = "\u0065\u0071\u0075a\u006c"
	case ST_ConditionalFormattingOperatorNotEqual:
		_gfcdb.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorGreaterThanOrEqual:
		_gfcdb.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorGreaterThan:
		_gfcdb.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_ConditionalFormattingOperatorBetween:
		_gfcdb.Value = "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case ST_ConditionalFormattingOperatorNotBetween:
		_gfcdb.Value = "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_ConditionalFormattingOperatorContainsText:
		_gfcdb.Value = "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_ConditionalFormattingOperatorNotContains:
		_gfcdb.Value = "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case ST_ConditionalFormattingOperatorBeginsWith:
		_gfcdb.Value = "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case ST_ConditionalFormattingOperatorEndsWith:
		_gfcdb.Value = "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	}
	return _gfcdb, nil
}

type CT_Record struct {

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime

	// Shared Items Index
	X []*CT_Index
}

func (_bfcad *ST_TextHAlign) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ggfbc, _abede := d.Token()
	if _abede != nil {
		return _abede
	}
	if _adbce, _agafb := _ggfbc.(_a.EndElement); _agafb && _adbce.Name == start.Name {
		*_bfcad = 1
		return nil
	}
	if _bbddb, _fbgde := _ggfbc.(_a.CharData); !_fbgde {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggfbc)
	} else {
		switch string(_bbddb) {
		case "":
			*_bfcad = 0
		case "\u006c\u0065\u0066\u0074":
			*_bfcad = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_bfcad = 2
		case "\u0072\u0069\u0067h\u0074":
			*_bfcad = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_bfcad = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_bfcad = 5
		}
	}
	_ggfbc, _abede = d.Token()
	if _abede != nil {
		return _abede
	}
	if _abfcfd, _fecbf := _ggfbc.(_a.EndElement); _fecbf && _abfcfd.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggfbc)
}
func NewCT_DataBar() *CT_DataBar { _dcfg := &CT_DataBar{}; _dcfg.Color = NewCT_Color(); return _dcfg }
func (_gdddg *ST_DataValidationOperator) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gdddg = 0
	case "\u0062e\u0074\u0077\u0065\u0065\u006e":
		*_gdddg = 1
	case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_gdddg = 2
	case "\u0065\u0071\u0075a\u006c":
		*_gdddg = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_gdddg = 4
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_gdddg = 5
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_gdddg = 6
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_gdddg = 7
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_gdddg = 8
	}
	return nil
}
func (_eaedb *CT_PCDSDTCEntries) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eaedb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_eaedb.CountAttr)})
	}
	e.EncodeToken(start)
	if _eaedb.M != nil {
		_bdde := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _efgeee := range _eaedb.M {
			e.EncodeElement(_efgeee, _bdde)
		}
	}
	if _eaedb.N != nil {
		_eeegb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _faeebe := range _eaedb.N {
			e.EncodeElement(_faeebe, _eeegb)
		}
	}
	if _eaedb.E != nil {
		_caeaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _fdfdb := range _eaedb.E {
			e.EncodeElement(_fdfdb, _caeaf)
		}
	}
	if _eaedb.S != nil {
		_eeffe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _ddgdae := range _eaedb.S {
			e.EncodeElement(_ddgdae, _eeffe)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ecacc *CT_Pages) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _agacb := range start.Attr {
		if _agacb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eeaec, _bfgfb := _f.ParseUint(_agacb.Value, 10, 32)
			if _bfgfb != nil {
				return _bfgfb
			}
			_bgbb := uint32(_eeaec)
			_ecacc.CountAttr = &_bgbb
			continue
		}
	}
_feadd:
	for {
		_gbgb, _fbfdc := d.Token()
		if _fbfdc != nil {
			return _fbfdc
		}
		switch _fbffda := _gbgb.(type) {
		case _a.StartElement:
			switch _fbffda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065"}:
				_dedfe := NewCT_PCDSCPage()
				if _cfddg := d.DecodeElement(_dedfe, &_fbffda); _cfddg != nil {
					return _cfddg
				}
				_ecacc.Page = append(_ecacc.Page, _dedfe)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073\u0020\u0025\u0076", _fbffda.Name)
				if _fdgbd := d.Skip(); _fdgbd != nil {
					return _fdgbd
				}
			}
		case _a.EndElement:
			break _feadd
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_DdeValueTypeUnset ST_DdeValueType = 0
	ST_DdeValueTypeNil   ST_DdeValueType = 1
	ST_DdeValueTypeB     ST_DdeValueType = 2
	ST_DdeValueTypeN     ST_DdeValueType = 3
	ST_DdeValueTypeE     ST_DdeValueType = 4
	ST_DdeValueTypeStr   ST_DdeValueType = 5
)

func (_cbgee ST_FileType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dcbdb := _a.Attr{}
	_dcbdb.Name = name
	switch _cbgee {
	case ST_FileTypeUnset:
		_dcbdb.Value = ""
	case ST_FileTypeMac:
		_dcbdb.Value = "\u006d\u0061\u0063"
	case ST_FileTypeWin:
		_dcbdb.Value = "\u0077\u0069\u006e"
	case ST_FileTypeDos:
		_dcbdb.Value = "\u0064\u006f\u0073"
	case ST_FileTypeLin:
		_dcbdb.Value = "\u006c\u0069\u006e"
	case ST_FileTypeOther:
		_dcbdb.Value = "\u006f\u0074\u0068e\u0072"
	}
	return _dcbdb, nil
}

// ValidateWithPath validates the CT_ExternalSheetData and its children, prefixing error messages with path
func (_dabfb *CT_ExternalSheetData) ValidateWithPath(path string) error {
	for _cbfb, _feaf := range _dabfb.Row {
		if _adfgd := _feaf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u006f\u0077\u005b\u0025\u0064\u005d", path, _cbfb)); _adfgd != nil {
			return _adfgd
		}
	}
	return nil
}
func (_bacf *CT_MetadataRecord) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074"}, Value: _fc.Sprintf("\u0025\u0076", _bacf.TAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fc.Sprintf("\u0025\u0076", _bacf.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ccafad ST_TableStyleType) String() string {
	switch _ccafad {
	case 0:
		return ""
	case 1:
		return "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065"
	case 2:
		return "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw"
	case 3:
		return "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 4:
		return "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case 5:
		return "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case 6:
		return "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065"
	case 7:
		return "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065"
	case 8:
		return "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065"
	case 9:
		return "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065"
	case 10:
		return "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c"
	case 11:
		return "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c"
	case 12:
		return "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c"
	case 13:
		return "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c"
	case 14:
		return "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case 15:
		return "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e"
	case 16:
		return "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case 17:
		return "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 18:
		return "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077"
	case 19:
		return "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 20:
		return "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077"
	case 21:
		return "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case 22:
		return "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067"
	case 23:
		return "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case 24:
		return "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case 25:
		return "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067"
	case 26:
		return "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case 27:
		return "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073"
	case 28:
		return "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return ""
}
func (_addfe ST_PatternType) String() string {
	switch _addfe {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u006f\u006ci\u0064"
	case 3:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079"
	case 4:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case 5:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case 6:
		return "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"
	case 7:
		return "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case 8:
		return "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e"
	case 9:
		return "\u0064\u0061\u0072\u006b\u0055\u0070"
	case 10:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064"
	case 11:
		return "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case 12:
		return "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"
	case 13:
		return "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case 14:
		return "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n"
	case 15:
		return "\u006ci\u0067\u0068\u0074\u0055\u0070"
	case 16:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d"
	case 17:
		return "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case 18:
		return "\u0067r\u0061\u0079\u0031\u0032\u0035"
	case 19:
		return "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035"
	}
	return ""
}

type CT_MemberProperty struct {

	// OLAP Member Property Unique Name
	NameAttr *string

	// Show Cell
	ShowCellAttr *bool

	// Show Tooltip
	ShowTipAttr *bool

	// Show As Caption
	ShowAsCaptionAttr *bool

	// Name Length
	NameLenAttr *uint32

	// Property Name Character Index
	PPosAttr *uint32

	// Property Name Length
	PLenAttr *uint32

	// Level Index
	LevelAttr *uint32

	// Field Index
	FieldAttr uint32
}

func (_fbacf ST_Orientation) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gaagbb := _a.Attr{}
	_gaagbb.Name = name
	switch _fbacf {
	case ST_OrientationUnset:
		_gaagbb.Value = ""
	case ST_OrientationDefault:
		_gaagbb.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_OrientationPortrait:
		_gaagbb.Value = "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074"
	case ST_OrientationLandscape:
		_gaagbb.Value = "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e"
	}
	return _gaagbb, nil
}

// ValidateWithPath validates the CT_PageField and its children, prefixing error messages with path
func (_fecdgb *CT_PageField) ValidateWithPath(path string) error {
	if _fecdgb.ExtLst != nil {
		if _abbdb := _fecdgb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abbdb != nil {
			return _abbdb
		}
	}
	return nil
}
func ParseSliceST_Sqref(s string) (ST_Sqref, error) { return ST_Sqref(_e.Fields(s)), nil }

const (
	ST_SmartTagShowUnset       ST_SmartTagShow = 0
	ST_SmartTagShowAll         ST_SmartTagShow = 1
	ST_SmartTagShowNone        ST_SmartTagShow = 2
	ST_SmartTagShowNoIndicator ST_SmartTagShow = 3
)

func (_fddbed ST_DataConsolidateFunction) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gacee := _a.Attr{}
	_gacee.Name = name
	switch _fddbed {
	case ST_DataConsolidateFunctionUnset:
		_gacee.Value = ""
	case ST_DataConsolidateFunctionAverage:
		_gacee.Value = "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case ST_DataConsolidateFunctionCount:
		_gacee.Value = "\u0063\u006f\u0075n\u0074"
	case ST_DataConsolidateFunctionCountNums:
		_gacee.Value = "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case ST_DataConsolidateFunctionMax:
		_gacee.Value = "\u006d\u0061\u0078"
	case ST_DataConsolidateFunctionMin:
		_gacee.Value = "\u006d\u0069\u006e"
	case ST_DataConsolidateFunctionProduct:
		_gacee.Value = "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case ST_DataConsolidateFunctionStdDev:
		_gacee.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_DataConsolidateFunctionStdDevp:
		_gacee.Value = "\u0073t\u0064\u0044\u0065\u0076\u0070"
	case ST_DataConsolidateFunctionSum:
		_gacee.Value = "\u0073\u0075\u006d"
	case ST_DataConsolidateFunctionVar:
		_gacee.Value = "\u0076\u0061\u0072"
	case ST_DataConsolidateFunctionVarp:
		_gacee.Value = "\u0076\u0061\u0072\u0070"
	}
	return _gacee, nil
}

// Validate validates the Worksheet and its children
func (_deaacc *Worksheet) Validate() error {
	return _deaacc.ValidateWithPath("\u0057o\u0072\u006b\u0073\u0068\u0065\u0065t")
}
func (_cccgd *CT_TextPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cccgd.PromptAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cccgd.PromptAttr))})
	}
	if _cccgd.FileTypeAttr != ST_FileTypeUnset {
		_bccde, _dgbda := _cccgd.FileTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0066\u0069\u006c\u0065\u0054\u0079\u0070\u0065"})
		if _dgbda != nil {
			return _dgbda
		}
		start.Attr = append(start.Attr, _bccde)
	}
	if _cccgd.CodePageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_cccgd.CodePageAttr)})
	}
	if _cccgd.CharacterSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cccgd.CharacterSetAttr)})
	}
	if _cccgd.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0076", *_cccgd.FirstRowAttr)})
	}
	if _cccgd.SourceFileAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_cccgd.SourceFileAttr)})
	}
	if _cccgd.DelimitedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cccgd.DelimitedAttr))})
	}
	if _cccgd.DecimalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u0063\u0069\u006d\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_cccgd.DecimalAttr)})
	}
	if _cccgd.ThousandsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074h\u006f\u0075\u0073\u0061\u006e\u0064s"}, Value: _fc.Sprintf("\u0025\u0076", *_cccgd.ThousandsAttr)})
	}
	if _cccgd.TabAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061\u0062"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cccgd.TabAttr))})
	}
	if _cccgd.SpaceAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0070\u0061c\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cccgd.SpaceAttr))})
	}
	if _cccgd.CommaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006dm\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cccgd.CommaAttr))})
	}
	if _cccgd.SemicolonAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cccgd.SemicolonAttr))})
	}
	if _cccgd.ConsecutiveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cccgd.ConsecutiveAttr))})
	}
	if _cccgd.QualifierAttr != ST_QualifierUnset {
		_gcagd, _eeccf := _cccgd.QualifierAttr.MarshalXMLAttr(_a.Name{Local: "\u0071u\u0061\u006c\u0069\u0066\u0069\u0065r"})
		if _eeccf != nil {
			return _eeccf
		}
		start.Attr = append(start.Attr, _gcagd)
	}
	if _cccgd.DelimiterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065r"}, Value: _fc.Sprintf("\u0025\u0076", *_cccgd.DelimiterAttr)})
	}
	e.EncodeToken(start)
	if _cccgd.TextFields != nil {
		_bfaaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_cccgd.TextFields, _bfaaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dccdaf ST_Type) String() string {
	switch _dccdaf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061\u006c\u006c"
	case 3:
		return "\u0072\u006f\u0077"
	case 4:
		return "\u0063\u006f\u006c\u0075\u006d\u006e"
	}
	return ""
}

type CT_ExternalReference struct{ IdAttr string }

func (_befb *CT_ChartFormat) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_befb.PivotArea = NewCT_PivotArea()
	for _, _efge := range start.Attr {
		if _efge.Name.Local == "\u0063\u0068\u0061r\u0074" {
			_facbc, _eggff := _f.ParseUint(_efge.Value, 10, 32)
			if _eggff != nil {
				return _eggff
			}
			_befb.ChartAttr = uint32(_facbc)
			continue
		}
		if _efge.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074" {
			_bfff, _daff := _f.ParseUint(_efge.Value, 10, 32)
			if _daff != nil {
				return _daff
			}
			_befb.FormatAttr = uint32(_bfff)
			continue
		}
		if _efge.Name.Local == "\u0073\u0065\u0072\u0069\u0065\u0073" {
			_bcae, _faae := _f.ParseBool(_efge.Value)
			if _faae != nil {
				return _faae
			}
			_befb.SeriesAttr = &_bcae
			continue
		}
	}
_bfedf:
	for {
		_abfg, _cgbg := d.Token()
		if _cgbg != nil {
			return _cgbg
		}
		switch _gbegg := _abfg.(type) {
		case _a.StartElement:
			switch _gbegg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _aceb := d.DecodeElement(_befb.PivotArea, &_gbegg); _aceb != nil {
					return _aceb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046\u006fr\u006da\u0074\u0020\u0025\u0076", _gbegg.Name)
				if _ecbg := d.Skip(); _ecbg != nil {
					return _ecbg
				}
			}
		case _a.EndElement:
			break _bfedf
		case _a.CharData:
		}
	}
	return nil
}
func (_gbbffg *ST_DvAspect) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gfded, _aeccd := d.Token()
	if _aeccd != nil {
		return _aeccd
	}
	if _eedacg, _aggaea := _gfded.(_a.EndElement); _aggaea && _eedacg.Name == start.Name {
		*_gbbffg = 1
		return nil
	}
	if _becaee, _bedbg := _gfded.(_a.CharData); !_bedbg {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfded)
	} else {
		switch string(_becaee) {
		case "":
			*_gbbffg = 0
		case "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054":
			*_gbbffg = 1
		case "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e":
			*_gbbffg = 2
		}
	}
	_gfded, _aeccd = d.Token()
	if _aeccd != nil {
		return _aeccd
	}
	if _efeedb, _cbegd := _gfded.(_a.EndElement); _cbegd && _efeedb.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfded)
}
func (_bbeec *CT_QueryTableField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eedgc := range start.Attr {
		if _eedgc.Name.Local == "\u0069\u0064" {
			_abgbge, _bgcce := _f.ParseUint(_eedgc.Value, 10, 32)
			if _bgcce != nil {
				return _bgcce
			}
			_bbeec.IdAttr = uint32(_abgbge)
			continue
		}
		if _eedgc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_acabg, _bbgbc := _eedgc.Value, error(nil)
			if _bbgbc != nil {
				return _bbgbc
			}
			_bbeec.NameAttr = &_acabg
			continue
		}
		if _eedgc.Name.Local == "\u0064a\u0074\u0061\u0042\u006f\u0075\u006ed" {
			_dcedgc, _bcbaf := _f.ParseBool(_eedgc.Value)
			if _bcbaf != nil {
				return _bcbaf
			}
			_bbeec.DataBoundAttr = &_dcedgc
			continue
		}
		if _eedgc.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_cbceg, _beegba := _f.ParseBool(_eedgc.Value)
			if _beegba != nil {
				return _beegba
			}
			_bbeec.RowNumbersAttr = &_cbceg
			continue
		}
		if _eedgc.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_cggga, _gbgggf := _f.ParseBool(_eedgc.Value)
			if _gbgggf != nil {
				return _gbgggf
			}
			_bbeec.FillFormulasAttr = &_cggga
			continue
		}
		if _eedgc.Name.Local == "\u0063l\u0069\u0070\u0070\u0065\u0064" {
			_bfeacd, _gcbce := _f.ParseBool(_eedgc.Value)
			if _gcbce != nil {
				return _gcbce
			}
			_bbeec.ClippedAttr = &_bfeacd
			continue
		}
		if _eedgc.Name.Local == "\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0049\u0064" {
			_bffdf, _edaba := _f.ParseUint(_eedgc.Value, 10, 32)
			if _edaba != nil {
				return _edaba
			}
			_ffbfb := uint32(_bffdf)
			_bbeec.TableColumnIdAttr = &_ffbfb
			continue
		}
	}
_ecddb:
	for {
		_bcbgg, _acgeb := d.Token()
		if _acgeb != nil {
			return _acgeb
		}
		switch _abcfbf := _bcbgg.(type) {
		case _a.StartElement:
			switch _abcfbf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbeec.ExtLst = NewCT_ExtensionList()
				if _faccb := d.DecodeElement(_bbeec.ExtLst, &_abcfbf); _faccb != nil {
					return _faccb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _abcfbf.Name)
				if _fcdddc := d.Skip(); _fcdddc != nil {
					return _fcdddc
				}
			}
		case _a.EndElement:
			break _ecddb
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomFilters and its children, prefixing error messages with path
func (_ccfd *CT_CustomFilters) ValidateWithPath(path string) error {
	for _cfce, _fdbd := range _ccfd.CustomFilter {
		if _dccfg := _fdbd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _cfce)); _dccfg != nil {
			return _dccfg
		}
	}
	return nil
}
func NewCT_Color() *CT_Color { _bdcec := &CT_Color{}; return _bdcec }

type ST_MdxKPIProperty byte

// Validate validates the CT_LegacyDrawing and its children
func (_dfaae *CT_LegacyDrawing) Validate() error {
	return _dfaae.ValidateWithPath("\u0043\u0054_\u004c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}
func NewCT_PCDSDTCEntries() *CT_PCDSDTCEntries { _daebf := &CT_PCDSDTCEntries{}; return _daebf }

// Validate validates the CT_IndexedColors and its children
func (_edbac *CT_IndexedColors) Validate() error {
	return _edbac.ValidateWithPath("\u0043\u0054_\u0049\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073")
}
func (_bbggd ST_HorizontalAlignment) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dafafg := _a.Attr{}
	_dafafg.Name = name
	switch _bbggd {
	case ST_HorizontalAlignmentUnset:
		_dafafg.Value = ""
	case ST_HorizontalAlignmentGeneral:
		_dafafg.Value = "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case ST_HorizontalAlignmentLeft:
		_dafafg.Value = "\u006c\u0065\u0066\u0074"
	case ST_HorizontalAlignmentCenter:
		_dafafg.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_HorizontalAlignmentRight:
		_dafafg.Value = "\u0072\u0069\u0067h\u0074"
	case ST_HorizontalAlignmentFill:
		_dafafg.Value = "\u0066\u0069\u006c\u006c"
	case ST_HorizontalAlignmentJustify:
		_dafafg.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_HorizontalAlignmentCenterContinuous:
		_dafafg.Value = "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073"
	case ST_HorizontalAlignmentDistributed:
		_dafafg.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _dafafg, nil
}
func (_fbcad ST_SortBy) Validate() error { return _fbcad.ValidateWithPath("") }
func (_ffdbg *CT_GroupLevels) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ffdbg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ffdbg.CountAttr)})
	}
	e.EncodeToken(start)
	_dgbcd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}}
	for _, _bdecd := range _ffdbg.GroupLevel {
		e.EncodeElement(_bdecd, _dgbcd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_acbecg *ST_PaneState) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_acbecg = 0
	case "\u0073\u0070\u006ci\u0074":
		*_acbecg = 1
	case "\u0066\u0072\u006f\u007a\u0065\u006e":
		*_acbecg = 2
	case "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074":
		*_acbecg = 3
	}
	return nil
}
func (_accgb ST_DdeValueType) ValidateWithPath(path string) error {
	switch _accgb {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_accgb))
	}
	return nil
}
func (_daaeed ST_CellComments) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_baddc := _a.Attr{}
	_baddc.Name = name
	switch _daaeed {
	case ST_CellCommentsUnset:
		_baddc.Value = ""
	case ST_CellCommentsNone:
		_baddc.Value = "\u006e\u006f\u006e\u0065"
	case ST_CellCommentsAsDisplayed:
		_baddc.Value = "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064"
	case ST_CellCommentsAtEnd:
		_baddc.Value = "\u0061\u0074\u0045n\u0064"
	}
	return _baddc, nil
}

type ST_FieldSortType byte

func (_fgdcfc ST_RefMode) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_ddbbfg := _a.Attr{}
	_ddbbfg.Name = name
	switch _fgdcfc {
	case ST_RefModeUnset:
		_ddbbfg.Value = ""
	case ST_RefModeA1:
		_ddbbfg.Value = "\u0041\u0031"
	case ST_RefModeR1C1:
		_ddbbfg.Value = "\u0052\u0031\u0043\u0031"
	}
	return _ddbbfg, nil
}
func (_dbde *CT_GradientStop) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dbde.Color = NewCT_Color()
	for _, _edcbe := range start.Attr {
		if _edcbe.Name.Local == "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_caeag, _becba := _f.ParseFloat(_edcbe.Value, 64)
			if _becba != nil {
				return _becba
			}
			_dbde.PositionAttr = _caeag
			continue
		}
	}
_dgfa:
	for {
		_ffgfg, _afcef := d.Token()
		if _afcef != nil {
			return _afcef
		}
		switch _agbgd := _ffgfg.(type) {
		case _a.StartElement:
			switch _agbgd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				if _edfbf := d.DecodeElement(_dbde.Color, &_agbgd); _edfbf != nil {
					return _edfbf
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0020\u0025\u0076", _agbgd.Name)
				if _gggc := d.Skip(); _gggc != nil {
					return _gggc
				}
			}
		case _a.EndElement:
			break _dgfa
		case _a.CharData:
		}
	}
	return nil
}

type CT_MRUColors struct {

	// Color
	Color []*CT_Color
}

// ValidateWithPath validates the CT_MeasureGroups and its children, prefixing error messages with path
func (_gaee *CT_MeasureGroups) ValidateWithPath(path string) error {
	for _bffd, _adbf := range _gaee.MeasureGroup {
		if _gbac := _adbf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004dea\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u005b\u0025\u0064\u005d", path, _bffd)); _gbac != nil {
			return _gbac
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RangeSet and its children, prefixing error messages with path
func (_fcdca *CT_RangeSet) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_PivotFields and its children
func (_agbbgb *CT_PivotFields) Validate() error {
	return _agbbgb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073")
}
func (_gbgc *CT_Format) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gbgc.PivotArea = NewCT_PivotArea()
	for _, _eefbd := range start.Attr {
		if _eefbd.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_gbgc.ActionAttr.UnmarshalXMLAttr(_eefbd)
			continue
		}
		if _eefbd.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_ggbf, _fgacc := _f.ParseUint(_eefbd.Value, 10, 32)
			if _fgacc != nil {
				return _fgacc
			}
			_decbb := uint32(_ggbf)
			_gbgc.DxfIdAttr = &_decbb
			continue
		}
	}
_dbfa:
	for {
		_dgfde, _cfeaf := d.Token()
		if _cfeaf != nil {
			return _cfeaf
		}
		switch _afacb := _dgfde.(type) {
		case _a.StartElement:
			switch _afacb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _dcffg := d.DecodeElement(_gbgc.PivotArea, &_afacb); _dcffg != nil {
					return _dcffg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbgc.ExtLst = NewCT_ExtensionList()
				if _fbgcd := d.DecodeElement(_gbgc.ExtLst, &_afacb); _fbgcd != nil {
					return _fbgcd
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0046\u006f\u0072m\u0061\u0074 \u0025\u0076", _afacb.Name)
				if _abced := d.Skip(); _abced != nil {
					return _abced
				}
			}
		case _a.EndElement:
			break _dbfa
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Workbook and its children, prefixing error messages with path
func (_eegfca *CT_Workbook) ValidateWithPath(path string) error {
	if _efcacg := _eegfca.ConformanceAttr.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006fr\u006d\u0061\u006e\u0063\u0065\u0041\u0074\u0074\u0072"); _efcacg != nil {
		return _efcacg
	}
	if _eegfca.FileVersion != nil {
		if _aggbe := _eegfca.FileVersion.ValidateWithPath(path + "\u002f\u0046\u0069l\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"); _aggbe != nil {
			return _aggbe
		}
	}
	if _eegfca.FileSharing != nil {
		if _cbafe := _eegfca.FileSharing.ValidateWithPath(path + "\u002f\u0046\u0069l\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"); _cbafe != nil {
			return _cbafe
		}
	}
	if _eegfca.WorkbookPr != nil {
		if _cdefg := _eegfca.WorkbookPr.ValidateWithPath(path + "/\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"); _cdefg != nil {
			return _cdefg
		}
	}
	if _eegfca.WorkbookProtection != nil {
		if _edffa := _eegfca.WorkbookProtection.ValidateWithPath(path + "\u002f\u0057\u006f\u0072kb\u006f\u006f\u006b\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _edffa != nil {
			return _edffa
		}
	}
	if _eegfca.BookViews != nil {
		if _ecbbac := _eegfca.BookViews.ValidateWithPath(path + "\u002f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"); _ecbbac != nil {
			return _ecbbac
		}
	}
	if _abdbae := _eegfca.Sheets.ValidateWithPath(path + "\u002fS\u0068\u0065\u0065\u0074\u0073"); _abdbae != nil {
		return _abdbae
	}
	if _eegfca.FunctionGroups != nil {
		if _bbdbf := _eegfca.FunctionGroups.ValidateWithPath(path + "\u002fF\u0075n\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0073"); _bbdbf != nil {
			return _bbdbf
		}
	}
	if _eegfca.ExternalReferences != nil {
		if _ebdba := _eegfca.ExternalReferences.ValidateWithPath(path + "\u002f\u0045\u0078\u0074er\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"); _ebdba != nil {
			return _ebdba
		}
	}
	if _eegfca.DefinedNames != nil {
		if _decbe := _eegfca.DefinedNames.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"); _decbe != nil {
			return _decbe
		}
	}
	if _eegfca.CalcPr != nil {
		if _bbdgc := _eegfca.CalcPr.ValidateWithPath(path + "\u002fC\u0061\u006c\u0063\u0050\u0072"); _bbdgc != nil {
			return _bbdgc
		}
	}
	if _eegfca.OleSize != nil {
		if _ccacf := _eegfca.OleSize.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u0053\u0069\u007a\u0065"); _ccacf != nil {
			return _ccacf
		}
	}
	if _eegfca.CustomWorkbookViews != nil {
		if _fefcb := _eegfca.CustomWorkbookViews.ValidateWithPath(path + "/\u0043u\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006bb\u006f\u006f\u006b\u0056ie\u0077\u0073"); _fefcb != nil {
			return _fefcb
		}
	}
	if _eegfca.PivotCaches != nil {
		if _cefbd := _eegfca.PivotCaches.ValidateWithPath(path + "\u002f\u0050\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"); _cefbd != nil {
			return _cefbd
		}
	}
	if _eegfca.SmartTagPr != nil {
		if _cdedg := _eegfca.SmartTagPr.ValidateWithPath(path + "/\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"); _cdedg != nil {
			return _cdedg
		}
	}
	if _eegfca.SmartTagTypes != nil {
		if _egdbgf := _eegfca.SmartTagTypes.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067T\u0079\u0070\u0065\u0073"); _egdbgf != nil {
			return _egdbgf
		}
	}
	if _eegfca.WebPublishing != nil {
		if _bdbca := _eegfca.WebPublishing.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u0069\u006e\u0067"); _bdbca != nil {
			return _bdbca
		}
	}
	for _gbcgg, _gagee := range _eegfca.FileRecoveryPr {
		if _agggb := _gagee.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0046\u0069le\u0052e\u0063\u006f\u0076\u0065\u0072y\u0050\u0072\u005b\u0025\u0064\u005d", path, _gbcgg)); _agggb != nil {
			return _agggb
		}
	}
	if _eegfca.WebPublishObjects != nil {
		if _ebgdd := _eegfca.WebPublishObjects.ValidateWithPath(path + "\u002fW\u0065b\u0050\u0075\u0062\u006c\u0069s\u0068\u004fb\u006a\u0065\u0063\u0074\u0073"); _ebgdd != nil {
			return _ebgdd
		}
	}
	if _eegfca.ExtLst != nil {
		if _ddbdg := _eegfca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddbdg != nil {
			return _ddbdg
		}
	}
	return nil
}
func (_abdegd *CT_ObjectAnchor) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _abdegd.MoveWithCellsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u006f\u0076\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_abdegd.MoveWithCellsAttr))})
	}
	if _abdegd.SizeWithCellsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0069\u007a\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_abdegd.SizeWithCellsAttr))})
	}
	e.EncodeToken(start)
	_adffb := _a.StartElement{Name: _a.Name{Local: "\u0078\u0064\u0072\u003a\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_abdegd.From, _adffb)
	_bcgde := _a.StartElement{Name: _a.Name{Local: "\u0078\u0064\u0072\u003a\u0074\u006f"}}
	e.EncodeElement(_abdegd.To, _bcgde)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_VolTypes and its children, prefixing error messages with path
func (_fcgdd *CT_VolTypes) ValidateWithPath(path string) error {
	for _aeggdd, _cadbdd := range _fcgdd.VolType {
		if _cfbgdf := _cadbdd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0056\u006f\u006c\u0054\u0079\u0070e\u005b\u0025\u0064\u005d", path, _aeggdd)); _cfbgdf != nil {
			return _cfbgdf
		}
	}
	if _fcgdd.ExtLst != nil {
		if _acdebf := _fcgdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acdebf != nil {
			return _acdebf
		}
	}
	return nil
}
func NewCT_CellStyles() *CT_CellStyles { _fdfg := &CT_CellStyles{}; return _fdfg }

// ValidateWithPath validates the CT_DdeValue and its children, prefixing error messages with path
func (_cgaeg *CT_DdeValue) ValidateWithPath(path string) error {
	if _bdebg := _cgaeg.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _bdebg != nil {
		return _bdebg
	}
	return nil
}
func (_bfefff *CT_TableMissing) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DataConsolidate and its children
func (_aebb *CT_DataConsolidate) Validate() error {
	return _aebb.ValidateWithPath("\u0043T\u005fD\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065")
}
func NewCT_Tuples() *CT_Tuples               { _ggbdf := &CT_Tuples{}; return _ggbdf }
func (_aafae ST_CredMethod) Validate() error { return _aafae.ValidateWithPath("") }

// Validate validates the CT_PivotHierarchy and its children
func (_bbded *CT_PivotHierarchy) Validate() error {
	return _bbded.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079")
}

// ValidateWithPath validates the CT_Mdx and its children, prefixing error messages with path
func (_acdge *CT_Mdx) ValidateWithPath(path string) error {
	if _acdge.FAttr == ST_MdxFunctionTypeUnset {
		return _fc.Errorf("\u0025\u0073/\u0046\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066ie\u006c\u0064", path)
	}
	if _dcfba := _acdge.FAttr.ValidateWithPath(path + "\u002f\u0046\u0041\u0074\u0074\u0072"); _dcfba != nil {
		return _dcfba
	}
	if _acdge.T != nil {
		if _dgaea := _acdge.T.ValidateWithPath(path + "\u002f\u0054"); _dgaea != nil {
			return _dgaea
		}
	}
	if _acdge.Ms != nil {
		if _dcbd := _acdge.Ms.ValidateWithPath(path + "\u002f\u004d\u0073"); _dcbd != nil {
			return _dcbd
		}
	}
	if _acdge.P != nil {
		if _babgg := _acdge.P.ValidateWithPath(path + "\u002f\u0050"); _babgg != nil {
			return _babgg
		}
	}
	if _acdge.K != nil {
		if _gaeca := _acdge.K.ValidateWithPath(path + "\u002f\u004b"); _gaeca != nil {
			return _gaeca
		}
	}
	return nil
}

type CT_Rst struct {

	// Text
	T *string

	// Rich Text Run
	R []*CT_RElt

	// Phonetic Run
	RPh []*CT_PhoneticRun

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr
}

func NewCT_PivotAreas() *CT_PivotAreas { _fegcd := &CT_PivotAreas{}; return _fegcd }
func (_abbdba *CT_XmlPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ceaae := range start.Attr {
		if _ceaae.Name.Local == "\u006d\u0061\u0070I\u0064" {
			_ccdge, _eddcbb := _f.ParseUint(_ceaae.Value, 10, 32)
			if _eddcbb != nil {
				return _eddcbb
			}
			_abbdba.MapIdAttr = uint32(_ccdge)
			continue
		}
		if _ceaae.Name.Local == "\u0078\u0070\u0061t\u0068" {
			_ddgaa, _gbacd := _ceaae.Value, error(nil)
			if _gbacd != nil {
				return _gbacd
			}
			_abbdba.XpathAttr = _ddgaa
			continue
		}
		if _ceaae.Name.Local == "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065" {
			_dabaec, _dbaa := _ceaae.Value, error(nil)
			if _dbaa != nil {
				return _dbaa
			}
			_abbdba.XmlDataTypeAttr = _dabaec
			continue
		}
	}
_abfbcg:
	for {
		_dcbaf, _fefcee := d.Token()
		if _fefcee != nil {
			return _fefcee
		}
		switch _dafcdb := _dcbaf.(type) {
		case _a.StartElement:
			switch _dafcdb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abbdba.ExtLst = NewCT_ExtensionList()
				if _eddcac := d.DecodeElement(_abbdba.ExtLst, &_dafcdb); _eddcac != nil {
					return _eddcac
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072\u0020\u0025\u0076", _dafcdb.Name)
				if _gabcaa := d.Skip(); _gabcaa != nil {
					return _gabcaa
				}
			}
		case _a.EndElement:
			break _abfbcg
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColHierarchiesUsage and its children, prefixing error messages with path
func (_gecg *CT_ColHierarchiesUsage) ValidateWithPath(path string) error {
	for _dcde, _aeff := range _gecg.ColHierarchyUsage {
		if _bbde := _aeff.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0043\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _dcde)); _bbde != nil {
			return _bbde
		}
	}
	return nil
}

type CT_CellWatches struct {

	// Cell Watch Item
	CellWatch []*CT_CellWatch
}

func (_gebaaa ST_Qualifier) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cgggg := _a.Attr{}
	_cgggg.Name = name
	switch _gebaaa {
	case ST_QualifierUnset:
		_cgggg.Value = ""
	case ST_QualifierDoubleQuote:
		_cgggg.Value = "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case ST_QualifierSingleQuote:
		_cgggg.Value = "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case ST_QualifierNone:
		_cgggg.Value = "\u006e\u006f\u006e\u0065"
	}
	return _cgggg, nil
}

// ValidateWithPath validates the CT_Cols and its children, prefixing error messages with path
func (_ffff *CT_Cols) ValidateWithPath(path string) error {
	for _ebcd, _fafee := range _ffff.Col {
		if _bgeg := _fafee.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006c\u005b\u0025\u0064\u005d", path, _ebcd)); _bgeg != nil {
			return _bgeg
		}
	}
	return nil
}
func (_bbbaac *CT_Users) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afcfa := range start.Attr {
		if _afcfa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebcabg, _dagdgca := _f.ParseUint(_afcfa.Value, 10, 32)
			if _dagdgca != nil {
				return _dagdgca
			}
			_bccgag := uint32(_ebcabg)
			_bbbaac.CountAttr = &_bccgag
			continue
		}
	}
_acffbc:
	for {
		_gfbdc, _gdbebd := d.Token()
		if _gdbebd != nil {
			return _gdbebd
		}
		switch _defef := _gfbdc.(type) {
		case _a.StartElement:
			switch _defef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}:
				_abedd := NewCT_SharedUser()
				if _gdgag := d.DecodeElement(_abedd, &_defef); _gdgag != nil {
					return _gdgag
				}
				_bbbaac.UserInfo = append(_bbbaac.UserInfo, _abedd)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073\u0020\u0025\u0076", _defef.Name)
				if _bdeag := d.Skip(); _bdeag != nil {
					return _bdeag
				}
			}
		case _a.EndElement:
			break _acffbc
		case _a.CharData:
		}
	}
	return nil
}
func (_bbeeaab *ST_SortBy) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fgbbg, _ggffbe := d.Token()
	if _ggffbe != nil {
		return _ggffbe
	}
	if _bggbe, _gefadb := _fgbbg.(_a.EndElement); _gefadb && _bggbe.Name == start.Name {
		*_bbeeaab = 1
		return nil
	}
	if _efdggg, _cbfcdd := _fgbbg.(_a.CharData); !_cbfcdd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgbbg)
	} else {
		switch string(_efdggg) {
		case "":
			*_bbeeaab = 0
		case "\u0076\u0061\u006cu\u0065":
			*_bbeeaab = 1
		case "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr":
			*_bbeeaab = 2
		case "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr":
			*_bbeeaab = 3
		case "\u0069\u0063\u006f\u006e":
			*_bbeeaab = 4
		}
	}
	_fgbbg, _ggffbe = d.Token()
	if _ggffbe != nil {
		return _ggffbe
	}
	if _fffbgd, _fagdbd := _fgbbg.(_a.EndElement); _fagdbd && _fffbgd.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgbbg)
}

type CT_FontFamily struct{ ValAttr int64 }

// ValidateWithPath validates the PivotCacheDefinition and its children, prefixing error messages with path
func (_faeae *PivotCacheDefinition) ValidateWithPath(path string) error {
	if _ffgdb := _faeae.CT_PivotCacheDefinition.ValidateWithPath(path); _ffgdb != nil {
		return _ffgdb
	}
	return nil
}
func (_cfd *CT_CellStyles) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cfd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cfd.CountAttr)})
	}
	e.EncodeToken(start)
	_dced := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ac\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}}
	for _, _fbgd := range _cfd.CellStyle {
		e.EncodeElement(_fbgd, _dced)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_ColHierarchiesUsage() *CT_ColHierarchiesUsage {
	_gda := &CT_ColHierarchiesUsage{}
	return _gda
}

// Validate validates the CT_FieldGroup and its children
func (_acbc *CT_FieldGroup) Validate() error {
	return _acbc.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070")
}

// Validate validates the CT_VolType and its children
func (_aeffc *CT_VolType) Validate() error {
	return _aeffc.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065")
}
func (_debdg *CT_DdeValues) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _egdb := range start.Attr {
		if _egdb.Name.Local == "\u0072\u006f\u0077\u0073" {
			_feecf, _cfcf := _f.ParseUint(_egdb.Value, 10, 32)
			if _cfcf != nil {
				return _cfcf
			}
			_bdgdb := uint32(_feecf)
			_debdg.RowsAttr = &_bdgdb
			continue
		}
		if _egdb.Name.Local == "\u0063\u006f\u006c\u0073" {
			_dcebf, _fcee := _f.ParseUint(_egdb.Value, 10, 32)
			if _fcee != nil {
				return _fcee
			}
			_deeb := uint32(_dcebf)
			_debdg.ColsAttr = &_deeb
			continue
		}
	}
_deca:
	for {
		_ddefd, _fbeag := d.Token()
		if _fbeag != nil {
			return _fbeag
		}
		switch _bbged := _ddefd.(type) {
		case _a.StartElement:
			switch _bbged.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006cu\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006cu\u0065"}:
				_degad := NewCT_DdeValue()
				if _bcabbe := d.DecodeElement(_degad, &_bbged); _bcabbe != nil {
					return _bcabbe
				}
				_debdg.Value = append(_debdg.Value, _degad)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_D\u0064\u0065V\u0061\u006c\u0075\u0065\u0073\u0020\u0025\u0076", _bbged.Name)
				if _gdefg := d.Skip(); _gdefg != nil {
					return _gdefg
				}
			}
		case _a.EndElement:
			break _deca
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GradientStop and its children, prefixing error messages with path
func (_bfbcc *CT_GradientStop) ValidateWithPath(path string) error {
	if _bffba := _bfbcc.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _bffba != nil {
		return _bffba
	}
	return nil
}
func (_eecca *CT_Rst) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_fbegg:
	for {
		_fbdcge, _eggfe := d.Token()
		if _eggfe != nil {
			return _eggfe
		}
		switch _gfcbdc := _fbdcge.(type) {
		case _a.StartElement:
			switch _gfcbdc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_eecca.T = new(string)
				if _bfacc := d.DecodeElement(_eecca.T, &_gfcbdc); _bfacc != nil {
					return _bfacc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_bcecb := NewCT_RElt()
				if _afaad := d.DecodeElement(_bcecb, &_gfcbdc); _afaad != nil {
					return _afaad
				}
				_eecca.R = append(_eecca.R, _bcecb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0068"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0068"}:
				_ggbab := NewCT_PhoneticRun()
				if _fcead := d.DecodeElement(_ggbab, &_gfcbdc); _fcead != nil {
					return _fcead
				}
				_eecca.RPh = append(_eecca.RPh, _ggbab)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_eecca.PhoneticPr = NewCT_PhoneticPr()
				if _ggbfb := d.DecodeElement(_eecca.PhoneticPr, &_gfcbdc); _ggbfb != nil {
					return _ggbfb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0073\u0074\u0020\u0025\u0076", _gfcbdc.Name)
				if _cgbbcgd := d.Skip(); _cgbbcgd != nil {
					return _cgbbcgd
				}
			}
		case _a.EndElement:
			break _fbegg
		case _a.CharData:
		}
	}
	return nil
}
func NewWorkbook() *Workbook {
	_eegbe := &Workbook{}
	_eegbe.CT_Workbook = *NewCT_Workbook()
	return _eegbe
}
func (_gcaa *CT_ExternalReference) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _gcaa.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gegef *CT_Parameter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbda := range start.Attr {
		if _fbda.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cbcdd, _bebcd := _fbda.Value, error(nil)
			if _bebcd != nil {
				return _bebcd
			}
			_gegef.NameAttr = &_cbcdd
			continue
		}
		if _fbda.Name.Local == "\u0073q\u006c\u0054\u0079\u0070\u0065" {
			_abbbc, _ggaca := _f.ParseInt(_fbda.Value, 10, 32)
			if _ggaca != nil {
				return _ggaca
			}
			_dffbge := int32(_abbbc)
			_gegef.SqlTypeAttr = &_dffbge
			continue
		}
		if _fbda.Name.Local == "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0054\u0079\u0070\u0065" {
			_gegef.ParameterTypeAttr.UnmarshalXMLAttr(_fbda)
			continue
		}
		if _fbda.Name.Local == "\u0072e\u0066r\u0065\u0073\u0068\u004f\u006e\u0043\u0068\u0061\u006e\u0067\u0065" {
			_bfdeea, _bafdca := _f.ParseBool(_fbda.Value)
			if _bafdca != nil {
				return _bafdca
			}
			_gegef.RefreshOnChangeAttr = &_bfdeea
			continue
		}
		if _fbda.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_bgagc, _ccaea := _fbda.Value, error(nil)
			if _ccaea != nil {
				return _ccaea
			}
			_gegef.PromptAttr = &_bgagc
			continue
		}
		if _fbda.Name.Local == "\u0062o\u006f\u006c\u0065\u0061\u006e" {
			_dgbfee, _fcdbe := _f.ParseBool(_fbda.Value)
			if _fcdbe != nil {
				return _fcdbe
			}
			_gegef.BooleanAttr = &_dgbfee
			continue
		}
		if _fbda.Name.Local == "\u0064\u006f\u0075\u0062\u006c\u0065" {
			_cdgaa, _bedgd := _f.ParseFloat(_fbda.Value, 64)
			if _bedgd != nil {
				return _bedgd
			}
			_gegef.DoubleAttr = &_cdgaa
			continue
		}
		if _fbda.Name.Local == "\u0069n\u0074\u0065\u0067\u0065\u0072" {
			_abdcb, _fccbab := _f.ParseInt(_fbda.Value, 10, 32)
			if _fccbab != nil {
				return _fccbab
			}
			_eabc := int32(_abdcb)
			_gegef.IntegerAttr = &_eabc
			continue
		}
		if _fbda.Name.Local == "\u0073\u0074\u0072\u0069\u006e\u0067" {
			_daefb, _ebcab := _fbda.Value, error(nil)
			if _ebcab != nil {
				return _ebcab
			}
			_gegef.StringAttr = &_daefb
			continue
		}
		if _fbda.Name.Local == "\u0063\u0065\u006c\u006c" {
			_egcecd, _dbdgaa := _fbda.Value, error(nil)
			if _dbdgaa != nil {
				return _dbdgaa
			}
			_gegef.CellAttr = &_egcecd
			continue
		}
	}
	for {
		_dbfcda, _bdfee := d.Token()
		if _bdfee != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061r\u0061\u006d\u0065\u0074\u0065\u0072\u003a\u0020\u0025\u0073", _bdfee)
		}
		if _dgccb, _dccbf := _dbfcda.(_a.EndElement); _dccbf && _dgccb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gfdd *CT_CalculatedMember) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _baea := range start.Attr {
		if _baea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cfgc, _gdea := _baea.Value, error(nil)
			if _gdea != nil {
				return _gdea
			}
			_gfdd.NameAttr = _cfgc
			continue
		}
		if _baea.Name.Local == "\u006d\u0064\u0078" {
			_fbbg, _ddee := _baea.Value, error(nil)
			if _ddee != nil {
				return _ddee
			}
			_gfdd.MdxAttr = _fbbg
			continue
		}
		if _baea.Name.Local == "\u006d\u0065\u006d\u0062\u0065\u0072\u004e\u0061\u006d\u0065" {
			_aacb, _ggcf := _baea.Value, error(nil)
			if _ggcf != nil {
				return _ggcf
			}
			_gfdd.MemberNameAttr = &_aacb
			continue
		}
		if _baea.Name.Local == "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y" {
			_cbaa, _gcad := _baea.Value, error(nil)
			if _gcad != nil {
				return _gcad
			}
			_gfdd.HierarchyAttr = &_cbaa
			continue
		}
		if _baea.Name.Local == "\u0070\u0061\u0072\u0065\u006e\u0074" {
			_fggeg, _dadg := _baea.Value, error(nil)
			if _dadg != nil {
				return _dadg
			}
			_gfdd.ParentAttr = &_fggeg
			continue
		}
		if _baea.Name.Local == "\u0073\u006f\u006c\u0076\u0065\u004f\u0072\u0064\u0065\u0072" {
			_dcge, _gfe := _f.ParseInt(_baea.Value, 10, 32)
			if _gfe != nil {
				return _gfe
			}
			_afac := int32(_dcge)
			_gfdd.SolveOrderAttr = &_afac
			continue
		}
		if _baea.Name.Local == "\u0073\u0065\u0074" {
			_abgb, _efgd := _f.ParseBool(_baea.Value)
			if _efgd != nil {
				return _efgd
			}
			_gfdd.SetAttr = &_abgb
			continue
		}
	}
_gebdc:
	for {
		_fffd, _eefc := d.Token()
		if _eefc != nil {
			return _eefc
		}
		switch _dda := _fffd.(type) {
		case _a.StartElement:
			switch _dda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfdd.ExtLst = NewCT_ExtensionList()
				if _cfc := d.DecodeElement(_gfdd.ExtLst, &_dda); _cfc != nil {
					return _cfc
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061te\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u0020\u0025\u0076", _dda.Name)
				if _egdd := d.Skip(); _egdd != nil {
					return _egdd
				}
			}
		case _a.EndElement:
			break _gebdc
		case _a.CharData:
		}
	}
	return nil
}
func (_feaced *CT_SharedUser) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_feaced.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _fbcfd := range start.Attr {
		if _fbcfd.Name.Local == "\u0067\u0075\u0069\u0064" {
			_acdec, _bdafee := _fbcfd.Value, error(nil)
			if _bdafee != nil {
				return _bdafee
			}
			_feaced.GuidAttr = _acdec
			continue
		}
		if _fbcfd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fgcga, _ffccc := _fbcfd.Value, error(nil)
			if _ffccc != nil {
				return _ffccc
			}
			_feaced.NameAttr = _fgcga
			continue
		}
		if _fbcfd.Name.Local == "\u0069\u0064" {
			_dcfdc, _acfeb := _f.ParseInt(_fbcfd.Value, 10, 32)
			if _acfeb != nil {
				return _acfeb
			}
			_feaced.IdAttr = int32(_dcfdc)
			continue
		}
		if _fbcfd.Name.Local == "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065" {
			_bddcgb, _gcafg := ParseStdlibTime(_fbcfd.Value)
			if _gcafg != nil {
				return _gcafg
			}
			_feaced.DateTimeAttr = _bddcgb
			continue
		}
	}
_cfbge:
	for {
		_fgcbeb, _egeb := d.Token()
		if _egeb != nil {
			return _egeb
		}
		switch _cdbfdg := _fgcbeb.(type) {
		case _a.StartElement:
			switch _cdbfdg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_feaced.ExtLst = NewCT_ExtensionList()
				if _accbf := d.DecodeElement(_feaced.ExtLst, &_cdbfdg); _accbf != nil {
					return _accbf
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072 \u0025\u0076", _cdbfdg.Name)
				if _bbfge := d.Skip(); _bbfge != nil {
					return _bbfge
				}
			}
		case _a.EndElement:
			break _cfbge
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Filters and its children, prefixing error messages with path
func (_dafcb *CT_Filters) ValidateWithPath(path string) error {
	if _fbcde := _dafcb.CalendarTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0065\u006e\u0064\u0061\u0072\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _fbcde != nil {
		return _fbcde
	}
	for _eaabf, _eedfa := range _dafcb.Filter {
		if _fgcfe := _eedfa.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _eaabf)); _fgcfe != nil {
			return _fgcfe
		}
	}
	for _cegbg, _edfc := range _dafcb.DateGroupItem {
		if _bgccc := _edfc.ValidateWithPath(_fc.Sprintf("%\u0073/\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075p\u0049\u0074\u0065\u006d[%\u0064\u005d", path, _cegbg)); _bgccc != nil {
			return _bgccc
		}
	}
	return nil
}
func (_dabef ST_Scope) ValidateWithPath(path string) error {
	switch _dabef {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dabef))
	}
	return nil
}
func (_eadea *CT_PivotCacheRecords) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eadea.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_eadea.CountAttr)})
	}
	e.EncodeToken(start)
	if _eadea.R != nil {
		_abgdcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072"}}
		for _, _bgbga := range _eadea.R {
			e.EncodeElement(_bgbga, _abgdcg)
		}
	}
	if _eadea.ExtLst != nil {
		_cbgaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eadea.ExtLst, _cbgaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Missing and its children, prefixing error messages with path
func (_abdgf *CT_Missing) ValidateWithPath(path string) error {
	for _afcgb, _aafcg := range _abdgf.Tpls {
		if _dacfg := _aafcg.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _afcgb)); _dacfg != nil {
			return _dacfg
		}
	}
	for _fddgd, _eecaga := range _abdgf.X {
		if _fecdg := _eecaga.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _fddgd)); _fecdg != nil {
			return _fecdg
		}
	}
	return nil
}
func (_effaf *CT_TableParts) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ggaab := range start.Attr {
		if _ggaab.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aaaea, _ddcac := _f.ParseUint(_ggaab.Value, 10, 32)
			if _ddcac != nil {
				return _ddcac
			}
			_ceedg := uint32(_aaaea)
			_effaf.CountAttr = &_ceedg
			continue
		}
	}
_fgebf:
	for {
		_aeffe, _fbcbfdb := d.Token()
		if _fbcbfdb != nil {
			return _fbcbfdb
		}
		switch _febce := _aeffe.(type) {
		case _a.StartElement:
			switch _febce.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0062\u006c\u0065\u0050\u0061\u0072t"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0062\u006c\u0065\u0050\u0061\u0072t"}:
				_ddccge := NewCT_TablePart()
				if _eedfg := d.DecodeElement(_ddccge, &_febce); _eedfg != nil {
					return _eedfg
				}
				_effaf.TablePart = append(_effaf.TablePart, _ddccge)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073 \u0025\u0076", _febce.Name)
				if _gdadf := d.Skip(); _gdadf != nil {
					return _gdadf
				}
			}
		case _a.EndElement:
			break _fgebf
		case _a.CharData:
		}
	}
	return nil
}
func (_dgfbc *CT_FileRecoveryPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gacge := range start.Attr {
		if _gacge.Name.Local == "a\u0075\u0074\u006f\u0052\u0065\u0063\u006f\u0076\u0065\u0072" {
			_fgage, _gbede := _f.ParseBool(_gacge.Value)
			if _gbede != nil {
				return _gbede
			}
			_dgfbc.AutoRecoverAttr = &_fgage
			continue
		}
		if _gacge.Name.Local == "\u0063r\u0061\u0073\u0068\u0053\u0061\u0076e" {
			_cdfe, _ggddc := _f.ParseBool(_gacge.Value)
			if _ggddc != nil {
				return _ggddc
			}
			_dgfbc.CrashSaveAttr = &_cdfe
			continue
		}
		if _gacge.Name.Local == "\u0064a\u0074a\u0045\u0078\u0074\u0072\u0061\u0063\u0074\u004c\u006f\u0061\u0064" {
			_gddf, _aagcg := _f.ParseBool(_gacge.Value)
			if _aagcg != nil {
				return _aagcg
			}
			_dgfbc.DataExtractLoadAttr = &_gddf
			continue
		}
		if _gacge.Name.Local == "\u0072\u0065\u0070\u0061\u0069\u0072\u004c\u006f\u0061\u0064" {
			_dead, _ddfc := _f.ParseBool(_gacge.Value)
			if _ddfc != nil {
				return _ddfc
			}
			_dgfbc.RepairLoadAttr = &_dead
			continue
		}
	}
	for {
		_efbd, _faadbe := d.Token()
		if _faadbe != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076\u0065\u0072\u0079\u0050\u0072: \u0025\u0073", _faadbe)
		}
		if _geef, _bbdgf := _efbd.(_a.EndElement); _bbdgf && _geef.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cbfeac ST_TableType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cddff := _a.Attr{}
	_cddff.Name = name
	switch _cbfeac {
	case ST_TableTypeUnset:
		_cddff.Value = ""
	case ST_TableTypeWorksheet:
		_cddff.Value = "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case ST_TableTypeXml:
		_cddff.Value = "\u0078\u006d\u006c"
	case ST_TableTypeQueryTable:
		_cddff.Value = "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	}
	return _cddff, nil
}
func (_bcdea *CT_IgnoredError) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cddgb := range start.Attr {
		if _cddgb.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_afbad, _bcddca := ParseSliceST_Sqref(_cddgb.Value)
			if _bcddca != nil {
				return _bcddca
			}
			_bcdea.SqrefAttr = _afbad
			continue
		}
		if _cddgb.Name.Local == "\u0065v\u0061\u006c\u0045\u0072\u0072\u006fr" {
			_fgafc, _deecd := _f.ParseBool(_cddgb.Value)
			if _deecd != nil {
				return _deecd
			}
			_bcdea.EvalErrorAttr = &_fgafc
			continue
		}
		if _cddgb.Name.Local == "\u0074\u0077o\u0044\u0069\u0067i\u0074\u0054\u0065\u0078\u0074\u0059\u0065\u0061\u0072" {
			_eccbe, _cagaf := _f.ParseBool(_cddgb.Value)
			if _cagaf != nil {
				return _cagaf
			}
			_bcdea.TwoDigitTextYearAttr = &_eccbe
			continue
		}
		if _cddgb.Name.Local == "\u006eu\u006db\u0065\u0072\u0053\u0074\u006fr\u0065\u0064A\u0073\u0054\u0065\u0078\u0074" {
			_bfee, _gbbb := _f.ParseBool(_cddgb.Value)
			if _gbbb != nil {
				return _gbbb
			}
			_bcdea.NumberStoredAsTextAttr = &_bfee
			continue
		}
		if _cddgb.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_cccce, _cafac := _f.ParseBool(_cddgb.Value)
			if _cafac != nil {
				return _cafac
			}
			_bcdea.FormulaAttr = &_cccce
			continue
		}
		if _cddgb.Name.Local == "\u0066\u006f\u0072m\u0075\u006c\u0061\u0052\u0061\u006e\u0067\u0065" {
			_eebaa, _gbeed := _f.ParseBool(_cddgb.Value)
			if _gbeed != nil {
				return _gbeed
			}
			_bcdea.FormulaRangeAttr = &_eebaa
			continue
		}
		if _cddgb.Name.Local == "\u0075n\u006co\u0063\u006b\u0065\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061" {
			_cdbba, _fcefc := _f.ParseBool(_cddgb.Value)
			if _fcefc != nil {
				return _fcefc
			}
			_bcdea.UnlockedFormulaAttr = &_cdbba
			continue
		}
		if _cddgb.Name.Local == "\u0065m\u0070t\u0079\u0043\u0065\u006c\u006cR\u0065\u0066e\u0072\u0065\u006e\u0063\u0065" {
			_cgcag, _caadg := _f.ParseBool(_cddgb.Value)
			if _caadg != nil {
				return _caadg
			}
			_bcdea.EmptyCellReferenceAttr = &_cgcag
			continue
		}
		if _cddgb.Name.Local == "\u006ci\u0073t\u0044\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e" {
			_ebacc, _aeggg := _f.ParseBool(_cddgb.Value)
			if _aeggg != nil {
				return _aeggg
			}
			_bcdea.ListDataValidationAttr = &_ebacc
			continue
		}
		if _cddgb.Name.Local == "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e" {
			_fbcaad, _dabae := _f.ParseBool(_cddgb.Value)
			if _dabae != nil {
				return _dabae
			}
			_bcdea.CalculatedColumnAttr = &_fbcaad
			continue
		}
	}
	for {
		_gdfcdg, _fbfe := d.Token()
		if _fbfe != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0049\u0067\u006e\u006f\u0072\u0065d\u0045\u0072\u0072o\u0072:\u0020\u0025\u0073", _fbfe)
		}
		if _dbae, _eadcd := _gdfcdg.(_a.EndElement); _eadcd && _dbae.Name == start.Name {
			break
		}
	}
	return nil
}
func (_egcc *CT_SortCondition) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _egcc.DescendingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_egcc.DescendingAttr))})
	}
	if _egcc.SortByAttr != ST_SortByUnset {
		_eadaeg, _gbfbg := _egcc.SortByAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u006f\u0072\u0074\u0042\u0079"})
		if _gbfbg != nil {
			return _gbfbg
		}
		start.Attr = append(start.Attr, _eadaeg)
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _egcc.RefAttr)})
	if _egcc.CustomListAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_egcc.CustomListAttr)})
	}
	if _egcc.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_egcc.DxfIdAttr)})
	}
	if _egcc.IconSetAttr != ST_IconSetTypeUnset {
		_eefga, _efeca := _egcc.IconSetAttr.MarshalXMLAttr(_a.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
		if _efeca != nil {
			return _efeca
		}
		start.Attr = append(start.Attr, _eefga)
	}
	if _egcc.IconIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0063\u006f\u006e\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_egcc.IconIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_CalculatedMember struct {

	// Calculated Member Name
	NameAttr string

	// Calculated Member MDX Formula
	MdxAttr string

	// OLAP Calculated Member Name
	MemberNameAttr *string

	// Hierarchy Name
	HierarchyAttr *string

	// Parent Name
	ParentAttr *string

	// Calculated Members Solve Order
	SolveOrderAttr *int32

	// Set
	SetAttr *bool

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_gfaag ST_MdxSetOrder) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gfaag.String(), start)
}
func (_dbabgf *CalcChain) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dbabgf.CT_CalcChain = *NewCT_CalcChain()
_eccbgb:
	for {
		_gfagfg, _ecceb := d.Token()
		if _ecceb != nil {
			return _ecceb
		}
		switch _bddag := _gfagfg.(type) {
		case _a.StartElement:
			switch _bddag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_fdddbd := NewCT_CalcCell()
				if _fbggaf := d.DecodeElement(_fdddbd, &_bddag); _fbggaf != nil {
					return _fbggaf
				}
				_dbabgf.C = append(_dbabgf.C, _fdddbd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbabgf.ExtLst = NewCT_ExtensionList()
				if _bdcbe := d.DecodeElement(_dbabgf.ExtLst, &_bddag); _bdcbe != nil {
					return _bdcbe
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0061\u006c\u0063\u0043\u0068a\u0069\u006e \u0025\u0076", _bddag.Name)
				if _ecebb := d.Skip(); _ecebb != nil {
					return _ecebb
				}
			}
		case _a.EndElement:
			break _eccbgb
		case _a.CharData:
		}
	}
	return nil
}
func (_aceac *CT_String) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dgadfa := range start.Attr {
		if _dgadfa.Name.Local == "\u0066\u0063" {
			_ebcaeg, _agaddg := _dgadfa.Value, error(nil)
			if _agaddg != nil {
				return _agaddg
			}
			_aceac.FcAttr = &_ebcaeg
			continue
		}
		if _dgadfa.Name.Local == "\u0076" {
			_aadfe, _geec := _dgadfa.Value, error(nil)
			if _geec != nil {
				return _geec
			}
			_aceac.VAttr = _aadfe
			continue
		}
		if _dgadfa.Name.Local == "\u0066" {
			_fdggc, _bgbfae := _f.ParseBool(_dgadfa.Value)
			if _bgbfae != nil {
				return _bgbfae
			}
			_aceac.FAttr = &_fdggc
			continue
		}
		if _dgadfa.Name.Local == "\u0063" {
			_gbgcfb, _aaagab := _dgadfa.Value, error(nil)
			if _aaagab != nil {
				return _aaagab
			}
			_aceac.CAttr = &_gbgcfb
			continue
		}
		if _dgadfa.Name.Local == "\u0063\u0070" {
			_bbfbc, _fcfbf := _f.ParseUint(_dgadfa.Value, 10, 32)
			if _fcfbf != nil {
				return _fcfbf
			}
			_ffgac := uint32(_bbfbc)
			_aceac.CpAttr = &_ffgac
			continue
		}
		if _dgadfa.Name.Local == "\u0069\u006e" {
			_bacfa, _fbfge := _f.ParseUint(_dgadfa.Value, 10, 32)
			if _fbfge != nil {
				return _fbfge
			}
			_egced := uint32(_bacfa)
			_aceac.InAttr = &_egced
			continue
		}
		if _dgadfa.Name.Local == "\u0062\u0063" {
			_dgbgad, _efcg := _dgadfa.Value, error(nil)
			if _efcg != nil {
				return _efcg
			}
			_aceac.BcAttr = &_dgbgad
			continue
		}
		if _dgadfa.Name.Local == "\u0075" {
			_bdcdc, _egfeg := _f.ParseBool(_dgadfa.Value)
			if _egfeg != nil {
				return _egfeg
			}
			_aceac.UAttr = &_bdcdc
			continue
		}
		if _dgadfa.Name.Local == "\u0069" {
			_bdgfa, _cgeea := _f.ParseBool(_dgadfa.Value)
			if _cgeea != nil {
				return _cgeea
			}
			_aceac.IAttr = &_bdgfa
			continue
		}
		if _dgadfa.Name.Local == "\u0075\u006e" {
			_bgaaed, _dbadbb := _f.ParseBool(_dgadfa.Value)
			if _dbadbb != nil {
				return _dbadbb
			}
			_aceac.UnAttr = &_bgaaed
			continue
		}
		if _dgadfa.Name.Local == "\u0073\u0074" {
			_cabfcc, _edfdf := _f.ParseBool(_dgadfa.Value)
			if _edfdf != nil {
				return _edfdf
			}
			_aceac.StAttr = &_cabfcc
			continue
		}
		if _dgadfa.Name.Local == "\u0062" {
			_eedgbc, _dagde := _f.ParseBool(_dgadfa.Value)
			if _dagde != nil {
				return _dagde
			}
			_aceac.BAttr = &_eedgbc
			continue
		}
	}
_baagf:
	for {
		_dagff, _bccbd := d.Token()
		if _bccbd != nil {
			return _bccbd
		}
		switch _fafaa := _dagff.(type) {
		case _a.StartElement:
			switch _fafaa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_bcdeg := NewCT_Tuples()
				if _aecfbc := d.DecodeElement(_bcdeg, &_fafaa); _aecfbc != nil {
					return _aecfbc
				}
				_aceac.Tpls = append(_aceac.Tpls, _bcdeg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bdggd := NewCT_X()
				if _cceabc := d.DecodeElement(_bdggd, &_fafaa); _cceabc != nil {
					return _cceabc
				}
				_aceac.X = append(_aceac.X, _bdggd)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0074\u0072i\u006e\u0067 \u0025\u0076", _fafaa.Name)
				if _ccdbd := d.Skip(); _ccdbd != nil {
					return _ccdbd
				}
			}
		case _a.EndElement:
			break _baagf
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Connections and its children, prefixing error messages with path
func (_faee *CT_Connections) ValidateWithPath(path string) error {
	for _aecge, _faccd := range _faee.Connection {
		if _cebbc := _faccd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u005b\u0025\u0064\u005d", path, _aecge)); _cebbc != nil {
			return _cebbc
		}
	}
	return nil
}
func NewCT_PivotHierarchy() *CT_PivotHierarchy { _cfceb := &CT_PivotHierarchy{}; return _cfceb }

// ValidateWithPath validates the CT_SheetViews and its children, prefixing error messages with path
func (_bdecaf *CT_SheetViews) ValidateWithPath(path string) error {
	for _ebacf, _fgfacb := range _bdecaf.SheetView {
		if _eccbfg := _fgfacb.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _ebacf)); _eccbfg != nil {
			return _eccbfg
		}
	}
	if _bdecaf.ExtLst != nil {
		if _eegdf := _bdecaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eegdf != nil {
			return _eegdf
		}
	}
	return nil
}

// Validate validates the CT_RevisionRowColumn and its children
func (_cagcd *CT_RevisionRowColumn) Validate() error {
	return _cagcd.ValidateWithPath("C\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006flu\u006d\u006e")
}

const (
	ST_SortMethodUnset  ST_SortMethod = 0
	ST_SortMethodStroke ST_SortMethod = 1
	ST_SortMethodPinYin ST_SortMethod = 2
	ST_SortMethodNone   ST_SortMethod = 3
)

func (_efgbb *CT_GradientFill) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _efgbb.TypeAttr != ST_GradientTypeUnset {
		_adbcf, _dcagb := _efgbb.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dcagb != nil {
			return _dcagb
		}
		start.Attr = append(start.Attr, _adbcf)
	}
	if _efgbb.DegreeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0067\u0072\u0065\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_efgbb.DegreeAttr)})
	}
	if _efgbb.LeftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u0066\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_efgbb.LeftAttr)})
	}
	if _efgbb.RightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0069\u0067h\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_efgbb.RightAttr)})
	}
	if _efgbb.TopAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_efgbb.TopAttr)})
	}
	if _efgbb.BottomAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _fc.Sprintf("\u0025\u0076", *_efgbb.BottomAttr)})
	}
	e.EncodeToken(start)
	if _efgbb.Stop != nil {
		_gedge := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0073\u0074\u006f\u0070"}}
		for _, _cdgcb := range _efgbb.Stop {
			e.EncodeElement(_cdgcb, _gedge)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_daffb ST_PrintError) Validate() error { return _daffb.ValidateWithPath("") }
func (_gfgba *CT_IgnoredErrors) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_dgffb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ai\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}}
	for _, _fcfb := range _gfgba.IgnoredError {
		e.EncodeElement(_fcfb, _dgffb)
	}
	if _gfgba.ExtLst != nil {
		_faab := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gfgba.ExtLst, _faab)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gacecb ST_DvAspect) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bgbfe := _a.Attr{}
	_bgbfe.Name = name
	switch _gacecb {
	case ST_DvAspectUnset:
		_bgbfe.Value = ""
	case ST_DvAspectDVASPECT_CONTENT:
		_bgbfe.Value = "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054"
	case ST_DvAspectDVASPECT_ICON:
		_bgbfe.Value = "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e"
	}
	return _bgbfe, nil
}
func (_efcab *CT_DdeLink) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fdbg := range start.Attr {
		if _fdbg.Name.Local == "\u0064\u0064\u0065\u0053\u0065\u0072\u0076\u0069\u0063\u0065" {
			_agadd, _gaabc := _fdbg.Value, error(nil)
			if _gaabc != nil {
				return _gaabc
			}
			_efcab.DdeServiceAttr = _agadd
			continue
		}
		if _fdbg.Name.Local == "\u0064\u0064\u0065\u0054\u006f\u0070\u0069\u0063" {
			_fcfdbe, _bceec := _fdbg.Value, error(nil)
			if _bceec != nil {
				return _bceec
			}
			_efcab.DdeTopicAttr = _fcfdbe
			continue
		}
	}
_dedcf:
	for {
		_bffcb, _bffbe := d.Token()
		if _bffbe != nil {
			return _bffbe
		}
		switch _efec := _bffcb.(type) {
		case _a.StartElement:
			switch _efec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}:
				_efcab.DdeItems = NewCT_DdeItems()
				if _gfcab := d.DecodeElement(_efcab.DdeItems, &_efec); _gfcab != nil {
					return _gfcab
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0064\u0065\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _efec.Name)
				if _aefc := d.Skip(); _aefc != nil {
					return _aefc
				}
			}
		case _a.EndElement:
			break _dedcf
		case _a.CharData:
		}
	}
	return nil
}

type CT_SingleXmlCell struct {

	// Table Id
	IdAttr uint32

	// Reference
	RAttr string

	// Connection ID
	ConnectionIdAttr uint32

	// Cell Properties
	XmlCellPr *CT_XmlCellPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_SharedItems() *CT_SharedItems { _beede := &CT_SharedItems{}; return _beede }

// Validate validates the CT_UndoInfo and its children
func (_febedf *CT_UndoInfo) Validate() error {
	return _febedf.ValidateWithPath("C\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f")
}
func (_agafe *CT_PCDSCPage) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _agafe.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_agafe.CountAttr)})
	}
	e.EncodeToken(start)
	if _agafe.PageItem != nil {
		_agddd := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}}
		for _, _cceab := range _agafe.PageItem {
			e.EncodeElement(_cceab, _agddd)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ffgcfg ST_FontScheme) Validate() error { return _ffgcfg.ValidateWithPath("") }
func (_babcg *ST_RefMode) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eacdca, _bcdda := d.Token()
	if _bcdda != nil {
		return _bcdda
	}
	if _adebg, _geffa := _eacdca.(_a.EndElement); _geffa && _adebg.Name == start.Name {
		*_babcg = 1
		return nil
	}
	if _cdeaa, _egdef := _eacdca.(_a.CharData); !_egdef {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eacdca)
	} else {
		switch string(_cdeaa) {
		case "":
			*_babcg = 0
		case "\u0041\u0031":
			*_babcg = 1
		case "\u0052\u0031\u0043\u0031":
			*_babcg = 2
		}
	}
	_eacdca, _bcdda = d.Token()
	if _bcdda != nil {
		return _bcdda
	}
	if _fecad, _bagbab := _eacdca.(_a.EndElement); _bagbab && _fecad.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eacdca)
}
func (_bgbdee ST_DdeValueType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bgbdee.String(), start)
}

type CT_TextFields struct {

	// Count of Fields
	CountAttr *uint32

	// Text Import Field Settings
	TextField []*CT_TextField
}

func NewCT_RevisionMove() *CT_RevisionMove { _cgcdc := &CT_RevisionMove{}; return _cgcdc }
func (_bfbb *CT_ChartFormat) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0068\u0061r\u0074"}, Value: _fc.Sprintf("\u0025\u0076", _bfbb.ChartAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, Value: _fc.Sprintf("\u0025\u0076", _bfbb.FormatAttr)})
	if _bfbb.SeriesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0072\u0069\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bfbb.SeriesAttr))})
	}
	e.EncodeToken(start)
	_ebaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_bfbb.PivotArea, _ebaa)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FilterColumn and its children
func (_eage *CT_FilterColumn) Validate() error {
	return _eage.ValidateWithPath("\u0043T\u005fF\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e")
}

// ValidateWithPath validates the CT_DrawingHF and its children, prefixing error messages with path
func (_bbgc *CT_DrawingHF) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Sheets and its children
func (_fcbac *CT_Sheets) Validate() error {
	return _fcbac.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0065\u0065\u0074s")
}
func NewCT_PCDKPIs() *CT_PCDKPIs { _cceac := &CT_PCDKPIs{}; return _cceac }

// Validate validates the CT_SheetData and its children
func (_cadgf *CT_SheetData) Validate() error {
	return _cadgf.ValidateWithPath("\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061")
}
func (_egbgcg ST_UnderlineValues) ValidateWithPath(path string) error {
	switch _egbgcg {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egbgcg))
	}
	return nil
}
func (_abdbfbb ST_MdxFunctionType) ValidateWithPath(path string) error {
	switch _abdbfbb {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abdbfbb))
	}
	return nil
}

type CT_FileRecoveryPr struct {

	// Auto Recover
	AutoRecoverAttr *bool

	// Crash Save
	CrashSaveAttr *bool

	// Data Extract Load
	DataExtractLoadAttr *bool

	// Repair Load
	RepairLoadAttr *bool
}

func (_bcacd *CT_Field) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078"}, Value: _fc.Sprintf("\u0025\u0076", _bcacd.XAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_MdxSetOrderUnset ST_MdxSetOrder = 0
	ST_MdxSetOrderU     ST_MdxSetOrder = 1
	ST_MdxSetOrderA     ST_MdxSetOrder = 2
	ST_MdxSetOrderD     ST_MdxSetOrder = 3
	ST_MdxSetOrderAa    ST_MdxSetOrder = 4
	ST_MdxSetOrderAd    ST_MdxSetOrder = 5
	ST_MdxSetOrderNa    ST_MdxSetOrder = 6
	ST_MdxSetOrderNd    ST_MdxSetOrder = 7
)

func (_fcca *Revisions) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fcca.CT_Revisions = *NewCT_Revisions()
_egccg:
	for {
		_eedde, _bbfd := d.Token()
		if _bbfd != nil {
			return _bbfd
		}
		switch _dadeeb := _eedde.(type) {
		case _a.StartElement:
			switch _dadeeb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
				_bbeag := NewCT_RevisionRowColumn()
				if _baedb := d.DecodeElement(_bbeag, &_dadeeb); _baedb != nil {
					return _baedb
				}
				_fcca.Rrc = append(_fcca.Rrc, _bbeag)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
				_bbcba := NewCT_RevisionMove()
				if _gfage := d.DecodeElement(_bbcba, &_dadeeb); _gfage != nil {
					return _gfage
				}
				_fcca.Rm = append(_fcca.Rm, _bbcba)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
				_fffcf := NewCT_RevisionCustomView()
				if _cccbgc := d.DecodeElement(_fffcf, &_dadeeb); _cccbgc != nil {
					return _cccbgc
				}
				_fcca.Rcv = append(_fcca.Rcv, _fffcf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
				_ggefb := NewCT_RevisionSheetRename()
				if _fabaeg := d.DecodeElement(_ggefb, &_dadeeb); _fabaeg != nil {
					return _fabaeg
				}
				_fcca.Rsnm = append(_fcca.Rsnm, _ggefb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
				_ggedeg := NewCT_RevisionInsertSheet()
				if _cacbb := d.DecodeElement(_ggedeg, &_dadeeb); _cacbb != nil {
					return _cacbb
				}
				_fcca.Ris = append(_fcca.Ris, _ggedeg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_aebc := NewCT_RevisionCellChange()
				if _cffdd := d.DecodeElement(_aebc, &_dadeeb); _cffdd != nil {
					return _cffdd
				}
				_fcca.Rcc = append(_fcca.Rcc, _aebc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_efffae := NewCT_RevisionFormatting()
				if _feedb := d.DecodeElement(_efffae, &_dadeeb); _feedb != nil {
					return _feedb
				}
				_fcca.Rfmt = append(_fcca.Rfmt, _efffae)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
				_cgdgg := NewCT_RevisionAutoFormatting()
				if _cceggb := d.DecodeElement(_cgdgg, &_dadeeb); _cceggb != nil {
					return _cceggb
				}
				_fcca.Raf = append(_fcca.Raf, _cgdgg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
				_eeffef := NewCT_RevisionDefinedName()
				if _faced := d.DecodeElement(_eeffef, &_dadeeb); _faced != nil {
					return _faced
				}
				_fcca.Rdn = append(_fcca.Rdn, _eeffef)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
				_cdcabf := NewCT_RevisionComment()
				if _deacbd := d.DecodeElement(_cdcabf, &_dadeeb); _deacbd != nil {
					return _deacbd
				}
				_fcca.Rcmt = append(_fcca.Rcmt, _cdcabf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
				_bdbed := NewCT_RevisionQueryTableField()
				if _cgaad := d.DecodeElement(_bdbed, &_dadeeb); _cgaad != nil {
					return _cgaad
				}
				_fcca.Rqt = append(_fcca.Rqt, _bdbed)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
				_acefe := NewCT_RevisionConflict()
				if _ggcacf := d.DecodeElement(_acefe, &_dadeeb); _ggcacf != nil {
					return _ggcacf
				}
				_fcca.Rcft = append(_fcca.Rcft, _acefe)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0073 \u0025\u0076", _dadeeb.Name)
				if _fdaec := d.Skip(); _fdaec != nil {
					return _fdaec
				}
			}
		case _a.EndElement:
			break _egccg
		case _a.CharData:
		}
	}
	return nil
}

type ST_CellSpans []string

// Validate validates the CT_CalculatedItem and its children
func (_gdecg *CT_CalculatedItem) Validate() error {
	return _gdecg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d")
}
func (_daecdd ST_GroupBy) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_daecdd.String(), start)
}
func (_ffcfea ST_Axis) ValidateWithPath(path string) error {
	switch _ffcfea {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffcfea))
	}
	return nil
}

type ST_PrintError byte

// ValidateWithPath validates the CT_LevelGroup and its children, prefixing error messages with path
func (_gagbgf *CT_LevelGroup) ValidateWithPath(path string) error {
	if _badddg := _gagbgf.GroupMembers.ValidateWithPath(path + "\u002f\u0047\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"); _badddg != nil {
		return _badddg
	}
	return nil
}
func (_baffd ST_PivotFilterType) Validate() error { return _baffd.ValidateWithPath("") }
func (_dccd *CT_Break) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gcbb := range start.Attr {
		if _gcbb.Name.Local == "\u0069\u0064" {
			_gaag, _feff := _f.ParseUint(_gcbb.Value, 10, 32)
			if _feff != nil {
				return _feff
			}
			_dgdf := uint32(_gaag)
			_dccd.IdAttr = &_dgdf
			continue
		}
		if _gcbb.Name.Local == "\u006d\u0069\u006e" {
			_aece, _aeag := _f.ParseUint(_gcbb.Value, 10, 32)
			if _aeag != nil {
				return _aeag
			}
			_fbce := uint32(_aece)
			_dccd.MinAttr = &_fbce
			continue
		}
		if _gcbb.Name.Local == "\u006d\u0061\u0078" {
			_feee, _bfa := _f.ParseUint(_gcbb.Value, 10, 32)
			if _bfa != nil {
				return _bfa
			}
			_bddc := uint32(_feee)
			_dccd.MaxAttr = &_bddc
			continue
		}
		if _gcbb.Name.Local == "\u006d\u0061\u006e" {
			_eggb, _cfeg := _f.ParseBool(_gcbb.Value)
			if _cfeg != nil {
				return _cfeg
			}
			_dccd.ManAttr = &_eggb
			continue
		}
		if _gcbb.Name.Local == "\u0070\u0074" {
			_fcgf, _cdb := _f.ParseBool(_gcbb.Value)
			if _cdb != nil {
				return _cdb
			}
			_dccd.PtAttr = &_fcgf
			continue
		}
	}
	for {
		_eac, _bbe := d.Token()
		if _bbe != nil {
			return _fc.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0072\u0065\u0061\u006b: \u0025\u0073", _bbe)
		}
		if _ddb, _dgdfg := _eac.(_a.EndElement); _dgdfg && _ddb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_RevisionDefinedName and its children
func (_acdgg *CT_RevisionDefinedName) Validate() error {
	return _acdgg.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065")
}

type CT_Fill struct {

	// Pattern
	PatternFill *CT_PatternFill

	// Gradient
	GradientFill *CT_GradientFill
}

func NewCT_DateTime() *CT_DateTime                 { _dcefb := &CT_DateTime{}; return _dcefb }
func (_efbgdb ST_CellComments) Validate() error    { return _efbgdb.ValidateWithPath("") }
func NewCT_CustomProperties() *CT_CustomProperties { _accc := &CT_CustomProperties{}; return _accc }
func (_ffbe ST_Comments) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bbfgf := _a.Attr{}
	_bbfgf.Name = name
	switch _ffbe {
	case ST_CommentsUnset:
		_bbfgf.Value = ""
	case ST_CommentsCommNone:
		_bbfgf.Value = "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065"
	case ST_CommentsCommIndicator:
		_bbfgf.Value = "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	case ST_CommentsCommIndAndComment:
		_bbfgf.Value = "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074"
	}
	return _bbfgf, nil
}
func (_dgbcfd ST_FieldSortType) ValidateWithPath(path string) error {
	switch _dgbcfd {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgbcfd))
	}
	return nil
}
func (_acfgg *ST_CellFormulaType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gafcfa, _fedec := d.Token()
	if _fedec != nil {
		return _fedec
	}
	if _bbgaf, _egffe := _gafcfa.(_a.EndElement); _egffe && _bbgaf.Name == start.Name {
		*_acfgg = 1
		return nil
	}
	if _fegca, _gbecec := _gafcfa.(_a.CharData); !_gbecec {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gafcfa)
	} else {
		switch string(_fegca) {
		case "":
			*_acfgg = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_acfgg = 1
		case "\u0061\u0072\u0072a\u0079":
			*_acfgg = 2
		case "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce":
			*_acfgg = 3
		case "\u0073\u0068\u0061\u0072\u0065\u0064":
			*_acfgg = 4
		}
	}
	_gafcfa, _fedec = d.Token()
	if _fedec != nil {
		return _fedec
	}
	if _dcafe, _gfcbaf := _gafcfa.(_a.EndElement); _gfcbaf && _dcafe.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gafcfa)
}
func (_beefeb ST_DataValidationType) ValidateWithPath(path string) error {
	switch _beefeb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_beefeb))
	}
	return nil
}

// Validate validates the CT_SmartTags and its children
func (_afdeb *CT_SmartTags) Validate() error {
	return _afdeb.ValidateWithPath("\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}
func (_dddfa *CT_SheetPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aacbb := range start.Attr {
		if _aacbb.Name.Local == "\u0073\u0079\u006e\u0063\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c" {
			_eeggc, _eaaac := _f.ParseBool(_aacbb.Value)
			if _eaaac != nil {
				return _eaaac
			}
			_dddfa.SyncHorizontalAttr = &_eeggc
			continue
		}
		if _aacbb.Name.Local == "\u0073\u0079\u006ec\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c" {
			_edcfb, _cfaaa := _f.ParseBool(_aacbb.Value)
			if _cfaaa != nil {
				return _cfaaa
			}
			_dddfa.SyncVerticalAttr = &_edcfb
			continue
		}
		if _aacbb.Name.Local == "\u0073y\u006e\u0063\u0052\u0065\u0066" {
			_bgbabd, _bbgcf := _aacbb.Value, error(nil)
			if _bbgcf != nil {
				return _bbgcf
			}
			_dddfa.SyncRefAttr = &_bgbabd
			continue
		}
		if _aacbb.Name.Local == "t\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0045v\u0061\u006c\u0075\u0061ti\u006f\u006e" {
			_bfbba, _cbffga := _f.ParseBool(_aacbb.Value)
			if _cbffga != nil {
				return _cbffga
			}
			_dddfa.TransitionEvaluationAttr = &_bfbba
			continue
		}
		if _aacbb.Name.Local == "\u0074r\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0045\u006e\u0074\u0072\u0079" {
			_fdcbd, _cgfdbc := _f.ParseBool(_aacbb.Value)
			if _cgfdbc != nil {
				return _cgfdbc
			}
			_dddfa.TransitionEntryAttr = &_fdcbd
			continue
		}
		if _aacbb.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_dcfae, _eefcca := _f.ParseBool(_aacbb.Value)
			if _eefcca != nil {
				return _eefcca
			}
			_dddfa.PublishedAttr = &_dcfae
			continue
		}
		if _aacbb.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_bgaae, _gdefb := _aacbb.Value, error(nil)
			if _gdefb != nil {
				return _gdefb
			}
			_dddfa.CodeNameAttr = &_bgaae
			continue
		}
		if _aacbb.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072\u004d\u006f\u0064\u0065" {
			_fddge, _fbcbae := _f.ParseBool(_aacbb.Value)
			if _fbcbae != nil {
				return _fbcbae
			}
			_dddfa.FilterModeAttr = &_fddge
			continue
		}
		if _aacbb.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065F\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0073\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0069\u006f\u006e" {
			_fefeg, _adbcd := _f.ParseBool(_aacbb.Value)
			if _adbcd != nil {
				return _adbcd
			}
			_dddfa.EnableFormatConditionsCalculationAttr = &_fefeg
			continue
		}
	}
_bfeef:
	for {
		_bceae, _dfgdac := d.Token()
		if _dfgdac != nil {
			return _dfgdac
		}
		switch _egaagf := _bceae.(type) {
		case _a.StartElement:
			switch _egaagf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_dddfa.TabColor = NewCT_Color()
				if _eacdab := d.DecodeElement(_dddfa.TabColor, &_egaagf); _eacdab != nil {
					return _eacdab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065\u0050r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065\u0050r"}:
				_dddfa.OutlinePr = NewCT_OutlinePr()
				if _bggcd := d.DecodeElement(_dddfa.OutlinePr, &_egaagf); _bggcd != nil {
					return _bggcd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}:
				_dddfa.PageSetUpPr = NewCT_PageSetUpPr()
				if _beefa := d.DecodeElement(_dddfa.PageSetUpPr, &_egaagf); _beefa != nil {
					return _beefa
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0050\u0072\u0020\u0025\u0076", _egaagf.Name)
				if _agcfa := d.Skip(); _agcfa != nil {
					return _agcfa
				}
			}
		case _a.EndElement:
			break _bfeef
		case _a.CharData:
		}
	}
	return nil
}

type ST_TableStyleType byte

func (_dbdeba ST_OleUpdate) String() string {
	switch _dbdeba {
	case 0:
		return ""
	case 1:
		return "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053"
	case 2:
		return "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c"
	}
	return ""
}

// ValidateWithPath validates the CT_Sheets and its children, prefixing error messages with path
func (_bbaea *CT_Sheets) ValidateWithPath(path string) error {
	for _geaba, _daacgb := range _bbaea.Sheet {
		if _ddbdbd := _daacgb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002fS\u0068\u0065\u0065\u0074\u005b\u0025\u0064\u005d", path, _geaba)); _ddbdbd != nil {
			return _ddbdbd
		}
	}
	return nil
}

type ST_VolValueType byte

func (_fggbfa *ST_CellComments) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gbcaa, _bgacdg := d.Token()
	if _bgacdg != nil {
		return _bgacdg
	}
	if _acgfc, _ccccg := _gbcaa.(_a.EndElement); _ccccg && _acgfc.Name == start.Name {
		*_fggbfa = 1
		return nil
	}
	if _deccd, _dcfcc := _gbcaa.(_a.CharData); !_dcfcc {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbcaa)
	} else {
		switch string(_deccd) {
		case "":
			*_fggbfa = 0
		case "\u006e\u006f\u006e\u0065":
			*_fggbfa = 1
		case "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064":
			*_fggbfa = 2
		case "\u0061\u0074\u0045n\u0064":
			*_fggbfa = 3
		}
	}
	_gbcaa, _bgacdg = d.Token()
	if _bgacdg != nil {
		return _bgacdg
	}
	if _addebb, _dafcf := _gbcaa.(_a.EndElement); _dafcf && _addebb.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbcaa)
}
func (_fefag *CT_DataRef) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fefag.RefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", *_fefag.RefAttr)})
	}
	if _fefag.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fefag.NameAttr)})
	}
	if _fefag.SheetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fefag.SheetAttr)})
	}
	if _fefag.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fefag.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ConditionalFormatting and its children, prefixing error messages with path
func (_efdd *CT_ConditionalFormatting) ValidateWithPath(path string) error {
	for _cbcbf, _baeab := range _efdd.CfRule {
		if _ccae := _baeab.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043\u0066\u0052\u0075\u006c\u0065\u005b\u0025\u0064\u005d", path, _cbcbf)); _ccae != nil {
			return _ccae
		}
	}
	if _efdd.ExtLst != nil {
		if _fagg := _efdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fagg != nil {
			return _fagg
		}
	}
	return nil
}
func NewCT_ChartsheetViews() *CT_ChartsheetViews { _bgfg := &CT_ChartsheetViews{}; return _bgfg }

// Validate validates the CT_ExternalSheetNames and its children
func (_cefafc *CT_ExternalSheetNames) Validate() error {
	return _cefafc.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u0073")
}
func (_fabfc ST_Objects) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bgfcg := _a.Attr{}
	_bgfcg.Name = name
	switch _fabfc {
	case ST_ObjectsUnset:
		_bgfcg.Value = ""
	case ST_ObjectsAll:
		_bgfcg.Value = "\u0061\u006c\u006c"
	case ST_ObjectsPlaceholders:
		_bgfcg.Value = "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073"
	case ST_ObjectsNone:
		_bgfcg.Value = "\u006e\u006f\u006e\u0065"
	}
	return _bgfcg, nil
}

type Worksheet struct{ CT_Worksheet }

// Validate validates the CT_CommentPr and its children
func (_dbada *CT_CommentPr) Validate() error {
	return _dbada.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072")
}
func (_ebbabc *CT_Stylesheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _ebbabc.NumFmts != nil {
		_ggced := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006e\u0075\u006d\u0046\u006d\u0074\u0073"}}
		e.EncodeElement(_ebbabc.NumFmts, _ggced)
	}
	if _ebbabc.Fonts != nil {
		_fcggd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u006e\u0074\u0073"}}
		e.EncodeElement(_ebbabc.Fonts, _fcggd)
	}
	if _ebbabc.Fills != nil {
		_fffggb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u006c\u0073"}}
		e.EncodeElement(_ebbabc.Fills, _fffggb)
	}
	if _ebbabc.Borders != nil {
		_dfegd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0062\u006f\u0072\u0064\u0065\u0072\u0073"}}
		e.EncodeElement(_ebbabc.Borders, _dfegd)
	}
	if _ebbabc.CellStyleXfs != nil {
		_aadef := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}}
		e.EncodeElement(_ebbabc.CellStyleXfs, _aadef)
	}
	if _ebbabc.CellXfs != nil {
		_ebaaef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0058\u0066\u0073"}}
		e.EncodeElement(_ebbabc.CellXfs, _ebaaef)
	}
	if _ebbabc.CellStyles != nil {
		_ggdecg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_ebbabc.CellStyles, _ggdecg)
	}
	if _ebbabc.Dxfs != nil {
		_agdce := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0064\u0078\u0066\u0073"}}
		e.EncodeElement(_ebbabc.Dxfs, _agdce)
	}
	if _ebbabc.TableStyles != nil {
		_caaed := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_ebbabc.TableStyles, _caaed)
	}
	if _ebbabc.Colors != nil {
		_gecdc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u006f\u0072s"}}
		e.EncodeElement(_ebbabc.Colors, _gecdc)
	}
	if _ebbabc.ExtLst != nil {
		_fcaec := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ebbabc.ExtLst, _fcaec)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cgegg ST_SortType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cgegg.String(), start)
}

type CT_GroupItems struct {

	// Items Created Count
	CountAttr *uint32

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime
}

func (_gaecgg ST_ParameterType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gaecgg.String(), start)
}

// ValidateWithPath validates the CT_UnderlineProperty and its children, prefixing error messages with path
func (_adebc *CT_UnderlineProperty) ValidateWithPath(path string) error {
	if _ccgad := _adebc.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ccgad != nil {
		return _ccgad
	}
	return nil
}

type CT_Boolean struct {

	// Value
	VAttr bool

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Member Property Indexes
	X []*CT_X
}

// ValidateWithPath validates the CT_DefinedName and its children, prefixing error messages with path
func (_ddgge *CT_DefinedName) ValidateWithPath(path string) error { return nil }

type CT_ObjectPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// UI Object Flag
	UiObjectAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Automatic Size Flag
	AutoPictAttr *bool

	// Custom Function
	MacroAttr *string

	// Alternative Text
	AltTextAttr *string

	// Dynamic Data Exchange Flag
	DdeAttr *bool
	IdAttr  *string
	Anchor  *CT_ObjectAnchor
}
type CT_X struct {

	// Shared Items Index
	VAttr *int32
}
type CT_HierarchyUsage struct {

	// Hierarchy Usage
	HierarchyUsageAttr int32
}

// ValidateWithPath validates the CT_RevisionQueryTableField and its children, prefixing error messages with path
func (_fecbde *CT_RevisionQueryTableField) ValidateWithPath(path string) error { return nil }

type CT_TableFormula struct {
	ArrayAttr bool
	Content   string
}

func NewCT_ReviewedRevisions() *CT_ReviewedRevisions { _dace := &CT_ReviewedRevisions{}; return _dace }
func (_bg *CT_Authors) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _bg.Author != nil {
		_eg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0061\u0075\u0074\u0068\u006fr"}}
		for _, _ac := range _bg.Author {
			e.EncodeElement(_ac, _eg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cegacf *CT_RevisionSheetRename) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _cegacf.SheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fl\u0064\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _cegacf.OldNameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006ee\u0077\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _cegacf.NewNameAttr)})
	if _cegacf.RIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_cegacf.RIdAttr)})
	}
	if _cegacf.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cegacf.UaAttr))})
	}
	if _cegacf.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cegacf.RaAttr))})
	}
	e.EncodeToken(start)
	if _cegacf.ExtLst != nil {
		_fbaca := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cegacf.ExtLst, _fbaca)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dffaef ST_PaneState) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fbgaa := _a.Attr{}
	_fbgaa.Name = name
	switch _dffaef {
	case ST_PaneStateUnset:
		_fbgaa.Value = ""
	case ST_PaneStateSplit:
		_fbgaa.Value = "\u0073\u0070\u006ci\u0074"
	case ST_PaneStateFrozen:
		_fbgaa.Value = "\u0066\u0072\u006f\u007a\u0065\u006e"
	case ST_PaneStateFrozenSplit:
		_fbgaa.Value = "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074"
	}
	return _fbgaa, nil
}
func (_gdfeg *CT_MdxKPI) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _gdfeg.NAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0070"}, Value: _fc.Sprintf("\u0025\u0076", _gdfeg.NpAttr)})
	_efda, _fcddg := _gdfeg.PAttr.MarshalXMLAttr(_a.Name{Local: "\u0070"})
	if _fcddg != nil {
		return _fcddg
	}
	start.Attr = append(start.Attr, _efda)
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gdgggc *CT_GroupMembers) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _efeg := range start.Attr {
		if _efeg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fdeeb, _agdda := _f.ParseUint(_efeg.Value, 10, 32)
			if _agdda != nil {
				return _agdda
			}
			_aegd := uint32(_fdeeb)
			_gdgggc.CountAttr = &_aegd
			continue
		}
	}
_abefg:
	for {
		_accda, _debeb := d.Token()
		if _debeb != nil {
			return _debeb
		}
		switch _ggad := _accda.(type) {
		case _a.StartElement:
			switch _ggad.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}:
				_gfaad := NewCT_GroupMember()
				if _bdbba := d.DecodeElement(_gfaad, &_ggad); _bdbba != nil {
					return _bdbba
				}
				_gdgggc.GroupMember = append(_gdgggc.GroupMember, _gfaad)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _ggad.Name)
				if _fgbb := d.Skip(); _fgbb != nil {
					return _fgbb
				}
			}
		case _a.EndElement:
			break _abefg
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WebPublishObject and its children, prefixing error messages with path
func (_bfgbed *CT_WebPublishObject) ValidateWithPath(path string) error { return nil }
func (_acfad *CT_Connections) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_ffge:
	for {
		_cgbdc, _fcfde := d.Token()
		if _fcfde != nil {
			return _fcfde
		}
		switch _degb := _cgbdc.(type) {
		case _a.StartElement:
			switch _degb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_ffeb := NewCT_Connection()
				if _bcbce := d.DecodeElement(_ffeb, &_degb); _bcbce != nil {
					return _bcbce
				}
				_acfad.Connection = append(_acfad.Connection, _ffeb)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074i\u006fn\u0073\u0020\u0025\u0076", _degb.Name)
				if _cbde := d.Skip(); _cbde != nil {
					return _cbde
				}
			}
		case _a.EndElement:
			break _ffge
		case _a.CharData:
		}
	}
	return nil
}
func (_effdfd ST_TableStyleType) ValidateWithPath(path string) error {
	switch _effdfd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_effdfd))
	}
	return nil
}

type CT_TextPr struct {

	// Prompt for File Name
	PromptAttr *bool

	// File Type
	FileTypeAttr ST_FileType

	// Code Page
	CodePageAttr *uint32

	// Character Set
	CharacterSetAttr *string

	// First Row
	FirstRowAttr *uint32

	// Source File Name
	SourceFileAttr *string

	// Delimited File
	DelimitedAttr *bool

	// Decimal Separator
	DecimalAttr *string

	// Thousands Separator
	ThousandsAttr *string

	// Tab as Delimiter
	TabAttr *bool

	// Space is Delimiter
	SpaceAttr *bool

	// Comma is Delimiter
	CommaAttr *bool

	// Semicolon is Delimiter
	SemicolonAttr *bool

	// Consecutive Delimiters
	ConsecutiveAttr *bool

	// Qualifier
	QualifierAttr ST_Qualifier

	// Custom Delimiter
	DelimiterAttr *string

	// Fields
	TextFields *CT_TextFields
}

func (_bgcee ST_DataValidationImeMode) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cbedbc := _a.Attr{}
	_cbedbc.Name = name
	switch _bgcee {
	case ST_DataValidationImeModeUnset:
		_cbedbc.Value = ""
	case ST_DataValidationImeModeNoControl:
		_cbedbc.Value = "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case ST_DataValidationImeModeOff:
		_cbedbc.Value = "\u006f\u0066\u0066"
	case ST_DataValidationImeModeOn:
		_cbedbc.Value = "\u006f\u006e"
	case ST_DataValidationImeModeDisabled:
		_cbedbc.Value = "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"
	case ST_DataValidationImeModeHiragana:
		_cbedbc.Value = "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case ST_DataValidationImeModeFullKatakana:
		_cbedbc.Value = "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case ST_DataValidationImeModeHalfKatakana:
		_cbedbc.Value = "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case ST_DataValidationImeModeFullAlpha:
		_cbedbc.Value = "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a"
	case ST_DataValidationImeModeHalfAlpha:
		_cbedbc.Value = "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a"
	case ST_DataValidationImeModeFullHangul:
		_cbedbc.Value = "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c"
	case ST_DataValidationImeModeHalfHangul:
		_cbedbc.Value = "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c"
	}
	return _cbedbc, nil
}
func (_gaecf *ST_PhoneticAlignment) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aggge, _cfggbg := d.Token()
	if _cfggbg != nil {
		return _cfggbg
	}
	if _gdbgd, _fcgad := _aggge.(_a.EndElement); _fcgad && _gdbgd.Name == start.Name {
		*_gaecf = 1
		return nil
	}
	if _adecb, _gbbef := _aggge.(_a.CharData); !_gbbef {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aggge)
	} else {
		switch string(_adecb) {
		case "":
			*_gaecf = 0
		case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
			*_gaecf = 1
		case "\u006c\u0065\u0066\u0074":
			*_gaecf = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_gaecf = 3
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_gaecf = 4
		}
	}
	_aggge, _cfggbg = d.Token()
	if _cfggbg != nil {
		return _cfggbg
	}
	if _geaaea, _aeaadd := _aggge.(_a.EndElement); _aeaadd && _geaaea.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aggge)
}
func NewCT_FieldGroup() *CT_FieldGroup { _dgecb := &CT_FieldGroup{}; return _dgecb }
func (_bbgca *CT_FontSize) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", _bbgca.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_PivotFields() *CT_PivotFields { _adba := &CT_PivotFields{}; return _adba }

// Validate validates the CT_PivotFilters and its children
func (_ccbbag *CT_PivotFilters) Validate() error {
	return _ccbbag.ValidateWithPath("\u0043T\u005fP\u0069\u0076\u006f\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}

// ValidateWithPath validates the CT_PageMargins and its children, prefixing error messages with path
func (_bfdeb *CT_PageMargins) ValidateWithPath(path string) error { return nil }
func (_adggb *CT_DdeItem) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _adggb.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_adggb.NameAttr)})
	}
	if _adggb.OleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adggb.OleAttr))})
	}
	if _adggb.AdviseAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0064\u0076\u0069\u0073\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adggb.AdviseAttr))})
	}
	if _adggb.PreferPicAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adggb.PreferPicAttr))})
	}
	e.EncodeToken(start)
	if _adggb.Values != nil {
		_dbab := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0076\u0061\u006c\u0075\u0065s"}}
		e.EncodeElement(_adggb.Values, _dbab)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Number and its children, prefixing error messages with path
func (_acgg *CT_Number) ValidateWithPath(path string) error {
	for _adad, _feadf := range _acgg.Tpls {
		if _dgceg := _feadf.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _adad)); _dgceg != nil {
			return _dgceg
		}
	}
	for _eaddb, _gbdcf := range _acgg.X {
		if _ebaeb := _gbdcf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _eaddb)); _ebaeb != nil {
			return _ebaeb
		}
	}
	return nil
}
func (_cdfbcc ST_Scope) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cdfbcc.String(), start)
}
func NewCT_PivotDimension() *CT_PivotDimension { _dgacgf := &CT_PivotDimension{}; return _dgacgf }

// Validate validates the CT_MetadataType and its children
func (_cebgd *CT_MetadataType) Validate() error {
	return _cebgd.ValidateWithPath("\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065")
}
func NewCT_String() *CT_String { _adgbd := &CT_String{}; return _adgbd }
func (_ffgcgbe ST_TextVAlign) String() string {
	switch _ffgcgbe {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

// ValidateWithPath validates the CT_Items and its children, prefixing error messages with path
func (_bfbdb *CT_Items) ValidateWithPath(path string) error {
	for _agac, _agfag := range _bfbdb.Item {
		if _geegb := _agfag.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0049\u0074\u0065\u006d\u005b\u0025\u0064\u005d", path, _agac)); _geegb != nil {
			return _geegb
		}
	}
	return nil
}
func (_agedg *CT_DataField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bcba := range start.Attr {
		if _bcba.Name.Local == "\u006e\u0061\u006d\u0065" {
			_babg, _fcabb := _bcba.Value, error(nil)
			if _fcabb != nil {
				return _fcabb
			}
			_agedg.NameAttr = &_babg
			continue
		}
		if _bcba.Name.Local == "\u0066\u006c\u0064" {
			_bcbd, _cdgdf := _f.ParseUint(_bcba.Value, 10, 32)
			if _cdgdf != nil {
				return _cdgdf
			}
			_agedg.FldAttr = uint32(_bcbd)
			continue
		}
		if _bcba.Name.Local == "\u0073\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_agedg.SubtotalAttr.UnmarshalXMLAttr(_bcba)
			continue
		}
		if _bcba.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0061\u0074\u0061\u0041\u0073" {
			_agedg.ShowDataAsAttr.UnmarshalXMLAttr(_bcba)
			continue
		}
		if _bcba.Name.Local == "\u0062a\u0073\u0065\u0046\u0069\u0065\u006cd" {
			_ecbc, _cace := _f.ParseInt(_bcba.Value, 10, 32)
			if _cace != nil {
				return _cace
			}
			_fgea := int32(_ecbc)
			_agedg.BaseFieldAttr = &_fgea
			continue
		}
		if _bcba.Name.Local == "\u0062\u0061\u0073\u0065\u0049\u0074\u0065\u006d" {
			_fggf, _bfcded := _f.ParseUint(_bcba.Value, 10, 32)
			if _bfcded != nil {
				return _bfcded
			}
			_gbgfb := uint32(_fggf)
			_agedg.BaseItemAttr = &_gbgfb
			continue
		}
		if _bcba.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_cacee, _faebf := _f.ParseUint(_bcba.Value, 10, 32)
			if _faebf != nil {
				return _faebf
			}
			_dbgb := uint32(_cacee)
			_agedg.NumFmtIdAttr = &_dbgb
			continue
		}
	}
_gaca:
	for {
		_gbaeg, _cgada := d.Token()
		if _cgada != nil {
			return _cgada
		}
		switch _bccgf := _gbaeg.(type) {
		case _a.StartElement:
			switch _bccgf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agedg.ExtLst = NewCT_ExtensionList()
				if _dcbff := d.DecodeElement(_agedg.ExtLst, &_bccgf); _dcbff != nil {
					return _dcbff
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_D\u0061\u0074a\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _bccgf.Name)
				if _fbedf := d.Skip(); _fbedf != nil {
					return _fbedf
				}
			}
		case _a.EndElement:
			break _gaca
		case _a.CharData:
		}
	}
	return nil
}
func NewPivotCacheRecords() *PivotCacheRecords {
	_dcebee := &PivotCacheRecords{}
	_dcebee.CT_PivotCacheRecords = *NewCT_PivotCacheRecords()
	return _dcebee
}

type AG_RevData struct {
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

// Validate validates the CT_VolTypes and its children
func (_gddfc *CT_VolTypes) Validate() error {
	return _gddfc.ValidateWithPath("C\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073")
}

// Validate validates the CT_IntProperty and its children
func (_bbcg *CT_IntProperty) Validate() error {
	return _bbcg.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0074\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}
func NewCT_PageSetup() *CT_PageSetup { _bgcaf := &CT_PageSetup{}; return _bgcaf }
func (_fedcg *CT_WebPublishItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aebdce := range start.Attr {
		if _aebdce.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bcafg, _gbegce := _f.ParseUint(_aebdce.Value, 10, 32)
			if _gbegce != nil {
				return _gbegce
			}
			_babac := uint32(_bcafg)
			_fedcg.CountAttr = &_babac
			continue
		}
	}
_cfbcf:
	for {
		_ddbca, _cfeb := d.Token()
		if _cfeb != nil {
			return _cfeb
		}
		switch _dgabbb := _ddbca.(type) {
		case _a.StartElement:
			switch _dgabbb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}:
				_cbgcd := NewCT_WebPublishItem()
				if _cffae := d.DecodeElement(_cbgcd, &_dgabbb); _cffae != nil {
					return _cffae
				}
				_fedcg.WebPublishItem = append(_fedcg.WebPublishItem, _cbgcd)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _dgabbb.Name)
				if _dfcag := d.Skip(); _dfcag != nil {
					return _dfcag
				}
			}
		case _a.EndElement:
			break _cfbcf
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SheetId and its children
func (_bfebf *CT_SheetId) Validate() error {
	return _bfebf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064")
}

// ValidateWithPath validates the CT_CellSmartTag and its children, prefixing error messages with path
func (_gdggg *CT_CellSmartTag) ValidateWithPath(path string) error {
	for _ceag, _acdd := range _gdggg.CellSmartTagPr {
		if _eaae := _acdd.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0043\u0065ll\u0053m\u0061\u0072\u0074\u0054\u0061g\u0050\u0072\u005b\u0025\u0064\u005d", path, _ceag)); _eaae != nil {
			return _eaae
		}
	}
	return nil
}
func (_fdeaae ST_Comments) String() string {
	switch _fdeaae {
	case 0:
		return ""
	case 1:
		return "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065"
	case 2:
		return "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	case 3:
		return "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074"
	}
	return ""
}

// ValidateWithPath validates the CT_VolTopicRef and its children, prefixing error messages with path
func (_feeab *CT_VolTopicRef) ValidateWithPath(path string) error { return nil }
func (_egaa *CT_ProtectedRange) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _egaa.PasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_egaa.PasswordAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _egaa.SqrefAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _egaa.NameAttr)})
	if _egaa.SecurityDescriptorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_egaa.SecurityDescriptorAttr)})
	}
	if _egaa.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_egaa.AlgorithmNameAttr)})
	}
	if _egaa.HashValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _fc.Sprintf("\u0025\u0076", *_egaa.HashValueAttr)})
	}
	if _egaa.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _fc.Sprintf("\u0025\u0076", *_egaa.SaltValueAttr)})
	}
	if _egaa.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _fc.Sprintf("\u0025\u0076", *_egaa.SpinCountAttr)})
	}
	e.EncodeToken(start)
	if _egaa.SecurityDescriptor != nil {
		_dfagb := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0073\u0065cu\u0072i\u0074\u0079\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072"}}
		for _, _facff := range _egaa.SecurityDescriptor {
			e.EncodeElement(_facff, _dfagb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_acdcb *CT_RevisionAutoFormatting) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bbcbd := range start.Attr {
		if _bbcbd.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_bbdgb, _egffb := _f.ParseUint(_bbcbd.Value, 10, 32)
			if _egffb != nil {
				return _egffb
			}
			_acdcb.SheetIdAttr = uint32(_bbdgb)
			continue
		}
		if _bbcbd.Name.Local == "\u0072\u0065\u0066" {
			_fbccg, _gebddg := _bbcbd.Value, error(nil)
			if _gebddg != nil {
				return _gebddg
			}
			_acdcb.RefAttr = _fbccg
			continue
		}
		if _bbcbd.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_gadec, _ceefab := _f.ParseUint(_bbcbd.Value, 10, 32)
			if _ceefab != nil {
				return _ceefab
			}
			_acffb := uint32(_gadec)
			_acdcb.AutoFormatIdAttr = &_acffb
			continue
		}
		if _bbcbd.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_fgecc, _gfccf := _f.ParseBool(_bbcbd.Value)
			if _gfccf != nil {
				return _gfccf
			}
			_acdcb.ApplyNumberFormatsAttr = &_fgecc
			continue
		}
		if _bbcbd.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_dggdef, _addae := _f.ParseBool(_bbcbd.Value)
			if _addae != nil {
				return _addae
			}
			_acdcb.ApplyBorderFormatsAttr = &_dggdef
			continue
		}
		if _bbcbd.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cceee, _aabdgf := _f.ParseBool(_bbcbd.Value)
			if _aabdgf != nil {
				return _aabdgf
			}
			_acdcb.ApplyFontFormatsAttr = &_cceee
			continue
		}
		if _bbcbd.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_abgcc, _cbgef := _f.ParseBool(_bbcbd.Value)
			if _cbgef != nil {
				return _cbgef
			}
			_acdcb.ApplyPatternFormatsAttr = &_abgcc
			continue
		}
		if _bbcbd.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bfgce, _fbecef := _f.ParseBool(_bbcbd.Value)
			if _fbecef != nil {
				return _fbecef
			}
			_acdcb.ApplyAlignmentFormatsAttr = &_bfgce
			continue
		}
		if _bbcbd.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_febfd, _babfda := _f.ParseBool(_bbcbd.Value)
			if _babfda != nil {
				return _babfda
			}
			_acdcb.ApplyWidthHeightFormatsAttr = &_febfd
			continue
		}
	}
	for {
		_ggaaa, _debcc := d.Token()
		if _debcc != nil {
			return _fc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eA\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006eg\u003a\u0020\u0025\u0073", _debcc)
		}
		if _deaed, _fcdaeg := _ggaaa.(_a.EndElement); _fcdaeg && _deaed.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_Comments byte

// ValidateWithPath validates the CT_PivotCacheRecords and its children, prefixing error messages with path
func (_cgbac *CT_PivotCacheRecords) ValidateWithPath(path string) error {
	for _eegdbb, _eeaeg := range _cgbac.R {
		if _edcce := _eeaeg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u005b\u0025\u0064\u005d", path, _eegdbb)); _edcce != nil {
			return _edcce
		}
	}
	if _cgbac.ExtLst != nil {
		if _bcgfa := _cgbac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcgfa != nil {
			return _bcgfa
		}
	}
	return nil
}
func NewRevisions() *Revisions {
	_fbdffg := &Revisions{}
	_fbdffg.CT_Revisions = *NewCT_Revisions()
	return _fbdffg
}
func (_fdafc ST_SheetState) String() string {
	switch _fdafc {
	case 0:
		return ""
	case 1:
		return "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case 2:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	case 3:
		return "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}
func (_ffeeec ST_VolDepType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fabeg := _a.Attr{}
	_fabeg.Name = name
	switch _ffeeec {
	case ST_VolDepTypeUnset:
		_fabeg.Value = ""
	case ST_VolDepTypeRealTimeData:
		_fabeg.Value = "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061"
	case ST_VolDepTypeOlapFunctions:
		_fabeg.Value = "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073"
	}
	return _fabeg, nil
}

// ValidateWithPath validates the CT_Fonts and its children, prefixing error messages with path
func (_ggcgf *CT_Fonts) ValidateWithPath(path string) error {
	for _gaeff, _gdabe := range _ggcgf.Font {
		if _fadce := _gdabe.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _gaeff)); _fadce != nil {
			return _fadce
		}
	}
	return nil
}
func (_bagee ST_SortType) Validate() error { return _bagee.ValidateWithPath("") }
func NewCT_Border() *CT_Border             { _aabc := &CT_Border{}; return _aabc }

// Validate validates the CT_Selection and its children
func (_fgccb *CT_Selection) Validate() error {
	return _fgccb.ValidateWithPath("\u0043\u0054\u005fS\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e")
}
func (_cegaf *CT_DateTime) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bace := range start.Attr {
		if _bace.Name.Local == "\u0076" {
			_bccfg, _egca := ParseStdlibTime(_bace.Value)
			if _egca != nil {
				return _egca
			}
			_cegaf.VAttr = _bccfg
			continue
		}
		if _bace.Name.Local == "\u0075" {
			_eafgb, _fgdbd := _f.ParseBool(_bace.Value)
			if _fgdbd != nil {
				return _fgdbd
			}
			_cegaf.UAttr = &_eafgb
			continue
		}
		if _bace.Name.Local == "\u0066" {
			_baggg, _fgee := _f.ParseBool(_bace.Value)
			if _fgee != nil {
				return _fgee
			}
			_cegaf.FAttr = &_baggg
			continue
		}
		if _bace.Name.Local == "\u0063" {
			_bgbdc, _fgagb := _bace.Value, error(nil)
			if _fgagb != nil {
				return _fgagb
			}
			_cegaf.CAttr = &_bgbdc
			continue
		}
		if _bace.Name.Local == "\u0063\u0070" {
			_bfcfc, _cbbbe := _f.ParseUint(_bace.Value, 10, 32)
			if _cbbbe != nil {
				return _cbbbe
			}
			_bdeba := uint32(_bfcfc)
			_cegaf.CpAttr = &_bdeba
			continue
		}
	}
_fgfc:
	for {
		_caaac, _ggggb := d.Token()
		if _ggggb != nil {
			return _ggggb
		}
		switch _acdc := _caaac.(type) {
		case _a.StartElement:
			switch _acdc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_dccdd := NewCT_X()
				if _cffea := d.DecodeElement(_dccdd, &_acdc); _cffea != nil {
					return _cffea
				}
				_cegaf.X = append(_cegaf.X, _dccdd)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065\u0020\u0025\u0076", _acdc.Name)
				if _fbfb := d.Skip(); _fbfb != nil {
					return _fbfb
				}
			}
		case _a.EndElement:
			break _fgfc
		case _a.CharData:
		}
	}
	return nil
}

type CT_Fills struct {

	// Fill Count
	CountAttr *uint32

	// Fill
	Fill []*CT_Fill
}
type CT_PatternFill struct {

	// Pattern Type
	PatternTypeAttr ST_PatternType

	// Foreground Color
	FgColor *CT_Color

	// Background Color
	BgColor *CT_Color
}

// Validate validates the CT_PivotAreaReference and its children
func (_efaba *CT_PivotAreaReference) Validate() error {
	return _efaba.ValidateWithPath("C\u0054\u005f\u0050\u0069vo\u0074A\u0072\u0065\u0061\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065")
}

// ValidateWithPath validates the CT_CellSmartTags and its children, prefixing error messages with path
func (_ebed *CT_CellSmartTags) ValidateWithPath(path string) error {
	for _dcgb, _dgf := range _ebed.CellSmartTag {
		if _fadc := _dgf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043el\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u005b\u0025\u0064\u005d", path, _dcgb)); _fadc != nil {
			return _fadc
		}
	}
	return nil
}
func (_fabdc *CT_FieldGroup) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edcba := range start.Attr {
		if _edcba.Name.Local == "\u0070\u0061\u0072" {
			_aggbg, _dfed := _f.ParseUint(_edcba.Value, 10, 32)
			if _dfed != nil {
				return _dfed
			}
			_fcgdg := uint32(_aggbg)
			_fabdc.ParAttr = &_fcgdg
			continue
		}
		if _edcba.Name.Local == "\u0062\u0061\u0073\u0065" {
			_aadga, _gdfe := _f.ParseUint(_edcba.Value, 10, 32)
			if _gdfe != nil {
				return _gdfe
			}
			_cbbe := uint32(_aadga)
			_fabdc.BaseAttr = &_cbbe
			continue
		}
	}
_afgeb:
	for {
		_bbdg, _bgeed := d.Token()
		if _bgeed != nil {
			return _bgeed
		}
		switch _bdbce := _bbdg.(type) {
		case _a.StartElement:
			switch _bdbce.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0050\u0072"}:
				_fabdc.RangePr = NewCT_RangePr()
				if _cbff := d.DecodeElement(_fabdc.RangePr, &_bdbce); _cbff != nil {
					return _cbff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}:
				_fabdc.DiscretePr = NewCT_DiscretePr()
				if _eeadd := d.DecodeElement(_fabdc.DiscretePr, &_bdbce); _eeadd != nil {
					return _eeadd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}:
				_fabdc.GroupItems = NewCT_GroupItems()
				if _aadcb := d.DecodeElement(_fabdc.GroupItems, &_bdbce); _aadcb != nil {
					return _aadcb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046i\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070 \u0025\u0076", _bdbce.Name)
				if _abac := d.Skip(); _abac != nil {
					return _abac
				}
			}
		case _a.EndElement:
			break _afgeb
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Consolidation and its children
func (_bebba *CT_Consolidation) Validate() error {
	return _bebba.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e")
}
func (_afdffa *ST_UpdateLinks) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fbagf, _gcdfgf := d.Token()
	if _gcdfgf != nil {
		return _gcdfgf
	}
	if _edgbde, _dabfgf := _fbagf.(_a.EndElement); _dabfgf && _edgbde.Name == start.Name {
		*_afdffa = 1
		return nil
	}
	if _eaafc, _bcgeg := _fbagf.(_a.CharData); !_bcgeg {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbagf)
	} else {
		switch string(_eaafc) {
		case "":
			*_afdffa = 0
		case "\u0075s\u0065\u0072\u0053\u0065\u0074":
			*_afdffa = 1
		case "\u006e\u0065\u0076e\u0072":
			*_afdffa = 2
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_afdffa = 3
		}
	}
	_fbagf, _gcdfgf = d.Token()
	if _gcdfgf != nil {
		return _gcdfgf
	}
	if _eeabd, _gagcfd := _fbagf.(_a.EndElement); _gagcfd && _eeabd.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbagf)
}
func (_gdegece ST_PrintError) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gdegece.String(), start)
}

type ST_VolDepType byte

func NewCT_ConditionalFormat() *CT_ConditionalFormat {
	_gcbfa := &CT_ConditionalFormat{}
	_gcbfa.PivotAreas = NewCT_PivotAreas()
	return _gcbfa
}
func (_gfbaf *CT_Members) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gedgg := range start.Attr {
		if _gedgg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_geba, _bgeeg := _f.ParseUint(_gedgg.Value, 10, 32)
			if _bgeeg != nil {
				return _bgeeg
			}
			_gfgge := uint32(_geba)
			_gfbaf.CountAttr = &_gfgge
			continue
		}
		if _gedgg.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_fafba, _gedfe := _f.ParseUint(_gedgg.Value, 10, 32)
			if _gedfe != nil {
				return _gedfe
			}
			_cdede := uint32(_fafba)
			_gfbaf.LevelAttr = &_cdede
			continue
		}
	}
_acegd:
	for {
		_ebga, _cdacd := d.Token()
		if _cdacd != nil {
			return _cdacd
		}
		switch _ggfabb := _ebga.(type) {
		case _a.StartElement:
			switch _ggfabb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u006d\u0062\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u006d\u0062\u0065\u0072"}:
				_dfgdb := NewCT_Member()
				if _agbdc := d.DecodeElement(_dfgdb, &_ggfabb); _agbdc != nil {
					return _agbdc
				}
				_gfbaf.Member = append(_gfbaf.Member, _dfgdb)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _ggfabb.Name)
				if _beaad := d.Skip(); _beaad != nil {
					return _beaad
				}
			}
		case _a.EndElement:
			break _acegd
		case _a.CharData:
		}
	}
	return nil
}
func (_gaffa *ST_VolDepType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gaffa = 0
	case "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061":
		*_gaffa = 1
	case "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073":
		*_gaffa = 2
	}
	return nil
}
func (_gfffc *ST_Objects) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dagef, _daagbce := d.Token()
	if _daagbce != nil {
		return _daagbce
	}
	if _beddg, _eabaab := _dagef.(_a.EndElement); _eabaab && _beddg.Name == start.Name {
		*_gfffc = 1
		return nil
	}
	if _gdbed, _dddcaf := _dagef.(_a.CharData); !_dddcaf {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dagef)
	} else {
		switch string(_gdbed) {
		case "":
			*_gfffc = 0
		case "\u0061\u006c\u006c":
			*_gfffc = 1
		case "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073":
			*_gfffc = 2
		case "\u006e\u006f\u006e\u0065":
			*_gfffc = 3
		}
	}
	_dagef, _daagbce = d.Token()
	if _daagbce != nil {
		return _daagbce
	}
	if _ecdeef, _ceefcb := _dagef.(_a.EndElement); _ceefcb && _ecdeef.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dagef)
}
func (_bcge *CT_DdeValue) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ccff := range start.Attr {
		if _ccff.Name.Local == "\u0074" {
			_bcge.TAttr.UnmarshalXMLAttr(_ccff)
			continue
		}
	}
_cgbad:
	for {
		_acadg, _ffega := d.Token()
		if _ffega != nil {
			return _ffega
		}
		switch _afbfb := _acadg.(type) {
		case _a.StartElement:
			switch _afbfb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}:
				if _dddg := d.DecodeElement(&_bcge.Val, &_afbfb); _dddg != nil {
					return _dddg
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0020\u0025\u0076", _afbfb.Name)
				if _gfcgab := d.Skip(); _gfcgab != nil {
					return _gfcgab
				}
			}
		case _a.EndElement:
			break _cgbad
		case _a.CharData:
		}
	}
	return nil
}
func (_bdcbg *ST_Type) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bdcbg = 0
	case "\u006e\u006f\u006e\u0065":
		*_bdcbg = 1
	case "\u0061\u006c\u006c":
		*_bdcbg = 2
	case "\u0072\u006f\u0077":
		*_bdcbg = 3
	case "\u0063\u006f\u006c\u0075\u006d\u006e":
		*_bdcbg = 4
	}
	return nil
}

// Validate validates the CT_Col and its children
func (_ggdc *CT_Col) Validate() error {
	return _ggdc.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c")
}
func NewCT_ObjectPr() *CT_ObjectPr {
	_fadbb := &CT_ObjectPr{}
	_fadbb.Anchor = NewCT_ObjectAnchor()
	return _fadbb
}
func (_dbaf *CT_Cell) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dbaf.RAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_dbaf.RAttr)})
	}
	if _dbaf.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fc.Sprintf("\u0025\u0076", *_dbaf.SAttr)})
	}
	if _dbaf.TAttr != ST_CellTypeUnset {
		_cabf, _dccfa := _dbaf.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _dccfa != nil {
			return _dccfa
		}
		start.Attr = append(start.Attr, _cabf)
	}
	if _dbaf.CmAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006d"}, Value: _fc.Sprintf("\u0025\u0076", *_dbaf.CmAttr)})
	}
	if _dbaf.VmAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u006d"}, Value: _fc.Sprintf("\u0025\u0076", *_dbaf.VmAttr)})
	}
	if _dbaf.PhAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dbaf.PhAttr))})
	}
	e.EncodeToken(start)
	if _dbaf.F != nil {
		_bffg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066"}}
		e.EncodeElement(_dbaf.F, _bffg)
	}
	if _dbaf.V != nil {
		_cfegd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0076"}}
		_fca.AddPreserveSpaceAttr(&_cfegd, *_dbaf.V)
		e.EncodeElement(_dbaf.V, _cfegd)
	}
	if _dbaf.Is != nil {
		_gcfg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ai\u0073"}}
		e.EncodeElement(_dbaf.Is, _gcfg)
	}
	if _dbaf.ExtLst != nil {
		_fbgc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dbaf.ExtLst, _fbgc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_PivotAreaReference() *CT_PivotAreaReference {
	_ebdgeg := &CT_PivotAreaReference{}
	return _ebdgeg
}
func (_efbba *ST_SortType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cccfd, _ffdadd := d.Token()
	if _ffdadd != nil {
		return _ffdadd
	}
	if _eagda, _gaacba := _cccfd.(_a.EndElement); _gaacba && _eagda.Name == start.Name {
		*_efbba = 1
		return nil
	}
	if _fdcfb, _fgfefd := _cccfd.(_a.CharData); !_fgfefd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cccfd)
	} else {
		switch string(_fdcfb) {
		case "":
			*_efbba = 0
		case "\u006e\u006f\u006e\u0065":
			*_efbba = 1
		case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
			*_efbba = 2
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
			*_efbba = 3
		case "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061":
			*_efbba = 4
		case "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061":
			*_efbba = 5
		case "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c":
			*_efbba = 6
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c":
			*_efbba = 7
		}
	}
	_cccfd, _ffdadd = d.Token()
	if _ffdadd != nil {
		return _ffdadd
	}
	if _agdde, _begga := _cccfd.(_a.EndElement); _begga && _agdde.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cccfd)
}
func (_dgb *CT_CacheHierarchies) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dgb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_dgb.CountAttr)})
	}
	e.EncodeToken(start)
	if _dgb.CacheHierarchy != nil {
		_fag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}}
		for _, _eedc := range _dgb.CacheHierarchy {
			e.EncodeElement(_eedc, _fag)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fbbaf ST_PatternType) ValidateWithPath(path string) error {
	switch _fbbaf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbbaf))
	}
	return nil
}

type CT_Top10 struct {

	// Top
	TopAttr *bool

	// Filter by Percent
	PercentAttr *bool

	// Top or Bottom Value
	ValAttr float64

	// Filter Value
	FilterValAttr *float64
}

// ValidateWithPath validates the CT_CellFormula and its children, prefixing error messages with path
func (_gbda *CT_CellFormula) ValidateWithPath(path string) error {
	if _eddd := _gbda.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _eddd != nil {
		return _eddd
	}
	return nil
}

type CT_Colors struct {

	// Color Indexes
	IndexedColors *CT_IndexedColors

	// MRU Colors
	MruColors *CT_MRUColors
}

// ValidateWithPath validates the Connections and its children, prefixing error messages with path
func (_fdggce *Connections) ValidateWithPath(path string) error {
	if _gaacfg := _fdggce.CT_Connections.ValidateWithPath(path); _gaacfg != nil {
		return _gaacfg
	}
	return nil
}
func (_bcbdc ST_DateTimeGrouping) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gcgddc := _a.Attr{}
	_gcgddc.Name = name
	switch _bcbdc {
	case ST_DateTimeGroupingUnset:
		_gcgddc.Value = ""
	case ST_DateTimeGroupingYear:
		_gcgddc.Value = "\u0079\u0065\u0061\u0072"
	case ST_DateTimeGroupingMonth:
		_gcgddc.Value = "\u006d\u006f\u006et\u0068"
	case ST_DateTimeGroupingDay:
		_gcgddc.Value = "\u0064\u0061\u0079"
	case ST_DateTimeGroupingHour:
		_gcgddc.Value = "\u0068\u006f\u0075\u0072"
	case ST_DateTimeGroupingMinute:
		_gcgddc.Value = "\u006d\u0069\u006e\u0075\u0074\u0065"
	case ST_DateTimeGroupingSecond:
		_gcgddc.Value = "\u0073\u0065\u0063\u006f\u006e\u0064"
	}
	return _gcgddc, nil
}

// ValidateWithPath validates the Workbook and its children, prefixing error messages with path
func (_eabcf *Workbook) ValidateWithPath(path string) error {
	if _gabage := _eabcf.CT_Workbook.ValidateWithPath(path); _gabage != nil {
		return _gabage
	}
	return nil
}

// Validate validates the CT_PatternFill and its children
func (_eabaea *CT_PatternFill) Validate() error {
	return _eabaea.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c")
}

// ValidateWithPath validates the CT_PivotCaches and its children, prefixing error messages with path
func (_gfcba *CT_PivotCaches) ValidateWithPath(path string) error {
	for _gggae, _egfea := range _gfcba.PivotCache {
		if _babfd := _egfea.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u005b\u0025\u0064\u005d", path, _gggae)); _babfd != nil {
			return _babfd
		}
	}
	return nil
}
func (_edcbd *CT_Drawing) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _efde := range start.Attr {
		if _efde.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _efde.Name.Local == "\u0069\u0064" || _efde.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _efde.Name.Local == "\u0069\u0064" {
			_baebc, _abfef := _efde.Value, error(nil)
			if _abfef != nil {
				return _abfef
			}
			_edcbd.IdAttr = _baebc
			continue
		}
	}
	for {
		_bgga, _faac := d.Token()
		if _faac != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u003a\u0020%\u0073", _faac)
		}
		if _dddfb, _eggdf := _bgga.(_a.EndElement); _eggdf && _dddfb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bfcabe ST_VolValueType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bfcabe.String(), start)
}
func (_bfede *CT_Fills) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _abefd := range start.Attr {
		if _abefd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fgac, _addd := _f.ParseUint(_abefd.Value, 10, 32)
			if _addd != nil {
				return _addd
			}
			_ddeee := uint32(_fgac)
			_bfede.CountAttr = &_ddeee
			continue
		}
	}
_facgc:
	for {
		_cecbg, _efab := d.Token()
		if _efab != nil {
			return _efab
		}
		switch _acgdf := _cecbg.(type) {
		case _a.StartElement:
			switch _acgdf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_acfda := NewCT_Fill()
				if _ddfg := d.DecodeElement(_acfda, &_acgdf); _ddfg != nil {
					return _ddfg
				}
				_bfede.Fill = append(_bfede.Fill, _acfda)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073\u0020\u0025\u0076", _acgdf.Name)
				if _acbfa := d.Skip(); _acbfa != nil {
					return _acbfa
				}
			}
		case _a.EndElement:
			break _facgc
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_Set() *CT_Set { _cdeab := &CT_Set{}; return _cdeab }

// Validate validates the CT_CellWatch and its children
func (_dbbe *CT_CellWatch) Validate() error {
	return _dbbe.ValidateWithPath("\u0043\u0054\u005fC\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068")
}
func (_gacgd *CT_CacheHierarchies) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cag := range start.Attr {
		if _cag.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dbcc, _fcbc := _f.ParseUint(_cag.Value, 10, 32)
			if _fcbc != nil {
				return _fcbc
			}
			_gbc := uint32(_dbcc)
			_gacgd.CountAttr = &_gbc
			continue
		}
	}
_gfaa:
	for {
		_dfad, _ffc := d.Token()
		if _ffc != nil {
			return _ffc
		}
		switch _cgg := _dfad.(type) {
		case _a.StartElement:
			switch _cgg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}:
				_eaab := NewCT_CacheHierarchy()
				if _efcd := d.DecodeElement(_eaab, &_cgg); _efcd != nil {
					return _efcd
				}
				_gacgd.CacheHierarchy = append(_gacgd.CacheHierarchy, _eaab)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069er\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0020\u0025\u0076", _cgg.Name)
				if _efg := d.Skip(); _efg != nil {
					return _efg
				}
			}
		case _a.EndElement:
			break _gfaa
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PhoneticRun and its children, prefixing error messages with path
func (_acagg *CT_PhoneticRun) ValidateWithPath(path string) error { return nil }
func (_abagd *CT_DateGroupItem) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0079\u0065\u0061\u0072"}, Value: _fc.Sprintf("\u0025\u0076", _abagd.YearAttr)})
	if _abagd.MonthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u006f\u006et\u0068"}, Value: _fc.Sprintf("\u0025\u0076", *_abagd.MonthAttr)})
	}
	if _abagd.DayAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0079"}, Value: _fc.Sprintf("\u0025\u0076", *_abagd.DayAttr)})
	}
	if _abagd.HourAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u006f\u0075\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_abagd.HourAttr)})
	}
	if _abagd.MinuteAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e\u0075\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_abagd.MinuteAttr)})
	}
	if _abagd.SecondAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0063\u006f\u006e\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_abagd.SecondAttr)})
	}
	_adbc, _dggb := _abagd.DateTimeGroupingAttr.MarshalXMLAttr(_a.Name{Local: "\u0064\u0061t\u0065\u0054\u0069m\u0065\u0047\u0072\u006f\u0075\u0070\u0069\u006e\u0067"})
	if _dggb != nil {
		return _dggb
	}
	start.Attr = append(start.Attr, _adbc)
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TupleCache and its children, prefixing error messages with path
func (_dddcgg *CT_TupleCache) ValidateWithPath(path string) error {
	if _dddcgg.Entries != nil {
		if _afbeb := _dddcgg.Entries.ValidateWithPath(path + "\u002f\u0045\u006e\u0074\u0072\u0069\u0065\u0073"); _afbeb != nil {
			return _afbeb
		}
	}
	if _dddcgg.Sets != nil {
		if _aegbcf := _dddcgg.Sets.ValidateWithPath(path + "\u002f\u0053\u0065t\u0073"); _aegbcf != nil {
			return _aegbcf
		}
	}
	if _dddcgg.QueryCache != nil {
		if _cdbea := _dddcgg.QueryCache.ValidateWithPath(path + "/\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"); _cdbea != nil {
			return _cdbea
		}
	}
	if _dddcgg.ServerFormats != nil {
		if _edgcbd := _dddcgg.ServerFormats.ValidateWithPath(path + "\u002f\u0053\u0065\u0072\u0076\u0065\u0072\u0046\u006fr\u006d\u0061\u0074\u0073"); _edgcbd != nil {
			return _edgcbd
		}
	}
	if _dddcgg.ExtLst != nil {
		if _bdffa := _dddcgg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bdffa != nil {
			return _bdffa
		}
	}
	return nil
}
func NewCT_SheetIdMap() *CT_SheetIdMap { _gbgcf := &CT_SheetIdMap{}; return _gbgcf }
func NewTable() *Table                 { _dbggc := &Table{}; _dbggc.CT_Table = *NewCT_Table(); return _dbggc }

// Validate validates the CT_PivotFilter and its children
func (_fdfaa *CT_PivotFilter) Validate() error {
	return _fdfaa.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u006c\u0074\u0065\u0072")
}
func NewCalcChain() *CalcChain {
	_ceagd := &CalcChain{}
	_ceagd.CT_CalcChain = *NewCT_CalcChain()
	return _ceagd
}

type CT_PivotHierarchy struct {

	// Outline New Levels
	OutlineAttr *bool

	// Multiple Field Filters
	MultipleItemSelectionAllowedAttr *bool

	// New Levels Subtotals At Top
	SubtotalTopAttr *bool

	// Show In Field List
	ShowInFieldListAttr *bool

	// Drag To Row
	DragToRowAttr *bool

	// Drag To Column
	DragToColAttr *bool

	// Drag to Page
	DragToPageAttr *bool

	// Drag To Data
	DragToDataAttr *bool

	// Drag Off
	DragOffAttr *bool

	// Inclusive Manual Filter
	IncludeNewItemsInFilterAttr *bool

	// Hierarchy Caption
	CaptionAttr *string

	// OLAP Member Properties
	Mps *CT_MemberProperties

	// Members
	Members []*CT_Members

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_ObjectPr and its children
func (_dggec *CT_ObjectPr) Validate() error {
	return _dggec.ValidateWithPath("C\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072")
}

// ValidateWithPath validates the CT_Set and its children, prefixing error messages with path
func (_acedg *CT_Set) ValidateWithPath(path string) error {
	if _abagf := _acedg.SortTypeAttr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _abagf != nil {
		return _abagf
	}
	for _eebeb, _abcbe := range _acedg.Tpls {
		if _bfcdedd := _abcbe.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _eebeb)); _bfcdedd != nil {
			return _bfcdedd
		}
	}
	if _acedg.SortByTuple != nil {
		if _daccge := _acedg.SortByTuple.ValidateWithPath(path + "\u002f\u0053\u006fr\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"); _daccge != nil {
			return _daccge
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellXfs and its children, prefixing error messages with path
func (_afaf *CT_CellXfs) ValidateWithPath(path string) error {
	for _bgag, _eafc := range _afaf.Xf {
		if _ddcf := _eafc.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0058\u0066\u005b\u0025\u0064]", path, _bgag)); _ddcf != nil {
			return _ddcf
		}
	}
	return nil
}
func (_abaae ST_CalcMode) String() string {
	switch _abaae {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006e\u0075\u0061\u006c"
	case 2:
		return "\u0061\u0075\u0074\u006f"
	case 3:
		return "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065"
	}
	return ""
}

const (
	ST_PivotAreaTypeUnset    ST_PivotAreaType = 0
	ST_PivotAreaTypeNone     ST_PivotAreaType = 1
	ST_PivotAreaTypeNormal   ST_PivotAreaType = 2
	ST_PivotAreaTypeData     ST_PivotAreaType = 3
	ST_PivotAreaTypeAll      ST_PivotAreaType = 4
	ST_PivotAreaTypeOrigin   ST_PivotAreaType = 5
	ST_PivotAreaTypeButton   ST_PivotAreaType = 6
	ST_PivotAreaTypeTopEnd   ST_PivotAreaType = 7
	ST_PivotAreaTypeTopRight ST_PivotAreaType = 8
)

func (_egdga *CT_InputCells) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgde := range start.Attr {
		if _fgde.Name.Local == "\u0072" {
			_fgbcb, _fcde := _fgde.Value, error(nil)
			if _fcde != nil {
				return _fcde
			}
			_egdga.RAttr = _fgbcb
			continue
		}
		if _fgde.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_gbdef, _bddb := _f.ParseBool(_fgde.Value)
			if _bddb != nil {
				return _bddb
			}
			_egdga.DeletedAttr = &_gbdef
			continue
		}
		if _fgde.Name.Local == "\u0075\u006e\u0064\u006f\u006e\u0065" {
			_cdgbc, _cbebe := _f.ParseBool(_fgde.Value)
			if _cbebe != nil {
				return _cbebe
			}
			_egdga.UndoneAttr = &_cdgbc
			continue
		}
		if _fgde.Name.Local == "\u0076\u0061\u006c" {
			_faece, _edcbef := _fgde.Value, error(nil)
			if _edcbef != nil {
				return _edcbef
			}
			_egdga.ValAttr = _faece
			continue
		}
		if _fgde.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_eggbc, _aeeeac := _f.ParseUint(_fgde.Value, 10, 32)
			if _aeeeac != nil {
				return _aeeeac
			}
			_bbeebg := uint32(_eggbc)
			_egdga.NumFmtIdAttr = &_bbeebg
			continue
		}
	}
	for {
		_dcda, _bdcef := d.Token()
		if _bdcef != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0070u\u0074C\u0065\u006c\u006c\u0073\u003a\u0020\u0025s", _bdcef)
		}
		if _dedgf, _fbgad := _dcda.(_a.EndElement); _fbgad && _dedgf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dfade ST_CfvoType) Validate() error { return _dfade.ValidateWithPath("") }
func (_ccbc *CT_DataFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _adcdc := range start.Attr {
		if _adcdc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ffbg, _bbfc := _f.ParseUint(_adcdc.Value, 10, 32)
			if _bbfc != nil {
				return _bbfc
			}
			_cacg := uint32(_ffbg)
			_ccbc.CountAttr = &_cacg
			continue
		}
	}
_eeff:
	for {
		_fgafbd, _acbb := d.Token()
		if _acbb != nil {
			return _acbb
		}
		switch _cgdgc := _fgafbd.(type) {
		case _a.StartElement:
			switch _cgdgc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}:
				_fgfe := NewCT_DataField()
				if _febf := d.DecodeElement(_fgfe, &_cgdgc); _febf != nil {
					return _febf
				}
				_ccbc.DataField = append(_ccbc.DataField, _fgfe)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044a\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _cgdgc.Name)
				if _gbbc := d.Skip(); _gbbc != nil {
					return _gbbc
				}
			}
		case _a.EndElement:
			break _eeff
		case _a.CharData:
		}
	}
	return nil
}
func (_fbeee *CT_DrawingHF) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fdgeb := range start.Attr {
		if _fdgeb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fdgeb.Name.Local == "\u0069\u0064" || _fdgeb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fdgeb.Name.Local == "\u0069\u0064" {
			_gecfa, _fagd := _fdgeb.Value, error(nil)
			if _fagd != nil {
				return _fagd
			}
			_fbeee.IdAttr = _gecfa
			continue
		}
		if _fdgeb.Name.Local == "\u0072\u0068\u0066" {
			_aeabe, _ddf := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _ddf != nil {
				return _ddf
			}
			_cffcf := uint32(_aeabe)
			_fbeee.RhfAttr = &_cffcf
			continue
		}
		if _fdgeb.Name.Local == "\u006c\u0066\u006f" {
			_effdf, _daaef := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _daaef != nil {
				return _daaef
			}
			_gcfec := uint32(_effdf)
			_fbeee.LfoAttr = &_gcfec
			continue
		}
		if _fdgeb.Name.Local == "\u006c\u0066\u0065" {
			_dfcfe, _cacdc := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _cacdc != nil {
				return _cacdc
			}
			_bgcdc := uint32(_dfcfe)
			_fbeee.LfeAttr = &_bgcdc
			continue
		}
		if _fdgeb.Name.Local == "\u006c\u0068\u0066" {
			_decg, _eccab := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _eccab != nil {
				return _eccab
			}
			_bgdddb := uint32(_decg)
			_fbeee.LhfAttr = &_bgdddb
			continue
		}
		if _fdgeb.Name.Local == "\u006c\u0066\u0066" {
			_ffgf, _fdcgf := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _fdcgf != nil {
				return _fdcgf
			}
			_gdffa := uint32(_ffgf)
			_fbeee.LffAttr = &_gdffa
			continue
		}
		if _fdgeb.Name.Local == "\u0063\u0068\u0065" {
			_dgba, _adab := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _adab != nil {
				return _adab
			}
			_afbgd := uint32(_dgba)
			_fbeee.CheAttr = &_afbgd
			continue
		}
		if _fdgeb.Name.Local == "\u0072\u0068\u006f" {
			_debg, _cedfc := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _cedfc != nil {
				return _cedfc
			}
			_fadad := uint32(_debg)
			_fbeee.RhoAttr = &_fadad
			continue
		}
		if _fdgeb.Name.Local == "\u0072\u0068\u0065" {
			_dcedg, _cdfad := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _cdfad != nil {
				return _cdfad
			}
			_ffac := uint32(_dcedg)
			_fbeee.RheAttr = &_ffac
			continue
		}
		if _fdgeb.Name.Local == "\u006c\u0068\u006f" {
			_bfgbe, _abef := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _abef != nil {
				return _abef
			}
			_efcag := uint32(_bfgbe)
			_fbeee.LhoAttr = &_efcag
			continue
		}
		if _fdgeb.Name.Local == "\u006c\u0068\u0065" {
			_bgda, _dfeaae := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _dfeaae != nil {
				return _dfeaae
			}
			_cceae := uint32(_bgda)
			_fbeee.LheAttr = &_cceae
			continue
		}
		if _fdgeb.Name.Local == "\u0063\u0068\u006f" {
			_gadd, _ddag := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _ddag != nil {
				return _ddag
			}
			_gebe := uint32(_gadd)
			_fbeee.ChoAttr = &_gebe
			continue
		}
		if _fdgeb.Name.Local == "\u0063\u0068\u0066" {
			_beeac, _gcbac := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _gcbac != nil {
				return _gcbac
			}
			_dbbde := uint32(_beeac)
			_fbeee.ChfAttr = &_dbbde
			continue
		}
		if _fdgeb.Name.Local == "\u0063\u0066\u006f" {
			_fbfbf, _abbdd := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _abbdd != nil {
				return _abbdd
			}
			_gffaf := uint32(_fbfbf)
			_fbeee.CfoAttr = &_gffaf
			continue
		}
		if _fdgeb.Name.Local == "\u0063\u0066\u0065" {
			_bffce, _cafca := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _cafca != nil {
				return _cafca
			}
			_gaae := uint32(_bffce)
			_fbeee.CfeAttr = &_gaae
			continue
		}
		if _fdgeb.Name.Local == "\u0063\u0066\u0066" {
			_eebe, _efgeb := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _efgeb != nil {
				return _efgeb
			}
			_bcbgb := uint32(_eebe)
			_fbeee.CffAttr = &_bcbgb
			continue
		}
		if _fdgeb.Name.Local == "\u0072\u0066\u006f" {
			_bcaca, _gacbd := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _gacbd != nil {
				return _gacbd
			}
			_cbgeg := uint32(_bcaca)
			_fbeee.RfoAttr = &_cbgeg
			continue
		}
		if _fdgeb.Name.Local == "\u0072\u0066\u0065" {
			_dgbb, _daaeg := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _daaeg != nil {
				return _daaeg
			}
			_cgbbc := uint32(_dgbb)
			_fbeee.RfeAttr = &_cgbbc
			continue
		}
		if _fdgeb.Name.Local == "\u0072\u0066\u0066" {
			_effdg, _cbfe := _f.ParseUint(_fdgeb.Value, 10, 32)
			if _cbfe != nil {
				return _cbfe
			}
			_cgfcee := uint32(_effdg)
			_fbeee.RffAttr = &_cgfcee
			continue
		}
	}
	for {
		_ffgfe, _beadd := d.Token()
		if _beadd != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0072a\u0077\u0069\u006e\u0067\u0048\u0046\u003a\u0020\u0025\u0073", _beadd)
		}
		if _fecf, _fgbd := _ffgfe.(_a.EndElement); _fgbd && _fecf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bcaea *CT_Missing) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bcaea.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcaea.UAttr))})
	}
	if _bcaea.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcaea.FAttr))})
	}
	if _bcaea.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_bcaea.CAttr)})
	}
	if _bcaea.CpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_bcaea.CpAttr)})
	}
	if _bcaea.InAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_bcaea.InAttr)})
	}
	if _bcaea.BcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_bcaea.BcAttr)})
	}
	if _bcaea.FcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_bcaea.FcAttr)})
	}
	if _bcaea.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcaea.IAttr))})
	}
	if _bcaea.UnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcaea.UnAttr))})
	}
	if _bcaea.StAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcaea.StAttr))})
	}
	if _bcaea.BAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcaea.BAttr))})
	}
	e.EncodeToken(start)
	if _bcaea.Tpls != nil {
		_eaaga := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _feea := range _bcaea.Tpls {
			e.EncodeElement(_feea, _eaaga)
		}
	}
	if _bcaea.X != nil {
		_dfegf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _dbbefa := range _bcaea.X {
			e.EncodeElement(_dbbefa, _dfegf)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_BookView() *CT_BookView { _bb := &CT_BookView{}; return _bb }

// Validate validates the CT_Top10 and its children
func (_ccfgd *CT_Top10) Validate() error {
	return _ccfgd.ValidateWithPath("\u0043\u0054\u005f\u0054\u006f\u0070\u0031\u0030")
}
func (_dcgbf *Connections) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0063\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073"
	return _dcgbf.CT_Connections.MarshalXML(e, start)
}

// Validate validates the CT_AutoSortScope and its children
func (_gaa *CT_AutoSortScope) Validate() error {
	return _gaa.ValidateWithPath("\u0043\u0054_\u0041\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065")
}
func (_gecde *CT_Extension) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gecde.UriAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0072\u0069"}, Value: _fc.Sprintf("\u0025\u0076", *_gecde.UriAttr)})
	}
	e.EncodeToken(start)
	if _gecde.Any != nil {
		_gecde.Any.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Headers and its children, prefixing error messages with path
func (_fdecc *Headers) ValidateWithPath(path string) error {
	if _afged := _fdecc.CT_RevisionHeaders.ValidateWithPath(path); _afged != nil {
		return _afged
	}
	return nil
}
func (_dbdbg ST_FontScheme) ValidateWithPath(path string) error {
	switch _dbdbg {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbdbg))
	}
	return nil
}
func (_faff *CT_DdeItem) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aeead := range start.Attr {
		if _aeead.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aebgb, _fedfc := _aeead.Value, error(nil)
			if _fedfc != nil {
				return _fedfc
			}
			_faff.NameAttr = &_aebgb
			continue
		}
		if _aeead.Name.Local == "\u006f\u006c\u0065" {
			_degge, _eaceg := _f.ParseBool(_aeead.Value)
			if _eaceg != nil {
				return _eaceg
			}
			_faff.OleAttr = &_degge
			continue
		}
		if _aeead.Name.Local == "\u0061\u0064\u0076\u0069\u0073\u0065" {
			_efacf, _gfdae := _f.ParseBool(_aeead.Value)
			if _gfdae != nil {
				return _gfdae
			}
			_faff.AdviseAttr = &_efacf
			continue
		}
		if _aeead.Name.Local == "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c" {
			_deba, _badd := _f.ParseBool(_aeead.Value)
			if _badd != nil {
				return _badd
			}
			_faff.PreferPicAttr = &_deba
			continue
		}
	}
_edfff:
	for {
		_fdcf, _cgbf := d.Token()
		if _cgbf != nil {
			return _cgbf
		}
		switch _accdg := _fdcf.(type) {
		case _a.StartElement:
			switch _accdg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u0073"}:
				_faff.Values = NewCT_DdeValues()
				if _feccb := d.DecodeElement(_faff.Values, &_accdg); _feccb != nil {
					return _feccb
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0064\u0065\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _accdg.Name)
				if _fecaf := d.Skip(); _fecaf != nil {
					return _fecaf
				}
			}
		case _a.EndElement:
			break _edfff
		case _a.CharData:
		}
	}
	return nil
}

type CT_SharedUser struct {

	// User Revisions GUID
	GuidAttr string

	// User Name
	NameAttr string

	// User Id
	IdAttr int32

	// Date Time
	DateTimeAttr _cd.Time
	ExtLst       *CT_ExtensionList
}

func (_agdee ST_FontScheme) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bgcdd := _a.Attr{}
	_bgcdd.Name = name
	switch _agdee {
	case ST_FontSchemeUnset:
		_bgcdd.Value = ""
	case ST_FontSchemeNone:
		_bgcdd.Value = "\u006e\u006f\u006e\u0065"
	case ST_FontSchemeMajor:
		_bgcdd.Value = "\u006d\u0061\u006ao\u0072"
	case ST_FontSchemeMinor:
		_bgcdd.Value = "\u006d\u0069\u006eo\u0072"
	}
	return _bgcdd, nil
}
func NewCT_PhoneticPr() *CT_PhoneticPr       { _adagg := &CT_PhoneticPr{}; return _adagg }
func NewCT_MdxSet() *CT_MdxSet               { _ddda := &CT_MdxSet{}; return _ddda }
func NewCT_CellAlignment() *CT_CellAlignment { _fada := &CT_CellAlignment{}; return _fada }

const (
	ST_OrientationUnset     ST_Orientation = 0
	ST_OrientationDefault   ST_Orientation = 1
	ST_OrientationPortrait  ST_Orientation = 2
	ST_OrientationLandscape ST_Orientation = 3
)

func NewCT_DataRefs() *CT_DataRefs { _ecaag := &CT_DataRefs{}; return _ecaag }

type CT_FileSharing struct {

	// Read Only Recommended
	ReadOnlyRecommendedAttr *bool

	// User Name
	UserNameAttr *string

	// Write Reservation Password
	ReservationPasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32
}

func (_acdaf *CT_Error) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ddegf := range start.Attr {
		if _ddegf.Name.Local == "\u0066\u0063" {
			_dbfbg, _aabff := _ddegf.Value, error(nil)
			if _aabff != nil {
				return _aabff
			}
			_acdaf.FcAttr = &_dbfbg
			continue
		}
		if _ddegf.Name.Local == "\u0076" {
			_edgff, _abbaf := _ddegf.Value, error(nil)
			if _abbaf != nil {
				return _abbaf
			}
			_acdaf.VAttr = _edgff
			continue
		}
		if _ddegf.Name.Local == "\u0066" {
			_gebgcd, _adfae := _f.ParseBool(_ddegf.Value)
			if _adfae != nil {
				return _adfae
			}
			_acdaf.FAttr = &_gebgcd
			continue
		}
		if _ddegf.Name.Local == "\u0063" {
			_bfec, _abcg := _ddegf.Value, error(nil)
			if _abcg != nil {
				return _abcg
			}
			_acdaf.CAttr = &_bfec
			continue
		}
		if _ddegf.Name.Local == "\u0063\u0070" {
			_ebgbd, _fcccb := _f.ParseUint(_ddegf.Value, 10, 32)
			if _fcccb != nil {
				return _fcccb
			}
			_beebd := uint32(_ebgbd)
			_acdaf.CpAttr = &_beebd
			continue
		}
		if _ddegf.Name.Local == "\u0069\u006e" {
			_adeg, _fbge := _f.ParseUint(_ddegf.Value, 10, 32)
			if _fbge != nil {
				return _fbge
			}
			_fdad := uint32(_adeg)
			_acdaf.InAttr = &_fdad
			continue
		}
		if _ddegf.Name.Local == "\u0062\u0063" {
			_fbdgb, _dbdga := _ddegf.Value, error(nil)
			if _dbdga != nil {
				return _dbdga
			}
			_acdaf.BcAttr = &_fbdgb
			continue
		}
		if _ddegf.Name.Local == "\u0075" {
			_fbcbf, _gebfc := _f.ParseBool(_ddegf.Value)
			if _gebfc != nil {
				return _gebfc
			}
			_acdaf.UAttr = &_fbcbf
			continue
		}
		if _ddegf.Name.Local == "\u0069" {
			_bggfd, _cafa := _f.ParseBool(_ddegf.Value)
			if _cafa != nil {
				return _cafa
			}
			_acdaf.IAttr = &_bggfd
			continue
		}
		if _ddegf.Name.Local == "\u0075\u006e" {
			_dbgfcd, _gggd := _f.ParseBool(_ddegf.Value)
			if _gggd != nil {
				return _gggd
			}
			_acdaf.UnAttr = &_dbgfcd
			continue
		}
		if _ddegf.Name.Local == "\u0073\u0074" {
			_eeee, _adag := _f.ParseBool(_ddegf.Value)
			if _adag != nil {
				return _adag
			}
			_acdaf.StAttr = &_eeee
			continue
		}
		if _ddegf.Name.Local == "\u0062" {
			_eegfc, _ceaade := _f.ParseBool(_ddegf.Value)
			if _ceaade != nil {
				return _ceaade
			}
			_acdaf.BAttr = &_eegfc
			continue
		}
	}
_gede:
	for {
		_dagada, _cccbg := d.Token()
		if _cccbg != nil {
			return _cccbg
		}
		switch _dgcfac := _dagada.(type) {
		case _a.StartElement:
			switch _dgcfac.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_acdaf.Tpls = NewCT_Tuples()
				if _dcdfga := d.DecodeElement(_acdaf.Tpls, &_dgcfac); _dcdfga != nil {
					return _dcdfga
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_gbbf := NewCT_X()
				if _fbagc := d.DecodeElement(_gbbf, &_dgcfac); _fbagc != nil {
					return _fbagc
				}
				_acdaf.X = append(_acdaf.X, _gbbf)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072\u0020\u0025\u0076", _dgcfac.Name)
				if _eacda := d.Skip(); _eacda != nil {
					return _eacda
				}
			}
		case _a.EndElement:
			break _gede
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HeaderFooter and its children, prefixing error messages with path
func (_cgfe *CT_HeaderFooter) ValidateWithPath(path string) error { return nil }
func NewCT_Members() *CT_Members                                  { _fgfb := &CT_Members{}; return _fgfb }
func (_bcc *CT_Border) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bcc.DiagonalUpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c\u0055\u0070"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcc.DiagonalUpAttr))})
	}
	if _bcc.DiagonalDownAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0061g\u006f\u006e\u0061\u006c\u0044\u006f\u0077\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcc.DiagonalDownAttr))})
	}
	if _bcc.OutlineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bcc.OutlineAttr))})
	}
	e.EncodeToken(start)
	if _bcc.Start != nil {
		_ccg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0074\u0061\u0072\u0074"}}
		e.EncodeElement(_bcc.Start, _ccg)
	}
	if _bcc.End != nil {
		_gafe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0065\u006e\u0064"}}
		e.EncodeElement(_bcc.End, _gafe)
	}
	if _bcc.Left != nil {
		_ecca := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u006c\u0065\u0066\u0074"}}
		e.EncodeElement(_bcc.Left, _ecca)
	}
	if _bcc.Right != nil {
		_cba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0072\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_bcc.Right, _cba)
	}
	if _bcc.Top != nil {
		_ddc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074\u006f\u0070"}}
		e.EncodeElement(_bcc.Top, _ddc)
	}
	if _bcc.Bottom != nil {
		_dbf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0062\u006f\u0074\u0074\u006fm"}}
		e.EncodeElement(_bcc.Bottom, _dbf)
	}
	if _bcc.Diagonal != nil {
		_cfb := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}}
		e.EncodeElement(_bcc.Diagonal, _cfb)
	}
	if _bcc.Vertical != nil {
		_afe := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}}
		e.EncodeElement(_bcc.Vertical, _afe)
	}
	if _bcc.Horizontal != nil {
		_bbg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}}
		e.EncodeElement(_bcc.Horizontal, _bbg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fggff *ST_UnderlineValues) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdafcb, _bgcdg := d.Token()
	if _bgcdg != nil {
		return _bgcdg
	}
	if _bagag, _dgccgc := _gdafcb.(_a.EndElement); _dgccgc && _bagag.Name == start.Name {
		*_fggff = 1
		return nil
	}
	if _dbfab, _faaeg := _gdafcb.(_a.CharData); !_faaeg {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdafcb)
	} else {
		switch string(_dbfab) {
		case "":
			*_fggff = 0
		case "\u0073\u0069\u006e\u0067\u006c\u0065":
			*_fggff = 1
		case "\u0064\u006f\u0075\u0062\u006c\u0065":
			*_fggff = 2
		case "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
			*_fggff = 3
		case "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
			*_fggff = 4
		case "\u006e\u006f\u006e\u0065":
			*_fggff = 5
		}
	}
	_gdafcb, _bgcdg = d.Token()
	if _bgcdg != nil {
		return _bgcdg
	}
	if _ggeafg, _fffgc := _gdafcb.(_a.EndElement); _fffgc && _ggeafg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdafcb)
}
func (_ggfdcg *ST_PhoneticType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_debcgcd, _baedf := d.Token()
	if _baedf != nil {
		return _baedf
	}
	if _daafg, _faggff := _debcgcd.(_a.EndElement); _faggff && _daafg.Name == start.Name {
		*_ggfdcg = 1
		return nil
	}
	if _abgfb, _cfddga := _debcgcd.(_a.CharData); !_cfddga {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _debcgcd)
	} else {
		switch string(_abgfb) {
		case "":
			*_ggfdcg = 0
		case "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
			*_ggfdcg = 1
		case "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
			*_ggfdcg = 2
		case "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
			*_ggfdcg = 3
		case "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e":
			*_ggfdcg = 4
		}
	}
	_debcgcd, _baedf = d.Token()
	if _baedf != nil {
		return _baedf
	}
	if _dddeg, _cgcda := _debcgcd.(_a.EndElement); _cgcda && _dddeg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _debcgcd)
}
func (_gbeba *CT_PageFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gbeba.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_gbeba.CountAttr)})
	}
	e.EncodeToken(start)
	_ffcbb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064"}}
	for _, _eedbg := range _gbeba.PageField {
		e.EncodeElement(_eedbg, _ffcbb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gdgbg *CT_ExternalSheetDataSet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_baaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	for _, _eafcd := range _gdgbg.SheetData {
		e.EncodeElement(_eafcd, _baaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_CellXfs() *CT_CellXfs { _egdf := &CT_CellXfs{}; return _egdf }
func (_ffffc *CT_SmartTagTypes) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _ffffc.SmartTagType != nil {
		_cagecd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003as\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}}
		for _, _cbfgb := range _ffffc.SmartTagType {
			e.EncodeElement(_cbfgb, _cagecd)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bacead *CT_RangePr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gegg := range start.Attr {
		if _gegg.Name.Local == "\u0061u\u0074\u006f\u0053\u0074\u0061\u0072t" {
			_gcbace, _dgcba := _f.ParseBool(_gegg.Value)
			if _dgcba != nil {
				return _dgcba
			}
			_bacead.AutoStartAttr = &_gcbace
			continue
		}
		if _gegg.Name.Local == "\u0061u\u0074\u006f\u0045\u006e\u0064" {
			_cadad, _fdcb := _f.ParseBool(_gegg.Value)
			if _fdcb != nil {
				return _fdcb
			}
			_bacead.AutoEndAttr = &_cadad
			continue
		}
		if _gegg.Name.Local == "\u0067r\u006f\u0075\u0070\u0042\u0079" {
			_bacead.GroupByAttr.UnmarshalXMLAttr(_gegg)
			continue
		}
		if _gegg.Name.Local == "\u0073\u0074\u0061\u0072\u0074\u004e\u0075\u006d" {
			_cgcac, _gegge := _f.ParseFloat(_gegg.Value, 64)
			if _gegge != nil {
				return _gegge
			}
			_bacead.StartNumAttr = &_cgcac
			continue
		}
		if _gegg.Name.Local == "\u0065\u006e\u0064\u004e\u0075\u006d" {
			_bfefc, _agaed := _f.ParseFloat(_gegg.Value, 64)
			if _agaed != nil {
				return _agaed
			}
			_bacead.EndNumAttr = &_bfefc
			continue
		}
		if _gegg.Name.Local == "\u0073t\u0061\u0072\u0074\u0044\u0061\u0074e" {
			_edfce, _dbfde := ParseStdlibTime(_gegg.Value)
			if _dbfde != nil {
				return _dbfde
			}
			_bacead.StartDateAttr = &_edfce
			continue
		}
		if _gegg.Name.Local == "\u0065n\u0064\u0044\u0061\u0074\u0065" {
			_ecbag, _eeage := ParseStdlibTime(_gegg.Value)
			if _eeage != nil {
				return _eeage
			}
			_bacead.EndDateAttr = &_ecbag
			continue
		}
		if _gegg.Name.Local == "\u0067\u0072\u006f\u0075\u0070\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_cdbgc, _dcbdg := _f.ParseFloat(_gegg.Value, 64)
			if _dcbdg != nil {
				return _dcbdg
			}
			_bacead.GroupIntervalAttr = &_cdbgc
			continue
		}
	}
	for {
		_bgcg, _dfeeg := d.Token()
		if _dfeeg != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072\u003a\u0020%\u0073", _dfeeg)
		}
		if _aeega, _agaeg := _bgcg.(_a.EndElement); _agaeg && _aeega.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_CacheHierarchy and its children
func (_gbcb *CT_CacheHierarchy) Validate() error {
	return _gbcb.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079")
}

// ValidateWithPath validates the CT_PatternFill and its children, prefixing error messages with path
func (_daagg *CT_PatternFill) ValidateWithPath(path string) error {
	if _bdcfg := _daagg.PatternTypeAttr.ValidateWithPath(path + "\u002f\u0050a\u0074\u0074\u0065r\u006e\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _bdcfg != nil {
		return _bdcfg
	}
	if _daagg.FgColor != nil {
		if _deabf := _daagg.FgColor.ValidateWithPath(path + "\u002f\u0046\u0067\u0043\u006f\u006c\u006f\u0072"); _deabf != nil {
			return _deabf
		}
	}
	if _daagg.BgColor != nil {
		if _dfbge := _daagg.BgColor.ValidateWithPath(path + "\u002f\u0042\u0067\u0043\u006f\u006c\u006f\u0072"); _dfbge != nil {
			return _dfbge
		}
	}
	return nil
}
func (_degbb ST_ExternalConnectionType) String() string {
	switch _degbb {
	case 0:
		return ""
	case 1:
		return "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case 2:
		return "\u0074\u0065\u0078\u0074"
	case 3:
		return "\u004d\u0044\u0059"
	case 4:
		return "\u0044\u004d\u0059"
	case 5:
		return "\u0059\u004d\u0044"
	case 6:
		return "\u004d\u0059\u0044"
	case 7:
		return "\u0044\u0059\u004d"
	case 8:
		return "\u0059\u0044\u004d"
	case 9:
		return "\u0073\u006b\u0069\u0070"
	case 10:
		return "\u0045\u004d\u0044"
	}
	return ""
}

// Validate validates the CT_MetadataTypes and its children
func (_adbec *CT_MetadataTypes) Validate() error {
	return _adbec.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073")
}

// ValidateWithPath validates the CT_PivotAreaReferences and its children, prefixing error messages with path
func (_bcfde *CT_PivotAreaReferences) ValidateWithPath(path string) error {
	for _gfeca, _ecgeea := range _bcfde.Reference {
		if _bceba := _ecgeea.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u005b\u0025\u0064\u005d", path, _gfeca)); _bceba != nil {
			return _bceba
		}
	}
	return nil
}
func NewCT_Index() *CT_Index { _cadac := &CT_Index{}; return _cadac }
func (_bfbg *CT_CellStyles) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eafgc := range start.Attr {
		if _eafgc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gcadg, _beeg := _f.ParseUint(_eafgc.Value, 10, 32)
			if _beeg != nil {
				return _beeg
			}
			_dfgd := uint32(_gcadg)
			_bfbg.CountAttr = &_dfgd
			continue
		}
	}
_degg:
	for {
		_gcba, _agcb := d.Token()
		if _agcb != nil {
			return _agcb
		}
		switch _aabb := _gcba.(type) {
		case _a.StartElement:
			switch _aabb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0053\u0074\u0079\u006ce"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0053\u0074\u0079\u006ce"}:
				_aggb := NewCT_CellStyle()
				if _gbg := d.DecodeElement(_aggb, &_aabb); _gbg != nil {
					return _gbg
				}
				_bfbg.CellStyle = append(_bfbg.CellStyle, _aggb)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043e\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073 \u0025\u0076", _aabb.Name)
				if _adgg := d.Skip(); _adgg != nil {
					return _adgg
				}
			}
		case _a.EndElement:
			break _degg
		case _a.CharData:
		}
	}
	return nil
}
func (_babb *CT_ChartsheetViews) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_dabcb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _gadfd := range _babb.SheetView {
		e.EncodeElement(_gadfd, _dabcb)
	}
	if _babb.ExtLst != nil {
		_cggc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_babb.ExtLst, _cggc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type Connections struct{ CT_Connections }
type ST_HorizontalAlignment byte

func NewCT_Format() *CT_Format {
	_aeabab := &CT_Format{}
	_aeabab.PivotArea = NewCT_PivotArea()
	return _aeabab
}

// Validate validates the CT_CacheHierarchies and its children
func (_bdbg *CT_CacheHierarchies) Validate() error {
	return _bdbg.ValidateWithPath("\u0043\u0054\u005f\u0043ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_Tables and its children, prefixing error messages with path
func (_gggea *CT_Tables) ValidateWithPath(path string) error {
	for _cgdfa, _gdgcac := range _gggea.M {
		if _ebdeb := _gdgcac.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _cgdfa)); _ebdeb != nil {
			return _ebdeb
		}
	}
	for _fcgff, _fabff := range _gggea.S {
		if _ecada := _fabff.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _fcgff)); _ecada != nil {
			return _ecada
		}
	}
	for _fdeged, _gddfb := range _gggea.X {
		if _ccdcfd := _gddfb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _fdeged)); _ccdcfd != nil {
			return _ccdcfd
		}
	}
	return nil
}
func (_gcgc *CT_Missing) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ddefg := range start.Attr {
		if _ddefg.Name.Local == "\u0066\u0063" {
			_cbbacf, _dadeb := _ddefg.Value, error(nil)
			if _dadeb != nil {
				return _dadeb
			}
			_gcgc.FcAttr = &_cbbacf
			continue
		}
		if _ddefg.Name.Local == "\u0066" {
			_ebgfff, _fddcdc := _f.ParseBool(_ddefg.Value)
			if _fddcdc != nil {
				return _fddcdc
			}
			_gcgc.FAttr = &_ebgfff
			continue
		}
		if _ddefg.Name.Local == "\u0063" {
			_gedbe, _bdgaa := _ddefg.Value, error(nil)
			if _bdgaa != nil {
				return _bdgaa
			}
			_gcgc.CAttr = &_gedbe
			continue
		}
		if _ddefg.Name.Local == "\u0063\u0070" {
			_gedc, _bbefg := _f.ParseUint(_ddefg.Value, 10, 32)
			if _bbefg != nil {
				return _bbefg
			}
			_gacea := uint32(_gedc)
			_gcgc.CpAttr = &_gacea
			continue
		}
		if _ddefg.Name.Local == "\u0069\u006e" {
			_cadfc, _fagbf := _f.ParseUint(_ddefg.Value, 10, 32)
			if _fagbf != nil {
				return _fagbf
			}
			_fddce := uint32(_cadfc)
			_gcgc.InAttr = &_fddce
			continue
		}
		if _ddefg.Name.Local == "\u0062\u0063" {
			_dfecg, _bgffc := _ddefg.Value, error(nil)
			if _bgffc != nil {
				return _bgffc
			}
			_gcgc.BcAttr = &_dfecg
			continue
		}
		if _ddefg.Name.Local == "\u0075" {
			_dcgdc, _fcbee := _f.ParseBool(_ddefg.Value)
			if _fcbee != nil {
				return _fcbee
			}
			_gcgc.UAttr = &_dcgdc
			continue
		}
		if _ddefg.Name.Local == "\u0069" {
			_fffeb, _beebgf := _f.ParseBool(_ddefg.Value)
			if _beebgf != nil {
				return _beebgf
			}
			_gcgc.IAttr = &_fffeb
			continue
		}
		if _ddefg.Name.Local == "\u0075\u006e" {
			_daebe, _cadcb := _f.ParseBool(_ddefg.Value)
			if _cadcb != nil {
				return _cadcb
			}
			_gcgc.UnAttr = &_daebe
			continue
		}
		if _ddefg.Name.Local == "\u0073\u0074" {
			_ebaga, _ccfb := _f.ParseBool(_ddefg.Value)
			if _ccfb != nil {
				return _ccfb
			}
			_gcgc.StAttr = &_ebaga
			continue
		}
		if _ddefg.Name.Local == "\u0062" {
			_cgafa, _eaeac := _f.ParseBool(_ddefg.Value)
			if _eaeac != nil {
				return _eaeac
			}
			_gcgc.BAttr = &_cgafa
			continue
		}
	}
_ageaa:
	for {
		_abfdg, _edafe := d.Token()
		if _edafe != nil {
			return _edafe
		}
		switch _fgced := _abfdg.(type) {
		case _a.StartElement:
			switch _fgced.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_gfagd := NewCT_Tuples()
				if _gbgga := d.DecodeElement(_gfagd, &_fgced); _gbgga != nil {
					return _gbgga
				}
				_gcgc.Tpls = append(_gcgc.Tpls, _gfagd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_fcfcd := NewCT_X()
				if _beba := d.DecodeElement(_fcfcd, &_fgced); _beba != nil {
					return _beba
				}
				_gcgc.X = append(_gcgc.X, _fcfcd)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0025\u0076", _fgced.Name)
				if _cdeeg := d.Skip(); _cdeeg != nil {
					return _cdeeg
				}
			}
		case _a.EndElement:
			break _ageaa
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_DateGroupItem() *CT_DateGroupItem {
	_dede := &CT_DateGroupItem{}
	_dede.DateTimeGroupingAttr = ST_DateTimeGrouping(1)
	return _dede
}
func (_geefge *ST_DdeValueType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_geefge = 0
	case "\u006e\u0069\u006c":
		*_geefge = 1
	case "\u0062":
		*_geefge = 2
	case "\u006e":
		*_geefge = 3
	case "\u0065":
		*_geefge = 4
	case "\u0073\u0074\u0072":
		*_geefge = 5
	}
	return nil
}

type ST_Objects byte

func (_debgd *CT_DynamicFilter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_debgd.TypeAttr = ST_DynamicFilterType(1)
	for _, _ecbcb := range start.Attr {
		if _ecbcb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_debgd.TypeAttr.UnmarshalXMLAttr(_ecbcb)
			continue
		}
		if _ecbcb.Name.Local == "\u0076\u0061\u006c" {
			_cgbge, _debdb := _f.ParseFloat(_ecbcb.Value, 64)
			if _debdb != nil {
				return _debdb
			}
			_debgd.ValAttr = &_cgbge
			continue
		}
		if _ecbcb.Name.Local == "\u0076\u0061\u006c\u0049\u0073\u006f" {
			_eacga, _ffdff := ParseStdlibTime(_ecbcb.Value)
			if _ffdff != nil {
				return _ffdff
			}
			_debgd.ValIsoAttr = &_eacga
			continue
		}
		if _ecbcb.Name.Local == "\u006d\u0061\u0078\u0056\u0061\u006c" {
			_aaabe, _dedbf := _f.ParseFloat(_ecbcb.Value, 64)
			if _dedbf != nil {
				return _dedbf
			}
			_debgd.MaxValAttr = &_aaabe
			continue
		}
		if _ecbcb.Name.Local == "\u006da\u0078\u0056\u0061\u006c\u0049\u0073o" {
			_fbedg, _bgad := ParseStdlibTime(_ecbcb.Value)
			if _bgad != nil {
				return _bgad
			}
			_debgd.MaxValIsoAttr = &_fbedg
			continue
		}
	}
	for {
		_ebce, _fgcba := d.Token()
		if _fgcba != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0079\u006e\u0061m\u0069c\u0046\u0069\u006c\u0074\u0065\u0072\u003a \u0025\u0073", _fgcba)
		}
		if _eeed, _ceecf := _ebce.(_a.EndElement); _ceecf && _eeed.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cfacc ST_CellType) Validate() error { return _cfacc.ValidateWithPath("") }
func (_dceec *CT_LegacyDrawing) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _dceec.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_SheetViewTypeUnset            ST_SheetViewType = 0
	ST_SheetViewTypeNormal           ST_SheetViewType = 1
	ST_SheetViewTypePageBreakPreview ST_SheetViewType = 2
	ST_SheetViewTypePageLayout       ST_SheetViewType = 3
)

func (_dbggee *ST_DynamicFilterType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dbggee = 0
	case "\u006e\u0075\u006c\u006c":
		*_dbggee = 1
	case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_dbggee = 2
	case "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_dbggee = 3
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_dbggee = 4
	case "\u0074\u006f\u0064a\u0079":
		*_dbggee = 5
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_dbggee = 6
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_dbggee = 7
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_dbggee = 8
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_dbggee = 9
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_dbggee = 10
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_dbggee = 11
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_dbggee = 12
	case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_dbggee = 13
	case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_dbggee = 14
	case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_dbggee = 15
	case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
		*_dbggee = 16
	case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
		*_dbggee = 17
	case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
		*_dbggee = 18
	case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
		*_dbggee = 19
	case "\u0051\u0031":
		*_dbggee = 20
	case "\u0051\u0032":
		*_dbggee = 21
	case "\u0051\u0033":
		*_dbggee = 22
	case "\u0051\u0034":
		*_dbggee = 23
	case "\u004d\u0031":
		*_dbggee = 24
	case "\u004d\u0032":
		*_dbggee = 25
	case "\u004d\u0033":
		*_dbggee = 26
	case "\u004d\u0034":
		*_dbggee = 27
	case "\u004d\u0035":
		*_dbggee = 28
	case "\u004d\u0036":
		*_dbggee = 29
	case "\u004d\u0037":
		*_dbggee = 30
	case "\u004d\u0038":
		*_dbggee = 31
	case "\u004d\u0039":
		*_dbggee = 32
	case "\u004d\u0031\u0030":
		*_dbggee = 33
	case "\u004d\u0031\u0031":
		*_dbggee = 34
	case "\u004d\u0031\u0032":
		*_dbggee = 35
	}
	return nil
}
func (_gefgc *CT_ExternalLink) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _gefgc.Choice != nil {
		_gefgc.Choice.MarshalXML(e, _a.StartElement{})
	}
	if _gefgc.ExtLst != nil {
		_baeaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gefgc.ExtLst, _baeaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionHeader and its children, prefixing error messages with path
func (_begca *CT_RevisionHeader) ValidateWithPath(path string) error {
	if !_ae.ST_GuidPatternRe.MatchString(_begca.GuidAttr) {
		return _fc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ae.ST_GuidPatternRe, _begca.GuidAttr)
	}
	if _eafag := _begca.SheetIdMap.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"); _eafag != nil {
		return _eafag
	}
	if _begca.ReviewedList != nil {
		if _bbcgd := _begca.ReviewedList.ValidateWithPath(path + "\u002f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"); _bbcgd != nil {
			return _bbcgd
		}
	}
	if _begca.ExtLst != nil {
		if _dabaf := _begca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dabaf != nil {
			return _dabaf
		}
	}
	return nil
}
func NewCT_PageMargins() *CT_PageMargins { _acbec := &CT_PageMargins{}; return _acbec }

type CT_FontName struct {

	// String Value
	ValAttr string
}

func (_gecfb ST_CellFormulaType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cdgge := _a.Attr{}
	_cdgge.Name = name
	switch _gecfb {
	case ST_CellFormulaTypeUnset:
		_cdgge.Value = ""
	case ST_CellFormulaTypeNormal:
		_cdgge.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_CellFormulaTypeArray:
		_cdgge.Value = "\u0061\u0072\u0072a\u0079"
	case ST_CellFormulaTypeDataTable:
		_cdgge.Value = "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce"
	case ST_CellFormulaTypeShared:
		_cdgge.Value = "\u0073\u0068\u0061\u0072\u0065\u0064"
	}
	return _cdgge, nil
}

// Validate validates the CT_ExternalDefinedNames and its children
func (_ceaeg *CT_ExternalDefinedNames) Validate() error {
	return _ceaeg.ValidateWithPath("\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073")
}

type CT_MeasureGroups struct {

	// Measure Group Count
	CountAttr *uint32

	// OLAP Measure Group
	MeasureGroup []*CT_MeasureGroup
}

func (_bgdbf *CT_Dimensions) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cggfb := range start.Attr {
		if _cggfb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fabdb, _fefagb := _f.ParseUint(_cggfb.Value, 10, 32)
			if _fefagb != nil {
				return _fefagb
			}
			_cdbdc := uint32(_fabdb)
			_bgdbf.CountAttr = &_cdbdc
			continue
		}
	}
_fdcfg:
	for {
		_agcea, _fggb := d.Token()
		if _fggb != nil {
			return _fggb
		}
		switch _fdcfgc := _agcea.(type) {
		case _a.StartElement:
			switch _fdcfgc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_ebdd := NewCT_PivotDimension()
				if _adfa := d.DecodeElement(_ebdd, &_fdcfgc); _adfa != nil {
					return _adfa
				}
				_bgdbf.Dimension = append(_bgdbf.Dimension, _ebdd)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044i\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073 \u0025\u0076", _fdcfgc.Name)
				if _bfdef := d.Skip(); _bfdef != nil {
					return _bfdef
				}
			}
		case _a.EndElement:
			break _fdcfg
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_String and its children, prefixing error messages with path
func (_gaacgb *CT_String) ValidateWithPath(path string) error {
	for _bdabe, _bcbba := range _gaacgb.Tpls {
		if _gadbf := _bcbba.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _bdabe)); _gadbf != nil {
			return _gadbf
		}
	}
	for _ecgde, _daada := range _gaacgb.X {
		if _fbffdd := _daada.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _ecgde)); _fbffdd != nil {
			return _fbffdd
		}
	}
	return nil
}
func (_bfecd ST_Axis) String() string {
	switch _bfecd {
	case 0:
		return ""
	case 1:
		return "\u0061x\u0069\u0073\u0052\u006f\u0077"
	case 2:
		return "\u0061x\u0069\u0073\u0043\u006f\u006c"
	case 3:
		return "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065"
	case 4:
		return "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return ""
}

// Validate validates the Workbook and its children
func (_bbca *Workbook) Validate() error {
	return _bbca.ValidateWithPath("\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b")
}
func (_ebcg *CT_CellWatches) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_fgagf:
	for {
		_aacg, _eggf := d.Token()
		if _eggf != nil {
			return _eggf
		}
		switch _bbab := _aacg.(type) {
		case _a.StartElement:
			switch _bbab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0057\u0061\u0074\u0063h"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0057\u0061\u0074\u0063h"}:
				_gfdde := NewCT_CellWatch()
				if _accac := d.DecodeElement(_gfdde, &_bbab); _accac != nil {
					return _accac
				}
				_ebcg.CellWatch = append(_ebcg.CellWatch, _gfdde)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061\u0074c\u0068e\u0073\u0020\u0025\u0076", _bbab.Name)
				if _agdef := d.Skip(); _agdef != nil {
					return _agdef
				}
			}
		case _a.EndElement:
			break _fgagf
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Field and its children
func (_cgdf *CT_Field) Validate() error {
	return _cgdf.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064")
}

// ValidateWithPath validates the CT_SmartTags and its children, prefixing error messages with path
func (_decbf *CT_SmartTags) ValidateWithPath(path string) error {
	for _addgd, _gafecg := range _decbf.CellSmartTags {
		if _fbecb := _gafecg.ValidateWithPath(_fc.Sprintf("%\u0073/\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072t\u0054\u0061\u0067\u0073[%\u0064\u005d", path, _addgd)); _fbecb != nil {
			return _fbecb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RgbColor and its children, prefixing error messages with path
func (_fcefbc *CT_RgbColor) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Schema and its children
func (_adaed *CT_Schema) Validate() error {
	return _adaed.ValidateWithPath("\u0043T\u005f\u0053\u0063\u0068\u0065\u006da")
}

// Validate validates the CT_TableColumn and its children
func (_acbda *CT_TableColumn) Validate() error {
	return _acbda.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e")
}
func NewCT_FileVersion() *CT_FileVersion { _agfb := &CT_FileVersion{}; return _agfb }
func (_dccef *CT_CustomChartsheetView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _dccef.GuidAttr)})
	if _dccef.ScaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_dccef.ScaleAttr)})
	}
	if _dccef.StateAttr != ST_SheetStateUnset {
		_caggf, _adfb := _dccef.StateAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _adfb != nil {
			return _adfb
		}
		start.Attr = append(start.Attr, _caggf)
	}
	if _dccef.ZoomToFitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_dccef.ZoomToFitAttr))})
	}
	e.EncodeToken(start)
	if _dccef.PageMargins != nil {
		_fcadb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_dccef.PageMargins, _fcadb)
	}
	if _dccef.PageSetup != nil {
		_dgeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_dccef.PageSetup, _dgeg)
	}
	if _dccef.HeaderFooter != nil {
		_bccce := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_dccef.HeaderFooter, _bccce)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_acfdae *QueryTable) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_acfdae.CT_QueryTable = *NewCT_QueryTable()
	for _, _eccbgc := range start.Attr {
		if _eccbgc.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068" {
			_fbabcb, _cfac := _f.ParseBool(_eccbgc.Value)
			if _cfac != nil {
				return _cfac
			}
			_acfdae.AdjustColumnWidthAttr = &_fbabcb
			continue
		}
		if _eccbgc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bdbcda, _ffcfda := _eccbgc.Value, error(nil)
			if _ffcfda != nil {
				return _ffcfda
			}
			_acfdae.NameAttr = _bdbcda
			continue
		}
		if _eccbgc.Name.Local == "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065" {
			_eafge, _cbcggd := _f.ParseBool(_eccbgc.Value)
			if _cbcggd != nil {
				return _cbcggd
			}
			_acfdae.IntermediateAttr = &_eafge
			continue
		}
		if _eccbgc.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_dbgce, _ddbbgf := _f.ParseBool(_eccbgc.Value)
			if _ddbbgf != nil {
				return _ddbbgf
			}
			_acfdae.RowNumbersAttr = &_dbgce
			continue
		}
		if _eccbgc.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_debgf, _cbgbbg := _f.ParseUint(_eccbgc.Value, 10, 32)
			if _cbgbbg != nil {
				return _cbgbbg
			}
			_acfdae.ConnectionIdAttr = uint32(_debgf)
			continue
		}
		if _eccbgc.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_bcgdda, _cdbfe := _f.ParseBool(_eccbgc.Value)
			if _cdbfe != nil {
				return _cdbfe
			}
			_acfdae.BackgroundRefreshAttr = &_bcgdda
			continue
		}
		if _eccbgc.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_agcfcb, _gfaba := _f.ParseBool(_eccbgc.Value)
			if _gfaba != nil {
				return _gfaba
			}
			_acfdae.RefreshOnLoadAttr = &_agcfcb
			continue
		}
		if _eccbgc.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_aadaec, _fgggcb := _f.ParseBool(_eccbgc.Value)
			if _fgggcb != nil {
				return _fgggcb
			}
			_acfdae.FillFormulasAttr = &_aadaec
			continue
		}
		if _eccbgc.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bcbab, _bbecc := _f.ParseBool(_eccbgc.Value)
			if _bbecc != nil {
				return _bbecc
			}
			_acfdae.ApplyNumberFormatsAttr = &_bcbab
			continue
		}
		if _eccbgc.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ageeb, _cbacb := _f.ParseBool(_eccbgc.Value)
			if _cbacb != nil {
				return _cbacb
			}
			_acfdae.ApplyFontFormatsAttr = &_ageeb
			continue
		}
		if _eccbgc.Name.Local == "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068" {
			_fecgb, _badab := _f.ParseBool(_eccbgc.Value)
			if _badab != nil {
				return _badab
			}
			_acfdae.FirstBackgroundRefreshAttr = &_fecgb
			continue
		}
		if _eccbgc.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_fgbggd, _dgecf := _f.ParseUint(_eccbgc.Value, 10, 32)
			if _dgecf != nil {
				return _dgecf
			}
			_bbeecg := uint32(_fgbggd)
			_acfdae.AutoFormatIdAttr = &_bbeecg
			continue
		}
		if _eccbgc.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bccag, _feaae := _f.ParseBool(_eccbgc.Value)
			if _feaae != nil {
				return _feaae
			}
			_acfdae.ApplyAlignmentFormatsAttr = &_bccag
			continue
		}
		if _eccbgc.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_bbbee, _dcaec := _f.ParseBool(_eccbgc.Value)
			if _dcaec != nil {
				return _dcaec
			}
			_acfdae.DisableRefreshAttr = &_bbbee
			continue
		}
		if _eccbgc.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_edafa, _cddec := _f.ParseBool(_eccbgc.Value)
			if _cddec != nil {
				return _cddec
			}
			_acfdae.ApplyBorderFormatsAttr = &_edafa
			continue
		}
		if _eccbgc.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_eaaacg, _egdge := _f.ParseBool(_eccbgc.Value)
			if _egdge != nil {
				return _egdge
			}
			_acfdae.PreserveFormattingAttr = &_eaaacg
			continue
		}
		if _eccbgc.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dbgeec, _dagdeb := _f.ParseBool(_eccbgc.Value)
			if _dagdeb != nil {
				return _dagdeb
			}
			_acfdae.ApplyPatternFormatsAttr = &_dbgeec
			continue
		}
		if _eccbgc.Name.Local == "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065" {
			_acfdae.GrowShrinkTypeAttr.UnmarshalXMLAttr(_eccbgc)
			continue
		}
		if _eccbgc.Name.Local == "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074" {
			_bfged, _ccebc := _f.ParseBool(_eccbgc.Value)
			if _ccebc != nil {
				return _ccebc
			}
			_acfdae.DisableEditAttr = &_bfged
			continue
		}
		if _eccbgc.Name.Local == "\u0068e\u0061\u0064\u0065\u0072\u0073" {
			_cdcab, _bgbbb := _f.ParseBool(_eccbgc.Value)
			if _bgbbb != nil {
				return _bgbbb
			}
			_acfdae.HeadersAttr = &_cdcab
			continue
		}
		if _eccbgc.Name.Local == "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065" {
			_abadg, _faafd := _f.ParseBool(_eccbgc.Value)
			if _faafd != nil {
				return _faafd
			}
			_acfdae.RemoveDataOnSaveAttr = &_abadg
			continue
		}
		if _eccbgc.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ddeeee, _eegbc := _f.ParseBool(_eccbgc.Value)
			if _eegbc != nil {
				return _eegbc
			}
			_acfdae.ApplyWidthHeightFormatsAttr = &_ddeeee
			continue
		}
	}
_edffb:
	for {
		_fegede, _fgcgb := d.Token()
		if _fgcgb != nil {
			return _fgcgb
		}
		switch _abdef := _fegede.(type) {
		case _a.StartElement:
			switch _abdef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}:
				_acfdae.QueryTableRefresh = NewCT_QueryTableRefresh()
				if _afegee := d.DecodeElement(_acfdae.QueryTableRefresh, &_abdef); _afegee != nil {
					return _afegee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_acfdae.ExtLst = NewCT_ExtensionList()
				if _dgfcf := d.DecodeElement(_acfdae.ExtLst, &_abdef); _dgfcf != nil {
					return _dgfcf
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0051\u0075\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _abdef.Name)
				if _acdff := d.Skip(); _acdff != nil {
					return _acdff
				}
			}
		case _a.EndElement:
			break _edffb
		case _a.CharData:
		}
	}
	return nil
}

type ST_FilterOperator byte
type CT_MdxKPI struct {

	// Member Unique Name Index
	NAttr uint32

	// KPI Index
	NpAttr uint32

	// KPI Property
	PAttr ST_MdxKPIProperty
}

func (_eccecg *CT_XStringElement) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fc.Sprintf("\u0025\u0076", _eccecg.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fccdg ST_OleUpdate) ValidateWithPath(path string) error {
	switch _fccdg {
	case 0, 1, 2:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fccdg))
	}
	return nil
}

// Validate validates the CT_DataValidation and its children
func (_cfafa *CT_DataValidation) Validate() error {
	return _cfafa.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_MeasureDimensionMaps and its children, prefixing error messages with path
func (_daaca *CT_MeasureDimensionMaps) ValidateWithPath(path string) error {
	for _gdefe, _gcbadg := range _daaca.Map {
		if _acfadf := _gcbadg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _gdefe)); _acfadf != nil {
			return _acfadf
		}
	}
	return nil
}
func (_dcfdd ST_PageOrder) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_aeced := _a.Attr{}
	_aeced.Name = name
	switch _dcfdd {
	case ST_PageOrderUnset:
		_aeced.Value = ""
	case ST_PageOrderDownThenOver:
		_aeced.Value = "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072"
	case ST_PageOrderOverThenDown:
		_aeced.Value = "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"
	}
	return _aeced, nil
}
func (_ggadd ST_Orientation) String() string {
	switch _ggadd {
	case 0:
		return ""
	case 1:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 2:
		return "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074"
	case 3:
		return "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e"
	}
	return ""
}
func (_bedda ST_DvAspect) ValidateWithPath(path string) error {
	switch _bedda {
	case 0, 1, 2:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bedda))
	}
	return nil
}

// Validate validates the CT_RevisionHeaders and its children
func (_gaabaa *CT_RevisionHeaders) Validate() error {
	return _gaabaa.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0048e\u0061\u0064\u0065\u0072\u0073")
}
func (_effad ST_Orientation) ValidateWithPath(path string) error {
	switch _effad {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_effad))
	}
	return nil
}

type ST_PaneState byte
type CT_String struct {

	// Value
	VAttr string

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Item Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// Background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Member Property Index
	X []*CT_X
}

func (_abfdd ST_UpdateLinks) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dabdee := _a.Attr{}
	_dabdee.Name = name
	switch _abfdd {
	case ST_UpdateLinksUnset:
		_dabdee.Value = ""
	case ST_UpdateLinksUserSet:
		_dabdee.Value = "\u0075s\u0065\u0072\u0053\u0065\u0074"
	case ST_UpdateLinksNever:
		_dabdee.Value = "\u006e\u0065\u0076e\u0072"
	case ST_UpdateLinksAlways:
		_dabdee.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return _dabdee, nil
}

type CT_OleLink struct {
	IdAttr string

	// Object Link Identifier
	ProgIdAttr string

	// Object Link Items
	OleItems *CT_OleItems
}

func (_agbbe *CT_Dialogsheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _agbbe.SheetPr != nil {
		_abebe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_agbbe.SheetPr, _abebe)
	}
	if _agbbe.SheetViews != nil {
		_abeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_agbbe.SheetViews, _abeg)
	}
	if _agbbe.SheetFormatPr != nil {
		_fadfa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_agbbe.SheetFormatPr, _fadfa)
	}
	if _agbbe.SheetProtection != nil {
		_ecaf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_agbbe.SheetProtection, _ecaf)
	}
	if _agbbe.CustomSheetViews != nil {
		_gegf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_agbbe.CustomSheetViews, _gegf)
	}
	if _agbbe.PrintOptions != nil {
		_dgad := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_agbbe.PrintOptions, _dgad)
	}
	if _agbbe.PageMargins != nil {
		_eebbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_agbbe.PageMargins, _eebbc)
	}
	if _agbbe.PageSetup != nil {
		_bfbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_agbbe.PageSetup, _bfbd)
	}
	if _agbbe.HeaderFooter != nil {
		_daca := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_agbbe.HeaderFooter, _daca)
	}
	if _agbbe.Drawing != nil {
		_abcee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_agbbe.Drawing, _abcee)
	}
	if _agbbe.LegacyDrawing != nil {
		_debcd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_agbbe.LegacyDrawing, _debcd)
	}
	if _agbbe.LegacyDrawingHF != nil {
		_gcec := _a.StartElement{Name: _a.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_agbbe.LegacyDrawingHF, _gcec)
	}
	if _agbbe.DrawingHF != nil {
		_ggagb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_agbbe.DrawingHF, _ggagb)
	}
	if _agbbe.OleObjects != nil {
		_ccgbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_agbbe.OleObjects, _ccgbc)
	}
	if _agbbe.Controls != nil {
		_eaabbb := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_agbbe.Controls, _eaabbb)
	}
	if _agbbe.ExtLst != nil {
		_gccaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_agbbe.ExtLst, _gccaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_UpdateLinks byte

const (
	ST_TargetScreenSizeUnset     ST_TargetScreenSize = 0
	ST_TargetScreenSize544x376   ST_TargetScreenSize = 1
	ST_TargetScreenSize640x480   ST_TargetScreenSize = 2
	ST_TargetScreenSize720x512   ST_TargetScreenSize = 3
	ST_TargetScreenSize800x600   ST_TargetScreenSize = 4
	ST_TargetScreenSize1024x768  ST_TargetScreenSize = 5
	ST_TargetScreenSize1152x882  ST_TargetScreenSize = 6
	ST_TargetScreenSize1152x900  ST_TargetScreenSize = 7
	ST_TargetScreenSize1280x1024 ST_TargetScreenSize = 8
	ST_TargetScreenSize1600x1200 ST_TargetScreenSize = 9
	ST_TargetScreenSize1800x1440 ST_TargetScreenSize = 10
	ST_TargetScreenSize1920x1200 ST_TargetScreenSize = 11
)
const (
	ST_DataValidationOperatorUnset              ST_DataValidationOperator = 0
	ST_DataValidationOperatorBetween            ST_DataValidationOperator = 1
	ST_DataValidationOperatorNotBetween         ST_DataValidationOperator = 2
	ST_DataValidationOperatorEqual              ST_DataValidationOperator = 3
	ST_DataValidationOperatorNotEqual           ST_DataValidationOperator = 4
	ST_DataValidationOperatorLessThan           ST_DataValidationOperator = 5
	ST_DataValidationOperatorLessThanOrEqual    ST_DataValidationOperator = 6
	ST_DataValidationOperatorGreaterThan        ST_DataValidationOperator = 7
	ST_DataValidationOperatorGreaterThanOrEqual ST_DataValidationOperator = 8
)

func (_adaa *CT_FontFamily) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", _adaa.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ffeed *ST_Qualifier) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ffeed = 0
	case "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
		*_ffeed = 1
	case "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
		*_ffeed = 2
	case "\u006e\u006f\u006e\u0065":
		*_ffeed = 3
	}
	return nil
}

// ValidateWithPath validates the CT_XStringElement and its children, prefixing error messages with path
func (_eggggb *CT_XStringElement) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Stylesheet and its children, prefixing error messages with path
func (_aaegd *CT_Stylesheet) ValidateWithPath(path string) error {
	if _aaegd.NumFmts != nil {
		if _fafgd := _aaegd.NumFmts.ValidateWithPath(path + "\u002f\u004e\u0075\u006d\u0046\u006d\u0074\u0073"); _fafgd != nil {
			return _fafgd
		}
	}
	if _aaegd.Fonts != nil {
		if _ccgca := _aaegd.Fonts.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0073"); _ccgca != nil {
			return _ccgca
		}
	}
	if _aaegd.Fills != nil {
		if _becdc := _aaegd.Fills.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0073"); _becdc != nil {
			return _becdc
		}
	}
	if _aaegd.Borders != nil {
		if _fegfd := _aaegd.Borders.ValidateWithPath(path + "\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u0073"); _fegfd != nil {
			return _fegfd
		}
	}
	if _aaegd.CellStyleXfs != nil {
		if _bdcbc := _aaegd.CellStyleXfs.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"); _bdcbc != nil {
			return _bdcbc
		}
	}
	if _aaegd.CellXfs != nil {
		if _bgbef := _aaegd.CellXfs.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0058\u0066\u0073"); _bgbef != nil {
			return _bgbef
		}
	}
	if _aaegd.CellStyles != nil {
		if _gaeda := _aaegd.CellStyles.ValidateWithPath(path + "/\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"); _gaeda != nil {
			return _gaeda
		}
	}
	if _aaegd.Dxfs != nil {
		if _fddba := _aaegd.Dxfs.ValidateWithPath(path + "\u002f\u0044\u0078f\u0073"); _fddba != nil {
			return _fddba
		}
	}
	if _aaegd.TableStyles != nil {
		if _dcced := _aaegd.TableStyles.ValidateWithPath(path + "\u002f\u0054\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"); _dcced != nil {
			return _dcced
		}
	}
	if _aaegd.Colors != nil {
		if _bgdfa := _aaegd.Colors.ValidateWithPath(path + "\u002fC\u006f\u006c\u006f\u0072\u0073"); _bgdfa != nil {
			return _bgdfa
		}
	}
	if _aaegd.ExtLst != nil {
		if _eeaae := _aaegd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eeaae != nil {
			return _eeaae
		}
	}
	return nil
}

// Validate validates the CT_FutureMetadataBlock and its children
func (_eagf *CT_FutureMetadataBlock) Validate() error {
	return _eagf.ValidateWithPath("\u0043\u0054\u005f\u0046ut\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006fc\u006b")
}
func (_fdgfa ST_Objects) Validate() error { return _fdgfa.ValidateWithPath("") }

const (
	ST_TableStyleTypeUnset                  ST_TableStyleType = 0
	ST_TableStyleTypeWholeTable             ST_TableStyleType = 1
	ST_TableStyleTypeHeaderRow              ST_TableStyleType = 2
	ST_TableStyleTypeTotalRow               ST_TableStyleType = 3
	ST_TableStyleTypeFirstColumn            ST_TableStyleType = 4
	ST_TableStyleTypeLastColumn             ST_TableStyleType = 5
	ST_TableStyleTypeFirstRowStripe         ST_TableStyleType = 6
	ST_TableStyleTypeSecondRowStripe        ST_TableStyleType = 7
	ST_TableStyleTypeFirstColumnStripe      ST_TableStyleType = 8
	ST_TableStyleTypeSecondColumnStripe     ST_TableStyleType = 9
	ST_TableStyleTypeFirstHeaderCell        ST_TableStyleType = 10
	ST_TableStyleTypeLastHeaderCell         ST_TableStyleType = 11
	ST_TableStyleTypeFirstTotalCell         ST_TableStyleType = 12
	ST_TableStyleTypeLastTotalCell          ST_TableStyleType = 13
	ST_TableStyleTypeFirstSubtotalColumn    ST_TableStyleType = 14
	ST_TableStyleTypeSecondSubtotalColumn   ST_TableStyleType = 15
	ST_TableStyleTypeThirdSubtotalColumn    ST_TableStyleType = 16
	ST_TableStyleTypeFirstSubtotalRow       ST_TableStyleType = 17
	ST_TableStyleTypeSecondSubtotalRow      ST_TableStyleType = 18
	ST_TableStyleTypeThirdSubtotalRow       ST_TableStyleType = 19
	ST_TableStyleTypeBlankRow               ST_TableStyleType = 20
	ST_TableStyleTypeFirstColumnSubheading  ST_TableStyleType = 21
	ST_TableStyleTypeSecondColumnSubheading ST_TableStyleType = 22
	ST_TableStyleTypeThirdColumnSubheading  ST_TableStyleType = 23
	ST_TableStyleTypeFirstRowSubheading     ST_TableStyleType = 24
	ST_TableStyleTypeSecondRowSubheading    ST_TableStyleType = 25
	ST_TableStyleTypeThirdRowSubheading     ST_TableStyleType = 26
	ST_TableStyleTypePageFieldLabels        ST_TableStyleType = 27
	ST_TableStyleTypePageFieldValues        ST_TableStyleType = 28
)

type CT_Consolidation struct {

	// Auto Page
	AutoPageAttr *bool

	// Page Item Values
	Pages *CT_Pages

	// Range Sets
	RangeSets *CT_RangeSets
}

// Validate validates the CT_RowFields and its children
func (_gbgde *CT_RowFields) Validate() error {
	return _gbgde.ValidateWithPath("\u0043\u0054\u005fR\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073")
}

// Validate validates the CT_PivotAreaReferences and its children
func (_deacd *CT_PivotAreaReferences) Validate() error {
	return _deacd.ValidateWithPath("\u0043\u0054\u005f\u0050iv\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073")
}

type ST_GradientType byte

func (_abccb *ST_ParameterType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_abccb = 0
	case "\u0070\u0072\u006f\u006d\u0070\u0074":
		*_abccb = 1
	case "\u0076\u0061\u006cu\u0065":
		*_abccb = 2
	case "\u0063\u0065\u006c\u006c":
		*_abccb = 3
	}
	return nil
}
func NewCT_CustomWorkbookView() *CT_CustomWorkbookView {
	_feec := &CT_CustomWorkbookView{}
	_feec.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _feec
}
func (_facc *CT_Comments) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_cbea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u0068\u006f\u0072\u0073"}}
	e.EncodeElement(_facc.Authors, _cbea)
	_aadgf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074"}}
	e.EncodeElement(_facc.CommentList, _aadgf)
	if _facc.ExtLst != nil {
		_dbgc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_facc.ExtLst, _dbgc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ggdbbg *ST_DataConsolidateFunction) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ggdbbg = 0
	case "\u0061v\u0065\u0072\u0061\u0067\u0065":
		*_ggdbbg = 1
	case "\u0063\u006f\u0075n\u0074":
		*_ggdbbg = 2
	case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
		*_ggdbbg = 3
	case "\u006d\u0061\u0078":
		*_ggdbbg = 4
	case "\u006d\u0069\u006e":
		*_ggdbbg = 5
	case "\u0070r\u006f\u0064\u0075\u0063\u0074":
		*_ggdbbg = 6
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_ggdbbg = 7
	case "\u0073t\u0064\u0044\u0065\u0076\u0070":
		*_ggdbbg = 8
	case "\u0073\u0075\u006d":
		*_ggdbbg = 9
	case "\u0076\u0061\u0072":
		*_ggdbbg = 10
	case "\u0076\u0061\u0072\u0070":
		*_ggdbbg = 11
	}
	return nil
}

// ValidateWithPath validates the CT_PrintOptions and its children, prefixing error messages with path
func (_fdeaa *CT_PrintOptions) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_CellSmartTagPr and its children
func (_gccg *CT_CellSmartTagPr) Validate() error {
	return _gccg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072")
}

// Validate validates the CT_FunctionGroups and its children
func (_edcbb *CT_FunctionGroups) Validate() error {
	return _edcbb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073")
}
func NewCT_SingleXmlCell() *CT_SingleXmlCell {
	_efbae := &CT_SingleXmlCell{}
	_efbae.XmlCellPr = NewCT_XmlCellPr()
	return _efbae
}
func (_befbc *ST_DataValidationErrorStyle) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_efgge, _gcfebb := d.Token()
	if _gcfebb != nil {
		return _gcfebb
	}
	if _fcbabe, _bfgcge := _efgge.(_a.EndElement); _bfgcge && _fcbabe.Name == start.Name {
		*_befbc = 1
		return nil
	}
	if _ccbce, _acgfaf := _efgge.(_a.CharData); !_acgfaf {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efgge)
	} else {
		switch string(_ccbce) {
		case "":
			*_befbc = 0
		case "\u0073\u0074\u006f\u0070":
			*_befbc = 1
		case "\u0077a\u0072\u006e\u0069\u006e\u0067":
			*_befbc = 2
		case "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
			*_befbc = 3
		}
	}
	_efgge, _gcfebb = d.Token()
	if _gcfebb != nil {
		return _gcfebb
	}
	if _egcea, _dbggf := _efgge.(_a.EndElement); _dbggf && _egcea.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efgge)
}
func (_caacfd *CT_DdeValue) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _caacfd.TAttr != ST_DdeValueTypeUnset {
		_cacbe, _babag := _caacfd.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _babag != nil {
			return _babag
		}
		start.Attr = append(start.Attr, _cacbe)
	}
	e.EncodeToken(start)
	_gdcad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0076\u0061\u006c"}}
	_fca.AddPreserveSpaceAttr(&_gdcad, _caacfd.Val)
	e.EncodeElement(_caacfd.Val, _gdcad)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_VerticalAlignmentUnset       ST_VerticalAlignment = 0
	ST_VerticalAlignmentTop         ST_VerticalAlignment = 1
	ST_VerticalAlignmentCenter      ST_VerticalAlignment = 2
	ST_VerticalAlignmentBottom      ST_VerticalAlignment = 3
	ST_VerticalAlignmentJustify     ST_VerticalAlignment = 4
	ST_VerticalAlignmentDistributed ST_VerticalAlignment = 5
)

func (_fccee *CT_IgnoredErrors) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_fddb:
	for {
		_cffbb, _dfdaf := d.Token()
		if _dfdaf != nil {
			return _dfdaf
		}
		switch _dged := _cffbb.(type) {
		case _a.StartElement:
			switch _dged.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}:
				_bgfeg := NewCT_IgnoredError()
				if _aggee := d.DecodeElement(_bgfeg, &_dged); _aggee != nil {
					return _aggee
				}
				_fccee.IgnoredError = append(_fccee.IgnoredError, _bgfeg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fccee.ExtLst = NewCT_ExtensionList()
				if _gefbc := d.DecodeElement(_fccee.ExtLst, &_dged); _gefbc != nil {
					return _gefbc
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073\u0020\u0025v", _dged.Name)
				if _afdab := d.Skip(); _afdab != nil {
					return _afdab
				}
			}
		case _a.EndElement:
			break _fddb
		case _a.CharData:
		}
	}
	return nil
}
func (_cddca ST_HorizontalAlignment) ValidateWithPath(path string) error {
	switch _cddca {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cddca))
	}
	return nil
}
func (_bgbbg *ST_BorderStyle) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cgeag, _ggfccg := d.Token()
	if _ggfccg != nil {
		return _ggfccg
	}
	if _feege, _gadedd := _cgeag.(_a.EndElement); _gadedd && _feege.Name == start.Name {
		*_bgbbg = 1
		return nil
	}
	if _dcedec, _gcbdac := _cgeag.(_a.CharData); !_gcbdac {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgeag)
	} else {
		switch string(_dcedec) {
		case "":
			*_bgbbg = 0
		case "\u006e\u006f\u006e\u0065":
			*_bgbbg = 1
		case "\u0074\u0068\u0069\u006e":
			*_bgbbg = 2
		case "\u006d\u0065\u0064\u0069\u0075\u006d":
			*_bgbbg = 3
		case "\u0064\u0061\u0073\u0068\u0065\u0064":
			*_bgbbg = 4
		case "\u0064\u006f\u0074\u0074\u0065\u0064":
			*_bgbbg = 5
		case "\u0074\u0068\u0069c\u006b":
			*_bgbbg = 6
		case "\u0064\u006f\u0075\u0062\u006c\u0065":
			*_bgbbg = 7
		case "\u0068\u0061\u0069\u0072":
			*_bgbbg = 8
		case "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064":
			*_bgbbg = 9
		case "\u0064a\u0073\u0068\u0044\u006f\u0074":
			*_bgbbg = 10
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_bgbbg = 11
		case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_bgbbg = 12
		case "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_bgbbg = 13
		case "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_bgbbg = 14
		}
	}
	_cgeag, _ggfccg = d.Token()
	if _ggfccg != nil {
		return _ggfccg
	}
	if _cabdge, _ffcbaa := _cgeag.(_a.EndElement); _ffcbaa && _cabdge.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgeag)
}
func NewCT_OleObject() *CT_OleObject { _fabfeag := &CT_OleObject{}; return _fabfeag }
func (_acagc *ST_MdxSetOrder) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_feaba, _dgafg := d.Token()
	if _dgafg != nil {
		return _dgafg
	}
	if _bfcae, _ecagcc := _feaba.(_a.EndElement); _ecagcc && _bfcae.Name == start.Name {
		*_acagc = 1
		return nil
	}
	if _caagf, _ddedd := _feaba.(_a.CharData); !_ddedd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _feaba)
	} else {
		switch string(_caagf) {
		case "":
			*_acagc = 0
		case "\u0075":
			*_acagc = 1
		case "\u0061":
			*_acagc = 2
		case "\u0064":
			*_acagc = 3
		case "\u0061\u0061":
			*_acagc = 4
		case "\u0061\u0064":
			*_acagc = 5
		case "\u006e\u0061":
			*_acagc = 6
		case "\u006e\u0064":
			*_acagc = 7
		}
	}
	_feaba, _dgafg = d.Token()
	if _dgafg != nil {
		return _dgafg
	}
	if _eggfb, _gbffe := _feaba.(_a.EndElement); _gbffe && _eggfb.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _feaba)
}
func NewCT_FilterColumn() *CT_FilterColumn { _facfb := &CT_FilterColumn{}; return _facfb }
func (_eegga *CT_TableStyle) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _eegga.NameAttr)})
	if _eegga.PivotAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0069\u0076o\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eegga.PivotAttr))})
	}
	if _eegga.TableAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061\u0062l\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_eegga.TableAttr))})
	}
	if _eegga.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_eegga.CountAttr)})
	}
	e.EncodeToken(start)
	if _eegga.TableStyleElement != nil {
		_dfffga := _a.StartElement{Name: _a.Name{Local: "m\u0061:\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074"}}
		for _, _cacaa := range _eegga.TableStyleElement {
			e.EncodeElement(_cacaa, _dfffga)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ffcff *CT_ColHierarchiesUsage) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bcfc := range start.Attr {
		if _bcfc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gcbd, _dbda := _f.ParseUint(_bcfc.Value, 10, 32)
			if _dbda != nil {
				return _dbda
			}
			_abde := uint32(_gcbd)
			_ffcff.CountAttr = &_abde
			continue
		}
	}
_ecdcd:
	for {
		_fbcgf, _aface := d.Token()
		if _aface != nil {
			return _aface
		}
		switch _afdb := _fbcgf.(type) {
		case _a.StartElement:
			switch _afdb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}:
				_cbfc := NewCT_HierarchyUsage()
				if _afdff := d.DecodeElement(_cbfc, &_afdb); _afdff != nil {
					return _afdff
				}
				_ffcff.ColHierarchyUsage = append(_ffcff.ColHierarchyUsage, _cbfc)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006f\u006c\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065\u0020\u0025\u0076", _afdb.Name)
				if _bcbb := d.Skip(); _bcbb != nil {
					return _bcbb
				}
			}
		case _a.EndElement:
			break _ecdcd
		case _a.CharData:
		}
	}
	return nil
}

type ST_CfType byte

func (_fadgf *CT_CustomWorkbookViews) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_becd:
	for {
		_dcac, _dfgf := d.Token()
		if _dfgf != nil {
			return _dfgf
		}
		switch _bfdb := _dcac.(type) {
		case _a.StartElement:
			switch _bfdb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062\u006fo\u006b\u0056\u0069\u0065\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062\u006fo\u006b\u0056\u0069\u0065\u0077"}:
				_ffcg := NewCT_CustomWorkbookView()
				if _edcbg := d.DecodeElement(_ffcg, &_bfdb); _edcbg != nil {
					return _edcbg
				}
				_fadgf.CustomWorkbookView = append(_fadgf.CustomWorkbookView, _ffcg)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0075\u0073\u0074o\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _bfdb.Name)
				if _dcbea := d.Skip(); _dcbea != nil {
					return _dcbea
				}
			}
		case _a.EndElement:
			break _becd
		case _a.CharData:
		}
	}
	return nil
}
func (_ceabe *CT_ChartsheetView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gecb := range start.Attr {
		if _gecb.Name.Local == "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_eafd, _edff := _f.ParseBool(_gecb.Value)
			if _edff != nil {
				return _edff
			}
			_ceabe.TabSelectedAttr = &_eafd
			continue
		}
		if _gecb.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce" {
			_dgea, _cefcd := _f.ParseUint(_gecb.Value, 10, 32)
			if _cefcd != nil {
				return _cefcd
			}
			_ddeb := uint32(_dgea)
			_ceabe.ZoomScaleAttr = &_ddeb
			continue
		}
		if _gecb.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064" {
			_aeaba, _debcg := _f.ParseUint(_gecb.Value, 10, 32)
			if _debcg != nil {
				return _debcg
			}
			_ceabe.WorkbookViewIdAttr = uint32(_aeaba)
			continue
		}
		if _gecb.Name.Local == "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t" {
			_egga, _aeagb := _f.ParseBool(_gecb.Value)
			if _aeagb != nil {
				return _aeagb
			}
			_ceabe.ZoomToFitAttr = &_egga
			continue
		}
	}
_efff:
	for {
		_cbcb, _ebgb := d.Token()
		if _ebgb != nil {
			return _ebgb
		}
		switch _fcgge := _cbcb.(type) {
		case _a.StartElement:
			switch _fcgge.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ceabe.ExtLst = NewCT_ExtensionList()
				if _eaad := d.DecodeElement(_ceabe.ExtLst, &_fcgge); _eaad != nil {
					return _eaad
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _fcgge.Name)
				if _gadfc := d.Skip(); _gadfc != nil {
					return _gadfc
				}
			}
		case _a.EndElement:
			break _efff
		case _a.CharData:
		}
	}
	return nil
}
func (_gdbbbc ST_DdeValueType) Validate() error { return _gdbbbc.ValidateWithPath("") }

// Validate validates the CT_Scenario and its children
func (_fbagg *CT_Scenario) Validate() error {
	return _fbagg.ValidateWithPath("C\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f")
}

type CT_CalcPr struct {

	// Calculation Id
	CalcIdAttr *uint32

	// Calculation Mode
	CalcModeAttr ST_CalcMode

	// Full Calculation On Load
	FullCalcOnLoadAttr *bool

	// Reference Mode
	RefModeAttr ST_RefMode

	// Calculation Iteration
	IterateAttr *bool

	// Iteration Count
	IterateCountAttr *uint32

	// Iterative Calculation Delta
	IterateDeltaAttr *float64

	// Full Precision Calculation
	FullPrecisionAttr *bool

	// Calc Completed
	CalcCompletedAttr *bool

	// Calculate On Save
	CalcOnSaveAttr *bool

	// Concurrent Calculations
	ConcurrentCalcAttr *bool

	// Concurrent Thread Manual Count
	ConcurrentManualCountAttr *uint32

	// Force Full Calculation
	ForceFullCalcAttr *bool
}

func (_fcfcfb *CT_TableMissing) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for {
		_badbb, _cgbdd := d.Token()
		if _cgbdd != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u004di\u0073\u0073\u0069n\u0067:\u0020\u0025\u0073", _cgbdd)
		}
		if _efddc, _cgedgg := _badbb.(_a.EndElement); _cgedgg && _efddc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_IgnoredError and its children
func (_gabaf *CT_IgnoredError) Validate() error {
	return _gabaf.ValidateWithPath("\u0043T\u005fI\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072")
}

const (
	ST_DateTimeGroupingUnset  ST_DateTimeGrouping = 0
	ST_DateTimeGroupingYear   ST_DateTimeGrouping = 1
	ST_DateTimeGroupingMonth  ST_DateTimeGrouping = 2
	ST_DateTimeGroupingDay    ST_DateTimeGrouping = 3
	ST_DateTimeGroupingHour   ST_DateTimeGrouping = 4
	ST_DateTimeGroupingMinute ST_DateTimeGrouping = 5
	ST_DateTimeGroupingSecond ST_DateTimeGrouping = 6
)

// Validate validates the CT_RevisionHeader and its children
func (_gdcfd *CT_RevisionHeader) Validate() error {
	return _gdcfd.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048e\u0061\u0064\u0065\u0072")
}

// Validate validates the CT_MdxMemeberProp and its children
func (_cabc *CT_MdxMemeberProp) Validate() error {
	return _cabc.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065r\u0050\u0072\u006f\u0070")
}
func (_ccdec ST_BorderStyle) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bbfdd := _a.Attr{}
	_bbfdd.Name = name
	switch _ccdec {
	case ST_BorderStyleUnset:
		_bbfdd.Value = ""
	case ST_BorderStyleNone:
		_bbfdd.Value = "\u006e\u006f\u006e\u0065"
	case ST_BorderStyleThin:
		_bbfdd.Value = "\u0074\u0068\u0069\u006e"
	case ST_BorderStyleMedium:
		_bbfdd.Value = "\u006d\u0065\u0064\u0069\u0075\u006d"
	case ST_BorderStyleDashed:
		_bbfdd.Value = "\u0064\u0061\u0073\u0068\u0065\u0064"
	case ST_BorderStyleDotted:
		_bbfdd.Value = "\u0064\u006f\u0074\u0074\u0065\u0064"
	case ST_BorderStyleThick:
		_bbfdd.Value = "\u0074\u0068\u0069c\u006b"
	case ST_BorderStyleDouble:
		_bbfdd.Value = "\u0064\u006f\u0075\u0062\u006c\u0065"
	case ST_BorderStyleHair:
		_bbfdd.Value = "\u0068\u0061\u0069\u0072"
	case ST_BorderStyleMediumDashed:
		_bbfdd.Value = "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064"
	case ST_BorderStyleDashDot:
		_bbfdd.Value = "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case ST_BorderStyleMediumDashDot:
		_bbfdd.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case ST_BorderStyleDashDotDot:
		_bbfdd.Value = "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_BorderStyleMediumDashDotDot:
		_bbfdd.Value = "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_BorderStyleSlantDashDot:
		_bbfdd.Value = "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	}
	return _bbfdd, nil
}

type AG_AutoFormat struct {
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

// ValidateWithPath validates the CT_CustomWorkbookView and its children, prefixing error messages with path
func (_ccgb *CT_CustomWorkbookView) ValidateWithPath(path string) error {
	if !_ae.ST_GuidPatternRe.MatchString(_ccgb.GuidAttr) {
		return _fc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ae.ST_GuidPatternRe, _ccgb.GuidAttr)
	}
	if _facd := _ccgb.ShowCommentsAttr.ValidateWithPath(path + "\u002f\u0053\u0068\u006f\u0077\u0043\u006f\u006d\u006d\u0065\u006e\u0074s\u0041\u0074\u0074\u0072"); _facd != nil {
		return _facd
	}
	if _eebg := _ccgb.ShowObjectsAttr.ValidateWithPath(path + "\u002f\u0053h\u006f\u0077\u004fb\u006a\u0065\u0063\u0074\u0073\u0041\u0074\u0074\u0072"); _eebg != nil {
		return _eebg
	}
	if _ccgb.ExtLst != nil {
		if _ddcg := _ccgb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddcg != nil {
			return _ddcg
		}
	}
	return nil
}

type CT_DateTime struct {

	// Value
	VAttr _cd.Time

	// Unused Item
	UAttr *bool

	// Calculated Item Value
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Member Property Index
	X []*CT_X
}

// ValidateWithPath validates the CT_RevisionInsertSheet and its children, prefixing error messages with path
func (_eaabg *CT_RevisionInsertSheet) ValidateWithPath(path string) error { return nil }
func (_bfcagb ST_CalcMode) Validate() error                               { return _bfcagb.ValidateWithPath("") }

type CT_Pages struct {

	// Page Item String Count
	CountAttr *uint32

	// Page Items
	Page []*CT_PCDSCPage
}

func (_aggcde *CT_Tuples) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cgfcg := range start.Attr {
		if _cgfcg.Name.Local == "\u0063" {
			_ddfed, _fcebb := _f.ParseUint(_cgfcg.Value, 10, 32)
			if _fcebb != nil {
				return _fcebb
			}
			_gedffd := uint32(_ddfed)
			_aggcde.CAttr = &_gedffd
			continue
		}
	}
_ecddc:
	for {
		_gfdccc, _cgcbc := d.Token()
		if _cgcbc != nil {
			return _cgcbc
		}
		switch _bfedef := _gfdccc.(type) {
		case _a.StartElement:
			switch _bfedef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c"}:
				_dbbce := NewCT_Tuple()
				if _bgcadg := d.DecodeElement(_dbbce, &_bfedef); _bgcadg != nil {
					return _bgcadg
				}
				_aggcde.Tpl = append(_aggcde.Tpl, _dbbce)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0075\u0070l\u0065\u0073 \u0025\u0076", _bfedef.Name)
				if _dbfec := d.Skip(); _dbfec != nil {
					return _dbfec
				}
			}
		case _a.EndElement:
			break _ecddc
		case _a.CharData:
		}
	}
	return nil
}
func (_abgag ST_OleUpdate) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_aabbc := _a.Attr{}
	_aabbc.Name = name
	switch _abgag {
	case ST_OleUpdateUnset:
		_aabbc.Value = ""
	case ST_OleUpdateOLEUPDATE_ALWAYS:
		_aabbc.Value = "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053"
	case ST_OleUpdateOLEUPDATE_ONCALL:
		_aabbc.Value = "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c"
	}
	return _aabbc, nil
}

type CT_DataBar struct {

	// Minimum Length
	MinLengthAttr *uint32

	// Maximum Length
	MaxLengthAttr *uint32

	// Show Values
	ShowValueAttr *bool

	// Conditional Format Value Object
	Cfvo []*CT_Cfvo

	// Data Bar Color
	Color *CT_Color
}

// ValidateWithPath validates the CT_Cell and its children, prefixing error messages with path
func (_deda *CT_Cell) ValidateWithPath(path string) error {
	if _ebde := _deda.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _ebde != nil {
		return _ebde
	}
	if _deda.F != nil {
		if _eabd := _deda.F.ValidateWithPath(path + "\u002f\u0046"); _eabd != nil {
			return _eabd
		}
	}
	if _deda.Is != nil {
		if _acce := _deda.Is.ValidateWithPath(path + "\u002f\u0049\u0073"); _acce != nil {
			return _acce
		}
	}
	if _deda.ExtLst != nil {
		if _gfgc := _deda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfgc != nil {
			return _gfgc
		}
	}
	return nil
}
func (_cdcfcc *CT_SheetView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cdcfcc.WindowProtectionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u0069n\u0064\u006f\u0077P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cdcfcc.WindowProtectionAttr))})
	}
	if _cdcfcc.ShowFormulasAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cdcfcc.ShowFormulasAttr))})
	}
	if _cdcfcc.ShowGridLinesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cdcfcc.ShowGridLinesAttr))})
	}
	if _cdcfcc.ShowRowColHeadersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cdcfcc.ShowRowColHeadersAttr))})
	}
	if _cdcfcc.ShowZerosAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u005a\u0065\u0072\u006fs"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cdcfcc.ShowZerosAttr))})
	}
	if _cdcfcc.RightToLeftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "r\u0069\u0067\u0068\u0074\u0054\u006f\u004c\u0065\u0066\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cdcfcc.RightToLeftAttr))})
	}
	if _cdcfcc.TabSelectedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cdcfcc.TabSelectedAttr))})
	}
	if _cdcfcc.ShowRulerAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cdcfcc.ShowRulerAttr))})
	}
	if _cdcfcc.ShowOutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cdcfcc.ShowOutlineSymbolsAttr))})
	}
	if _cdcfcc.DefaultGridColorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065f\u0061\u0075\u006ct\u0047\u0072\u0069\u0064\u0043\u006f\u006c\u006f\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cdcfcc.DefaultGridColorAttr))})
	}
	if _cdcfcc.ShowWhiteSpaceAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0057\u0068\u0069\u0074\u0065S\u0070\u0061\u0063\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cdcfcc.ShowWhiteSpaceAttr))})
	}
	if _cdcfcc.ViewAttr != ST_SheetViewTypeUnset {
		_cbbade, _agbcge := _cdcfcc.ViewAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0069\u0065\u0077"})
		if _agbcge != nil {
			return _agbcge
		}
		start.Attr = append(start.Attr, _cbbade)
	}
	if _cdcfcc.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_cdcfcc.TopLeftCellAttr)})
	}
	if _cdcfcc.ColorIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006c\u006f\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_cdcfcc.ColorIdAttr)})
	}
	if _cdcfcc.ZoomScaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce"}, Value: _fc.Sprintf("\u0025\u0076", *_cdcfcc.ZoomScaleAttr)})
	}
	if _cdcfcc.ZoomScaleNormalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007ao\u006fm\u0053\u0063\u0061\u006c\u0065\u004e\u006f\u0072\u006d\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_cdcfcc.ZoomScaleNormalAttr)})
	}
	if _cdcfcc.ZoomScaleSheetLayoutViewAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006c\u0065\u0053\u0068\u0065\u0065t\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077"}, Value: _fc.Sprintf("\u0025\u0076", *_cdcfcc.ZoomScaleSheetLayoutViewAttr)})
	}
	if _cdcfcc.ZoomScalePageLayoutViewAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007a\u006f\u006fmS\u0063\u0061\u006c\u0065\u0050\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077"}, Value: _fc.Sprintf("\u0025\u0076", *_cdcfcc.ZoomScalePageLayoutViewAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _cdcfcc.WorkbookViewIdAttr)})
	e.EncodeToken(start)
	if _cdcfcc.Pane != nil {
		_ffeca := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0070\u0061\u006e\u0065"}}
		e.EncodeElement(_cdcfcc.Pane, _ffeca)
	}
	if _cdcfcc.Selection != nil {
		_bfdbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		for _, _gffbf := range _cdcfcc.Selection {
			e.EncodeElement(_gffbf, _bfdbc)
		}
	}
	if _cdcfcc.PivotSelection != nil {
		_edaab := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}}
		for _, _cefgcg := range _cdcfcc.PivotSelection {
			e.EncodeElement(_cefgcg, _edaab)
		}
	}
	if _cdcfcc.ExtLst != nil {
		_bfcca := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cdcfcc.ExtLst, _bfcca)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CellWatches and its children
func (_bdcg *CT_CellWatches) Validate() error {
	return _bdcg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073")
}
func (_ccdgf ST_MdxKPIProperty) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_facgg := _a.Attr{}
	_facgg.Name = name
	switch _ccdgf {
	case ST_MdxKPIPropertyUnset:
		_facgg.Value = ""
	case ST_MdxKPIPropertyV:
		_facgg.Value = "\u0076"
	case ST_MdxKPIPropertyG:
		_facgg.Value = "\u0067"
	case ST_MdxKPIPropertyS:
		_facgg.Value = "\u0073"
	case ST_MdxKPIPropertyT:
		_facgg.Value = "\u0074"
	case ST_MdxKPIPropertyW:
		_facgg.Value = "\u0077"
	case ST_MdxKPIPropertyM:
		_facgg.Value = "\u006d"
	}
	return _facgg, nil
}

type CT_ChartsheetProtection struct {

	// Password
	PasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Contents
	ContentAttr *bool

	// Objects Locked
	ObjectsAttr *bool
}
type CT_SortCondition struct {

	// Descending
	DescendingAttr *bool

	// Sort By
	SortByAttr ST_SortBy

	// Reference
	RefAttr string

	// Custom List
	CustomListAttr *string

	// Format Id
	DxfIdAttr *uint32

	// Icon Set
	IconSetAttr ST_IconSetType

	// Icon Id
	IconIdAttr *uint32
}

func (_aeddf *CT_TableColumn) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ffdad := range start.Attr {
		if _ffdad.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_geddd, _decgcc := _f.ParseUint(_ffdad.Value, 10, 32)
			if _decgcc != nil {
				return _decgcc
			}
			_cfgcf := uint32(_geddd)
			_aeddf.TotalsRowDxfIdAttr = &_cfgcf
			continue
		}
		if _ffdad.Name.Local == "\u0069\u0064" {
			_ffagf, _befeb := _f.ParseUint(_ffdad.Value, 10, 32)
			if _befeb != nil {
				return _befeb
			}
			_aeddf.IdAttr = uint32(_ffagf)
			continue
		}
		if _ffdad.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_cgfeb, _cdded := _ffdad.Value, error(nil)
			if _cdded != nil {
				return _cdded
			}
			_aeddf.HeaderRowCellStyleAttr = &_cgfeb
			continue
		}
		if _ffdad.Name.Local == "\u006e\u0061\u006d\u0065" {
			_babbgg, _ecgegb := _ffdad.Value, error(nil)
			if _ecgegb != nil {
				return _ecgegb
			}
			_aeddf.NameAttr = _babbgg
			continue
		}
		if _ffdad.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077L\u0061\u0062\u0065\u006c" {
			_fdfdf, _efacac := _ffdad.Value, error(nil)
			if _efacac != nil {
				return _efacac
			}
			_aeddf.TotalsRowLabelAttr = &_fdfdf
			continue
		}
		if _ffdad.Name.Local == "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069e\u006c\u0064\u0049\u0064" {
			_begbd, _eegfac := _f.ParseUint(_ffdad.Value, 10, 32)
			if _eegfac != nil {
				return _eegfac
			}
			_dbffe := uint32(_begbd)
			_aeddf.QueryTableFieldIdAttr = &_dbffe
			continue
		}
		if _ffdad.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_abbafc, _bdeea := _f.ParseUint(_ffdad.Value, 10, 32)
			if _bdeea != nil {
				return _bdeea
			}
			_bbbe := uint32(_abbafc)
			_aeddf.HeaderRowDxfIdAttr = &_bbbe
			continue
		}
		if _ffdad.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_cccead, _fdfdg := _f.ParseUint(_ffdad.Value, 10, 32)
			if _fdfdg != nil {
				return _fdfdg
			}
			_edbebd := uint32(_cccead)
			_aeddf.DataDxfIdAttr = &_edbebd
			continue
		}
		if _ffdad.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_gbdcc, _bfccef := _ffdad.Value, error(nil)
			if _bfccef != nil {
				return _bfccef
			}
			_aeddf.UniqueNameAttr = &_gbdcc
			continue
		}
		if _ffdad.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u0075\u006ec\u0074\u0069\u006f\u006e" {
			_aeddf.TotalsRowFunctionAttr.UnmarshalXMLAttr(_ffdad)
			continue
		}
		if _ffdad.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_gfdcfb, _cdbeeg := _ffdad.Value, error(nil)
			if _cdbeeg != nil {
				return _cdbeeg
			}
			_aeddf.DataCellStyleAttr = &_gfdcfb
			continue
		}
		if _ffdad.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_fbdad, _eeadc := _ffdad.Value, error(nil)
			if _eeadc != nil {
				return _eeadc
			}
			_aeddf.TotalsRowCellStyleAttr = &_fbdad
			continue
		}
	}
_ebcaa:
	for {
		_cabeg, _adbbd := d.Token()
		if _adbbd != nil {
			return _adbbd
		}
		switch _bcadd := _cabeg.(type) {
		case _a.StartElement:
			switch _bcadd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006ccu\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006ccu\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_aeddf.CalculatedColumnFormula = NewCT_TableFormula()
				if _acgea := d.DecodeElement(_aeddf.CalculatedColumnFormula, &_bcadd); _acgea != nil {
					return _acgea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006ft\u0061\u006c\u0073R\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006ft\u0061\u006c\u0073R\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_aeddf.TotalsRowFormula = NewCT_TableFormula()
				if _cggfg := d.DecodeElement(_aeddf.TotalsRowFormula, &_bcadd); _cggfg != nil {
					return _cggfg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "x\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "x\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}:
				_aeddf.XmlColumnPr = NewCT_XmlColumnPr()
				if _dfaef := d.DecodeElement(_aeddf.XmlColumnPr, &_bcadd); _dfaef != nil {
					return _dfaef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aeddf.ExtLst = NewCT_ExtensionList()
				if _fgbcgdd := d.DecodeElement(_aeddf.ExtLst, &_bcadd); _fgbcgdd != nil {
					return _fgbcgdd
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006fl\u0075m\u006e\u0020\u0025\u0076", _bcadd.Name)
				if _agfdc := d.Skip(); _agfdc != nil {
					return _agfdc
				}
			}
		case _a.EndElement:
			break _ebcaa
		case _a.CharData:
		}
	}
	return nil
}
func (_ddbaa ST_MdxFunctionType) String() string {
	switch _ddbaa {
	case 0:
		return ""
	case 1:
		return "\u006d"
	case 2:
		return "\u0076"
	case 3:
		return "\u0073"
	case 4:
		return "\u0063"
	case 5:
		return "\u0072"
	case 6:
		return "\u0070"
	case 7:
		return "\u006b"
	}
	return ""
}

type CT_MetadataBlock struct {

	// Metadata Record
	Rc []*CT_MetadataRecord
}

func (_agecc *CT_X) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _agecc.VAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fc.Sprintf("\u0025\u0076", *_agecc.VAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ffceg ST_RefMode) ValidateWithPath(path string) error {
	switch _ffceg {
	case 0, 1, 2:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffceg))
	}
	return nil
}

const (
	ST_MdxKPIPropertyUnset ST_MdxKPIProperty = 0
	ST_MdxKPIPropertyV     ST_MdxKPIProperty = 1
	ST_MdxKPIPropertyG     ST_MdxKPIProperty = 2
	ST_MdxKPIPropertyS     ST_MdxKPIProperty = 3
	ST_MdxKPIPropertyT     ST_MdxKPIProperty = 4
	ST_MdxKPIPropertyW     ST_MdxKPIProperty = 5
	ST_MdxKPIPropertyM     ST_MdxKPIProperty = 6
)

func (_ecde *CT_ChartsheetProtection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bgbfd := range start.Attr {
		if _bgbfd.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_cbbca, _ccfg := _bgbfd.Value, error(nil)
			if _ccfg != nil {
				return _ccfg
			}
			_ecde.PasswordAttr = &_cbbca
			continue
		}
		if _bgbfd.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_edce, _ecce := _bgbfd.Value, error(nil)
			if _ecce != nil {
				return _ecce
			}
			_ecde.AlgorithmNameAttr = &_edce
			continue
		}
		if _bgbfd.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_beee, _eecf := _bgbfd.Value, error(nil)
			if _eecf != nil {
				return _eecf
			}
			_ecde.HashValueAttr = &_beee
			continue
		}
		if _bgbfd.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_befec, _edgf := _bgbfd.Value, error(nil)
			if _edgf != nil {
				return _edgf
			}
			_ecde.SaltValueAttr = &_befec
			continue
		}
		if _bgbfd.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_aabfc, _abce := _f.ParseUint(_bgbfd.Value, 10, 32)
			if _abce != nil {
				return _abce
			}
			_bdef := uint32(_aabfc)
			_ecde.SpinCountAttr = &_bdef
			continue
		}
		if _bgbfd.Name.Local == "\u0063o\u006e\u0074\u0065\u006e\u0074" {
			_ddgg, _eded := _f.ParseBool(_bgbfd.Value)
			if _eded != nil {
				return _eded
			}
			_ecde.ContentAttr = &_ddgg
			continue
		}
		if _bgbfd.Name.Local == "\u006fb\u006a\u0065\u0063\u0074\u0073" {
			_adfg, _aaaga := _f.ParseBool(_bgbfd.Value)
			if _aaaga != nil {
				return _aaaga
			}
			_ecde.ObjectsAttr = &_adfg
			continue
		}
	}
	for {
		_ebade, _dfbcd := d.Token()
		if _dfbcd != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0050r\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020%\u0073", _dfbcd)
		}
		if _cggd, _befbb := _ebade.(_a.EndElement); _befbb && _cggd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ddedef *CT_QueryTableRefresh) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ddedef.QueryTableFields = NewCT_QueryTableFields()
	for _, _cedbad := range start.Attr {
		if _cedbad.Name.Local == "\u0070r\u0065\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072\u0074\u0046i\u006c\u0074\u0065\u0072\u004c\u0061\u0079\u006f\u0075\u0074" {
			_gddgfg, _bcaege := _f.ParseBool(_cedbad.Value)
			if _bcaege != nil {
				return _bcaege
			}
			_ddedef.PreserveSortFilterLayoutAttr = &_gddgfg
			continue
		}
		if _cedbad.Name.Local == "\u0066\u0069\u0065\u006c\u0064\u0049\u0064\u0057\u0072a\u0070\u0070\u0065\u0064" {
			_geceg, _afaab := _f.ParseBool(_cedbad.Value)
			if _afaab != nil {
				return _afaab
			}
			_ddedef.FieldIdWrappedAttr = &_geceg
			continue
		}
		if _cedbad.Name.Local == "h\u0065a\u0064\u0065\u0072\u0073\u0049\u006e\u004c\u0061s\u0074\u0052\u0065\u0066re\u0073\u0068" {
			_ebgffb, _ebfcb := _f.ParseBool(_cedbad.Value)
			if _ebfcb != nil {
				return _ebfcb
			}
			_ddedef.HeadersInLastRefreshAttr = &_ebgffb
			continue
		}
		if _cedbad.Name.Local == "\u006d\u0069\u006e\u0069\u006d\u0075\u006d\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_dbgee, _bdacd := _f.ParseUint(_cedbad.Value, 10, 8)
			if _bdacd != nil {
				return _bdacd
			}
			_gccbf := uint8(_dbgee)
			_ddedef.MinimumVersionAttr = &_gccbf
			continue
		}
		if _cedbad.Name.Local == "\u006e\u0065\u0078\u0074\u0049\u0064" {
			_gfdfb, _edcedf := _f.ParseUint(_cedbad.Value, 10, 32)
			if _edcedf != nil {
				return _edcedf
			}
			_gafad := uint32(_gfdfb)
			_ddedef.NextIdAttr = &_gafad
			continue
		}
		if _cedbad.Name.Local == "\u0075n\u0062o\u0075\u006e\u0064\u0043\u006fl\u0075\u006dn\u0073\u004c\u0065\u0066\u0074" {
			_egabc, _ceede := _f.ParseUint(_cedbad.Value, 10, 32)
			if _ceede != nil {
				return _ceede
			}
			_ecec := uint32(_egabc)
			_ddedef.UnboundColumnsLeftAttr = &_ecec
			continue
		}
		if _cedbad.Name.Local == "\u0075\u006e\u0062\u006fun\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0052\u0069\u0067\u0068\u0074" {
			_addcf, _bcddb := _f.ParseUint(_cedbad.Value, 10, 32)
			if _bcddb != nil {
				return _bcddb
			}
			_egdcbd := uint32(_addcf)
			_ddedef.UnboundColumnsRightAttr = &_egdcbd
			continue
		}
	}
_agfbf:
	for {
		_debgcd, _cdbbd := d.Token()
		if _cdbbd != nil {
			return _cdbbd
		}
		switch _fgaad := _debgcd.(type) {
		case _a.StartElement:
			switch _fgaad.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075e\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075e\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _cfggb := d.DecodeElement(_ddedef.QueryTableFields, &_fgaad); _cfggb != nil {
					return _cfggb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065ry\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065ry\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_ddedef.QueryTableDeletedFields = NewCT_QueryTableDeletedFields()
				if _ecgeba := d.DecodeElement(_ddedef.QueryTableDeletedFields, &_fgaad); _ecgeba != nil {
					return _ecgeba
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_ddedef.SortState = NewCT_SortState()
				if _aggcc := d.DecodeElement(_ddedef.SortState, &_fgaad); _aggcc != nil {
					return _aggcc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ddedef.ExtLst = NewCT_ExtensionList()
				if _feafa := d.DecodeElement(_ddedef.ExtLst, &_fgaad); _feafa != nil {
					return _feafa
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068\u0020\u0025\u0076", _fgaad.Name)
				if _fbecf := d.Skip(); _fbecf != nil {
					return _fbecf
				}
			}
		case _a.EndElement:
			break _agfbf
		case _a.CharData:
		}
	}
	return nil
}
func (_acbcd *CT_PCDKPIs) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _acbcd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_acbcd.CountAttr)})
	}
	e.EncodeToken(start)
	if _acbcd.Kpi != nil {
		_gbcac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006b\u0070\u0069"}}
		for _, _bfcacg := range _acbcd.Kpi {
			e.EncodeElement(_bfcacg, _gbcac)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type StyleSheet struct{ CT_Stylesheet }

func (_eecc *CT_PageFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cegfb := range start.Attr {
		if _cegfb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_begbe, _cdabdg := _f.ParseUint(_cegfb.Value, 10, 32)
			if _cdabdg != nil {
				return _cdabdg
			}
			_bcbbd := uint32(_begbe)
			_eecc.CountAttr = &_bcbbd
			continue
		}
	}
_cggaa:
	for {
		_bfgada, _debag := d.Token()
		if _debag != nil {
			return _debag
		}
		switch _caged := _bfgada.(type) {
		case _a.StartElement:
			switch _caged.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0046\u0069\u0065\u006cd"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0046\u0069\u0065\u006cd"}:
				_ffcffg := NewCT_PageField()
				if _cfdf := d.DecodeElement(_ffcffg, &_caged); _cfdf != nil {
					return _cfdf
				}
				_eecc.PageField = append(_eecc.PageField, _ffcffg)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _caged.Name)
				if _cbdeg := d.Skip(); _cbdeg != nil {
					return _cbdeg
				}
			}
		case _a.EndElement:
			break _cggaa
		case _a.CharData:
		}
	}
	return nil
}
func (_cbba *CT_Borders) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cbba.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cbba.CountAttr)})
	}
	e.EncodeToken(start)
	if _cbba.Border != nil {
		_facb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0062\u006f\u0072\u0064\u0065r"}}
		for _, _cfa := range _cbba.Border {
			e.EncodeElement(_cfa, _facb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PCDKPI and its children, prefixing error messages with path
func (_eecec *CT_PCDKPI) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_OlapPr and its children
func (_accbc *CT_OlapPr) Validate() error {
	return _accbc.ValidateWithPath("\u0043T\u005f\u004f\u006c\u0061\u0070\u0050r")
}

// ValidateWithPath validates the CT_Authors and its children, prefixing error messages with path
func (_bgfe *CT_Authors) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_CsPageSetup and its children, prefixing error messages with path
func (_gdfcd *CT_CsPageSetup) ValidateWithPath(path string) error {
	if _gdfcd.PaperHeightAttr != nil {
		if !_ae.ST_PositiveUniversalMeasurePatternRe.MatchString(*_gdfcd.PaperHeightAttr) {
			return _fc.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ae.ST_PositiveUniversalMeasurePatternRe, *_gdfcd.PaperHeightAttr)
		}
	}
	if _gdfcd.PaperHeightAttr != nil {
		if !_ae.ST_UniversalMeasurePatternRe.MatchString(*_gdfcd.PaperHeightAttr) {
			return _fc.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ae.ST_UniversalMeasurePatternRe, *_gdfcd.PaperHeightAttr)
		}
	}
	if _gdfcd.PaperWidthAttr != nil {
		if !_ae.ST_PositiveUniversalMeasurePatternRe.MatchString(*_gdfcd.PaperWidthAttr) {
			return _fc.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ae.ST_PositiveUniversalMeasurePatternRe, *_gdfcd.PaperWidthAttr)
		}
	}
	if _gdfcd.PaperWidthAttr != nil {
		if !_ae.ST_UniversalMeasurePatternRe.MatchString(*_gdfcd.PaperWidthAttr) {
			return _fc.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ae.ST_UniversalMeasurePatternRe, *_gdfcd.PaperWidthAttr)
		}
	}
	if _dbca := _gdfcd.OrientationAttr.ValidateWithPath(path + "\u002f\u004fr\u0069\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _dbca != nil {
		return _dbca
	}
	return nil
}
func (_cebcb ST_Axis) Validate() error { return _cebcb.ValidateWithPath("") }

// ValidateWithPath validates the CT_SheetDimension and its children, prefixing error messages with path
func (_beece *CT_SheetDimension) ValidateWithPath(path string) error { return nil }
func (_afae *CT_FilterColumn) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006cI\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _afae.ColIdAttr)})
	if _afae.HiddenButtonAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afae.HiddenButtonAttr))})
	}
	if _afae.ShowButtonAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afae.ShowButtonAttr))})
	}
	e.EncodeToken(start)
	if _afae.Filters != nil {
		_ffdec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_afae.Filters, _ffdec)
	}
	if _afae.Top10 != nil {
		_geeae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074\u006f\u0070\u0031\u0030"}}
		e.EncodeElement(_afae.Top10, _geeae)
	}
	if _afae.CustomFilters != nil {
		_ccfeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_afae.CustomFilters, _ccfeb)
	}
	if _afae.DynamicFilter != nil {
		_ebbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0064\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_afae.DynamicFilter, _ebbc)
	}
	if _afae.ColorFilter != nil {
		_gfcgb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_afae.ColorFilter, _gfcgb)
	}
	if _afae.IconFilter != nil {
		_ecbgd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_afae.IconFilter, _ecbgd)
	}
	if _afae.ExtLst != nil {
		_afafc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_afae.ExtLst, _afafc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_beacb *ST_DvAspect) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_beacb = 0
	case "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054":
		*_beacb = 1
	case "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e":
		*_beacb = 2
	}
	return nil
}

// Validate validates the CT_DataBinding and its children
func (_gdad *CT_DataBinding) Validate() error {
	return _gdad.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067")
}
func NewCT_DataBinding() *CT_DataBinding { _faaeb := &CT_DataBinding{}; return _faaeb }
func (_fbgfa *ST_CalcMode) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_egbege, _cefcdc := d.Token()
	if _cefcdc != nil {
		return _cefcdc
	}
	if _geaff, _fdacg := _egbege.(_a.EndElement); _fdacg && _geaff.Name == start.Name {
		*_fbgfa = 1
		return nil
	}
	if _fabgf, _cddecd := _egbege.(_a.CharData); !_cddecd {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egbege)
	} else {
		switch string(_fabgf) {
		case "":
			*_fbgfa = 0
		case "\u006d\u0061\u006e\u0075\u0061\u006c":
			*_fbgfa = 1
		case "\u0061\u0075\u0074\u006f":
			*_fbgfa = 2
		case "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065":
			*_fbgfa = 3
		}
	}
	_egbege, _cefcdc = d.Token()
	if _cefcdc != nil {
		return _cefcdc
	}
	if _gbadac, _eeege := _egbege.(_a.EndElement); _eeege && _gbadac.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egbege)
}
func (_agedgg *ST_Pane) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_agedgg = 0
	case "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
		*_agedgg = 1
	case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_agedgg = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
		*_agedgg = 3
	case "\u0074o\u0070\u004c\u0065\u0066\u0074":
		*_agedgg = 4
	}
	return nil
}

// ValidateWithPath validates the CT_IntProperty and its children, prefixing error messages with path
func (_bfcac *CT_IntProperty) ValidateWithPath(path string) error { return nil }

type ST_UnderlineValues byte

// Validate validates the CT_BookViews and its children
func (_acc *CT_BookViews) Validate() error {
	return _acc.ValidateWithPath("\u0043\u0054\u005fB\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073")
}
func NewCT_InputCells() *CT_InputCells { _dadfa := &CT_InputCells{}; return _dadfa }

type CT_DefinedNames struct {

	// Defined Name
	DefinedName []*CT_DefinedName
}
type CT_rowItems struct {

	// Items in a Row Count
	CountAttr *uint32

	// Row Items
	I []*CT_I
}
type CT_WebPublishObject struct {

	// Id
	IdAttr uint32

	// Div Id
	DivIdAttr string

	// Source Object
	SourceObjectAttr *string

	// Destination File
	DestinationFileAttr string

	// Title
	TitleAttr *string

	// Auto Republish
	AutoRepublishAttr *bool
}

func (_bbfgg *CT_RevisionInsertSheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _bbfgg.SheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _bbfgg.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u0065\u0065\u0074\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", _bbfgg.SheetPositionAttr)})
	if _bbfgg.RIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_bbfgg.RIdAttr)})
	}
	if _bbfgg.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbfgg.UaAttr))})
	}
	if _bbfgg.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbfgg.RaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ExternalCell and its children, prefixing error messages with path
func (_fccbf *CT_ExternalCell) ValidateWithPath(path string) error {
	if _eedca := _fccbf.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _eedca != nil {
		return _eedca
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalDefinedName and its children, prefixing error messages with path
func (_ccbd *CT_ExternalDefinedName) ValidateWithPath(path string) error { return nil }
func (_daedc *ST_TargetScreenSize) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_edcfbc, _ffaec := d.Token()
	if _ffaec != nil {
		return _ffaec
	}
	if _ebaaa, _fbeaf := _edcfbc.(_a.EndElement); _fbeaf && _ebaaa.Name == start.Name {
		*_daedc = 1
		return nil
	}
	if _gcffca, _efdfc := _edcfbc.(_a.CharData); !_efdfc {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edcfbc)
	} else {
		switch string(_gcffca) {
		case "":
			*_daedc = 0
		case "\u00354\u0034\u0078\u0033\u0037\u0036":
			*_daedc = 1
		case "\u00364\u0030\u0078\u0034\u0038\u0030":
			*_daedc = 2
		case "\u00372\u0030\u0078\u0035\u0031\u0032":
			*_daedc = 3
		case "\u00380\u0030\u0078\u0036\u0030\u0030":
			*_daedc = 4
		case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
			*_daedc = 5
		case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
			*_daedc = 6
		case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
			*_daedc = 7
		case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
			*_daedc = 8
		case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
			*_daedc = 9
		case "\u00318\u0030\u0030\u0078\u0031\u0034\u00340":
			*_daedc = 10
		case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
			*_daedc = 11
		}
	}
	_edcfbc, _ffaec = d.Token()
	if _ffaec != nil {
		return _ffaec
	}
	if _cfdcb, _gdcac := _edcfbc.(_a.EndElement); _gdcac && _cfdcb.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edcfbc)
}
func (_dccbg ST_DateTimeGrouping) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dccbg.String(), start)
}

// ValidateWithPath validates the CT_PivotCache and its children, prefixing error messages with path
func (_gdbdc *CT_PivotCache) ValidateWithPath(path string) error { return nil }
func NewCT_ObjectAnchor() *CT_ObjectAnchor {
	_edeec := &CT_ObjectAnchor{}
	_edeec.From = _af.NewFrom()
	_edeec.To = _af.NewTo()
	return _edeec
}
func (_fgfgb *CT_MeasureGroups) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _egdfaf := range start.Attr {
		if _egdfaf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gfcec, _ccbba := _f.ParseUint(_egdfaf.Value, 10, 32)
			if _ccbba != nil {
				return _ccbba
			}
			_ggdge := uint32(_gfcec)
			_fgfgb.CountAttr = &_ggdge
			continue
		}
	}
_agfc:
	for {
		_efgg, _eabbf := d.Token()
		if _eabbf != nil {
			return _eabbf
		}
		switch _cgagga := _efgg.(type) {
		case _a.StartElement:
			switch _cgagga.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}:
				_dbba := NewCT_MeasureGroup()
				if _daab := d.DecodeElement(_dbba, &_cgagga); _daab != nil {
					return _daab
				}
				_fgfgb.MeasureGroup = append(_fgfgb.MeasureGroup, _dbba)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073\u0020\u0025v", _cgagga.Name)
				if _edcbaf := d.Skip(); _edcbaf != nil {
					return _edcbaf
				}
			}
		case _a.EndElement:
			break _agfc
		case _a.CharData:
		}
	}
	return nil
}

type CT_NumFmts struct {

	// Number Format Count
	CountAttr *uint32

	// Number Formats
	NumFmt []*CT_NumFmt
}

func (_ffcb *CT_FileSharing) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dbdd := range start.Attr {
		if _dbdd.Name.Local == "\u0072\u0065\u0061\u0064On\u006c\u0079\u0052\u0065\u0063\u006f\u006d\u006d\u0065\u006e\u0064\u0065\u0064" {
			_aebef, _bdbfcg := _f.ParseBool(_dbdd.Value)
			if _bdbfcg != nil {
				return _bdbfcg
			}
			_ffcb.ReadOnlyRecommendedAttr = &_aebef
			continue
		}
		if _dbdd.Name.Local == "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065" {
			_bcgga, _abbafa := _dbdd.Value, error(nil)
			if _abbafa != nil {
				return _abbafa
			}
			_ffcb.UserNameAttr = &_bcgga
			continue
		}
		if _dbdd.Name.Local == "\u0072\u0065\u0073\u0065rv\u0061\u0074\u0069\u006f\u006e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_dgdbf, _facg := _dbdd.Value, error(nil)
			if _facg != nil {
				return _facg
			}
			_ffcb.ReservationPasswordAttr = &_dgdbf
			continue
		}
		if _dbdd.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_bcbge, _cbege := _dbdd.Value, error(nil)
			if _cbege != nil {
				return _cbege
			}
			_ffcb.AlgorithmNameAttr = &_bcbge
			continue
		}
		if _dbdd.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_cefgd, _ccdfg := _dbdd.Value, error(nil)
			if _ccdfg != nil {
				return _ccdfg
			}
			_ffcb.HashValueAttr = &_cefgd
			continue
		}
		if _dbdd.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_fgafbc, _bbfcd := _dbdd.Value, error(nil)
			if _bbfcd != nil {
				return _bbfcd
			}
			_ffcb.SaltValueAttr = &_fgafbc
			continue
		}
		if _dbdd.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_dcca, _beda := _f.ParseUint(_dbdd.Value, 10, 32)
			if _beda != nil {
				return _beda
			}
			_bcfd := uint32(_dcca)
			_ffcb.SpinCountAttr = &_bcfd
			continue
		}
	}
	for {
		_fabfeg, _cfab := d.Token()
		if _cfab != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067:\u0020\u0025\u0073", _cfab)
		}
		if _efafa, _fbabc := _fabfeg.(_a.EndElement); _fbabc && _efafa.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_QueryTableField and its children, prefixing error messages with path
func (_dfffe *CT_QueryTableField) ValidateWithPath(path string) error {
	if _dfffe.ExtLst != nil {
		if _ebgaa := _dfffe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebgaa != nil {
			return _ebgaa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupItems and its children, prefixing error messages with path
func (_eccec *CT_GroupItems) ValidateWithPath(path string) error {
	for _accbd, _daba := range _eccec.M {
		if _cbaad := _daba.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _accbd)); _cbaad != nil {
			return _cbaad
		}
	}
	for _cdgeb, _eecb := range _eccec.N {
		if _ebbab := _eecb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _cdgeb)); _ebbab != nil {
			return _ebbab
		}
	}
	for _ffad, _decaef := range _eccec.B {
		if _cbgg := _decaef.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _ffad)); _cbgg != nil {
			return _cbgg
		}
	}
	for _ccfed, _agcba := range _eccec.E {
		if _gabag := _agcba.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _ccfed)); _gabag != nil {
			return _gabag
		}
	}
	for _gcbaad, _daaec := range _eccec.S {
		if _bgce := _daaec.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _gcbaad)); _bgce != nil {
			return _bgce
		}
	}
	for _gefef, _eddgc := range _eccec.D {
		if _fage := _eddgc.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _gefef)); _fage != nil {
			return _fage
		}
	}
	return nil
}
func (_ecaff *CT_ExternalSheetNames) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_fcacf:
	for {
		_cacde, _eccc := d.Token()
		if _eccc != nil {
			return _eccc
		}
		switch _dfbb := _cacde.(type) {
		case _a.StartElement:
			switch _dfbb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u004e\u0061\u006de"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u004e\u0061\u006de"}:
				_gdeb := NewCT_ExternalSheetName()
				if _cdag := d.DecodeElement(_gdeb, &_dfbb); _cdag != nil {
					return _cdag
				}
				_ecaff.SheetName = append(_ecaff.SheetName, _gdeb)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073\u0020\u0025\u0076", _dfbb.Name)
				if _aabed := d.Skip(); _aabed != nil {
					return _aabed
				}
			}
		case _a.EndElement:
			break _fcacf
		case _a.CharData:
		}
	}
	return nil
}
func (_fgcfb *CT_RevisionCellChange) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _fgcfb.SIdAttr)})
	if _fgcfb.OdxfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u0064\u0078\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgcfb.OdxfAttr))})
	}
	if _fgcfb.XfDxfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0066\u0044x\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgcfb.XfDxfAttr))})
	}
	if _fgcfb.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgcfb.SAttr))})
	}
	if _fgcfb.DxfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0078\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgcfb.DxfAttr))})
	}
	if _fgcfb.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fgcfb.NumFmtIdAttr)})
	}
	if _fgcfb.QuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgcfb.QuotePrefixAttr))})
	}
	if _fgcfb.OldQuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064\u0051\u0075\u006f\u0074\u0065\u0050r\u0065\u0066\u0069\u0078"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgcfb.OldQuotePrefixAttr))})
	}
	if _fgcfb.PhAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgcfb.PhAttr))})
	}
	if _fgcfb.OldPhAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064P\u0068"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgcfb.OldPhAttr))})
	}
	if _fgcfb.EndOfListFormulaUpdateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006e\u0064\u004ffL\u0069\u0073\u0074\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0055\u0070\u0064\u0061t\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgcfb.EndOfListFormulaUpdateAttr))})
	}
	if _fgcfb.RIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_fgcfb.RIdAttr)})
	}
	if _fgcfb.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgcfb.UaAttr))})
	}
	if _fgcfb.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fgcfb.RaAttr))})
	}
	e.EncodeToken(start)
	if _fgcfb.Oc != nil {
		_cgeeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ao\u0063"}}
		e.EncodeElement(_fgcfb.Oc, _cgeeb)
	}
	_fgcfd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003an\u0063"}}
	e.EncodeElement(_fgcfb.Nc, _fgcfd)
	if _fgcfb.Odxf != nil {
		_cggab := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u006f\u0064\u0078\u0066"}}
		e.EncodeElement(_fgcfb.Odxf, _cggab)
	}
	if _fgcfb.Ndxf != nil {
		_egbgf := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u006e\u0064\u0078\u0066"}}
		e.EncodeElement(_fgcfb.Ndxf, _egbgf)
	}
	if _fgcfb.ExtLst != nil {
		_agcdfb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fgcfb.ExtLst, _agcdfb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionMove and its children, prefixing error messages with path
func (_bdacc *CT_RevisionMove) ValidateWithPath(path string) error {
	for _aaedde, _fbfafg := range _bdacc.Undo {
		if _dcccg := _fbfafg.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0055\u006e\u0064\u006f\u005b\u0025\u0064\u005d", path, _aaedde)); _dcccg != nil {
			return _dcccg
		}
	}
	for _dedfbd, _edbbf := range _bdacc.Rcc {
		if _ebccbb := _edbbf.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _dedfbd)); _ebccbb != nil {
			return _ebccbb
		}
	}
	for _faggd, _gbgggb := range _bdacc.Rfmt {
		if _ecdccd := _gbgggb.ValidateWithPath(_fc.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _faggd)); _ecdccd != nil {
			return _ecdccd
		}
	}
	return nil
}
func (_cbefde *MapInfo) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cbefde.CT_MapInfo = *NewCT_MapInfo()
	for _, _gbadc := range start.Attr {
		if _gbadc.Name.Local == "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073" {
			_badfd, _feafc := _gbadc.Value, error(nil)
			if _feafc != nil {
				return _feafc
			}
			_cbefde.SelectionNamespacesAttr = _badfd
			continue
		}
	}
_ddggbg:
	for {
		_agbeg, _cbcbfd := d.Token()
		if _cbcbfd != nil {
			return _cbcbfd
		}
		switch _cfcfb := _agbeg.(type) {
		case _a.StartElement:
			switch _cfcfb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}:
				_bbbgb := NewCT_Schema()
				if _acfde := d.DecodeElement(_bbbgb, &_cfcfb); _acfde != nil {
					return _acfde
				}
				_cbefde.Schema = append(_cbefde.Schema, _bbbgb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}:
				_dggag := NewCT_Map()
				if _bdddgd := d.DecodeElement(_dggag, &_cfcfb); _bdddgd != nil {
					return _bdddgd
				}
				_cbefde.Map = append(_cbefde.Map, _dggag)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004da\u0070\u0049\u006e\u0066\u006f\u0020\u0025\u0076", _cfcfb.Name)
				if _fbcbde := d.Skip(); _fbcbde != nil {
					return _fbcbde
				}
			}
		case _a.EndElement:
			break _ddggbg
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CalculatedMembers and its children, prefixing error messages with path
func (_cffbcg *CT_CalculatedMembers) ValidateWithPath(path string) error {
	for _agg, _fgdb := range _cffbcg.CalculatedMember {
		if _gfcg := _fgdb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002fCa\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u005b\u0025\u0064\u005d", path, _agg)); _gfcg != nil {
			return _gfcg
		}
	}
	return nil
}
func (_fgaca ST_TableStyleType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fgaca.String(), start)
}

const (
	ST_OleUpdateUnset            ST_OleUpdate = 0
	ST_OleUpdateOLEUPDATE_ALWAYS ST_OleUpdate = 1
	ST_OleUpdateOLEUPDATE_ONCALL ST_OleUpdate = 2
)

// Validate validates the CT_Dialogsheet and its children
func (_aeba *CT_Dialogsheet) Validate() error {
	return _aeba.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074")
}
func (_dabdfg ST_VolDepType) String() string {
	switch _dabdfg {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061"
	case 2:
		return "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073"
	}
	return ""
}

// Validate validates the CT_CellXfs and its children
func (_ccef *CT_CellXfs) Validate() error {
	return _ccef.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0058\u0066\u0073")
}

// Validate validates the CT_Parameters and its children
func (_dfgdf *CT_Parameters) Validate() error {
	return _dfgdf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073")
}
func (_ebgbb *CT_QueryCache) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ebgbb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ebgbb.CountAttr)})
	}
	e.EncodeToken(start)
	_aagdb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079"}}
	for _, _efccf := range _ebgbb.Query {
		e.EncodeElement(_efccf, _aagdb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fbbbc *CT_Xf) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eebdc := range start.Attr {
		if _eebdc.Name.Local == "\u0061p\u0070\u006c\u0079\u0046\u006f\u006et" {
			_ffcbab, _fcdeb := _f.ParseBool(_eebdc.Value)
			if _fcdeb != nil {
				return _fcdeb
			}
			_fbbbc.ApplyFontAttr = &_ffcbab
			continue
		}
		if _eebdc.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_ccfaa, _fdbeec := _f.ParseUint(_eebdc.Value, 10, 32)
			if _fdbeec != nil {
				return _fdbeec
			}
			_bcbfgb := uint32(_ccfaa)
			_fbbbc.NumFmtIdAttr = &_bcbfgb
			continue
		}
		if _eebdc.Name.Local == "\u0061p\u0070\u006c\u0079\u0046\u0069\u006cl" {
			_fadgb, _bfgbd := _f.ParseBool(_eebdc.Value)
			if _bfgbd != nil {
				return _bfgbd
			}
			_fbbbc.ApplyFillAttr = &_fadgb
			continue
		}
		if _eebdc.Name.Local == "\u0066\u0069\u006c\u006c\u0049\u0064" {
			_cegcc, _gbdccca := _f.ParseUint(_eebdc.Value, 10, 32)
			if _gbdccca != nil {
				return _gbdccca
			}
			_cacfd := uint32(_cegcc)
			_fbbbc.FillIdAttr = &_cacfd
			continue
		}
		if _eebdc.Name.Local == "\u0078\u0066\u0049\u0064" {
			_ffcdbf, _cfagf := _f.ParseUint(_eebdc.Value, 10, 32)
			if _cfagf != nil {
				return _cfagf
			}
			_gddff := uint32(_ffcdbf)
			_fbbbc.XfIdAttr = &_gddff
			continue
		}
		if _eebdc.Name.Local == "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078" {
			_babbb, _cgade := _f.ParseBool(_eebdc.Value)
			if _cgade != nil {
				return _cgade
			}
			_fbbbc.QuotePrefixAttr = &_babbb
			continue
		}
		if _eebdc.Name.Local == "p\u0069\u0076\u006f\u0074\u0042\u0075\u0074\u0074\u006f\u006e" {
			_fbfcf, _cabegb := _f.ParseBool(_eebdc.Value)
			if _cabegb != nil {
				return _cabegb
			}
			_fbbbc.PivotButtonAttr = &_fbfcf
			continue
		}
		if _eebdc.Name.Local == "\u0061\u0070\u0070\u006c\u0079\u004e\u0075\u006d\u0062\u0065\u0072\u0046o\u0072\u006d\u0061\u0074" {
			_dcgge, _dfcfa := _f.ParseBool(_eebdc.Value)
			if _dfcfa != nil {
				return _dfcfa
			}
			_fbbbc.ApplyNumberFormatAttr = &_dcgge
			continue
		}
		if _eebdc.Name.Local == "\u0066\u006f\u006e\u0074\u0049\u0064" {
			_ddbaf, _dddece := _f.ParseUint(_eebdc.Value, 10, 32)
			if _dddece != nil {
				return _dddece
			}
			_gdfga := uint32(_ddbaf)
			_fbbbc.FontIdAttr = &_gdfga
			continue
		}
		if _eebdc.Name.Local == "\u0062\u006f\u0072\u0064\u0065\u0072\u0049\u0064" {
			_fbbfcee, _cefac := _f.ParseUint(_eebdc.Value, 10, 32)
			if _cefac != nil {
				return _cefac
			}
			_bcceac := uint32(_fbbfcee)
			_fbbbc.BorderIdAttr = &_bcceac
			continue
		}
		if _eebdc.Name.Local == "a\u0070\u0070\u006c\u0079\u0042\u006f\u0072\u0064\u0065\u0072" {
			_gbafe, _bcbcg := _f.ParseBool(_eebdc.Value)
			if _bcbcg != nil {
				return _bcbcg
			}
			_fbbbc.ApplyBorderAttr = &_gbafe
			continue
		}
		if _eebdc.Name.Local == "\u0061\u0070\u0070\u006c\u0079\u0041\u006c\u0069\u0067n\u006d\u0065\u006e\u0074" {
			_gabacc, _feeb := _f.ParseBool(_eebdc.Value)
			if _feeb != nil {
				return _feeb
			}
			_fbbbc.ApplyAlignmentAttr = &_gabacc
			continue
		}
		if _eebdc.Name.Local == "\u0061p\u0070l\u0079\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e" {
			_bbeecf, _aafgc := _f.ParseBool(_eebdc.Value)
			if _aafgc != nil {
				return _aafgc
			}
			_fbbbc.ApplyProtectionAttr = &_bbeecf
			continue
		}
	}
_gbfbc:
	for {
		_cgedf, _dfaefc := d.Token()
		if _dfaefc != nil {
			return _dfaefc
		}
		switch _adbgg := _cgedf.(type) {
		case _a.StartElement:
			switch _adbgg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}:
				_fbbbc.Alignment = NewCT_CellAlignment()
				if _dcabe := d.DecodeElement(_fbbbc.Alignment, &_adbgg); _dcabe != nil {
					return _dcabe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_fbbbc.Protection = NewCT_CellProtection()
				if _eacge := d.DecodeElement(_fbbbc.Protection, &_adbgg); _eacge != nil {
					return _eacge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbbbc.ExtLst = NewCT_ExtensionList()
				if _ebbbe := d.DecodeElement(_fbbbc.ExtLst, &_adbgg); _ebbbe != nil {
					return _ebbbe
				}
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u0054\u005fX\u0066 \u0025\u0076", _adbgg.Name)
				if _ebccf := d.Skip(); _ebccf != nil {
					return _ebccf
				}
			}
		case _a.EndElement:
			break _gbfbc
		case _a.CharData:
		}
	}
	return nil
}

type CT_AutoFilter struct {

	// Cell or Range Reference
	RefAttr *string

	// AutoFilter Column
	FilterColumn []*CT_FilterColumn

	// Sort State for Auto Filter
	SortState *CT_SortState
	ExtLst    *CT_ExtensionList
}

func NewCT_FunctionGroups() *CT_FunctionGroups { _ecggg := &CT_FunctionGroups{}; return _ecggg }

// ValidateWithPath validates the CT_RPrElt and its children, prefixing error messages with path
func (_gebbe *CT_RPrElt) ValidateWithPath(path string) error {
	if _gebbe.RFont != nil {
		if _cbbbb := _gebbe.RFont.ValidateWithPath(path + "\u002f\u0052\u0046\u006f\u006e\u0074"); _cbbbb != nil {
			return _cbbbb
		}
	}
	if _gebbe.Charset != nil {
		if _daage := _gebbe.Charset.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0073\u0065\u0074"); _daage != nil {
			return _daage
		}
	}
	if _gebbe.Family != nil {
		if _agdga := _gebbe.Family.ValidateWithPath(path + "\u002fF\u0061\u006d\u0069\u006c\u0079"); _agdga != nil {
			return _agdga
		}
	}
	if _gebbe.B != nil {
		if _bdbeg := _gebbe.B.ValidateWithPath(path + "\u002f\u0042"); _bdbeg != nil {
			return _bdbeg
		}
	}
	if _gebbe.I != nil {
		if _cdbbe := _gebbe.I.ValidateWithPath(path + "\u002f\u0049"); _cdbbe != nil {
			return _cdbbe
		}
	}
	if _gebbe.Strike != nil {
		if _caade := _gebbe.Strike.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u006b\u0065"); _caade != nil {
			return _caade
		}
	}
	if _gebbe.Outline != nil {
		if _gcdgg := _gebbe.Outline.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065"); _gcdgg != nil {
			return _gcdgg
		}
	}
	if _gebbe.Shadow != nil {
		if _bdcfcd := _gebbe.Shadow.ValidateWithPath(path + "\u002fS\u0068\u0061\u0064\u006f\u0077"); _bdcfcd != nil {
			return _bdcfcd
		}
	}
	if _gebbe.Condense != nil {
		if _dcfac := _gebbe.Condense.ValidateWithPath(path + "\u002fC\u006f\u006e\u0064\u0065\u006e\u0073e"); _dcfac != nil {
			return _dcfac
		}
	}
	if _gebbe.Extend != nil {
		if _ebbbf := _gebbe.Extend.ValidateWithPath(path + "\u002fE\u0078\u0074\u0065\u006e\u0064"); _ebbbf != nil {
			return _ebbbf
		}
	}
	if _gebbe.Color != nil {
		if _fbfac := _gebbe.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _fbfac != nil {
			return _fbfac
		}
	}
	if _gebbe.Sz != nil {
		if _aageee := _gebbe.Sz.ValidateWithPath(path + "\u002f\u0053\u007a"); _aageee != nil {
			return _aageee
		}
	}
	if _gebbe.U != nil {
		if _fgged := _gebbe.U.ValidateWithPath(path + "\u002f\u0055"); _fgged != nil {
			return _fgged
		}
	}
	if _gebbe.VertAlign != nil {
		if _cdfbb := _gebbe.VertAlign.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"); _cdfbb != nil {
			return _cdfbb
		}
	}
	if _gebbe.Scheme != nil {
		if _ebggc := _gebbe.Scheme.ValidateWithPath(path + "\u002fS\u0063\u0068\u0065\u006d\u0065"); _ebggc != nil {
			return _ebggc
		}
	}
	return nil
}
func NewCT_ChartFormat() *CT_ChartFormat {
	_gceg := &CT_ChartFormat{}
	_gceg.PivotArea = NewCT_PivotArea()
	return _gceg
}

type CT_CalcChain struct {

	// Cell
	C      []*CT_CalcCell
	ExtLst *CT_ExtensionList
}

func (_dfcg *CT_CellWatches) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_acfd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003ac\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068"}}
	for _, _aaebg := range _dfcg.CellWatch {
		e.EncodeElement(_aaebg, _acfd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_FutureMetadata() *CT_FutureMetadata { _bccfd := &CT_FutureMetadata{}; return _bccfd }
func (_gbedb *ST_Axis) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gbedb = 0
	case "\u0061x\u0069\u0073\u0052\u006f\u0077":
		*_gbedb = 1
	case "\u0061x\u0069\u0073\u0043\u006f\u006c":
		*_gbedb = 2
	case "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065":
		*_gbedb = 3
	case "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073":
		*_gbedb = 4
	}
	return nil
}
func (_cbgbd *CT_PageBreak) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cbgbd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbd.CountAttr)})
	}
	if _cbgbd.ManualBreakCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061n\u0075\u0061\u006cB\u0072\u0065\u0061\u006b\u0043\u006f\u0075\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cbgbd.ManualBreakCountAttr)})
	}
	e.EncodeToken(start)
	if _cbgbd.Brk != nil {
		_afced := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0062\u0072\u006b"}}
		for _, _gbgaa := range _cbgbd.Brk {
			e.EncodeElement(_gbgaa, _afced)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Top10 and its children, prefixing error messages with path
func (_dcbfa *CT_Top10) ValidateWithPath(path string) error { return nil }
func (_dfebb *CT_Font) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _dfebb.Name != nil {
		_dgebe := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u006e\u0061\u006d\u0065"}}
		for _, _ffgd := range _dfebb.Name {
			e.EncodeElement(_ffgd, _dgebe)
		}
	}
	if _dfebb.Charset != nil {
		_gcebee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0073\u0065\u0074"}}
		for _, _ebfae := range _dfebb.Charset {
			e.EncodeElement(_ebfae, _gcebee)
		}
	}
	if _dfebb.Family != nil {
		_eadac := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0066\u0061\u006d\u0069\u006cy"}}
		for _, _efdf := range _dfebb.Family {
			e.EncodeElement(_efdf, _eadac)
		}
	}
	if _dfebb.B != nil {
		_dgee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _aedd := range _dfebb.B {
			e.EncodeElement(_aedd, _dgee)
		}
	}
	if _dfebb.I != nil {
		_ffccg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0069"}}
		for _, _abdbf := range _dfebb.I {
			e.EncodeElement(_abdbf, _ffccg)
		}
	}
	if _dfebb.Strike != nil {
		_ggbef := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0073\u0074\u0072\u0069\u006be"}}
		for _, _ecbdb := range _dfebb.Strike {
			e.EncodeElement(_ecbdb, _ggbef)
		}
	}
	if _dfebb.Outline != nil {
		_dffc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		for _, _afgd := range _dfebb.Outline {
			e.EncodeElement(_afgd, _dffc)
		}
	}
	if _dfebb.Shadow != nil {
		_ggfda := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0073\u0068\u0061\u0064\u006fw"}}
		for _, _bbeea := range _dfebb.Shadow {
			e.EncodeElement(_bbeea, _ggfda)
		}
	}
	if _dfebb.Condense != nil {
		_ccaaf := _a.StartElement{Name: _a.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}}
		for _, _gddgb := range _dfebb.Condense {
			e.EncodeElement(_gddgb, _ccaaf)
		}
	}
	if _dfebb.Extend != nil {
		_adfe := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u0065\u006ed"}}
		for _, _dgcbf := range _dfebb.Extend {
			e.EncodeElement(_dgcbf, _adfe)
		}
	}
	if _dfebb.Color != nil {
		_adbdb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		for _, _gdfgc := range _dfebb.Color {
			e.EncodeElement(_gdfgc, _adbdb)
		}
	}
	if _dfebb.Sz != nil {
		_ggcbag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u007a"}}
		for _, _cegc := range _dfebb.Sz {
			e.EncodeElement(_cegc, _ggcbag)
		}
	}
	if _dfebb.U != nil {
		_ffdea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0075"}}
		for _, _bbbb := range _dfebb.U {
			e.EncodeElement(_bbbb, _ffdea)
		}
	}
	if _dfebb.VertAlign != nil {
		_fdaee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003av\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"}}
		for _, _ffffg := range _dfebb.VertAlign {
			e.EncodeElement(_ffffg, _fdaee)
		}
	}
	if _dfebb.Scheme != nil {
		_cadb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0073\u0063\u0068\u0065\u006de"}}
		for _, _fcegc := range _dfebb.Scheme {
			e.EncodeElement(_fcegc, _cadb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aede *CT_MRUColors) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_deed := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	for _, _dcagc := range _aede.Color {
		e.EncodeElement(_dcagc, _deed)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TableStyle and its children, prefixing error messages with path
func (_gfgbge *CT_TableStyle) ValidateWithPath(path string) error {
	for _agdeb, _ecdee := range _gfgbge.TableStyleElement {
		if _aecdd := _ecdee.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065E\u006c\u0065\u006d\u0065\u006e\u0074\u005b\u0025\u0064\u005d", path, _agdeb)); _aecdd != nil {
			return _aecdd
		}
	}
	return nil
}
func (_ecbaec *Dialogsheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ecbaec.CT_Dialogsheet = *NewCT_Dialogsheet()
_cbfdc:
	for {
		_edgeb, _eagdb := d.Token()
		if _eagdb != nil {
			return _eagdb
		}
		switch _abbfe := _edgeb.(type) {
		case _a.StartElement:
			switch _abbfe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_ecbaec.SheetPr = NewCT_SheetPr()
				if _efeea := d.DecodeElement(_ecbaec.SheetPr, &_abbfe); _efeea != nil {
					return _efeea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_ecbaec.SheetViews = NewCT_SheetViews()
				if _ggbbcf := d.DecodeElement(_ecbaec.SheetViews, &_abbfe); _ggbbcf != nil {
					return _ggbbcf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_ecbaec.SheetFormatPr = NewCT_SheetFormatPr()
				if _dafee := d.DecodeElement(_ecbaec.SheetFormatPr, &_abbfe); _dafee != nil {
					return _dafee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_ecbaec.SheetProtection = NewCT_SheetProtection()
				if _fadcb := d.DecodeElement(_ecbaec.SheetProtection, &_abbfe); _fadcb != nil {
					return _fadcb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_ecbaec.CustomSheetViews = NewCT_CustomSheetViews()
				if _fadbee := d.DecodeElement(_ecbaec.CustomSheetViews, &_abbfe); _fadbee != nil {
					return _fadbee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_ecbaec.PrintOptions = NewCT_PrintOptions()
				if _aefgb := d.DecodeElement(_ecbaec.PrintOptions, &_abbfe); _aefgb != nil {
					return _aefgb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_ecbaec.PageMargins = NewCT_PageMargins()
				if _dbaec := d.DecodeElement(_ecbaec.PageMargins, &_abbfe); _dbaec != nil {
					return _dbaec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_ecbaec.PageSetup = NewCT_PageSetup()
				if _efbfgg := d.DecodeElement(_ecbaec.PageSetup, &_abbfe); _efbfgg != nil {
					return _efbfgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_ecbaec.HeaderFooter = NewCT_HeaderFooter()
				if _gcbda := d.DecodeElement(_ecbaec.HeaderFooter, &_abbfe); _gcbda != nil {
					return _gcbda
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_ecbaec.Drawing = NewCT_Drawing()
				if _dadcb := d.DecodeElement(_ecbaec.Drawing, &_abbfe); _dadcb != nil {
					return _dadcb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_ecbaec.LegacyDrawing = NewCT_LegacyDrawing()
				if _gabfcb := d.DecodeElement(_ecbaec.LegacyDrawing, &_abbfe); _gabfcb != nil {
					return _gabfcb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_ecbaec.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _bbeab := d.DecodeElement(_ecbaec.LegacyDrawingHF, &_abbfe); _bbeab != nil {
					return _bbeab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_ecbaec.DrawingHF = NewCT_DrawingHF()
				if _dbdea := d.DecodeElement(_ecbaec.DrawingHF, &_abbfe); _dbdea != nil {
					return _dbdea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_ecbaec.OleObjects = NewCT_OleObjects()
				if _gcacd := d.DecodeElement(_ecbaec.OleObjects, &_abbfe); _gcacd != nil {
					return _gcacd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_ecbaec.Controls = NewCT_Controls()
				if _fabbc := d.DecodeElement(_ecbaec.Controls, &_abbfe); _fabbc != nil {
					return _fabbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecbaec.ExtLst = NewCT_ExtensionList()
				if _bcgaf := d.DecodeElement(_ecbaec.ExtLst, &_abbfe); _bcgaf != nil {
					return _bcgaf
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0044\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _abbfe.Name)
				if _bdabfb := d.Skip(); _bdabfb != nil {
					return _bdabfb
				}
			}
		case _a.EndElement:
			break _cbfdc
		case _a.CharData:
		}
	}
	return nil
}

type CT_TableParts struct {

	// Count
	CountAttr *uint32

	// Table Part
	TablePart []*CT_TablePart
}

// ValidateWithPath validates the CT_MetadataType and its children, prefixing error messages with path
func (_bcga *CT_MetadataType) ValidateWithPath(path string) error { return nil }

type CT_Row struct {

	// Row Index
	RAttr *uint32

	// Spans
	SpansAttr *ST_CellSpans

	// Style Index
	SAttr *uint32

	// Custom Format
	CustomFormatAttr *bool

	// Row Height
	HtAttr *float64

	// Hidden
	HiddenAttr *bool

	// Custom Height
	CustomHeightAttr *bool

	// Outline Level
	OutlineLevelAttr *uint8

	// Collapsed
	CollapsedAttr *bool

	// Thick Top Border
	ThickTopAttr *bool

	// Thick Bottom
	ThickBotAttr *bool

	// Show Phonetic
	PhAttr *bool

	// Cell
	C []*CT_Cell

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_Filters and its children
func (_efffb *CT_Filters) Validate() error {
	return _efffb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}
func (_befc *CT_RevisionCellChange) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_befc.Nc = NewCT_Cell()
	for _, _gaecgf := range start.Attr {
		if _gaecgf.Name.Local == "\u006f\u006c\u0064P\u0068" {
			_cedgf, _dadbgf := _f.ParseBool(_gaecgf.Value)
			if _dadbgf != nil {
				return _dadbgf
			}
			_befc.OldPhAttr = &_cedgf
			continue
		}
		if _gaecgf.Name.Local == "\u0065\u006e\u0064\u004ffL\u0069\u0073\u0074\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0055\u0070\u0064\u0061t\u0065" {
			_gaebf, _bfdfc := _f.ParseBool(_gaecgf.Value)
			if _bfdfc != nil {
				return _bfdfc
			}
			_befc.EndOfListFormulaUpdateAttr = &_gaebf
			continue
		}
		if _gaecgf.Name.Local == "\u006f\u0064\u0078\u0066" {
			_gegfg, _acfaae := _f.ParseBool(_gaecgf.Value)
			if _acfaae != nil {
				return _acfaae
			}
			_befc.OdxfAttr = &_gegfg
			continue
		}
		if _gaecgf.Name.Local == "\u0073" {
			_cbfdge, _dfcce := _f.ParseBool(_gaecgf.Value)
			if _dfcce != nil {
				return _dfcce
			}
			_befc.SAttr = &_cbfdge
			continue
		}
		if _gaecgf.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_dddcg, _bgccea := _f.ParseUint(_gaecgf.Value, 10, 32)
			if _bgccea != nil {
				return _bgccea
			}
			_fbde := uint32(_dddcg)
			_befc.NumFmtIdAttr = &_fbde
			continue
		}
		if _gaecgf.Name.Local == "\u006f\u006c\u0064\u0051\u0075\u006f\u0074\u0065\u0050r\u0065\u0066\u0069\u0078" {
			_bbdcc, _cdgad := _f.ParseBool(_gaecgf.Value)
			if _cdgad != nil {
				return _cdgad
			}
			_befc.OldQuotePrefixAttr = &_bbdcc
			continue
		}
		if _gaecgf.Name.Local == "\u0070\u0068" {
			_agbeef, _fadbga := _f.ParseBool(_gaecgf.Value)
			if _fadbga != nil {
				return _fadbga
			}
			_befc.PhAttr = &_agbeef
			continue
		}
		if _gaecgf.Name.Local == "\u0073\u0049\u0064" {
			_ccdbc, _cbgbdg := _f.ParseUint(_gaecgf.Value, 10, 32)
			if _cbgbdg != nil {
				return _cbgbdg
			}
			_befc.SIdAttr = uint32(_ccdbc)
			continue
		}
		if _gaecgf.Name.Local == "\u0078\u0066\u0044x\u0066" {
			_ffbcb, _aagda := _f.ParseBool(_gaecgf.Value)
			if _aagda != nil {
				return _aagda
			}
			_befc.XfDxfAttr = &_ffbcb
			continue
		}
		if _gaecgf.Name.Local == "\u0064\u0078\u0066" {
			_daaa, _bcgac := _f.ParseBool(_gaecgf.Value)
			if _bcgac != nil {
				return _bcgac
			}
			_befc.DxfAttr = &_daaa
			continue
		}
		if _gaecgf.Name.Local == "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078" {
			_edfge, _eagab := _f.ParseBool(_gaecgf.Value)
			if _eagab != nil {
				return _eagab
			}
			_befc.QuotePrefixAttr = &_edfge
			continue
		}
		if _gaecgf.Name.Local == "\u0072\u0049\u0064" {
			_dcccc, _daecc := _f.ParseUint(_gaecgf.Value, 10, 32)
			if _daecc != nil {
				return _daecc
			}
			_gdbca := uint32(_dcccc)
			_befc.RIdAttr = &_gdbca
			continue
		}
		if _gaecgf.Name.Local == "\u0075\u0061" {
			_dbcce, _dccag := _f.ParseBool(_gaecgf.Value)
			if _dccag != nil {
				return _dccag
			}
			_befc.UaAttr = &_dbcce
			continue
		}
		if _gaecgf.Name.Local == "\u0072\u0061" {
			_febbd, _cabgc := _f.ParseBool(_gaecgf.Value)
			if _cabgc != nil {
				return _cabgc
			}
			_befc.RaAttr = &_febbd
			continue
		}
	}
_dgaac:
	for {
		_begfg, _daefd := d.Token()
		if _daefd != nil {
			return _daefd
		}
		switch _eggegc := _begfg.(type) {
		case _a.StartElement:
			switch _eggegc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0063"}:
				_befc.Oc = NewCT_Cell()
				if _gfgbg := d.DecodeElement(_befc.Oc, &_eggegc); _gfgbg != nil {
					return _gfgbg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0063"}:
				if _ddeff := d.DecodeElement(_befc.Nc, &_eggegc); _ddeff != nil {
					return _ddeff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0064\u0078\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0064\u0078\u0066"}:
				_befc.Odxf = NewCT_Dxf()
				if _beef := d.DecodeElement(_befc.Odxf, &_eggegc); _beef != nil {
					return _beef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0064\u0078\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0064\u0078\u0066"}:
				_befc.Ndxf = NewCT_Dxf()
				if _dabaac := d.DecodeElement(_befc.Ndxf, &_eggegc); _dabaac != nil {
					return _dabaac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_befc.ExtLst = NewCT_ExtensionList()
				if _gcedc := d.DecodeElement(_befc.ExtLst, &_eggegc); _gcedc != nil {
					return _gcedc
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0043\u0065\u006c\u006c\u0043\u0068\u0061\u006e\u0067\u0065\u0020\u0025\u0076", _eggegc.Name)
				if _gacgeg := d.Skip(); _gacgeg != nil {
					return _gacgeg
				}
			}
		case _a.EndElement:
			break _dgaac
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_Parameter() *CT_Parameter { _dbaeg := &CT_Parameter{}; return _dbaeg }

// ValidateWithPath validates the CT_Consolidation and its children, prefixing error messages with path
func (_aeac *CT_Consolidation) ValidateWithPath(path string) error {
	if _aeac.Pages != nil {
		if _agabb := _aeac.Pages.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0073"); _agabb != nil {
			return _agabb
		}
	}
	if _bfcf := _aeac.RangeSets.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073"); _bfcf != nil {
		return _bfcf
	}
	return nil
}

// Validate validates the CT_QueryTableField and its children
func (_gdacc *CT_QueryTableField) Validate() error {
	return _gdacc.ValidateWithPath("\u0043T\u005fQ\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064")
}

// ValidateWithPath validates the CT_CellWatches and its children, prefixing error messages with path
func (_gfeg *CT_CellWatches) ValidateWithPath(path string) error {
	for _fcggb, _fdd := range _gfeg.CellWatch {
		if _begf := _fdd.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0043\u0065\u006cl\u0057\u0061\u0074\u0063\u0068\u005b\u0025\u0064\u005d", path, _fcggb)); _begf != nil {
			return _begf
		}
	}
	return nil
}
func (_eggbb *CT_CellXfs) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afegb := range start.Attr {
		if _afegb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gbgd, _fdec := _f.ParseUint(_afegb.Value, 10, 32)
			if _fdec != nil {
				return _fdec
			}
			_ecgfb := uint32(_gbgd)
			_eggbb.CountAttr = &_ecgfb
			continue
		}
	}
_gceb:
	for {
		_acece, _fgeg := d.Token()
		if _fgeg != nil {
			return _fgeg
		}
		switch _aff := _acece.(type) {
		case _a.StartElement:
			switch _aff.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}:
				_gddd := NewCT_Xf()
				if _fdggf := d.DecodeElement(_gddd, &_aff); _fdggf != nil {
					return _fdggf
				}
				_eggbb.Xf = append(_eggbb.Xf, _gddd)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u0065\u006c\u006c\u0058\u0066\u0073\u0020\u0025\u0076", _aff.Name)
				if _fgcbe := d.Skip(); _fgcbe != nil {
					return _fgcbe
				}
			}
		case _a.EndElement:
			break _gceb
		case _a.CharData:
		}
	}
	return nil
}
func (_dageg *CT_PageSetUpPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbfdd := range start.Attr {
		if _fbfdd.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073" {
			_gbeegf, _dbggd := _f.ParseBool(_fbfdd.Value)
			if _dbggd != nil {
				return _dbggd
			}
			_dageg.AutoPageBreaksAttr = &_gbeegf
			continue
		}
		if _fbfdd.Name.Local == "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e" {
			_ddege, _gddcf := _f.ParseBool(_fbfdd.Value)
			if _gddcf != nil {
				return _gddcf
			}
			_dageg.FitToPageAttr = &_ddege
			continue
		}
	}
	for {
		_eeccd, _cafdc := d.Token()
		if _cafdc != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072:\u0020\u0025\u0073", _cafdc)
		}
		if _cabgb, _abee := _eeccd.(_a.EndElement); _abee && _cabgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dddeff ST_BorderStyle) ValidateWithPath(path string) error {
	switch _dddeff {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dddeff))
	}
	return nil
}
func (_cege *CT_CalcChain) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_ggfce := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0063"}}
	for _, _aaea := range _cege.C {
		e.EncodeElement(_aaea, _ggfce)
	}
	if _cege.ExtLst != nil {
		_fadbe := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cege.ExtLst, _fadbe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type Users struct{ CT_Users }

func (_abagcb *CT_QueryCache) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cedba := range start.Attr {
		if _cedba.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebecc, _gfgfc := _f.ParseUint(_cedba.Value, 10, 32)
			if _gfgfc != nil {
				return _gfgfc
			}
			_afecf := uint32(_ebecc)
			_abagcb.CountAttr = &_afecf
			continue
		}
	}
_eebbe:
	for {
		_ccfcg, _cbadc := d.Token()
		if _cbadc != nil {
			return _cbadc
		}
		switch _begff := _ccfcg.(type) {
		case _a.StartElement:
			switch _begff.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065r\u0079"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065r\u0079"}:
				_ceac := NewCT_Query()
				if _fagdd := d.DecodeElement(_ceac, &_begff); _fagdd != nil {
					return _fagdd
				}
				_abagcb.Query = append(_abagcb.Query, _ceac)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051u\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065 \u0025\u0076", _begff.Name)
				if _fgbcgd := d.Skip(); _fgbcgd != nil {
					return _fgbcgd
				}
			}
		case _a.EndElement:
			break _eebbe
		case _a.CharData:
		}
	}
	return nil
}

type ST_FormatAction byte

func (_ddefb *ST_Visibility) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_accggg, _bcecfg := d.Token()
	if _bcecfg != nil {
		return _bcecfg
	}
	if _aebacf, _fbdbg := _accggg.(_a.EndElement); _fbdbg && _aebacf.Name == start.Name {
		*_ddefb = 1
		return nil
	}
	if _gefcg, _fgbfe := _accggg.(_a.CharData); !_fgbfe {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _accggg)
	} else {
		switch string(_gefcg) {
		case "":
			*_ddefb = 0
		case "\u0076i\u0073\u0069\u0062\u006c\u0065":
			*_ddefb = 1
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_ddefb = 2
		case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
			*_ddefb = 3
		}
	}
	_accggg, _bcecfg = d.Token()
	if _bcecfg != nil {
		return _bcecfg
	}
	if _caffg, _cedeea := _accggg.(_a.EndElement); _cedeea && _caffg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _accggg)
}
func (_fgacbg *CT_TablePart) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ccfbd := range start.Attr {
		if _ccfbd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ccfbd.Name.Local == "\u0069\u0064" || _ccfbd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ccfbd.Name.Local == "\u0069\u0064" {
			_gedce, _gbbfbe := _ccfbd.Value, error(nil)
			if _gbbfbe != nil {
				return _gbbfbe
			}
			_fgacbg.IdAttr = _gedce
			continue
		}
	}
	for {
		_bdgdc, _bcabbg := d.Token()
		if _bcabbg != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061b\u006c\u0065\u0050\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _bcabbg)
		}
		if _fagcc, _aecbf := _bdgdc.(_a.EndElement); _aecbf && _fagcc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adfd *CT_DataBar) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_adfd.Color = NewCT_Color()
	for _, _bfabc := range start.Attr {
		if _bfabc.Name.Local == "\u006di\u006e\u004c\u0065\u006e\u0067\u0074h" {
			_aeea, _edede := _f.ParseUint(_bfabc.Value, 10, 32)
			if _edede != nil {
				return _edede
			}
			_bbada := uint32(_aeea)
			_adfd.MinLengthAttr = &_bbada
			continue
		}
		if _bfabc.Name.Local == "\u006da\u0078\u004c\u0065\u006e\u0067\u0074h" {
			_abda, _bfgaa := _f.ParseUint(_bfabc.Value, 10, 32)
			if _bfgaa != nil {
				return _bfgaa
			}
			_afceg := uint32(_abda)
			_adfd.MaxLengthAttr = &_afceg
			continue
		}
		if _bfabc.Name.Local == "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e" {
			_accb, _fgagd := _f.ParseBool(_bfabc.Value)
			if _fgagd != nil {
				return _fgagd
			}
			_adfd.ShowValueAttr = &_accb
			continue
		}
	}
_bebe:
	for {
		_aagfe, _gdbaa := d.Token()
		if _gdbaa != nil {
			return _gdbaa
		}
		switch _edffc := _aagfe.(type) {
		case _a.StartElement:
			switch _edffc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_bfae := NewCT_Cfvo()
				if _fdebd := d.DecodeElement(_bfae, &_edffc); _fdebd != nil {
					return _fdebd
				}
				_adfd.Cfvo = append(_adfd.Cfvo, _bfae)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				if _gadbg := d.DecodeElement(_adfd.Color, &_edffc); _gadbg != nil {
					return _gadbg
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0061\u0074\u0061\u0042\u0061\u0072\u0020\u0025\u0076", _edffc.Name)
				if _abgba := d.Skip(); _abgba != nil {
					return _abgba
				}
			}
		case _a.EndElement:
			break _bebe
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellWatch and its children, prefixing error messages with path
func (_dcad *CT_CellWatch) ValidateWithPath(path string) error { return nil }

type ST_MdxFunctionType byte

func (_ddfea *CT_UnderlineProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ddfea.ValAttr != ST_UnderlineValuesUnset {
		_bcgbg, _bcaab := _ddfea.ValAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0061\u006c"})
		if _bcaab != nil {
			return _bcaab
		}
		start.Attr = append(start.Attr, _bcgbg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bcbffg *CT_MeasureDimensionMaps) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aggcf := range start.Attr {
		if _aggcf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dcgc, _gaaef := _f.ParseUint(_aggcf.Value, 10, 32)
			if _gaaef != nil {
				return _gaaef
			}
			_aaba := uint32(_dcgc)
			_bcbffg.CountAttr = &_aaba
			continue
		}
	}
_gfadc:
	for {
		_cacdd, _aabdf := d.Token()
		if _aabdf != nil {
			return _aabdf
		}
		switch _bbfcdb := _cacdd.(type) {
		case _a.StartElement:
			switch _bbfcdb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070"}:
				_ggcge := NewCT_MeasureDimensionMap()
				if _gbca := d.DecodeElement(_ggcge, &_bbfcdb); _gbca != nil {
					return _gbca
				}
				_bcbffg.Map = append(_bcbffg.Map, _ggcge)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0044\u0069m\u0065\u006e\u0073\u0069\u006f\u006eM\u0061\u0070\u0073 \u0025\u0076", _bbfcdb.Name)
				if _dfbea := d.Skip(); _dfbea != nil {
					return _dfbea
				}
			}
		case _a.EndElement:
			break _gfadc
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_SheetBackgroundPicture() *CT_SheetBackgroundPicture {
	_gadcg := &CT_SheetBackgroundPicture{}
	return _gadcg
}

// Validate validates the CT_PCDSDTCEntries and its children
func (_dccaf *CT_PCDSDTCEntries) Validate() error {
	return _dccaf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_IgnoredErrors and its children, prefixing error messages with path
func (_bggdff *CT_IgnoredErrors) ValidateWithPath(path string) error {
	for _gacfgg, _ecbeb := range _bggdff.IgnoredError {
		if _fecfd := _ecbeb.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0049gn\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u005b\u0025\u0064\u005d", path, _gacfgg)); _fecfd != nil {
			return _fecfd
		}
	}
	if _bggdff.ExtLst != nil {
		if _cccga := _bggdff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cccga != nil {
			return _cccga
		}
	}
	return nil
}
func (_gcdab ST_SmartTagShow) String() string {
	switch _gcdab {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u006c"
	case 2:
		return "\u006e\u006f\u006e\u0065"
	case 3:
		return "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	}
	return ""
}

// Validate validates the CT_ColorScale and its children
func (_ebfa *CT_ColorScale) Validate() error {
	return _ebfa.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065")
}
func (_deedbc ST_Qualifier) Validate() error { return _deedbc.ValidateWithPath("") }

type CT_TableMissing struct{}

// ValidateWithPath validates the CT_AutoSortScope and its children, prefixing error messages with path
func (_aea *CT_AutoSortScope) ValidateWithPath(path string) error {
	if _ced := _aea.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _ced != nil {
		return _ced
	}
	return nil
}

// Validate validates the CT_CustomChartsheetViews and its children
func (_ecbf *CT_CustomChartsheetViews) Validate() error {
	return _ecbf.ValidateWithPath("\u0043T\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072t\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}
func (_ggbad *CT_Tables) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afabg := range start.Attr {
		if _afabg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bcfdd, _ebfab := _f.ParseUint(_afabg.Value, 10, 32)
			if _ebfab != nil {
				return _ebfab
			}
			_adcc := uint32(_bcfdd)
			_ggbad.CountAttr = &_adcc
			continue
		}
	}
_baeefg:
	for {
		_gafef, _cffdg := d.Token()
		if _cffdg != nil {
			return _cffdg
		}
		switch _bbfbdg := _gafef.(type) {
		case _a.StartElement:
			switch _bbfbdg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_fcfae := NewCT_TableMissing()
				if _gbbca := d.DecodeElement(_fcfae, &_bbfbdg); _gbbca != nil {
					return _gbbca
				}
				_ggbad.M = append(_ggbad.M, _fcfae)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_cbcdb := NewCT_XStringElement()
				if _abade := d.DecodeElement(_cbcdb, &_bbfbdg); _abade != nil {
					return _abade
				}
				_ggbad.S = append(_ggbad.S, _cbcdb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_dccefe := NewCT_Index()
				if _cfbea := d.DecodeElement(_dccefe, &_bbfbdg); _cfbea != nil {
					return _cfbea
				}
				_ggbad.X = append(_ggbad.X, _dccefe)
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0073 \u0025\u0076", _bbfbdg.Name)
				if _bcaegec := d.Skip(); _bcaegec != nil {
					return _bcaegec
				}
			}
		case _a.EndElement:
			break _baeefg
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_XStringElement() *CT_XStringElement { _eeced := &CT_XStringElement{}; return _eeced }

// ValidateWithPath validates the CT_ExternalSheetNames and its children, prefixing error messages with path
func (_gedd *CT_ExternalSheetNames) ValidateWithPath(path string) error {
	for _afge, _afebc := range _gedd.SheetName {
		if _afffb := _afebc.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _afge)); _afffb != nil {
			return _afffb
		}
	}
	return nil
}

type CT_QueryTableFields struct {

	// Column Count
	CountAttr *uint32

	// QueryTable Field
	QueryTableField []*CT_QueryTableField
}

func NewCT_FieldsUsage() *CT_FieldsUsage { _bcdgc := &CT_FieldsUsage{}; return _bcdgc }

// ValidateWithPath validates the CT_XmlCellPr and its children, prefixing error messages with path
func (_gccdb *CT_XmlCellPr) ValidateWithPath(path string) error {
	if _bbaeab := _gccdb.XmlPr.ValidateWithPath(path + "\u002f\u0058\u006d\u006c\u0050\u0072"); _bbaeab != nil {
		return _bbaeab
	}
	if _gccdb.ExtLst != nil {
		if _bedeeb := _gccdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bedeeb != nil {
			return _bedeeb
		}
	}
	return nil
}
func (_cbagf *CT_PageSetup) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cbagf.PaperSizeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae"}, Value: _fc.Sprintf("\u0025\u0076", *_cbagf.PaperSizeAttr)})
	}
	if _cbagf.PaperHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cbagf.PaperHeightAttr)})
	}
	if _cbagf.PaperWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068"}, Value: _fc.Sprintf("\u0025\u0076", *_cbagf.PaperWidthAttr)})
	}
	if _cbagf.ScaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_cbagf.ScaleAttr)})
	}
	if _cbagf.FirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_cbagf.FirstPageNumberAttr)})
	}
	if _cbagf.FitToWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0074\u0054\u006f\u0057\u0069\u0064\u0074\u0068"}, Value: _fc.Sprintf("\u0025\u0076", *_cbagf.FitToWidthAttr)})
	}
	if _cbagf.FitToHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "f\u0069\u0074\u0054\u006f\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cbagf.FitToHeightAttr)})
	}
	if _cbagf.PageOrderAttr != ST_PageOrderUnset {
		_badba, _dggbg := _cbagf.PageOrderAttr.MarshalXMLAttr(_a.Name{Local: "\u0070a\u0067\u0065\u004f\u0072\u0064\u0065r"})
		if _dggbg != nil {
			return _dggbg
		}
		start.Attr = append(start.Attr, _badba)
	}
	if _cbagf.OrientationAttr != ST_OrientationUnset {
		_cbfad, _ddaf := _cbagf.OrientationAttr.MarshalXMLAttr(_a.Name{Local: "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e"})
		if _ddaf != nil {
			return _ddaf
		}
		start.Attr = append(start.Attr, _cbfad)
	}
	if _cbagf.UsePrinterDefaultsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbagf.UsePrinterDefaultsAttr))})
	}
	if _cbagf.BlackAndWhiteAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbagf.BlackAndWhiteAttr))})
	}
	if _cbagf.DraftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072\u0061f\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbagf.DraftAttr))})
	}
	if _cbagf.CellCommentsAttr != ST_CellCommentsUnset {
		_dfbgd, _cddf := _cbagf.CellCommentsAttr.MarshalXMLAttr(_a.Name{Local: "\u0063\u0065\u006cl\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"})
		if _cddf != nil {
			return _cddf
		}
		start.Attr = append(start.Attr, _dfbgd)
	}
	if _cbagf.UseFirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_cbagf.UseFirstPageNumberAttr))})
	}
	if _cbagf.ErrorsAttr != ST_PrintErrorUnset {
		_effbb, _dgedg := _cbagf.ErrorsAttr.MarshalXMLAttr(_a.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0073"})
		if _dgedg != nil {
			return _dgedg
		}
		start.Attr = append(start.Attr, _effbb)
	}
	if _cbagf.HorizontalDpiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069"}, Value: _fc.Sprintf("\u0025\u0076", *_cbagf.HorizontalDpiAttr)})
	}
	if _cbagf.VerticalDpiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069"}, Value: _fc.Sprintf("\u0025\u0076", *_cbagf.VerticalDpiAttr)})
	}
	if _cbagf.CopiesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0070\u0069\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0076", *_cbagf.CopiesAttr)})
	}
	if _cbagf.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_cbagf.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_LegacyDrawing struct{ IdAttr string }

func (_fdga *CT_CellFormula) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdacb := range start.Attr {
		if _cdacb.Name.Local == "\u0074" {
			_fdga.TAttr.UnmarshalXMLAttr(_cdacb)
			continue
		}
		if _cdacb.Name.Local == "\u0061\u0063\u0061" {
			_agbb, _deb := _f.ParseBool(_cdacb.Value)
			if _deb != nil {
				return _deb
			}
			_fdga.AcaAttr = &_agbb
			continue
		}
		if _cdacb.Name.Local == "\u0072\u0065\u0066" {
			_aage, _dbfg := _cdacb.Value, error(nil)
			if _dbfg != nil {
				return _dbfg
			}
			_fdga.RefAttr = &_aage
			continue
		}
		if _cdacb.Name.Local == "\u0064\u0074\u0032\u0044" {
			_adcf, _fgfa := _f.ParseBool(_cdacb.Value)
			if _fgfa != nil {
				return _fgfa
			}
			_fdga.Dt2DAttr = &_adcf
			continue
		}
		if _cdacb.Name.Local == "\u0064\u0074\u0072" {
			_eedd, _efgb := _f.ParseBool(_cdacb.Value)
			if _efgb != nil {
				return _efgb
			}
			_fdga.DtrAttr = &_eedd
			continue
		}
		if _cdacb.Name.Local == "\u0064\u0065\u006c\u0031" {
			_acff, _dfaa := _f.ParseBool(_cdacb.Value)
			if _dfaa != nil {
				return _dfaa
			}
			_fdga.Del1Attr = &_acff
			continue
		}
		if _cdacb.Name.Local == "\u0064\u0065\u006c\u0032" {
			_dgcf, _cac := _f.ParseBool(_cdacb.Value)
			if _cac != nil {
				return _cac
			}
			_fdga.Del2Attr = &_dgcf
			continue
		}
		if _cdacb.Name.Local == "\u0072\u0031" {
			_bcacf, _gdff := _cdacb.Value, error(nil)
			if _gdff != nil {
				return _gdff
			}
			_fdga.R1Attr = &_bcacf
			continue
		}
		if _cdacb.Name.Local == "\u0072\u0032" {
			_ddd, _bbee := _cdacb.Value, error(nil)
			if _bbee != nil {
				return _bbee
			}
			_fdga.R2Attr = &_ddd
			continue
		}
		if _cdacb.Name.Local == "\u0063\u0061" {
			_effb, _aeec := _f.ParseBool(_cdacb.Value)
			if _aeec != nil {
				return _aeec
			}
			_fdga.CaAttr = &_effb
			continue
		}
		if _cdacb.Name.Local == "\u0073\u0069" {
			_befe, _agbg := _f.ParseUint(_cdacb.Value, 10, 32)
			if _agbg != nil {
				return _agbg
			}
			_cdcb := uint32(_befe)
			_fdga.SiAttr = &_cdcb
			continue
		}
		if _cdacb.Name.Local == "\u0062\u0078" {
			_ddba, _dceb := _f.ParseBool(_cdacb.Value)
			if _dceb != nil {
				return _dceb
			}
			_fdga.BxAttr = &_ddba
			continue
		}
	}
	for {
		_fged, _cacc := d.Token()
		if _cacc != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u0065\u006c\u006c\u0046\u006f\u0072\u006d\u0075\u006c\u0061:\u0020\u0025\u0073", _cacc)
		}
		if _aaac, _dgabb := _fged.(_a.CharData); _dgabb {
			_fdga.Content = string(_aaac)
		}
		if _eebaf, _ffcf := _fged.(_a.EndElement); _ffcf && _eebaf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dcfca *CT_ExternalReferences) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_bcdf := _a.StartElement{Name: _a.Name{Local: "m\u0061:\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065"}}
	for _, _dbff := range _dcfca.ExternalReference {
		e.EncodeElement(_dbff, _bcdf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DateTime and its children
func (_abdaa *CT_DateTime) Validate() error {
	return _abdaa.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065")
}
func (_gdgeag ST_SmartTagShow) ValidateWithPath(path string) error {
	switch _gdgeag {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdgeag))
	}
	return nil
}

// Validate validates the CT_GroupLevels and its children
func (_bfgad *CT_GroupLevels) Validate() error {
	return _bfgad.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073")
}
func (_bdegbb ST_FormatAction) ValidateWithPath(path string) error {
	switch _bdegbb {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdegbb))
	}
	return nil
}

// ValidateWithPath validates the MapInfo and its children, prefixing error messages with path
func (_fbaaf *MapInfo) ValidateWithPath(path string) error {
	if _dcdfgd := _fbaaf.CT_MapInfo.ValidateWithPath(path); _dcdfgd != nil {
		return _dcdfgd
	}
	return nil
}
func (_agebae *ST_FormatAction) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fefgg, _fbdgd := d.Token()
	if _fbdgd != nil {
		return _fbdgd
	}
	if _efbeb, _bdagb := _fefgg.(_a.EndElement); _bdagb && _efbeb.Name == start.Name {
		*_agebae = 1
		return nil
	}
	if _acgda, _acbfae := _fefgg.(_a.CharData); !_acbfae {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fefgg)
	} else {
		switch string(_acgda) {
		case "":
			*_agebae = 0
		case "\u0062\u006c\u0061n\u006b":
			*_agebae = 1
		case "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067":
			*_agebae = 2
		case "\u0064\u0072\u0069l\u006c":
			*_agebae = 3
		case "\u0066o\u0072\u006d\u0075\u006c\u0061":
			*_agebae = 4
		}
	}
	_fefgg, _fbdgd = d.Token()
	if _fbdgd != nil {
		return _fbdgd
	}
	if _decaec, _cadgfd := _fefgg.(_a.EndElement); _cadgfd && _decaec.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fefgg)
}
func (_gaagc *CT_ChartsheetProtection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gaagc.PasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_gaagc.PasswordAttr)})
	}
	if _gaagc.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_gaagc.AlgorithmNameAttr)})
	}
	if _gaagc.HashValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _fc.Sprintf("\u0025\u0076", *_gaagc.HashValueAttr)})
	}
	if _gaagc.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _fc.Sprintf("\u0025\u0076", *_gaagc.SaltValueAttr)})
	}
	if _gaagc.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _fc.Sprintf("\u0025\u0076", *_gaagc.SpinCountAttr)})
	}
	if _gaagc.ContentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006e\u0074\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gaagc.ContentAttr))})
	}
	if _gaagc.ObjectsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fb\u006a\u0065\u0063\u0074\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gaagc.ObjectsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_affff *CT_Member) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cgcfdg := range start.Attr {
		if _cgcfdg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_adcbe, _gedadg := _cgcfdg.Value, error(nil)
			if _gedadg != nil {
				return _gedadg
			}
			_affff.NameAttr = _adcbe
			continue
		}
	}
	for {
		_ggeaf, _addgb := d.Token()
		if _addgb != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004d\u0065\u006db\u0065\u0072\u003a\u0020\u0025\u0073", _addgb)
		}
		if _cacdf, _ebcae := _ggeaf.(_a.EndElement); _ebcae && _cacdf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_RevisionCustomView() *CT_RevisionCustomView {
	_daegd := &CT_RevisionCustomView{}
	_daegd.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_daegd.ActionAttr = ST_RevisionAction(1)
	return _daegd
}
func (_defce *CT_LevelGroup) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_defce.GroupMembers = NewCT_GroupMembers()
	for _, _bfabg := range start.Attr {
		if _bfabg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ecbdd, _aebd := _bfabg.Value, error(nil)
			if _aebd != nil {
				return _aebd
			}
			_defce.NameAttr = _ecbdd
			continue
		}
		if _bfabg.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_debdd, _faafe := _bfabg.Value, error(nil)
			if _faafe != nil {
				return _faafe
			}
			_defce.UniqueNameAttr = _debdd
			continue
		}
		if _bfabg.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_gfadg, _gaabf := _bfabg.Value, error(nil)
			if _gaabf != nil {
				return _gaabf
			}
			_defce.CaptionAttr = _gfadg
			continue
		}
		if _bfabg.Name.Local == "\u0075\u006e\u0069q\u0075\u0065\u0050\u0061\u0072\u0065\u006e\u0074" {
			_begdc, _bddcg := _bfabg.Value, error(nil)
			if _bddcg != nil {
				return _bddcg
			}
			_defce.UniqueParentAttr = &_begdc
			continue
		}
		if _bfabg.Name.Local == "\u0069\u0064" {
			_agbbgd, _cdabc := _f.ParseInt(_bfabg.Value, 10, 32)
			if _cdabc != nil {
				return _cdabc
			}
			_aafcc := int32(_agbbgd)
			_defce.IdAttr = &_aafcc
			continue
		}
	}
_cgcg:
	for {
		_bacba, _bdfag := d.Token()
		if _bdfag != nil {
			return _bdfag
		}
		switch _bafdc := _bacba.(type) {
		case _a.StartElement:
			switch _bafdc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}:
				if _ecedf := d.DecodeElement(_defce.GroupMembers, &_bafdc); _ecedf != nil {
					return _ecedf
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004ce\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070 \u0025\u0076", _bafdc.Name)
				if _dbcbf := d.Skip(); _dbcbf != nil {
					return _dbcbf
				}
			}
		case _a.EndElement:
			break _cgcg
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_CalculatedMembers() *CT_CalculatedMembers { _cfbc := &CT_CalculatedMembers{}; return _cfbc }
func (_bbfbe *CT_CustomProperties) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_efef:
	for {
		_cddgg, _cgfce := d.Token()
		if _cgfce != nil {
			return _cgfce
		}
		switch _begfa := _cddgg.(type) {
		case _a.StartElement:
			switch _begfa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}:
				_egbfa := NewCT_CustomProperty()
				if _gadb := d.DecodeElement(_egbfa, &_begfa); _gadb != nil {
					return _gadb
				}
				_bbfbe.CustomPr = append(_bbfbe.CustomPr, _egbfa)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _begfa.Name)
				if _ecbba := d.Skip(); _ecbba != nil {
					return _ecbba
				}
			}
		case _a.EndElement:
			break _efef
		case _a.CharData:
		}
	}
	return nil
}
func (_gabgd *CT_PCDKPI) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _gabgd.UniqueNameAttr)})
	if _gabgd.CaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_gabgd.CaptionAttr)})
	}
	if _gabgd.DisplayFolderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0076", *_gabgd.DisplayFolderAttr)})
	}
	if _gabgd.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_gabgd.MeasureGroupAttr)})
	}
	if _gabgd.ParentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0072\u0065\u006e\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_gabgd.ParentAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006cu\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _gabgd.ValueAttr)})
	if _gabgd.GoalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u006f\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_gabgd.GoalAttr)})
	}
	if _gabgd.StatusAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0061\u0074\u0075\u0073"}, Value: _fc.Sprintf("\u0025\u0076", *_gabgd.StatusAttr)})
	}
	if _gabgd.TrendAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0072\u0065n\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_gabgd.TrendAttr)})
	}
	if _gabgd.WeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u0065\u0069\u0067\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_gabgd.WeightAttr)})
	}
	if _gabgd.TimeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_gabgd.TimeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ffegb *CT_PivotFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ffegb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ffegb.CountAttr)})
	}
	e.EncodeToken(start)
	_addge := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}}
	for _, _cefgf := range _ffegb.PivotField {
		e.EncodeElement(_cefgf, _addge)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_DataConsolidateFunction byte

// ValidateWithPath validates the AG_RevData and its children, prefixing error messages with path
func (_cde *AG_RevData) ValidateWithPath(path string) error { return nil }
func (_gfeb *CT_Cfvo) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_fbd, _gfeae := _gfeb.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _gfeae != nil {
		return _gfeae
	}
	start.Attr = append(start.Attr, _fbd)
	if _gfeb.ValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_gfeb.ValAttr)})
	}
	if _gfeb.GteAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_gfeb.GteAttr))})
	}
	e.EncodeToken(start)
	if _gfeb.ExtLst != nil {
		_eaeg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gfeb.ExtLst, _eaeg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_ConditionalFormatting() *CT_ConditionalFormatting {
	_afed := &CT_ConditionalFormatting{}
	return _afed
}
func (_bdedd *ST_Objects) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bdedd = 0
	case "\u0061\u006c\u006c":
		*_bdedd = 1
	case "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073":
		*_bdedd = 2
	case "\u006e\u006f\u006e\u0065":
		*_bdedd = 3
	}
	return nil
}
func NewCT_BooleanProperty() *CT_BooleanProperty { _aac := &CT_BooleanProperty{}; return _aac }
func (_bcdec ST_SourceType) String() string {
	switch _bcdec {
	case 0:
		return ""
	case 1:
		return "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case 2:
		return "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c"
	case 3:
		return "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"
	case 4:
		return "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"
	}
	return ""
}

type CT_QueryTable struct {

	// QueryTable Name
	NameAttr string

	// First Row Column Titles
	HeadersAttr *bool

	// Row Numbers
	RowNumbersAttr *bool

	// Disable Refresh
	DisableRefreshAttr *bool

	// Background Refresh
	BackgroundRefreshAttr *bool

	// First Background Refresh
	FirstBackgroundRefreshAttr *bool

	// Refresh On Load
	RefreshOnLoadAttr *bool

	// Grow Shrink Type
	GrowShrinkTypeAttr ST_GrowShrinkType

	// Fill Adjacent Formulas
	FillFormulasAttr *bool

	// Remove Data On Save
	RemoveDataOnSaveAttr *bool

	// Disable Edit
	DisableEditAttr *bool

	// Preserve Formatting On Refresh
	PreserveFormattingAttr *bool

	// Adjust Column Width On Refresh
	AdjustColumnWidthAttr *bool

	// Intermediate
	IntermediateAttr *bool

	// Connection Id
	ConnectionIdAttr uint32

	// QueryTable Refresh Information
	QueryTableRefresh *CT_QueryTableRefresh

	// Future Feature Data Storage Area
	ExtLst                      *CT_ExtensionList
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}
type CT_ExternalBook struct {
	IdAttr string

	// Supporting Workbook Sheet Names
	SheetNames *CT_ExternalSheetNames

	// Named Links
	DefinedNames *CT_ExternalDefinedNames

	// Cached Worksheet Data
	SheetDataSet *CT_ExternalSheetDataSet
}

func (_ffdefb ST_PivotAreaType) String() string {
	switch _ffdefb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 3:
		return "\u0064\u0061\u0074\u0061"
	case 4:
		return "\u0061\u006c\u006c"
	case 5:
		return "\u006f\u0072\u0069\u0067\u0069\u006e"
	case 6:
		return "\u0062\u0075\u0074\u0074\u006f\u006e"
	case 7:
		return "\u0074\u006f\u0070\u0045\u006e\u0064"
	case 8:
		return "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	}
	return ""
}
func (_ebcde *CT_Controls) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gbeb:
	for {
		_gbec, _cage := d.Token()
		if _cage != nil {
			return _cage
		}
		switch _gfdbf := _gbec.(type) {
		case _a.StartElement:
			switch _gfdbf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}:
				_bdgd := NewCT_Control()
				if _gbee := d.DecodeElement(_bdgd, &_gfdbf); _gbee != nil {
					return _gbee
				}
				_ebcde.Control = append(_ebcde.Control, _bdgd)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073\u0020\u0025\u0076", _gfdbf.Name)
				if _fbdcd := d.Skip(); _fbdcd != nil {
					return _fbdcd
				}
			}
		case _a.EndElement:
			break _gbeb
		case _a.CharData:
		}
	}
	return nil
}

type CT_Worksheet struct {

	// Worksheet Properties
	SheetPr *CT_SheetPr

	// Worksheet Dimensions
	Dimension *CT_SheetDimension

	// Sheet Views
	SheetViews *CT_SheetViews

	// Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Column Information
	Cols []*CT_Cols

	// Sheet Data
	SheetData *CT_SheetData

	// Sheet Calculation Properties
	SheetCalcPr *CT_SheetCalcPr

	// Sheet Protection
	SheetProtection *CT_SheetProtection

	// Protected Ranges
	ProtectedRanges *CT_ProtectedRanges

	// Scenarios
	Scenarios *CT_Scenarios

	// AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Data Consolidate
	DataConsolidate *CT_DataConsolidate

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Merge Cells
	MergeCells *CT_MergeCells

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr

	// Conditional Formatting
	ConditionalFormatting []*CT_ConditionalFormatting

	// Data Validations
	DataValidations *CT_DataValidations

	// Hyperlinks
	Hyperlinks *CT_Hyperlinks

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header and Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Horizontal Page Breaks
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Custom Properties
	CustomProperties *CT_CustomProperties

	// Cell Watch Items
	CellWatches *CT_CellWatches

	// Ignored Errors
	IgnoredErrors *CT_IgnoredErrors

	// Smart Tags
	SmartTags *CT_SmartTags

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF

	// Background Image
	Picture    *CT_SheetBackgroundPicture
	OleObjects *CT_OleObjects

	// Embedded Controls
	Controls *CT_Controls

	// Web Publishing Items
	WebPublishItems *CT_WebPublishItems

	// Table Parts
	TableParts *CT_TableParts

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_baede *CT_ExternalSheetData) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ggff := range start.Attr {
		if _ggff.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_cagfc, _ecba := _f.ParseUint(_ggff.Value, 10, 32)
			if _ecba != nil {
				return _ecba
			}
			_baede.SheetIdAttr = uint32(_cagfc)
			continue
		}
		if _ggff.Name.Local == "\u0072\u0065\u0066r\u0065\u0073\u0068\u0045\u0072\u0072\u006f\u0072" {
			_dbefad, _agccg := _f.ParseBool(_ggff.Value)
			if _agccg != nil {
				return _agccg
			}
			_baede.RefreshErrorAttr = &_dbefad
			continue
		}
	}
_agded:
	for {
		_babgb, _gabbg := d.Token()
		if _gabbg != nil {
			return _gabbg
		}
		switch _badb := _babgb.(type) {
		case _a.StartElement:
			switch _badb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}:
				_ecfc := NewCT_ExternalRow()
				if _efbf := d.DecodeElement(_ecfc, &_badb); _efbf != nil {
					return _efbf
				}
				_baede.Row = append(_baede.Row, _ecfc)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _badb.Name)
				if _agcab := d.Skip(); _agcab != nil {
					return _agcab
				}
			}
		case _a.EndElement:
			break _agded
		case _a.CharData:
		}
	}
	return nil
}
func (_cgea *CT_Index) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fc.Sprintf("\u0025\u0076", _cgea.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_DataRef struct {

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

func (_ecfga ST_PivotAreaType) ValidateWithPath(path string) error {
	switch _ecfga {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecfga))
	}
	return nil
}
func NewCT_Chartsheet() *CT_Chartsheet {
	_geea := &CT_Chartsheet{}
	_geea.SheetViews = NewCT_ChartsheetViews()
	_geea.Drawing = NewCT_Drawing()
	return _geea
}
func (_eceeab *CT_VolTopic) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cfgbf := range start.Attr {
		if _cfgbf.Name.Local == "\u0074" {
			_eceeab.TAttr.UnmarshalXMLAttr(_cfgbf)
			continue
		}
	}
_gbcbc:
	for {
		_gfdaf, _acadgf := d.Token()
		if _acadgf != nil {
			return _acadgf
		}
		switch _dgdgb := _gfdaf.(type) {
		case _a.StartElement:
			switch _dgdgb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				if _gcbeb := d.DecodeElement(&_eceeab.V, &_dgdgb); _gcbeb != nil {
					return _gcbeb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0070"}:
				var _ddeec string
				if _ceceef := d.DecodeElement(&_ddeec, &_dgdgb); _ceceef != nil {
					return _ceceef
				}
				_eceeab.Stp = append(_eceeab.Stp, _ddeec)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_fffaeg := NewCT_VolTopicRef()
				if _bddbg := d.DecodeElement(_fffaeg, &_dgdgb); _bddbg != nil {
					return _bddbg
				}
				_eceeab.Tr = append(_eceeab.Tr, _fffaeg)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063\u0020\u0025\u0076", _dgdgb.Name)
				if _cebdb := d.Skip(); _cebdb != nil {
					return _cebdb
				}
			}
		case _a.EndElement:
			break _gbcbc
		case _a.CharData:
		}
	}
	return nil
}
func (_ecbga *CT_WebPublishing) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ecbga.CssAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0073\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ecbga.CssAttr))})
	}
	if _ecbga.ThicketAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074h\u0069\u0063\u006b\u0065\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ecbga.ThicketAttr))})
	}
	if _ecbga.LongFileNamesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u006e\u0067\u0046\u0069\u006c\u0065\u004e\u0061\u006d\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ecbga.LongFileNamesAttr))})
	}
	if _ecbga.VmlAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u006d\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ecbga.VmlAttr))})
	}
	if _ecbga.AllowPngAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ecbga.AllowPngAttr))})
	}
	if _ecbga.TargetScreenSizeAttr != ST_TargetScreenSizeUnset {
		_dfafab, _gegcc := _ecbga.TargetScreenSizeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0061r\u0067\u0065\u0074S\u0063\u0072\u0065\u0065\u006e\u0053\u0069\u007a\u0065"})
		if _gegcc != nil {
			return _gegcc
		}
		start.Attr = append(start.Attr, _dfafab)
	}
	if _ecbga.DpiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0070\u0069"}, Value: _fc.Sprintf("\u0025\u0076", *_ecbga.DpiAttr)})
	}
	if _ecbga.CodePageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_ecbga.CodePageAttr)})
	}
	if _ecbga.CharacterSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_ecbga.CharacterSetAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_QueryTableField struct {

	// Field Id
	IdAttr uint32

	// Name
	NameAttr *string

	// Data Bound Column
	DataBoundAttr *bool

	// Row Numbers
	RowNumbersAttr *bool

	// Fill This Formula On Refresh
	FillFormulasAttr *bool

	// Clipped Column
	ClippedAttr *bool

	// Table Column Id
	TableColumnIdAttr *uint32

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_cfaf *CT_CustomFilters) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgff := range start.Attr {
		if _fgff.Name.Local == "\u0061\u006e\u0064" {
			_dbeg, _fabd := _f.ParseBool(_fgff.Value)
			if _fabd != nil {
				return _fabd
			}
			_cfaf.AndAttr = &_dbeg
			continue
		}
	}
_bfda:
	for {
		_fgaf, _ffcd := d.Token()
		if _ffcd != nil {
			return _ffcd
		}
		switch _ceeg := _fgaf.(type) {
		case _a.StartElement:
			switch _ceeg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_dgege := NewCT_CustomFilter()
				if _bfcde := d.DecodeElement(_dgege, &_ceeg); _bfcde != nil {
					return _bfcde
				}
				_cfaf.CustomFilter = append(_cfaf.CustomFilter, _dgege)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025v", _ceeg.Name)
				if _adfba := d.Skip(); _adfba != nil {
					return _adfba
				}
			}
		case _a.EndElement:
			break _bfda
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CustomChartsheetView and its children
func (_fdbb *CT_CustomChartsheetView) Validate() error {
	return _fdbb.ValidateWithPath("\u0043\u0054\u005fCu\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077")
}
func (_acbfe ST_PrintError) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gaebg := _a.Attr{}
	_gaebg.Name = name
	switch _acbfe {
	case ST_PrintErrorUnset:
		_gaebg.Value = ""
	case ST_PrintErrorDisplayed:
		_gaebg.Value = "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d"
	case ST_PrintErrorBlank:
		_gaebg.Value = "\u0062\u006c\u0061n\u006b"
	case ST_PrintErrorDash:
		_gaebg.Value = "\u0064\u0061\u0073\u0068"
	case ST_PrintErrorNA:
		_gaebg.Value = "\u004e\u0041"
	}
	return _gaebg, nil
}
func (_eecacc *CT_Items) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eecacc.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_eecacc.CountAttr)})
	}
	e.EncodeToken(start)
	_ecedg := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0069\u0074\u0065\u006d"}}
	for _, _bfgfg := range _eecacc.Item {
		e.EncodeElement(_bfgfg, _ecedg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bfdad *CT_Hyperlink) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bddd := range start.Attr {
		if _bddd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bddd.Name.Local == "\u0069\u0064" || _bddd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bddd.Name.Local == "\u0069\u0064" {
			_gcafff, _adfdb := _bddd.Value, error(nil)
			if _adfdb != nil {
				return _adfdb
			}
			_bfdad.IdAttr = &_gcafff
			continue
		}
		if _bddd.Name.Local == "\u0072\u0065\u0066" {
			_feag, _bfca := _bddd.Value, error(nil)
			if _bfca != nil {
				return _bfca
			}
			_bfdad.RefAttr = _feag
			continue
		}
		if _bddd.Name.Local == "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e" {
			_bdecc, _fbgdb := _bddd.Value, error(nil)
			if _fbgdb != nil {
				return _fbgdb
			}
			_bfdad.LocationAttr = &_bdecc
			continue
		}
		if _bddd.Name.Local == "\u0074o\u006f\u006c\u0074\u0069\u0070" {
			_fgceg, _ecgfdg := _bddd.Value, error(nil)
			if _ecgfdg != nil {
				return _ecgfdg
			}
			_bfdad.TooltipAttr = &_fgceg
			continue
		}
		if _bddd.Name.Local == "\u0064i\u0073\u0070\u006c\u0061\u0079" {
			_aeeadf, _gegfa := _bddd.Value, error(nil)
			if _gegfa != nil {
				return _gegfa
			}
			_bfdad.DisplayAttr = &_aeeadf
			continue
		}
	}
	for {
		_fbgae, _ggfea := d.Token()
		if _ggfea != nil {
			return _fc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0079p\u0065\u0072\u006c\u0069\u006e\u006b\u003a\u0020\u0025\u0073", _ggfea)
		}
		if _fccbd, _gbaeb := _fbgae.(_a.EndElement); _gbaeb && _fccbd.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_PivotAreaReferences() *CT_PivotAreaReferences {
	_cddfd := &CT_PivotAreaReferences{}
	return _cddfd
}
func (_ffde *CT_DataRefs) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gdbab := range start.Attr {
		if _gdbab.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dfaeg, _ebbeg := _f.ParseUint(_gdbab.Value, 10, 32)
			if _ebbeg != nil {
				return _ebbeg
			}
			_dbeaf := uint32(_dfaeg)
			_ffde.CountAttr = &_dbeaf
			continue
		}
	}
_edgaae:
	for {
		_cbbb, _gcgd := d.Token()
		if _gcgd != nil {
			return _gcgd
		}
		switch _adcff := _cbbb.(type) {
		case _a.StartElement:
			switch _adcff.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0052\u0065\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0052\u0065\u0066"}:
				_afab := NewCT_DataRef()
				if _cbeba := d.DecodeElement(_afab, &_adcff); _cbeba != nil {
					return _cbeba
				}
				_ffde.DataRef = append(_ffde.DataRef, _afab)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073\u0020\u0025\u0076", _adcff.Name)
				if _gddb := d.Skip(); _gddb != nil {
					return _gddb
				}
			}
		case _a.EndElement:
			break _edgaae
		case _a.CharData:
		}
	}
	return nil
}

type CT_PageMargins struct {

	// Left Page Margin
	LeftAttr float64

	// Right Page Margin
	RightAttr float64

	// Top Page Margin
	TopAttr float64

	// Bottom Page Margin
	BottomAttr float64

	// Header Page Margin
	HeaderAttr float64

	// Footer Page Margin
	FooterAttr float64
}

func (_fagddf ST_CalcMode) ValidateWithPath(path string) error {
	switch _fagddf {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fagddf))
	}
	return nil
}
func NewCT_CacheHierarchies() *CT_CacheHierarchies { _gcf := &CT_CacheHierarchies{}; return _gcf }
func (_caaef ST_Orientation) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_caaef.String(), start)
}

type ST_SmartTagShow byte

func (_bbd *CT_ChartsheetView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bbd.TabSelectedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbd.TabSelectedAttr))})
	}
	if _bbd.ZoomScaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce"}, Value: _fc.Sprintf("\u0025\u0076", *_bbd.ZoomScaleAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _bbd.WorkbookViewIdAttr)})
	if _bbd.ZoomToFitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bbd.ZoomToFitAttr))})
	}
	e.EncodeToken(start)
	if _bbd.ExtLst != nil {
		_egbd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bbd.ExtLst, _egbd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gaffb *CT_FieldUsage) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078"}, Value: _fc.Sprintf("\u0025\u0076", _gaffb.XAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_feagb *ExternalLink) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u003ae\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b"
	return _feagb.CT_ExternalLink.MarshalXML(e, start)
}

// Validate validates the CT_CustomWorkbookViews and its children
func (_badc *CT_CustomWorkbookViews) Validate() error {
	return _badc.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073")
}

const (
	ST_FormatActionUnset      ST_FormatAction = 0
	ST_FormatActionBlank      ST_FormatAction = 1
	ST_FormatActionFormatting ST_FormatAction = 2
	ST_FormatActionDrill      ST_FormatAction = 3
	ST_FormatActionFormula    ST_FormatAction = 4
)

func (_adbcg *CT_ObjectPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _adbcg.LockedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbcg.LockedAttr))})
	}
	if _adbcg.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbcg.DefaultSizeAttr))})
	}
	if _adbcg.PrintAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbcg.PrintAttr))})
	}
	if _adbcg.DisabledAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbcg.DisabledAttr))})
	}
	if _adbcg.UiObjectAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbcg.UiObjectAttr))})
	}
	if _adbcg.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbcg.AutoFillAttr))})
	}
	if _adbcg.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbcg.AutoLineAttr))})
	}
	if _adbcg.AutoPictAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbcg.AutoPictAttr))})
	}
	if _adbcg.MacroAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_adbcg.MacroAttr)})
	}
	if _adbcg.AltTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_adbcg.AltTextAttr)})
	}
	if _adbcg.DdeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0064\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_adbcg.DdeAttr))})
	}
	if _adbcg.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_adbcg.IdAttr)})
	}
	e.EncodeToken(start)
	_efffbb := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_adbcg.Anchor, _efffbb)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewEG_ExtensionList() *EG_ExtensionList { _ddggd := &EG_ExtensionList{}; return _ddggd }
func (_fffbb *CT_Metadata) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _fffbb.MetadataTypes != nil {
		_feaea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}}
		e.EncodeElement(_fffbb.MetadataTypes, _feaea)
	}
	if _fffbb.MetadataStrings != nil {
		_efbab := _a.StartElement{Name: _a.Name{Local: "\u006da\u003am\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073"}}
		e.EncodeElement(_fffbb.MetadataStrings, _efbab)
	}
	if _fffbb.MdxMetadata != nil {
		_daadb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_fffbb.MdxMetadata, _daadb)
	}
	if _fffbb.FutureMetadata != nil {
		_gcdag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}}
		for _, _ffdbe := range _fffbb.FutureMetadata {
			e.EncodeElement(_ffdbe, _gcdag)
		}
	}
	if _fffbb.CellMetadata != nil {
		_bgdbe := _a.StartElement{Name: _a.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_fffbb.CellMetadata, _bgdbe)
	}
	if _fffbb.ValueMetadata != nil {
		_dedbfd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061:\u0076\u0061\u006cu\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_fffbb.ValueMetadata, _dedbfd)
	}
	if _fffbb.ExtLst != nil {
		_fefbcc := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fffbb.ExtLst, _fefbcc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dddb ST_TextHAlign) Validate() error { return _dddb.ValidateWithPath("") }

type ST_DdeValueType byte

func (_cccdd ST_HtmlFmt) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cccdd.String(), start)
}

// ValidateWithPath validates the CT_Groups and its children, prefixing error messages with path
func (_agdfe *CT_Groups) ValidateWithPath(path string) error {
	for _deea, _gbedeg := range _agdfe.Group {
		if _ggabc := _gbedeg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002fG\u0072\u006f\u0075\u0070\u005b\u0025\u0064\u005d", path, _deea)); _ggabc != nil {
			return _ggabc
		}
	}
	return nil
}

type CT_RowHierarchiesUsage struct {

	// Item Count
	CountAttr *uint32

	// Row OLAP Hierarchies
	RowHierarchyUsage []*CT_HierarchyUsage
}

func (_fbbad ST_DvAspect) Validate() error { return _fbbad.ValidateWithPath("") }
func NewCT_DdeValue() *CT_DdeValue         { _dgbcf := &CT_DdeValue{}; return _dgbcf }

type CT_IntProperty struct {

	// Value
	ValAttr int32
}

func (_ggacdd *Chartsheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ggacdd.CT_Chartsheet = *NewCT_Chartsheet()
_afeef:
	for {
		_gcgfbd, _egeba := d.Token()
		if _egeba != nil {
			return _egeba
		}
		switch _gcafb := _gcgfbd.(type) {
		case _a.StartElement:
			switch _gcafb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_ggacdd.SheetPr = NewCT_ChartsheetPr()
				if _cedga := d.DecodeElement(_ggacdd.SheetPr, &_gcafb); _cedga != nil {
					return _cedga
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				if _dgfcce := d.DecodeElement(_ggacdd.SheetViews, &_gcafb); _dgfcce != nil {
					return _dgfcce
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_ggacdd.SheetProtection = NewCT_ChartsheetProtection()
				if _ggeag := d.DecodeElement(_ggacdd.SheetProtection, &_gcafb); _ggeag != nil {
					return _ggeag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_ggacdd.CustomSheetViews = NewCT_CustomChartsheetViews()
				if _gabacd := d.DecodeElement(_ggacdd.CustomSheetViews, &_gcafb); _gabacd != nil {
					return _gabacd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_ggacdd.PageMargins = NewCT_PageMargins()
				if _ddcgf := d.DecodeElement(_ggacdd.PageMargins, &_gcafb); _ddcgf != nil {
					return _ddcgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_ggacdd.PageSetup = NewCT_CsPageSetup()
				if _eagfb := d.DecodeElement(_ggacdd.PageSetup, &_gcafb); _eagfb != nil {
					return _eagfb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_ggacdd.HeaderFooter = NewCT_HeaderFooter()
				if _eaecc := d.DecodeElement(_ggacdd.HeaderFooter, &_gcafb); _eaecc != nil {
					return _eaecc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				if _daafe := d.DecodeElement(_ggacdd.Drawing, &_gcafb); _daafe != nil {
					return _daafe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_ggacdd.LegacyDrawing = NewCT_LegacyDrawing()
				if _dgedgb := d.DecodeElement(_ggacdd.LegacyDrawing, &_gcafb); _dgedgb != nil {
					return _dgedgb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_ggacdd.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _cgfge := d.DecodeElement(_ggacdd.LegacyDrawingHF, &_gcafb); _cgfge != nil {
					return _cgfge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_ggacdd.DrawingHF = NewCT_DrawingHF()
				if _cgefdg := d.DecodeElement(_ggacdd.DrawingHF, &_gcafb); _cgefdg != nil {
					return _cgefdg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_ggacdd.Picture = NewCT_SheetBackgroundPicture()
				if _gdfacf := d.DecodeElement(_ggacdd.Picture, &_gcafb); _gdfacf != nil {
					return _gdfacf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_ggacdd.WebPublishItems = NewCT_WebPublishItems()
				if _bfead := d.DecodeElement(_ggacdd.WebPublishItems, &_gcafb); _bfead != nil {
					return _bfead
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggacdd.ExtLst = NewCT_ExtensionList()
				if _badfe := d.DecodeElement(_ggacdd.ExtLst, &_gcafb); _badfe != nil {
					return _badfe
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _gcafb.Name)
				if _faebbc := d.Skip(); _faebbc != nil {
					return _faebbc
				}
			}
		case _a.EndElement:
			break _afeef
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OleItems and its children, prefixing error messages with path
func (_fecafe *CT_OleItems) ValidateWithPath(path string) error {
	for _cefdfg, _geafd := range _fecafe.OleItem {
		if _gfae := _geafd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004f\u006c\u0065\u0049\u0074\u0065m\u005b\u0025\u0064\u005d", path, _cefdfg)); _gfae != nil {
			return _gfae
		}
	}
	return nil
}

type CT_GroupMembers struct {

	// Group Member Count
	CountAttr *uint32

	// OLAP Group Member
	GroupMember []*CT_GroupMember
}

func NewCT_DdeValues() *CT_DdeValues { _bbdb := &CT_DdeValues{}; return _bbdb }

// ValidateWithPath validates the CT_OlapPr and its children, prefixing error messages with path
func (_eeabc *CT_OlapPr) ValidateWithPath(path string) error { return nil }

type CT_FieldsUsage struct {

	// Field Count
	CountAttr *uint32

	// PivotCache Field Id
	FieldUsage []*CT_FieldUsage
}

func (_cfdga ST_DynamicFilterType) String() string {
	switch _cfdga {
	case 0:
		return ""
	case 1:
		return "\u006e\u0075\u006c\u006c"
	case 2:
		return "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case 3:
		return "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case 4:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 5:
		return "\u0074\u006f\u0064a\u0079"
	case 6:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 7:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case 8:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 9:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 10:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 11:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 12:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 13:
		return "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 14:
		return "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 15:
		return "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 16:
		return "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case 17:
		return "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case 18:
		return "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case 19:
		return "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case 20:
		return "\u0051\u0031"
	case 21:
		return "\u0051\u0032"
	case 22:
		return "\u0051\u0033"
	case 23:
		return "\u0051\u0034"
	case 24:
		return "\u004d\u0031"
	case 25:
		return "\u004d\u0032"
	case 26:
		return "\u004d\u0033"
	case 27:
		return "\u004d\u0034"
	case 28:
		return "\u004d\u0035"
	case 29:
		return "\u004d\u0036"
	case 30:
		return "\u004d\u0037"
	case 31:
		return "\u004d\u0038"
	case 32:
		return "\u004d\u0039"
	case 33:
		return "\u004d\u0031\u0030"
	case 34:
		return "\u004d\u0031\u0031"
	case 35:
		return "\u004d\u0031\u0032"
	}
	return ""
}
func (_afaaa *PivotTableDefinition) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_afaaa.CT_pivotTableDefinition = *NewCT_pivotTableDefinition()
	for _, _ecdgba := range start.Attr {
		if _ecdgba.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_gdcef, _caebag := _f.ParseUint(_ecdgba.Value, 10, 8)
			if _caebag != nil {
				return _caebag
			}
			_ffeef := uint8(_gdcef)
			_afaaa.CreatedVersionAttr = &_ffeef
			continue
		}
		if _ecdgba.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_fdbbfd, _cagggg := _f.ParseUint(_ecdgba.Value, 10, 32)
			if _cagggg != nil {
				return _cagggg
			}
			_dgddf := uint32(_fdbbfd)
			_afaaa.IndentAttr = &_dgddf
			continue
		}
		if _ecdgba.Name.Local == "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065" {
			_dgbag, _egfde := _ecdgba.Value, error(nil)
			if _egfde != nil {
				return _egfde
			}
			_afaaa.PivotTableStyleAttr = &_dgbag
			continue
		}
		if _ecdgba.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077" {
			_cedae, _bafag := _f.ParseBool(_ecdgba.Value)
			if _bafag != nil {
				return _bafag
			}
			_afaaa.ShowEmptyRowAttr = &_cedae
			continue
		}
		if _ecdgba.Name.Local == "\u0074\u0061\u0067" {
			_gdggc, _eggegd := _ecdgba.Value, error(nil)
			if _eggegd != nil {
				return _eggegd
			}
			_afaaa.TagAttr = &_gdggc
			continue
		}
		if _ecdgba.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c" {
			_gaade, _becdfg := _f.ParseBool(_ecdgba.Value)
			if _becdfg != nil {
				return _becdfg
			}
			_afaaa.ShowEmptyColAttr = &_gaade
			continue
		}
		if _ecdgba.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_dfggeb, _ddbcf := _f.ParseUint(_ecdgba.Value, 10, 8)
			if _ddbcf != nil {
				return _ddbcf
			}
			_dbfff := uint8(_dfggeb)
			_afaaa.MinRefreshableVersionAttr = &_dbfff
			continue
		}
		if _ecdgba.Name.Local == "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073" {
			_faabc, _agccf := _f.ParseBool(_ecdgba.Value)
			if _agccf != nil {
				return _agccf
			}
			_afaaa.ShowHeadersAttr = &_faabc
			continue
		}
		if _ecdgba.Name.Local == "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073" {
			_cbcegf, _gcfgf := _f.ParseBool(_ecdgba.Value)
			if _gcfgf != nil {
				return _gcfgf
			}
			_afaaa.AsteriskTotalsAttr = &_cbcegf
			continue
		}
		if _ecdgba.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_gfdbcc, _aeeeag := _f.ParseBool(_ecdgba.Value)
			if _aeeeag != nil {
				return _aeeeag
			}
			_afaaa.CompactAttr = &_gfdbcc
			continue
		}
		if _ecdgba.Name.Local == "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061" {
			_afcbbe, _ebceg := _f.ParseBool(_ecdgba.Value)
			if _ebceg != nil {
				return _ebceg
			}
			_afaaa.EditDataAttr = &_afcbbe
			continue
		}
		if _ecdgba.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_bbbeg, _bacfd := _f.ParseBool(_ecdgba.Value)
			if _bacfd != nil {
				return _bacfd
			}
			_afaaa.OutlineAttr = &_bbbeg
			continue
		}
		if _ecdgba.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073" {
			_bdege, _babad := _f.ParseBool(_ecdgba.Value)
			if _babad != nil {
				return _babad
			}
			_afaaa.ShowCalcMbrsAttr = &_bdege
			continue
		}
		if _ecdgba.Name.Local == "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061" {
			_bdbeef, _effc := _f.ParseBool(_ecdgba.Value)
			if _effc != nil {
				return _effc
			}
			_afaaa.OutlineDataAttr = &_bdbeef
			continue
		}
		if _ecdgba.Name.Local == "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_bfeaa, _afedb := _f.ParseBool(_ecdgba.Value)
			if _afedb != nil {
				return _afedb
			}
			_afaaa.GridDropZonesAttr = &_bfeaa
			continue
		}
		if _ecdgba.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074" {
			_cggfc, _eagcfd := _f.ParseBool(_ecdgba.Value)
			if _eagcfd != nil {
				return _eagcfd
			}
			_afaaa.CustomListSortAttr = &_cggfc
			continue
		}
		if _ecdgba.Name.Local == "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_bebbd, _edged := _f.ParseBool(_ecdgba.Value)
			if _edged != nil {
				return _edged
			}
			_afaaa.RowGrandTotalsAttr = &_bebbd
			continue
		}
		if _ecdgba.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gcfbaf, _bdcgc := _f.ParseBool(_ecdgba.Value)
			if _bdcgc != nil {
				return _bdcgc
			}
			_afaaa.ApplyWidthHeightFormatsAttr = &_gcfbaf
			continue
		}
		if _ecdgba.Name.Local == "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_cebcff, _abgcd := _f.ParseBool(_ecdgba.Value)
			if _abgcd != nil {
				return _abgcd
			}
			_afaaa.UseAutoFormattingAttr = &_cebcff
			continue
		}
		if _ecdgba.Name.Local == "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_gcadb, _afacec := _ecdgba.Value, error(nil)
			if _afacec != nil {
				return _afacec
			}
			_afaaa.RowHeaderCaptionAttr = &_gcadb
			continue
		}
		if _ecdgba.Name.Local == "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl" {
			_ffbfec, _badebe := _f.ParseBool(_ecdgba.Value)
			if _badebe != nil {
				return _badebe
			}
			_afaaa.ShowDrillAttr = &_ffbfec
			continue
		}
		if _ecdgba.Name.Local == "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m" {
			_bdafba, _cgaec := _f.ParseBool(_ecdgba.Value)
			if _cgaec != nil {
				return _cgaec
			}
			_afaaa.MergeItemAttr = &_bdafba
			continue
		}
		if _ecdgba.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_fcbdg, _gbgaaf := _f.ParseBool(_ecdgba.Value)
			if _gbgaaf != nil {
				return _gbgaaf
			}
			_afaaa.ApplyBorderFormatsAttr = &_fcbdg
			continue
		}
		if _ecdgba.Name.Local == "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073" {
			_beadc, _egefe := _f.ParseBool(_ecdgba.Value)
			if _egefe != nil {
				return _egefe
			}
			_afaaa.VisualTotalsAttr = &_beadc
			continue
		}
		if _ecdgba.Name.Local == "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061" {
			_gebbee, _adgfg := _f.ParseBool(_ecdgba.Value)
			if _adgfg != nil {
				return _adgfg
			}
			_afaaa.CompactDataAttr = &_gebbee
			continue
		}
		if _ecdgba.Name.Local == "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_efcbgd, _feggc := _f.ParseUint(_ecdgba.Value, 10, 32)
			if _feggc != nil {
				return _feggc
			}
			_beceae := uint32(_efcbgd)
			_afaaa.DataPositionAttr = &_beceae
			continue
		}
		if _ecdgba.Name.Local == "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073" {
			_fddfc, _cbcfbf := _f.ParseBool(_ecdgba.Value)
			if _cbcfbf != nil {
				return _cbcfbf
			}
			_afaaa.MultipleFieldFiltersAttr = &_fddfc
			continue
		}
		if _ecdgba.Name.Local == "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e" {
			_fbdee, _gafacb := _f.ParseBool(_ecdgba.Value)
			if _gafacb != nil {
				return _gafacb
			}
			_afaaa.PageOverThenDownAttr = &_fbdee
			continue
		}
		if _ecdgba.Name.Local == "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067" {
			_fgbeb, _addag := _f.ParseBool(_ecdgba.Value)
			if _addag != nil {
				return _addag
			}
			_afaaa.FieldListSortAscendingAttr = &_fgbeb
			continue
		}
		if _ecdgba.Name.Local == "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067" {
			_cgaffb, _gfgbdd := _f.ParseBool(_ecdgba.Value)
			if _gfgbdd != nil {
				return _gfgbdd
			}
			_afaaa.ShowMissingAttr = &_cgaffb
			continue
		}
		if _ecdgba.Name.Local == "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_abgbfb, _bgdbab := _f.ParseBool(_ecdgba.Value)
			if _bgdbab != nil {
				return _bgdbab
			}
			_afaaa.FieldPrintTitlesAttr = &_abgbfb
			continue
		}
		if _ecdgba.Name.Local == "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073" {
			_fdgca, _fbabfd := _f.ParseBool(_ecdgba.Value)
			if _fbabfd != nil {
				return _fbabfd
			}
			_afaaa.ShowMemberPropertyTipsAttr = &_fdgca
			continue
		}
		if _ecdgba.Name.Local == "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce" {
			_dbcedc, _abacf := _ecdgba.Value, error(nil)
			if _abacf != nil {
				return _abacf
			}
			_afaaa.PageStyleAttr = &_dbcedc
			continue
		}
		if _ecdgba.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_dgabc, _aacef := _f.ParseUint(_ecdgba.Value, 10, 32)
			if _aacef != nil {
				return _aacef
			}
			_ecgbf := uint32(_dgabc)
			_afaaa.AutoFormatIdAttr = &_ecgbf
			continue
		}
		if _ecdgba.Name.Local == "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds" {
			_gafcab, _cdfdb := _f.ParseBool(_ecdgba.Value)
			if _cdfdb != nil {
				return _cdfdb
			}
			_afaaa.ShowItemsAttr = &_gafcab
			continue
		}
		if _ecdgba.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_aafeab, _affg := _f.ParseBool(_ecdgba.Value)
			if _affg != nil {
				return _affg
			}
			_afaaa.ApplyPatternFormatsAttr = &_aafeab
			continue
		}
		if _ecdgba.Name.Local == "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073" {
			_dbaaa, _egbed := _f.ParseBool(_ecdgba.Value)
			if _egbed != nil {
				return _egbed
			}
			_afaaa.EnableFieldPropertiesAttr = &_dbaaa
			continue
		}
		if _ecdgba.Name.Local == "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c" {
			_eabaa, _bgebe := _f.ParseBool(_ecdgba.Value)
			if _bgebe != nil {
				return _bgebe
			}
			_afaaa.ShowMultipleLabelAttr = &_eabaa
			continue
		}
		if _ecdgba.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_bfbac, _faaacf := _f.ParseBool(_ecdgba.Value)
			if _faaacf != nil {
				return _faaacf
			}
			_afaaa.PreserveFormattingAttr = &_bfbac
			continue
		}
		if _ecdgba.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_dccdcf, _ebcbg := _f.ParseBool(_ecdgba.Value)
			if _ebcbg != nil {
				return _ebcbg
			}
			_afaaa.PublishedAttr = &_dccdcf
			continue
		}
		if _ecdgba.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_fcecc, _efdeb := _ecdgba.Value, error(nil)
			if _efdeb != nil {
				return _efdeb
			}
			_afaaa.MissingCaptionAttr = &_fcecc
			continue
		}
		if _ecdgba.Name.Local == "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e" {
			_debda, _efcfe := _f.ParseBool(_ecdgba.Value)
			if _efcfe != nil {
				return _efcfe
			}
			_afaaa.ImmersiveAttr = &_debda
			continue
		}
		if _ecdgba.Name.Local == "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070" {
			_ggfeg, _ddeaf := _f.ParseUint(_ecdgba.Value, 10, 32)
			if _ddeaf != nil {
				return _ddeaf
			}
			_agagb := uint32(_ggfeg)
			_afaaa.PageWrapAttr = &_agagb
			continue
		}
		if _ecdgba.Name.Local == "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074" {
			_bdfbb, _cccee := _f.ParseUint(_ecdgba.Value, 10, 32)
			if _cccee != nil {
				return _cccee
			}
			_bccfbg := uint32(_bdfbb)
			_afaaa.ChartFormatAttr = &_bccfbg
			continue
		}
		if _ecdgba.Name.Local == "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_gfabb, _cceabg := _f.ParseBool(_ecdgba.Value)
			if _cceabg != nil {
				return _cceabg
			}
			_afaaa.ShowDataDropDownAttr = &_gfabb
			continue
		}
		if _ecdgba.Name.Local == "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_ageef, _degbd := _ecdgba.Value, error(nil)
			if _degbd != nil {
				return _degbd
			}
			_afaaa.ColHeaderCaptionAttr = &_ageef
			continue
		}
		if _ecdgba.Name.Local == "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073" {
			_gddfbe, _ccgea := _f.ParseBool(_ecdgba.Value)
			if _ccgea != nil {
				return _ccgea
			}
			_afaaa.SubtotalHiddenItemsAttr = &_gddfbe
			continue
		}
		if _ecdgba.Name.Local == "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073" {
			_fbgfd, _dbgbd := _f.ParseBool(_ecdgba.Value)
			if _dbgbd != nil {
				return _dbgbd
			}
			_afaaa.MdxSubqueriesAttr = &_fbgfd
			continue
		}
		if _ecdgba.Name.Local == "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_dcdge, _fecdc := _ecdgba.Value, error(nil)
			if _fecdc != nil {
				return _fecdc
			}
			_afaaa.ErrorCaptionAttr = &_dcdge
			continue
		}
		if _ecdgba.Name.Local == "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_befca, _cacebg := _f.ParseBool(_ecdgba.Value)
			if _cacebg != nil {
				return _cacebg
			}
			_afaaa.ColGrandTotalsAttr = &_befca
			continue
		}
		if _ecdgba.Name.Local == "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c" {
			_ddcee, _gfffa := _f.ParseBool(_ecdgba.Value)
			if _gfffa != nil {
				return _gfffa
			}
			_afaaa.PrintDrillAttr = &_ddcee
			continue
		}
		if _ecdgba.Name.Local == "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_edbbb, _cbdaeb := _f.ParseBool(_ecdgba.Value)
			if _cbdaeb != nil {
				return _cbdaeb
			}
			_afaaa.ItemPrintTitlesAttr = &_edbbb
			continue
		}
		if _ecdgba.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cfdbc, _affde := _ecdgba.Value, error(nil)
			if _affde != nil {
				return _affde
			}
			_afaaa.NameAttr = _cfdbc
			continue
		}
		if _ecdgba.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_egeaae, _cacac := _f.ParseBool(_ecdgba.Value)
			if _cacac != nil {
				return _cacac
			}
			_afaaa.ShowDropZonesAttr = &_egeaae
			continue
		}
		if _ecdgba.Name.Local == "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073" {
			_dbbbde, _eedbgc := _f.ParseBool(_ecdgba.Value)
			if _eedbgc != nil {
				return _eedbgc
			}
			_afaaa.ShowDataTipsAttr = &_dbbbde
			continue
		}
		if _ecdgba.Name.Local == "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065" {
			_fdebb, _eafae := _ecdgba.Value, error(nil)
			if _eafae != nil {
				return _eafae
			}
			_afaaa.VacatedStyleAttr = &_fdebb
			continue
		}
		if _ecdgba.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_cfceea, _dbbegc := _ecdgba.Value, error(nil)
			if _dbbegc != nil {
				return _dbbegc
			}
			_afaaa.GrandTotalCaptionAttr = &_cfceea
			continue
		}
		if _ecdgba.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_fcefce, _ecbdg := _f.ParseBool(_ecdgba.Value)
			if _ecbdg != nil {
				return _ecbdg
			}
			_afaaa.ApplyNumberFormatsAttr = &_fcefce
			continue
		}
		if _ecdgba.Name.Local == "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c" {
			_bgebb, _ageee := _f.ParseBool(_ecdgba.Value)
			if _ageee != nil {
				return _ageee
			}
			_afaaa.EnableDrillAttr = &_bgebb
			continue
		}
		if _ecdgba.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_eedea, _dfcdfa := _f.ParseBool(_ecdgba.Value)
			if _dfcdfa != nil {
				return _dfcdfa
			}
			_afaaa.ApplyFontFormatsAttr = &_eedea
			continue
		}
		if _ecdgba.Name.Local == "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_dcbbg, _fdaae := _f.ParseBool(_ecdgba.Value)
			if _fdaae != nil {
				return _fdaae
			}
			_afaaa.DisableFieldListAttr = &_dcbbg
			continue
		}
		if _ecdgba.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dgbfgg, _gdbba := _f.ParseBool(_ecdgba.Value)
			if _gdbba != nil {
				return _gdbba
			}
			_afaaa.ApplyAlignmentFormatsAttr = &_dgbfgg
			continue
		}
		if _ecdgba.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073" {
			_cbcgg, _fdbca := _f.ParseBool(_ecdgba.Value)
			if _fdbca != nil {
				return _fdbca
			}
			_afaaa.DataOnRowsAttr = &_cbcgg
			continue
		}
		if _ecdgba.Name.Local == "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_dfacg, _decec := _ecdgba.Value, error(nil)
			if _decec != nil {
				return _decec
			}
			_afaaa.DataCaptionAttr = _dfacg
			continue
		}
		if _ecdgba.Name.Local == "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr" {
			_gddead, _gfgadd := _f.ParseBool(_ecdgba.Value)
			if _gfgadd != nil {
				return _gfgadd
			}
			_afaaa.ShowErrorAttr = &_gddead
			continue
		}
		if _ecdgba.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_dfbgb, _bedbcd := _f.ParseUint(_ecdgba.Value, 10, 32)
			if _bedbcd != nil {
				return _bedbcd
			}
			_afaaa.CacheIdAttr = uint32(_dfbgb)
			continue
		}
		if _ecdgba.Name.Local == "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064" {
			_cabdbf, _ecdaf := _f.ParseBool(_ecdgba.Value)
			if _ecdaf != nil {
				return _ecdaf
			}
			_afaaa.EnableWizardAttr = &_cabdbf
			continue
		}
		if _ecdgba.Name.Local == "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_ebafa, _abaab := _f.ParseUint(_ecdgba.Value, 10, 8)
			if _abaab != nil {
				return _abaab
			}
			_aegde := uint8(_ebafa)
			_afaaa.UpdatedVersionAttr = &_aegde
			continue
		}
	}
_agcbbc:
	for {
		_bdccg, _afgffed := d.Token()
		if _afgffed != nil {
			return _afgffed
		}
		switch _aegbce := _bdccg.(type) {
		case _a.StartElement:
			switch _aegbce.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}:
				if _baeggb := d.DecodeElement(_afaaa.Location, &_aegbce); _baeggb != nil {
					return _baeggb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_afaaa.PivotFields = NewCT_PivotFields()
				if _dabbaf := d.DecodeElement(_afaaa.PivotFields, &_aegbce); _dabbaf != nil {
					return _dabbaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}:
				_afaaa.RowFields = NewCT_RowFields()
				if _badfdc := d.DecodeElement(_afaaa.RowFields, &_aegbce); _badfdc != nil {
					return _badfdc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}:
				_afaaa.RowItems = NewCT_rowItems()
				if _aabcc := d.DecodeElement(_afaaa.RowItems, &_aegbce); _aabcc != nil {
					return _aabcc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}:
				_afaaa.ColFields = NewCT_ColFields()
				if _egaeeb := d.DecodeElement(_afaaa.ColFields, &_aegbce); _egaeeb != nil {
					return _egaeeb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}:
				_afaaa.ColItems = NewCT_colItems()
				if _ddedcf := d.DecodeElement(_afaaa.ColItems, &_aegbce); _ddedcf != nil {
					return _ddedcf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_afaaa.PageFields = NewCT_PageFields()
				if _cgccae := d.DecodeElement(_afaaa.PageFields, &_aegbce); _cgccae != nil {
					return _cgccae
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_afaaa.DataFields = NewCT_DataFields()
				if _agfge := d.DecodeElement(_afaaa.DataFields, &_aegbce); _agfge != nil {
					return _agfge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}:
				_afaaa.Formats = NewCT_Formats()
				if _gaaag := d.DecodeElement(_afaaa.Formats, &_aegbce); _gaaag != nil {
					return _gaaag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}:
				_afaaa.ConditionalFormats = NewCT_ConditionalFormats()
				if _afege := d.DecodeElement(_afaaa.ConditionalFormats, &_aegbce); _afege != nil {
					return _afege
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_afaaa.ChartFormats = NewCT_ChartFormats()
				if _cddggg := d.DecodeElement(_afaaa.ChartFormats, &_aegbce); _cddggg != nil {
					return _cddggg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_afaaa.PivotHierarchies = NewCT_PivotHierarchies()
				if _acdea := d.DecodeElement(_afaaa.PivotHierarchies, &_aegbce); _acdea != nil {
					return _acdea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}:
				_afaaa.PivotTableStyleInfo = NewCT_PivotTableStyle()
				if _bdcefd := d.DecodeElement(_afaaa.PivotTableStyleInfo, &_aegbce); _bdcefd != nil {
					return _bdcefd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_afaaa.Filters = NewCT_PivotFilters()
				if _edgaca := d.DecodeElement(_afaaa.Filters, &_aegbce); _edgaca != nil {
					return _edgaca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_afaaa.RowHierarchiesUsage = NewCT_RowHierarchiesUsage()
				if _daabe := d.DecodeElement(_afaaa.RowHierarchiesUsage, &_aegbce); _daabe != nil {
					return _daabe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_afaaa.ColHierarchiesUsage = NewCT_ColHierarchiesUsage()
				if _cdebgg := d.DecodeElement(_afaaa.ColHierarchiesUsage, &_aegbce); _cdebgg != nil {
					return _cdebgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afaaa.ExtLst = NewCT_ExtensionList()
				if _begbdb := d.DecodeElement(_afaaa.ExtLst, &_aegbce); _begbdb != nil {
					return _begbdb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _aegbce.Name)
				if _fabaed := d.Skip(); _fabaed != nil {
					return _fabaed
				}
			}
		case _a.EndElement:
			break _agcbbc
		case _a.CharData:
		}
	}
	return nil
}
func (_abbbag ST_SortBy) ValidateWithPath(path string) error {
	switch _abbbag {
	case 0, 1, 2, 3, 4:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abbbag))
	}
	return nil
}
func (_bdgae *CT_Error) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fc.Sprintf("\u0025\u0076", _bdgae.VAttr)})
	if _bdgae.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdgae.UAttr))})
	}
	if _bdgae.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdgae.FAttr))})
	}
	if _bdgae.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_bdgae.CAttr)})
	}
	if _bdgae.CpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_bdgae.CpAttr)})
	}
	if _bdgae.InAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_bdgae.InAttr)})
	}
	if _bdgae.BcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_bdgae.BcAttr)})
	}
	if _bdgae.FcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_bdgae.FcAttr)})
	}
	if _bdgae.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdgae.IAttr))})
	}
	if _bdgae.UnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdgae.UnAttr))})
	}
	if _bdgae.StAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdgae.StAttr))})
	}
	if _bdgae.BAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_bdgae.BAttr))})
	}
	e.EncodeToken(start)
	if _bdgae.Tpls != nil {
		_afff := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		e.EncodeElement(_bdgae.Tpls, _afff)
	}
	if _bdgae.X != nil {
		_cbgec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _acbbb := range _bdgae.X {
			e.EncodeElement(_acbbb, _cbgec)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_colItems() *CT_colItems { _cdbdb := &CT_colItems{}; return _cdbdb }
func (_dgabg *CT_OleItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_abdba:
	for {
		_cacf, _bagbf := d.Token()
		if _bagbf != nil {
			return _bagbf
		}
		switch _gdda := _cacf.(type) {
		case _a.StartElement:
			switch _gdda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0049\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0049\u0074\u0065\u006d"}:
				_eccbg := NewCT_OleItem()
				if _fcfda := d.DecodeElement(_eccbg, &_gdda); _fcfda != nil {
					return _fcfda
				}
				_dgabg.OleItem = append(_dgabg.OleItem, _eccbg)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _gdda.Name)
				if _gfbda := d.Skip(); _gfbda != nil {
					return _gfbda
				}
			}
		case _a.EndElement:
			break _abdba
		case _a.CharData:
		}
	}
	return nil
}

type ST_FormulaExpression byte

// ValidateWithPath validates the CT_TableFormula and its children, prefixing error messages with path
func (_ccegd *CT_TableFormula) ValidateWithPath(path string) error { return nil }
func (_cdfade *ST_MdxKPIProperty) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cdfade = 0
	case "\u0076":
		*_cdfade = 1
	case "\u0067":
		*_cdfade = 2
	case "\u0073":
		*_cdfade = 3
	case "\u0074":
		*_cdfade = 4
	case "\u0077":
		*_cdfade = 5
	case "\u006d":
		*_cdfade = 6
	}
	return nil
}

// ValidateWithPath validates the CT_FileRecoveryPr and its children, prefixing error messages with path
func (_fdcabf *CT_FileRecoveryPr) ValidateWithPath(path string) error { return nil }

type Revisions struct{ CT_Revisions }

func (_cgcbg *CT_PhoneticRun) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0062"}, Value: _fc.Sprintf("\u0025\u0076", _cgcbg.SbAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0062"}, Value: _fc.Sprintf("\u0025\u0076", _cgcbg.EbAttr)})
	e.EncodeToken(start)
	_ccgecf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0074"}}
	_fca.AddPreserveSpaceAttr(&_ccgecf, _cgcbg.T)
	e.EncodeElement(_cgcbg.T, _ccgecf)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ecgeb *CT_ExternalSheetNames) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_dcacc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065"}}
	for _, _eefcc := range _ecgeb.SheetName {
		e.EncodeElement(_eefcc, _dcacc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_agafda ST_FontScheme) String() string {
	switch _agafda {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006d\u0061\u006ao\u0072"
	case 3:
		return "\u006d\u0069\u006eo\u0072"
	}
	return ""
}
func (_eddcaf ST_ParameterType) String() string {
	switch _eddcaf {
	case 0:
		return ""
	case 1:
		return "\u0070\u0072\u006f\u006d\u0070\u0074"
	case 2:
		return "\u0076\u0061\u006cu\u0065"
	case 3:
		return "\u0063\u0065\u006c\u006c"
	}
	return ""
}
func (_fgaee *ST_FilterOperator) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdgccg, _cecce := d.Token()
	if _cecce != nil {
		return _cecce
	}
	if _gddgaa, _gebbfg := _gdgccg.(_a.EndElement); _gebbfg && _gddgaa.Name == start.Name {
		*_fgaee = 1
		return nil
	}
	if _bgdbaf, _aabcf := _gdgccg.(_a.CharData); !_aabcf {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdgccg)
	} else {
		switch string(_bgdbaf) {
		case "":
			*_fgaee = 0
		case "\u0065\u0071\u0075a\u006c":
			*_fgaee = 1
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_fgaee = 2
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_fgaee = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_fgaee = 4
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_fgaee = 5
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_fgaee = 6
		}
	}
	_gdgccg, _cecce = d.Token()
	if _cecce != nil {
		return _cecce
	}
	if _feeabg, _gacda := _gdgccg.(_a.EndElement); _gacda && _feeabg.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdgccg)
}

const (
	ST_AxisUnset      ST_Axis = 0
	ST_AxisAxisRow    ST_Axis = 1
	ST_AxisAxisCol    ST_Axis = 2
	ST_AxisAxisPage   ST_Axis = 3
	ST_AxisAxisValues ST_Axis = 4
)

func (_cgbbd ST_SheetState) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cgbbd.String(), start)
}

const (
	ST_GrowShrinkTypeUnset          ST_GrowShrinkType = 0
	ST_GrowShrinkTypeInsertDelete   ST_GrowShrinkType = 1
	ST_GrowShrinkTypeInsertClear    ST_GrowShrinkType = 2
	ST_GrowShrinkTypeOverwriteClear ST_GrowShrinkType = 3
)

func (_ebebc ST_PaneState) Validate() error { return _ebebc.ValidateWithPath("") }
func (_begfgg ST_PhoneticAlignment) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bcfab := _a.Attr{}
	_bcfab.Name = name
	switch _begfgg {
	case ST_PhoneticAlignmentUnset:
		_bcfab.Value = ""
	case ST_PhoneticAlignmentNoControl:
		_bcfab.Value = "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case ST_PhoneticAlignmentLeft:
		_bcfab.Value = "\u006c\u0065\u0066\u0074"
	case ST_PhoneticAlignmentCenter:
		_bcfab.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_PhoneticAlignmentDistributed:
		_bcfab.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _bcfab, nil
}

// ValidateWithPath validates the CT_PhoneticPr and its children, prefixing error messages with path
func (_eabbfb *CT_PhoneticPr) ValidateWithPath(path string) error {
	if _bfcgd := _eabbfb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bfcgd != nil {
		return _bfcgd
	}
	if _ddefc := _eabbfb.AlignmentAttr.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006et\u0041\u0074\u0074\u0072"); _ddefc != nil {
		return _ddefc
	}
	return nil
}
func (_eeaag ST_SourceType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_ecaadg := _a.Attr{}
	_ecaadg.Name = name
	switch _eeaag {
	case ST_SourceTypeUnset:
		_ecaadg.Value = ""
	case ST_SourceTypeWorksheet:
		_ecaadg.Value = "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case ST_SourceTypeExternal:
		_ecaadg.Value = "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c"
	case ST_SourceTypeConsolidation:
		_ecaadg.Value = "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"
	case ST_SourceTypeScenario:
		_ecaadg.Value = "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"
	}
	return _ecaadg, nil
}
func (_gcgfa ST_PageOrder) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gcgfa.String(), start)
}
func NewCT_Comments() *CT_Comments {
	_gfgg := &CT_Comments{}
	_gfgg.Authors = NewCT_Authors()
	_gfgg.CommentList = NewCT_CommentList()
	return _gfgg
}
func (_fdadg ST_Axis) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fdadg.String(), start)
}
func (_adgaa *ST_SheetState) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_adgaa = 0
	case "\u0076i\u0073\u0069\u0062\u006c\u0065":
		*_adgaa = 1
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_adgaa = 2
	case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
		*_adgaa = 3
	}
	return nil
}
func (_ccbab *CT_Row) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdbge := range start.Attr {
		if _cdbge.Name.Local == "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c" {
			_aegbc, _daegde := _f.ParseUint(_cdbge.Value, 10, 8)
			if _daegde != nil {
				return _daegde
			}
			_egece := uint8(_aegbc)
			_ccbab.OutlineLevelAttr = &_egece
			continue
		}
		if _cdbge.Name.Local == "\u0072" {
			_cedfd, _bbefdc := _f.ParseUint(_cdbge.Value, 10, 32)
			if _bbefdc != nil {
				return _bbefdc
			}
			_gbdeg := uint32(_cedfd)
			_ccbab.RAttr = &_gbdeg
			continue
		}
		if _cdbge.Name.Local == "\u0073" {
			_gegga, _ddcff := _f.ParseUint(_cdbge.Value, 10, 32)
			if _ddcff != nil {
				return _ddcff
			}
			_abadc := uint32(_gegga)
			_ccbab.SAttr = &_abadc
			continue
		}
		if _cdbge.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0046\u006f\u0072\u006d\u0061\u0074" {
			_cfdafd, _fgcae := _f.ParseBool(_cdbge.Value)
			if _fgcae != nil {
				return _fgcae
			}
			_ccbab.CustomFormatAttr = &_cfdafd
			continue
		}
		if _cdbge.Name.Local == "\u0068\u0074" {
			_fgdeed, _gecbad := _f.ParseFloat(_cdbge.Value, 64)
			if _gecbad != nil {
				return _gecbad
			}
			_ccbab.HtAttr = &_fgdeed
			continue
		}
		if _cdbge.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_ecaad, _gfcce := _f.ParseBool(_cdbge.Value)
			if _gfcce != nil {
				return _gfcce
			}
			_ccbab.HiddenAttr = &_ecaad
			continue
		}
		if _cdbge.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074" {
			_ecaeg, _ebfdbg := _f.ParseBool(_cdbge.Value)
			if _ebfdbg != nil {
				return _ebfdbg
			}
			_ccbab.CustomHeightAttr = &_ecaeg
			continue
		}
		if _cdbge.Name.Local == "\u0073\u0070\u0061n\u0073" {
			_dfdgaa, _cdddg := ParseSliceST_CellSpans(_cdbge.Value)
			if _cdddg != nil {
				return _cdddg
			}
			_ccbab.SpansAttr = &_dfdgaa
			continue
		}
		if _cdbge.Name.Local == "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d" {
			_bacfg, _ccebe := _f.ParseBool(_cdbge.Value)
			if _ccebe != nil {
				return _ccebe
			}
			_ccbab.CollapsedAttr = &_bacfg
			continue
		}
		if _cdbge.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070" {
			_affcgg, _eggdee := _f.ParseBool(_cdbge.Value)
			if _eggdee != nil {
				return _eggdee
			}
			_ccbab.ThickTopAttr = &_affcgg
			continue
		}
		if _cdbge.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0042\u006f\u0074" {
			_dabbf, _ggfdcb := _f.ParseBool(_cdbge.Value)
			if _ggfdcb != nil {
				return _ggfdcb
			}
			_ccbab.ThickBotAttr = &_dabbf
			continue
		}
		if _cdbge.Name.Local == "\u0070\u0068" {
			_bcdgf, _cbgacd := _f.ParseBool(_cdbge.Value)
			if _cbgacd != nil {
				return _cbgacd
			}
			_ccbab.PhAttr = &_bcdgf
			continue
		}
	}
_eecgg:
	for {
		_cbbdf, _cgefg := d.Token()
		if _cgefg != nil {
			return _cgefg
		}
		switch _beaca := _cbbdf.(type) {
		case _a.StartElement:
			switch _beaca.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_fceeeg := NewCT_Cell()
				if _efcbg := d.DecodeElement(_fceeeg, &_beaca); _efcbg != nil {
					return _efcbg
				}
				_ccbab.C = append(_ccbab.C, _fceeeg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccbab.ExtLst = NewCT_ExtensionList()
				if _gaeef := d.DecodeElement(_ccbab.ExtLst, &_beaca); _gaeef != nil {
					return _gaeef
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u006f\u0077\u0020\u0025\u0076", _beaca.Name)
				if _ggedb := d.Skip(); _ggedb != nil {
					return _ggedb
				}
			}
		case _a.EndElement:
			break _eecgg
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ColHierarchiesUsage and its children
func (_daad *CT_ColHierarchiesUsage) Validate() error {
	return _daad.ValidateWithPath("\u0043\u0054\u005f\u0043ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065")
}
func (_dfgdbe ST_PhoneticAlignment) Validate() error { return _dfgdbe.ValidateWithPath("") }

type ST_PatternType byte

func (_fdcaf *CT_CellWatch) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fc.Sprintf("\u0025\u0076", _fdcaf.RAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DataConsolidate and its children, prefixing error messages with path
func (_aceeb *CT_DataConsolidate) ValidateWithPath(path string) error {
	if _eccg := _aceeb.FunctionAttr.ValidateWithPath(path + "\u002f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _eccg != nil {
		return _eccg
	}
	if _aceeb.DataRefs != nil {
		if _fbae := _aceeb.DataRefs.ValidateWithPath(path + "\u002fD\u0061\u0074\u0061\u0052\u0065\u0066s"); _fbae != nil {
			return _fbae
		}
	}
	return nil
}
func NewCT_PivotField() *CT_PivotField { _dabbb := &CT_PivotField{}; return _dabbb }

type CT_UndoInfo struct {

	// Index
	IndexAttr uint32

	// Expression
	ExpAttr ST_FormulaExpression

	// Reference 3D
	Ref3DAttr *bool

	// Array Formula
	ArrayAttr *bool

	// Value Needed
	VAttr *bool

	// Defined Name Formula
	NfAttr *bool

	// Cross Sheet Move
	CsAttr *bool

	// Range
	DrAttr string

	// Defined Name
	DnAttr *string

	// Cell Reference
	RAttr *string

	// Sheet Id
	SIdAttr *uint32
}

func NewCT_MemberProperties() *CT_MemberProperties { _gbecc := &CT_MemberProperties{}; return _gbecc }
func (_ebegf ST_DataValidationOperator) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ebegf.String(), start)
}

type ST_Pane byte

// ValidateWithPath validates the CT_QueryTableRefresh and its children, prefixing error messages with path
func (_eecdg *CT_QueryTableRefresh) ValidateWithPath(path string) error {
	if _fgffa := _eecdg.QueryTableFields.ValidateWithPath(path + "\u002f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064\u0073"); _fgffa != nil {
		return _fgffa
	}
	if _eecdg.QueryTableDeletedFields != nil {
		if _egcde := _eecdg.QueryTableDeletedFields.ValidateWithPath(path + "\u002fQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065l\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"); _egcde != nil {
			return _egcde
		}
	}
	if _eecdg.SortState != nil {
		if _ddfdg := _eecdg.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _ddfdg != nil {
			return _ddfdg
		}
	}
	if _eecdg.ExtLst != nil {
		if _fbgba := _eecdg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbgba != nil {
			return _fbgba
		}
	}
	return nil
}
func NewCT_WebPublishObject() *CT_WebPublishObject { _bgaca := &CT_WebPublishObject{}; return _bgaca }
func (_edbgd ST_CfType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_edbgd.String(), start)
}

// Validate validates the CT_SingleXmlCells and its children
func (_abbafe *CT_SingleXmlCells) Validate() error {
	return _abbafe.ValidateWithPath("\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073")
}
func (_cbfgg *CT_OlapPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cffge := range start.Attr {
		if _cffge.Name.Local == "\u006c\u006f\u0063a\u006c" {
			_abdbed, _dgbfe := _f.ParseBool(_cffge.Value)
			if _dgbfe != nil {
				return _dgbfe
			}
			_cbfgg.LocalAttr = &_abdbed
			continue
		}
		if _cffge.Name.Local == "\u006co\u0063a\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e" {
			_bgdeec, _egcgg := _cffge.Value, error(nil)
			if _egcgg != nil {
				return _egcgg
			}
			_cbfgg.LocalConnectionAttr = &_bgdeec
			continue
		}
		if _cffge.Name.Local == "\u006c\u006f\u0063a\u006c\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_aceda, _beafe := _f.ParseBool(_cffge.Value)
			if _beafe != nil {
				return _beafe
			}
			_cbfgg.LocalRefreshAttr = &_aceda
			continue
		}
		if _cffge.Name.Local == "\u0073\u0065\u006e\u0064\u004c\u006f\u0063\u0061\u006c\u0065" {
			_feaa, _edddbg := _f.ParseBool(_cffge.Value)
			if _edddbg != nil {
				return _edddbg
			}
			_cbfgg.SendLocaleAttr = &_feaa
			continue
		}
		if _cffge.Name.Local == "\u0072\u006f\u0077\u0044\u0072\u0069\u006c\u006c\u0043\u006f\u0075\u006e\u0074" {
			_cgffc, _aeabd := _f.ParseUint(_cffge.Value, 10, 32)
			if _aeabd != nil {
				return _aeabd
			}
			_egecc := uint32(_cgffc)
			_cbfgg.RowDrillCountAttr = &_egecc
			continue
		}
		if _cffge.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u006c\u006c" {
			_cgaef, _gagga := _f.ParseBool(_cffge.Value)
			if _gagga != nil {
				return _gagga
			}
			_cbfgg.ServerFillAttr = &_cgaef
			continue
		}
		if _cffge.Name.Local == "\u0073e\u0072v\u0065\u0072\u004e\u0075\u006db\u0065\u0072F\u006f\u0072\u006d\u0061\u0074" {
			_cacgc, _fdba := _f.ParseBool(_cffge.Value)
			if _fdba != nil {
				return _fdba
			}
			_cbfgg.ServerNumberFormatAttr = &_cacgc
			continue
		}
		if _cffge.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u006e\u0074" {
			_eeafa, _eadae := _f.ParseBool(_cffge.Value)
			if _eadae != nil {
				return _eadae
			}
			_cbfgg.ServerFontAttr = &_eeafa
			continue
		}
		if _cffge.Name.Local == "\u0073e\u0072v\u0065\u0072\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006f\u0072" {
			_ceee, _ggbeff := _f.ParseBool(_cffge.Value)
			if _ggbeff != nil {
				return _ggbeff
			}
			_cbfgg.ServerFontColorAttr = &_ceee
			continue
		}
	}
	for {
		_eeede, _eedee := d.Token()
		if _eedee != nil {
			return _fc.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004f\u006c\u0061p\u0050\u0072\u003a\u0020\u0025\u0073", _eedee)
		}
		if _gefdf, _efggf := _eeede.(_a.EndElement); _efggf && _gefdf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cgcabd ST_HtmlFmt) ValidateWithPath(path string) error {
	switch _cgcabd {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgcabd))
	}
	return nil
}

// Validate validates the CT_MeasureDimensionMap and its children
func (_gcfeb *CT_MeasureDimensionMap) Validate() error {
	return _gcfeb.ValidateWithPath("\u0043\u0054\u005f\u004dea\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004da\u0070")
}

type CT_SheetCalcPr struct {

	// Full Calculation On Load
	FullCalcOnLoadAttr *bool
}

func (_ddgbe *ST_FieldSortType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ddgbe = 0
	case "\u006d\u0061\u006e\u0075\u0061\u006c":
		*_ddgbe = 1
	case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
		*_ddgbe = 2
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
		*_ddgbe = 3
	}
	return nil
}
func (_gbgbc ST_DataValidationOperator) Validate() error { return _gbgbc.ValidateWithPath("") }
func (_ceeaf *CT_Number) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fc.Sprintf("\u0025\u0076", _ceeaf.VAttr)})
	if _ceeaf.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ceeaf.UAttr))})
	}
	if _ceeaf.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ceeaf.FAttr))})
	}
	if _ceeaf.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_ceeaf.CAttr)})
	}
	if _ceeaf.CpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0070"}, Value: _fc.Sprintf("\u0025\u0076", *_ceeaf.CpAttr)})
	}
	if _ceeaf.InAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_ceeaf.InAttr)})
	}
	if _ceeaf.BcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_ceeaf.BcAttr)})
	}
	if _ceeaf.FcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0063"}, Value: _fc.Sprintf("\u0025\u0076", *_ceeaf.FcAttr)})
	}
	if _ceeaf.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ceeaf.IAttr))})
	}
	if _ceeaf.UnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ceeaf.UnAttr))})
	}
	if _ceeaf.StAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ceeaf.StAttr))})
	}
	if _ceeaf.BAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ceeaf.BAttr))})
	}
	e.EncodeToken(start)
	if _ceeaf.Tpls != nil {
		_afgfd := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _adgff := range _ceeaf.Tpls {
			e.EncodeElement(_adgff, _afgfd)
		}
	}
	if _ceeaf.X != nil {
		_cbfaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _bffab := range _ceeaf.X {
			e.EncodeElement(_bffab, _cbfaa)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_rowItems() *CT_rowItems { _abbbf := &CT_rowItems{}; return _abbbf }
func (_beadgb *CT_RevisionQueryTableField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _beadgb.SheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fc.Sprintf("\u0025\u0076", _beadgb.RefAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066i\u0065\u006c\u0064\u0049\u0064"}, Value: _fc.Sprintf("\u0025\u0076", _beadgb.FieldIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fffbgf ST_DataConsolidateFunction) Validate() error { return _fffbgf.ValidateWithPath("") }

// ValidateWithPath validates the CT_NumFmts and its children, prefixing error messages with path
func (_gbcdf *CT_NumFmts) ValidateWithPath(path string) error {
	for _acage, _fdcdd := range _gbcdf.NumFmt {
		if _gbbbg := _fdcdd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u004e\u0075\u006d\u0046\u006d\u0074\u005b\u0025\u0064\u005d", path, _acage)); _gbbbg != nil {
			return _gbbbg
		}
	}
	return nil
}
func (_dafeg *ST_Qualifier) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdeae, _cafdf := d.Token()
	if _cafdf != nil {
		return _cafdf
	}
	if _cdbfdab, _cbgda := _gdeae.(_a.EndElement); _cbgda && _cdbfdab.Name == start.Name {
		*_dafeg = 1
		return nil
	}
	if _bbbbac, _ccde := _gdeae.(_a.CharData); !_ccde {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdeae)
	} else {
		switch string(_bbbbac) {
		case "":
			*_dafeg = 0
		case "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
			*_dafeg = 1
		case "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
			*_dafeg = 2
		case "\u006e\u006f\u006e\u0065":
			*_dafeg = 3
		}
	}
	_gdeae, _cafdf = d.Token()
	if _cafdf != nil {
		return _cafdf
	}
	if _fefdfb, _edfcd := _gdeae.(_a.EndElement); _edfcd && _fefdfb.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdeae)
}
func (_dcbfb *CT_VolTypes) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_bgbcc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0076\u006f\u006c\u0054\u0079\u0070\u0065"}}
	for _, _dbcgc := range _dcbfb.VolType {
		e.EncodeElement(_dbcgc, _bgbcc)
	}
	if _dcbfb.ExtLst != nil {
		_bdfac := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dcbfb.ExtLst, _bdfac)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RevisionCustomView and its children
func (_bfadf *CT_RevisionCustomView) Validate() error {
	return _bfadf.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0075\u0073t\u006f\u006d\u0056\u0069\u0065\u0077")
}
func (_fdagb *CT_SharedItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fdagb.ContainsSemiMixedTypesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006e\u0074ai\u006e\u0073\u0053\u0065\u006d\u0069\u004d\u0069\u0078\u0065\u0064\u0054\u0079\u0070e\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdagb.ContainsSemiMixedTypesAttr))})
	}
	if _fdagb.ContainsNonDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u004e\u006f\u006e\u0044\u0061\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdagb.ContainsNonDateAttr))})
	}
	if _fdagb.ContainsDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0044\u0061\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdagb.ContainsDateAttr))})
	}
	if _fdagb.ContainsStringAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0053t\u0072\u0069\u006e\u0067"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdagb.ContainsStringAttr))})
	}
	if _fdagb.ContainsBlankAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042\u006c\u0061\u006e\u006b"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdagb.ContainsBlankAttr))})
	}
	if _fdagb.ContainsMixedTypesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u004di\u0078\u0065d\u0054\u0079\u0070\u0065\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdagb.ContainsMixedTypesAttr))})
	}
	if _fdagb.ContainsNumberAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u004eu\u006d\u0062\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdagb.ContainsNumberAttr))})
	}
	if _fdagb.ContainsIntegerAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u0049\u006e\u0074\u0065\u0067\u0065\u0072"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdagb.ContainsIntegerAttr))})
	}
	if _fdagb.MinValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e\u0056\u0061\u006c\u0075\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fdagb.MinValueAttr)})
	}
	if _fdagb.MaxValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078\u0056\u0061\u006c\u0075\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fdagb.MaxValueAttr)})
	}
	if _fdagb.MinDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006di\u006e\u0044\u0061\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fdagb.MinDateAttr)})
	}
	if _fdagb.MaxDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006da\u0078\u0044\u0061\u0074\u0065"}, Value: _fc.Sprintf("\u0025\u0076", *_fdagb.MaxDateAttr)})
	}
	if _fdagb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fdagb.CountAttr)})
	}
	if _fdagb.LongTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u006e\u0067\u0054\u0065\u0078\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fdagb.LongTextAttr))})
	}
	e.EncodeToken(start)
	if _fdagb.M != nil {
		_bbgcd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _fcgbe := range _fdagb.M {
			e.EncodeElement(_fcgbe, _bbgcd)
		}
	}
	if _fdagb.N != nil {
		_gacd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _bcfaf := range _fdagb.N {
			e.EncodeElement(_bcfaf, _gacd)
		}
	}
	if _fdagb.B != nil {
		_feecb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _ebaccb := range _fdagb.B {
			e.EncodeElement(_ebaccb, _feecb)
		}
	}
	if _fdagb.E != nil {
		_agcbag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _caefb := range _fdagb.E {
			e.EncodeElement(_caefb, _agcbag)
		}
	}
	if _fdagb.S != nil {
		_bedbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _cbgdf := range _fdagb.S {
			e.EncodeElement(_cbgdf, _bedbd)
		}
	}
	if _fdagb.D != nil {
		_ecgag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _dafdc := range _fdagb.D {
			e.EncodeElement(_dafdc, _ecgag)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_MdxSetOrder byte

// Validate validates the CT_Workbook and its children
func (_abdfg *CT_Workbook) Validate() error {
	return _abdfg.ValidateWithPath("C\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b")
}

type CT_CommentPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Alternative Text
	AltTextAttr *string

	// Text Horizontal Alignment
	TextHAlignAttr ST_TextHAlign

	// ext Vertical Alignment
	TextVAlignAttr ST_TextVAlign

	// Text Lock Flag
	LockTextAttr *bool

	// Far East Alignment Flag
	JustLastXAttr *bool

	// Automatic Text Scaling Flag
	AutoScaleAttr *bool
	Anchor        *CT_ObjectAnchor
}

func (_ecfde *CT_RevisionHeaders) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ecfde.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _cgacg := range start.Attr {
		if _cgacg.Name.Local == "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e" {
			_cacddb, _dddgg := _f.ParseBool(_cgacg.Value)
			if _dddgg != nil {
				return _dddgg
			}
			_ecfde.ExclusiveAttr = &_cacddb
			continue
		}
		if _cgacg.Name.Local == "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064" {
			_dfbbb, _fgadb := _cgacg.Value, error(nil)
			if _fgadb != nil {
				return _fgadb
			}
			_ecfde.LastGuidAttr = &_dfbbb
			continue
		}
		if _cgacg.Name.Local == "\u0073\u0068\u0061\u0072\u0065\u0064" {
			_beefb, _facfe := _f.ParseBool(_cgacg.Value)
			if _facfe != nil {
				return _facfe
			}
			_ecfde.SharedAttr = &_beefb
			continue
		}
		if _cgacg.Name.Local == "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073" {
			_bfedfd, _dcgabb := _f.ParseBool(_cgacg.Value)
			if _dcgabb != nil {
				return _dcgabb
			}
			_ecfde.DiskRevisionsAttr = &_bfedfd
			continue
		}
		if _cgacg.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_gddac, _cefec := _f.ParseBool(_cgacg.Value)
			if _cefec != nil {
				return _cefec
			}
			_ecfde.HistoryAttr = &_gddac
			continue
		}
		if _cgacg.Name.Local == "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073" {
			_debea, _egadb := _f.ParseBool(_cgacg.Value)
			if _egadb != nil {
				return _egadb
			}
			_ecfde.TrackRevisionsAttr = &_debea
			continue
		}
		if _cgacg.Name.Local == "\u0067\u0075\u0069\u0064" {
			_addba, _gefbb := _cgacg.Value, error(nil)
			if _gefbb != nil {
				return _gefbb
			}
			_ecfde.GuidAttr = _addba
			continue
		}
		if _cgacg.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064" {
			_ggcce, _fafbc := _f.ParseUint(_cgacg.Value, 10, 32)
			if _fafbc != nil {
				return _fafbc
			}
			_ecece := uint32(_ggcce)
			_ecfde.RevisionIdAttr = &_ecece
			continue
		}
		if _cgacg.Name.Local == "\u0076e\u0072\u0073\u0069\u006f\u006e" {
			_caaff, _baefe := _f.ParseInt(_cgacg.Value, 10, 32)
			if _baefe != nil {
				return _baefe
			}
			_gbdcg := int32(_caaff)
			_ecfde.VersionAttr = &_gbdcg
			continue
		}
		if _cgacg.Name.Local == "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079" {
			_fdbbe, _eebed := _f.ParseBool(_cgacg.Value)
			if _eebed != nil {
				return _eebed
			}
			_ecfde.KeepChangeHistoryAttr = &_fdbbe
			continue
		}
		if _cgacg.Name.Local == "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d" {
			_acacf, _dbccc := _f.ParseBool(_cgacg.Value)
			if _dbccc != nil {
				return _dbccc
			}
			_ecfde.ProtectedAttr = &_acacf
			continue
		}
		if _cgacg.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079" {
			_eadf, _cgaag := _f.ParseUint(_cgacg.Value, 10, 32)
			if _cgaag != nil {
				return _cgaag
			}
			_eebafd := uint32(_eadf)
			_ecfde.PreserveHistoryAttr = &_eebafd
			continue
		}
	}
_deabd:
	for {
		_gfgdb, _eebgg := d.Token()
		if _eebgg != nil {
			return _eebgg
		}
		switch _dacb := _gfgdb.(type) {
		case _a.StartElement:
			switch _dacb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				_gccdfa := NewCT_RevisionHeader()
				if _fddbe := d.DecodeElement(_gccdfa, &_dacb); _fddbe != nil {
					return _fddbe
				}
				_ecfde.Header = append(_ecfde.Header, _gccdfa)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0048\u0065\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _dacb.Name)
				if _dgbge := d.Skip(); _dgbge != nil {
					return _dgbge
				}
			}
		case _a.EndElement:
			break _deabd
		case _a.CharData:
		}
	}
	return nil
}
func NewQueryTable() *QueryTable {
	_eccdae := &QueryTable{}
	_eccdae.CT_QueryTable = *NewCT_QueryTable()
	return _eccdae
}

// ValidateWithPath validates the CT_WebPublishItem and its children, prefixing error messages with path
func (_agdcg *CT_WebPublishItem) ValidateWithPath(path string) error {
	if _agdcg.SourceTypeAttr == ST_WebSourceTypeUnset {
		return _fc.Errorf("\u0025\u0073\u002f\u0053\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006da\u006e\u0064\u0061\u0074\u006fr\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _gfged := _agdcg.SourceTypeAttr.ValidateWithPath(path + "\u002fS\u006fu\u0072\u0063\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _gfged != nil {
		return _gfged
	}
	return nil
}
func NewCT_UndoInfo() *CT_UndoInfo {
	_fdcga := &CT_UndoInfo{}
	_fdcga.ExpAttr = ST_FormulaExpression(1)
	return _fdcga
}
func (_bfcdc *CT_colItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dcfbag := range start.Attr {
		if _dcfbag.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dccecd, _gfgegf := _f.ParseUint(_dcfbag.Value, 10, 32)
			if _gfgegf != nil {
				return _gfgegf
			}
			_edafg := uint32(_dccecd)
			_bfcdc.CountAttr = &_edafg
			continue
		}
	}
_ccgade:
	for {
		_bdfcb, _bcefa := d.Token()
		if _bcefa != nil {
			return _bcefa
		}
		switch _dedef := _bdfcb.(type) {
		case _a.StartElement:
			switch _dedef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_efadc := NewCT_I()
				if _ccdada := d.DecodeElement(_efadc, &_dedef); _ccdada != nil {
					return _ccdada
				}
				_bfcdc.I = append(_bfcdc.I, _efadc)
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _dedef.Name)
				if _gcaef := d.Skip(); _gcaef != nil {
					return _gcaef
				}
			}
		case _a.EndElement:
			break _ccgade
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PCDSCPage and its children, prefixing error messages with path
func (_egbe *CT_PCDSCPage) ValidateWithPath(path string) error {
	for _edeca, _ggbd := range _egbe.PageItem {
		if _aeffg := _ggbd.ValidateWithPath(_fc.Sprintf("\u0025s\u002fP\u0061\u0067\u0065\u0049\u0074\u0065\u006d\u005b\u0025\u0064\u005d", path, _edeca)); _aeffg != nil {
			return _aeffg
		}
	}
	return nil
}
func (_cfdd *CT_Groups) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cfdd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_cfdd.CountAttr)})
	}
	e.EncodeToken(start)
	_bgbda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070"}}
	for _, _afde := range _cfdd.Group {
		e.EncodeElement(_afde, _bgbda)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_MdxSet struct {

	// Set Definition Index
	NsAttr uint32

	// Sort By Member Index Count
	CAttr *uint32

	// Set Sort Order
	OAttr ST_MdxSetOrder

	// Member Unique Name Index
	N []*CT_MetadataStringIndex
}

func (_feaed ST_PageOrder) ValidateWithPath(path string) error {
	switch _feaed {
	case 0, 1, 2:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_feaed))
	}
	return nil
}
func (_dfafg ST_VerticalAlignment) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bbdccf := _a.Attr{}
	_bbdccf.Name = name
	switch _dfafg {
	case ST_VerticalAlignmentUnset:
		_bbdccf.Value = ""
	case ST_VerticalAlignmentTop:
		_bbdccf.Value = "\u0074\u006f\u0070"
	case ST_VerticalAlignmentCenter:
		_bbdccf.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_VerticalAlignmentBottom:
		_bbdccf.Value = "\u0062\u006f\u0074\u0074\u006f\u006d"
	case ST_VerticalAlignmentJustify:
		_bbdccf.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_VerticalAlignmentDistributed:
		_bbdccf.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _bbdccf, nil
}
func NewCT_CustomSheetViews() *CT_CustomSheetViews { _gedf := &CT_CustomSheetViews{}; return _gedf }
func (_cafee *CT_PhoneticRun) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gbedd := range start.Attr {
		if _gbedd.Name.Local == "\u0073\u0062" {
			_bcddg, _fdbdb := _f.ParseUint(_gbedd.Value, 10, 32)
			if _fdbdb != nil {
				return _fdbdb
			}
			_cafee.SbAttr = uint32(_bcddg)
			continue
		}
		if _gbedd.Name.Local == "\u0065\u0062" {
			_dbcbd, _cadbc := _f.ParseUint(_gbedd.Value, 10, 32)
			if _cadbc != nil {
				return _cadbc
			}
			_cafee.EbAttr = uint32(_dbcbd)
			continue
		}
	}
_fddae:
	for {
		_dbfcg, _aabcb := d.Token()
		if _aabcb != nil {
			return _aabcb
		}
		switch _bccbc := _dbfcg.(type) {
		case _a.StartElement:
			switch _bccbc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _afgfb := d.DecodeElement(&_cafee.T, &_bccbc); _afgfb != nil {
					return _afgfb
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069c\u0052u\u006e\u0020\u0025\u0076", _bccbc.Name)
				if _bedee := d.Skip(); _bedee != nil {
					return _bedee
				}
			}
		case _a.EndElement:
			break _fddae
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_BookViews() *CT_BookViews { _cgc := &CT_BookViews{}; return _cgc }
func (_ccaff ST_DynamicFilterType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_ccaaab := _a.Attr{}
	_ccaaab.Name = name
	switch _ccaff {
	case ST_DynamicFilterTypeUnset:
		_ccaaab.Value = ""
	case ST_DynamicFilterTypeNull:
		_ccaaab.Value = "\u006e\u0075\u006c\u006c"
	case ST_DynamicFilterTypeAboveAverage:
		_ccaaab.Value = "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case ST_DynamicFilterTypeBelowAverage:
		_ccaaab.Value = "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case ST_DynamicFilterTypeTomorrow:
		_ccaaab.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_DynamicFilterTypeToday:
		_ccaaab.Value = "\u0074\u006f\u0064a\u0079"
	case ST_DynamicFilterTypeYesterday:
		_ccaaab.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_DynamicFilterTypeNextWeek:
		_ccaaab.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeThisWeek:
		_ccaaab.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeLastWeek:
		_ccaaab.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeNextMonth:
		_ccaaab.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeThisMonth:
		_ccaaab.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeLastMonth:
		_ccaaab.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeNextQuarter:
		_ccaaab.Value = "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeThisQuarter:
		_ccaaab.Value = "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeLastQuarter:
		_ccaaab.Value = "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeNextYear:
		_ccaaab.Value = "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeThisYear:
		_ccaaab.Value = "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeLastYear:
		_ccaaab.Value = "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeYearToDate:
		_ccaaab.Value = "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case ST_DynamicFilterTypeQ1:
		_ccaaab.Value = "\u0051\u0031"
	case ST_DynamicFilterTypeQ2:
		_ccaaab.Value = "\u0051\u0032"
	case ST_DynamicFilterTypeQ3:
		_ccaaab.Value = "\u0051\u0033"
	case ST_DynamicFilterTypeQ4:
		_ccaaab.Value = "\u0051\u0034"
	case ST_DynamicFilterTypeM1:
		_ccaaab.Value = "\u004d\u0031"
	case ST_DynamicFilterTypeM2:
		_ccaaab.Value = "\u004d\u0032"
	case ST_DynamicFilterTypeM3:
		_ccaaab.Value = "\u004d\u0033"
	case ST_DynamicFilterTypeM4:
		_ccaaab.Value = "\u004d\u0034"
	case ST_DynamicFilterTypeM5:
		_ccaaab.Value = "\u004d\u0035"
	case ST_DynamicFilterTypeM6:
		_ccaaab.Value = "\u004d\u0036"
	case ST_DynamicFilterTypeM7:
		_ccaaab.Value = "\u004d\u0037"
	case ST_DynamicFilterTypeM8:
		_ccaaab.Value = "\u004d\u0038"
	case ST_DynamicFilterTypeM9:
		_ccaaab.Value = "\u004d\u0039"
	case ST_DynamicFilterTypeM10:
		_ccaaab.Value = "\u004d\u0031\u0030"
	case ST_DynamicFilterTypeM11:
		_ccaaab.Value = "\u004d\u0031\u0031"
	case ST_DynamicFilterTypeM12:
		_ccaaab.Value = "\u004d\u0031\u0032"
	}
	return _ccaaab, nil
}
func (_afdfc *CT_GroupMember) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _afdfc.UniqueNameAttr)})
	if _afdfc.GroupAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u006fu\u0070"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_afdfc.GroupAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ChartsheetPr and its children, prefixing error messages with path
func (_aggc *CT_ChartsheetPr) ValidateWithPath(path string) error {
	if _aggc.TabColor != nil {
		if _efd := _aggc.TabColor.ValidateWithPath(path + "\u002fT\u0061\u0062\u0043\u006f\u006c\u006fr"); _efd != nil {
			return _efd
		}
	}
	return nil
}

// Validate validates the CT_TextFields and its children
func (_fdbbf *CT_TextFields) Validate() error {
	return _fdbbf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073")
}
func (_eddba ST_SortMethod) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_eddba.String(), start)
}

type CT_SmartTags struct {

	// Cell Smart Tags
	CellSmartTags []*CT_CellSmartTags
}

func (_edaabb ST_Objects) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_edaabb.String(), start)
}
func (_fd *CT_BookView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fd.VisibilityAttr != ST_VisibilityUnset {
		_ebe, _eaa := _fd.VisibilityAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0069\u0073\u0069\u0062\u0069\u006c\u0069\u0074\u0079"})
		if _eaa != nil {
			return _eaa
		}
		start.Attr = append(start.Attr, _ebe)
	}
	if _fd.MinimizedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fd.MinimizedAttr))})
	}
	if _fd.ShowHorizontalScrollAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fd.ShowHorizontalScrollAttr))})
	}
	if _fd.ShowVerticalScrollAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fd.ShowVerticalScrollAttr))})
	}
	if _fd.ShowSheetTabsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fd.ShowSheetTabsAttr))})
	}
	if _fd.XWindowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0076", *_fd.XWindowAttr)})
	}
	if _fd.YWindowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _fc.Sprintf("\u0025\u0076", *_fd.YWindowAttr)})
	}
	if _fd.WindowWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068"}, Value: _fc.Sprintf("\u0025\u0076", *_fd.WindowWidthAttr)})
	}
	if _fd.WindowHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fd.WindowHeightAttr)})
	}
	if _fd.TabRatioAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_fd.TabRatioAttr)})
	}
	if _fd.FirstSheetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0053\u0068\u0065\u0065\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_fd.FirstSheetAttr)})
	}
	if _fd.ActiveTabAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0054\u0061b"}, Value: _fc.Sprintf("\u0025\u0076", *_fd.ActiveTabAttr)})
	}
	if _fd.AutoFilterDateGroupingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006fFi\u006c\u0074\u0065\u0072\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0069n\u0067"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_fd.AutoFilterDateGroupingAttr))})
	}
	e.EncodeToken(start)
	if _fd.ExtLst != nil {
		_eec := _a.StartElement{Name: _a.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fd.ExtLst, _eec)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewVolTypes() *VolTypes {
	_acbcg := &VolTypes{}
	_acbcg.CT_VolTypes = *NewCT_VolTypes()
	return _acbcg
}
func (_dbeb *CT_CalcCell) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _daae := range start.Attr {
		if _daae.Name.Local == "\u0072" {
			_aag, _afad := _daae.Value, error(nil)
			if _afad != nil {
				return _afad
			}
			_dbeb.RAttr = &_aag
			continue
		}
		if _daae.Name.Local == "\u0072\u0065\u0066" {
			_decd, _eab := _daae.Value, error(nil)
			if _eab != nil {
				return _eab
			}
			_dbeb.RefAttr = &_decd
			continue
		}
		if _daae.Name.Local == "\u0069" {
			_gbaa, _dbd := _f.ParseInt(_daae.Value, 10, 32)
			if _dbd != nil {
				return _dbd
			}
			_dgde := int32(_gbaa)
			_dbeb.IAttr = &_dgde
			continue
		}
		if _daae.Name.Local == "\u0073" {
			_aca, _fdag := _f.ParseBool(_daae.Value)
			if _fdag != nil {
				return _fdag
			}
			_dbeb.SAttr = &_aca
			continue
		}
		if _daae.Name.Local == "\u006c" {
			_aeb, _faba := _f.ParseBool(_daae.Value)
			if _faba != nil {
				return _faba
			}
			_dbeb.LAttr = &_aeb
			continue
		}
		if _daae.Name.Local == "\u0074" {
			_ggdg, _ddge := _f.ParseBool(_daae.Value)
			if _ddge != nil {
				return _ddge
			}
			_dbeb.TAttr = &_ggdg
			continue
		}
		if _daae.Name.Local == "\u0061" {
			_fgcg, _eefd := _f.ParseBool(_daae.Value)
			if _eefd != nil {
				return _eefd
			}
			_dbeb.AAttr = &_fgcg
			continue
		}
	}
	for {
		_bfgf, _decb := d.Token()
		if _decb != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c\u003a\u0020\u0025\u0073", _decb)
		}
		if _bcbf, _gcac := _bfgf.(_a.EndElement); _gcac && _bcbf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ggfdge *Worksheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ggfdge.CT_Worksheet = *NewCT_Worksheet()
_fccad:
	for {
		_dbdeaa, _fedba := d.Token()
		if _fedba != nil {
			return _fedba
		}
		switch _afcacf := _dbdeaa.(type) {
		case _a.StartElement:
			switch _afcacf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_ggfdge.SheetPr = NewCT_SheetPr()
				if _cadbcg := d.DecodeElement(_ggfdge.SheetPr, &_afcacf); _cadbcg != nil {
					return _cadbcg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_ggfdge.Dimension = NewCT_SheetDimension()
				if _gffg := d.DecodeElement(_ggfdge.Dimension, &_afcacf); _gffg != nil {
					return _gffg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_ggfdge.SheetViews = NewCT_SheetViews()
				if _gadfb := d.DecodeElement(_ggfdge.SheetViews, &_afcacf); _gadfb != nil {
					return _gadfb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_ggfdge.SheetFormatPr = NewCT_SheetFormatPr()
				if _bdbdb := d.DecodeElement(_ggfdge.SheetFormatPr, &_afcacf); _bdbdb != nil {
					return _bdbdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_fcgde := NewCT_Cols()
				if _dccgd := d.DecodeElement(_fcgde, &_afcacf); _dccgd != nil {
					return _dccgd
				}
				_ggfdge.Cols = append(_ggfdge.Cols, _fcgde)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _ccgcc := d.DecodeElement(_ggfdge.SheetData, &_afcacf); _ccgcc != nil {
					return _ccgcc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}:
				_ggfdge.SheetCalcPr = NewCT_SheetCalcPr()
				if _geabf := d.DecodeElement(_ggfdge.SheetCalcPr, &_afcacf); _geabf != nil {
					return _geabf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_ggfdge.SheetProtection = NewCT_SheetProtection()
				if _agebdc := d.DecodeElement(_ggfdge.SheetProtection, &_afcacf); _agebdc != nil {
					return _agebdc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}:
				_ggfdge.ProtectedRanges = NewCT_ProtectedRanges()
				if _aceba := d.DecodeElement(_ggfdge.ProtectedRanges, &_afcacf); _aceba != nil {
					return _aceba
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}:
				_ggfdge.Scenarios = NewCT_Scenarios()
				if _ceddg := d.DecodeElement(_ggfdge.Scenarios, &_afcacf); _ceddg != nil {
					return _ceddg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_ggfdge.AutoFilter = NewCT_AutoFilter()
				if _bgafbe := d.DecodeElement(_ggfdge.AutoFilter, &_afcacf); _bgafbe != nil {
					return _bgafbe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_ggfdge.SortState = NewCT_SortState()
				if _cbddcc := d.DecodeElement(_ggfdge.SortState, &_afcacf); _cbddcc != nil {
					return _cbddcc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_ggfdge.DataConsolidate = NewCT_DataConsolidate()
				if _ceegd := d.DecodeElement(_ggfdge.DataConsolidate, &_afcacf); _ceegd != nil {
					return _ceegd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_ggfdge.CustomSheetViews = NewCT_CustomSheetViews()
				if _cecgf := d.DecodeElement(_ggfdge.CustomSheetViews, &_afcacf); _cecgf != nil {
					return _cecgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}:
				_ggfdge.MergeCells = NewCT_MergeCells()
				if _ggccg := d.DecodeElement(_ggfdge.MergeCells, &_afcacf); _ggccg != nil {
					return _ggccg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_ggfdge.PhoneticPr = NewCT_PhoneticPr()
				if _bedabc := d.DecodeElement(_ggfdge.PhoneticPr, &_afcacf); _bedabc != nil {
					return _bedabc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_dbeee := NewCT_ConditionalFormatting()
				if _deacdg := d.DecodeElement(_dbeee, &_afcacf); _deacdg != nil {
					return _deacdg
				}
				_ggfdge.ConditionalFormatting = append(_ggfdge.ConditionalFormatting, _dbeee)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}:
				_ggfdge.DataValidations = NewCT_DataValidations()
				if _dffaa := d.DecodeElement(_ggfdge.DataValidations, &_afcacf); _dffaa != nil {
					return _dffaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}:
				_ggfdge.Hyperlinks = NewCT_Hyperlinks()
				if _gecea := d.DecodeElement(_ggfdge.Hyperlinks, &_afcacf); _gecea != nil {
					return _gecea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_ggfdge.PrintOptions = NewCT_PrintOptions()
				if _afddg := d.DecodeElement(_ggfdge.PrintOptions, &_afcacf); _afddg != nil {
					return _afddg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_ggfdge.PageMargins = NewCT_PageMargins()
				if _ddbbbc := d.DecodeElement(_ggfdge.PageMargins, &_afcacf); _ddbbbc != nil {
					return _ddbbbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_ggfdge.PageSetup = NewCT_PageSetup()
				if _gfdbfa := d.DecodeElement(_ggfdge.PageSetup, &_afcacf); _gfdbfa != nil {
					return _gfdbfa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_ggfdge.HeaderFooter = NewCT_HeaderFooter()
				if _gegddg := d.DecodeElement(_ggfdge.HeaderFooter, &_afcacf); _gegddg != nil {
					return _gegddg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_ggfdge.RowBreaks = NewCT_PageBreak()
				if _effgf := d.DecodeElement(_ggfdge.RowBreaks, &_afcacf); _effgf != nil {
					return _effgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_ggfdge.ColBreaks = NewCT_PageBreak()
				if _bdaccf := d.DecodeElement(_ggfdge.ColBreaks, &_afcacf); _bdaccf != nil {
					return _bdaccf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_ggfdge.CustomProperties = NewCT_CustomProperties()
				if _cffcbe := d.DecodeElement(_ggfdge.CustomProperties, &_afcacf); _cffcbe != nil {
					return _cffcbe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}:
				_ggfdge.CellWatches = NewCT_CellWatches()
				if _agdgeb := d.DecodeElement(_ggfdge.CellWatches, &_afcacf); _agdgeb != nil {
					return _agdgeb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}:
				_ggfdge.IgnoredErrors = NewCT_IgnoredErrors()
				if _ceggc := d.DecodeElement(_ggfdge.IgnoredErrors, &_afcacf); _ceggc != nil {
					return _ceggc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_ggfdge.SmartTags = NewCT_SmartTags()
				if _ececd := d.DecodeElement(_ggfdge.SmartTags, &_afcacf); _ececd != nil {
					return _ececd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_ggfdge.Drawing = NewCT_Drawing()
				if _fdbcb := d.DecodeElement(_ggfdge.Drawing, &_afcacf); _fdbcb != nil {
					return _fdbcb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_ggfdge.LegacyDrawing = NewCT_LegacyDrawing()
				if _cdfdfd := d.DecodeElement(_ggfdge.LegacyDrawing, &_afcacf); _cdfdfd != nil {
					return _cdfdfd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_ggfdge.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _edbdgb := d.DecodeElement(_ggfdge.LegacyDrawingHF, &_afcacf); _edbdgb != nil {
					return _edbdgb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_ggfdge.DrawingHF = NewCT_DrawingHF()
				if _eceffe := d.DecodeElement(_ggfdge.DrawingHF, &_afcacf); _eceffe != nil {
					return _eceffe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_ggfdge.Picture = NewCT_SheetBackgroundPicture()
				if _ffecca := d.DecodeElement(_ggfdge.Picture, &_afcacf); _ffecca != nil {
					return _ffecca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_ggfdge.OleObjects = NewCT_OleObjects()
				if _gebdae := d.DecodeElement(_ggfdge.OleObjects, &_afcacf); _gebdae != nil {
					return _gebdae
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_ggfdge.Controls = NewCT_Controls()
				if _bgbbc := d.DecodeElement(_ggfdge.Controls, &_afcacf); _bgbbc != nil {
					return _bgbbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_ggfdge.WebPublishItems = NewCT_WebPublishItems()
				if _bcccb := d.DecodeElement(_ggfdge.WebPublishItems, &_afcacf); _bcccb != nil {
					return _bcccb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}:
				_ggfdge.TableParts = NewCT_TableParts()
				if _cdcdg := d.DecodeElement(_ggfdge.TableParts, &_afcacf); _cdcdg != nil {
					return _cdcdg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggfdge.ExtLst = NewCT_ExtensionList()
				if _gbfga := d.DecodeElement(_ggfdge.ExtLst, &_afcacf); _gbfga != nil {
					return _gbfga
				}
			default:
				_ee.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0057\u006f\u0072\u006b\u0073\u0068e\u0065\u0074 \u0025\u0076", _afcacf.Name)
				if _defed := d.Skip(); _defed != nil {
					return _defed
				}
			}
		case _a.EndElement:
			break _fccad
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the Dialogsheet and its children, prefixing error messages with path
func (_ffgddg *Dialogsheet) ValidateWithPath(path string) error {
	if _ggggd := _ffgddg.CT_Dialogsheet.ValidateWithPath(path); _ggggd != nil {
		return _ggggd
	}
	return nil
}

// ValidateWithPath validates the CT_Tuple and its children, prefixing error messages with path
func (_ggbbe *CT_Tuple) ValidateWithPath(path string) error { return nil }
func (_gbggbg *ST_ShowDataAs) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gbggbg = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_gbggbg = 1
	case "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065":
		*_gbggbg = 2
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_gbggbg = 3
	case "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066":
		*_gbggbg = 4
	case "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c":
		*_gbggbg = 5
	case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077":
		*_gbggbg = 6
	case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c":
		*_gbggbg = 7
	case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c":
		*_gbggbg = 8
	case "\u0069\u006e\u0064e\u0078":
		*_gbggbg = 9
	}
	return nil
}
func (_daffa *CT_CustomChartsheetViews) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_bcbe:
	for {
		_cccd, _gagbg := d.Token()
		if _gagbg != nil {
			return _gagbg
		}
		switch _ccdcd := _cccd.(type) {
		case _a.StartElement:
			switch _ccdcd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}:
				_bfbgd := NewCT_CustomChartsheetView()
				if _aecdb := d.DecodeElement(_bfbgd, &_ccdcd); _aecdb != nil {
					return _aecdb
				}
				_daffa.CustomSheetView = append(_daffa.CustomSheetView, _bfbgd)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073\u0020%\u0076", _ccdcd.Name)
				if _dafc := d.Skip(); _dafc != nil {
					return _dafc
				}
			}
		case _a.EndElement:
			break _bcbe
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RElt and its children, prefixing error messages with path
func (_edbeb *CT_RElt) ValidateWithPath(path string) error {
	if _edbeb.RPr != nil {
		if _dagdg := _edbeb.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _dagdg != nil {
			return _dagdg
		}
	}
	return nil
}
func NewCT_Filters() *CT_Filters { _afdca := &CT_Filters{}; return _afdca }

// Validate validates the CT_String and its children
func (_bbffa *CT_String) Validate() error {
	return _bbffa.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg")
}

// ValidateWithPath validates the CT_CalcChain and its children, prefixing error messages with path
func (_cfga *CT_CalcChain) ValidateWithPath(path string) error {
	for _dafg, _bbggg := range _cfga.C {
		if _bab := _bbggg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0043\u005b\u0025\u0064\u005d", path, _dafg)); _bab != nil {
			return _bab
		}
	}
	if _cfga.ExtLst != nil {
		if _dfd := _cfga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfd != nil {
			return _dfd
		}
	}
	return nil
}
func (_agabg ST_OleUpdate) Validate() error { return _agabg.ValidateWithPath("") }
func (_edbebda ST_DataConsolidateFunction) String() string {
	switch _edbebda {
	case 0:
		return ""
	case 1:
		return "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case 2:
		return "\u0063\u006f\u0075n\u0074"
	case 3:
		return "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case 4:
		return "\u006d\u0061\u0078"
	case 5:
		return "\u006d\u0069\u006e"
	case 6:
		return "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case 7:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 8:
		return "\u0073t\u0064\u0044\u0065\u0076\u0070"
	case 9:
		return "\u0073\u0075\u006d"
	case 10:
		return "\u0076\u0061\u0072"
	case 11:
		return "\u0076\u0061\u0072\u0070"
	}
	return ""
}

type CT_Filters struct {

	// Filter by Blank
	BlankAttr *bool

	// Calendar Type
	CalendarTypeAttr _ae.ST_CalendarType

	// Filter
	Filter []*CT_Filter

	// Date Grouping
	DateGroupItem []*CT_DateGroupItem
}

func (_bcabb *CT_ColFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aged := range start.Attr {
		if _aged.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dgbe, _bdcc := _f.ParseUint(_aged.Value, 10, 32)
			if _bdcc != nil {
				return _bdcc
			}
			_efaca := uint32(_dgbe)
			_bcabb.CountAttr = &_efaca
			continue
		}
	}
_deae:
	for {
		_gdce, _efad := d.Token()
		if _efad != nil {
			return _efad
		}
		switch _cegbd := _gdce.(type) {
		case _a.StartElement:
			switch _cegbd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}:
				_dfgge := NewCT_Field()
				if _fdcg := d.DecodeElement(_dfgge, &_cegbd); _fdcg != nil {
					return _fdcg
				}
				_bcabb.Field = append(_bcabb.Field, _dfgge)
			default:
				_ee.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006cF\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _cegbd.Name)
				if _fgaa := d.Skip(); _fgaa != nil {
					return _fgaa
				}
			}
		case _a.EndElement:
			break _deae
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Parameters and its children, prefixing error messages with path
func (_efgcb *CT_Parameters) ValidateWithPath(path string) error {
	for _gdfbf, _dgeae := range _efgcb.Parameter {
		if _fegbf := _dgeae.ValidateWithPath(_fc.Sprintf("\u0025\u0073/\u0050\u0061\u0072a\u006d\u0065\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _gdfbf)); _fegbf != nil {
			return _fegbf
		}
	}
	return nil
}
func (_fbeacc ST_FilterOperator) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dbdeb := _a.Attr{}
	_dbdeb.Name = name
	switch _fbeacc {
	case ST_FilterOperatorUnset:
		_dbdeb.Value = ""
	case ST_FilterOperatorEqual:
		_dbdeb.Value = "\u0065\u0071\u0075a\u006c"
	case ST_FilterOperatorLessThan:
		_dbdeb.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_FilterOperatorLessThanOrEqual:
		_dbdeb.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorNotEqual:
		_dbdeb.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorGreaterThanOrEqual:
		_dbdeb.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorGreaterThan:
		_dbdeb.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	}
	return _dbdeb, nil
}
func (_begfb ST_FormatAction) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fgddf := _a.Attr{}
	_fgddf.Name = name
	switch _begfb {
	case ST_FormatActionUnset:
		_fgddf.Value = ""
	case ST_FormatActionBlank:
		_fgddf.Value = "\u0062\u006c\u0061n\u006b"
	case ST_FormatActionFormatting:
		_fgddf.Value = "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"
	case ST_FormatActionDrill:
		_fgddf.Value = "\u0064\u0072\u0069l\u006c"
	case ST_FormatActionFormula:
		_fgddf.Value = "\u0066o\u0072\u006d\u0075\u006c\u0061"
	}
	return _fgddf, nil
}

// ValidateWithPath validates the CT_ServerFormats and its children, prefixing error messages with path
func (_dfacd *CT_ServerFormats) ValidateWithPath(path string) error {
	for _fgede, _agcfg := range _dfacd.ServerFormat {
		if _cfbdc := _agcfg.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0053er\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _fgede)); _cfbdc != nil {
			return _cfbdc
		}
	}
	return nil
}
func (_fgafcc *ST_Scope) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fgafcc = 0
	case "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn":
		*_fgafcc = 1
	case "\u0064\u0061\u0074\u0061":
		*_fgafcc = 2
	case "\u0066\u0069\u0065l\u0064":
		*_fgafcc = 3
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalReferences and its children, prefixing error messages with path
func (_ccgbg *CT_ExternalReferences) ValidateWithPath(path string) error {
	for _ebbed, _fecce := range _ccgbg.ExternalReference {
		if _ebdaf := _fecce.ValidateWithPath(_fc.Sprintf("\u0025s\u002f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u005b\u0025\u0064\u005d", path, _ebbed)); _ebdaf != nil {
			return _ebdaf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableStyleElement and its children, prefixing error messages with path
func (_cedbg *CT_TableStyleElement) ValidateWithPath(path string) error {
	if _cedbg.TypeAttr == ST_TableStyleTypeUnset {
		return _fc.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gcgfd := _cedbg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gcgfd != nil {
		return _gcgfd
	}
	return nil
}
func (_abcbd ST_CellComments) ValidateWithPath(path string) error {
	switch _abcbd {
	case 0, 1, 2, 3:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abcbd))
	}
	return nil
}

const (
	ST_WebSourceTypeUnset      ST_WebSourceType = 0
	ST_WebSourceTypeSheet      ST_WebSourceType = 1
	ST_WebSourceTypePrintArea  ST_WebSourceType = 2
	ST_WebSourceTypeAutoFilter ST_WebSourceType = 3
	ST_WebSourceTypeRange      ST_WebSourceType = 4
	ST_WebSourceTypeChart      ST_WebSourceType = 5
	ST_WebSourceTypePivotTable ST_WebSourceType = 6
	ST_WebSourceTypeQuery      ST_WebSourceType = 7
	ST_WebSourceTypeLabel      ST_WebSourceType = 8
)

func (_ggcgfb *CT_WebPublishing) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eaefcg := range start.Attr {
		if _eaefcg.Name.Local == "\u0063\u0073\u0073" {
			_beefae, _bbcda := _f.ParseBool(_eaefcg.Value)
			if _bbcda != nil {
				return _bbcda
			}
			_ggcgfb.CssAttr = &_beefae
			continue
		}
		if _eaefcg.Name.Local == "\u0074h\u0069\u0063\u006b\u0065\u0074" {
			_effdfg, _fgcda := _f.ParseBool(_eaefcg.Value)
			if _fgcda != nil {
				return _fgcda
			}
			_ggcgfb.ThicketAttr = &_effdfg
			continue
		}
		if _eaefcg.Name.Local == "\u006c\u006f\u006e\u0067\u0046\u0069\u006c\u0065\u004e\u0061\u006d\u0065\u0073" {
			_bgege, _bccfec := _f.ParseBool(_eaefcg.Value)
			if _bccfec != nil {
				return _bccfec
			}
			_ggcgfb.LongFileNamesAttr = &_bgege
			continue
		}
		if _eaefcg.Name.Local == "\u0076\u006d\u006c" {
			_bfccdg, _ffcfe := _f.ParseBool(_eaefcg.Value)
			if _ffcfe != nil {
				return _ffcfe
			}
			_ggcgfb.VmlAttr = &_bfccdg
			continue
		}
		if _eaefcg.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067" {
			_cffaa, _fbfba := _f.ParseBool(_eaefcg.Value)
			if _fbfba != nil {
				return _fbfba
			}
			_ggcgfb.AllowPngAttr = &_cffaa
			continue
		}
		if _eaefcg.Name.Local == "\u0074\u0061r\u0067\u0065\u0074S\u0063\u0072\u0065\u0065\u006e\u0053\u0069\u007a\u0065" {
			_ggcgfb.TargetScreenSizeAttr.UnmarshalXMLAttr(_eaefcg)
			continue
		}
		if _eaefcg.Name.Local == "\u0064\u0070\u0069" {
			_acdbc, _cdeca := _f.ParseUint(_eaefcg.Value, 10, 32)
			if _cdeca != nil {
				return _cdeca
			}
			_egaga := uint32(_acdbc)
			_ggcgfb.DpiAttr = &_egaga
			continue
		}
		if _eaefcg.Name.Local == "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065" {
			_gbebf, _efgac := _f.ParseUint(_eaefcg.Value, 10, 32)
			if _efgac != nil {
				return _efgac
			}
			_ecbaa := uint32(_gbebf)
			_ggcgfb.CodePageAttr = &_ecbaa
			continue
		}
		if _eaefcg.Name.Local == "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074" {
			_fbfec, _gageg := _eaefcg.Value, error(nil)
			if _gageg != nil {
				return _gageg
			}
			_ggcgfb.CharacterSetAttr = &_fbfec
			continue
		}
	}
	for {
		_ecfdc, _gfgddb := d.Token()
		if _gfgddb != nil {
			return _fc.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050u\u0062l\u0069\u0073\u0068\u0069\u006e\u0067\u003a \u0025\u0073", _gfgddb)
		}
		if _fdaaf, _egfdb := _ecfdc.(_a.EndElement); _egfdb && _fdaaf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_egbef *CT_UndoInfo) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_egbef.ExpAttr = ST_FormulaExpression(1)
	for _, _eabdg := range start.Attr {
		if _eabdg.Name.Local == "\u0069\u006e\u0064e\u0078" {
			_ecged, _ggacf := _f.ParseUint(_eabdg.Value, 10, 32)
			if _ggacf != nil {
				return _ggacf
			}
			_egbef.IndexAttr = uint32(_ecged)
			continue
		}
		if _eabdg.Name.Local == "\u0065\u0078\u0070" {
			_egbef.ExpAttr.UnmarshalXMLAttr(_eabdg)
			continue
		}
		if _eabdg.Name.Local == "\u0072\u0065\u00663\u0044" {
			_edcad, _cafdg := _f.ParseBool(_eabdg.Value)
			if _cafdg != nil {
				return _cafdg
			}
			_egbef.Ref3DAttr = &_edcad
			continue
		}
		if _eabdg.Name.Local == "\u0061\u0072\u0072a\u0079" {
			_begea, _afecfc := _f.ParseBool(_eabdg.Value)
			if _afecfc != nil {
				return _afecfc
			}
			_egbef.ArrayAttr = &_begea
			continue
		}
		if _eabdg.Name.Local == "\u0076" {
			_bcagb, _cdabe := _f.ParseBool(_eabdg.Value)
			if _cdabe != nil {
				return _cdabe
			}
			_egbef.VAttr = &_bcagb
			continue
		}
		if _eabdg.Name.Local == "\u006e\u0066" {
			_egffa, _cdacbg := _f.ParseBool(_eabdg.Value)
			if _cdacbg != nil {
				return _cdacbg
			}
			_egbef.NfAttr = &_egffa
			continue
		}
		if _eabdg.Name.Local == "\u0063\u0073" {
			_agafee, _gbcadb := _f.ParseBool(_eabdg.Value)
			if _gbcadb != nil {
				return _gbcadb
			}
			_egbef.CsAttr = &_agafee
			continue
		}
		if _eabdg.Name.Local == "\u0064\u0072" {
			_bgaacg, _ggdbdf := _eabdg.Value, error(nil)
			if _ggdbdf != nil {
				return _ggdbdf
			}
			_egbef.DrAttr = _bgaacg
			continue
		}
		if _eabdg.Name.Local == "\u0064\u006e" {
			_dfgce, _cbfea := _eabdg.Value, error(nil)
			if _cbfea != nil {
				return _cbfea
			}
			_egbef.DnAttr = &_dfgce
			continue
		}
		if _eabdg.Name.Local == "\u0072" {
			_egaca, _fbdgad := _eabdg.Value, error(nil)
			if _fbdgad != nil {
				return _fbdgad
			}
			_egbef.RAttr = &_egaca
			continue
		}
		if _eabdg.Name.Local == "\u0073\u0049\u0064" {
			_fcada, _fbefg := _f.ParseUint(_eabdg.Value, 10, 32)
			if _fbefg != nil {
				return _fbefg
			}
			_geede := uint32(_fcada)
			_egbef.SIdAttr = &_geede
			continue
		}
	}
	for {
		_accbff, _adadc := d.Token()
		if _adadc != nil {
			return _fc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0073", _adadc)
		}
		if _bebfbd, _gffeb := _accbff.(_a.EndElement); _gffeb && _bebfbd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CalculatedItem and its children, prefixing error messages with path
func (_ageb *CT_CalculatedItem) ValidateWithPath(path string) error {
	if _fcfg := _ageb.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _fcfg != nil {
		return _fcfg
	}
	if _ageb.ExtLst != nil {
		if _bfef := _ageb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfef != nil {
			return _bfef
		}
	}
	return nil
}
func (_ebec *CT_Break) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ebec.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fc.Sprintf("\u0025\u0076", *_ebec.IdAttr)})
	}
	if _ebec.MinAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e"}, Value: _fc.Sprintf("\u0025\u0076", *_ebec.MinAttr)})
	}
	if _ebec.MaxAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078"}, Value: _fc.Sprintf("\u0025\u0076", *_ebec.MaxAttr)})
	}
	if _ebec.ManAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u006e"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebec.ManAttr))})
	}
	if _ebec.PtAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0074"}, Value: _fc.Sprintf("\u0025\u0064", _ccegbgd(*_ebec.PtAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_CustomProperties struct {

	// Custom Property
	CustomPr []*CT_CustomProperty
}
type CT_Pane struct {

	// Horizontal Split Position
	XSplitAttr *float64

	// Vertical Split Position
	YSplitAttr *float64

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Active Pane
	ActivePaneAttr ST_Pane

	// Split State
	StateAttr ST_PaneState
}

func NewCT_CommentPr() *CT_CommentPr {
	_abag := &CT_CommentPr{}
	_abag.Anchor = NewCT_ObjectAnchor()
	return _abag
}
func (_fbdbc *ST_UnderlineValues) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fbdbc = 0
	case "\u0073\u0069\u006e\u0067\u006c\u0065":
		*_fbdbc = 1
	case "\u0064\u006f\u0075\u0062\u006c\u0065":
		*_fbdbc = 2
	case "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
		*_fbdbc = 3
	case "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
		*_fbdbc = 4
	case "\u006e\u006f\u006e\u0065":
		*_fbdbc = 5
	}
	return nil
}
func (_fadde ST_SourceType) Validate() error { return _fadde.ValidateWithPath("") }

// ValidateWithPath validates the CT_ConditionalFormat and its children, prefixing error messages with path
func (_bfaa *CT_ConditionalFormat) ValidateWithPath(path string) error {
	if _cgbcf := _bfaa.ScopeAttr.ValidateWithPath(path + "\u002f\u0053\u0063\u006f\u0070\u0065\u0041\u0074\u0074\u0072"); _cgbcf != nil {
		return _cgbcf
	}
	if _cbbae := _bfaa.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cbbae != nil {
		return _cbbae
	}
	if _cagc := _bfaa.PivotAreas.ValidateWithPath(path + "/\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"); _cagc != nil {
		return _cagc
	}
	if _bfaa.ExtLst != nil {
		if _fcgfc := _bfaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fcgfc != nil {
			return _fcgfc
		}
	}
	return nil
}
func (_egfcfd *CT_MdxMetadata) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _egfcfd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fc.Sprintf("\u0025\u0076", *_egfcfd.CountAttr)})
	}
	e.EncodeToken(start)
	_bccea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u003a\u006d\u0064\u0078"}}
	for _, _fgbcg := range _egfcfd.Mdx {
		e.EncodeElement(_fgbcg, _bccea)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_PageItem() *CT_PageItem { _cegeg := &CT_PageItem{}; return _cegeg }

// Validate validates the CT_VolTopic and its children
func (_cfcgf *CT_VolTopic) Validate() error {
	return _cfcgf.ValidateWithPath("C\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063")
}
func (_bggbde ST_MdxKPIProperty) ValidateWithPath(path string) error {
	switch _bggbde {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _fc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bggbde))
	}
	return nil
}

type CT_Sheets struct {

	// Sheet Information
	Sheet []*CT_Sheet
}

func (_faggb *CT_Top10) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gaacb := range start.Attr {
		if _gaacb.Name.Local == "\u0074\u006f\u0070" {
			_eadda, _fgcgaa := _f.ParseBool(_gaacb.Value)
			if _fgcgaa != nil {
				return _fgcgaa
			}
			_faggb.TopAttr = &_eadda
			continue
		}
		if _gaacb.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_daeaa, _bbga := _f.ParseBool(_gaacb.Value)
			if _bbga != nil {
				return _bbga
			}
			_faggb.PercentAttr = &_daeaa
			continue
		}
		if _gaacb.Name.Local == "\u0076\u0061\u006c" {
			_dcdab, _fadcgb := _f.ParseFloat(_gaacb.Value, 64)
			if _fadcgb != nil {
				return _fadcgb
			}
			_faggb.ValAttr = _dcdab
			continue
		}
		if _gaacb.Name.Local == "\u0066i\u006c\u0074\u0065\u0072\u0056\u0061l" {
			_adcgf, _eaede := _f.ParseFloat(_gaacb.Value, 64)
			if _eaede != nil {
				return _eaede
			}
			_faggb.FilterValAttr = &_adcgf
			continue
		}
	}
	for {
		_caadfb, _fgedb := d.Token()
		if _fgedb != nil {
			return _fc.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u006f\u0070\u0031\u0030: \u0025\u0073", _fgedb)
		}
		if _bfdbd, _dbddg := _caadfb.(_a.EndElement); _dbddg && _bfdbd.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Sheet() *CT_Sheet { _afdabc := &CT_Sheet{}; return _afdabc }
func (_fcfdg *CT_Workbook) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fcfdg.Sheets = NewCT_Sheets()
	for _, _aabab := range start.Attr {
		if _aabab.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_fcfdg.ConformanceAttr.UnmarshalXMLAttr(_aabab)
			continue
		}
	}
_ceegff:
	for {
		_feacec, _cfbggc := d.Token()
		if _cfbggc != nil {
			return _cfbggc
		}
		switch _efbaf := _feacec.(type) {
		case _a.StartElement:
			switch _efbaf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}:
				_fcfdg.FileVersion = NewCT_FileVersion()
				if _aaaef := d.DecodeElement(_fcfdg.FileVersion, &_efbaf); _aaaef != nil {
					return _aaaef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}:
				_fcfdg.FileSharing = NewCT_FileSharing()
				if _dgbfd := d.DecodeElement(_fcfdg.FileSharing, &_efbaf); _dgbfd != nil {
					return _dgbfd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}:
				_fcfdg.WorkbookPr = NewCT_WorkbookPr()
				if _eefca := d.DecodeElement(_fcfdg.WorkbookPr, &_efbaf); _eefca != nil {
					return _eefca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}:
				_fcfdg.WorkbookProtection = NewCT_WorkbookProtection()
				if _gcecc := d.DecodeElement(_fcfdg.WorkbookProtection, &_efbaf); _gcecc != nil {
					return _gcecc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}:
				_fcfdg.BookViews = NewCT_BookViews()
				if _ebfdbc := d.DecodeElement(_fcfdg.BookViews, &_efbaf); _ebfdbc != nil {
					return _ebfdbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}:
				if _dbabc := d.DecodeElement(_fcfdg.Sheets, &_efbaf); _dbabc != nil {
					return _dbabc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}:
				_fcfdg.FunctionGroups = NewCT_FunctionGroups()
				if _bgffe := d.DecodeElement(_fcfdg.FunctionGroups, &_efbaf); _bgffe != nil {
					return _bgffe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}:
				_fcfdg.ExternalReferences = NewCT_ExternalReferences()
				if _dgefg := d.DecodeElement(_fcfdg.ExternalReferences, &_efbaf); _dgefg != nil {
					return _dgefg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_fcfdg.DefinedNames = NewCT_DefinedNames()
				if _bedbb := d.DecodeElement(_fcfdg.DefinedNames, &_efbaf); _bedbb != nil {
					return _bedbb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}:
				_fcfdg.CalcPr = NewCT_CalcPr()
				if _eafea := d.DecodeElement(_fcfdg.CalcPr, &_efbaf); _eafea != nil {
					return _eafea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}:
				_fcfdg.OleSize = NewCT_OleSize()
				if _fbaff := d.DecodeElement(_fcfdg.OleSize, &_efbaf); _fbaff != nil {
					return _fbaff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}:
				_fcfdg.CustomWorkbookViews = NewCT_CustomWorkbookViews()
				if _abedf := d.DecodeElement(_fcfdg.CustomWorkbookViews, &_efbaf); _abedf != nil {
					return _abedf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}:
				_fcfdg.PivotCaches = NewCT_PivotCaches()
				if _fgdcc := d.DecodeElement(_fcfdg.PivotCaches, &_efbaf); _fgdcc != nil {
					return _fgdcc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}:
				_fcfdg.SmartTagPr = NewCT_SmartTagPr()
				if _fdfgf := d.DecodeElement(_fcfdg.SmartTagPr, &_efbaf); _fdfgf != nil {
					return _fdfgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}:
				_fcfdg.SmartTagTypes = NewCT_SmartTagTypes()
				if _cffaf := d.DecodeElement(_fcfdg.SmartTagTypes, &_efbaf); _cffaf != nil {
					return _cffaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}:
				_fcfdg.WebPublishing = NewCT_WebPublishing()
				if _cdead := d.DecodeElement(_fcfdg.WebPublishing, &_efbaf); _cdead != nil {
					return _cdead
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}:
				_ebadag := NewCT_FileRecoveryPr()
				if _agdfd := d.DecodeElement(_ebadag, &_efbaf); _agdfd != nil {
					return _agdfd
				}
				_fcfdg.FileRecoveryPr = append(_fcfdg.FileRecoveryPr, _ebadag)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}:
				_fcfdg.WebPublishObjects = NewCT_WebPublishObjects()
				if _afcbb := d.DecodeElement(_fcfdg.WebPublishObjects, &_efbaf); _afcbb != nil {
					return _afcbb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcfdg.ExtLst = NewCT_ExtensionList()
				if _fdgadb := d.DecodeElement(_fcfdg.ExtLst, &_efbaf); _fdgadb != nil {
					return _fdgadb
				}
			default:
				_ee.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0020\u0025\u0076", _efbaf.Name)
				if _eagce := d.Skip(); _eagce != nil {
					return _eagce
				}
			}
		case _a.EndElement:
			break _ceegff
		case _a.CharData:
		}
	}
	return nil
}
func (_cdefeb ST_Objects) String() string {
	switch _cdefeb {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u006c"
	case 2:
		return "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_adbeb *CT_Fonts) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dacg := range start.Attr {
		if _dacg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fcfec, _eddde := _f.ParseUint(_dacg.Value, 10, 32)
			if _eddde != nil {
				return _eddde
			}
			_gfbgc := uint32(_fcfec)
			_adbeb.CountAttr = &_gfbgc
			continue
		}
	}
_cdebe:
	for {
		_gdgd, _ddgdag := d.Token()
		if _ddgdag != nil {
			return _ddgdag
		}
		switch _ebaee := _gdgd.(type) {
		case _a.StartElement:
			switch _ebaee.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_fdggb := NewCT_Font()
				if _fafa := d.DecodeElement(_fdggb, &_ebaee); _fafa != nil {
					return _fafa
				}
				_adbeb.Font = append(_adbeb.Font, _fdggb)
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073\u0020\u0025\u0076", _ebaee.Name)
				if _baag := d.Skip(); _baag != nil {
					return _baag
				}
			}
		case _a.EndElement:
			break _cdebe
		case _a.CharData:
		}
	}
	return nil
}
func (_adcdgb *CT_Sheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dddcc := range start.Attr {
		if _dddcc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dddcc.Name.Local == "\u0069\u0064" || _dddcc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dddcc.Name.Local == "\u0069\u0064" {
			_bbddcd, _ccaac := _dddcc.Value, error(nil)
			if _ccaac != nil {
				return _ccaac
			}
			_adcdgb.IdAttr = _bbddcd
			continue
		}
		if _dddcc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dbfef, _agfcb := _dddcc.Value, error(nil)
			if _agfcb != nil {
				return _agfcb
			}
			_adcdgb.NameAttr = _dbfef
			continue
		}
		if _dddcc.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_ecbaf, _adceec := _f.ParseUint(_dddcc.Value, 10, 32)
			if _adceec != nil {
				return _adceec
			}
			_adcdgb.SheetIdAttr = uint32(_ecbaf)
			continue
		}
		if _dddcc.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_adcdgb.StateAttr.UnmarshalXMLAttr(_dddcc)
			continue
		}
	}
	for {
		_ddbdab, _bdaga := d.Token()
		if _bdaga != nil {
			return _fc.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074: \u0025\u0073", _bdaga)
		}
		if _fbdgfd, _bafbf := _ddbdab.(_a.EndElement); _bafbf && _fbdgfd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ExternalRow and its children
func (_fbdbd *CT_ExternalRow) Validate() error {
	return _fbdbd.ValidateWithPath("\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006ea\u006c\u0052\u006f\u0077")
}
func NewCT_MeasureGroups() *CT_MeasureGroups { _cdbee := &CT_MeasureGroups{}; return _cdbee }
func NewCT_ExternalCell() *CT_ExternalCell   { _fbcaaf := &CT_ExternalCell{}; return _fbcaaf }
func NewCT_Items() *CT_Items                 { _aebge := &CT_Items{}; return _aebge }

type CT_PivotFilter struct {

	// Field Index
	FldAttr uint32

	// Member Property Field Id
	MpFldAttr *uint32

	// Pivot Filter Type
	TypeAttr ST_PivotFilterType

	// Evaluation Order
	EvalOrderAttr *int32

	// Pivot Filter Id
	IdAttr uint32

	// Measure Index
	IMeasureHierAttr *uint32

	// Measure Field Index
	IMeasureFldAttr *uint32

	// Pivot Filter Name
	NameAttr *string

	// Pivot Filter Description
	DescriptionAttr *string

	// Label Pivot
	StringValue1Attr *string

	// Label Pivot Filter String Value 2
	StringValue2Attr *string

	// Auto Filter
	AutoFilter *CT_AutoFilter
	ExtLst     *CT_ExtensionList
}
type CT_CustomFilters struct {

	// And
	AndAttr *bool

	// Custom Filter Criteria
	CustomFilter []*CT_CustomFilter
}
type CT_ProtectedRanges struct {

	// Protected Range
	ProtectedRange []*CT_ProtectedRange
}

func (_dfabb *CT_DynamicFilter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_ccfab, _dbcfc := _dfabb.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _dbcfc != nil {
		return _dbcfc
	}
	start.Attr = append(start.Attr, _ccfab)
	if _dfabb.ValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_dfabb.ValAttr)})
	}
	if _dfabb.ValIsoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c\u0049\u0073\u006f"}, Value: _fc.Sprintf("\u0025\u0076", *_dfabb.ValIsoAttr)})
	}
	if _dfabb.MaxValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078\u0056\u0061\u006c"}, Value: _fc.Sprintf("\u0025\u0076", *_dfabb.MaxValAttr)})
	}
	if _dfabb.MaxValIsoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006da\u0078\u0056\u0061\u006c\u0049\u0073o"}, Value: _fc.Sprintf("\u0025\u0076", *_dfabb.MaxValIsoAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Colors and its children
func (_aceg *CT_Colors) Validate() error {
	return _aceg.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u006f\u0072s")
}

// ValidateWithPath validates the CT_Control and its children, prefixing error messages with path
func (_ecea *CT_Control) ValidateWithPath(path string) error {
	if _ecea.ControlPr != nil {
		if _gfcgf := _ecea.ControlPr.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072"); _gfcgf != nil {
			return _gfcgf
		}
	}
	return nil
}
func NewCT_AutoFilter() *CT_AutoFilter { _bc := &CT_AutoFilter{}; return _bc }

// Validate validates the CT_CacheField and its children
func (_gge *CT_CacheField) Validate() error {
	return _gge.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064")
}

// Validate validates the CT_PrintOptions and its children
func (_feed *CT_PrintOptions) Validate() error {
	return _feed.ValidateWithPath("\u0043T\u005fP\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073")
}
func NewCT_DataRef() *CT_DataRef { _aaaf := &CT_DataRef{}; return _aaaf }
func (_egbded *CT_PivotCacheDefinition) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_egbded.CacheSource = NewCT_CacheSource()
	_egbded.CacheFields = NewCT_CacheFields()
	for _, _bage := range start.Attr {
		if _bage.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bage.Name.Local == "\u0069\u0064" || _bage.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bage.Name.Local == "\u0069\u0064" {
			_gcagb, _egaee := _bage.Value, error(nil)
			if _egaee != nil {
				return _egaee
			}
			_egbded.IdAttr = &_gcagb
			continue
		}
		if _bage.Name.Local == "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_gdgdg, _ecdff := _f.ParseBool(_bage.Value)
			if _ecdff != nil {
				return _ecdff
			}
			_egbded.UpgradeOnRefreshAttr = &_gdgdg
			continue
		}
		if _bage.Name.Local == "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065" {
			_aeabc, _aefbd := _f.ParseBool(_bage.Value)
			if _aefbd != nil {
				return _aefbd
			}
			_egbded.TupleCacheAttr = &_aeabc
			continue
		}
		if _bage.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_cacda, _geaea := _f.ParseBool(_bage.Value)
			if _geaea != nil {
				return _geaea
			}
			_egbded.SaveDataAttr = &_cacda
			continue
		}
		if _bage.Name.Local == "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079" {
			_afdge, _dabbd := _f.ParseBool(_bage.Value)
			if _dabbd != nil {
				return _dabbd
			}
			_egbded.SupportSubqueryAttr = &_afdge
			continue
		}
		if _bage.Name.Local == "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079" {
			_eaegb, _cadgg := _f.ParseBool(_bage.Value)
			if _cadgg != nil {
				return _cadgg
			}
			_egbded.OptimizeMemoryAttr = &_eaegb
			continue
		}
		if _bage.Name.Local == "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c" {
			_cfeade, _bagda := _f.ParseBool(_bage.Value)
			if _bagda != nil {
				return _bagda
			}
			_egbded.SupportAdvancedDrillAttr = &_cfeade
			continue
		}
		if _bage.Name.Local == "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079" {
			_abgfgf, _dcegf := _bage.Value, error(nil)
			if _dcegf != nil {
				return _dcegf
			}
			_egbded.RefreshedByAttr = &_abgfgf
			continue
		}
		if _bage.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f" {
			_eeedd, _bgfc := ParseStdlibTime(_bage.Value)
			if _bgfc != nil {
				return _bgfc
			}
			_egbded.RefreshedDateIsoAttr = &_eeedd
			continue
		}
		if _bage.Name.Local == "\u0069n\u0076\u0061\u006c\u0069\u0064" {
			_decaeb, _ceabd := _f.ParseBool(_bage.Value)
			if _ceabd != nil {
				return _ceabd
			}
			_egbded.InvalidAttr = &_decaeb
			continue
		}
		if _bage.Name.Local == "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079" {
			_fdebg, _fcbeb := _f.ParseBool(_bage.Value)
			if _fcbeb != nil {
				return _fcbeb
			}
			_egbded.BackgroundQueryAttr = &_fdebg
			continue
		}
		if _bage.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074" {
			_acgb, _bacfe := _f.ParseUint(_bage.Value, 10, 32)
			if _bacfe != nil {
				return _bacfe
			}
			_edefa := uint32(_acgb)
			_egbded.MissingItemsLimitAttr = &_edefa
			continue
		}
		if _bage.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_deggd, _fdce := _f.ParseUint(_bage.Value, 10, 8)
			if _fdce != nil {
				return _fdce
			}
			_dfage := uint8(_deggd)
			_egbded.RefreshedVersionAttr = &_dfage
			continue
		}
		if _bage.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_dcfcd, _faeag := _f.ParseBool(_bage.Value)
			if _faeag != nil {
				return _faeag
			}
			_egbded.RefreshOnLoadAttr = &_dcfcd
			continue
		}
		if _bage.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065" {
			_dgede, _fbbd := _f.ParseFloat(_bage.Value, 64)
			if _fbbd != nil {
				return _fbbd
			}
			_egbded.RefreshedDateAttr = &_dgede
			continue
		}
		if _bage.Name.Local == "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074" {
			_gfdfcac, _bbfff := _f.ParseUint(_bage.Value, 10, 32)
			if _bbfff != nil {
				return _bbfff
			}
			_fggaa := uint32(_gfdfcac)
			_egbded.RecordCountAttr = &_fggaa
			continue
		}
		if _bage.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_ccgbe, _cfdcfg := _f.ParseUint(_bage.Value, 10, 8)
			if _cfdcfg != nil {
				return _cfdcfg
			}
			_cdagd := uint8(_ccgbe)
			_egbded.CreatedVersionAttr = &_cdagd
			continue
		}
		if _bage.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_cdefec, _fbeff := _f.ParseUint(_bage.Value, 10, 8)
			if _fbeff != nil {
				return _fbeff
			}
			_cgffe := uint8(_cdefec)
			_egbded.MinRefreshableVersionAttr = &_cgffe
			continue
		}
		if _bage.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_dddae, _ebfg := _f.ParseBool(_bage.Value)
			if _ebfg != nil {
				return _ebfg
			}
			_egbded.EnableRefreshAttr = &_dddae
			continue
		}
	}
_dbdb:
	for {
		_fbaba, _bfgfd := d.Token()
		if _bfgfd != nil {
			return _bfgfd
		}
		switch _eedadc := _fbaba.(type) {
		case _a.StartElement:
			switch _eedadc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}:
				if _gdade := d.DecodeElement(_egbded.CacheSource, &_eedadc); _gdade != nil {
					return _gdade
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _bcaaeb := d.DecodeElement(_egbded.CacheFields, &_eedadc); _bcaaeb != nil {
					return _bcaaeb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_egbded.CacheHierarchies = NewCT_CacheHierarchies()
				if _bddec := d.DecodeElement(_egbded.CacheHierarchies, &_eedadc); _bddec != nil {
					return _bddec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}:
				_egbded.Kpis = NewCT_PCDKPIs()
				if _dgbcg := d.DecodeElement(_egbded.Kpis, &_eedadc); _dgbcg != nil {
					return _dgbcg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}:
				_egbded.TupleCache = NewCT_TupleCache()
				if _dedfd := d.DecodeElement(_egbded.TupleCache, &_eedadc); _dedfd != nil {
					return _dedfd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_egbded.CalculatedItems = NewCT_CalculatedItems()
				if _gfbfd := d.DecodeElement(_egbded.CalculatedItems, &_eedadc); _gfbfd != nil {
					return _gfbfd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}:
				_egbded.CalculatedMembers = NewCT_CalculatedMembers()
				if _ecccg := d.DecodeElement(_egbded.CalculatedMembers, &_eedadc); _ecccg != nil {
					return _ecccg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}:
				_egbded.Dimensions = NewCT_Dimensions()
				if _cfgea := d.DecodeElement(_egbded.Dimensions, &_eedadc); _cfgea != nil {
					return _cfgea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}:
				_egbded.MeasureGroups = NewCT_MeasureGroups()
				if _aeacd := d.DecodeElement(_egbded.MeasureGroups, &_eedadc); _aeacd != nil {
					return _aeacd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}:
				_egbded.Maps = NewCT_MeasureDimensionMaps()
				if _abdbfb := d.DecodeElement(_egbded.Maps, &_eedadc); _abdbfb != nil {
					return _abdbfb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egbded.ExtLst = NewCT_ExtensionList()
				if _eaaaf := d.DecodeElement(_egbded.ExtLst, &_eedadc); _eaaaf != nil {
					return _eaaaf
				}
			default:
				_ee.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u0044\u0065\u0066\u0069\u006e\u0069t\u0069\u006f\u006e \u0025\u0076", _eedadc.Name)
				if _aaaaa := d.Skip(); _aaaaa != nil {
					return _aaaaa
				}
			}
		case _a.EndElement:
			break _dbdb
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_CustomWorkbookViews() *CT_CustomWorkbookViews {
	_babf := &CT_CustomWorkbookViews{}
	return _babf
}
func NewCT_Number() *CT_Number { _ggecg := &CT_Number{}; return _ggecg }
func (_eacdgc *ST_DdeValueType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aafeg, _bdadd := d.Token()
	if _bdadd != nil {
		return _bdadd
	}
	if _egfff, _cdcee := _aafeg.(_a.EndElement); _cdcee && _egfff.Name == start.Name {
		*_eacdgc = 1
		return nil
	}
	if _gadcf, _edcab := _aafeg.(_a.CharData); !_edcab {
		return _fc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aafeg)
	} else {
		switch string(_gadcf) {
		case "":
			*_eacdgc = 0
		case "\u006e\u0069\u006c":
			*_eacdgc = 1
		case "\u0062":
			*_eacdgc = 2
		case "\u006e":
			*_eacdgc = 3
		case "\u0065":
			*_eacdgc = 4
		case "\u0073\u0074\u0072":
			*_eacdgc = 5
		}
	}
	_aafeg, _bdadd = d.Token()
	if _bdadd != nil {
		return _bdadd
	}
	if _affba, _fcfag := _aafeg.(_a.EndElement); _fcfag && _affba.Name == start.Name {
		return nil
	}
	return _fc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aafeg)
}

// ValidateWithPath validates the CT_PivotFields and its children, prefixing error messages with path
func (_eeebg *CT_PivotFields) ValidateWithPath(path string) error {
	for _dfced, _cccgfd := range _eeebg.PivotField {
		if _bebdcg := _cccgfd.ValidateWithPath(_fc.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006cd\u005b\u0025\u0064\u005d", path, _dfced)); _bebdcg != nil {
			return _bebdcg
		}
	}
	return nil
}
func NewDialogsheet() *Dialogsheet {
	_ggfdgc := &Dialogsheet{}
	_ggfdgc.CT_Dialogsheet = *NewCT_Dialogsheet()
	return _ggfdgc
}
func (_dcbcc *CT_DeletedField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fc.Sprintf("\u0025\u0076", _dcbcc.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func init() {
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_AutoFilter)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fF\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e", NewCT_FilterColumn)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_Filters)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u0069\u006c\u0074\u0065r", NewCT_Filter)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_CustomFilters)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_CustomFilter)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u006f\u0070\u0031\u0030", NewCT_Top10)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072", NewCT_ColorFilter)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_IconFilter)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_DynamicFilter)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065", NewCT_SortState)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e", NewCT_SortCondition)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d", NewCT_DateGroupItem)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006ce\u006d\u0065\u006e\u0074", NewCT_XStringElement)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_Extension)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fO\u0062\u006a\u0065\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_ObjectAnchor)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewCT_ExtensionList)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e", NewCT_CalcChain)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c", NewCT_CalcCell)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073", NewCT_Comments)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0074\u0068\u006f\u0072\u0073", NewCT_Authors)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074", NewCT_CommentList)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074", NewCT_Comment)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072", NewCT_CommentPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0070\u0049\u006e\u0066\u006f", NewCT_MapInfo)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0063\u0068\u0065\u006da", NewCT_Schema)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0070", NewCT_Map)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067", NewCT_DataBinding)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073", NewCT_Connections)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Connection)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0062\u0050\u0072", NewCT_DbPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004f\u006c\u0061\u0070\u0050r", NewCT_OlapPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072", NewCT_WebPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073", NewCT_Parameters)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072", NewCT_Parameter)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0061\u0062\u006c\u0065s", NewCT_Tables)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u004d\u0069\u0073\u0073\u0069\u006e\u0067", NewCT_TableMissing)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0065\u0078\u0074\u0050r", NewCT_TextPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_TextFields)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_TextField)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fPi\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e", NewCT_PivotCacheDefinition)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073", NewCT_CacheFields)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064", NewCT_CacheField)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065", NewCT_CacheSource)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fW\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065", NewCT_WorksheetSource)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e", NewCT_Consolidation)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073", NewCT_Pages)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0043\u0044\u0053\u0043\u0050\u0061\u0067\u0065", NewCT_PCDSCPage)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d", NewCT_PageItem)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073", NewCT_RangeSets)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074", NewCT_RangeSet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073", NewCT_SharedItems)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0069\u0073\u0073\u0069\u006e\u0067", NewCT_Missing)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u0075\u006d\u0062\u0065r", NewCT_Number)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e", NewCT_Boolean)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072", NewCT_Error)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg", NewCT_String)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065", NewCT_DateTime)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070", NewCT_FieldGroup)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072", NewCT_RangePr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072", NewCT_DiscretePr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073", NewCT_GroupItems)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073", NewCT_PivotCacheRecords)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0065\u0063\u006f\u0072d", NewCT_Record)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0043\u0044\u004b\u0050\u0049\u0073", NewCT_PCDKPIs)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0043\u0044\u004b\u0050I", NewCT_PCDKPI)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073", NewCT_CacheHierarchies)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079", NewCT_CacheHierarchy)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065", NewCT_FieldsUsage)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065", NewCT_FieldUsage)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073", NewCT_GroupLevels)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c", NewCT_GroupLevel)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0072\u006f\u0075\u0070s", NewCT_Groups)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0065\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070", NewCT_LevelGroup)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073", NewCT_GroupMembers)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072", NewCT_GroupMember)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065", NewCT_TupleCache)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074", NewCT_ServerFormat)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ServerFormats)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073", NewCT_PCDSDTCEntries)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0075\u0070\u006c\u0065s", NewCT_Tuples)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065", NewCT_Tuple)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0065\u0074\u0073", NewCT_Sets)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0065\u0074", NewCT_Set)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065", NewCT_QueryCache)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079", NewCT_Query)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073", NewCT_CalculatedItems)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d", NewCT_CalculatedItem)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073", NewCT_CalculatedMembers)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072", NewCT_CalculatedMember)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fpi\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e", NewCT_pivotTableDefinition)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e", NewCT_Location)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073", NewCT_PivotFields)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_PivotField)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0041\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065", NewCT_AutoSortScope)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073", NewCT_Items)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0049\u0074\u0065\u006d", NewCT_Item)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_PageFields)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064", NewCT_PageField)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_DataFields)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064", NewCT_DataField)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073", NewCT_rowItems)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073", NewCT_colItems)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049", NewCT_I)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058", NewCT_X)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_RowFields)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_ColFields)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064", NewCT_Field)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_Formats)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u006f\u0072\u006d\u0061t", NewCT_Format)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ConditionalFormats)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074", NewCT_ConditionalFormat)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073", NewCT_PivotAreas)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ChartFormats)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074", NewCT_ChartFormat)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073", NewCT_PivotHierarchies)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079", NewCT_PivotHierarchy)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065", NewCT_RowHierarchiesUsage)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065", NewCT_ColHierarchiesUsage)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065", NewCT_HierarchyUsage)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004dem\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_MemberProperties)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_MemberProperty)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0073", NewCT_Members)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0065\u006d\u0062\u0065r", NewCT_Member)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073", NewCT_Dimensions)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e", NewCT_PivotDimension)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073", NewCT_MeasureGroups)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fMe\u0061\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u0073", NewCT_MeasureDimensionMaps)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070", NewCT_MeasureGroup)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004dea\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004da\u0070", NewCT_MeasureDimensionMap)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0069\u0076\u006f\u0074\u0054a\u0062\u006ce\u0053\u0074\u0079\u006c\u0065", NewCT_PivotTableStyle)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0069\u0076\u006f\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_PivotFilters)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u006c\u0074\u0065\u0072", NewCT_PivotFilter)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061", NewCT_PivotArea)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050iv\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073", NewCT_PivotAreaReferences)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0069vo\u0074A\u0072\u0065\u0061\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_PivotAreaReference)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078", NewCT_Index)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065", NewCT_QueryTable)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068", NewCT_QueryTableRefresh)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073", NewCT_QueryTableDeletedFields)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064", NewCT_DeletedField)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_QueryTableFields)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fQ\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064", NewCT_QueryTableField)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0073\u0074", NewCT_Sst)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074i\u0063\u0052\u0075\u006e", NewCT_PhoneticRun)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0045\u006c\u0074", NewCT_RElt)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0050\u0072\u0045\u006ct", NewCT_RPrElt)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0073\u0074", NewCT_Rst)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072", NewCT_PhoneticPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0048e\u0061\u0064\u0065\u0072\u0073", NewCT_RevisionHeaders)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073", NewCT_Revisions)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048e\u0061\u0064\u0065\u0072", NewCT_RevisionHeader)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070", NewCT_SheetIdMap)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064", NewCT_SheetId)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064R\u0065\u0076\u0069\u0073io\u006e\u0073", NewCT_ReviewedRevisions)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064", NewCT_Reviewed)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f", NewCT_UndoInfo)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006flu\u006d\u006e", NewCT_RevisionRowColumn)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065", NewCT_RevisionMove)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0075\u0073t\u006f\u006d\u0056\u0069\u0065\u0077", NewCT_RevisionCustomView)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061m\u0065", NewCT_RevisionSheetRename)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0049\u006e\u0073\u0065\u0072\u0074\u0053\u0068\u0065e\u0074", NewCT_RevisionInsertSheet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0065\u006cl\u0043\u0068\u0061\u006e\u0067\u0065", NewCT_RevisionCellChange)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_RevisionFormatting)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg", NewCT_RevisionAutoFormatting)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0043o\u006d\u006d\u0065\u006e\u0074", NewCT_RevisionComment)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065", NewCT_RevisionDefinedName)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074", NewCT_RevisionConflict)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064", NewCT_RevisionQueryTableField)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073", NewCT_Users)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072", NewCT_SharedUser)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074", NewCT_Macrosheet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074", NewCT_Dialogsheet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fW\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074", NewCT_Worksheet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061", NewCT_SheetData)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072", NewCT_SheetCalcPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072", NewCT_SheetFormatPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u0073", NewCT_Cols)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c", NewCT_Col)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u006f\u0077", NewCT_Row)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0065\u006c\u006c", NewCT_Cell)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0050\u0072", NewCT_SheetPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e", NewCT_SheetDimension)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_SheetViews)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077", NewCT_SheetView)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u006e\u0065", NewCT_Pane)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e", NewCT_PivotSelection)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Selection)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b", NewCT_PageBreak)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b", NewCT_Break)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fO\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072", NewCT_OutlinePr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072", NewCT_PageSetUpPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065", NewCT_DataConsolidate)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073", NewCT_DataRefs)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066", NewCT_DataRef)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073", NewCT_MergeCells)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fM\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c", NewCT_MergeCell)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_SmartTags)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_CellSmartTags)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067", NewCT_CellSmartTag)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072", NewCT_CellSmartTagPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_Drawing)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_LegacyDrawing)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046", NewCT_DrawingHF)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_CustomSheetViews)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077", NewCT_CustomSheetView)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073", NewCT_DataValidations)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e", NewCT_DataValidation)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_ConditionalFormatting)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0066\u0052\u0075\u006ce", NewCT_CfRule)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073", NewCT_Hyperlinks)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b", NewCT_Hyperlink)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0046\u006fr\u006d\u0075\u006c\u0061", NewCT_CellFormula)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065", NewCT_ColorScale)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0061\u0072", NewCT_DataBar)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0053\u0065\u0074", NewCT_IconSet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0066\u0076\u006f", NewCT_Cfvo)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073", NewCT_PageMargins)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073", NewCT_PrintOptions)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070", NewCT_PageSetup)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072", NewCT_HeaderFooter)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073", NewCT_Scenarios)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e", NewCT_SheetProtection)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073", NewCT_ProtectedRanges)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065", NewCT_ProtectedRange)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f", NewCT_Scenario)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073", NewCT_InputCells)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073", NewCT_CellWatches)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068", NewCT_CellWatch)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074", NewCT_Chartsheet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072", NewCT_ChartsheetPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073h\u0065\u0065t\u0056\u0069\u0065\u0077\u0073", NewCT_ChartsheetViews)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065t\u0056\u0069\u0065\u0077", NewCT_ChartsheetView)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCh\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_ChartsheetProtection)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0073\u0050\u0061\u0067\u0065S\u0065\u0074\u0075\u0070", NewCT_CsPageSetup)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072t\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_CustomChartsheetViews)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCu\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077", NewCT_CustomChartsheetView)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_CustomProperties)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_CustomProperty)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073", NewCT_OleObjects)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_OleObject)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072", NewCT_ObjectPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fW\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073", NewCT_WebPublishItems)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d", NewCT_WebPublishItem)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073", NewCT_Controls)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c", NewCT_Control)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072", NewCT_ControlPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0049\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073", NewCT_IgnoredErrors)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fI\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072", NewCT_IgnoredError)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073", NewCT_TableParts)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074", NewCT_TablePart)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061", NewCT_Metadata)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073", NewCT_MetadataTypes)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065", NewCT_MetadataType)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042l\u006f\u0063\u006b\u0073", NewCT_MetadataBlocks)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b", NewCT_MetadataBlock)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052e\u0063\u006f\u0072\u0064", NewCT_MetadataRecord)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061", NewCT_FutureMetadata)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046ut\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006fc\u006b", NewCT_FutureMetadataBlock)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061", NewCT_MdxMetadata)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078", NewCT_Mdx)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065", NewCT_MdxTuple)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0064\u0078\u0053\u0065t", NewCT_MdxSet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065r\u0050\u0072\u006f\u0070", NewCT_MdxMemeberProp)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0064\u0078\u004b\u0050I", NewCT_MdxKPI)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004det\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0049\u006e\u0064e\u0078", NewCT_MetadataStringIndex)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073", NewCT_MetadataStrings)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073", NewCT_SingleXmlCells)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c", NewCT_SingleXmlCell)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fX\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072", NewCT_XmlCellPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072", NewCT_XmlPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074", NewCT_Stylesheet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0065\u006cl\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074", NewCT_CellAlignment)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0073", NewCT_Borders)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r", NewCT_Border)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072", NewCT_BorderPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e", NewCT_CellProtection)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073", NewCT_Fonts)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073", NewCT_Fills)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u0069\u006c\u006c", NewCT_Fill)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c", NewCT_PatternFill)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072", NewCT_Color)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c", NewCT_GradientFill)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070", NewCT_GradientStop)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006d\u0074\u0073", NewCT_NumFmts)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u0075\u006d\u0046\u006dt", NewCT_NumFmt)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073", NewCT_CellStyleXfs)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0058\u0066\u0073", NewCT_CellXfs)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fX\u0066", NewCT_Xf)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_CellStyles)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065", NewCT_CellStyle)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0078\u0066\u0073", NewCT_Dxfs)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0078\u0066", NewCT_Dxf)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u006f\u0072s", NewCT_Colors)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0049\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073", NewCT_IndexedColors)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fM\u0052\u0055\u0043\u006f\u006c\u006f\u0072\u0073", NewCT_MRUColors)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_RgbColor)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073", NewCT_TableStyles)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_TableStyle)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074", NewCT_TableStyleElement)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fB\u006f\u006f\u006c\u0065\u0061n\u0050\u0072o\u0070\u0065\u0072\u0074\u0079", NewCT_BooleanProperty)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065", NewCT_FontSize)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0074\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_IntProperty)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065", NewCT_FontName)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056e\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u006c\u0069\u0067n\u0046o\u006e\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0079", NewCT_VerticalAlignFontProperty)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065", NewCT_FontScheme)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0050\u0072\u006f\u0070er\u0074\u0079", NewCT_UnderlineProperty)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u006f\u006e\u0074", NewCT_Font)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079", NewCT_FontFamily)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b", NewCT_ExternalLink)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b", NewCT_ExternalBook)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u0073", NewCT_ExternalSheetNames)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Na\u006d\u0065", NewCT_ExternalSheetName)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073", NewCT_ExternalDefinedNames)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045xt\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065", NewCT_ExternalDefinedName)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074", NewCT_ExternalSheetDataSet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Da\u0074\u0061", NewCT_ExternalSheetData)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006ea\u006c\u0052\u006f\u0077", NewCT_ExternalRow)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c", NewCT_ExternalCell)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0064\u0065\u004c\u0069\u006e\u006b", NewCT_DdeLink)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073", NewCT_DdeItems)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d", NewCT_DdeItem)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0073", NewCT_DdeValues)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065", NewCT_DdeValue)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004c\u0069\u006e\u006b", NewCT_OleLink)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073", NewCT_OleItems)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d", NewCT_OleItem)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065", NewCT_Table)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f", NewCT_TableStyleInfo)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073", NewCT_TableColumns)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e", NewCT_TableColumn)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061", NewCT_TableFormula)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072", NewCT_XmlColumnPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073", NewCT_VolTypes)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065", NewCT_VolType)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u004d\u0061\u0069\u006e", NewCT_VolMain)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063", NewCT_VolTopic)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070i\u0063\u0052\u0065\u0066", NewCT_VolTopicRef)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b", NewCT_Workbook)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e", NewCT_FileVersion)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fB\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073", NewCT_BookViews)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077", NewCT_BookView)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073", NewCT_CustomWorkbookViews)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077", NewCT_CustomWorkbookView)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0068\u0065\u0065\u0074s", NewCT_Sheets)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074", NewCT_Sheet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072", NewCT_WorkbookPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072", NewCT_SmartTagPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073", NewCT_SmartTagTypes)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065", NewCT_SmartTagType)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072", NewCT_FileRecoveryPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0061\u006c\u0063\u0050r", NewCT_CalcPr)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073", NewCT_DefinedNames)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065", NewCT_DefinedName)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073", NewCT_ExternalReferences)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065", NewCT_ExternalReference)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0068\u0065e\u0074\u0042\u0061\u0063\u006bg\u0072o\u0075n\u0064\u0050\u0069\u0063\u0074\u0075\u0072e", NewCT_SheetBackgroundPicture)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073", NewCT_PivotCaches)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065", NewCT_PivotCache)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067", NewCT_FileSharing)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065", NewCT_OleSize)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_WorkbookProtection)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0057\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067", NewCT_WebPublishing)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073", NewCT_FunctionGroups)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070", NewCT_FunctionGroup)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073", NewCT_WebPublishObjects)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_WebPublishObject)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063a\u006c\u0063\u0043\u0068\u0061\u0069n", NewCalcChain)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073", NewComments)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u004da\u0070\u0049\u006e\u0066\u006f", NewMapInfo)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "c\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073", NewConnections)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "p\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e", NewPivotCacheDefinition)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065c\u006f\u0072\u0064\u0073", NewPivotCacheRecords)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "p\u0069v\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e", NewPivotTableDefinition)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065", NewQueryTable)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0073\u0074", NewSst)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0068e\u0061\u0064\u0065\u0072\u0073", NewHeaders)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0072e\u0076\u0069\u0073\u0069\u006f\u006es", NewRevisions)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0075\u0073\u0065r\u0073", NewUsers)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t", NewWorksheet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074", NewChartsheet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "d\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074", NewDialogsheet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061", NewMetadata)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073", NewSingleXmlCells)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074", NewStyleSheet)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b", NewExternalLink)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0061\u0062l\u0065", NewTable)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0076\u006f\u006c\u0054\u0079\u0070\u0065\u0073", NewVolTypes)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b", NewWorkbook)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewEG_ExtensionList)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061", NewAG_RevData)
	_fca.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074", NewAG_AutoFormat)
}
func (_dcgcb ST_FileType) Validate() error { return _dcgcb.ValidateWithPath("") }
func NewCT_RevisionDefinedName() *CT_RevisionDefinedName {
	_daefed := &CT_RevisionDefinedName{}
	return _daefed
}
